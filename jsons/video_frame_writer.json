[
  {
    "label": "Y4mVideoFrameWriterImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Y4mVideoFrameWriterImpl"
  },
  {
    "label": "YuvVideoFrameWriterImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "YuvVideoFrameWriterImpl"
  },
  {
    "label": "Y4mVideoFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_TESTSUPPORT_VIDEO_FRAME_WRITER_H_ # define TEST_TESTSUPPORT_VIDEO_FRAME_WRITER_H_ # include<memory> # include<string> # include \" api / test / video / video_frame_writer . h \" # include \" api / video / video_frame . h \" # include \" rtc_base / buffer . h \" # include \" test / testsupport / frame_writer . h \" namespace webrtc { namespace test { class Y4mVideoFrameWriterImpl : public VideoFrameWriter { public :)",
    "insertText": "Y4mVideoFrameWriterImpl(std::string output_file_name, int width, int height, int fps)"
  },
  {
    "label": "Y4mVideoFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Y4mVideoFrameWriterImpl()"
  },
  {
    "label": "WriteFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteFrame(const webrtc::VideoFrame& frame)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "YuvVideoFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (private : const int width_ ; const int height_ ; std::unique_ptr<FrameWriter> frame_writer_ ; } ; class YuvVideoFrameWriterImpl : public VideoFrameWriter { public :)",
    "insertText": "YuvVideoFrameWriterImpl(std::string output_file_name, int width, int height)"
  },
  {
    "label": "YuvVideoFrameWriterImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "YuvVideoFrameWriterImpl()"
  }
]