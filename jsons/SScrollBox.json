[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SScrollPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollPanel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "FSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlot"
  },
  {
    "label": "SScrollPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollPanel"
  },
  {
    "label": "SScrollPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollPanel"
  },
  {
    "label": "Me()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Me()"
  },
  {
    "label": "Me()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Me()"
  },
  {
    "label": "Me()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Me()"
  },
  {
    "label": "Me()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Me()"
  },
  {
    "label": "Me()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Me()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FChildren& SlotOwner, FSlotArguments&& InArgs)"
  },
  {
    "label": "RegisterAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAttributes(FSlateWidgetSlotAttributeInitializer& AttributeInitializer)"
  },
  {
    "label": "SScrollBox()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "SScrollBox()"
  },
  {
    "label": "Slot()",
    "kind": "Method",
    "detail": "Function (FSlot::FSlotArguments)",
    "insertText": "Slot()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "AddSlot()",
    "kind": "Method",
    "detail": "Function (FScopedWidgetSlotArguments)",
    "insertText": "AddSlot()"
  },
  {
    "label": "InsertSlot()",
    "kind": "Method",
    "detail": "Function (FScopedWidgetSlotArguments)",
    "insertText": "InsertSlot(int32 Index)"
  },
  {
    "label": "RemoveSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSlot(const TSharedRef<SWidget>& WidgetToRemove)"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "SetAllowOverscroll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowOverscroll( EAllowOverscroll NewAllowOverscroll )"
  },
  {
    "label": "SetAnimateWheelScrolling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimateWheelScrolling(bool bInAnimateWheelScrolling)"
  },
  {
    "label": "SetScrollingAnimationInterpolationSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollingAnimationInterpolationSpeed(float NewScrollingAnimationInterpolationSpeed)"
  },
  {
    "label": "SetWheelScrollMultiplier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWheelScrollMultiplier(float NewWheelScrollMultiplier)"
  },
  {
    "label": "SetIsTouchScrollingEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsTouchScrollingEnabled(const bool bInEnableTouchScrolling)"
  },
  {
    "label": "SetScrollWhenFocusChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollWhenFocusChanges(EScrollWhenFocusChanges NewScrollWhenFocusChanges)"
  },
  {
    "label": "SetScrollOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollOffset( float NewScrollOffset )"
  },
  {
    "label": "ScrollToStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollToStart()"
  },
  {
    "label": "ScrollToEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollToEnd()"
  },
  {
    "label": "EndInertialScrolling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndInertialScrolling()"
  },
  {
    "label": "ScrollDescendantIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollDescendantIntoView(const TSharedPtr<SWidget>& WidgetToFind, bool InAnimateScroll = true, EDescendantScrollDestination InDestination = EDescendantScrollDestination::IntoView, float Padding = 0)"
  },
  {
    "label": "GetOrientation()",
    "kind": "Method",
    "detail": "Function (EOrientation)",
    "insertText": "GetOrientation()"
  },
  {
    "label": "SetNavigationDestination()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavigationDestination(const EDescendantScrollDestination NewNavigationDestination)"
  },
  {
    "label": "SetConsumeMouseWheel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConsumeMouseWheel(EConsumeMouseWheel NewConsumeMouseWheel)"
  },
  {
    "label": "SetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOrientation(EOrientation InOrientation)"
  },
  {
    "label": "SetScrollBarVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarVisibility(EVisibility InVisibility)"
  },
  {
    "label": "SetScrollBarAlwaysVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarAlwaysVisible(bool InAlwaysVisible)"
  },
  {
    "label": "SetScrollBarTrackAlwaysVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarTrackAlwaysVisible(bool InAlwaysVisible)"
  },
  {
    "label": "SetScrollBarThickness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarThickness(UE::Slate::FDeprecateVector2DParameter InThickness)"
  },
  {
    "label": "SetScrollBarPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarPadding(const FMargin& InPadding)"
  },
  {
    "label": "SetScrollBarRightClickDragAllowed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarRightClickDragAllowed(bool bIsAllowed)"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle(const FScrollBoxStyle* InStyle)"
  },
  {
    "label": "SetScrollBarStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollBarStyle(const FScrollBarStyle* InBarStyle)"
  },
  {
    "label": "InvalidateStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateStyle()"
  },
  {
    "label": "InvalidateScrollBarStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateScrollBarStyle()"
  },
  {
    "label": "OnClippingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClippingChanged()"
  },
  {
    "label": "ConstructScrollBar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SScrollBar>)",
    "insertText": "ConstructScrollBar()"
  },
  {
    "label": "ConstructVerticalLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructVerticalLayout()"
  },
  {
    "label": "ConstructHorizontalLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructHorizontalLayout()"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "float(Orientation == Orient_Vertical ? Vector.Y : Vector.X)"
  },
  {
    "label": "ScrollBy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ScrollBy(const FGeometry& AllottedGeometry, float LocalScrollAmount, EAllowOverscroll Overscroll, bool InAnimateScroll)"
  },
  {
    "label": "ScrollBar_OnUserScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollBar_OnUserScrolled( float InScrollOffsetFraction )"
  },
  {
    "label": "ScrollBar_OnScrollBarVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollBar_OnScrollBarVisibilityChanged( EVisibility NewVisibility)"
  },
  {
    "label": "UpdateInertialScroll()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateInertialScroll(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "BeginInertialScrolling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginInertialScrolling()"
  },
  {
    "label": "InternalScrollDescendantIntoView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalScrollDescendantIntoView(const FGeometry& MyGeometry, const TSharedPtr<SWidget>& WidgetToFind, bool InAnimateScroll = true, EDescendantScrollDestination InDestination = EDescendantScrollDestination::IntoView, float Padding = 0)"
  },
  {
    "label": "GetKeyboardFocusableWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetKeyboardFocusableWidget(TSharedPtr<SWidget> InWidget)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TArray<SScrollBox::FSlot::FSlotArguments> InSlots)"
  }
]