[
  {
    "label": "ScopedSetEnv",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedSetEnv"
  },
  {
    "label": "ScopedSetEnv()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_BASE_INTERNAL_SCOPED_SET_ENV_H_ # define ABSL_BASE_INTERNAL_SCOPED_SET_ENV_H_ # include<string> # include \" absl / base / config . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace base_internal { class ScopedSetEnv { public :)",
    "insertText": "ScopedSetEnv(const char* var_name, const char* new_value)"
  },
  {
    "label": "ScopedSetEnv()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ScopedSetEnv()"
  }
]