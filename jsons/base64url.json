[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Base64UrlEncode()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_BASE64URL_H_ # define BASE_BASE64URL_H_ # include<string> # include \" base / base_export . h \" # include \" base / strings / string_piece . h \" namespace base { enum class Base64UrlEncodePolicy { INCLUDE_PADDING,OMIT_PADDING } ; BASE_EXPORT void)",
    "insertText": "Base64UrlEncode(const StringPiece& input, Base64UrlEncodePolicy policy, std::string* output)"
  },
  {
    "label": "Base64UrlDecode()",
    "kind": "Method",
    "detail": "Function (enum class Base64UrlDecodePolicy { REQUIRE_PADDING,IGNORE_PADDING,DISALLOW_PADDING } ; [ [ nodiscard ] ] BASE_EXPORT bool)",
    "insertText": "Base64UrlDecode(const StringPiece& input, Base64UrlDecodePolicy policy, std::string* output)"
  }
]