[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FMallocProfilingProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMallocProfilingProxy"
  },
  {
    "label": "AndroidHeapProfiling",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AndroidHeapProfiling"
  },
  {
    "label": "CreateHeap()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef ANDROID_HEAP_PROFILING_SUPPORTED # define ANDROID_HEAP_PROFILING_SUPPORTED 0 # endif # if ANDROID_HEAP_PROFILING_SUPPORTED # include<type_traits> # include \" HAL / MallocAnsi . h \" uint32_t)",
    "insertText": "CreateHeap(const TCHAR* AllocatorName)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bool(*AHeapProfileReportAllocation)(uint32_t heap_id, uint64_t alloc_id, uint64_t size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(*AHeapProfileReportFree)(uint32_t heap_id, uint64_t alloc_id)"
  },
  {
    "label": "FMallocProfilingProxy()",
    "kind": "Method",
    "detail": "Function (# endif template<class T> struct FMallocProfilingProxy : public T { # if ANDROID_HEAP_PROFILING_SUPPORTED)",
    "insertText": "FMallocProfilingProxy()"
  },
  {
    "label": "CreateHeap()",
    "kind": "Method",
    "detail": "Function (HeapId =)",
    "insertText": "CreateHeap(T::GetDescriptiveName())"
  },
  {
    "label": "Malloc()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "Malloc(SIZE_T Size, uint32 Alignment)"
  },
  {
    "label": "Malloc()",
    "kind": "Method",
    "detail": "Function (void* Ptr =)",
    "insertText": "Malloc(Size, Alignment)"
  },
  {
    "label": "AHeapProfileReportAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AHeapProfileReportAllocation(HeapId, (uint64_t)Ptr, Size)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (} return Ptr ; } void*)",
    "insertText": "Realloc(void* Ptr, SIZE_T NewSize, uint32 Alignment)"
  },
  {
    "label": "AHeapProfileReportFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AHeapProfileReportFree(HeapId, (uint64_t)Ptr)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (} Ptr =)",
    "insertText": "Realloc(Ptr, NewSize, Alignment)"
  },
  {
    "label": "AHeapProfileReportAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AHeapProfileReportAllocation(HeapId, (uint64_t)Ptr, NewSize)"
  },
  {
    "label": "TryRealloc()",
    "kind": "Method",
    "detail": "Function (} return Ptr ; } void*)",
    "insertText": "TryRealloc(void* Ptr, SIZE_T NewSize, uint32 Alignment)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Free(void* Ptr)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(Ptr)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} private : uint32_t HeapId ; # endif } ; struct AndroidHeapProfiling { bool)",
    "insertText": "Init()"
  }
]