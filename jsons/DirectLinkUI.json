[
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FDirectLinkUI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirectLinkUI"
  },
  {
    "label": "FDirectLinkUI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IDirectLinkUI . h \" # include \" Containers / UnrealString . h \" # include \" Math / Vector2D . h \" # include \" HAL / CriticalSection . h \" # include \" Templates / SharedPointer . h \" class SWindow ; class FDirectLinkUI : public IDirectLinkUI { public :)",
    "insertText": "FDirectLinkUI()"
  },
  {
    "label": "SetStreamWindowCenter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStreamWindowCenter(int InCenterX, int InCenterY)"
  },
  {
    "label": "OpenDirectLinkStreamWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenDirectLinkStreamWindow()"
  },
  {
    "label": "GetDirectLinkCacheDirectory()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDirectLinkCacheDirectory()"
  },
  {
    "label": "OnCacheDirectoryChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnCacheDirectoryChanged(const FString& InNewCacheDirectory)"
  },
  {
    "label": "OnCacheDirectoryReset()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "OnCacheDirectoryReset()"
  },
  {
    "label": "SaveCacheDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCacheDirectory(const FString& InCacheDir, bool bInDefaultCacheDir)"
  },
  {
    "label": "WindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WindowClosed(const TSharedRef<SWindow>& WindowArg)"
  }
]