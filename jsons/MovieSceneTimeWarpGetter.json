[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FMovieSceneTimeWarpVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeWarpVariant"
  },
  {
    "label": "FMovieSceneChannelProxyData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelProxyData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FInverseTransformTimeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInverseTransformTimeParams"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UMovieSceneTimeWarpGetter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTimeWarpGetter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UMovieSceneTimeWarpGetter()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "UMovieSceneTimeWarpGetter()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UMovieSceneTimeWarpGetter::ComputeTraversedHull, return TRange<FFrameTime>()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UMovieSceneTimeWarpGetter::InverseRemapTimeCycled, return TOptional<FFrameTime>()"
  },
  {
    "label": "SetIsMuted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsMuted(bool bIsMuted)"
  },
  {
    "label": "PopulateChannelProxy()",
    "kind": "Method",
    "detail": "Function (EMovieSceneChannelProxyType)",
    "insertText": "PopulateChannelProxy(FMovieSceneChannelProxyData& OutProxyData, EAllowTopLevelChannels AllowTopLevel)"
  },
  {
    "label": "DeleteChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteChannel(FMovieSceneTimeWarpVariant& OutVariant, FName ChannelName)"
  }
]