[
  {
    "label": "S",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "S"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_XDR_H # define INCLUDED_IMF_XDR_H # include \" ImfNamespace . h \" # include \" IexMathExc . h \" # include<cstdint> # include<half . h> # include<limits . h> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER namespace Xdr { template<class S,class T> void)",
    "insertText": "write(T& out, bool v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, char v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, signed char v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, unsigned char v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, signed short v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, unsigned short v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, signed int v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, unsigned int v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, int64_t v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, uint64_t v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, float v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, double v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, half v)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, const char v[ ], int n)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "write(T& out, const char v[])"
  },
  {
    "label": "pad()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "pad(T& out, int n)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, bool& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, char& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, signed char& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, unsigned char& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, signed short& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, unsigned short& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, signed int& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, unsigned int& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, int64_t& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, uint64_t& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, float& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, double& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, half& v)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, char v[ ], int n)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "read(T& in, int n, char v[ ])"
  },
  {
    "label": "skip()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "skip(T& in, int n)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (template<class S> int)",
    "insertText": "size()"
  },
  {
    "label": "writeSignedChars()",
    "kind": "Method",
    "detail": "Function (template<class S,class T> void)",
    "insertText": "writeSignedChars(T& out, const signed char c[], int n)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeChars(out, (const char*) c, n)"
  },
  {
    "label": "writeUnsignedChars()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> void)",
    "insertText": "writeUnsignedChars(T& out, const unsigned char c[], int n)"
  },
  {
    "label": "readSignedChars()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> void)",
    "insertText": "readSignedChars(T& in, signed char c[], int n)"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readChars(in, (char*) c, n)"
  },
  {
    "label": "readUnsignedChars()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> void)",
    "insertText": "readUnsignedChars(T& in, unsigned char c[], int n)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (char c = ! ! v ;)",
    "insertText": "writeChars(out, &c, 1)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeChars(out, &v, 1)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (writeSignedChars<)",
    "insertText": "S(out, &v, 1)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (signed char b [ 2 ] ;)",
    "insertText": "b(signed char) (v)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 8)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (writeSignedChars<)",
    "insertText": "S(out, b, 2)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (unsigned char b [ 2 ] ;)",
    "insertText": "b(unsigned char) (v)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 8)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 16)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 24)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (writeSignedChars<)",
    "insertText": "S(out, b, 4)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 16)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 24)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 32)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 40)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 48)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(signed char) (v >> 56)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (writeSignedChars<)",
    "insertText": "S(out, b, 8)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 32)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 40)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 48)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v >> 56)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (union { unsigned int i ; float f ; } u ; u . f = v ; unsigned char b [ 4 ] ;)",
    "insertText": "b(unsigned char) (u.i)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 8)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 16)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 24)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 32)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 40)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 48)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (u.i >> 56)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (unsigned char b [ 2 ] ;)",
    "insertText": "b(unsigned char) (v.bits ())"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "b(unsigned char) (v.bits () >> 8)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> void)",
    "insertText": "write(T& out, const char v[], int n)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeChars(out, v, n)"
  },
  {
    "label": "writeChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeChars(out, v, 1)"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (char c ;)",
    "insertText": "readChars(in, &c, 1)"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readChars(in, &v, 1)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (readSignedChars<)",
    "insertText": "S(in, &v, 1)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (signed char b [ 2 ] ; readSignedChars<)",
    "insertText": "S(in, b, 2)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "v(static_cast<unsigned char> (b[0]) & 0x00ff) | (static_cast<unsigned char> (b[1]) << 8)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "v(b[0] & 0x00ff) | (b[1] << 8)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (signed char b [ 4 ] ; readSignedChars<)",
    "insertText": "S(in, b, 4)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "v(static_cast<unsigned char> (b[0]) & 0x000000ff) | ((static_cast<unsigned char> (b[1]) << 8) & 0x0000ff00) | ((static_cast<unsigned char> (b[2]) << 16) & 0x00ff0000) | (static_cast<unsigned char> (b[3]) << 24)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "v(b[0] & 0x000000ff) | ((b[1] << 8) & 0x0000ff00) | ((b[2] << 16) & 0x00ff0000) | (b[3] << 24)"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (signed char b [ 8 ] ; readSignedChars<)",
    "insertText": "S(in, b, 8)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "v(static_cast<int64_t> (b[0]) & 0x00000000000000ff) | ((static_cast<int64_t> (b[1]) << 8) & 0x000000000000ff00) | ((static_cast<int64_t> (b[2]) << 16) & 0x0000000000ff0000) | ((static_cast<int64_t> (b[3]) << 24) & 0x00000000ff000000) | ((static_cast<int64_t> (b[4]) << 32) & 0x000000ff00000000) | ((static_cast<int64_t> (b[5]) << 40) & 0x0000ff0000000000) | ((static_cast<int64_t> (b[6]) << 48) & 0x00ff000000000000) | (static_cast<int64_t> (b[7]) << 56)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "v((uint64_t) b[0] & 0x00000000000000ffLL) | (((uint64_t) b[1] << 8) & 0x000000000000ff00LL) | (((uint64_t) b[2] << 16) & 0x0000000000ff0000LL) | (((uint64_t) b[3] << 24) & 0x00000000ff000000LL) | (((uint64_t) b[4] << 32) & 0x000000ff00000000LL) | (((uint64_t) b[5] << 40) & 0x0000ff0000000000LL) | (((uint64_t) b[6] << 48) & 0x00ff000000000000LL) | ((uint64_t) b[7] << 56)"
  },
  {
    "label": "i()",
    "kind": "Method",
    "detail": "Function (union { unsigned int i ; float f ; } u ; u .)",
    "insertText": "i(b[0] & 0x000000ff) | ((b[1] << 8) & 0x0000ff00) | ((b[2] << 16) & 0x00ff0000) | (b[3] << 24)"
  },
  {
    "label": "i()",
    "kind": "Method",
    "detail": "Function (union { uint64_t i ; double d ; } u ; u .)",
    "insertText": "i((uint64_t) b[0] & 0x00000000000000ffULL) | (((uint64_t) b[1] << 8) & 0x000000000000ff00ULL) | (((uint64_t) b[2] << 16) & 0x0000000000ff0000ULL) | (((uint64_t) b[3] << 24) & 0x00000000ff000000ULL) | (((uint64_t) b[4] << 32) & 0x000000ff00000000ULL) | (((uint64_t) b[5] << 40) & 0x0000ff0000000000ULL) | (((uint64_t) b[6] << 48) & 0x00ff000000000000ULL) | ((uint64_t) b[7] << 56)"
  },
  {
    "label": "setBits()",
    "kind": "Method",
    "detail": "Function (v .)",
    "insertText": "setBits((b[0] & 0x00ff) | (b[1] << 8))"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> void)",
    "insertText": "read(T& in, char v[], int n)"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readChars(in, v, n)"
  },
  {
    "label": "read()",
    "kind": "Method",
    "detail": "Function (} template<class S,class T> void)",
    "insertText": "read(T& in, int n, char v[])"
  },
  {
    "label": "readChars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readChars(in, v, 1)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (char c [ 1 0 2 4 ] ;)",
    "insertText": "while(n >= (int) sizeof (c))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (n - =)",
    "insertText": "sizeof(c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(n >= 1) S::readChars (in, c, n)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} template<> int size<)",
    "insertText": "bool()"
  }
]