[
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "UCurveVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveVector"
  },
  {
    "label": "ETimelineLengthMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETimelineLengthMode"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FTimelineEventEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineEventEntry"
  },
  {
    "label": "FTimelineVectorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineVectorTrack"
  },
  {
    "label": "FTimelineFloatTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineFloatTrack"
  },
  {
    "label": "FTimelineLinearColorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineLinearColorTrack"
  },
  {
    "label": "FTimeline",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeline"
  },
  {
    "label": "UCurveBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveBase"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UTimelineComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTimelineComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Components / ActorComponent . h \" # include \" TimelineComponent . generated . h \" class UCurveFloat ; class UCurveLinearColor ; class UCurveVector ;)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE(FOnTimelineEvent)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE_OneParam(FOnTimelineFloat, float, Output)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE_OneParam(FOnTimelineVector, FVector, Output)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE_OneParam(FOnTimelineLinearColor, FLinearColor, Output)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FOnTimelineEventStatic)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnTimelineFloatStatic, float)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnTimelineVectorStatic, FVector)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnTimelineLinearColorStatic, FLinearColor)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (TL_TimelineLength,TL_LastKeyFrame } ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Forward,Backward,} ; })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FTimelineEventEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTimelineEventEntry() : Time(0)"
  },
  {
    "label": "FTimelineVectorTrack()",
    "kind": "Method",
    "detail": "Function (FStructProperty* VectorProperty ; FOnTimelineVectorStatic InterpFuncStatic ;)",
    "insertText": "FTimelineVectorTrack() : VectorCurve(NULL) , VectorPropertyName(NAME_None) , VectorProperty(NULL)"
  },
  {
    "label": "FTimelineFloatTrack()",
    "kind": "Method",
    "detail": "Function (FFloatProperty* FloatProperty ; FOnTimelineFloatStatic InterpFuncStatic ;)",
    "insertText": "FTimelineFloatTrack() : FloatCurve(NULL) , FloatPropertyName(NAME_None) , FloatProperty(NULL)"
  },
  {
    "label": "FTimelineLinearColorTrack()",
    "kind": "Method",
    "detail": "Function (FStructProperty* LinearColorProperty ; FOnTimelineLinearColorStatic InterpFuncStatic ;)",
    "insertText": "FTimelineLinearColorTrack() : LinearColorCurve(NULL) , LinearColorPropertyName(NAME_None) , LinearColorProperty(NULL)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: UPROPERTY(NotReplicated)"
  },
  {
    "label": "FTimeline()",
    "kind": "Method",
    "detail": "Function (FOnTimelineEventStatic TimelineFinishFuncStatic ; FProperty* DirectionProperty ; public : PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FTimeline() : LengthMode( TL_LastKeyFrame ) , bLooping( false ) , bReversePlayback( false ) , bPlaying_DEPRECATED ( false ) , PlayingStateTracker( 2 ) , Length( 5.f ) , PlayRate( 1.f ) , Position( 0.0f ) , PropertySetObject(nullptr) , DirectionProperty(nullptr)"
  },
  {
    "label": "FTimeline()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTimeline()"
  },
  {
    "label": "FTimeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTimeline(const FTimeline&)"
  },
  {
    "label": "FTimeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTimeline(FTimeline&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTimeline&)",
    "insertText": "operator(const FTimeline&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTimeline&)",
    "insertText": "operator(FTimeline&&)"
  },
  {
    "label": "GetTimelineDirectionEnum()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS UEnum*)",
    "insertText": "GetTimelineDirectionEnum()"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play()"
  },
  {
    "label": "PlayFromStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayFromStart()"
  },
  {
    "label": "Reverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reverse()"
  },
  {
    "label": "ReverseFromEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReverseFromEnd()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "IsPlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlaying()"
  },
  {
    "label": "IsReversing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReversing()"
  },
  {
    "label": "SetPlaybackPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate = true)"
  },
  {
    "label": "GetPlaybackPosition()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPlaybackPosition()"
  },
  {
    "label": "SetLooping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLooping(bool bNewLooping)"
  },
  {
    "label": "IsLooping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLooping()"
  },
  {
    "label": "SetPlayRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayRate(float NewRate)"
  },
  {
    "label": "GetPlayRate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPlayRate()"
  },
  {
    "label": "SetNewTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewTime(float NewTime)"
  },
  {
    "label": "GetTimelineLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimelineLength()"
  },
  {
    "label": "GetScaledTimelineLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaledTimelineLength()"
  },
  {
    "label": "SetTimelineLengthMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineLengthMode(ETimelineLengthMode NewMode)"
  },
  {
    "label": "SetTimelineLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineLength(float NewLength)"
  },
  {
    "label": "SetFloatCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloatCurve(UCurveFloat* NewFloatCurve, FName FloatTrackName)"
  },
  {
    "label": "SetVectorCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorCurve(UCurveVector* NewVectorCurve, FName VectorTrackName)"
  },
  {
    "label": "SetLinearColorCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinearColorCurve(UCurveLinearColor* NewLinearColorCurve, FName LinearColorTrackName)"
  },
  {
    "label": "SetPropertySetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertySetObject(UObject* NewPropertySetObject)"
  },
  {
    "label": "SetTimelinePostUpdateFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelinePostUpdateFunc(FOnTimelineEvent NewTimelinePostUpdateFunc)"
  },
  {
    "label": "SetTimelineFinishedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineFinishedFunc(FOnTimelineEvent NewTimelineFinishedFunc)"
  },
  {
    "label": "SetTimelineFinishedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineFinishedFunc(FOnTimelineEventStatic NewTimelineFinishedFunc)"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvent(float Time, FOnTimelineEvent EventFunc)"
  },
  {
    "label": "AddInterpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpVector(UCurveVector* VectorCurve, FOnTimelineVector InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpVector(UCurveVector* VectorCurve, FOnTimelineVectorStatic InterpFunc)"
  },
  {
    "label": "AddInterpFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpFloat(UCurveFloat* FloatCurve, FOnTimelineFloat InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpFloat(UCurveFloat* FloatCurve, FOnTimelineFloatStatic InterpFunc)"
  },
  {
    "label": "AddInterpLinearColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpLinearColor(UCurveLinearColor* LinearColorCurve, FOnTimelineLinearColor InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpLinearColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpLinearColor(UCurveLinearColor* LinearColorCurve, FOnTimelineLinearColorStatic InterpFunc)"
  },
  {
    "label": "TickTimeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickTimeline(float DeltaTime)"
  },
  {
    "label": "SetDirectionPropertyName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirectionPropertyName(FName InDirectionPropertyName)"
  },
  {
    "label": "GetAllCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllCurves(TSet<class UCurveBase*>& InOutCurves)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "GetLastKeyframeTime()",
    "kind": "Method",
    "detail": "Function (private : float)",
    "insertText": "GetLastKeyframeTime()"
  },
  {
    "label": "ChangeMarkPlayingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeMarkPlayingState(const bool bIsPlaying)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct TStructOpsTypeTraits<FTimeline> : public TStructOpsTypeTraitsBase2<FTimeline> { enum { WithSerializer = true,WithPostSerialize = true,} ; } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() private: UPROPERTY(ReplicatedUsing=OnRep_Timeline)"
  },
  {
    "label": "TickComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickComponent(float DeltaTime, enum ELevelTick TickType, FActorComponentTickFunction *ThisTickFunction)"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate(bool bReset=false)"
  },
  {
    "label": "Deactivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deactivate()"
  },
  {
    "label": "IsReadyForOwnerToAutoDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForOwnerToAutoDestroy()"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "GetTimelineEventSignature()",
    "kind": "Method",
    "detail": "Function (UFunction*)",
    "insertText": "GetTimelineEventSignature()"
  },
  {
    "label": "GetTimelineFloatSignature()",
    "kind": "Method",
    "detail": "Function (UFunction*)",
    "insertText": "GetTimelineFloatSignature()"
  },
  {
    "label": "GetTimelineVectorSignature()",
    "kind": "Method",
    "detail": "Function (UFunction*)",
    "insertText": "GetTimelineVectorSignature()"
  },
  {
    "label": "GetTimelineLinearColorSignature()",
    "kind": "Method",
    "detail": "Function (UFunction*)",
    "insertText": "GetTimelineLinearColorSignature()"
  },
  {
    "label": "GetTimelineSignatureForFunction()",
    "kind": "Method",
    "detail": "Function (ETimelineSigType)",
    "insertText": "GetTimelineSignatureForFunction(const UFunction* InFunc)"
  },
  {
    "label": "SetDirectionPropertyName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirectionPropertyName(FName DirectionPropertyName)"
  }
]