[
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "UCurveVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveVector"
  },
  {
    "label": "ETimelineLengthMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETimelineLengthMode"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FTimelineEventEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineEventEntry"
  },
  {
    "label": "FTimelineVectorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineVectorTrack"
  },
  {
    "label": "UCurveVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveVector"
  },
  {
    "label": "property",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "property"
  },
  {
    "label": "FTimelineFloatTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineFloatTrack"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "FTimelineLinearColorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineLinearColorTrack"
  },
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "property",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "property"
  },
  {
    "label": "FTimeline",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeline"
  },
  {
    "label": "FTimelineEventEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineEventEntry"
  },
  {
    "label": "FTimelineVectorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineVectorTrack"
  },
  {
    "label": "FTimelineFloatTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineFloatTrack"
  },
  {
    "label": "FTimelineLinearColorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineLinearColorTrack"
  },
  {
    "label": "UCurveBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveBase"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UTimelineComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTimelineComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "UCurveBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveBase"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play()"
  },
  {
    "label": "PlayFromStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayFromStart()"
  },
  {
    "label": "Reverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reverse()"
  },
  {
    "label": "ReverseFromEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReverseFromEnd()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "SetPlaybackPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate = true)"
  },
  {
    "label": "SetLooping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLooping(bool bNewLooping)"
  },
  {
    "label": "SetPlayRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayRate(float NewRate)"
  },
  {
    "label": "SetNewTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewTime(float NewTime)"
  },
  {
    "label": "SetTimelineLengthMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineLengthMode(ETimelineLengthMode NewMode)"
  },
  {
    "label": "SetTimelineLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineLength(float NewLength)"
  },
  {
    "label": "SetFloatCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloatCurve(UCurveFloat* NewFloatCurve, FName FloatTrackName)"
  },
  {
    "label": "SetVectorCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorCurve(UCurveVector* NewVectorCurve, FName VectorTrackName)"
  },
  {
    "label": "SetLinearColorCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinearColorCurve(UCurveLinearColor* NewLinearColorCurve, FName LinearColorTrackName)"
  },
  {
    "label": "SetPropertySetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertySetObject(UObject* NewPropertySetObject)"
  },
  {
    "label": "SetTimelinePostUpdateFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelinePostUpdateFunc(FOnTimelineEvent NewTimelinePostUpdateFunc)"
  },
  {
    "label": "SetTimelineFinishedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineFinishedFunc(FOnTimelineEvent NewTimelineFinishedFunc)"
  },
  {
    "label": "SetTimelineFinishedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineFinishedFunc(FOnTimelineEventStatic NewTimelineFinishedFunc)"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvent(float Time, FOnTimelineEvent EventFunc)"
  },
  {
    "label": "AddInterpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpVector(UCurveVector* VectorCurve, FOnTimelineVector InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpVector(UCurveVector* VectorCurve, FOnTimelineVectorStatic InterpFunc)"
  },
  {
    "label": "AddInterpFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpFloat(UCurveFloat* FloatCurve, FOnTimelineFloat InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpFloat(UCurveFloat* FloatCurve, FOnTimelineFloatStatic InterpFunc )"
  },
  {
    "label": "AddInterpLinearColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpLinearColor(UCurveLinearColor* LinearColorCurve, FOnTimelineLinearColor InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpLinearColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpLinearColor(UCurveLinearColor* LinearColorCurve, FOnTimelineLinearColorStatic InterpFunc)"
  },
  {
    "label": "TickTimeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickTimeline(float DeltaTime)"
  },
  {
    "label": "SetDirectionPropertyName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirectionPropertyName(FName InDirectionPropertyName)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(const FArchive& Ar)"
  },
  {
    "label": "ChangeMarkPlayingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeMarkPlayingState(const bool bIsPlaying)"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play()"
  },
  {
    "label": "PlayFromStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayFromStart()"
  },
  {
    "label": "Reverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reverse()"
  },
  {
    "label": "ReverseFromEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReverseFromEnd()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "SetPlaybackPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaybackPosition(float NewPosition, bool bFireEvents, bool bFireUpdate = true)"
  },
  {
    "label": "SetLooping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLooping(bool bNewLooping)"
  },
  {
    "label": "SetPlayRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayRate(float NewRate)"
  },
  {
    "label": "SetNewTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNewTime(float NewTime)"
  },
  {
    "label": "SetTimelineLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineLength(float NewLength)"
  },
  {
    "label": "SetTimelineLengthMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineLengthMode(ETimelineLengthMode NewLengthMode)"
  },
  {
    "label": "SetIgnoreTimeDilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIgnoreTimeDilation(bool bNewIgnoreTimeDilation)"
  },
  {
    "label": "SetFloatCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloatCurve(UCurveFloat* NewFloatCurve, FName FloatTrackName)"
  },
  {
    "label": "SetVectorCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorCurve(UCurveVector* NewVectorCurve, FName VectorTrackName)"
  },
  {
    "label": "SetLinearColorCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinearColorCurve(UCurveLinearColor* NewLinearColorCurve, FName LinearColorTrackName)"
  },
  {
    "label": "OnRep_Timeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_Timeline(FTimeline& OldTimeline)"
  },
  {
    "label": "GetTimelineSignatureForFunction()",
    "kind": "Method",
    "detail": "Function (ETimelineSigType)",
    "insertText": "GetTimelineSignatureForFunction(const UFunction* InFunc)"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvent(float Time, FOnTimelineEvent EventFunc)"
  },
  {
    "label": "AddInterpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpVector(UCurveVector* VectorCurve, FOnTimelineVector InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpVector(UCurveVector* VectorCurve, FOnTimelineVectorStatic InterpFunc)"
  },
  {
    "label": "AddInterpFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpFloat(UCurveFloat* FloatCurve, FOnTimelineFloat InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpFloat(UCurveFloat* FloatCurve, FOnTimelineFloatStatic InterpFunc)"
  },
  {
    "label": "AddInterpLinearColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpLinearColor(UCurveLinearColor* LinearColorCurve, FOnTimelineLinearColor InterpFunc, FName PropertyName = NAME_None, FName TrackName = NAME_None)"
  },
  {
    "label": "AddInterpLinearColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterpLinearColor(UCurveLinearColor* LinearColorCurve, FOnTimelineLinearColorStatic InterpFunc)"
  },
  {
    "label": "SetPropertySetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertySetObject(UObject* NewPropertySetObject)"
  },
  {
    "label": "SetTimelinePostUpdateFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelinePostUpdateFunc(FOnTimelineEvent NewTimelinePostUpdateFunc)"
  },
  {
    "label": "SetTimelineFinishedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineFinishedFunc(FOnTimelineEvent NewTimelineFinishedFunc)"
  },
  {
    "label": "SetTimelineFinishedFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimelineFinishedFunc(FOnTimelineEventStatic NewTimelineFinishedFunc)"
  },
  {
    "label": "SetDirectionPropertyName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirectionPropertyName(FName DirectionPropertyName)"
  }
]