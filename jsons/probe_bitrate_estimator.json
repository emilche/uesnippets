[
  {
    "label": "RtcEventLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLog"
  },
  {
    "label": "ProbeBitrateEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProbeBitrateEstimator"
  },
  {
    "label": "AggregatedCluster",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AggregatedCluster"
  },
  {
    "label": "ProbeBitrateEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_GOOG_CC_PROBE_BITRATE_ESTIMATOR_H_ # define MODULES_CONGESTION_CONTROLLER_GOOG_CC_PROBE_BITRATE_ESTIMATOR_H_ # include<limits> # include<map> # include \" absl / types / optional . h \" # include \" api / transport / network_types . h \" # include \" api / units / data_rate . h \" namespace webrtc { class RtcEventLog ; class ProbeBitrateEstimator { public :)",
    "insertText": "ProbeBitrateEstimator(RtcEventLog* event_log)"
  },
  {
    "label": "ProbeBitrateEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ProbeBitrateEstimator()"
  },
  {
    "label": "HandleProbeAndEstimateBitrate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "HandleProbeAndEstimateBitrate(const PacketResult& packet_feedback)"
  },
  {
    "label": "FetchAndResetLastEstimatedBitrate()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "FetchAndResetLastEstimatedBitrate()"
  },
  {
    "label": "PlusInfinity()",
    "kind": "Method",
    "detail": "Function (private : struct AggregatedCluster { int num_probes = 0 ; Timestamp first_send =)",
    "insertText": "PlusInfinity()"
  },
  {
    "label": "MinusInfinity()",
    "kind": "Method",
    "detail": "Function (Timestamp last_send =)",
    "insertText": "MinusInfinity()"
  },
  {
    "label": "Zero()",
    "kind": "Method",
    "detail": "Function (DataSize size_last_send =)",
    "insertText": "Zero()"
  },
  {
    "label": "EraseOldClusters()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "EraseOldClusters(Timestamp timestamp)"
  }
]