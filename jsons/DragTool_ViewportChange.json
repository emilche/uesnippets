[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FDragTool_ViewportChange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragTool_ViewportChange"
  },
  {
    "label": "FDragTool_ViewportChange()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Editor / UnrealEdTypes . h \" # include \" EditorDragTools . h \" class FCanvas ; class FEditorViewportClient ; class FLevelEditorViewportClient ; class FSceneView ; class FDragTool_ViewportChange : public FDragTool { public :)",
    "insertText": "FDragTool_ViewportChange(FLevelEditorViewportClient* InviewportClient)"
  },
  {
    "label": "StartDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDrag(FEditorViewportClient* InViewportClient, const FVector& InStart, const FVector2D& InStartScreen)"
  },
  {
    "label": "EndDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDrag()"
  },
  {
    "label": "AddDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDelta(const FVector& InDelta)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FSceneView* View, FCanvas* Canvas)"
  }
]