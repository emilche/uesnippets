[
  {
    "label": "FStatsCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsCollector"
  },
  {
    "label": "FChunkMatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChunkMatch"
  },
  {
    "label": "IDataScanner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDataScanner"
  },
  {
    "label": "FDataScannerCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataScannerCounter"
  },
  {
    "label": "FDataScannerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataScannerFactory"
  },
  {
    "label": "FDeltaScannerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeltaScannerFactory"
  },
  {
    "label": "FChunkMatch()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / List . h \" # include \" Misc / Guid . h \" # include \" Core / BlockRange . h \" # include \" Generation / CloudEnumeration . h \" # include \" Generation / DeltaEnumeration . h \" namespace BuildPatchServices { class FStatsCollector ; struct FChunkMatch {)",
    "insertText": "FChunkMatch(const uint64& InDataOffset, const FGuid& InChunkGuid, const uint32& InWindowSize) : DataOffset(InDataOffset) , ChunkGuid(InChunkGuid) , WindowSize(InWindowSize)"
  },
  {
    "label": "IDataScanner()",
    "kind": "Method",
    "detail": "Function (} uint64 DataOffset ; FGuid ChunkGuid ; uint32 WindowSize ; } ; typedef TTuple<FBlockRange,FFilenameId,TSet<FString>,uint64> FScannerFileElement ; typedef TDoubleLinkedList<FScannerFileElement> FScannerFilesList ; typedef FScannerFilesList::TDoubleLinkedListNode FScannerFilesListNode ; class IDataScanner { public : ~)",
    "insertText": "IDataScanner()"
  },
  {
    "label": "IsComplete()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsComplete()"
  },
  {
    "label": "GetResultWhenComplete()",
    "kind": "Method",
    "detail": "Function (TArray<FChunkMatch>)",
    "insertText": "GetResultWhenComplete()"
  },
  {
    "label": "GetTimeRunning()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetTimeRunning()"
  },
  {
    "label": "SupportsFork()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsFork()"
  },
  {
    "label": "Fork()",
    "kind": "Method",
    "detail": "Function (FBlockRange)",
    "insertText": "Fork()"
  },
  {
    "label": "GetNumIncompleteScanners()",
    "kind": "Method",
    "detail": "Function (} ; class FDataScannerCounter { public : int32)",
    "insertText": "GetNumIncompleteScanners()"
  },
  {
    "label": "GetNumRunningScanners()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumRunningScanners()"
  },
  {
    "label": "IncrementIncomplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementIncomplete()"
  },
  {
    "label": "DecrementIncomplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecrementIncomplete()"
  },
  {
    "label": "IncrementRunning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementRunning()"
  },
  {
    "label": "DecrementRunning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecrementRunning()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FDataScannerFactory { public : IDataScanner*)",
    "insertText": "Create(const TArray<uint32>& ChunkWindowSizes, const TArray<uint8>& Data, const ICloudEnumeration* CloudEnumeration, FStatsCollector* StatsCollector)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FDeltaScannerFactory { public : IDataScanner*)",
    "insertText": "Create(const uint32 WindowSize, const TArray<uint8>& Data, const FScannerFilesList& FilesList, const IDeltaChunkEnumeration* CloudEnumeration, FStatsCollector* StatsCollector)"
  }
]