[
  {
    "label": "IDesignerExtensionFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDesignerExtensionFactory"
  },
  {
    "label": "INavigationEventSimulationView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavigationEventSimulationView"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "FWidgetBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditor"
  },
  {
    "label": "FNavigationExtensionFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavigationExtensionFactory"
  },
  {
    "label": "FNavigationSimulationArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationSimulationArguments"
  },
  {
    "label": "SWidgetDesignerNavigation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetDesignerNavigation"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedPtr<FWidgetBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "MakeDesignerExtension()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDesignerExtensionFactory>)",
    "insertText": "MakeDesignerExtension()"
  },
  {
    "label": "RunNewSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunNewSimulation(TSharedRef<SWidget> NewContent)"
  },
  {
    "label": "ClearSimulationResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSimulationResult()"
  },
  {
    "label": "HandleWidgetPreviewUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWidgetPreviewUpdated(TSharedRef<SWidget> NewContent)"
  },
  {
    "label": "HandleEditorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEditorSelectionChanged()"
  },
  {
    "label": "HandleSelectWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectWidget(TWeakPtr<const SWidget> Widget)"
  },
  {
    "label": "HandlePaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePaint(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId)"
  },
  {
    "label": "HandleRefreshClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleRefreshClicked()"
  }
]