[
  {
    "label": "encodeSLEB128()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_LEB128_H # define LLVM_SUPPORT_LEB128_H # include \" llvm / Support / raw_ostream . h \" namespace llvm { void)",
    "insertText": "encodeSLEB128(int64_t Value, raw_ostream &OS)"
  },
  {
    "label": "More()",
    "kind": "Method",
    "detail": "Function (bool More ; do { uint8_t Byte = Value& 0 x7f ; Value>> = 7 ;)",
    "insertText": "More((((Value == 0 ) && ((Byte & 0x40) == 0)) || ((Value == -1) && ((Byte & 0x40) != 0))))"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (OS<<)",
    "insertText": "char(Byte)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "while(More)"
  },
  {
    "label": "encodeULEB128()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "encodeULEB128(uint64_t Value, raw_ostream &OS, unsigned Padding = 0)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "while(Value != 0)"
  },
  {
    "label": "encodeULEB128()",
    "kind": "Method",
    "detail": "Function (OS<<' \\ x00 ' ; } } unsigned)",
    "insertText": "encodeULEB128(uint64_t Value, uint8_t *p, unsigned Padding = 0)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (uint8_t* orig_p = p ; do { uint8_t Byte = Value& 0 x7f ; Value>> = 7 ;)",
    "insertText": "if(Value != 0 || Padding != 0)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (* p + + = ' \\ x00 ' ; })",
    "insertText": "return(unsigned)(p - orig_p)"
  },
  {
    "label": "decodeULEB128()",
    "kind": "Method",
    "detail": "Function (} uint64_t)",
    "insertText": "decodeULEB128(const uint8_t *p, unsigned *n = nullptr)"
  },
  {
    "label": "uint64_t()",
    "kind": "Method",
    "detail": "Function (const uint8_t* orig_p = p ; uint64_t Value = 0 ; unsigned Shift = 0 ; do { Value + =)",
    "insertText": "uint64_t(*p & 0x7f)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (Shift + = 7 ; })",
    "insertText": "while(*p++ >= 128)"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (const uint8_t* orig_p = p ; int64_t Value = 0 ; unsigned Shift = 0 ; uint8_t Byte ; do { Byte =* p + + ;)",
    "insertText": "Value(((uint64_t)(Byte & 0x7f)) << Shift)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (Shift + = 7 ; })",
    "insertText": "while(Byte >= 128)"
  },
  {
    "label": "getSLEB128Size()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getSLEB128Size(int64_t Value)"
  }
]