[
  {
    "label": "IToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolTip"
  },
  {
    "label": "FBaseTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseTreeNode"
  },
  {
    "label": "FTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTableColumn"
  },
  {
    "label": "TRACEINSIGHTSCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSCORE_API"
  },
  {
    "label": "FormatValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Layout / Visibility . h \" # include \" InsightsCore / Table / ViewModels / TableCellValue . h \" class IToolTip ; namespace UE::Insights { class FBaseTreeNode ; class FTableColumn ; class ITableCellValueFormatter { public : FText)",
    "insertText": "FormatValue(const TOptional<FTableCellValue>& InValue)"
  },
  {
    "label": "FormatValueForTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "FormatValueForTooltip(const TOptional<FTableCellValue>& InValue)"
  },
  {
    "label": "FormatValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "FormatValue(const FTableColumn& Column, const FBaseTreeNode& Node)"
  },
  {
    "label": "FormatValueForTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "FormatValueForTooltip(const FTableColumn& Column, const FBaseTreeNode& Node)"
  },
  {
    "label": "FormatValueForGrouping()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "FormatValueForGrouping(const FTableColumn& Column, const FBaseTreeNode& Node)"
  },
  {
    "label": "CopyValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "CopyValue(const FTableColumn& Column, const FBaseTreeNode& Node)"
  },
  {
    "label": "CopyTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "CopyTooltip(const FTableColumn& Column, const FBaseTreeNode& Node)"
  },
  {
    "label": "GetCustomTooltip()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IToolTip>)",
    "insertText": "GetCustomTooltip(const FTableColumn& Column, const FBaseTreeNode& Node)"
  },
  {
    "label": "FTableCellValueFormatter()",
    "kind": "Method",
    "detail": "Function (} ; class FTableCellValueFormatter : public ITableCellValueFormatter { public :)",
    "insertText": "FTableCellValueFormatter()"
  },
  {
    "label": "GetTooltipVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetTooltipVisibility()"
  },
  {
    "label": "GetEmpty()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "GetEmpty()"
  }
]