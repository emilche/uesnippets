[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FSlateTexture2DRHIRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTexture2DRHIRef"
  },
  {
    "label": "FSlateTextureRenderTarget2DResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTextureRenderTarget2DResource"
  },
  {
    "label": "IAssetSystemInfoProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetSystemInfoProvider"
  },
  {
    "label": "IToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolTip"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAssetThumbnailConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetThumbnailConfig"
  },
  {
    "label": "FAssetThumbnail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnail"
  },
  {
    "label": "FThumbnailInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThumbnailInfo"
  },
  {
    "label": "FThumbnailInfo_RenderThread",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThumbnailInfo_RenderThread"
  },
  {
    "label": "FThumbId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThumbId"
  },
  {
    "label": "FAssetThumbnailConfig()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" Misc / Attribute . h \" # include \" AssetRegistry / AssetData . h \" # include \" Rendering / RenderingCommon . h \" # include \" Widgets / SWidget . h \" # include \" TickableEditorObject . h \" class AActor ; class FAssetThumbnailPool ; class FSlateShaderResource ; class FSlateTexture2DRHIRef ; class FSlateTextureRenderTarget2DResource ; class IAssetSystemInfoProvider ; class IToolTip ; struct FPropertyChangedEvent ; namespace EThumbnailLabel { enum Type { ClassName,AssetName,NoLabel } ; } ; enum class EThumbnailSize : uint8 { Tiny = 0,Small,Medium,Large,XLarge,Huge,MAX } ; enum class EThumbnailColorStripOrientation : uint8 { HorizontalBottomEdge,VerticalRightEdge,} ; struct FAssetThumbnailConfig {)",
    "insertText": "FAssetThumbnailConfig() : bAllowFadeIn( false ) , bForceGenericThumbnail( false ) , bAllowHintText( true ) , bAllowRealTimeOnHovered( true ) , bAllowAssetSpecificThumbnailOverlay( false ) , ClassThumbnailBrushOverride( NAME_None ) , ThumbnailLabel( EThumbnailLabel::ClassName ) , HighlightedText( FText::GetEmpty() ) , HintColorAndOpacity( FLinearColor( 0.0f, 0.0f, 0.0f, 0.0f ) ) , AssetTypeColorOverride() , Padding(0) #if UE_CONTENTBROWSER_NEW_STYLE , AssetSystemInfoProvider(nullptr) , bAllowAssetStatusThumbnailOverlay( false ) , bShowAssetChip(false) , AssetChipBorderImageOverride()"
  },
  {
    "label": "FAssetThumbnail()",
    "kind": "Method",
    "detail": "Function (} bool bAllowFadeIn ; bool bForceGenericThumbnail ; bool bAllowHintText ; bool bAllowRealTimeOnHovered ; bool bAllowAssetSpecificThumbnailOverlay ; FName ClassThumbnailBrushOverride ; EThumbnailLabel::Type ThumbnailLabel ; TAttribute<FText> HighlightedText ; TAttribute<FLinearColor> HintColorAndOpacity ; TOptional<FLinearColor> AssetTypeColorOverride ; FMargin Padding ; TAttribute<int32> GenericThumbnailSize = 6 4 ; EThumbnailColorStripOrientation ColorStripOrientation = EThumbnailColorStripOrientation::HorizontalBottomEdge ; # if UE_CONTENTBROWSER_NEW_STYLE TSharedPtr<IAssetSystemInfoProvider> AssetSystemInfoProvider ; TAttribute<TSharedPtr<IToolTip>> TooltipOverride ; bool bAllowAssetStatusThumbnailOverlay ; bool bShowAssetChip ; TAttribute<const FSlateBrush*> AssetChipBorderImageOverride ; # endif } ; class FAssetThumbnail : public ISlateViewport,public TSharedFromThis<FAssetThumbnail> { public :)",
    "insertText": "FAssetThumbnail(UObject* InAsset, uint32 InWidth, uint32 InHeight, const TSharedPtr<class FAssetThumbnailPool>& InThumbnailPool)"
  },
  {
    "label": "FAssetThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetThumbnail(const FAssetData& InAsset, uint32 InWidth, uint32 InHeight, const TSharedPtr<class FAssetThumbnailPool>& InThumbnailPool)"
  },
  {
    "label": "FAssetThumbnail()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAssetThumbnail()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetViewportRenderTargetTexture()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetViewportRenderTargetTexture()"
  },
  {
    "label": "RequiresVsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresVsync()"
  },
  {
    "label": "GetAssetData()",
    "kind": "Method",
    "detail": "Function (const FAssetData&)",
    "insertText": "GetAssetData()"
  },
  {
    "label": "SetAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsset(const UObject* InAsset)"
  },
  {
    "label": "SetAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsset(const FAssetData& InAssetData)"
  },
  {
    "label": "MakeThumbnailWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeThumbnailWidget(const FAssetThumbnailConfig& InConfig = FAssetThumbnailConfig())"
  },
  {
    "label": "RefreshThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshThumbnail()"
  },
  {
    "label": "SetRealTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRealTime(bool bRealTime)"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(FAssetThumbnail, FOnAssetDataChanged)"
  },
  {
    "label": "OnAssetDataChanged()",
    "kind": "Method",
    "detail": "Function (FOnAssetDataChanged&)",
    "insertText": "OnAssetDataChanged()"
  },
  {
    "label": "FAssetThumbnailPool()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAssetThumbnailPool()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickable()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "AccessTexture()",
    "kind": "Method",
    "detail": "Function (FSlateTexture2DRHIRef*)",
    "insertText": "AccessTexture(const FAssetData& AssetData, uint32 Width, uint32 Height)"
  },
  {
    "label": "AddReferencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencer(const FAssetThumbnail& AssetThumbnail)"
  },
  {
    "label": "RemoveReferencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReferencer(const FAssetThumbnail& AssetThumbnail)"
  },
  {
    "label": "IsInRenderStack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInRenderStack(const TSharedPtr<FAssetThumbnail>& Thumbnail)"
  },
  {
    "label": "IsRendered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRendered(const TSharedPtr<FAssetThumbnail>& Thumbnail)"
  },
  {
    "label": "PrioritizeThumbnails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrioritizeThumbnails(const TArray< TSharedPtr<FAssetThumbnail> >& ThumbnailsToPrioritize, uint32 Width, uint32 Height)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(FAssetThumbnailPool, FThumbnailRendered, const FAssetData&)"
  },
  {
    "label": "OnThumbnailRendered()",
    "kind": "Method",
    "detail": "Function (FThumbnailRendered&)",
    "insertText": "OnThumbnailRendered()"
  },
  {
    "label": "OnThumbnailRenderFailed()",
    "kind": "Method",
    "detail": "Function (FThumbnailRenderFailed&)",
    "insertText": "OnThumbnailRenderFailed()"
  },
  {
    "label": "SetRealTimeThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRealTimeThumbnail(const TSharedPtr<FAssetThumbnail>& Thumbnail, bool bRealTimeThumbnail)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "FreeThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeThumbnail(const FSoftObjectPath& ObjectPath, uint32 Width, uint32 Height)"
  },
  {
    "label": "RefreshThumbnailsFor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshThumbnailsFor(const FSoftObjectPath& ObjectPath)"
  },
  {
    "label": "OnAssetLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetLoaded(UObject* Asset)"
  },
  {
    "label": "OnThumbnailDirtied()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThumbnailDirtied(const FSoftObjectPath& ObjectPath)"
  },
  {
    "label": "FThumbnailInfo()",
    "kind": "Method",
    "detail": "Function (private : struct FThumbnailInfo { FAssetData AssetData ; FSlateTexture2DRHIRef* ThumbnailTexture = nullptr ; FSlateTextureRenderTarget2DResource* ThumbnailRenderTarget = nullptr ; double LastAccessTime = 0 . 0 ; double LastUpdateTime = 0 . 0 ; uint32 Width = 0 ; uint32 Height = 0 ; ~)",
    "insertText": "FThumbnailInfo()"
  },
  {
    "label": "LoadThumbnail()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "LoadThumbnail(TSharedRef<FThumbnailInfo> ThumbnailInfo, bool& bIsAssetStillCompiling, const FAssetData& CustomAssetToRender = FAssetData())"
  },
  {
    "label": "FThumbnailInfo_RenderThread()",
    "kind": "Method",
    "detail": "Function (struct FThumbnailInfo_RenderThread { FSlateTexture2DRHIRef* ThumbnailTexture ; FSlateTextureRenderTarget2DResource* ThumbnailRenderTarget ; uint32 Width ; uint32 Height ;)",
    "insertText": "FThumbnailInfo_RenderThread(const FThumbnailInfo& Info) : ThumbnailTexture(Info.ThumbnailTexture) , ThumbnailRenderTarget(Info.ThumbnailRenderTarget) , Width(Info.Width) , Height(Info.Height)"
  },
  {
    "label": "FThumbId()",
    "kind": "Method",
    "detail": "Function (} } ; struct FThumbId { FSoftObjectPath ObjectPath ; uint32 Width ; uint32 Height ;)",
    "insertText": "FThumbId(FSoftObjectPath InObjectPath, uint32 InWidth, uint32 InHeight ) : ObjectPath( MoveTemp(InObjectPath) ) , Width( InWidth ) , Height( InHeight)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FThumbId& Other)"
  }
]