[
  {
    "label": "UMovieSceneReplaceableActorBinding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneReplaceableActorBinding"
  },
  {
    "label": "UMovieSceneReplaceableActorBinding_BPBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneReplaceableActorBinding_BPBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Bindings / MovieSceneReplaceableBinding . h \" # include \" Templates / SubclassOf . h \" # include \" GameFramework / Actor . h \" # include \" MovieSceneReplaceableActorBinding . generated . h \")",
    "insertText": "UCLASS(MinimalAPI, BlueprintType, EditInlineNew, DefaultToInstanced, Meta=(DisplayName=\"Replaceable Actor\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() public: #if WITH_EDITOR FText GetBindingTypePrettyName()"
  },
  {
    "label": "ResolveRuntimeBindingInternal()",
    "kind": "Method",
    "detail": "Function (# endif protected : FMovieSceneBindingResolveResult)",
    "insertText": "ResolveRuntimeBindingInternal(const FMovieSceneBindingResolveParams& ResolveParams, int32 BindingIndex, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "InitReplaceableBinding()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitReplaceableBinding(UObject* SourceObject, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "GetInnerSpawnableClass()",
    "kind": "Method",
    "detail": "Function (} TSubclassOf<UMovieSceneSpawnableBindingBase>)",
    "insertText": "GetInnerSpawnableClass()"
  },
  {
    "label": "GetCustomBindingPriority()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCustomBindingPriority()"
  },
  {
    "label": "GetBindingTrackIconTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBindingTrackIconTooltip()"
  },
  {
    "label": "OnBindingAddedOrChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBindingAddedOrChanged(UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "CreateCustomBindingFromBinding()",
    "kind": "Method",
    "detail": "Function (protected : # if WITH_EDITOR UMovieSceneCustomBinding*)",
    "insertText": "CreateCustomBindingFromBinding(const FMovieSceneBindingReference& BindingReference, UObject* SourceObject, UMovieScene& OwnerMovieScene)"
  }
]