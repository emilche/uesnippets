[
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "UDiffAssetRegistriesCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDiffAssetRegistriesCommandlet"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EAssetFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAssetFlags"
  },
  {
    "label": "FChangeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChangeInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDeterminismInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeterminismInfo"
  },
  {
    "label": "FChunkChangeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChunkChangeInfo"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "DiffAssetRegistries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffAssetRegistries(const FString& OldPath, const FString& NewPath, bool bUseSourceGuid, bool bEnginePackagesOnly)"
  },
  {
    "label": "ConsistencyCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsistencyCheck(const FString& OldPath, const FString& NewPath)"
  },
  {
    "label": "RecordAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordAdd(FName InAssetPath, const FAssetPackageData& InNewData)"
  },
  {
    "label": "RecordEdit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEdit(FName InAssetPath, const FAssetPackageData& InNewData, const FAssetPackageData& InOldData)"
  },
  {
    "label": "RecordDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordDelete(FName InAssetPath, const FAssetPackageData& InOldData)"
  },
  {
    "label": "RecordNoChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordNoChange(FName InAssetPath, const FAssetPackageData& InData)"
  },
  {
    "label": "GetClassName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetClassName(FAssetRegistryState& InRegistryState, FName InAssetPath)"
  },
  {
    "label": "GetAssetChunks()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "GetAssetChunks(FAssetRegistryState& InRegistryState, FName InAssetPath)"
  },
  {
    "label": "IsInRelevantChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInRelevantChunk(FAssetRegistryState& InRegistryState, FName InAssetPath)"
  },
  {
    "label": "LogChangedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogChangedFiles(FArchive *CSVFile, const FString &OldPath, const FString &NewPath)"
  },
  {
    "label": "SummarizeDeterminism()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SummarizeDeterminism()"
  },
  {
    "label": "PopulateChangelistMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateChangelistMap(const FString &Branch, const FString &CL, bool bEnginePackages)"
  },
  {
    "label": "FillChangelists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillChangelists(FString Branch, FString CL, FString BasePath, FString AssetPath)"
  }
]