[
  {
    "label": "FInterpolatedMultiTapDelay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInterpolatedMultiTapDelay"
  },
  {
    "label": "FInterpolatedMultiTapDelay()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AlignedBuffer . h \" # include \" VectorLinearResampler . h \" namespace Audio { class FInterpolatedMultiTapDelay { public :)",
    "insertText": "FInterpolatedMultiTapDelay()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const int32 InDelayBufferSamples)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(TArrayView<const float> InBuffer)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Read(const uint32 StartNumDelaySamples, const uint32 StartSampleFraction, const uint32 EndNumDelaySamples, TArrayView<float> OutBuffer)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  }
]