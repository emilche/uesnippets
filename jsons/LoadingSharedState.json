[
  {
    "label": "FLoadTimeProfilerCpuEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadTimeProfilerCpuEvent"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FLoadingTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoadingTimingTrack"
  },
  {
    "label": "FLoadingSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoadingSharedState"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Map . h \" # include \" Delegates / DelegateCombinations . h \" # include \" Templates / SharedPointer . h \" # include \" Insights / ITimingViewExtender . h \" namespace TraceServices { struct FLoadTimeProfilerCpuEvent ; } namespace UE::Insights::TimingProfiler { class STimingView ; } namespace UE::Insights::LoadingProfiler { class FLoadingTimingTrack ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(const TCHAR*, FLoadingTrackGetEventNameDelegate, uint32 , const TraceServices::FLoadTimeProfilerCpuEvent&)"
  },
  {
    "label": "FLoadingSharedState()",
    "kind": "Method",
    "detail": "Function (class FLoadingSharedState : public UE::Insights::Timing::ITimingViewExtender,public TSharedFromThis<FLoadingSharedState> { public :)",
    "insertText": "FLoadingSharedState(UE::Insights::TimingProfiler::STimingView* InTimingView)"
  },
  {
    "label": "FLoadingSharedState()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLoadingSharedState()"
  },
  {
    "label": "OnBeginSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSession(UE::Insights::Timing::ITimingViewSession& InSession)"
  },
  {
    "label": "OnEndSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSession(UE::Insights::Timing::ITimingViewSession& InSession)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(UE::Insights::Timing::ITimingViewSession& InSession, const TraceServices::IAnalysisSession& InAnalysisSession)"
  },
  {
    "label": "ExtendOtherTracksFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendOtherTracksFilterMenu(UE::Insights::Timing::ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "GetEventName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetEventName(uint32 Depth, const TraceServices::FLoadTimeProfilerCpuEvent& Event)"
  },
  {
    "label": "SetColorSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColorSchema(int32 Schema)"
  },
  {
    "label": "GetLoadingTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLoadingTimingTrack>)",
    "insertText": "GetLoadingTrack(uint32 InThreadId)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLoadingTimingTrack>* TrackPtrPtr = LoadingTracks .)",
    "insertText": "Find(InThreadId)"
  },
  {
    "label": "ShowAllLoadingTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllLoadingTracks()"
  },
  {
    "label": "SetAllLoadingTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllLoadingTracksToggle(true)"
  },
  {
    "label": "HideAllLoadingTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HideAllLoadingTracks()"
  },
  {
    "label": "SetAllLoadingTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllLoadingTracksToggle(false)"
  },
  {
    "label": "ShowHideAllLoadingTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ShowHideAllLoadingTracks()"
  },
  {
    "label": "SetAllLoadingTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllLoadingTracksToggle(!IsAllLoadingTracksToggleOn())"
  },
  {
    "label": "GetEventNameByEventType()",
    "kind": "Method",
    "detail": "Function (} private : const TCHAR*)",
    "insertText": "GetEventNameByEventType(uint32 Depth, const TraceServices::FLoadTimeProfilerCpuEvent& Event)"
  },
  {
    "label": "GetEventNameByPackageName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetEventNameByPackageName(uint32 Depth, const TraceServices::FLoadTimeProfilerCpuEvent& Event)"
  },
  {
    "label": "GetEventNameByExportClassName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetEventNameByExportClassName(uint32 Depth, const TraceServices::FLoadTimeProfilerCpuEvent& Event)"
  },
  {
    "label": "GetEventNameByPackageAndExportClassName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetEventNameByPackageAndExportClassName(uint32 Depth, const TraceServices::FLoadTimeProfilerCpuEvent& Event)"
  }
]