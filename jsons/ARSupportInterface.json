[
  {
    "label": "IARSystemSupport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IARSystemSupport"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ARTypes . h \" # include \" ARSessionConfig . h \" # include \" ARTextures . h \" # include \" Engine / Engine . h \" class IARSystemSupport ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FARSystemOnSessionStarted)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FARSystemOnAlignmentTransformUpdated, const FTransform&)"
  },
  {
    "label": "DECLARE_AR_SI_DELEGATE_FUNCS()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_AR_SI_DELEGATE_FUNCS(DelegateName) \\ public: \\ FDelegateHandle Add##DelegateName##Delegate_Handle(const F##DelegateName##Delegate& Delegate)"
  },
  {
    "label": "Delegate_Handle()",
    "kind": "Method",
    "detail": "Function (\\ void Clear # # DelegateName # #)",
    "insertText": "Delegate_Handle(FDelegateHandle& Handle)"
  },
  {
    "label": "Delegates()",
    "kind": "Method",
    "detail": "Function (\\ void Clear # # DelegateName # #)",
    "insertText": "Delegates(void* Object)"
  },
  {
    "label": "FARSupportInterface()",
    "kind": "Method",
    "detail": "Function (class FARSupportInterface : public TSharedFromThis<FARSupportInterface,ESPMode::ThreadSafe>,public FGCObject,public IModularFeature { public :)",
    "insertText": "FARSupportInterface(IARSystemSupport* InARImplementation, IXRTrackingSystem* InXRTrackingSystem)"
  },
  {
    "label": "FARSupportInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FARSupportInterface()"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetModularFeatureName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (const FName ModularFeatureName =)",
    "insertText": "FName(TEXT(\"ARSystem\"))"
  },
  {
    "label": "GetXRTrackingSystem()",
    "kind": "Method",
    "detail": "Function (IXRTrackingSystem*)",
    "insertText": "GetXRTrackingSystem()"
  },
  {
    "label": "StartARGameFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartARGameFrame(FWorldContext& WorldContext)"
  },
  {
    "label": "GetAlignmentTransform()",
    "kind": "Method",
    "detail": "Function (const FTransform&)",
    "insertText": "GetAlignmentTransform()"
  },
  {
    "label": "GetSessionConfig()",
    "kind": "Method",
    "detail": "Function (const UARSessionConfig&)",
    "insertText": "GetSessionConfig()"
  },
  {
    "label": "AccessSessionConfig()",
    "kind": "Method",
    "detail": "Function (UARSessionConfig&)",
    "insertText": "AccessSessionConfig()"
  },
  {
    "label": "GetTrackingQuality()",
    "kind": "Method",
    "detail": "Function (EARTrackingQuality)",
    "insertText": "GetTrackingQuality()"
  },
  {
    "label": "GetTrackingQualityReason()",
    "kind": "Method",
    "detail": "Function (EARTrackingQualityReason)",
    "insertText": "GetTrackingQualityReason()"
  },
  {
    "label": "StartARSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartARSession(UARSessionConfig* InSessionConfig)"
  },
  {
    "label": "PauseARSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseARSession()"
  },
  {
    "label": "StopARSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopARSession()"
  },
  {
    "label": "GetARSessionStatus()",
    "kind": "Method",
    "detail": "Function (FARSessionStatus)",
    "insertText": "GetARSessionStatus()"
  },
  {
    "label": "IsSessionTypeSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSessionTypeSupported(EARSessionType SessionType)"
  },
  {
    "label": "ToggleARCapture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToggleARCapture(const bool bOnOff, const EARCaptureType CaptureType)"
  },
  {
    "label": "SetEnabledXRCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledXRCamera(bool bOnOff)"
  },
  {
    "label": "ResizeXRCamera()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "ResizeXRCamera(const FIntPoint& InSize)"
  },
  {
    "label": "SetAlignmentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlignmentTransform(const FTransform& InAlignmentTransform)"
  },
  {
    "label": "LineTraceTrackedObjects()",
    "kind": "Method",
    "detail": "Function (TArray<FARTraceResult>)",
    "insertText": "LineTraceTrackedObjects(const FVector2D ScreenCoords, EARLineTraceChannels TraceChannels)"
  },
  {
    "label": "LineTraceTrackedObjects()",
    "kind": "Method",
    "detail": "Function (TArray<FARTraceResult>)",
    "insertText": "LineTraceTrackedObjects(const FVector Start, const FVector End, EARLineTraceChannels TraceChannels)"
  },
  {
    "label": "GetAllTrackedGeometries()",
    "kind": "Method",
    "detail": "Function (TArray<UARTrackedGeometry*>)",
    "insertText": "GetAllTrackedGeometries()"
  },
  {
    "label": "GetAllPins()",
    "kind": "Method",
    "detail": "Function (TArray<UARPin*>)",
    "insertText": "GetAllPins()"
  },
  {
    "label": "IsEnvironmentCaptureSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnvironmentCaptureSupported()"
  },
  {
    "label": "AddManualEnvironmentCaptureProbe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddManualEnvironmentCaptureProbe(FVector Location, FVector Extent)"
  },
  {
    "label": "GetCandidateObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FARGetCandidateObjectAsyncTask,ESPMode::ThreadSafe>)",
    "insertText": "GetCandidateObject(FVector Location, FVector Extent)"
  },
  {
    "label": "SaveWorld()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FARSaveWorldAsyncTask,ESPMode::ThreadSafe>)",
    "insertText": "SaveWorld()"
  },
  {
    "label": "GetWorldMappingStatus()",
    "kind": "Method",
    "detail": "Function (EARWorldMappingState)",
    "insertText": "GetWorldMappingStatus()"
  },
  {
    "label": "GetCurrentLightEstimate()",
    "kind": "Method",
    "detail": "Function (UARLightEstimate*)",
    "insertText": "GetCurrentLightEstimate()"
  },
  {
    "label": "PinComponent()",
    "kind": "Method",
    "detail": "Function (UARPin*)",
    "insertText": "PinComponent(USceneComponent* ComponentToPin, const FTransform& PinToWorldTransform, UARTrackedGeometry* TrackedGeometry = nullptr, const FName DebugName = NAME_None)"
  },
  {
    "label": "PinComponent()",
    "kind": "Method",
    "detail": "Function (UARPin*)",
    "insertText": "PinComponent(USceneComponent* ComponentToPin, const FARTraceResult& HitResult, const FName DebugName = NAME_None)"
  },
  {
    "label": "RemovePin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePin(UARPin* PinToRemove)"
  },
  {
    "label": "TryGetOrCreatePinForNativeResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetOrCreatePinForNativeResource(void* InNativeResource, const FString& InAnchorName, UARPin*& OutAnchor)"
  },
  {
    "label": "GetSupportedVideoFormats()",
    "kind": "Method",
    "detail": "Function (TArray<FARVideoFormat>)",
    "insertText": "GetSupportedVideoFormats(EARSessionType SessionType = EARSessionType::World)"
  },
  {
    "label": "GetPointCloud()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "GetPointCloud()"
  },
  {
    "label": "AddRuntimeCandidateImage()",
    "kind": "Method",
    "detail": "Function (UARCandidateImage*)",
    "insertText": "AddRuntimeCandidateImage(UARSessionConfig* SessionConfig, UTexture2D* CandidateTexture, FString FriendlyName, float PhysicalWidth)"
  },
  {
    "label": "GetARSessionRawPointer()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetARSessionRawPointer()"
  },
  {
    "label": "GetGameThreadARFrameRawPointer()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetGameThreadARFrameRawPointer()"
  },
  {
    "label": "IsSessionTrackingFeatureSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSessionTrackingFeatureSupported(EARSessionType SessionType, EARSessionTrackingFeature SessionTrackingFeature)"
  },
  {
    "label": "GetTracked2DPose()",
    "kind": "Method",
    "detail": "Function (TArray<FARPose2D>)",
    "insertText": "GetTracked2DPose()"
  },
  {
    "label": "IsSceneReconstructionSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSceneReconstructionSupported(EARSessionType SessionType, EARSceneReconstruction SceneReconstructionMethod)"
  },
  {
    "label": "AddTrackedPointWithName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTrackedPointWithName(const FTransform& WorldTransform, const FString& PointName, bool bDeletePointsWithSameName)"
  },
  {
    "label": "GetNumberOfTrackedFacesSupported()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfTrackedFacesSupported()"
  },
  {
    "label": "GetARTexture()",
    "kind": "Method",
    "detail": "Function (UARTexture*)",
    "insertText": "GetARTexture(EARTextureType TextureType)"
  },
  {
    "label": "GetCameraIntrinsics()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCameraIntrinsics(FARCameraIntrinsics& OutCameraIntrinsics)"
  },
  {
    "label": "IsARAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsARAvailable()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "DECLARE_AR_SI_DELEGATE_FUNCS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_AR_SI_DELEGATE_FUNCS(OnTrackableAdded) DECLARE_AR_SI_DELEGATE_FUNCS(OnTrackableUpdated) DECLARE_AR_SI_DELEGATE_FUNCS(OnTrackableRemoved) bool PinComponent(USceneComponent* ComponentToPin, UARPin* Pin)"
  },
  {
    "label": "IsLocalPinSaveSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocalPinSaveSupported()"
  },
  {
    "label": "ArePinsReadyToLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ArePinsReadyToLoad()"
  },
  {
    "label": "LoadARPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadARPins(TMap<FName, UARPin*>& LoadedPins)"
  },
  {
    "label": "SaveARPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveARPin(FName InName, UARPin* InPin)"
  },
  {
    "label": "RemoveSavedARPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSavedARPin(FName InName)"
  },
  {
    "label": "RemoveAllSavedARPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllSavedARPins()"
  }
]