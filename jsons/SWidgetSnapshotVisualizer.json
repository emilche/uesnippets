[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "SScrollableSnapshotImage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollableSnapshotImage"
  },
  {
    "label": "FWidgetSnapshotTextureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetSnapshotTextureData"
  },
  {
    "label": "FWidgetSnapshotNavigationSimulationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetSnapshotNavigationSimulationData"
  },
  {
    "label": "FWidgetSnapshotData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetSnapshotData"
  },
  {
    "label": "SWidgetSnapshotVisualizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetSnapshotVisualizer"
  },
  {
    "label": "FWidgetSnapshotData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Models / WidgetReflectorNode . h \" # include \" Models / NavigationSimulationNode . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SNavigationSimulationList . h \" # include \" Widgets / SWindow . h \" class FJsonObject ; class SScrollableSnapshotImage ; struct FWidgetSnapshotTextureData { FIntVector Dimensions ; TArray<FColor> ColorData ; } ; struct FWidgetSnapshotNavigationSimulationData { TArray<FNavigationSimulationWidgetNodePtr> SimulationData ; } ; class FWidgetSnapshotData { public : ~)",
    "insertText": "FWidgetSnapshotData()"
  },
  {
    "label": "ClearSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSnapshot()"
  },
  {
    "label": "TakeSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeSnapshot(bool bSimulateNavigation)"
  },
  {
    "label": "CreateSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSnapshot(const TArray<TSharedRef<SWindow>>& VisibleWindows, bool bSimulateNavigation)"
  },
  {
    "label": "SaveSnapshotToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveSnapshotToFile(const FString& InFilename)"
  },
  {
    "label": "SaveSnapshotToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSnapshotToBuffer(TArray<uint8>& OutData)"
  },
  {
    "label": "SaveSnapshotAsJson()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FJsonObject>)",
    "insertText": "SaveSnapshotAsJson()"
  },
  {
    "label": "LoadSnapshotFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadSnapshotFromFile(const FString& InFilename)"
  },
  {
    "label": "LoadSnapshotFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSnapshotFromBuffer(const TArray<uint8>& InData)"
  },
  {
    "label": "LoadSnapshotFromJson()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSnapshotFromJson(const TSharedRef<FJsonObject>& InRootJsonObject)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Num()"
  },
  {
    "label": "GetWindowsPtr()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FWidgetReflectorNodeBase>>&)",
    "insertText": "GetWindowsPtr()"
  },
  {
    "label": "GetWindowsRef()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<FWidgetReflectorNodeBase>>)",
    "insertText": "GetWindowsRef()"
  },
  {
    "label": "GetWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FWidgetReflectorNodeBase>)",
    "insertText": "GetWindow(const int32 WindowIndex)"
  },
  {
    "label": "GetNavigationSimulation()",
    "kind": "Method",
    "detail": "Function (const FWidgetSnapshotNavigationSimulationData&)",
    "insertText": "GetNavigationSimulation(const int32 WindowIndex)"
  },
  {
    "label": "GetBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBrush(const int32 WindowIndex)"
  },
  {
    "label": "CreateBrushes()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateBrushes()"
  },
  {
    "label": "DestroyBrushes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBrushes()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reserve(const int32 NumWindows)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FWidgetReflectorNodeBase>> Windows ; TArray<FWidgetSnapshotNavigationSimulationData> NavigationSimulationData ; TArray<FWidgetSnapshotTextureData> WindowTextureData ; TArray<TSharedPtr<FSlateDynamicImageBrush>> WindowTextureBrushes ; FWidgetSnapshotNavigationSimulationData EmptyNavigationSimulationData ; } ; class SWidgetSnapshotVisualizer : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnWidgetPathPicked, const TArray<TSharedRef<FWidgetReflectorNodeBase>>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSnapshotWidgetAction, FWidgetReflectorNodeBase::TPointerAsInt)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SWidgetSnapshotVisualizer) : _SnapshotData(nullptr)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(const FWidgetSnapshotData*, SnapshotData) SLATE_EVENT(FOnWidgetPathPicked, OnWidgetPathPicked) SLATE_EVENT(FOnSnapshotWidgetAction, OnSnapshotWidgetSelected) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SnapshotDataUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapshotDataUpdated()"
  },
  {
    "label": "SetSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedWidgets(const TArray<TSharedRef<FWidgetReflectorNodeBase>>& InSelectedWidgets)"
  },
  {
    "label": "OnPreviewKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnPreviewKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnWindowSelectionChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnWindowSelectionChanged(TSharedPtr<FWidgetReflectorNodeBase> InWindow, ESelectInfo::Type InReason)"
  },
  {
    "label": "GetWindowPickerComboItemText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWindowPickerComboItemText(TSharedPtr<FWidgetReflectorNodeBase> InWindow)"
  },
  {
    "label": "GetSelectedWindowComboItemText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSelectedWindowComboItemText()"
  },
  {
    "label": "GenerateWindowPickerComboItem()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWindowPickerComboItem(TSharedPtr<FWidgetReflectorNodeBase> InWindow)"
  },
  {
    "label": "GetPickWidgetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPickWidgetText()"
  },
  {
    "label": "GetPickWidgetColor()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetPickWidgetColor()"
  },
  {
    "label": "OnPickWidgetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPickWidgetClicked()"
  },
  {
    "label": "HasValidSnapshot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidSnapshot()"
  },
  {
    "label": "HandleGetNavigationSimulationListVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleGetNavigationSimulationListVisibility()"
  },
  {
    "label": "OnSaveSnapshotClicked()",
    "kind": "Method",
    "detail": "Function (# if SLATE_REFLECTOR_HAS_DESKTOP_PLATFORM void)",
    "insertText": "OnSaveSnapshotClicked()"
  }
]