[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "FMovieSceneTimeController",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController"
  },
  {
    "label": "FMovieSceneTimeController_ExternalClock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_ExternalClock"
  },
  {
    "label": "FMovieSceneTimeController_PlatformClock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_PlatformClock"
  },
  {
    "label": "FMovieSceneTimeController_AudioClock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_AudioClock"
  },
  {
    "label": "FMovieSceneTimeController_RelativeTimecodeClock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_RelativeTimecodeClock"
  },
  {
    "label": "FMovieSceneTimeController_TimecodeClock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_TimecodeClock"
  },
  {
    "label": "FMovieSceneTimeController_Tick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_Tick"
  },
  {
    "label": "FMovieSceneTimeController_PlayEveryFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeController_PlayEveryFrame"
  },
  {
    "label": "FMovieSceneTimeController()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / QualifiedFrameTime . h \" # include \" MovieSceneFwd . h \" # include \" Misc / Attribute . h \" # include \" UObject / ObjectMacros . h \" class IMovieScenePlayer ; struct FMovieSceneTimeController { public : ~)",
    "insertText": "FMovieSceneTimeController()"
  },
  {
    "label": "StartPlaying()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartPlaying(const FQualifiedFrameTime& InStartTime)"
  },
  {
    "label": "StopPlaying()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopPlaying(const FQualifiedFrameTime& InStopTime)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds, float InPlayRate)"
  },
  {
    "label": "RequestCurrentTime()",
    "kind": "Method",
    "detail": "Function (FFrameTime)",
    "insertText": "RequestCurrentTime(const FQualifiedFrameTime& InCurrentTime, float InPlayRate, FFrameRate InDisplayRate)"
  },
  {
    "label": "PlayerStatusChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayerStatusChanged(EMovieScenePlayerStatus::Type InStatus, const FQualifiedFrameTime& InCurrentTime)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(const FQualifiedFrameTime& InNewStartTime)"
  },
  {
    "label": "OnTick()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnTick(float DeltaSeconds, float InPlayRate)"
  },
  {
    "label": "OnStartPlaying()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnStartPlaying(const FQualifiedFrameTime& InStartTime)"
  },
  {
    "label": "OnStopPlaying()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnStopPlaying(const FQualifiedFrameTime& InStopTime)"
  },
  {
    "label": "OnRequestCurrentTime()",
    "kind": "Method",
    "detail": "Function (} FFrameTime)",
    "insertText": "OnRequestCurrentTime(const FQualifiedFrameTime& InCurrentTime, float InPlayRate)"
  },
  {
    "label": "GetPlaybackStartTime()",
    "kind": "Method",
    "detail": "Function (protected : TOptional<FQualifiedFrameTime>)",
    "insertText": "GetPlaybackStartTime()"
  },
  {
    "label": "GetCurrentTime()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetCurrentTime()"
  },
  {
    "label": "FMovieSceneTimeController_Tick()",
    "kind": "Method",
    "detail": "Function (} ; struct FMovieSceneTimeController_Tick : FMovieSceneTimeController {)",
    "insertText": "FMovieSceneTimeController_Tick() : CurrentOffsetSeconds(0.0)"
  },
  {
    "label": "FMovieSceneTimeController_PlayEveryFrame()",
    "kind": "Method",
    "detail": "Function (private : double CurrentOffsetSeconds ; } ; struct FMovieSceneTimeController_PlayEveryFrame : FMovieSceneTimeController {)",
    "insertText": "FMovieSceneTimeController_PlayEveryFrame() : PreviousPlatformTime(0.f)"
  }
]