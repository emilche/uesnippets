[
  {
    "label": "UnhandledPacketsBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnhandledPacketsBuffer"
  },
  {
    "label": "PacketWithMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketWithMetadata"
  },
  {
    "label": "UnhandledPacketsBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_ENGINE_UNHANDLED_PACKETS_BUFFER_H_ # define MEDIA_ENGINE_UNHANDLED_PACKETS_BUFFER_H_ # include<stdint . h> # include<functional> # include<tuple> # include<utility> # include<vector> # include \" rtc_base / copy_on_write_buffer . h \" namespace cricket { class UnhandledPacketsBuffer { public : size_t kMaxStashedPackets = 5 0 ;)",
    "insertText": "UnhandledPacketsBuffer()"
  },
  {
    "label": "AddPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPacket(uint32_t ssrc, int64_t packet_time_us, rtc::CopyOnWriteBuffer packet)"
  },
  {
    "label": "BackfillPackets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BackfillPackets(rtc::ArrayView<const uint32_t> ssrcs, std::function<void(uint32_t, int64_t, rtc::CopyOnWriteBuffer)> consumer)"
  }
]