[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TComponentInterfaceIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TComponentInterfaceIterator"
  },
  {
    "label": "EEndTagType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEndTagType"
  },
  {
    "label": "TComponentInterfaceRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TComponentInterfaceRange"
  },
  {
    "label": "TComponentInterfaceIterator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / ComponentInterfaces . h \" # include \" UObject / UObjectHash . h \" # include \" UObject / UObjectIterator . h \" template<class T> class TComponentInterfaceIterator { public : enum EEndTagType { EndTag } ;)",
    "insertText": "TComponentInterfaceIterator(EObjectFlags AdditionalExclusionFlags = RF_ClassDefaultObject, bool bIncludeDerivedClasses = true, EInternalObjectFlags InInternalExclusionFlags = EInternalObjectFlags::None) : Index(-1)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*> ObjectArray ;)",
    "insertText": "for(FComponentInterfaceImplementation& Implementation : T::Implementers)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (ObjectArray .)",
    "insertText": "Reset()"
  },
  {
    "label": "GetObjectsOfClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectsOfClass(Implementation.Class, ObjectArray, bIncludeDerivedClasses, AdditionalExclusionFlags, GetObjectIteratorDefaultInternalExclusionFlags(InInternalExclusionFlags))"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (Interfaces .)",
    "insertText": "Reserve(ObjectArray.Num() + Interfaces.Num())"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* Interface = reinterpret_cast<)",
    "insertText": "T(Implementation.Resolver(Object))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Interfaces .)",
    "insertText": "Add(Interface)"
  },
  {
    "label": "TComponentInterfaceIterator()",
    "kind": "Method",
    "detail": "Function (} } Index = 0 ; })",
    "insertText": "TComponentInterfaceIterator(EEndTagType, const TComponentInterfaceIterator<T>& InIter ) : Index(InIter.Interfaces.Num())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "operator(int)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Index + + ; } void)",
    "insertText": "operator()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (Index + + ; } operator)",
    "insertText": "bool()"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} TComponentInterfaceIterator<T>)",
    "insertText": "begin(const TComponentInterfaceRange& Range)"
  }
]