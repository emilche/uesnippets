[
  {
    "label": "Interrupter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Interrupter"
  },
  {
    "label": "LevelSetMorphing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LevelSetMorphing"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "Morph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Morph"
  },
  {
    "label": "ThreadingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ThreadingMode"
  },
  {
    "label": "advect()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect(ValueType time0, ValueType time1)"
  },
  {
    "label": "advect1()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect1(ValueType time0, ValueType time1)"
  },
  {
    "label": "advect2()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect2(ValueType time0, ValueType time1)"
  },
  {
    "label": "advect3()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect3(ValueType time0, ValueType time1)"
  },
  {
    "label": "Morph()",
    "kind": "Method",
    "detail": "Function (constructor)",
    "insertText": "Morph(LevelSetMorphing<GridT, InterruptT>& parent)"
  },
  {
    "label": "Morph()",
    "kind": "Method",
    "detail": "Function (threads)",
    "insertText": "Morph(const Morph& other)"
  },
  {
    "label": "Morph()",
    "kind": "Method",
    "detail": "Function (threads)",
    "insertText": "Morph(Morph& other, tbb::split)"
  },
  {
    "label": "advect()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "advect(ValueType time0, ValueType time1)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "OPENVDB_THROW(ValueError, \"task is undefined - don\\'t call this method directly\")"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "OPENVDB_THROW(ValueError, \"task is undefined - don\\'t call this method directly\")"
  },
  {
    "label": "cook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cook(ThreadingMode mode, size_t swapBuffer = 0)"
  },
  {
    "label": "sampleSpeed()",
    "kind": "Method",
    "detail": "Function (GridT::ValueType)",
    "insertText": "sampleSpeed(ValueType time0, ValueType time1, Index speedBuffer)"
  },
  {
    "label": "sampleXformedSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sampleXformedSpeed(const LeafRange& r, Index speedBuffer)"
  },
  {
    "label": "sampleAlignedSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sampleAlignedSpeed(const LeafRange& r, Index speedBuffer)"
  },
  {
    "label": "euler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "euler(const LeafRange&, ValueType, Index, Index, Index)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "OPENVDB_THROW(ValueError, \"Spatial difference scheme not supported!\")"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "OPENVDB_THROW(ValueError, \"Temporal integration scheme not supported!\")"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (TemporalScheme>)",
    "insertText": "tmp(*this)"
  },
  {
    "label": "OPENVDB_THROW()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "OPENVDB_THROW(ValueError, \"Temporal integration scheme not supported!\")"
  },
  {
    "label": "ValueType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ValueType(0)"
  },
  {
    "label": "ValueType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ValueType(0)"
  }
]