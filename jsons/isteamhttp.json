[
  {
    "label": "ISteamHTTP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamHTTP"
  },
  {
    "label": "HTTPRequestCompleted_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HTTPRequestCompleted_t"
  },
  {
    "label": "HTTPRequestHeadersReceived_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HTTPRequestHeadersReceived_t"
  },
  {
    "label": "HTTPRequestDataReceived_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HTTPRequestDataReceived_t"
  },
  {
    "label": "CreateHTTPRequest()",
    "kind": "Method",
    "detail": "Function (# ifndef ISTEAMHTTP_H # define ISTEAMHTTP_H # ifdef _WIN32 # pragma once # endif # include \" steam_api_common . h \" # include \" steamhttpenums . h \" typedef uint32 HTTPRequestHandle ; # define INVALID_HTTPREQUEST_HANDLE 0 typedef uint32 HTTPCookieContainerHandle ; # define INVALID_HTTPCOOKIE_HANDLE 0 class ISteamHTTP { public : HTTPRequestHandle)",
    "insertText": "CreateHTTPRequest(EHTTPMethod eHTTPRequestMethod, const char *pchAbsoluteURL)"
  },
  {
    "label": "SetHTTPRequestContextValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestContextValue(HTTPRequestHandle hRequest, uint64 ulContextValue)"
  },
  {
    "label": "SetHTTPRequestNetworkActivityTimeout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestNetworkActivityTimeout(HTTPRequestHandle hRequest, uint32 unTimeoutSeconds)"
  },
  {
    "label": "SetHTTPRequestHeaderValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestHeaderValue(HTTPRequestHandle hRequest, const char *pchHeaderName, const char *pchHeaderValue)"
  },
  {
    "label": "SetHTTPRequestGetOrPostParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestGetOrPostParameter(HTTPRequestHandle hRequest, const char *pchParamName, const char *pchParamValue)"
  },
  {
    "label": "SendHTTPRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendHTTPRequest(HTTPRequestHandle hRequest, SteamAPICall_t *pCallHandle)"
  },
  {
    "label": "SendHTTPRequestAndStreamResponse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendHTTPRequestAndStreamResponse(HTTPRequestHandle hRequest, SteamAPICall_t *pCallHandle)"
  },
  {
    "label": "DeferHTTPRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeferHTTPRequest(HTTPRequestHandle hRequest)"
  },
  {
    "label": "PrioritizeHTTPRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrioritizeHTTPRequest(HTTPRequestHandle hRequest)"
  },
  {
    "label": "GetHTTPResponseHeaderSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPResponseHeaderSize(HTTPRequestHandle hRequest, const char *pchHeaderName, uint32 *unResponseHeaderSize)"
  },
  {
    "label": "GetHTTPResponseHeaderValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPResponseHeaderValue(HTTPRequestHandle hRequest, const char *pchHeaderName, uint8 *pHeaderValueBuffer, uint32 unBufferSize)"
  },
  {
    "label": "GetHTTPResponseBodySize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPResponseBodySize(HTTPRequestHandle hRequest, uint32 *unBodySize)"
  },
  {
    "label": "GetHTTPResponseBodyData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPResponseBodyData(HTTPRequestHandle hRequest, uint8 *pBodyDataBuffer, uint32 unBufferSize)"
  },
  {
    "label": "GetHTTPStreamingResponseBodyData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPStreamingResponseBodyData(HTTPRequestHandle hRequest, uint32 cOffset, uint8 *pBodyDataBuffer, uint32 unBufferSize)"
  },
  {
    "label": "ReleaseHTTPRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReleaseHTTPRequest(HTTPRequestHandle hRequest)"
  },
  {
    "label": "GetHTTPDownloadProgressPct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPDownloadProgressPct(HTTPRequestHandle hRequest, float *pflPercentOut)"
  },
  {
    "label": "SetHTTPRequestRawPostBody()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestRawPostBody(HTTPRequestHandle hRequest, const char *pchContentType, uint8 *pubBody, uint32 unBodyLen)"
  },
  {
    "label": "CreateCookieContainer()",
    "kind": "Method",
    "detail": "Function (HTTPCookieContainerHandle)",
    "insertText": "CreateCookieContainer(bool bAllowResponsesToModify)"
  },
  {
    "label": "ReleaseCookieContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReleaseCookieContainer(HTTPCookieContainerHandle hCookieContainer)"
  },
  {
    "label": "SetCookie()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCookie(HTTPCookieContainerHandle hCookieContainer, const char *pchHost, const char *pchUrl, const char *pchCookie)"
  },
  {
    "label": "SetHTTPRequestCookieContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestCookieContainer(HTTPRequestHandle hRequest, HTTPCookieContainerHandle hCookieContainer)"
  },
  {
    "label": "SetHTTPRequestUserAgentInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestUserAgentInfo(HTTPRequestHandle hRequest, const char *pchUserAgentInfo)"
  },
  {
    "label": "SetHTTPRequestRequiresVerifiedCertificate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestRequiresVerifiedCertificate(HTTPRequestHandle hRequest, bool bRequireVerifiedCertificate)"
  },
  {
    "label": "SetHTTPRequestAbsoluteTimeoutMS()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetHTTPRequestAbsoluteTimeoutMS(HTTPRequestHandle hRequest, uint32 unMilliseconds)"
  },
  {
    "label": "GetHTTPRequestWasTimedOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHTTPRequestWasTimedOut(HTTPRequestHandle hRequest, bool *pbWasTimedOut)"
  },
  {
    "label": "SteamHTTP()",
    "kind": "Method",
    "detail": "Function (} ; # define STEAMHTTP_INTERFACE_VERSION \" STEAMHTTP_INTERFACE_VERSION003 \" ISteamHTTP*)",
    "insertText": "SteamHTTP()"
  },
  {
    "label": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR(ISteamHTTP *, SteamHTTP, STEAMHTTP_INTERFACE_VERSION)"
  },
  {
    "label": "SteamGameServerHTTP()",
    "kind": "Method",
    "detail": "Function (ISteamHTTP*)",
    "insertText": "SteamGameServerHTTP()"
  },
  {
    "label": "STEAM_DEFINE_GAMESERVER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STEAM_DEFINE_GAMESERVER_INTERFACE_ACCESSOR(ISteamHTTP *, SteamGameServerHTTP, STEAMHTTP_INTERFACE_VERSION)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(VALVE_CALLBACK_PACK_SMALL ) #pragma pack( push, 4 ) #elif defined( VALVE_CALLBACK_PACK_LARGE ) #pragma pack( push, 8)"
  }
]