[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Base"
  },
  {
    "label": "TEngineContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TEngineContext"
  },
  {
    "label": "DATAFLOW_CONTEXT_INTERNAL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Dataflow / DataflowNodeParameters . h \" # include \" GeometryCollection / ManagedArrayCollection . h \" class UObject ; class FArchive ; namespace UE::Dataflow { template<class Base = FContextSingle> class TEngineContext : public Base { public :)",
    "insertText": "DATAFLOW_CONTEXT_INTERNAL(Base, TEngineContext)"
  },
  {
    "label": "TEngineContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TEngineContext(const TObjectPtr<UObject>& InOwner) : Base() , Owner(InOwner)"
  },
  {
    "label": "TEngineContext()",
    "kind": "Method",
    "detail": "Function (} TObjectPtr<UObject> Owner = nullptr ; ~)",
    "insertText": "TEngineContext()"
  },
  {
    "label": "GetKeys()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetKeys(TSet<FContextCacheKey>& InKeys)"
  },
  {
    "label": "GetBaseData()",
    "kind": "Method",
    "detail": "Function (} TUniquePtr<FContextCacheElementBase>*)",
    "insertText": "GetBaseData(FContextCacheKey Key)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Ar)"
  }
]