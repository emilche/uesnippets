[
  {
    "label": "FClothPhysicalMeshData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothPhysicalMeshData"
  },
  {
    "label": "FPointWeightMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointWeightMap"
  },
  {
    "label": "FMeshToMeshFilterSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshToMeshFilterSet"
  },
  {
    "label": "ClothMeshDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClothMeshDesc"
  },
  {
    "label": "FClothBvEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothBvEntry"
  },
  {
    "label": "FVertexParameterMapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexParameterMapper"
  },
  {
    "label": "ComputeAveragedNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeAveragedNormals()"
  },
  {
    "label": "SkinPhysicsMesh()",
    "kind": "Method",
    "detail": "Function (CLOTHINGSYSTEMRUNTIMECOMMON_API)",
    "insertText": "SkinPhysicsMesh(\n\t\tconst TArray<int32>& BoneMap,  // UClothingAssetCommon::UsedBoneIndices\n\t\tconst FClothPhysicalMeshData& InMesh, \n\t\tconst FTransform& PostTransform,  // Final transform to apply to component space positions and normals\n\t\tconst FMatrix44f* InBoneMatrices, \n\t\tconst int32 InNumBoneMatrices, \n\t\tTArray<FVector3f>& OutPositions, \n\t\tTArray<FVector3f>& OutNormals)"
  },
  {
    "label": "ComputeVertexContributions()",
    "kind": "Method",
    "detail": "Function (CLOTHINGSYSTEMRUNTIMECOMMON_API)",
    "insertText": "ComputeVertexContributions(\n\t\tTArray<FMeshToMeshVertData> &InOutSkinningData,\n\t\tconst FPointWeightMap* const InMaxDistances,\n\t\tconst bool bInSmoothTransition,\n\t\tconst bool bInUseMultipleInfluences = false)"
  },
  {
    "label": "GetPointBaryAndDist()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "GetPointBaryAndDist(\n\t\tconst FVector3f& A,\n\t\tconst FVector3f& B,\n\t\tconst FVector3f& C,\n\t\tconst FVector3f& Point)"
  },
  {
    "label": "GetPointBaryAndDistWithNormals()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "GetPointBaryAndDistWithNormals(\n\t\tconst FVector3f& A,\n\t\tconst FVector3f& B,\n\t\tconst FVector3f& C,\n\t\tconst FVector3f& NA,\n\t\tconst FVector3f& NB,\n\t\tconst FVector3f& NC,\n\t\tconst FVector3f& Point)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (data)",
    "insertText": "check(NumMesh0Positions == NumMesh0Normals)"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Map(TConstArrayView<float> Source, TArray<float>& Dest)"
  },
  {
    "label": "GenerateEmbeddedPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateEmbeddedPositions(TArray<FVector4>& OutEmbeddedPositions, TArray<int32>& OutSourceIndices)"
  }
]