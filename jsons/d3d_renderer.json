[
  {
    "label": "D3dRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "D3dRenderer"
  },
  {
    "label": "comment()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_WIN_D3D_RENDERER_H_ # define TEST_WIN_D3D_RENDERER_H_ # include<Windows . h> # include<d3d9 . h> # pragma)",
    "insertText": "comment(lib, \"d3d9.lib\")"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (namespace test { class D3dRenderer : public VideoRenderer { public : D3dRenderer*)",
    "insertText": "Create(const char* window_title, size_t width, size_t height)"
  },
  {
    "label": "D3dRenderer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "D3dRenderer()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(const webrtc::VideoFrame& frame)"
  },
  {
    "label": "D3dRenderer()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "D3dRenderer(size_t width, size_t height)"
  },
  {
    "label": "WindowProc()",
    "kind": "Method",
    "detail": "Function (LRESULT WINAPI)",
    "insertText": "WindowProc(HWND hwnd, UINT msg, WPARAM wparam, LPARAM lparam)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(const char* window_title)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(size_t width, size_t height)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  }
]