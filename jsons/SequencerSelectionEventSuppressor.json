[
  {
    "label": "FSequencerCoreSelection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerCoreSelection"
  },
  {
    "label": "FSelectionEventSuppressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectionEventSuppressor"
  },
  {
    "label": "FSelectionEventSuppressor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" namespace UE::Sequencer { class FSequencerCoreSelection ; struct FSelectionEventSuppressor {)",
    "insertText": "FSelectionEventSuppressor(FSequencerCoreSelection* InSelection)"
  },
  {
    "label": "FSelectionEventSuppressor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSelectionEventSuppressor()"
  },
  {
    "label": "FSelectionEventSuppressor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSelectionEventSuppressor(const FSelectionEventSuppressor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FSelectionEventSuppressor&)"
  },
  {
    "label": "FSelectionEventSuppressor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSelectionEventSuppressor(FSelectionEventSuppressor&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(FSelectionEventSuppressor&&)"
  }
]