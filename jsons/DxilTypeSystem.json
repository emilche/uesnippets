[
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "StructType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StructType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DxilMatrixAnnotation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilMatrixAnnotation"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilFieldAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilFieldAnnotation"
  },
  {
    "label": "DxilTemplateArgAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTemplateArgAnnotation"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilStructAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilStructAnnotation"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "if"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilPayloadFieldAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPayloadFieldAnnotation"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilPayloadAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPayloadAnnotation"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilParameterAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilParameterAnnotation"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilFunctionAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilFunctionAnnotation"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "DxilStructTypeIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilStructTypeIterator"
  },
  {
    "label": "DxilFieldAnnotation()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DxilFieldAnnotation()"
  },
  {
    "label": "SetPrecise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrecise(bool b = true)"
  },
  {
    "label": "SetMatrixAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMatrixAnnotation(const DxilMatrixAnnotation &MA)"
  },
  {
    "label": "SetVectorSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorSize(unsigned size)"
  },
  {
    "label": "SetResourceProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResourceProperties(const DxilResourceProperties &RP)"
  },
  {
    "label": "SetCBufferOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCBufferOffset(unsigned Offset)"
  },
  {
    "label": "SetCompType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompType(CompType::Kind kind)"
  },
  {
    "label": "SetSemanticString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSemanticString(const std::string &SemString)"
  },
  {
    "label": "SetInterpolationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterpolationMode(const InterpolationMode &IM)"
  },
  {
    "label": "SetFieldName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFieldName(const std::string &FieldName)"
  },
  {
    "label": "SetCBVarUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCBVarUsed(bool used)"
  },
  {
    "label": "SetBitFields()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBitFields(const std::vector<DxilFieldAnnotation> &Fields)"
  },
  {
    "label": "SetBitFieldWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBitFieldWidth(const unsigned BitWidth)"
  },
  {
    "label": "DxilTemplateArgAnnotation()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DxilTemplateArgAnnotation()"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType(const llvm::Type *pType)"
  },
  {
    "label": "SetIntegral()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIntegral(int64_t i64)"
  },
  {
    "label": "SetStructType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStructType(const llvm::StructType *Ty)"
  },
  {
    "label": "SetCBufferSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCBufferSize(unsigned size)"
  },
  {
    "label": "MarkEmptyStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkEmptyStruct()"
  },
  {
    "label": "IsEmptyStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmptyStruct()"
  },
  {
    "label": "IsEmptyBesidesResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmptyBesidesResources()"
  },
  {
    "label": "SetNumTemplateArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumTemplateArgs(unsigned count)"
  },
  {
    "label": "SetContainsResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContainsResources()"
  },
  {
    "label": "GetBitOffsetForShaderStage()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetBitOffsetForShaderStage(DXIL::PayloadAccessShaderStage shaderStage)"
  },
  {
    "label": "SetCompType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompType(CompType::Kind kind)"
  },
  {
    "label": "SetPayloadFieldQualifierMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPayloadFieldQualifierMask(uint32_t fieldBitmask)"
  },
  {
    "label": "AddPayloadFieldQualifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPayloadFieldQualifier(DXIL::PayloadAccessShaderStage shaderStage,\n                                DXIL::PayloadAccessQualifier qualifier)"
  },
  {
    "label": "SetStructType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStructType(const llvm::StructType *Ty)"
  },
  {
    "label": "DxilParameterAnnotation()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DxilParameterAnnotation()"
  },
  {
    "label": "SetParamInputQual()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParamInputQual(DxilParamInputQual qual)"
  },
  {
    "label": "SetSemanticIndexVec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSemanticIndexVec(const std::vector<unsigned> &Vec)"
  },
  {
    "label": "AppendSemanticIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSemanticIndex(unsigned SemIdx)"
  },
  {
    "label": "IsParamInputQualNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParamInputQualNode()"
  },
  {
    "label": "FinishStructAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishStructAnnotation(DxilStructAnnotation &SA)"
  },
  {
    "label": "EraseStructAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EraseStructAnnotation(const llvm::StructType *pStructType)"
  },
  {
    "label": "EraseUnusedStructAnnotations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EraseUnusedStructAnnotations()"
  },
  {
    "label": "ErasePayloadAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ErasePayloadAnnotation(const llvm::StructType *pStructType)"
  },
  {
    "label": "FinishFunctionAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishFunctionAnnotation(DxilFunctionAnnotation &FA)"
  },
  {
    "label": "EraseFunctionAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EraseFunctionAnnotation(const llvm::Function *pFunction)"
  },
  {
    "label": "CopyTypeAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyTypeAnnotation(const llvm::Type *Ty, const DxilTypeSystem &src)"
  },
  {
    "label": "CopyFunctionAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFunctionAnnotation(const llvm::Function *pDstFunction,\n                              const llvm::Function *pSrcFunction,\n                              const DxilTypeSystem &src)"
  },
  {
    "label": "UseMinPrecision()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseMinPrecision()"
  },
  {
    "label": "SetMinPrecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinPrecision(bool bMinPrecision)"
  },
  {
    "label": "IsResourceContained()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResourceContained(llvm::Type *Ty)"
  },
  {
    "label": "SigPointFromInputQual()",
    "kind": "Method",
    "detail": "Function (DXIL::SigPointKind)",
    "insertText": "SigPointFromInputQual(DxilParamInputQual Q,\n                                         DXIL::ShaderKind SK, bool isPC)"
  },
  {
    "label": "RemapObsoleteSemantic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemapObsoleteSemantic(DxilParameterAnnotation &paramInfo,\n                           DXIL::SigPointKind sigPoint,\n                           llvm::LLVMContext &Context)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (DxilStructTypeIterator)",
    "insertText": "begin(llvm::StructType *STy,\n                             DxilStructAnnotation *SAnno)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (DxilStructTypeIterator)",
    "insertText": "end(llvm::StructType *STy, DxilStructAnnotation *SAnno)"
  }
]