[
  {
    "label": "IRenderAssetInstanceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRenderAssetInstanceManager"
  },
  {
    "label": "IRenderAssetInstanceManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Streaming / TextureInstanceState . h \" class IRenderAssetInstanceManager { public : ~)",
    "insertText": "IRenderAssetInstanceManager()"
  },
  {
    "label": "IsReferenced()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsReferenced(const UPrimitiveComponent* Component)"
  },
  {
    "label": "CanManage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanManage(const UPrimitiveComponent* Component)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh(float Percentage)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (EAddComponentResult)",
    "insertText": "Add(const UPrimitiveComponent* Component, FStreamingTextureLevelContext& LevelContext, float MaxAllowedUIDensity)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(const UPrimitiveComponent* Component, FRemovedRenderAssetArray* RemovedTextures)"
  },
  {
    "label": "PrepareAsyncView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareAsyncView()"
  },
  {
    "label": "GetAsyncView()",
    "kind": "Method",
    "detail": "Function (const FRenderAssetInstanceView*)",
    "insertText": "GetAsyncView(bool bCreateIfNull)"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocatedSize()"
  }
]