[
  {
    "label": "UAISense_Team",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISense_Team"
  },
  {
    "label": "FAITeamStimulusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAITeamStimulusEvent"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GenericTeamAgentInterface . h \" # include \" Perception / AISense . h \" # include \" AISense_Team . generated . h \" class UAISense_Team ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FAITeamStimulusEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAITeamStimulusEvent() : Broadcaster(nullptr), Enemy(nullptr)"
  },
  {
    "label": "FAITeamStimulusEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAITeamStimulusEvent(AActor* InBroadcaster, AActor* InEnemy, const FVector& InLastKnowLocation, float EventRange, float PassedInfoAge = 0.f, float InStrength = 1.f)"
  },
  {
    "label": "GetActorLocation()",
    "kind": "Method",
    "detail": "Function (BroadcastLocation = Broadcaster ? Broadcaster ->)",
    "insertText": "GetActorLocation()"
  },
  {
    "label": "GetBroadcastLocation()",
    "kind": "Method",
    "detail": "Function (} const FVector&)",
    "insertText": "GetBroadcastLocation()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "RegisterEvent()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "RegisterEvent(const FAITeamStimulusEvent& Event)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (protected : float)",
    "insertText": "Update()"
  }
]