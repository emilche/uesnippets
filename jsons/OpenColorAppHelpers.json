[
  {
    "label": "OCIOEXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OCIOEXPORT"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (\ufeff # ifndef INCLUDED_OCIO_OPENCOLORAPPHELPERS_H # define INCLUDED_OCIO_OPENCOLORAPPHELPERS_H # include \" OpenColorTypes . h \" # ifndef OCIO_NAMESPACE # error This header cannot be used directly . Use<OpenColorIO / OpenColorIO . h> instead . # endif namespace OCIO_NAMESPACE { class OCIOEXPORT ColorSpaceMenuParameters { public : ColorSpaceMenuParametersRcPtr)",
    "insertText": "Create(ConstConfigRcPtr config)"
  },
  {
    "label": "setConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setConfig(ConstConfigRcPtr config)"
  },
  {
    "label": "getConfig()",
    "kind": "Method",
    "detail": "Function (ConstConfigRcPtr)",
    "insertText": "getConfig()"
  },
  {
    "label": "setRole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setRole(const char * role)"
  },
  {
    "label": "getRole()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getRole()"
  },
  {
    "label": "setIncludeColorSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIncludeColorSpaces(bool include)"
  },
  {
    "label": "getIncludeColorSpaces()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getIncludeColorSpaces()"
  },
  {
    "label": "getSearchReferenceSpaceType()",
    "kind": "Method",
    "detail": "Function (SearchReferenceSpaceType)",
    "insertText": "getSearchReferenceSpaceType()"
  },
  {
    "label": "setSearchReferenceSpaceType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSearchReferenceSpaceType(SearchReferenceSpaceType colorSpaceType)"
  },
  {
    "label": "setIncludeNamedTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIncludeNamedTransforms(bool include)"
  },
  {
    "label": "getIncludeNamedTransforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getIncludeNamedTransforms()"
  },
  {
    "label": "setAppCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAppCategories(const char * appCategories)"
  },
  {
    "label": "getAppCategories()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getAppCategories()"
  },
  {
    "label": "setEncodings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEncodings(const char * encodings)"
  },
  {
    "label": "getEncodings()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getEncodings()"
  },
  {
    "label": "setUserCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setUserCategories(const char * userCategories)"
  },
  {
    "label": "getUserCategories()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getUserCategories()"
  },
  {
    "label": "setIncludeRoles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIncludeRoles(bool include)"
  },
  {
    "label": "getIncludeRoles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getIncludeRoles()"
  },
  {
    "label": "addColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addColorSpace(const char * name)"
  },
  {
    "label": "getNumAddedColorSpaces()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumAddedColorSpaces()"
  },
  {
    "label": "getAddedColorSpace()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getAddedColorSpace(size_t index)"
  },
  {
    "label": "clearAddedColorSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearAddedColorSpaces()"
  },
  {
    "label": "ColorSpaceMenuParameters()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ColorSpaceMenuParameters()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream &, const ColorSpaceMenuParameters &)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT ColorSpaceMenuHelper { public : ColorSpaceMenuHelperRcPtr)",
    "insertText": "Create(ConstColorSpaceMenuParametersRcPtr parameters)"
  },
  {
    "label": "getNumColorSpaces()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumColorSpaces()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getName(size_t idx)"
  },
  {
    "label": "getUIName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getUIName(size_t idx)"
  },
  {
    "label": "getIndexFromName()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getIndexFromName(const char * name)"
  },
  {
    "label": "getIndexFromUIName()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getIndexFromUIName(const char * name)"
  },
  {
    "label": "getDescription()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getDescription(size_t idx)"
  },
  {
    "label": "getFamily()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getFamily(size_t idx)"
  },
  {
    "label": "getNumHierarchyLevels()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumHierarchyLevels(size_t idx)"
  },
  {
    "label": "getHierarchyLevel()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getHierarchyLevel(size_t idx, size_t i)"
  },
  {
    "label": "getNameFromUIName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getNameFromUIName(const char * uiName)"
  },
  {
    "label": "getUINameFromName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getUINameFromName(const char * name)"
  },
  {
    "label": "ColorSpaceMenuHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ColorSpaceMenuHelper(const ColorSpaceMenuHelper &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ColorSpaceMenuHelper&)",
    "insertText": "operator(const ColorSpaceMenuHelper &)"
  },
  {
    "label": "ColorSpaceMenuHelper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ColorSpaceMenuHelper()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream &, const ColorSpaceMenuHelper &)"
  },
  {
    "label": "AddColorSpace()",
    "kind": "Method",
    "detail": "Function (namespace ColorSpaceHelpers { OCIOEXPORT void)",
    "insertText": "AddColorSpace(ConfigRcPtr & config, const char * name, const char * transformFilePath, const char * categories, const char * connectionColorSpaceName)"
  },
  {
    "label": "GetProcessor()",
    "kind": "Method",
    "detail": "Function (} namespace DisplayViewHelpers { OCIOEXPORT ConstProcessorRcPtr)",
    "insertText": "GetProcessor(const ConstConfigRcPtr & config, const ConstContextRcPtr & context, const char * workingName, const char * displayName, const char * viewName, const ConstMatrixTransformRcPtr & channelView, TransformDirection direction)"
  },
  {
    "label": "GetProcessor()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT ConstProcessorRcPtr)",
    "insertText": "GetProcessor(const ConstConfigRcPtr & config, const char * workingName, const char * displayName, const char * viewName, const ConstMatrixTransformRcPtr & channelView, TransformDirection direction)"
  },
  {
    "label": "GetIdentityProcessor()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT ConstProcessorRcPtr)",
    "insertText": "GetIdentityProcessor(const ConstConfigRcPtr & config)"
  },
  {
    "label": "AddDisplayView()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "AddDisplayView(ConfigRcPtr & config, const char * displayName, const char * viewName, const char * lookDefinition, const char * colorSpaceName, const char * colorSpaceFamily, const char * colorSpaceDescription, const char * categories, const char * transformFilePath, const char * connectionColorSpaceName)"
  },
  {
    "label": "RemoveDisplayView()",
    "kind": "Method",
    "detail": "Function (OCIOEXPORT void)",
    "insertText": "RemoveDisplayView(ConfigRcPtr & config, const char * displayName, const char * viewName)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} class OCIOEXPORT LegacyViewingPipeline { public : LegacyViewingPipelineRcPtr)",
    "insertText": "Create()"
  },
  {
    "label": "getDisplayViewTransform()",
    "kind": "Method",
    "detail": "Function (ConstDisplayViewTransformRcPtr)",
    "insertText": "getDisplayViewTransform()"
  },
  {
    "label": "setDisplayViewTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDisplayViewTransform(const ConstDisplayViewTransformRcPtr & dt)"
  },
  {
    "label": "getLinearCC()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getLinearCC()"
  },
  {
    "label": "setLinearCC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLinearCC(const ConstTransformRcPtr & cc)"
  },
  {
    "label": "getColorTimingCC()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getColorTimingCC()"
  },
  {
    "label": "setColorTimingCC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setColorTimingCC(const ConstTransformRcPtr & cc)"
  },
  {
    "label": "getChannelView()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getChannelView()"
  },
  {
    "label": "setChannelView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setChannelView(const ConstTransformRcPtr & transform)"
  },
  {
    "label": "getDisplayCC()",
    "kind": "Method",
    "detail": "Function (ConstTransformRcPtr)",
    "insertText": "getDisplayCC()"
  },
  {
    "label": "setDisplayCC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDisplayCC(const ConstTransformRcPtr & cc)"
  },
  {
    "label": "setLooksOverrideEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLooksOverrideEnabled(bool enable)"
  },
  {
    "label": "getLooksOverrideEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getLooksOverrideEnabled()"
  },
  {
    "label": "setLooksOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLooksOverride(const char * looks)"
  },
  {
    "label": "getLooksOverride()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getLooksOverride()"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstConfigRcPtr & config, const ConstContextRcPtr & context)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const ConstConfigRcPtr & config)"
  },
  {
    "label": "LegacyViewingPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LegacyViewingPipeline(const LegacyViewingPipeline &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (LegacyViewingPipeline&)",
    "insertText": "operator(const LegacyViewingPipeline &)"
  },
  {
    "label": "LegacyViewingPipeline()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "LegacyViewingPipeline()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream &, const LegacyViewingPipeline &)"
  },
  {
    "label": "setSliderMinEdge()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT MixingSlider { public : void)",
    "insertText": "setSliderMinEdge(float sliderMixingMinEdge)"
  },
  {
    "label": "getSliderMinEdge()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "getSliderMinEdge()"
  },
  {
    "label": "setSliderMaxEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSliderMaxEdge(float sliderMixingMaxEdge)"
  },
  {
    "label": "getSliderMaxEdge()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "getSliderMaxEdge()"
  },
  {
    "label": "sliderToMixing()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "sliderToMixing(float sliderUnits)"
  },
  {
    "label": "mixingToSlider()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "mixingToSlider(float mixingUnits)"
  },
  {
    "label": "MixingSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixingSlider(const MixingSlider &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MixingSlider&)",
    "insertText": "operator(const MixingSlider &)"
  },
  {
    "label": "MixingSlider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MixingSlider()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream &, const MixingSlider &)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class OCIOEXPORT MixingColorSpaceManager { public : MixingColorSpaceManagerRcPtr)",
    "insertText": "Create(ConstConfigRcPtr & config)"
  },
  {
    "label": "getNumMixingSpaces()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumMixingSpaces()"
  },
  {
    "label": "getMixingSpaceUIName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getMixingSpaceUIName(size_t idx)"
  },
  {
    "label": "getSelectedMixingSpaceIdx()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getSelectedMixingSpaceIdx()"
  },
  {
    "label": "setSelectedMixingSpaceIdx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSelectedMixingSpaceIdx(size_t idx)"
  },
  {
    "label": "setSelectedMixingSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSelectedMixingSpace(const char * mixingSpace)"
  },
  {
    "label": "isPerceptuallyUniform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isPerceptuallyUniform()"
  },
  {
    "label": "getNumMixingEncodings()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumMixingEncodings()"
  },
  {
    "label": "getMixingEncodingName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getMixingEncodingName(size_t idx)"
  },
  {
    "label": "getSelectedMixingEncodingIdx()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getSelectedMixingEncodingIdx()"
  },
  {
    "label": "setSelectedMixingEncodingIdx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSelectedMixingEncodingIdx(size_t idx)"
  },
  {
    "label": "setSelectedMixingEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSelectedMixingEncoding(const char * mixingEncoding)"
  },
  {
    "label": "refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "refresh(ConstConfigRcPtr config)"
  },
  {
    "label": "getProcessor()",
    "kind": "Method",
    "detail": "Function (ConstProcessorRcPtr)",
    "insertText": "getProcessor(const char * workingName, const char * displayName, const char * viewName, TransformDirection direction)"
  },
  {
    "label": "getSlider()",
    "kind": "Method",
    "detail": "Function (MixingSlider&)",
    "insertText": "getSlider()"
  },
  {
    "label": "getSlider()",
    "kind": "Method",
    "detail": "Function (MixingSlider&)",
    "insertText": "getSlider(float sliderMixingMinEdge, float sliderMixingMaxEdge)"
  },
  {
    "label": "MixingColorSpaceManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MixingColorSpaceManager(const MixingColorSpaceManager &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MixingColorSpaceManager&)",
    "insertText": "operator(const MixingColorSpaceManager &)"
  },
  {
    "label": "MixingColorSpaceManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MixingColorSpaceManager()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; OCIOEXPORT std::ostream&)",
    "insertText": "operator(std::ostream &, const MixingColorSpaceManager &)"
  }
]