[
  {
    "label": "Syntax",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Syntax"
  },
  {
    "label": "ShaderGraphEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderGraphEdge"
  },
  {
    "label": "ShaderGraphEdgeIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderGraphEdgeIterator"
  },
  {
    "label": "GenOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GenOptions"
  },
  {
    "label": "ShaderGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderGraph"
  },
  {
    "label": "ShaderGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderGraph"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "ShaderGraphEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderGraphEdge"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "ShaderGraphEdgeIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderGraphEdgeIterator"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (ShaderGraphPtr)",
    "insertText": "create(const ShaderGraph* parent, const string& name, ElementPtr element, \n                                 GenContext& context)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (ShaderGraphPtr)",
    "insertText": "create(const ShaderGraph* parent, const NodeGraph& nodeGraph,\n                                 GenContext& context)"
  },
  {
    "label": "numOutputs()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "numOutputs()"
  },
  {
    "label": "numInputs()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "numInputs()"
  },
  {
    "label": "getOutput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOutput(index)"
  },
  {
    "label": "getInput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getInput(index)"
  },
  {
    "label": "getOutput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOutput(index)"
  },
  {
    "label": "getInput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getInput(index)"
  },
  {
    "label": "getOutput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOutput(name)"
  },
  {
    "label": "getInput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getInput(name)"
  },
  {
    "label": "getOutput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getOutput(name)"
  },
  {
    "label": "getInput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getInput(name)"
  },
  {
    "label": "traverseUpstream()",
    "kind": "Method",
    "detail": "Function (ShaderGraphEdgeIterator)",
    "insertText": "traverseUpstream(ShaderOutput* output)"
  },
  {
    "label": "createSurfaceShader()",
    "kind": "Method",
    "detail": "Function (ShaderGraphPtr)",
    "insertText": "createSurfaceShader(\n        const string& name,\n        const ShaderGraph* parent,\n        NodePtr node,\n        GenContext& context,\n        ElementPtr& root)"
  },
  {
    "label": "createConnectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createConnectedNodes(const ElementPtr& downstreamElement,\n                              const ElementPtr& upstreamElement,\n                              ElementPtr connectingElement,\n                              GenContext& context)"
  },
  {
    "label": "addNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addNode(ShaderNodePtr node)"
  },
  {
    "label": "addInputSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addInputSockets(const InterfaceElement& elem, GenContext& context)"
  },
  {
    "label": "addOutputSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addOutputSockets(const InterfaceElement& elem)"
  },
  {
    "label": "addUpstreamDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addUpstreamDependencies(const Element& root, GenContext& context)"
  },
  {
    "label": "addDefaultGeomNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addDefaultGeomNode(ShaderInput* input, const GeomPropDef& geomprop, GenContext& context)"
  },
  {
    "label": "addColorTransformNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addColorTransformNode(ShaderInput* input, const ColorSpaceTransform& transform, GenContext& context)"
  },
  {
    "label": "addColorTransformNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addColorTransformNode(ShaderOutput* output, const ColorSpaceTransform& transform, GenContext& context)"
  },
  {
    "label": "addUnitTransformNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addUnitTransformNode(ShaderInput* input, const UnitTransform& transform, GenContext& context)"
  },
  {
    "label": "addUnitTransformNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addUnitTransformNode(ShaderOutput* output, const UnitTransform& transform, GenContext& context)"
  },
  {
    "label": "finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "finalize(GenContext& context)"
  },
  {
    "label": "optimize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "optimize(GenContext& context)"
  },
  {
    "label": "bypass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bypass(GenContext& context, ShaderNode* node, size_t inputIndex, size_t outputIndex = 0)"
  },
  {
    "label": "topologicalSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "topologicalSort()"
  },
  {
    "label": "calculateScopes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "calculateScopes()"
  },
  {
    "label": "setVariableNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setVariableNames(GenContext& context)"
  },
  {
    "label": "populateColorTransformMap()",
    "kind": "Method",
    "detail": "Function (string)",
    "insertText": "populateColorTransformMap(ColorManagementSystemPtr colorManagementSystem, ShaderPort* shaderPort, ValueElementPtr element, const string& targetColorSpace, bool asInput)"
  },
  {
    "label": "populateUnitTransformMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "populateUnitTransformMap(UnitSystemPtr unitSystem, ShaderPort* shaderPort, ValueElementPtr element, const string& targetUnitSpace, bool asInput)"
  },
  {
    "label": "ShaderGraphEdgeIterator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ShaderGraphEdgeIterator(ShaderOutput* output)"
  },
  {
    "label": "ShaderGraphEdge()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ShaderGraphEdge(_upstream, _downstream)"
  },
  {
    "label": "extendPathUpstream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extendPathUpstream(ShaderOutput* upstream, ShaderInput* downstream)"
  },
  {
    "label": "returnPathDownstream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "returnPathDownstream(ShaderOutput* upstream)"
  }
]