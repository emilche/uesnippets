[
  {
    "label": "FDerivedDataCacheInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheInterface"
  },
  {
    "label": "TUniqueFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniqueFunction"
  },
  {
    "label": "FCacheRecord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheRecord"
  },
  {
    "label": "ICache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICache"
  },
  {
    "label": "IRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRequestOwner"
  },
  {
    "label": "AddToAsyncTaskCounter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" class FDerivedDataCacheInterface ; template<FuncType> class TUniqueFunction ; namespace UE::DerivedData { class FCacheRecord ; } namespace UE::DerivedData { class ICache ; } namespace UE::DerivedData { class IRequestOwner ; } namespace UE::DerivedData::Private { int32)",
    "insertText": "AddToAsyncTaskCounter(int32 Addend)"
  },
  {
    "label": "CreateCache()",
    "kind": "Method",
    "detail": "Function (ICache*)",
    "insertText": "CreateCache(FDerivedDataCacheInterface** OutLegacyCache)"
  },
  {
    "label": "LaunchTaskInCacheThreadPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchTaskInCacheThreadPool(IRequestOwner& Owner, TUniqueFunction<void ()>&& TaskBody)"
  },
  {
    "label": "GetCacheRecordCompressedSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetCacheRecordCompressedSize(const FCacheRecord& Record)"
  },
  {
    "label": "GetCacheRecordTotalRawSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetCacheRecordTotalRawSize(const FCacheRecord& Record)"
  },
  {
    "label": "GetCacheRecordRawSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetCacheRecordRawSize(const FCacheRecord& Record)"
  }
]