[
  {
    "label": "UMovieSceneFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneFolder"
  },
  {
    "label": "FActorDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorDragDropOp"
  },
  {
    "label": "FLayerBarModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayerBarModel"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "FSequencerOutlinerDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerOutlinerDragDropOp"
  },
  {
    "label": "FFolderModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFolderModel"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MVVM / ViewModels / ViewModel . h \" # include \" MVVM / ViewModels / OutlinerItemModel . h \" # include \" EventHandlers / IFolderEventHandler . h \" # include \" MVVM / Extensions / IOutlinerExtension . h \" # include \" MVVM / Extensions / IRenameableExtension . h \" # include \" MVVM / Extensions / ITrackAreaExtension . h \" # include \" MVVM / Extensions / IGroupableExtension . h \" # include \" MVVM / Extensions / IDraggableOutlinerExtension . h \" # include \" MVVM / Extensions / ISortableExtension . h \" # include \" MVVM / Extensions / IDeletableExtension . h \" # include \" MVVM / ViewModels / ViewModelHierarchy . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class UMovieSceneFolder ; class FActorDragDropOp ; namespace UE { namespace Sequencer { class FLayerBarModel ; class FSequenceModel ; class FSequencerOutlinerDragDropOp ; class FFolderModel : public FMuteSoloOutlinerItemModel,public IRenameableExtension,public ITrackAreaExtension,public IGroupableExtension,public IDraggableOutlinerExtension,public ISortableExtension,public IOutlinerDropTargetOutlinerExtension,public IDeletableExtension,private UE::MovieScene::TIntrusiveEventHandler<UE::MovieScene::IFolderEventHandler> { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FFolderModel , FMuteSoloOutlinerItemModel , IRenameableExtension , ITrackAreaExtension , IGroupableExtension , IDraggableOutlinerExtension , ISortableExtension , IOutlinerDropTargetOutlinerExtension , IDeletableExtension)"
  },
  {
    "label": "FFolderModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFolderModel(UMovieSceneFolder* InFolder)"
  },
  {
    "label": "FFolderModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFolderModel()"
  },
  {
    "label": "GetFolder()",
    "kind": "Method",
    "detail": "Function (UMovieSceneFolder*)",
    "insertText": "GetFolder()"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "BuildSidebarMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSidebarMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "OnTrackAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTrackAdded(UMovieSceneTrack* Track)"
  },
  {
    "label": "OnTrackRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTrackRemoved(UMovieSceneTrack* Track)"
  },
  {
    "label": "OnObjectBindingAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectBindingAdded(const FGuid& ObjectBinding)"
  },
  {
    "label": "OnObjectBindingRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectBindingRemoved(const FGuid& ObjectBinding)"
  },
  {
    "label": "OnChildFolderAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildFolderAdded(UMovieSceneFolder* Folder)"
  },
  {
    "label": "OnChildFolderRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildFolderRemoved(UMovieSceneFolder* Folder)"
  },
  {
    "label": "OnPostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostUndo()"
  },
  {
    "label": "GetOutlinerSizing()",
    "kind": "Method",
    "detail": "Function (FOutlinerSizing)",
    "insertText": "GetOutlinerSizing()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLabel()"
  },
  {
    "label": "GetIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIconBrush()"
  },
  {
    "label": "GetIconTint()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetIconTint()"
  },
  {
    "label": "GetLabelColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetLabelColor()"
  },
  {
    "label": "CreateOutlinerViewForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateOutlinerViewForColumn(const FCreateOutlinerViewParams& InParams, const FName& InColumnName)"
  },
  {
    "label": "GetTrackAreaParameters()",
    "kind": "Method",
    "detail": "Function (FTrackAreaParameters)",
    "insertText": "GetTrackAreaParameters()"
  },
  {
    "label": "GetTrackAreaModelList()",
    "kind": "Method",
    "detail": "Function (FViewModelVariantIterator)",
    "insertText": "GetTrackAreaModelList()"
  },
  {
    "label": "GetIdentifierForGrouping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetIdentifierForGrouping(TStringBuilder<128>& OutString)"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rename(const FText& NewName)"
  },
  {
    "label": "CanDrag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDrag()"
  },
  {
    "label": "SortChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortChildren()"
  },
  {
    "label": "GetSortingKey()",
    "kind": "Method",
    "detail": "Function (FSortingKey)",
    "insertText": "GetSortingKey()"
  },
  {
    "label": "SetCustomOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomOrder(int32 InCustomOrder)"
  },
  {
    "label": "CanAcceptDrop()",
    "kind": "Method",
    "detail": "Function (TOptional<EItemDropZone>)",
    "insertText": "CanAcceptDrop(const FViewModelPtr& TargetModel, const FDragDropEvent& DragDropEvent, EItemDropZone InItemDropZone)"
  },
  {
    "label": "PerformDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformDrop(const FViewModelPtr& TargetModel, const FDragDropEvent& DragDropEvent, EItemDropZone InItemDropZone)"
  },
  {
    "label": "CanDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDelete(FText* OutErrorMessage)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delete()"
  },
  {
    "label": "OnConstruct()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnConstruct()"
  },
  {
    "label": "SetFolderColor()",
    "kind": "Method",
    "detail": "Function (TMap<TWeakObjectPtr<UMovieSceneFolder>,FColor> InitialFolderColors ; bool bFolderPickerWasCancelled ; void)",
    "insertText": "SetFolderColor()"
  },
  {
    "label": "OnColorPickerPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerPicked(FLinearColor NewFolderColor)"
  },
  {
    "label": "OnColorPickerClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerClosed(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "OnColorPickerCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerCancelled(FLinearColor NewFolderColor)"
  },
  {
    "label": "RepopulateChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepopulateChildren()"
  },
  {
    "label": "PerformDropActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformDropActors(const FViewModelPtr& TargetModel, TSharedPtr<FActorDragDropOp> ActorDragDropEvent, TSharedPtr<FViewModel> AttachAfter)"
  },
  {
    "label": "PerformDropOutliner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformDropOutliner(const FViewModelPtr& TargetModel, TSharedPtr<FSequencerOutlinerDragDropOp> OutlinerDragDropEvent, TSharedPtr<FViewModel> AttachAfter)"
  }
]