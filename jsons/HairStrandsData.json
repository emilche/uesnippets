[
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FInstanceCullingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingManager"
  },
  {
    "label": "FHairGroupPublicData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHairGroupPublicData"
  },
  {
    "label": "FMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatch"
  },
  {
    "label": "FMeshBatchAndRelevance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatchAndRelevance"
  },
  {
    "label": "FHairStrandsTiles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsTiles"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FHairStrandsVisibilityData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsVisibilityData"
  },
  {
    "label": "FPackedVirtualVoxelNodeDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedVirtualVoxelNodeDesc"
  },
  {
    "label": "FHairStrandsVoxelResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsVoxelResources"
  },
  {
    "label": "FMinHairRadiusAtDepth1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinHairRadiusAtDepth1"
  },
  {
    "label": "FHairStrandsDeepShadowData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsDeepShadowData"
  },
  {
    "label": "FHairStrandsDeepShadowResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsDeepShadowResources"
  },
  {
    "label": "FHairStrandsMacroGroupResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsMacroGroupResources"
  },
  {
    "label": "FHairGroupPublicData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHairGroupPublicData"
  },
  {
    "label": "FHairStrandsMacroGroupData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsMacroGroupData"
  },
  {
    "label": "PrimitiveInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PrimitiveInfo"
  },
  {
    "label": "FHairStrandsDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsDebugData"
  },
  {
    "label": "ShadingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ShadingInfo"
  },
  {
    "label": "Sample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Sample"
  },
  {
    "label": "FPlotData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlotData"
  },
  {
    "label": "FPPLLData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPPLLData"
  },
  {
    "label": "FCullData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCullData"
  },
  {
    "label": "FBound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBound"
  },
  {
    "label": "FLight",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLight"
  },
  {
    "label": "FCommon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommon"
  },
  {
    "label": "FHairStrandsViewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsViewData"
  },
  {
    "label": "FDirectionalLightCullData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectionalLightCullData"
  },
  {
    "label": "FHairStrandsViewStateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsViewStateData"
  },
  {
    "label": "FPositionChangedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPositionChangedData"
  },
  {
    "label": "GetHairStrandsInstanceCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHairStrandsInstanceCommon(FRDGBuilder& GraphBuilder, const FViewInfo& ViewInfo, const FHairGroupPublicData* HairGroupPublicData, FHairStrandsInstanceCommonParameters& OutCommon)"
  },
  {
    "label": "GetHairStrandsInstanceResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHairStrandsInstanceResources(FRDGBuilder& GraphBuilder, const FViewInfo& ViewInfo, const FHairGroupPublicData* HairGroupPublicData, bool bForceRegister, FHairStrandsInstanceResourceParameters& OutResources)"
  },
  {
    "label": "GetHairStrandsInstanceCulling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHairStrandsInstanceCulling(FRDGBuilder& GraphBuilder, const FViewInfo& ViewInfo, const FHairGroupPublicData* HairGroupPublicData, bool bCullingEnable, FHairStrandsInstanceCullingParameters& OutCulling)"
  },
  {
    "label": "GetHairStrandsInstanceParameters()",
    "kind": "Method",
    "detail": "Function (FHairStrandsInstanceParameters)",
    "insertText": "GetHairStrandsInstanceParameters(FRDGBuilder& GraphBuilder, const FViewInfo& ViewInfo, const FHairGroupPublicData* HairGroupPublicData, bool bCullingEnable, bool bForceRegister)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(Type)"
  },
  {
    "label": "CreatePlotData()",
    "kind": "Method",
    "detail": "Function (FPlotData)",
    "insertText": "CreatePlotData(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRDGBuilder& GraphBuilder, const FPlotData& In, FWriteParameters& Out)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameters(FRDGBuilder& GraphBuilder, const FPlotData& In, FReadParameters& Out)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "EnqueuePositionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueuePositionsChanged(FRDGBuilder& GraphBuilder, FRDGBufferRef InBuffer)"
  },
  {
    "label": "ReadPositionsChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadPositionsChanged()"
  },
  {
    "label": "CreateDefaultHairStrandsViewUniformBuffer()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FHairStrandsViewUniformParameters>)",
    "insertText": "CreateDefaultHairStrandsViewUniformBuffer(FRDGBuilder& GraphBuilder, FViewInfo& View)"
  },
  {
    "label": "BindHairStrandsViewUniformParameters()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FHairStrandsViewUniformParameters>)",
    "insertText": "BindHairStrandsViewUniformParameters(const FViewInfo& View)"
  },
  {
    "label": "BindHairStrandsVoxelUniformParameters()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FVirtualVoxelParameters>)",
    "insertText": "BindHairStrandsVoxelUniformParameters(const FViewInfo& View)"
  },
  {
    "label": "HasViewHairStrandsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasViewHairStrandsData(const FViewInfo& View)"
  },
  {
    "label": "HasViewHairStrandsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasViewHairStrandsData(const TArray<FViewInfo>& Views)"
  },
  {
    "label": "HasViewHairStrandsVoxelData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasViewHairStrandsVoxelData(const FViewInfo& View)"
  },
  {
    "label": "HasPositionsChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPositionsChanged(FRDGBuilder& GraphBuilder, const FScene& Scene, const FViewInfo& View)"
  },
  {
    "label": "DrawHitProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawHitProxies(FRDGBuilder& GraphBuilder, const FScene& Scene, const FViewInfo& View, FInstanceCullingManager& InstanceCullingManager, FRDGTextureRef HitProxyTexture, FRDGTextureRef HitProxyDepthTexture)"
  },
  {
    "label": "DrawEditorSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawEditorSelection(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FIntRect& ViewportRect, FRDGTextureRef SelectionDepthTexture)"
  },
  {
    "label": "IsHairCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHairCompatible(const FMeshBatch* Mesh)"
  },
  {
    "label": "IsHairStrandsVF()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHairStrandsVF(const FMeshBatch* Mesh)"
  },
  {
    "label": "IsHairCardsVF()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHairCardsVF(const FMeshBatch* Mesh)"
  },
  {
    "label": "IsHairVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHairVisible(const FMeshBatchAndRelevance& MeshBatch, bool bCheckLengthScale)"
  },
  {
    "label": "HasHairInstanceInScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasHairInstanceInScene(const FScene& Scene)"
  },
  {
    "label": "HasHairCardsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasHairCardsVisible(const TArray<FViewInfo>& Views)"
  },
  {
    "label": "HasHairStrandsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasHairStrandsVisible(const TArray<FViewInfo>& Views)"
  },
  {
    "label": "AddVisibleShadowCastingLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVisibleShadowCastingLight(const FScene& Scene, TArray<FViewInfo>& Views, const FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "PostRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRender(FScene& Scene)"
  }
]