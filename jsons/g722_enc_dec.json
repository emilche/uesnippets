[
  {
    "label": "WebRtc_g722_encode_init()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_THIRD_PARTY_G722_G722_H_ # define MODULES_THIRD_PARTY_G722_G722_H_ # include<stddef . h> # include<stdint . h> # define WEBRTC_INT16_MAX 3 2 7 6 7 # define WEBRTC_INT16_MIN - 3 2 7 6 8 enum { G722_SAMPLE_RATE_8000 = 0 x0001,G722_PACKED = 0 x0002 } ; typedef struct { int itu_test_mode ; int packed ; int eight_k ; int bits_per_sample ; int x [ 2 4 ] ; struct { int s ; int sp ; int sz ; int r [ 3 ] ; int a [ 3 ] ; int ap [ 3 ] ; int p [ 3 ] ; int d [ 7 ] ; int b [ 7 ] ; int bp [ 7 ] ; int sg [ 7 ] ; int nb ; int det ; } band [ 2 ] ; unsigned int in_buffer ; int in_bits ; unsigned int out_buffer ; int out_bits ; } G722EncoderState ; typedef struct { int itu_test_mode ; int packed ; int eight_k ; int bits_per_sample ; int x [ 2 4 ] ; struct { int s ; int sp ; int sz ; int r [ 3 ] ; int a [ 3 ] ; int ap [ 3 ] ; int p [ 3 ] ; int d [ 7 ] ; int b [ 7 ] ; int bp [ 7 ] ; int sg [ 7 ] ; int nb ; int det ; } band [ 2 ] ; unsigned int in_buffer ; int in_bits ; unsigned int out_buffer ; int out_bits ; } G722DecoderState ; # ifdef __cplusplus \" C \" { # endif G722EncoderState*)",
    "insertText": "WebRtc_g722_encode_init(G722EncoderState* s, int rate, int options)"
  },
  {
    "label": "WebRtc_g722_encode_release()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtc_g722_encode_release(G722EncoderState* s)"
  },
  {
    "label": "WebRtc_g722_encode()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtc_g722_encode(G722EncoderState* s, uint8_t g722_data[], const int16_t amp[], size_t len)"
  },
  {
    "label": "WebRtc_g722_decode_init()",
    "kind": "Method",
    "detail": "Function (G722DecoderState*)",
    "insertText": "WebRtc_g722_decode_init(G722DecoderState* s, int rate, int options)"
  },
  {
    "label": "WebRtc_g722_decode_release()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "WebRtc_g722_decode_release(G722DecoderState* s)"
  },
  {
    "label": "WebRtc_g722_decode()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WebRtc_g722_decode(G722DecoderState* s, int16_t amp[], const uint8_t g722_data[], size_t len)"
  }
]