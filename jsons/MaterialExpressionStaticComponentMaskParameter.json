[
  {
    "label": "UMaterialExpressionStaticComponentMaskParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionStaticComponentMaskParameter"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MaterialExpressionIO . h \" # include \" Materials / MaterialExpressionParameter . h \" # include \" MaterialExpressionStaticComponentMaskParameter . generated . h \")",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITOR int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "GetParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetParameterValue(FMaterialParameterMetadata& OutMeta)"
  },
  {
    "label": "FMaterialParameterValue()",
    "kind": "Method",
    "detail": "Function (OutMeta . Value =)",
    "insertText": "FMaterialParameterValue(DefaultR, DefaultG, DefaultB, DefaultA)"
  },
  {
    "label": "SetParameterValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetParameterValue(const FName& Name, const FMaterialParameterMetadata& Meta, EMaterialExpressionSetParameterValueFlags Flags)"
  },
  {
    "label": "GenerateHLSLExpression()",
    "kind": "Method",
    "detail": "Function (Group = Meta . Group ; SortPriority = Meta . SortPriority ; } return true ; } } return false ; } bool)",
    "insertText": "GenerateHLSLExpression(FMaterialHLSLGenerator& Generator, UE::HLSLTree::FScope& Scope, int32 OutputIndex, UE::HLSLTree::FExpression const*& OutExpression)"
  },
  {
    "label": "SetParameterValue()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR bool)",
    "insertText": "SetParameterValue(FName InParameterName, bool InR, bool InG, bool InB, bool InA, FGuid InExpressionGuid, EMaterialExpressionSetParameterValueFlags Flags = EMaterialExpressionSetParameterValueFlags::None)"
  }
]