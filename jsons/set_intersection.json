[
  {
    "label": "_InIter1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InIter1"
  },
  {
    "label": "_InIter2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InIter2"
  },
  {
    "label": "_OutIter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_OutIter"
  },
  {
    "label": "__set_intersection_result",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__set_intersection_result"
  },
  {
    "label": "_AlgPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_AlgPolicy"
  },
  {
    "label": "_Compare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Compare"
  },
  {
    "label": "_Sent1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Sent1"
  },
  {
    "label": "_Sent2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Sent2"
  },
  {
    "label": "_InputIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator1"
  },
  {
    "label": "_InputIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator2"
  },
  {
    "label": "_OutputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_OutputIterator"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_SET_INTERSECTION_H # define _LIBCPP___ALGORITHM_SET_INTERSECTION_H # include<__algorithm / comp . h> # include<__algorithm / comp_ref_type . h> # include<__algorithm / iterator_operations . h> # include<__config> # include<__iterator / iterator_traits . h> # include<__iterator / next . h> # include<__utility / move . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "__set_intersection_result()",
    "kind": "Method",
    "detail": "Function (_InIter1 __in1_ ; _InIter2 __in2_ ; _OutIter __out_ ; _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17)",
    "insertText": "__set_intersection_result(_InIter1&& __in_iter1, _InIter2&& __in_iter2, _OutIter&& __out_iter) : __in1_(std::move(__in_iter1)), __in2_(std::move(__in_iter2)), __out_(std::move(__out_iter))"
  },
  {
    "label": "__set_intersection()",
    "kind": "Method",
    "detail": "Function (} } ; template<class _AlgPolicy,class _Compare,class _InIter1,class _Sent1,class _InIter2,class _Sent2,class _OutIter> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 __set_intersection_result<_InIter1,_InIter2,_OutIter>)",
    "insertText": "__set_intersection(_InIter1 __first1, _Sent1 __last1, _InIter2 __first2, _Sent2 __last2, _OutIter __result, _Compare&& __comp)"
  },
  {
    "label": "_OutIter()",
    "kind": "Method",
    "detail": "Function (* __result =* __first1 ; + + __result ; + + __first1 ; } + + __first2 ; } } return __set_intersection_result<_InIter1,_InIter2,)",
    "insertText": "_OutIter(_IterOps<_AlgPolicy>::next(std::move(__first1), std::move(__last1)), _IterOps<_AlgPolicy>::next(std::move(__first2), std::move(__last2)), std::move(__result))"
  },
  {
    "label": "set_intersection()",
    "kind": "Method",
    "detail": "Function (} template<class _InputIterator1,class _InputIterator2,class _OutputIterator,class _Compare> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 _OutputIterator)",
    "insertText": "set_intersection(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result, _Compare __comp)"
  },
  {
    "label": "_Comp_ref()",
    "kind": "Method",
    "detail": "Function (typedef __comp_ref_type<_Compare>::type _Comp_ref ; return std::__set_intersection<_ClassicAlgPolicy,)",
    "insertText": "_Comp_ref(std::move(__first1), std::move(__last1), std::move(__first2), std::move(__last2), std::move(__result), __comp)"
  },
  {
    "label": "set_intersection()",
    "kind": "Method",
    "detail": "Function (} template<class _InputIterator1,class _InputIterator2,class _OutputIterator> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 _OutputIterator)",
    "insertText": "set_intersection(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _OutputIterator __result)"
  }
]