[
  {
    "label": "ConstantFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantFolder"
  },
  {
    "label": "ConstantFolder()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_CONSTANTFOLDER_H # define LLVM_IR_CONSTANTFOLDER_H # include \" llvm / IR / Constants . h \" # include \" llvm / IR / InstrTypes . h \" namespace llvm { class ConstantFolder { public :)",
    "insertText": "ConstantFolder()"
  },
  {
    "label": "CreateAdd()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateAdd(Constant *LHS, Constant *RHS, bool HasNUW = false, bool HasNSW = false)"
  },
  {
    "label": "CreateFAdd()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFAdd(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateSub()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateSub(Constant *LHS, Constant *RHS, bool HasNUW = false, bool HasNSW = false)"
  },
  {
    "label": "CreateFSub()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFSub(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateMul()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateMul(Constant *LHS, Constant *RHS, bool HasNUW = false, bool HasNSW = false)"
  },
  {
    "label": "CreateFMul()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFMul(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateUDiv()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateUDiv(Constant *LHS, Constant *RHS, bool isExact = false)"
  },
  {
    "label": "CreateSDiv()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateSDiv(Constant *LHS, Constant *RHS, bool isExact = false)"
  },
  {
    "label": "CreateFDiv()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFDiv(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateURem()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateURem(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateSRem()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateSRem(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateFRem()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFRem(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateShl()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateShl(Constant *LHS, Constant *RHS, bool HasNUW = false, bool HasNSW = false)"
  },
  {
    "label": "CreateLShr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateLShr(Constant *LHS, Constant *RHS, bool isExact = false)"
  },
  {
    "label": "CreateAShr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateAShr(Constant *LHS, Constant *RHS, bool isExact = false)"
  },
  {
    "label": "CreateAnd()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateAnd(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateOr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateOr(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateXor()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateXor(Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateBinOp()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateBinOp(Instruction::BinaryOps Opc, Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateNeg()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateNeg(Constant *C, bool HasNUW = false, bool HasNSW = false)"
  },
  {
    "label": "CreateFNeg()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFNeg(Constant *C)"
  },
  {
    "label": "CreateNot()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateNot(Constant *C)"
  },
  {
    "label": "CreateGetElementPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateGetElementPtr(Type *Ty, Constant *C, ArrayRef<Constant *> IdxList)"
  },
  {
    "label": "CreateGetElementPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateGetElementPtr(Type *Ty, Constant *C, Constant *Idx)"
  },
  {
    "label": "CreateGetElementPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateGetElementPtr(Type *Ty, Constant *C, ArrayRef<Value *> IdxList)"
  },
  {
    "label": "CreateInBoundsGetElementPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateInBoundsGetElementPtr(Type *Ty, Constant *C, ArrayRef<Constant *> IdxList)"
  },
  {
    "label": "CreateInBoundsGetElementPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateInBoundsGetElementPtr(Type *Ty, Constant *C, Constant *Idx)"
  },
  {
    "label": "CreateInBoundsGetElementPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateInBoundsGetElementPtr(Type *Ty, Constant *C, ArrayRef<Value *> IdxList)"
  },
  {
    "label": "CreateCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateCast(Instruction::CastOps Op, Constant *C, Type *DestTy)"
  },
  {
    "label": "CreatePointerCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreatePointerCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreatePointerBitCastOrAddrSpaceCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreatePointerBitCastOrAddrSpaceCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateIntCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateIntCast(Constant *C, Type *DestTy, bool isSigned)"
  },
  {
    "label": "CreateFPCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFPCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateBitCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateBitCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateIntToPtr()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateIntToPtr(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreatePtrToInt()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreatePtrToInt(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateZExtOrBitCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateZExtOrBitCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateSExtOrBitCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateSExtOrBitCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateTruncOrBitCast()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateTruncOrBitCast(Constant *C, Type *DestTy)"
  },
  {
    "label": "CreateICmp()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateICmp(CmpInst::Predicate P, Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateFCmp()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateFCmp(CmpInst::Predicate P, Constant *LHS, Constant *RHS)"
  },
  {
    "label": "CreateSelect()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateSelect(Constant *C, Constant *True, Constant *False)"
  },
  {
    "label": "CreateExtractElement()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateExtractElement(Constant *Vec, Constant *Idx)"
  },
  {
    "label": "CreateInsertElement()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateInsertElement(Constant *Vec, Constant *NewElt, Constant *Idx)"
  },
  {
    "label": "CreateShuffleVector()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateShuffleVector(Constant *V1, Constant *V2, Constant *Mask)"
  },
  {
    "label": "CreateExtractValue()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateExtractValue(Constant *Agg, ArrayRef<unsigned> IdxList)"
  },
  {
    "label": "CreateInsertValue()",
    "kind": "Method",
    "detail": "Function (} Constant*)",
    "insertText": "CreateInsertValue(Constant *Agg, Constant *Val, ArrayRef<unsigned> IdxList)"
  }
]