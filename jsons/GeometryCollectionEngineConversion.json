[
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UGeometryCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGeometryCollection"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UGeometryCollectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGeometryCollectionComponent"
  },
  {
    "label": "FGeometryCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollection"
  },
  {
    "label": "FManagedArrayCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManagedArrayCollection"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "FSkeletalMeshLODRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshLODRenderData"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FGeometryCollectionEngineConversion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionEngineConversion"
  },
  {
    "label": "FSkeletalMeshToCollectionConversionParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshToCollectionConversionParameters"
  },
  {
    "label": "AppendMaterials()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GeometryCollectionObject . h \" # include \" Engine / World . h \" class UStaticMesh ; class USkeletalMesh ; class USkeleton ; class USkeletalMeshComponent ; class UGeometryCollection ; class UMaterialInterface ; class UGeometryCollectionComponent ; class FGeometryCollection ; struct FManagedArrayCollection ; class UBodySetup ; class FSkeletalMeshLODRenderData ; struct FMeshDescription ; typedef TTuple<const UStaticMesh*,const UStaticMeshComponent*,FTransform> GeometryCollectionStaticMeshConversionTuple ; typedef TTuple<const USkeletalMesh*,const USkeletalMeshComponent*,FTransform> GeometryCollectionSkeletalMeshConversionTuple ; class FGeometryCollectionEngineConversion { public : struct FSkeletalMeshToCollectionConversionParameters { bool bParentAllBonesUnderNewRoot = true ; } ; int32)",
    "insertText": "AppendMaterials(const TArray<UMaterialInterface*>& Materials, UGeometryCollection* GeometryCollectionObject, bool bAddInteriorCopy)"
  },
  {
    "label": "AppendAutoInstanceMeshIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendAutoInstanceMeshIndices(UGeometryCollection* GeometryCollectionObject, int32 FromTransformIndex, const UStaticMesh* StaticMesh, const TArray<UMaterialInterface*>& Materials)"
  },
  {
    "label": "AppendMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendMeshDescription(const FMeshDescription* MeshDescription, const FString& Name, int32 StartMaterialIndex, const FTransform& StaticMeshTransform, FGeometryCollection* GeometryCollection, UBodySetup* BodySetup = nullptr, bool bReindexMaterials = true, bool bAddInternalMaterials = true, bool bSetInternalFromMaterialIndex = false)"
  },
  {
    "label": "GetMaxResMeshDescriptionWithNormalsAndTangents()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "GetMaxResMeshDescriptionWithNormalsAndTangents(const UStaticMesh* StaticMesh)"
  },
  {
    "label": "AppendStaticMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendStaticMesh(const UStaticMesh* StaticMesh, const TArray<UMaterialInterface*>& Materials, const FTransform& StaticMeshTransform, UGeometryCollection* GeometryCollectionObject, bool bReindexMaterials = true, bool bAddInternalMaterials = true, bool bSplitComponents = false, bool bSetInternalFromMaterialIndex = false)"
  },
  {
    "label": "AppendStaticMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendStaticMesh(const UStaticMesh* StaticMesh, int32 StartMaterialIndex, const FTransform& StaticMeshTransform, FGeometryCollection* GeometryCollection, bool bReindexMaterials = true, bool bAddInternalMaterials = true, bool bSplitComponents = false, bool bSetInternalFromMaterialIndex = false)"
  },
  {
    "label": "AppendStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendStaticMesh(const UStaticMesh* StaticMesh, const UStaticMeshComponent *StaticMeshComponent, const FTransform& StaticMeshTransform, UGeometryCollection* GeometryCollection, bool bReindexMaterials = true, bool bAddInternalMaterials = true, bool bSplitComponents = false, bool bSetInternalFromMaterialIndex = false)"
  },
  {
    "label": "AppendSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSkeletalMesh(const USkeletalMesh* SkeletalMesh, const USkeletalMeshComponent *SkeletalMeshComponent, const FTransform& SkeletalMeshTransform, UGeometryCollection* GeometryCollection, bool bReindexMaterials = true)"
  },
  {
    "label": "AppendSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendSkeletalMesh(const USkeletalMesh* SkeletalMesh, int32 MaterialStartIndex, const FTransform& SkeletalMeshTransform, FManagedArrayCollection* InCollection, bool bReindexMaterials = true, bool bImportTransformOnly = false)"
  },
  {
    "label": "AppendSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSkeleton(const USkeleton* Skeleton, const FTransform& SkeletalMeshTransform, FManagedArrayCollection* InCollection)"
  },
  {
    "label": "AppendSkeletalMeshMaterials()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AppendSkeletalMeshMaterials(const USkeletalMesh* SkeletalMesh, const USkeletalMeshComponent* SkeletalMeshComponent, UGeometryCollection* GeometryCollectionObject)"
  },
  {
    "label": "GetSkeletalMeshLOD()",
    "kind": "Method",
    "detail": "Function (const FSkeletalMeshLODRenderData*)",
    "insertText": "GetSkeletalMeshLOD(const USkeletalMesh* SkeletalMesh, int32 LOD)"
  },
  {
    "label": "AppendGeometryCollectionMaterials()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AppendGeometryCollectionMaterials(const UGeometryCollection* SourceGeometryCollection, const UGeometryCollectionComponent* GeometryCollectionComponent, UGeometryCollection* TargetGeometryCollectionObject)"
  },
  {
    "label": "AppendGeometryCollectionInstancedMeshes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendGeometryCollectionInstancedMeshes(const UGeometryCollection* SourceGeometryCollectionObject, UGeometryCollection* TargetGeometryCollectionObject, int32 TargetTransformStartIndex)"
  },
  {
    "label": "AppendGeometryCollection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendGeometryCollection(const FGeometryCollection* SourceGeometryCollection, int32 MaterialStartIndex, const FTransform& GeometryCollectionTransform, FGeometryCollection* TargetGeometryCollection, bool bReindexMaterials = true)"
  },
  {
    "label": "AppendGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendGeometryCollection(const UGeometryCollection* SourceGeometryCollection, const TArray<UMaterialInterface*>& Materials, const FTransform& GeometryCollectionTransform, UGeometryCollection* TargetGeometryCollectionObject, bool ReindexMaterials = true)"
  },
  {
    "label": "AppendGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendGeometryCollection(const UGeometryCollection* SourceGeometryCollection, const UGeometryCollectionComponent* GeometryCollectionComponent, const FTransform& GeometryCollectionTransform, UGeometryCollection* TargetGeometryCollectionObject, bool ReindexMaterials = true)"
  },
  {
    "label": "AppendGeometryCollectionSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendGeometryCollectionSource(const FGeometryCollectionSource& GeometryCollectionSource, FGeometryCollection& GeometryCollectionInOut, TArray<UMaterial*>& MaterialsInOut, bool ReindexMaterials = true)"
  },
  {
    "label": "AppendGeometryCollectionSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendGeometryCollectionSource(const FGeometryCollectionSource& GeometryCollectionSource, FGeometryCollection& GeometryCollectionInOut, TArray<UMaterialInterface*>& MaterialInstancesInOut, bool ReindexMaterials = true)"
  },
  {
    "label": "ConvertStaticMeshToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertStaticMeshToGeometryCollection(const TObjectPtr<UStaticMesh> StaticMesh, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterial>>& OutMaterials, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes, bool bSetInternalFromMaterialIndex = true, bool bSplitComponents = false)"
  },
  {
    "label": "ConvertStaticMeshToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertStaticMeshToGeometryCollection(const TObjectPtr<UStaticMesh> StaticMesh, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterialInterface>>& OutMaterialInstances, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes, bool bSetInternalFromMaterialIndex = true, bool bSplitComponents = false)"
  },
  {
    "label": "ConvertStaticMeshToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertStaticMeshToGeometryCollection(const TObjectPtr<UStaticMesh> StaticMesh, const FTransform& MeshTransform, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterialInterface>>& OutMaterialInstances, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes, bool bSetInternalFromMaterialIndex = true, bool bSplitComponents = false)"
  },
  {
    "label": "ConvertGeometryCollectionToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertGeometryCollectionToGeometryCollection(const TObjectPtr<UGeometryCollection> InGeometryCollectionAssetPtr, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterial>>& OutMaterials, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes)"
  },
  {
    "label": "ConvertGeometryCollectionToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertGeometryCollectionToGeometryCollection(const TObjectPtr<UGeometryCollection> InGeometryCollectionAssetPtr, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterialInterface>>& OutMaterialInstances, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes)"
  },
  {
    "label": "ConvertActorToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertActorToGeometryCollection(const AActor* Actor, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterial>>& OutMaterials, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes, const FSkeletalMeshToCollectionConversionParameters& ConversionParameters, bool bSplitComponents = false)"
  },
  {
    "label": "ConvertActorToGeometryCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertActorToGeometryCollection(const AActor* Actor, FManagedArrayCollection& OutCollection, TArray<TObjectPtr<UMaterialInterface>>& OutMaterialInstances, TArray<FGeometryCollectionAutoInstanceMesh>& OutInstancedMeshes, const FSkeletalMeshToCollectionConversionParameters& ConversionParameters, bool bSplitComponents = false)"
  },
  {
    "label": "ConvertCollectionToSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertCollectionToSkeleton(const FManagedArrayCollection& InCollection, USkeleton* OutSkeleton, TArray<int32>& OutIndexRemap)"
  },
  {
    "label": "GetMaterialsFromInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterialsFromInstances(const TArray<TObjectPtr<UMaterialInterface>>& MaterialInstances, TArray<TObjectPtr<UMaterial>>& OutMaterials)"
  },
  {
    "label": "AppendGeometryCollectionSourceNoMaterial()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "AppendGeometryCollectionSourceNoMaterial(const FGeometryCollectionSource& GeometryCollectionSource, FGeometryCollection& GeometryCollectionInOut, int32 StartMaterialIndex, bool ReindexMaterials = true)"
  }
]