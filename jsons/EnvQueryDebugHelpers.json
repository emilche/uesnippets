[
  {
    "label": "FTestData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTestData"
  },
  {
    "label": "UEnvQueryDebugHelpers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryDebugHelpers"
  },
  {
    "label": "FLogCategoryBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogCategoryBase"
  },
  {
    "label": "FItemData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FItemData"
  },
  {
    "label": "FTestData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTestData"
  },
  {
    "label": "filled",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "filled"
  },
  {
    "label": "FDebugHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugHelper"
  },
  {
    "label": "FQueryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueryData"
  },
  {
    "label": "UEnvQueryDebugHelpers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryDebugHelpers"
  },
  {
    "label": "QueryToDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryToDebugData(FEnvQueryInstance& Query, EQSDebug::FQueryData& EQSLocalData, int32 MaxItemsToStore = 10)"
  },
  {
    "label": "QueryToBlobArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryToBlobArray(FEnvQueryInstance& Query, TArray<uint8>& BlobArray, bool bUseCompression = false)"
  },
  {
    "label": "DebugDataToBlobArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugDataToBlobArray(EQSDebug::FQueryData& QueryData, TArray<uint8>& BlobArray, bool bUseCompression = false)"
  },
  {
    "label": "BlobArrayToDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlobArrayToDebugData(const TArray<uint8>& BlobArray, EQSDebug::FQueryData& EQSLocalData, bool bUseCompression = false)"
  },
  {
    "label": "LogQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogQuery(FEnvQueryInstance& Query, const FLogCategoryBase& Category, ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "LogQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogQuery(FEnvQueryInstance& Query, const FName& CategoryName, ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "LogQueryInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogQueryInternal(FEnvQueryInstance& Query, const FName& CategoryName, ELogVerbosity::Type Verbosity, double TimeSeconds, FVisualLogEntry *CurrentEntry)"
  }
]