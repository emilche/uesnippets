[
  {
    "label": "FAnalyticsEventAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalyticsEventAttribute"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FEditorAnalytics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorAnalytics"
  },
  {
    "label": "ReportEvent()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FAnalyticsEventAttribute ; namespace EAnalyticsErrorCodes { enum Type { UATNotFound = - 1,Success = 0,Unknown = 1,Arguments = 2,UnknownCommand = 3,SDKNotFound = 1 0,ProvisionNotFound = 1 1,CertificateNotFound = 1 2,ManifestNotFound = 1 4,KeyNotFound = 1 5,ProvisionExpired = 1 6,CertificateExpired = 1 7,CertificateProvisionMismatch = 1 8,CodeUnsupported = 1 9,PluginsUnsupported = 2 0,UnknownCookFailure = 2 5,UnknownDeployFailure = 2 6,UnknownBuildFailure = 2 7,UnknownPackageFailure = 2 8,UnknownLaunchFailure = 2 9,StageMissingFile = 3 0,FailedToCreateIPA = 3 1,FailedToCodeSign = 3 2,DeviceBackupFailed = 3 3,AppUninstallFailed = 3 4,AppInstallFailed = 3 5,AppNotFound = 3 6,StubNotSignedCorrectly = 3 7,IPAMissingInfoPList = 3 8,DeleteFile = 3 9,DeleteDirectory = 4 0,CreateDirectory = 4 1,CopyFile = 4 2,OnlyOneObbFileSupported = 5 0,FailureGettingPackageInfo = 5 1,OnlyOneTargetConfigurationSupported = 5 2,ObbNotFound = 5 3,AndroidBuildToolsPathNotFound = 5 4,NoApkSuitableForArchitecture = 5 5,FilesInstallFailed = 5 6,RemoteCertificatesNotFound = 5 7,LauncherFailed = 1 0 0,UATLaunchFailure = 1 0 1,FailedToDeleteStagingDirectory = 1 0 2,MissingExecutable = 1 0 3,DeviceNotSetupForDevelopment = 1 5 0,DeviceOSNewerThanSDK = 1 5 1,TestFailure = 1 5 2,SymbolizedSONotFound = 1 5 3,LicenseNotAccepted = 1 5 4,AndroidOBBError = 1 5 5,SDKInstallFailed = 2 0 0,DeviceUpdateFailed = 2 0 1,} ; } ; class FEditorAnalytics { public : void)",
    "insertText": "ReportEvent(FString EventName, FString PlatformName, bool bHasCode)"
  },
  {
    "label": "ReportEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportEvent(FString EventName, FString PlatformName, bool bHasCode, const TArray<FAnalyticsEventAttribute>& ExtraParams)"
  },
  {
    "label": "ReportEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportEvent(FString EventName, FString PlatformName, bool bHasCode, int32 ErrorCode, TArray<FAnalyticsEventAttribute>& ExtraParams)"
  },
  {
    "label": "ReportBuildRequirementsFailure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportBuildRequirementsFailure(FString EventName, FString PlatformName, bool bHasCode, int32 Requirements)"
  },
  {
    "label": "TranslateErrorCode()",
    "kind": "Method",
    "detail": "Function (public : FString)",
    "insertText": "TranslateErrorCode(int32 ErrorCode)"
  },
  {
    "label": "ShouldElevateMessageThroughDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldElevateMessageThroughDialog(const int32 ErrorCode)"
  }
]