[
  {
    "label": "BMK_timedFnState_s",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BMK_timedFnState_s"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef BENCH_FN_H_23876 # define BENCH_FN_H_23876 # include<stddef . h> typedef struct { double nanoSecPerRun ; size_t sumOfReturn ; } BMK_runTime_t ; typedef struct { BMK_runTime_t internal_never_ever_use_directly ; size_t error_result_never_ever_use_directly ; int error_tag_never_ever_use_directly ; } BMK_runOutcome_t ; typedef)",
    "insertText": "size_t(*BMK_benchFn_t)(const void* src, size_t srcSize, void* dst, size_t dstCapacity, void* customPayload)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "size_t(*BMK_initFn_t)(void* initPayload)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "unsigned(*BMK_errorFn_t)(size_t)"
  },
  {
    "label": "BMK_benchFunction()",
    "kind": "Method",
    "detail": "Function (typedef struct { BMK_benchFn_t benchFn ; void* benchPayload ; BMK_initFn_t initFn ; void* initPayload ; BMK_errorFn_t errorFn ; size_t blockCount ; const void* const* srcBuffers ; const size_t* srcSizes ; void* const* dstBuffers ; const size_t* dstCapacities ; size_t* blockResults ; } BMK_benchParams_t ; BMK_runOutcome_t)",
    "insertText": "BMK_benchFunction(BMK_benchParams_t params, unsigned nbLoops)"
  },
  {
    "label": "BMK_isSuccessful_runOutcome()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BMK_isSuccessful_runOutcome(BMK_runOutcome_t outcome)"
  },
  {
    "label": "BMK_extract_runTime()",
    "kind": "Method",
    "detail": "Function (BMK_runTime_t)",
    "insertText": "BMK_extract_runTime(BMK_runOutcome_t outcome)"
  },
  {
    "label": "BMK_extract_errorResult()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "BMK_extract_errorResult(BMK_runOutcome_t outcome)"
  },
  {
    "label": "BMK_benchTimedFn()",
    "kind": "Method",
    "detail": "Function (typedef struct BMK_timedFnState_s BMK_timedFnState_t ; BMK_runOutcome_t)",
    "insertText": "BMK_benchTimedFn(BMK_timedFnState_t* timedFnState, BMK_benchParams_t params)"
  },
  {
    "label": "BMK_isCompleted_TimedFn()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BMK_isCompleted_TimedFn(const BMK_timedFnState_t* timedFnState)"
  },
  {
    "label": "BMK_createTimedFnState()",
    "kind": "Method",
    "detail": "Function (BMK_timedFnState_t*)",
    "insertText": "BMK_createTimedFnState(unsigned total_ms, unsigned run_ms)"
  },
  {
    "label": "BMK_resetTimedFnState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BMK_resetTimedFnState(BMK_timedFnState_t* timedFnState, unsigned total_ms, unsigned run_ms)"
  },
  {
    "label": "BMK_freeTimedFnState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BMK_freeTimedFnState(BMK_timedFnState_t* state)"
  },
  {
    "label": "BMK_initStatic_timedFnState()",
    "kind": "Method",
    "detail": "Function (# define BMK_TIMEDFNSTATE_SIZE 6 4 typedef union { char never_access_space [ BMK_TIMEDFNSTATE_SIZE ] ; long long alignment_enforcer ; } BMK_timedFnState_shell ; BMK_timedFnState_t*)",
    "insertText": "BMK_initStatic_timedFnState(void* buffer, size_t size, unsigned total_ms, unsigned run_ms)"
  }
]