[
  {
    "label": "LiveInterval",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveInterval"
  },
  {
    "label": "LiveIntervals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveIntervals"
  },
  {
    "label": "MachineBlockFrequencyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineBlockFrequencyInfo"
  },
  {
    "label": "MachineLoopInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineLoopInfo"
  },
  {
    "label": "VirtRegAuxInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VirtRegAuxInfo"
  },
  {
    "label": "normalizeSpillWeight()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_CALCSPILLWEIGHTS_H # define LLVM_CODEGEN_CALCSPILLWEIGHTS_H # include \" llvm / ADT / DenseMap . h \" # include \" llvm / CodeGen / SlotIndexes . h \" namespace llvm { class LiveInterval ; class LiveIntervals ; class MachineBlockFrequencyInfo ; class MachineLoopInfo ; float)",
    "insertText": "normalizeSpillWeight(float UseDefFreq, unsigned Size, unsigned NumInstr)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (} class VirtRegAuxInfo { public : typedef)",
    "insertText": "float(*NormalizingFn)(float, unsigned, unsigned)"
  },
  {
    "label": "VirtRegAuxInfo()",
    "kind": "Method",
    "detail": "Function (private : MachineFunction& MF ; LiveIntervals& LIS ; const MachineLoopInfo& Loops ; const MachineBlockFrequencyInfo& MBFI ; DenseMap<unsigned,float> Hint ; NormalizingFn normalize ; public :)",
    "insertText": "VirtRegAuxInfo(MachineFunction &mf, LiveIntervals &lis, const MachineLoopInfo &loops, const MachineBlockFrequencyInfo &mbfi, NormalizingFn norm = normalizeSpillWeight) : MF(mf), LIS(lis), Loops(loops), MBFI(mbfi), normalize(norm)"
  },
  {
    "label": "calculateSpillWeightAndHint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "calculateSpillWeightAndHint(LiveInterval &li)"
  },
  {
    "label": "calculateSpillWeightsAndHints()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "calculateSpillWeightsAndHints(LiveIntervals &LIS, MachineFunction &MF, const MachineLoopInfo &MLI, const MachineBlockFrequencyInfo &MBFI, VirtRegAuxInfo::NormalizingFn norm = normalizeSpillWeight)"
  }
]