[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "HHitProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HHitProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SKELETALMESHUTILITIESCOMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SKELETALMESHUTILITIESCOMMON_API"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Delegates / DelegateCombinations . h \" # include \" Delegates / Delegate . h \" # include \" Containers / Array . h \" class FName ; class HHitProxy ; enum class ESkeletalMeshNotifyType { BonesAdded,BonesRemoved,BonesMoved,BonesSelected,BonesRenamed,HierarchyChanged } ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FSkeletalMeshNotifyDelegate, const TArray<FName>& , const ESkeletalMeshNotifyType)"
  },
  {
    "label": "ISkeletalMeshNotifier()",
    "kind": "Method",
    "detail": "Function (class ISkeletalMeshNotifier { public :)",
    "insertText": "ISkeletalMeshNotifier()"
  },
  {
    "label": "Delegate()",
    "kind": "Method",
    "detail": "Function (FSkeletalMeshNotifyDelegate&)",
    "insertText": "Delegate()"
  },
  {
    "label": "HandleNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNotification(const TArray<FName>& BoneNames, const ESkeletalMeshNotifyType InNotifyType)"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify(const TArray<FName>& BoneNames, const ESkeletalMeshNotifyType InNotifyType)"
  },
  {
    "label": "Notifying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Notifying()"
  },
  {
    "label": "ISkeletalMeshEditorBinding()",
    "kind": "Method",
    "detail": "Function (private : FSkeletalMeshNotifyDelegate NotifyDelegate ; bool bNotifying = false ; } ; class ISkeletalMeshEditorBinding { public :)",
    "insertText": "ISkeletalMeshEditorBinding()"
  },
  {
    "label": "GetNotifier()",
    "kind": "Method",
    "detail": "Function (ISkeletalMeshNotifier&)",
    "insertText": "GetNotifier()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (using NameFunction = TFunction<TOptional<)",
    "insertText": "FName(HHitProxy*)"
  },
  {
    "label": "GetNameFunction()",
    "kind": "Method",
    "detail": "Function (NameFunction)",
    "insertText": "GetNameFunction()"
  },
  {
    "label": "GetSelectedBones()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetSelectedBones()"
  }
]