[
  {
    "label": "SSessionBrowserTreeSessionRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSessionBrowserTreeSessionRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" Misc / Attribute . h \" # include \" InputCoreTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Layout / Margin . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / Layout / SBox . h \" # include \" Widgets / Views / SExpanderArrow . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Widgets / Views / SListView . h \" # include \" Misc / App . h \" # include \" SlateOptMacros . h \" # include \" Styling / AppStyle . h \" # include \" Models / SessionBrowserTreeItems . h \" # define LOCTEXT_NAMESPACE \" SSessionBrowserTreeRow \" class SSessionBrowserTreeSessionRow : public STableRow<TSharedPtr<FSessionBrowserSessionTreeItem>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSessionBrowserTreeSessionRow)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FText, HighlightText) SLATE_ARGUMENT(TSharedPtr<STableViewBase>, OwnerTableView) SLATE_ARGUMENT(TSharedPtr<FSessionBrowserSessionTreeItem>, Item) SLATE_END_ARGS() public: BEGIN_SLATE_FUNCTION_BUILD_OPTIMIZATION void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "Padding()",
    "kind": "Method",
    "detail": "Function (HighlightText = InArgs . _HighlightText ; Item = InArgs . _Item ; ChildSlot .)",
    "insertText": "Padding(0.0f, 2.0f, 0.0f, 0.0f) [ SNew(SBox) .Padding(FMargin(0.0f, 3.0f, 16.0f, 3.0f)) .ToolTipText(this, &SSessionBrowserTreeSessionRow::HandleBorderToolTipText) [ SNew(SHorizontalBox) + SHorizontalBox::Slot() .AutoWidth() .VAlign(VAlign_Center) .Padding(2.0f, 2.0f, 2.0f, 2.0f) [ SNew(SExpanderArrow, SharedThis(this)) .IndentAmount(0.0f) ] + SHorizontalBox::Slot() .FillWidth(1.0f) .VAlign(VAlign_Center) [ SNew(STextBlock) .Text(this, &SSessionBrowserTreeSessionRow::HandleSessionNameText) .Font(FAppStyle::GetFontStyle(\"PropertyWindow.NormalFont\"))"
  },
  {
    "label": "ConstructInternal()",
    "kind": "Method",
    "detail": "Function (STableRow<TSharedPtr<FSessionBrowserSessionTreeItem>)",
    "insertText": "ConstructInternal(STableRow<TSharedPtr<FSessionBrowserSessionTreeItem>>::FArguments() .ShowSelection(false) .Style(FAppStyle::Get(), \"TableView.Row\"), InOwnerTableView)"
  },
  {
    "label": "SanitizeSessionName()",
    "kind": "Method",
    "detail": "Function (} END_SLATE_FUNCTION_BUILD_OPTIMIZATION protected : FText)",
    "insertText": "SanitizeSessionName(const TSharedPtr<ISessionInfo>& SessionInfo)"
  },
  {
    "label": "GetSessionName()",
    "kind": "Method",
    "detail": "Function (const FString& SessionName = SessionInfo ->)",
    "insertText": "GetSessionName()"
  },
  {
    "label": "GetSessionOwner()",
    "kind": "Method",
    "detail": "Function (const FString& SessionOwner = SessionInfo ->)",
    "insertText": "GetSessionOwner()"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "FromString(SessionName)"
  },
  {
    "label": "GetInstances()",
    "kind": "Method",
    "detail": "Function (} TArray<TSharedPtr<ISessionInstanceInfo>> Instances ; SessionInfo ->)",
    "insertText": "GetInstances(Instances)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<ISessionInstanceInfo>& FirstInstance = Instances [ 0 ] ;)",
    "insertText": "if((Instances.Num() == 1) && FApp::IsThisInstance(FirstInstance->GetInstanceId()))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "if(SessionInfo->GetSessionOwner() != FPlatformProcess::UserName(false))"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "LOCTEXT(\"UnnamedSessionText\", \"Unnamed\")"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (} protected : FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "ToggleExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpansion()"
  },
  {
    "label": "Unhandled()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "Unhandled()"
  },
  {
    "label": "HandleBorderBackgroundImage()",
    "kind": "Method",
    "detail": "Function (} } private : const FSlateBrush*)",
    "insertText": "HandleBorderBackgroundImage()"
  },
  {
    "label": "GetBrush()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "GetBrush(\"Brushes.Header\")"
  },
  {
    "label": "HandleBorderToolTipText()",
    "kind": "Method",
    "detail": "Function (} } FText)",
    "insertText": "HandleBorderToolTipText()"
  },
  {
    "label": "GetSessionInfo()",
    "kind": "Method",
    "detail": "Function (FTextBuilder ToolTipTextBuilder ; TSharedPtr<ISessionInfo> SessionInfo = Item ->)",
    "insertText": "GetSessionInfo()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const FCoreTexts& CoreTexts =)",
    "insertText": "Get()"
  },
  {
    "label": "AppendLineFormat()",
    "kind": "Method",
    "detail": "Function (ToolTipTextBuilder .)",
    "insertText": "AppendLineFormat(LOCTEXT(\"SessionToolTipSessionId\", \"Session ID: {0}\"), FText::FromString(SessionInfo->GetSessionId().ToString(EGuidFormats::DigitsWithHyphensInBraces)))"
  },
  {
    "label": "AppendLine()",
    "kind": "Method",
    "detail": "Function (ToolTipTextBuilder .)",
    "insertText": "AppendLine()"
  },
  {
    "label": "AppendLineFormat()",
    "kind": "Method",
    "detail": "Function (ToolTipTextBuilder .)",
    "insertText": "AppendLineFormat(LOCTEXT(\"SessionToolTipNumInstances\", \"Total Instances: {0}\"), FText::AsNumber(SessionInfo->GetNumInstances()))"
  },
  {
    "label": "AppendLineFormat()",
    "kind": "Method",
    "detail": "Function (ToolTipTextBuilder .)",
    "insertText": "AppendLineFormat(LOCTEXT(\"SessionToolTipIsStandalone\", \"Is Standalone: {0}\"), SessionInfo->IsStandalone() ? CoreTexts.Yes : CoreTexts.No)"
  },
  {
    "label": "AppendLineFormat()",
    "kind": "Method",
    "detail": "Function (ToolTipTextBuilder .)",
    "insertText": "AppendLineFormat(LOCTEXT(\"SessionToolTipLastUpdateTime\", \"Last Update Time: {0}\"), FText::AsDateTime(SessionInfo->GetLastUpdateTime()))"
  },
  {
    "label": "ToText()",
    "kind": "Method",
    "detail": "Function (} return ToolTipTextBuilder .)",
    "insertText": "ToText()"
  },
  {
    "label": "HandleSessionNameText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "HandleSessionNameText()"
  }
]