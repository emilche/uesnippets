[
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FAnimSegment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimSegment"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FAnimMontageSegmentDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimMontageSegmentDetails"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "SAnimationSegmentViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationSegmentViewport"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "so",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "so"
  },
  {
    "label": "SAnimationSegmentScrubPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationSegmentScrubPanel"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "SScrubControlPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrubControlPanel"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "FAnimationSegmentViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationSegmentViewportClient"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "SetAnimationAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimationAsset(const FAssetData& InAssetData)"
  },
  {
    "label": "OnStartTimeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartTimeChanged(float InValue, ETextCommit::Type InCommitType, bool bInteractive = false)"
  },
  {
    "label": "OnEndTimeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndTimeChanged(float InValue, ETextCommit::Type InCommitType, bool bInteractive = false)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnValueChanged, float, bool)"
  },
  {
    "label": "SAnimationSegmentViewport()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SAnimationSegmentViewport()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "InitSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSkeleton()"
  },
  {
    "label": "CleanupComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupComponent(USceneComponent* Component)"
  },
  {
    "label": "OnBarDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBarDrag(int32 index, float newPos, bool bInteractive)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "ReplaceLockedSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceLockedSequence(class UAnimSequenceBase * NewLockedSequence)"
  },
  {
    "label": "OnClick_Forward()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClick_Forward()"
  },
  {
    "label": "AnimChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnimChanged(UAnimationAsset * AnimAsset)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueChanged(float NewValue)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSliderMovement(float NewValue)"
  },
  {
    "label": "FAnimationSegmentViewportClient()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FAnimationSegmentViewportClient(FAdvancedPreviewScene& InPreviewScene, const TWeakPtr<SEditorViewport>& InEditorViewportWidget = nullptr)"
  },
  {
    "label": "UpdateLighting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLighting()"
  }
]