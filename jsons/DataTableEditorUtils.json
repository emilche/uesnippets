[
  {
    "label": "FDataTableEditorColumnHeaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataTableEditorColumnHeaderData"
  },
  {
    "label": "FDataTableEditorRowListViewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataTableEditorRowListViewData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDataTableEditorUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataTableEditorUtils"
  },
  {
    "label": "FDataTableEditorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataTableEditorManager"
  },
  {
    "label": "ListenerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListenerType"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FDataTableEditorManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / DataTable . h \" # include \" Kismet2 / ListenerManager . h \" # include \" Widgets / SWidget . h \" # include \" Framework / Commands / UIAction . h \" # include \" AssetRegistry / AssetData . h \" struct FDataTableEditorColumnHeaderData { FName ColumnId ; FText DisplayName ; float DesiredColumnWidth ; const FProperty* Property ; } ; struct FDataTableEditorRowListViewData { FName RowId ; FText DisplayName ; float DesiredRowHeight ; uint32 RowNum ; TArray<FText> CellData ; } ; typedef TSharedPtr<FDataTableEditorColumnHeaderData> FDataTableEditorColumnHeaderDataPtr ; typedef TSharedPtr<FDataTableEditorRowListViewData> FDataTableEditorRowListViewDataPtr ; enum class ERowInsertionPosition { Above,Below,Bottom,} ; struct FDataTableEditorUtils { enum class EDataTableChangeInfo { RowData,RowList,} ; enum class ERowMoveDirection { Up,Down,} ; class FDataTableEditorManager : public FListenerManager<UDataTable,EDataTableChangeInfo> {)",
    "insertText": "FDataTableEditorManager()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} public : FDataTableEditorManager&)",
    "insertText": "Get()"
  },
  {
    "label": "SelectionChange()",
    "kind": "Method",
    "detail": "Function (class ListenerType : public InnerListenerType<FDataTableEditorManager> { public : void)",
    "insertText": "SelectionChange(const UDataTable* DataTable, FName RowName)"
  },
  {
    "label": "RemoveRow()",
    "kind": "Method",
    "detail": "Function (} } ; } ; typedef FDataTableEditorManager::ListenerType INotifyOnDataTableChanged ; bool)",
    "insertText": "RemoveRow(UDataTable* DataTable, FName Name)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (uint8*)",
    "insertText": "AddRow(UDataTable* DataTable, FName RowName)"
  },
  {
    "label": "DuplicateRow()",
    "kind": "Method",
    "detail": "Function (uint8*)",
    "insertText": "DuplicateRow(UDataTable* DataTable, FName SourceRowName, FName RowName)"
  },
  {
    "label": "RenameRow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameRow(UDataTable* DataTable, FName OldName, FName NewName)"
  },
  {
    "label": "MoveRow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveRow(UDataTable* DataTable, FName RowName, ERowMoveDirection Direction, int32 NumRowsToMoveBy = 1)"
  },
  {
    "label": "SelectRow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectRow(const UDataTable* DataTable, FName RowName)"
  },
  {
    "label": "DiffersFromDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DiffersFromDefault(UDataTable* DataTable, FName RowName)"
  },
  {
    "label": "ResetToDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResetToDefault(UDataTable* DataTable, FName RowName)"
  },
  {
    "label": "AddRowAboveOrBelowSelection()",
    "kind": "Method",
    "detail": "Function (uint8*)",
    "insertText": "AddRowAboveOrBelowSelection(UDataTable* DataTable, const FName& RowName, const FName& NewRowName, ERowInsertionPosition InsertPosition)"
  },
  {
    "label": "BroadcastPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPreChange(UDataTable* DataTable, EDataTableChangeInfo Info)"
  },
  {
    "label": "BroadcastPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastPostChange(UDataTable* DataTable, EDataTableChangeInfo Info)"
  },
  {
    "label": "CacheDataTableForEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheDataTableForEditing(const UDataTable* DataTable, TArray<FDataTableEditorColumnHeaderDataPtr>& OutAvailableColumns, TArray<FDataTableEditorRowListViewDataPtr>& OutAvailableRows)"
  },
  {
    "label": "CacheDataForEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheDataForEditing(const UScriptStruct* RowStruct, const TMap<FName, uint8*>& RowMap, TArray<FDataTableEditorColumnHeaderDataPtr>& OutAvailableColumns, TArray<FDataTableEditorRowListViewDataPtr>& OutAvailableRows)"
  },
  {
    "label": "GetPossibleStructs()",
    "kind": "Method",
    "detail": "Function (TArray<UScriptStruct*>)",
    "insertText": "GetPossibleStructs()"
  },
  {
    "label": "GetPossibleStructAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPossibleStructAssetData(TArray<FAssetData>& StructAssets)"
  },
  {
    "label": "IsValidTableStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidTableStruct(const UScriptStruct* Struct)"
  },
  {
    "label": "AddSearchForReferencesContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSearchForReferencesContextMenu(class FDetailWidgetRow& RowNameDetailWidget, FExecuteAction SearchForReferencesAction)"
  },
  {
    "label": "GetHandleShortDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetHandleShortDescription(const UObject* TableAsset, FName RowName)"
  },
  {
    "label": "GetRowTypeInfoTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRowTypeInfoTooltipText(FDataTableEditorColumnHeaderDataPtr ColumnHeaderDataPtr)"
  },
  {
    "label": "GetRowTypeTooltipDocExcerptName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetRowTypeTooltipDocExcerptName(FDataTableEditorColumnHeaderDataPtr ColumnHeaderDataPtr)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (const FString VariableTypesTooltipDocLink ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnDataTableStructSelected, UScriptStruct*)"
  },
  {
    "label": "MakeRowStructureComboBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeRowStructureComboBox(FOnDataTableStructSelected OnSelected)"
  }
]