[
  {
    "label": "FSharedStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedStruct"
  },
  {
    "label": "FConstSharedStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstSharedStruct"
  },
  {
    "label": "FStructView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructView"
  },
  {
    "label": "FConstStructView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstStructView"
  },
  {
    "label": "FInstancedStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStruct"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "FStructTypeEqualOperator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructTypeEqualOperator"
  },
  {
    "label": "FScriptStructSortOperator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScriptStructSortOperator"
  },
  {
    "label": "FStructTypeSortOperator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructTypeSortOperator"
  },
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "WITH_STRUCTUTILS_DEBUG()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<type_traits> # include \" UObject / Class . h \" # ifndef WITH_STRUCTUTILS_DEBUG # define)",
    "insertText": "WITH_STRUCTUTILS_DEBUG(!(UE_BUILD_SHIPPING || UE_BUILD_SHIPPING_WITH_EDITOR || UE_BUILD_TEST) && 1)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (struct FConstSharedStruct ; struct FStructView ; struct FConstStructView ; struct FInstancedStruct ; class FReferenceCollector ; class UUserDefinedStruct ; namespace UE::StructUtils { uint32)",
    "insertText": "GetStructCrc32(const UScriptStruct& ScriptStruct, const uint8* StructMemory, const uint32 CRC = 0)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStructCrc32(const FStructView& StructView, const uint32 CRC = 0)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStructCrc32(const FConstStructView& StructView, const uint32 CRC = 0)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStructCrc32(const FSharedStruct& SharedView, const uint32 CRC = 0)"
  },
  {
    "label": "GetStructCrc32()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStructCrc32(const FConstSharedStruct& SharedView, const uint32 CRC = 0)"
  },
  {
    "label": "GetStructHash64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetStructHash64(const UScriptStruct& ScriptStruct, const uint8* StructMemory)"
  },
  {
    "label": "GetStructHash64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetStructHash64(const FStructView& StructView)"
  },
  {
    "label": "GetStructHash64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetStructHash64(const FConstStructView& StructView)"
  },
  {
    "label": "GetStructHash64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetStructHash64(const FSharedStruct& SharedView)"
  },
  {
    "label": "GetStructHash64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetStructHash64(const FConstSharedStruct& SharedView)"
  },
  {
    "label": "GetAsUStruct()",
    "kind": "Method",
    "detail": "Function (template<T> TEnableIf<! TIsDerivedFrom<T,UObject>::IsDerived,UScriptStruct*>::Type)",
    "insertText": "GetAsUStruct()"
  },
  {
    "label": "enable_if_t()",
    "kind": "Method",
    "detail": "Function (} template<T> using EnableIfSharedInstancedOrViewStruct = std::enable_if_t<std::is_same<FStructView,T>::value | | std::is_same<FConstStructView,T>::value | | std::is_same<FSharedStruct,T>::value | | std::is_same<FConstSharedStruct,T>::value | | std::is_same<FInstancedStruct,T>::value,T> ; template<T> using EnableIfNotSharedInstancedOrViewStruct =)",
    "insertText": "enable_if_t(std::is_same<FStructView, T>::value || std::is_same<FConstStructView, T>::value || std::is_same<FSharedStruct, T>::value || std::is_same<FConstSharedStruct, T>::value || std::is_same<FInstancedStruct, T>::value)"
  },
  {
    "label": "FStructTypeEqualOperator()",
    "kind": "Method",
    "detail": "Function (} struct FStructTypeEqualOperator { const UScriptStruct* TypePtr ;)",
    "insertText": "FStructTypeEqualOperator(const UScriptStruct* InTypePtr) : TypePtr(InTypePtr)"
  },
  {
    "label": "FStructTypeEqualOperator()",
    "kind": "Method",
    "detail": "Function (} template<T,UE::StructUtils::EnableIfSharedInstancedOrViewStruct<T>* = nullptr>)",
    "insertText": "FStructTypeEqualOperator(const T& Struct) : TypePtr(Struct.GetScriptStruct())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<T,UE::StructUtils::EnableIfSharedInstancedOrViewStruct<T>* = nullptr> bool)",
    "insertText": "operator()(const T& Struct)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; struct FScriptStructSortOperator { template<T> bool)",
    "insertText": "operator()(const T& A, const T& B)"
  },
  {
    "label": "GetScriptStruct()",
    "kind": "Method",
    "detail": "Function (const UScriptStruct* AScriptStruct = A .)",
    "insertText": "GetScriptStruct()"
  },
  {
    "label": "FStructureToReinstantiateScope()",
    "kind": "Method",
    "detail": "Function (} } ; # if WITH_EDITOR namespace UE::StructUtils::Private { struct FStructureToReinstantiateScope {)",
    "insertText": "FStructureToReinstantiateScope(const UUserDefinedStruct* StructureToReinstantiate)"
  },
  {
    "label": "FStructureToReinstantiateScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStructureToReinstantiateScope()"
  },
  {
    "label": "FCurrentReinstantiationOuterObjectScope()",
    "kind": "Method",
    "detail": "Function (private : const UUserDefinedStruct* OldStructureToReinstantiate = nullptr ; } ; struct FCurrentReinstantiationOuterObjectScope {)",
    "insertText": "FCurrentReinstantiationOuterObjectScope(UObject* CurrentReinstantiateOuterObject)"
  },
  {
    "label": "FCurrentReinstantiationOuterObjectScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCurrentReinstantiationOuterObjectScope()"
  },
  {
    "label": "GetStructureToReinstantiate()",
    "kind": "Method",
    "detail": "Function (private : UObject* OldCurrentReinstantiateOuterObject = nullptr ; } ; const UUserDefinedStruct*)",
    "insertText": "GetStructureToReinstantiate()"
  },
  {
    "label": "GetCurrentReinstantiationOuterObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetCurrentReinstantiationOuterObject()"
  }
]