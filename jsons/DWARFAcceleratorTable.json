[
  {
    "label": "DWARFAcceleratorTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DWARFAcceleratorTable"
  },
  {
    "label": "Header",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Header"
  },
  {
    "label": "HeaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HeaderData"
  },
  {
    "label": "DWARFAcceleratorTable()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_LIB_DEBUGINFO_DWARFACCELERATORTABLE_H # define LLVM_LIB_DEBUGINFO_DWARFACCELERATORTABLE_H # include \" llvm / ADT / SmallVector . h \" # include \" llvm / DebugInfo / DWARF / DWARFFormValue . h \" # include \" llvm / DebugInfo / DWARF / DWARFRelocMap . h \" # include<cstdint> namespace llvm { class DWARFAcceleratorTable { struct Header { uint32_t Magic ; uint16_t Version ; uint16_t HashFunction ; uint32_t NumBuckets ; uint32_t NumHashes ; uint32_t HeaderDataLength ; } ; struct HeaderData { typedef uint16_t AtomType ; typedef uint16_t Form ; uint32_t DIEOffsetBase ; SmallVector<std::pair<AtomType,Form>,3> Atoms ; } ; struct Header Hdr ; struct HeaderData HdrData ; DataExtractor AccelSection ; DataExtractor StringSection ; const RelocAddrMap& Relocs ; public :)",
    "insertText": "DWARFAcceleratorTable(DataExtractor AccelSection, DataExtractor StringSection, const RelocAddrMap &Relocs) : AccelSection(AccelSection), StringSection(StringSection), Relocs(Relocs)"
  },
  {
    "label": "extract()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "extract()"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump(raw_ostream &OS)"
  }
]