[
  {
    "label": "MainFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MainFrame"
  },
  {
    "label": "DirectoryCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DirectoryCache"
  },
  {
    "label": "LiveModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveModule"
  },
  {
    "label": "LiveModuleOrbis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveModuleOrbis"
  },
  {
    "label": "LiveProcess",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LiveProcess"
  },
  {
    "label": "ServerCommandThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ServerCommandThread"
  },
  {
    "label": "CommandThreadContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CommandThreadContext"
  },
  {
    "label": "actions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "actions"
  },
  {
    "label": "_name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_name"
  },
  {
    "label": "ServerCommandThread()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ServerCommandThread(MainFrame* mainFrame, const wchar_t* const processGroupName, RunMode::Enum runMode)"
  },
  {
    "label": "RestartTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestartTargets(void)"
  },
  {
    "label": "CompileChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileChanges(void)"
  },
  {
    "label": "HasReinstancingProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasReinstancingProcess()"
  },
  {
    "label": "ShowCompileFinishNotification()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowCompileFinishNotification()"
  },
  {
    "label": "UnloadModule()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnloadModule(Process::Id processId, const wchar_t* modulePath)"
  },
  {
    "label": "PrewarmCompilerEnvironmentCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrewarmCompilerEnvironmentCache(void)"
  },
  {
    "label": "ServerThread()",
    "kind": "Method",
    "detail": "Function (Thread::ReturnValue)",
    "insertText": "ServerThread(void)"
  },
  {
    "label": "CompileThread()",
    "kind": "Method",
    "detail": "Function (Thread::ReturnValue)",
    "insertText": "CompileThread(void)"
  },
  {
    "label": "CallPrecompileHooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPrecompileHooks(bool didAllProcessesMakeProgress)"
  },
  {
    "label": "CallPostcompileHooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPostcompileHooks(bool didAllProcessesMakeProgress, commands::PostCompileResult postCompileResult)"
  },
  {
    "label": "CommandThread()",
    "kind": "Method",
    "detail": "Function (Thread::ReturnValue)",
    "insertText": "CommandThread(DuplexPipeServer* pipe, Event* readyEvent)"
  },
  {
    "label": "ExceptionCommandThread()",
    "kind": "Method",
    "detail": "Function (Thread::ReturnValue)",
    "insertText": "ExceptionCommandThread(DuplexPipeServer* exceptionPipe)"
  },
  {
    "label": "RemoveCommandThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCommandThread(const DuplexPipe* pipe)"
  },
  {
    "label": "CompileChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileChanges(bool didAllProcessesMakeProgress, commands::PostCompileResult& postCompileResult)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Execute(const CommandType* command, const DuplexPipe* pipe, void* context, const void* payload, size_t payloadSize)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (command)",
    "insertText": "DECLARE_ACTION(ShowConsole)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (command)",
    "insertText": "DECLARE_ACTION(SetVisible)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (command)",
    "insertText": "DECLARE_ACTION(SetActive)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (command)",
    "insertText": "DECLARE_ACTION(SetBuildArguments)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (modules)",
    "insertText": "DECLARE_ACTION(EnableLazyLoadedModule)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (MOD)",
    "insertText": "DECLARE_ACTION(SetReinstancingFlow)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (MOD)",
    "insertText": "DECLARE_ACTION(DisableCompileFinishNotification)"
  },
  {
    "label": "DECLARE_ACTION()",
    "kind": "Method",
    "detail": "Function (MOD)",
    "insertText": "DECLARE_ACTION(EnableModulesEx)"
  },
  {
    "label": "EnableRequiredModules()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableRequiredModules(const TArray<FString>& RequiredModules)"
  }
]