[
  {
    "label": "FRWTransactionallySafeAccessDetectorDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRWTransactionallySafeAccessDetectorDefinition"
  },
  {
    "label": "FTransactionalState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransactionalState"
  },
  {
    "label": "AcquireReadAccess()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AutoRTFM / AutoRTFM . h \" # include \" HAL / Platform . h \" # include \" MTAccessDetector . h \" # include \" Misc / AssertionMacros . h \" # if ENABLE_MT_DETECTOR struct FRWTransactionallySafeAccessDetectorDefinition { public : bool)",
    "insertText": "AcquireReadAccess()"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Open([this] { if (!TransactionalState.HoldsInternalWriteLock) { if (UNLIKELY(!Inner.AcquireReadAccess())) { return false; } MaybeRegisterAbortHandler(); } TransactionalState.ReadLockDelta++; return true; })"
  },
  {
    "label": "ReleaseReadAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ReleaseReadAccess()"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Open([this] { if (!TransactionalState.HoldsInternalWriteLock) { if (UNLIKELY(!Inner.ReleaseReadAccess())) { return false; } MaybeRegisterAbortHandler(); } TransactionalState.ReadLockDelta--; return true; })"
  },
  {
    "label": "AcquireWriteAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AcquireWriteAccess()"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Open([this] { if (!TransactionalState.HoldsInternalWriteLock) { if (UNLIKELY(!Inner.AcquireWriteAccess())) { return false; } MaybeRegisterAbortHandler(); RegisterCommitHandler(); TransactionalState.HoldsInternalWriteLock = true; } TransactionalState.WriteLockDelta++; return true; })"
  },
  {
    "label": "ReleaseWriteAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ReleaseWriteAccess()"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Open([this] { if (!TransactionalState.HoldsInternalWriteLock) { if (UNLIKELY(!Inner.ReleaseWriteAccess())) { return false; } MaybeRegisterAbortHandler(); } TransactionalState.WriteLockDelta--; return true; })"
  },
  {
    "label": "MaybeRegisterAbortHandler()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "MaybeRegisterAbortHandler()"
  },
  {
    "label": "RegisterCommitHandler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterCommitHandler()"
  },
  {
    "label": "UE_MT_DECLARE_TS_RW_ACCESS_DETECTOR()",
    "kind": "Method",
    "detail": "Function (} struct FTransactionalState { int16 ReadLockDelta = 0 ; int16 WriteLockDelta = 0 ; bool HoldsInternalWriteLock = false ; bool AbortHandlerRegistered = false ; } ; FRWAccessDetector Inner ; FTransactionalState TransactionalState ; } ; # if UE_AUTORTFM using FRWTransactionallySafeAccessDetector = FRWTransactionallySafeAccessDetectorDefinition ; # else using FRWTransactionallySafeAccessDetector = FRWAccessDetector ; # endif # define)",
    "insertText": "UE_MT_DECLARE_TS_RW_ACCESS_DETECTOR(AccessDetector)"
  }
]