[
  {
    "label": "IBehaviorTreeEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBehaviorTreeEditor"
  },
  {
    "label": "FGraphNodeClassHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphNodeClassHelper"
  },
  {
    "label": "BEHAVIORTREEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BEHAVIORTREEEDITOR_API"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Logging / LogMacros . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SharedPointer . h \" # include \" Toolkits / AssetEditorToolkit . h \" class IBehaviorTreeEditor ; struct FGraphNodeClassHelper ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogBehaviorTreeEditor, Log, All)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (class FBehaviorTreeEditorModule : public IModuleInterface,public IHasMenuExtensibility,public IHasToolBarExtensibility { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "CreateBehaviorTreeEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IBehaviorTreeEditor>)",
    "insertText": "CreateBehaviorTreeEditor(const EToolkitMode::Type Mode, const TSharedPtr<IToolkitHost>& InitToolkitHost, UObject* Object)"
  },
  {
    "label": "GetMenuExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetMenuExtensibilityManager()"
  }
]