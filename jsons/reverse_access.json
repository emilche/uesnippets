[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Ep",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Ep"
  },
  {
    "label": "_Cp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Cp"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ITERATOR_REVERSE_ACCESS_H # define _LIBCPP___ITERATOR_REVERSE_ACCESS_H # include<__config> # include<__iterator / reverse_iterator . h> # include<cstddef> # include<initializer_list> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER > 11 template <class _Tp, size_t _Np> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 reverse_iterator<_Tp*> rbegin(_Tp (&__array)[_Np])"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (} template<class _Tp,size_t _Np> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 reverse_iterator<_Tp*>)",
    "insertText": "rend(_Tp (&__array)[_Np])"
  },
  {
    "label": "rbegin()",
    "kind": "Method",
    "detail": "Function (} template<class _Ep> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 reverse_iterator<const _Ep*>)",
    "insertText": "rbegin(initializer_list<_Ep> __il)"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (} template<class _Ep> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 reverse_iterator<const _Ep*>)",
    "insertText": "rend(initializer_list<_Ep> __il)"
  },
  {
    "label": "rbegin()",
    "kind": "Method",
    "detail": "Function (} template<class _Cp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 auto)",
    "insertText": "rbegin(_Cp& __c) -> decltype(__c.rbegin())"
  },
  {
    "label": "rbegin()",
    "kind": "Method",
    "detail": "Function (} template<class _Cp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 auto)",
    "insertText": "rbegin(const _Cp& __c) -> decltype(__c.rbegin())"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (} template<class _Cp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 auto)",
    "insertText": "rend(_Cp& __c) -> decltype(__c.rend())"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (} template<class _Cp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 auto)",
    "insertText": "rend(const _Cp& __c) -> decltype(__c.rend())"
  },
  {
    "label": "crbegin()",
    "kind": "Method",
    "detail": "Function (} template<class _Cp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 auto)",
    "insertText": "crbegin(const _Cp& __c) -> decltype(_VSTD::rbegin(__c))"
  },
  {
    "label": "crend()",
    "kind": "Method",
    "detail": "Function (} template<class _Cp> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX14 auto)",
    "insertText": "crend(const _Cp& __c) -> decltype(_VSTD::rend(__c))"
  }
]