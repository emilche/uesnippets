[
  {
    "label": "FInvalidValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInvalidValue"
  },
  {
    "label": "FConstantValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstantValue"
  },
  {
    "label": "FLinearInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearInterpolation"
  },
  {
    "label": "FQuadraticInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuadraticInterpolation"
  },
  {
    "label": "FCubicInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCubicInterpolation"
  },
  {
    "label": "FQuarticInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuarticInterpolation"
  },
  {
    "label": "FCubicBezierInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCubicBezierInterpolation"
  },
  {
    "label": "FWeightedCubicInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeightedCubicInterpolation"
  },
  {
    "label": "TInterpSolutions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TInterpSolutions"
  },
  {
    "label": "TInterpSolutions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TInterpSolutions"
  },
  {
    "label": "FInterpolationExtents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterpolationExtents"
  },
  {
    "label": "FInvalidValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInvalidValue"
  },
  {
    "label": "FConstantValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstantValue"
  },
  {
    "label": "FLinearInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearInterpolation"
  },
  {
    "label": "FQuadraticInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuadraticInterpolation"
  },
  {
    "label": "FCubicInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCubicInterpolation"
  },
  {
    "label": "FQuarticInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuarticInterpolation"
  },
  {
    "label": "FCubicBezierInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCubicBezierInterpolation"
  },
  {
    "label": "FWeightedCubicInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeightedCubicInterpolation"
  },
  {
    "label": "FCachedInterpolationRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedInterpolationRange"
  },
  {
    "label": "FCachedInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedInterpolation"
  },
  {
    "label": "Solve4()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Solve4(TInterpSolutions<double, 4> Solutions)"
  },
  {
    "label": "AddPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPoint(double Value, FFrameTime Time)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Combine(const FInterpolationExtents& Other)"
  },
  {
    "label": "FCubicBezierInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCubicBezierInterpolation(\n\t\tFFrameNumber InOrigin,\n\t\tdouble InDX,\n\t\tdouble InStartValue,\n\t\tdouble InEndValue,\n\t\tdouble InStartTangent,\n\t\tdouble InEndTangent)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (FCachedInterpolationRange)",
    "insertText": "Empty()"
  },
  {
    "label": "Finite()",
    "kind": "Method",
    "detail": "Function (FCachedInterpolationRange)",
    "insertText": "Finite(FFrameNumber InStart, FFrameNumber InEnd)"
  },
  {
    "label": "Infinite()",
    "kind": "Method",
    "detail": "Function (FCachedInterpolationRange)",
    "insertText": "Infinite()"
  },
  {
    "label": "Only()",
    "kind": "Method",
    "detail": "Function (FCachedInterpolationRange)",
    "insertText": "Only(FFrameNumber InTime)"
  },
  {
    "label": "From()",
    "kind": "Method",
    "detail": "Function (FCachedInterpolationRange)",
    "insertText": "From(FFrameNumber InStart)"
  },
  {
    "label": "Until()",
    "kind": "Method",
    "detail": "Function (FCachedInterpolationRange)",
    "insertText": "Until(FFrameNumber InEnd)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation()"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FConstantValue& Constant)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FLinearInterpolation& Linear)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FQuadraticInterpolation& Quadratic)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FCubicInterpolation& Cubic)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FQuarticInterpolation& Quartic)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FCubicBezierInterpolation& CubicBezier)"
  },
  {
    "label": "FCachedInterpolation()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FCachedInterpolation(const FCachedInterpolationRange& InRange, const FWeightedCubicInterpolation& WeightedCubic)"
  },
  {
    "label": "Offset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Offset(double Amount)"
  }
]