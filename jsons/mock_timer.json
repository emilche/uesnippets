[
  {
    "label": "TestSimpleTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestSimpleTaskRunner"
  },
  {
    "label": "MockOneShotTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockOneShotTimer"
  },
  {
    "label": "MockRepeatingTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockRepeatingTimer"
  },
  {
    "label": "MockRetainingOneShotTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockRetainingOneShotTimer"
  },
  {
    "label": "MockOneShotTimer()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TIMER_MOCK_TIMER_H_ # define BASE_TIMER_MOCK_TIMER_H_ # include \" base / test / simple_test_tick_clock . h \" # include \" base / timer / timer . h \" namespace base { class TestSimpleTaskRunner ; class MockOneShotTimer : public OneShotTimer { public :)",
    "insertText": "MockOneShotTimer()"
  },
  {
    "label": "Fire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fire()"
  },
  {
    "label": "SetTaskRunner()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetTaskRunner(scoped_refptr<SequencedTaskRunner> task_runner)"
  },
  {
    "label": "MockRepeatingTimer()",
    "kind": "Method",
    "detail": "Function (SimpleTestTickClock clock_ ; scoped_refptr<TestSimpleTaskRunner> test_task_runner_ ; } ; class MockRepeatingTimer : public RepeatingTimer { public :)",
    "insertText": "MockRepeatingTimer()"
  },
  {
    "label": "MockRetainingOneShotTimer()",
    "kind": "Method",
    "detail": "Function (SimpleTestTickClock clock_ ; scoped_refptr<TestSimpleTaskRunner> test_task_runner_ ; } ; class MockRetainingOneShotTimer : public RetainingOneShotTimer { public :)",
    "insertText": "MockRetainingOneShotTimer()"
  }
]