[
  {
    "label": "rmx_attribs_metadata_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_attribs_metadata_v1"
  },
  {
    "label": "rmx_version_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_version_v1"
  },
  {
    "label": "rmx_device_list_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_device_list_v1"
  },
  {
    "label": "rmx_device_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_device_v1"
  },
  {
    "label": "rmx_ip_addr_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_ip_addr_v1"
  },
  {
    "label": "in_addr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in_addr"
  },
  {
    "label": "rmx_device_iface_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_device_iface_v1"
  },
  {
    "label": "rmx_device_capabilities_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_device_capabilities_v1"
  },
  {
    "label": "rmx_device_config_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_device_config_v1"
  },
  {
    "label": "rmx_user_clock_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_user_clock_params_v1"
  },
  {
    "label": "rmx_ptp_clock_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_ptp_clock_params_v1"
  },
  {
    "label": "rmx_notification_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_notification_v1"
  },
  {
    "label": "rmx_event_channel_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_event_channel_params_v1"
  },
  {
    "label": "rmx_mem_region_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_mem_region_v1"
  },
  {
    "label": "rmx_mem_multi_key_region_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_mem_multi_key_region_v1"
  },
  {
    "label": "rmx_mem_reg_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_mem_reg_params_v1"
  },
  {
    "label": "rmx_input_stream_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_stream_params_v1"
  },
  {
    "label": "rmx_input_flow_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_flow_v1"
  },
  {
    "label": "rmx_input_chunk_handle_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_chunk_handle_v1"
  },
  {
    "label": "rmx_input_completion_metadata_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_completion_metadata_v1"
  },
  {
    "label": "rmx_input_completion_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_completion_v1"
  },
  {
    "label": "rmx_input_packet_info_metadata_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_packet_info_metadata_v1"
  },
  {
    "label": "rmx_input_packet_info_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_input_packet_info_v1"
  },
  {
    "label": "rmx_output_media_stream_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_media_stream_params_v1"
  },
  {
    "label": "rmx_output_media_mem_block_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_media_mem_block_v1"
  },
  {
    "label": "rmx_output_media_context_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_media_context_v1"
  },
  {
    "label": "rmx_output_media_chunk_handle_metadata_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_media_chunk_handle_metadata_v1"
  },
  {
    "label": "rmx_output_media_chunk_handle_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_media_chunk_handle_v1"
  },
  {
    "label": "rmx_output_gen_rate_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_gen_rate_v1"
  },
  {
    "label": "rmx_output_gen_stream_params_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_gen_stream_params_v1"
  },
  {
    "label": "rmx_output_gen_chunk_handle_metadata_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_gen_chunk_handle_metadata_v1"
  },
  {
    "label": "rmx_output_gen_chunk_handle_v1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rmx_output_gen_chunk_handle_v1"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# ifndef SRC_RIVERMAX_DEFS_H_ # define SRC_RIVERMAX_DEFS_H_ # ifdef __linux__ # include<netinet / in . h> # ifndef __export # define __export # endif # define OVERLAPPED void # else # include<winsock2 . h> # ifndef __export # ifdef _USRDLL # define __export)",
    "insertText": "__declspec(dllexport) #else #define __export __declspec(dllimport) #endif #endif #endif #if __cplusplus < 201103L #include <stdint.h> #else #include <cinttypes> #endif #include <stddef.h> #include <stdint.h> #if defined(__DOXYGEN_ONLY__) #define __RMX_DEPRECATED #elif defined(_MSC_VER) #define __RMX_DEPRECATED __declspec(deprecated) #elif defined(__GNUC__) #define __RMX_DEPRECATED __attribute__((deprecated)) #else #define __RMX_DEPRECATED #endif #if defined(_MSC_VER) #define __RMX_INLINE __forceinline #elif defined(__GNUC__) && __has_attribute(always_inline) #define __RMX_INLINE inline __attribute__((always_inline)) #else #define __RMX_INLINE static inline #endif #define RMX_MAX_SUB_BLOCKS_PER_MEM_BLOCK 2 #define RMX_MAX_DUP_STREAMS 2 #define RMX_CEILING(_value_,_significance_) \\ (((_value_) + (_significance_) - 1)/(_significance_)) #define RMX_PLACEHOLDER_ALIGNED(_size_) \\ void *placeholder[RMX_CEILING(_size_, sizeof(void*))"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (RMX_OK = 0,RMX_UNKNOWN_ISSUE = 2 0,RMX_NO_HW_RESOURCES = 2 1,RMX_NO_FREE_CHUNK = 2 2,RMX_NO_CHUNK_TO_SEND = 2 3,RMX_HW_SEND_QUEUE_IS_FULL = 2 4,RMX_NO_MEMORY = 2 5,RMX_NOT_INITIALIZED = 2 6,RMX_NO_DEVICE = 2 8,RMX_BUSY = 2 9,RMX_CANCELLED = 3 0,RMX_HW_COMPLETION_ISSUE = 3 1,RMX_LICENSE_ISSUE = 3 2,RMX_NO_ATTACH = 3 4,RMX_STEERING_ISSUE = 3 5,RMX_CHECKSUM_ISSUE = 3 7,RMX_DESTINATION_UNREACHABLE = 3 8,RMX_MEMORY_REGISTRATION = 3 9,RMX_NO_DEPENDENCY = 1 0 0,RMX_EXCEEDS_LIMIT = 2 0 0,RMX_UNSUPPORTED = 3 0 0,RMX_CLOCK_TYPE_NOT_SUPPORTED = 3 0 1,RMX_UNSUPPORTED_PTP_RT_CLOCK_DEVICE = 3 0 2,RMX_NOT_IMPLEMENTED = 3 0 3,RMX_METHOD_NOT_SUPPORTED = 3 0 4,RMX_INVALID_PARAM_MIX = 3 5 0,RMX_INVALID_PARAM_1 = 3 5 1,RMX_INVALID_PARAM_2 = 3 5 2,RMX_INVALID_PARAM_3 = 3 5 3,RMX_INVALID_PARAM_4 = 3 5 4,RMX_INVALID_PARAM_5 = 3 5 5,RMX_INVALID_PARAM_6 = 3 5 6,RMX_INVALID_PARAM_7 = 3 5 7,RMX_INVALID_PARAM_8 = 3 5 8,RMX_INVALID_PARAM_9 = 3 5 9,RMX_INVALID_PARAM_10 = 3 6 0,RMX_SIGNAL = 5 0 0,} rmx_status ; typedef struct rmx_attribs_metadata_v1 { uint64_t bitmap ; } rmx_attribs_metadata ; typedef struct rmx_version_v1 { uint32_t major ; uint32_t minor ; uint32_t patch ; } rmx_version ; typedef struct rmx_device_list_v1 rmx_device_list ; typedef struct rmx_device_v1 rmx_device ; typedef struct rmx_ip_addr_v1 { uint16_t family ; union { struct in_addr ipv4 ; uint8_t reserved [ 1 6 ] ; } addr ; } rmx_ip_addr ; typedef struct rmx_device_iface_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(24)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_device_iface ; typedef enum { RMX_DEVICE_CAP_PTP_CLOCK = 0,RMX_DEVICE_CAP_RTP_SEQN_PLACEMENT_ORDER = 1,RMX_DEVICE_CAP_RTP_EXTEND_SEQN_PLACEMENT_ORDER = 2,RMX_DEVICE_CAP_RTP_DYNAMIC_HDS = 3,RMX_DEVICE_CAP_TOTAL_COUNT } rmx_device_capability ; typedef struct rmx_device_capabilities_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(8)"
  },
  {
    "label": "uint64_t()",
    "kind": "Method",
    "detail": "Function (} rmx_ptp_clock_params ; typedef)",
    "insertText": "uint64_t(*rmx_user_clock_handler)(void*)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (typedef struct rmx_notification_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(12)"
  },
  {
    "label": "RMX_MKEY_INVALID()",
    "kind": "Method",
    "detail": "Function (} rmx_event_channel_params ; # define)",
    "insertText": "RMX_MKEY_INVALID((rmx_mkey_id)(-1L))"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (typedef uint32_t rmx_stream_id ; typedef enum { RMX_MEM_REGISTRY_ZERO_BASED = 0,} rmx_mem_reg_params_option ; typedef struct rmx_mem_region_v1 { void* addr ; size_t length ; rmx_mkey_id mkey ; } rmx_mem_region ; typedef struct rmx_mem_multi_key_region_v1 { void* addr ; size_t length ; rmx_mkey_id mkey [ RMX_MAX_DUP_STREAMS ] ; } rmx_mem_multi_key_region ; typedef struct rmx_mem_reg_params_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(40)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_mem_reg_params ; typedef enum { RMX_INPUT_RAW_PACKET = 0,RMX_INPUT_APP_PROTOCOL_PACKET = 1,RMX_INPUT_APP_PROTOCOL_PAYLOAD = 2,RMX_INPUT_STREAM_TYPES_TOTAL } rmx_input_stream_params_type ; typedef enum { RMX_INPUT_STREAM_RTP_SEQN_PLACEMENT_ORDER = 0,RMX_INPUT_STREAM_RTP_EXT_SEQN_PLACEMENT_ORDER = 1,RMX_INPUT_STREAM_RTP_SMPTE_2110_20_DYNAMIC_HDS = 4,RMX_INPUT_STREAM_RTP_CSRC_FIELDS_DYNAMIC_HDS = 5,RMX_INPUT_STREAM_CREATE_INFO_PER_PACKET = 7,RMX_INPUT_STREAM_CREATE_OPTIONS_TOTAL } rmx_input_option ; typedef enum { RMX_INPUT_TIMESTAMP_RAW_COUNTER = 0,RMX_INPUT_TIMESTAMP_RAW_NANO = 1,RMX_INPUT_TIMESTAMP_SYNCED = 2,} rmx_input_timestamp_format ; typedef struct rmx_input_stream_params_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(184)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_input_stream_params ; typedef struct rmx_input_flow_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(64)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_input_flow ; typedef struct rmx_input_chunk_handle_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(16)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_input_chunk_handle ; typedef enum { RMX_INPUT_COMPLETION_FLAG_MORE = 0,} rmx_input_completion_flag ; typedef struct rmx_input_completion_metadata_v1 { uint32_t chunk_size ; uint32_t seqn_first ; uint32_t flags ; uint32_t _reserved ; uint64_t timestamp_first ; uint64_t timestamp_last ; const void* ptr [ RMX_MAX_SUB_BLOCKS_PER_MEM_BLOCK ] ; } rmx_input_completion_metadata ; typedef struct rmx_input_completion_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(sizeof(struct rmx_input_completion_metadata_v1))"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_input_completion ; typedef struct rmx_input_packet_info_metadata_v1 { uint16_t size [ RMX_MAX_SUB_BLOCKS_PER_MEM_BLOCK ] ; uint32_t flow_tag ; uint64_t timestamp ; } rmx_input_packet_info_metadata ; typedef struct rmx_input_packet_info_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(sizeof(struct rmx_input_packet_info_metadata_v1))"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_input_packet_info ; typedef struct rmx_output_media_stream_params_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(96)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_output_media_context ; typedef struct rmx_output_media_chunk_handle_metadata_v1 { void* strides [ RMX_MAX_SUB_BLOCKS_PER_MEM_BLOCK ] ; uint16_t* packet_sizes [ RMX_MAX_SUB_BLOCKS_PER_MEM_BLOCK ] ; uint64_t flags ; } rmx_output_media_chunk_handle_metadata ; typedef struct rmx_output_media_chunk_handle_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(72)"
  },
  {
    "label": "RMX_PLACEHOLDER_ALIGNED()",
    "kind": "Method",
    "detail": "Function (} rmx_output_media_chunk_handle ; typedef struct rmx_output_gen_rate_v1 {)",
    "insertText": "RMX_PLACEHOLDER_ALIGNED(32)"
  }
]