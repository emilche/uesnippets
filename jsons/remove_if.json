[
  {
    "label": "_ForwardIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_ForwardIterator"
  },
  {
    "label": "_Predicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Predicate"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_REMOVE_IF_H # define _LIBCPP___ALGORITHM_REMOVE_IF_H # include<__algorithm / find_if . h> # include<__config> # include<__utility / move . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _ForwardIterator, class _Predicate> _LIBCPP_NODISCARD_EXT _LIBCPP_CONSTEXPR_AFTER_CXX17 _ForwardIterator remove_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate __pred)"
  },
  {
    "label": "_Predicate()",
    "kind": "Method",
    "detail": "Function (__first = _VSTD::find_if<_ForwardIterator,)",
    "insertText": "_Predicate(__first, __last, __pred)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (_ForwardIterator __i = __first ;)",
    "insertText": "while(++__i != __last)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (* __first =)",
    "insertText": "move(*__i)"
  }
]