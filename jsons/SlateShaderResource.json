[
  {
    "label": "FSlateShaderResourceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResourceProxy"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FSlateShaderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResource"
  },
  {
    "label": "FSlateSharedHandleData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateSharedHandleData"
  },
  {
    "label": "TSlateTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSlateTexture"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "DECLARE_MEMORY_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" SlateGlobals . h \" # include \" Rendering / SlateRendererTypes . h \" # include \" Rendering / SlateResourceHandle . h \" class FSlateShaderResourceProxy ;)",
    "insertText": "DECLARE_MEMORY_STAT_EXTERN(TEXT(\"Texture Data Memory (GPU)\"), STAT_SlateTextureGPUMemory, STATGROUP_SlateMemory, SLATECORE_API)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (namespace ESlateShaderResource { enum Type { NativeTexture,TextureObject,Material,PostProcess,Invalid,} ; } class FSlateShaderResource { public : uint32)",
    "insertText": "GetWidth()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetHeight()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (ESlateShaderResource::Type)",
    "insertText": "GetType()"
  },
  {
    "label": "IsResourceValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsResourceValid()"
  },
  {
    "label": "Debug_IsDestroyed()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Debug_IsDestroyed()"
  },
  {
    "label": "CheckForStaleResources()",
    "kind": "Method",
    "detail": "Function (DestroyState = 0 x84 ; } # else void)",
    "insertText": "CheckForStaleResources()"
  },
  {
    "label": "FSlateSharedHandleData()",
    "kind": "Method",
    "detail": "Function (# endif # if SLATE_CHECK_UOBJECT_RENDER_RESOURCES private : uint8 DestroyState = 0 x21 ; # endif } ; class FSlateSharedHandleData { public :)",
    "insertText": "FSlateSharedHandleData(FSlateShaderResourceProxy* InProxy = nullptr ) : Proxy( InProxy)"
  },
  {
    "label": "FSlateShaderResourceProxy()",
    "kind": "Method",
    "detail": "Function (} public : FSlateShaderResourceProxy* Proxy ; } ; class FSlateShaderResourceProxy { public : FVector2f StartUV ; FVector2f SizeUV ; FSlateShaderResource* Resource ; FIntPoint ActualSize ; TSharedPtr<FSlateSharedHandleData> HandleData ;)",
    "insertText": "FSlateShaderResourceProxy() : StartUV(0.0f, 0.0f) , SizeUV(1.0f, 1.0f) , Resource(nullptr) , ActualSize(0, 0)"
  },
  {
    "label": "FSlateShaderResourceProxy()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateShaderResourceProxy()"
  },
  {
    "label": "TSlateTexture()",
    "kind": "Method",
    "detail": "Function (HandleData -> Proxy = nullptr ; } } } ; template<ResourceType> class TSlateTexture : public FSlateShaderResource { public :)",
    "insertText": "TSlateTexture()"
  },
  {
    "label": "TSlateTexture()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TSlateTexture(ResourceType& InShaderResource ) : ShaderResource( InShaderResource)"
  },
  {
    "label": "GetTypedResource()",
    "kind": "Method",
    "detail": "Function (} public : ResourceType&)",
    "insertText": "GetTypedResource()"
  },
  {
    "label": "GetViewportRenderTargetTexture()",
    "kind": "Method",
    "detail": "Function (public : FSlateShaderResource*)",
    "insertText": "GetViewportRenderTargetTexture()"
  }
]