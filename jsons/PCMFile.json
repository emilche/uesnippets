[
  {
    "label": "PCMFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PCMFile"
  },
  {
    "label": "PCMFile()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_TEST_PCMFILE_H_ # define MODULES_AUDIO_CODING_TEST_PCMFILE_H_ # include<stdio . h> # include<stdlib . h> # include<string> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / audio / audio_frame . h \" namespace webrtc { class PCMFile { public :)",
    "insertText": "PCMFile()"
  },
  {
    "label": "PCMFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PCMFile(uint32_t timestamp)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Open(absl::string_view filename, uint16_t frequency, absl::string_view mode, bool auto_rewind = false)"
  },
  {
    "label": "Read10MsData()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Read10MsData(AudioFrame& audio_frame)"
  },
  {
    "label": "Write10MsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write10MsData(const int16_t* playout_buffer, size_t length_smpls)"
  },
  {
    "label": "Write10MsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write10MsData(const AudioFrame& audio_frame)"
  },
  {
    "label": "PayloadLength10Ms()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "PayloadLength10Ms()"
  },
  {
    "label": "SamplingFrequency()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SamplingFrequency()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "EndOfFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndOfFile()"
  },
  {
    "label": "Rewind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rewind()"
  },
  {
    "label": "ChooseFile()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "ChooseFile(std::string* file_name, int16_t max_len, uint16_t* frequency_hz)"
  },
  {
    "label": "Rewinded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Rewinded()"
  },
  {
    "label": "SaveStereo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveStereo(bool is_stereo = true)"
  },
  {
    "label": "ReadStereo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadStereo(bool is_stereo = true)"
  },
  {
    "label": "SetNum10MsBlocksToRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNum10MsBlocksToRead(int value)"
  }
]