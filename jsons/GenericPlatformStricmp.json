[
  {
    "label": "FGenericPlatformStricmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericPlatformStricmp"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" struct FGenericPlatformStricmp { int32)",
    "insertText": "Stricmp(const ANSICHAR* String1, const ANSICHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const WIDECHAR* String1, const WIDECHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const UTF8CHAR* String1, const UTF8CHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const UTF16CHAR* String1, const UTF16CHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const UTF32CHAR* String1, const UTF32CHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const ANSICHAR* String1, const WIDECHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const ANSICHAR* String1, const UTF8CHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const ANSICHAR* String1, const UTF16CHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const ANSICHAR* String1, const UTF32CHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const WIDECHAR* String1, const ANSICHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const UTF8CHAR* String1, const ANSICHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const UTF16CHAR* String1, const ANSICHAR* String2)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp(const UTF32CHAR* String1, const ANSICHAR* String2)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const ANSICHAR* String1, const ANSICHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const WIDECHAR* String1, const WIDECHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const UTF8CHAR* String1, const UTF8CHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const UTF16CHAR* String1, const UTF16CHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const UTF32CHAR* String1, const UTF32CHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const ANSICHAR* String1, const WIDECHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const ANSICHAR* String1, const UTF8CHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const ANSICHAR* String1, const UTF16CHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const ANSICHAR* String1, const UTF32CHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const WIDECHAR* String1, const ANSICHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const UTF8CHAR* String1, const ANSICHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const UTF16CHAR* String1, const ANSICHAR* String2, SIZE_T Count)"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp(const UTF32CHAR* String1, const ANSICHAR* String2, SIZE_T Count)"
  }
]