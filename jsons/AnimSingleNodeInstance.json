[
  {
    "label": "FAnimInstanceProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimInstanceProxy"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Optional . h \" # include \" Animation / AnimInstance . h \" # include \" Animation / AnimTypes . h \" # include \" AnimSingleNodeInstance . generated . h \" struct FAnimInstanceProxy ;)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE(FPostEvaluateAnimEvent)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(transient, NotBlueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() PRAGMA_DISABLE_DEPRECATION_WARNINGS ~UAnimSingleNodeInstance()"
  },
  {
    "label": "NativeInitializeAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NativeInitializeAnimation()"
  },
  {
    "label": "NativePostEvaluateAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NativePostEvaluateAnimation()"
  },
  {
    "label": "OnMontageInstanceStopped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMontageInstanceStopped(FAnimMontageInstance& StoppedMontageInstance)"
  },
  {
    "label": "Montage_Advance()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Montage_Advance(float DeltaTime)"
  },
  {
    "label": "GetBlendSpaceState()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "GetBlendSpaceState(FVector& OutPosition, FVector& OutFilteredPosition)"
  },
  {
    "label": "StepForward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StepForward()"
  },
  {
    "label": "StepBackward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StepBackward()"
  },
  {
    "label": "RestartMontage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestartMontage(UAnimMontage * Montage, FName FromSection = FName())"
  },
  {
    "label": "SetMontageLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMontageLoop(UAnimMontage* Montage, bool bIsLooping, FName StartingSection = FName())"
  },
  {
    "label": "SetMontagePreviewSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMontagePreviewSlot(FName PreviewSlot)"
  },
  {
    "label": "UpdateMontageWeightForTimeSkip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMontageWeightForTimeSkip(float TimeDifference)"
  },
  {
    "label": "UpdateBlendspaceSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBlendspaceSamples(FVector InBlendInput)"
  },
  {
    "label": "IsPlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlaying()"
  },
  {
    "label": "IsReverse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReverse()"
  },
  {
    "label": "IsLooping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLooping()"
  },
  {
    "label": "GetCurrentTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCurrentTime()"
  },
  {
    "label": "GetPlayRate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPlayRate()"
  },
  {
    "label": "GetCurrentAsset()",
    "kind": "Method",
    "detail": "Function (UAnimationAsset*)",
    "insertText": "GetCurrentAsset()"
  },
  {
    "label": "GetFilterLastOutput()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetFilterLastOutput()"
  },
  {
    "label": "SetInterpolationOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterpolationOverride(TOptional<EAnimInterpolationType> InterpolationType)"
  },
  {
    "label": "GetInterpolationOverride()",
    "kind": "Method",
    "detail": "Function (TOptional<EAnimInterpolationType>)",
    "insertText": "GetInterpolationOverride()"
  },
  {
    "label": "CreateAnimInstanceProxy()",
    "kind": "Method",
    "detail": "Function (protected : FAnimInstanceProxy*)",
    "insertText": "CreateAnimInstanceProxy()"
  }
]