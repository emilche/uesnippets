[
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "GetLaneY()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" struct FTimingViewLayout { float RealMinTimelineH = 7 . 0 f ; float NormalLayoutEventH = 1 4 . 0 f ; float NormalLayoutEventDY = 2 . 0 f ; float NormalLayoutTimelineDY = 2 . 0 f ; float NormalLayoutChildTimelineDY = 4 . 0 f ; float NormalLayoutMinTimelineH = 0 . 0 f ; float CompactLayoutEventH = 4 . 0 f ; float CompactLayoutEventDY = 1 . 0 f ; float CompactLayoutTimelineDY = 1 . 0 f ; float CompactLayoutChildTimelineDY = 0 . 0 f ; float CompactLayoutMinTimelineH = 0 . 0 f ; bool bIsCompactMode ; float EventH ; float EventDY ; float TimelineDY ; float ChildTimelineDY ; float MinTimelineH ; float TargetMinTimelineH ; float)",
    "insertText": "GetLaneY(int32 Depth)"
  },
  {
    "label": "GetChildLaneY()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetChildLaneY(int32 Depth)"
  },
  {
    "label": "ComputeTrackHeight()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "ComputeTrackHeight(int32 NumLanes)"
  },
  {
    "label": "ForceCompactMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceCompactMode()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Update()"
  }
]