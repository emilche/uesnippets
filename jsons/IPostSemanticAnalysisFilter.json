[
  {
    "label": "CExpressionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CExpressionBase"
  },
  {
    "label": "IPostSemanticAnalysisFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPostSemanticAnalysisFilter"
  },
  {
    "label": "ULANG_FEATURE_ID_DECL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / CompilerPasses / CompilerTypes . h \" # include \" uLang / Toolchain / ModularFeature . h \" namespace uLang { class CExpressionBase ; class IPostSemanticAnalysisFilter : public TModularFeature<IPostSemanticAnalysisFilter> {)",
    "insertText": "ULANG_FEATURE_ID_DECL(IPostSemanticAnalysisFilter)"
  },
  {
    "label": "FilterAst()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "FilterAst(const TSRef<CSemanticProgram>& SemanticResult, const SBuildContext& BuildParams, const SProgramContext& ProgramContext)"
  }
]