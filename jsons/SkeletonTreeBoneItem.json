[
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "EVisibility",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EVisibility"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSlateColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateColor"
  },
  {
    "label": "FSlateFontInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateFontInfo"
  },
  {
    "label": "FSkeletonTreeBoneItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreeBoneItem"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "SKELETON_TREE_ITEM_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" ISkeletonTreeItem . h \" # include \" SkeletonTreeItem . h \" # include \" Animation / Skeleton . h \" # include \" BoneProxy . h \" # include \" UObject / GCObject . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" Styling / SlateColor . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Input / SComboButton . h \" # endif class SComboButton ; class SWidget ; class UDebugSkelMeshComponent ; struct EVisibility ; struct FSlateBrush ; struct FSlateColor ; struct FSlateFontInfo ; class FSkeletonTreeBoneItem : public FSkeletonTreeItem,public FGCObject { public :)",
    "insertText": "SKELETON_TREE_ITEM_TYPE(FSkeletonTreeBoneItem, FSkeletonTreeItem) FSkeletonTreeBoneItem(const FName& InBoneName, const TSharedRef<class ISkeletonTree>& InSkeletonTree)"
  },
  {
    "label": "GenerateWidgetForNameColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateWidgetForNameColumn(TSharedPtr< SHorizontalBox > Box, const TAttribute<FText>& FilterText, FIsSelected InIsSelected)"
  },
  {
    "label": "GenerateWidgetForDataColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForDataColumn(const FName& DataColumnName, FIsSelected InIsSelected)"
  },
  {
    "label": "GetRowItemName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetRowItemName()"
  },
  {
    "label": "HandleDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleDrop(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObject()"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "IsBoneWeighted()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsBoneWeighted(int32 MeshBoneIndex, UDebugSkelMeshComponent* PreviewComponent)"
  },
  {
    "label": "IsBoneRequired()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBoneRequired(int32 MeshBoneIndex, UDebugSkelMeshComponent* PreviewComponent)"
  },
  {
    "label": "CacheLODChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheLODChange(UDebugSkelMeshComponent* PreviewComponent)"
  },
  {
    "label": "EnableBoneProxyTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableBoneProxyTick(bool bEnable)"
  },
  {
    "label": "GetBoneTextFont()",
    "kind": "Method",
    "detail": "Function (private : FSlateFontInfo)",
    "insertText": "GetBoneTextFont()"
  },
  {
    "label": "GetBoneTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetBoneTextColor(FIsSelected InIsSelected)"
  },
  {
    "label": "GetLODIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetLODIcon()"
  },
  {
    "label": "GetBoneToolTip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBoneToolTip()"
  },
  {
    "label": "GetRetargetingComboButtonForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetRetargetingComboButtonForegroundColor()"
  },
  {
    "label": "CreateBoneTranslationRetargetingModeMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateBoneTranslationRetargetingModeMenu()"
  },
  {
    "label": "GetTranslationRetargetingModeMenuTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTranslationRetargetingModeMenuTitle()"
  },
  {
    "label": "OnBlendSliderCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendSliderCommitted(float NewValue, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnBlendSliderChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlendSliderChanged(float NewValue)"
  },
  {
    "label": "OnBeginBlendSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginBlendSliderMovement()"
  },
  {
    "label": "OnEndBlendSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndBlendSliderMovement(float NewValue)"
  },
  {
    "label": "SetBoneTranslationRetargetingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneTranslationRetargetingMode(EBoneTranslationRetargetingMode::Type NewRetargetingMode)"
  },
  {
    "label": "GetBoneBlendProfileScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetBoneBlendProfileScale()"
  },
  {
    "label": "GetBlendProfileMaxSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetBlendProfileMaxSliderValue()"
  },
  {
    "label": "GetBlendProfileMinSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetBlendProfileMinSliderValue()"
  },
  {
    "label": "GetBoneBlendProfileVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetBoneBlendProfileVisibility()"
  }
]