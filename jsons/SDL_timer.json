[
  {
    "label": "SDL_GetTicks()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_timer_h_ # define SDL_timer_h_ # include \" SDL_stdinc . h \" # include \" SDL_error . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_GetTicks(void)"
  },
  {
    "label": "SDL_GetTicks64()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint64 SDLCALL)",
    "insertText": "SDL_GetTicks64(void)"
  },
  {
    "label": "SDL_TICKS_PASSED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SDL_TICKS_PASSED(A, B) ((Sint32)((B) - (A)) <= 0) extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceCounter(void)"
  },
  {
    "label": "SDL_GetPerformanceFrequency()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint64 SDLCALL)",
    "insertText": "SDL_GetPerformanceFrequency(void)"
  },
  {
    "label": "SDL_Delay()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_Delay(Uint32 ms)"
  },
  {
    "label": "Uint32()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Uint32(SDLCALL * SDL_TimerCallback) (Uint32 interval, void *param)"
  },
  {
    "label": "SDL_AddTimer()",
    "kind": "Method",
    "detail": "Function (typedef int SDL_TimerID ; DECLSPEC SDL_TimerID SDLCALL)",
    "insertText": "SDL_AddTimer(Uint32 interval, SDL_TimerCallback callback, void *param)"
  },
  {
    "label": "SDL_RemoveTimer()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_RemoveTimer(SDL_TimerID id)"
  }
]