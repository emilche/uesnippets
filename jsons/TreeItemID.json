[
  {
    "label": "FTreeItemID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTreeItemID"
  },
  {
    "label": "FTreeItemID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectKey . h \" namespace HLODOutliner { struct FTreeItemID { public :)",
    "insertText": "FTreeItemID() : CachedHash(0)"
  },
  {
    "label": "FTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTreeItemID(const UObject* InObject)"
  },
  {
    "label": "FObjectKey()",
    "kind": "Method",
    "detail": "Function (ObjectKey =)",
    "insertText": "FObjectKey(InObject)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (CachedHash =)",
    "insertText": "GetTypeHash(ObjectKey)"
  },
  {
    "label": "FTreeItemID()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTreeItemID(const FTreeItemID& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* this = Other ; } FTreeItemID&)",
    "insertText": "operator(const FTreeItemID& Other)"
  },
  {
    "label": "FTreeItemID()",
    "kind": "Method",
    "detail": "Function (ObjectKey = Other . ObjectKey ; CachedHash = Other . CachedHash ; return* this ; })",
    "insertText": "FTreeItemID(FTreeItemID&& Other)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "MoveTemp(Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FTreeItemID&)",
    "insertText": "operator(FTreeItemID&& Other)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Swap(*this, Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CachedHash = 0 ; } bool)",
    "insertText": "operator(const FTreeItemID& One, const FTreeItemID& Other)"
  }
]