[
  {
    "label": "remove()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "remove(const char* filename)"
  },
  {
    "label": "rename()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rename(const char* old, const char* new)"
  },
  {
    "label": "fclose()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fclose(FILE* stream)"
  },
  {
    "label": "fflush()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fflush(FILE* stream)"
  },
  {
    "label": "setbuf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setbuf(FILE* restrict stream, char* restrict buf)"
  },
  {
    "label": "setvbuf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "setvbuf(FILE* restrict stream, char* restrict buf, int mode, size_t size)"
  },
  {
    "label": "fprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fprintf(FILE* restrict stream, const char* restrict format, ...)"
  },
  {
    "label": "fscanf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fscanf(FILE* restrict stream, const char * restrict format, ...)"
  },
  {
    "label": "printf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "printf(const char* restrict format, ...)"
  },
  {
    "label": "scanf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "scanf(const char* restrict format, ...)"
  },
  {
    "label": "snprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "snprintf(char* restrict s, size_t n, const char* restrict format, ...)"
  },
  {
    "label": "sprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sprintf(char* restrict s, const char* restrict format, ...)"
  },
  {
    "label": "sscanf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "sscanf(const char* restrict s, const char* restrict format, ...)"
  },
  {
    "label": "vfprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vfprintf(FILE* restrict stream, const char* restrict format, va_list arg)"
  },
  {
    "label": "vfscanf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vfscanf(FILE* restrict stream, const char* restrict format, va_list arg)"
  },
  {
    "label": "vprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vprintf(const char* restrict format, va_list arg)"
  },
  {
    "label": "vscanf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vscanf(const char* restrict format, va_list arg)"
  },
  {
    "label": "vsnprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vsnprintf(char* restrict s, size_t n, const char* restrict format,         // C99\n              va_list arg)"
  },
  {
    "label": "vsprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vsprintf(char* restrict s, const char* restrict format, va_list arg)"
  },
  {
    "label": "vsscanf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vsscanf(const char* restrict s, const char* restrict format, va_list arg)"
  },
  {
    "label": "fgetc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fgetc(FILE* stream)"
  },
  {
    "label": "fputc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fputc(int c, FILE* stream)"
  },
  {
    "label": "fputs()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fputs(const char* restrict s, FILE* restrict stream)"
  },
  {
    "label": "getc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getc(FILE* stream)"
  },
  {
    "label": "getchar()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getchar(void)"
  },
  {
    "label": "putc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "putc(int c, FILE* stream)"
  },
  {
    "label": "putchar()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "putchar(int c)"
  },
  {
    "label": "puts()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "puts(const char* s)"
  },
  {
    "label": "ungetc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ungetc(int c, FILE* stream)"
  },
  {
    "label": "fread()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "fread(void* restrict ptr, size_t size, size_t nmemb,\n             FILE* restrict stream)"
  },
  {
    "label": "fwrite()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "fwrite(const void* restrict ptr, size_t size, size_t nmemb,\n              FILE* restrict stream)"
  },
  {
    "label": "fgetpos()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fgetpos(FILE* restrict stream, fpos_t* restrict pos)"
  },
  {
    "label": "fseek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fseek(FILE* stream, long offset, int whence)"
  },
  {
    "label": "fsetpos()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "fsetpos(FILE*stream, const fpos_t* pos)"
  },
  {
    "label": "ftell()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "ftell(FILE* stream)"
  },
  {
    "label": "rewind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rewind(FILE* stream)"
  },
  {
    "label": "clearerr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearerr(FILE* stream)"
  },
  {
    "label": "feof()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "feof(FILE* stream)"
  },
  {
    "label": "ferror()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ferror(FILE* stream)"
  },
  {
    "label": "perror()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "perror(const char* s)"
  }
]