[
  {
    "label": "FTurnkeySupportModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTurnkeySupportModule"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "ITargetDeviceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDeviceProxy"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "MakeTurnkeyMenu()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Interfaces / ITurnkeySupportModule . h \" # if UE_WITH_TURNKEY_SUPPORT # if WITH_EDITOR # include \" Misc / CoreMisc . h \" # endif class FTurnkeySupportModule : public ITurnkeySupportModule # if WITH_EDITOR,public FSelfRegisteringExec # endif { public : void)",
    "insertText": "MakeTurnkeyMenu(struct FToolMenuSection& MenuSection)"
  },
  {
    "label": "MakeQuickLaunchItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeQuickLaunchItems(class UToolMenu* Menu, FOnQuickLaunchSelected ExternalOnClickDelegate)"
  },
  {
    "label": "MakeSimulatorItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeSimulatorItems(class UToolMenu* Menu, FOnQuickLaunchSelected ExternalOnClickDelegate)"
  },
  {
    "label": "RepeatQuickLaunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatQuickLaunch(FString DeviceId)"
  },
  {
    "label": "UpdateSdkInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSdkInfo()"
  },
  {
    "label": "UpdateSdkInfoForAllDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSdkInfoForAllDevices()"
  },
  {
    "label": "UpdateSdkInfoForProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSdkInfoForProxy(const TSharedRef<class ITargetDeviceProxy>& AddedProxy)"
  },
  {
    "label": "UpdateSdkInfoForDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSdkInfoForDevices(TArray<FString> DeviceIds)"
  },
  {
    "label": "GetSdkInfo()",
    "kind": "Method",
    "detail": "Function (FTurnkeySdkInfo)",
    "insertText": "GetSdkInfo(FName PlatformName, bool bBlockIfQuerying = true)"
  },
  {
    "label": "GetSdkInfoForDeviceId()",
    "kind": "Method",
    "detail": "Function (FTurnkeySdkInfo)",
    "insertText": "GetSdkInfoForDeviceId(const FString& DeviceId)"
  },
  {
    "label": "ClearDeviceStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDeviceStatus(FName PlatformName=NAME_None)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "SupportsDynamicReloading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDynamicReloading()"
  },
  {
    "label": "Exec_Editor()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "Exec_Editor(class UWorld* InWorld, const TCHAR* Cmd, FOutputDevice& Ar)"
  }
]