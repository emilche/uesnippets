[
  {
    "label": "FScenePreUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScenePreUpdateChangeSet"
  },
  {
    "label": "FScenePostUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScenePostUpdateChangeSet"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FPrimitiveBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveBounds"
  },
  {
    "label": "FCullingVolume",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCullingVolume"
  },
  {
    "label": "FSceneCullingBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCullingBuilder"
  },
  {
    "label": "FSceneCulling",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCulling"
  },
  {
    "label": "FSceneCullingRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCullingRenderer"
  },
  {
    "label": "FUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUpdater"
  },
  {
    "label": "FSceneCulling",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCulling"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "FBlockTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlockTraits"
  },
  {
    "label": "FCellIndexCacheEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCellIndexCacheEntry"
  },
  {
    "label": "FItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FItem"
  },
  {
    "label": "FPrimitiveState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveState"
  },
  {
    "label": "EState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EState"
  },
  {
    "label": "FSceneCullingBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCullingBuilder"
  },
  {
    "label": "FSceneInstanceCullingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullingQuery"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "OnPreSceneUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSceneUpdate(FRDGBuilder& GraphBuilder, const FScenePreUpdateChangeSet& ScenePreUpdateData)"
  },
  {
    "label": "OnPostSceneUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSceneUpdate(FRDGBuilder& GraphBuilder, const FScenePostUpdateChangeSet& ScenePostUpdateData)"
  },
  {
    "label": "FinalizeAndClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeAndClear(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUniformBuffer, bool bPublishStats)"
  },
  {
    "label": "EndUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndUpdate(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUniformBuffer, bool bPublishStats)"
  },
  {
    "label": "PublishStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PublishStats()"
  },
  {
    "label": "TestConvexVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestConvexVolume(const FConvexVolume& ViewCullVolume, const FVector3d &WorldToVolumeTranslation, TArray<FCellDraw, SceneRenderingAllocator>& OutCellDraws, uint32 ViewGroupId, uint32 MaxNumViews, uint32& OutNumInstanceGroups)"
  },
  {
    "label": "TestSphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestSphere(const FSphere& Sphere, TArray<FCellDraw, SceneRenderingAllocator>& OutCellDraws, uint32 ViewGroupId, uint32 MaxNumViews, uint32& OutNumInstanceGroups)"
  },
  {
    "label": "Test()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Test(const FCullingVolume& CullingVolume, TArray<FCellDraw, SceneRenderingAllocator>& OutCellDraws, uint32 ViewGroupId, uint32 MaxNumViews, uint32& OutNumInstanceGroups)"
  },
  {
    "label": "FIntVector3()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIntVector3(Data.X, Data.Y, Data.Z)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(Data.X * 1150168907 + Data.Y * 1235029793 + Data.Z * 1282581571 + Data.W * 1264559321)"
  },
  {
    "label": "ValidateAllInstanceAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAllInstanceAllocations()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "AllocateChunk()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AllocateChunk()"
  },
  {
    "label": "FreeChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeChunk(uint32 ChunkId)"
  },
  {
    "label": "UnLockChunkCellData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnLockChunkCellData(uint32 ChunkId)"
  },
  {
    "label": "CellIndexToBlockId()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CellIndexToBlockId(int32 CellIndex)"
  },
  {
    "label": "GetCellLoc()",
    "kind": "Method",
    "detail": "Function (FLocation64)",
    "insertText": "GetCellLoc(int32 CellIndex)"
  },
  {
    "label": "IsUncullable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUncullable(const FPrimitiveBounds& Bounds, FPrimitiveSceneInfo* PrimitiveSceneInfo)"
  }
]