[
  {
    "label": "INavRelevantInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavRelevantInterface"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FNavigationElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationElement"
  },
  {
    "label": "FNavigationRelevantData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationRelevantData"
  },
  {
    "label": "FNavigableGeometryExport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigableGeometryExport"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FNavigationElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationElementHandle"
  },
  {
    "label": "FNavigationElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationElement"
  },
  {
    "label": "FNavigationDirtyElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationDirtyElement"
  },
  {
    "label": "FPrivateToken",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrivateToken"
  },
  {
    "label": "FNavigationElementHandle()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FNavigationElementHandle(const UObject* Object, const uint64 SubElementId = INDEX_NONE)"
  },
  {
    "label": "FNavigationElementHandle()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FNavigationElementHandle(const TWeakObjectPtr<const UObject>& WeakObject, const uint64 SubElementId = INDEX_NONE)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FNavigationElementHandle& Handle)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(const FNavigationElementHandle& Handle)"
  },
  {
    "label": "FNavigationElement()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FNavigationElement(FPrivateToken, const UObject* Object, uint64 SubElementId /*= INDEX_NONE*/)"
  },
  {
    "label": "FNavigationElement()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FNavigationElement(const UObject& Object, uint64 SubElementId = INDEX_NONE)"
  },
  {
    "label": "FNavigationElement()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FNavigationElement(const INavRelevantInterface& NavRelevant, uint64 SubElementId = INDEX_NONE)"
  },
  {
    "label": "CreateFromNavRelevantInterface()",
    "kind": "Method",
    "detail": "Function (FNavigationElement>)",
    "insertText": "CreateFromNavRelevantInterface(const INavRelevantInterface& NavRelevantInterface)"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransform(const FTransform& InGeometryTransform)"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBounds(const FBox& InBounds)"
  },
  {
    "label": "SetBodySetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBodySetup(UBodySetup* InBodySetup)"
  },
  {
    "label": "SetNavigationParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavigationParent(const UObject* InNavigationParent)"
  },
  {
    "label": "SetGeometryExportType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeometryExportType(const EHasCustomNavigableGeometry::Type InCustomNavigableGeometry)"
  },
  {
    "label": "SetGeometryGatheringMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeometryGatheringMode(const ENavDataGatheringMode InGeometryGatheringMode)"
  },
  {
    "label": "SetDirtyAreaOnRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDirtyAreaOnRegistration(const bool bInDirtyAreaOnRegistration)"
  },
  {
    "label": "GetNameSafe()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNameSafe(const FNavigationElement* Element)"
  },
  {
    "label": "GetPathNameSafe()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathNameSafe(const FNavigationElement* Element)"
  },
  {
    "label": "GetFullNameSafe()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFullNameSafe(const FNavigationElement* Element)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FNavigationElement& Element)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(const FNavigationElement& Element)"
  },
  {
    "label": "FNavigationElement()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FNavigationElement(const UObject& Object, uint64 SubElementId, bool bTryInitializeFromInterface)"
  },
  {
    "label": "InitializeFromInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromInterface(const INavRelevantInterface* NavRelevantInterface)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValid()"
  }
]