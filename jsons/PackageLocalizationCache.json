[
  {
    "label": "FPackageLocalizationCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageLocalizationCache"
  },
  {
    "label": "FPackageLocalizationCultureCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageLocalizationCultureCache"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" HAL / CriticalSection . h \" # include \" Internationalization / IPackageLocalizationCache . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / Tuple . h \" # include \" UObject / Class . h \" # include \" UObject / NameTypes . h \" # include \" UObject / TopLevelAssetPath . h \" class FPackageLocalizationCache ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogPackageLocalizationCache, Log, All)"
  },
  {
    "label": "FPackageLocalizationCultureCache()",
    "kind": "Method",
    "detail": "Function (class FPackageLocalizationCultureCache { public :)",
    "insertText": "FPackageLocalizationCultureCache(FPackageLocalizationCache* InOwnerCache, const FString& InCultureName)"
  },
  {
    "label": "ConditionalUpdateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalUpdateCache()"
  },
  {
    "label": "AddRootSourcePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRootSourcePath(const FString& InRootPath)"
  },
  {
    "label": "RemoveRootSourcePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRootSourcePath(const FString& InRootPath)"
  },
  {
    "label": "AddPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddPackage(const FString& InPackageName)"
  },
  {
    "label": "RemovePackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemovePackage(const FString& InPackageName)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "FindLocalizedPackageName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "FindLocalizedPackageName(const FName InSourcePackageName)"
  },
  {
    "label": "ConditionalUpdateCache_NoLock()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ConditionalUpdateCache_NoLock()"
  },
  {
    "label": "FPackageLocalizationCache()",
    "kind": "Method",
    "detail": "Function (private : FCriticalSection LocalizedPackagesCS ; FPackageLocalizationCache* OwnerCache ; TArray<FString> PrioritizedCultureNames ; TArray<FString> PrioritizedCultureNamesAndVerseIdentifiers ; TArray<FString> PendingSourceRootPathsToSearch ; TMap<FString,TArray<FString>> SourcePathsToLocalizedPaths ; TMap<FName,TArray<FName>> SourcePackagesToLocalizedPackages ; } ; class FPackageLocalizationCache : public IPackageLocalizationCache { class FPackageLocalizationCultureCache ; public :)",
    "insertText": "FPackageLocalizationCache()"
  },
  {
    "label": "InvalidateRootSourcePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateRootSourcePath(const FString& InRootPath)"
  },
  {
    "label": "FindLocalizedPackageNameForCulture()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "FindLocalizedPackageNameForCulture(const FName InSourcePackageName, const FString& InCultureName)"
  },
  {
    "label": "FindLocalizedPackages()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "FindLocalizedPackages(const TMap<FString, TArray<FString>>& NewSourceToLocalizedPaths, TMap<FName, TArray<FName>>& InOutSourcePackagesToLocalizedPackages)"
  },
  {
    "label": "FindAssetGroupPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAssetGroupPackages(const FName InAssetGroupName, const FTopLevelAssetPath& InAssetClassName)"
  },
  {
    "label": "FindOrAddCacheForCulture_NoLock()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPackageLocalizationCultureCache>)",
    "insertText": "FindOrAddCacheForCulture_NoLock(const FString& InCultureName)"
  },
  {
    "label": "ConditionalUpdatePackageNameToAssetGroupCache_NoLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalUpdatePackageNameToAssetGroupCache_NoLock()"
  },
  {
    "label": "HandleContentPathMounted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleContentPathMounted(const FString& InAssetPath, const FString& InFilesystemPath)"
  },
  {
    "label": "HandleContentPathDismounted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleContentPathDismounted(const FString& InAssetPath, const FString& InFilesystemPath)"
  },
  {
    "label": "HandleCultureChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCultureChanged()"
  }
]