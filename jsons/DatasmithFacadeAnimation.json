[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DATASMITHFACADE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHFACADE_API"
  },
  {
    "label": "FDatasmithFacadeLevelSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithFacadeLevelSequence"
  },
  {
    "label": "IsSubType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DatasmithFacadeElement . h \" enum class EDatasmithFacadeCurveInterpMode { Linear,Constant,Cubic } ; enum class EDatasmithFacadeAnimationTransformType { Translation,Rotation,Scale } ; enum class EDatasmithFacadeElementAnimationSubType : uint64 { BaseAnimation = 0,TransformAnimation = 1<<0,VisibilityAnimation = 1<<1,SubsequenceAnimation = 1<<2,} ; enum class EDatasmithFacadeCompletionMode : uint8 { KeepState,RestoreState,ProjectDefault,} ; enum class EDatasmithFacadeTransformChannels : uint16 { None = 0 x000,TranslationX = 0 x001,TranslationY = 0 x002,TranslationZ = 0 x004,Translation = TranslationX | TranslationY | TranslationZ,RotationX = 0 x008,RotationY = 0 x010,RotationZ = 0 x020,Rotation = RotationX | RotationY | RotationZ,ScaleX = 0 x040,ScaleY = 0 x080,ScaleZ = 0 x100,Scale = ScaleX | ScaleY | ScaleZ,All = Translation | Rotation | Scale,} ; class FDatasmithFacadeBaseAnimation : public FDatasmithFacadeElement { public : bool)",
    "insertText": "IsSubType(const EDatasmithFacadeElementAnimationSubType AnimSubType)"
  },
  {
    "label": "SetCompletionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompletionMode(EDatasmithFacadeCompletionMode CompletionMode)"
  },
  {
    "label": "GetCompletionMode()",
    "kind": "Method",
    "detail": "Function (EDatasmithFacadeCompletionMode)",
    "insertText": "GetCompletionMode()"
  },
  {
    "label": "FDatasmithFacadeBaseAnimation()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeBaseAnimation(const TSharedRef<IDatasmithBaseAnimationElement>& InInternalAnimation)"
  },
  {
    "label": "GetDatasmithBaseAnimation()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithBaseAnimationElement>)",
    "insertText": "GetDatasmithBaseAnimation()"
  },
  {
    "label": "FDatasmithFacadeTransformAnimation()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeTransformAnimation : public FDatasmithFacadeBaseAnimation { public :)",
    "insertText": "FDatasmithFacadeTransformAnimation(const TCHAR* InName)"
  },
  {
    "label": "AddFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFrame(EDatasmithFacadeAnimationTransformType TransformType, int32 FrameNumber, float X, float Y, float Z)"
  },
  {
    "label": "GetFramesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFramesCount(EDatasmithFacadeAnimationTransformType TransformType)"
  },
  {
    "label": "SetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveInterpMode(EDatasmithFacadeAnimationTransformType TransformType, EDatasmithFacadeCurveInterpMode CurveInterpMode)"
  },
  {
    "label": "GetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (EDatasmithFacadeCurveInterpMode)",
    "insertText": "GetCurveInterpMode(EDatasmithFacadeAnimationTransformType TransformType)"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFrame(EDatasmithFacadeAnimationTransformType TransformType, int32 Index, int32& OutFrameNumber, double& OutX, double& OutY, double& OutZ)"
  },
  {
    "label": "RemoveFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFrame(EDatasmithFacadeAnimationTransformType TransformType, int32 Index)"
  },
  {
    "label": "GetEnabledTransformChannels()",
    "kind": "Method",
    "detail": "Function (EDatasmithFacadeTransformChannels)",
    "insertText": "GetEnabledTransformChannels()"
  },
  {
    "label": "SetEnabledTransformChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledTransformChannels(EDatasmithFacadeTransformChannels Channels)"
  },
  {
    "label": "FDatasmithFacadeTransformAnimation()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeTransformAnimation(const TSharedRef<IDatasmithTransformAnimationElement>& InInternalAnimation)"
  },
  {
    "label": "GetDatasmithTransformAnimation()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithTransformAnimationElement>)",
    "insertText": "GetDatasmithTransformAnimation()"
  },
  {
    "label": "FDatasmithFacadeVisibilityAnimation()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeVisibilityAnimation : public FDatasmithFacadeBaseAnimation { public :)",
    "insertText": "FDatasmithFacadeVisibilityAnimation(const TCHAR* InName)"
  },
  {
    "label": "AddFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFrame(int32 FrameNumber, bool bVisible)"
  },
  {
    "label": "GetFramesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFramesCount()"
  },
  {
    "label": "SetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveInterpMode(EDatasmithFacadeCurveInterpMode CurveInterpMode)"
  },
  {
    "label": "GetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (EDatasmithFacadeCurveInterpMode)",
    "insertText": "GetCurveInterpMode()"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFrame(int32 Index, int32& OutFrameNumber, bool& bOutVisible)"
  },
  {
    "label": "RemoveFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFrame(int32 Index)"
  },
  {
    "label": "SetPropagateToChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropagateToChildren(bool bPropagate)"
  },
  {
    "label": "GetPropagateToChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPropagateToChildren()"
  },
  {
    "label": "FDatasmithFacadeVisibilityAnimation()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeVisibilityAnimation(const TSharedRef<IDatasmithVisibilityAnimationElement>& InInternalAnimation)"
  },
  {
    "label": "GetDatasmithVisibilityAnimation()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithVisibilityAnimationElement>)",
    "insertText": "GetDatasmithVisibilityAnimation()"
  },
  {
    "label": "FDatasmithFacadeSubsequenceAnimation()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeLevelSequence ; class FDatasmithFacadeSubsequenceAnimation : public FDatasmithFacadeBaseAnimation { public :)",
    "insertText": "FDatasmithFacadeSubsequenceAnimation(const TCHAR* InName)"
  },
  {
    "label": "GetStartTime()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStartTime()"
  },
  {
    "label": "SetStartTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartTime(int32 InFrameNumber)"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDuration()"
  },
  {
    "label": "SetDuration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDuration(int32 InDuration)"
  },
  {
    "label": "GetTimeScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTimeScale()"
  },
  {
    "label": "SetTimeScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeScale(float InTimeScale)"
  },
  {
    "label": "GetNewSubsequence()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeLevelSequence*)",
    "insertText": "GetNewSubsequence()"
  },
  {
    "label": "SetSubsequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubsequence(FDatasmithFacadeLevelSequence* InSubsequence)"
  },
  {
    "label": "FDatasmithFacadeSubsequenceAnimation()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeSubsequenceAnimation(const TSharedRef<IDatasmithSubsequenceAnimationElement>& InInternalAnimation)"
  },
  {
    "label": "GetDatasmithSubsequenceAnimation()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithSubsequenceAnimationElement>)",
    "insertText": "GetDatasmithSubsequenceAnimation()"
  },
  {
    "label": "FDatasmithFacadeLevelSequence()",
    "kind": "Method",
    "detail": "Function (} ; class FDatasmithFacadeLevelSequence : public FDatasmithFacadeElement { public :)",
    "insertText": "FDatasmithFacadeLevelSequence(const TCHAR* InName)"
  },
  {
    "label": "GetFile()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetFile()"
  },
  {
    "label": "SetFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFile(const TCHAR* InFile)"
  },
  {
    "label": "GetFileHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFileHash(TCHAR OutBuffer[33], size_t BufferSize)"
  },
  {
    "label": "SetFileHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFileHash(const TCHAR* Hash)"
  },
  {
    "label": "GetFrameRate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFrameRate()"
  },
  {
    "label": "SetFrameRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameRate(float FramePerSecs)"
  },
  {
    "label": "AddAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnimation(FDatasmithFacadeTransformAnimation* InAnimation)"
  },
  {
    "label": "GetAnimationsCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAnimationsCount()"
  },
  {
    "label": "GetNewTransformAnimation()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeTransformAnimation*)",
    "insertText": "GetNewTransformAnimation(int32 InIndex)"
  },
  {
    "label": "GetNewVisibilityAnimation()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeVisibilityAnimation*)",
    "insertText": "GetNewVisibilityAnimation(int32 InIndex)"
  },
  {
    "label": "GetNewSubsequenceAnimation()",
    "kind": "Method",
    "detail": "Function (FDatasmithFacadeSubsequenceAnimation*)",
    "insertText": "GetNewSubsequenceAnimation(int32 InIndex)"
  },
  {
    "label": "RemoveAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAnimation(FDatasmithFacadeBaseAnimation* InAnimation)"
  },
  {
    "label": "FDatasmithFacadeLevelSequence()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeLevelSequence(const TSharedRef<IDatasmithLevelSequenceElement>& InInternalLevelSequence)"
  },
  {
    "label": "GetDatasmithLevelSequence()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithLevelSequenceElement>)",
    "insertText": "GetDatasmithLevelSequence()"
  }
]