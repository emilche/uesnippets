[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AHierarchicalLODVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AHierarchicalLODVolume"
  },
  {
    "label": "ALODActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALODActor"
  },
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "FStaticMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshRenderData"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "FHierarchicalSimplification",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHierarchicalSimplification"
  },
  {
    "label": "FHierarchicalLODUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHierarchicalLODUtilities"
  },
  {
    "label": "FHierarchicalLODUtilities()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / StaticMesh . h \" # include \" IHierarchicalLODUtilities . h \" class AActor ; class AHierarchicalLODVolume ; class ALODActor ; class AWorldSettings ; class FStaticMeshRenderData ; class ULevel ; class UStaticMeshComponent ; struct FHierarchicalSimplification ; class FHierarchicalLODUtilities : public IHierarchicalLODUtilities { public : ~)",
    "insertText": "FHierarchicalLODUtilities()"
  },
  {
    "label": "ExtractSubActorsFromLODActor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ExtractSubActorsFromLODActor(AActor* Actor, TArray<AActor*>& InOutActors)"
  },
  {
    "label": "CalculateScreenSizeFromDrawDistance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateScreenSizeFromDrawDistance(const float SphereRadius, const FMatrix& ProjectionMatrix, const float Distance)"
  },
  {
    "label": "CalculateDrawDistanceFromScreenSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateDrawDistanceFromScreenSize(const float SphereRadius, const float ScreenSize, const FMatrix& ProjectionMatrix)"
  },
  {
    "label": "CreateOrRetrieveLevelHLODPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "CreateOrRetrieveLevelHLODPackage(const ULevel* InLevel, const uint32 HLODLevelIndex)"
  },
  {
    "label": "RetrieveLevelHLODPackage()",
    "kind": "Method",
    "detail": "Function (UPackage*)",
    "insertText": "RetrieveLevelHLODPackage(const ULevel* InLevel, const uint32 HLODLevelIndex)"
  },
  {
    "label": "CreateOrRetrieveLevelHLODProxy()",
    "kind": "Method",
    "detail": "Function (UHLODProxy*)",
    "insertText": "CreateOrRetrieveLevelHLODProxy(const ULevel* InLevel, const uint32 HLODLevelIndex)"
  },
  {
    "label": "RetrieveLevelHLODProxy()",
    "kind": "Method",
    "detail": "Function (UHLODProxy*)",
    "insertText": "RetrieveLevelHLODProxy(const ULevel* InLevel, const uint32 HLODLevelIndex)"
  },
  {
    "label": "GetWildcardOfHLODPackagesForPackage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWildcardOfHLODPackagesForPackage(const FString& PackageName)"
  },
  {
    "label": "GetLevelHLODProxyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLevelHLODProxyName(const FString& InLevelPackageName, const uint32 HLODLevelIndex)"
  },
  {
    "label": "BuildStaticMeshForLODActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildStaticMeshForLODActor(ALODActor* LODActor, UHLODProxy* Proxy, const FHierarchicalSimplification& LODSetup, UMaterialInterface* InBaseMaterial)"
  },
  {
    "label": "ShouldGenerateCluster()",
    "kind": "Method",
    "detail": "Function (EClusterGenerationError)",
    "insertText": "ShouldGenerateCluster(AActor* Actor, const int32 HLODLevelIndex)"
  },
  {
    "label": "GetParentLODActor()",
    "kind": "Method",
    "detail": "Function (ALODActor*)",
    "insertText": "GetParentLODActor(const AActor* InActor)"
  },
  {
    "label": "DestroyCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCluster(ALODActor* InActor)"
  },
  {
    "label": "CreateNewClusterActor()",
    "kind": "Method",
    "detail": "Function (ALODActor*)",
    "insertText": "CreateNewClusterActor(UWorld* InWorld, const int32 InLODLevel, AWorldSettings* WorldSettings)"
  },
  {
    "label": "CreateNewClusterFromActors()",
    "kind": "Method",
    "detail": "Function (ALODActor*)",
    "insertText": "CreateNewClusterFromActors(UWorld* InWorld, AWorldSettings* WorldSettings, const TArray<AActor*>& InActors, const int32 InLODLevel = 0)"
  },
  {
    "label": "RemoveActorFromCluster()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "RemoveActorFromCluster(AActor* InActor)"
  },
  {
    "label": "AddActorToCluster()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "AddActorToCluster(AActor* InActor, ALODActor* InParentActor)"
  },
  {
    "label": "MergeClusters()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "MergeClusters(ALODActor* TargetCluster, ALODActor* SourceCluster)"
  },
  {
    "label": "AreActorsInSamePersistingLevel()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "AreActorsInSamePersistingLevel(const TArray<AActor*>& InActors)"
  },
  {
    "label": "AreClustersInSameHLODLevel()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "AreClustersInSameHLODLevel(const TArray<ALODActor*>& InLODActors)"
  },
  {
    "label": "AreActorsInSameHLODLevel()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "AreActorsInSameHLODLevel(const TArray<AActor*>& InActors)"
  },
  {
    "label": "AreActorsClustered()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "AreActorsClustered(const TArray<AActor*>& InActors)"
  },
  {
    "label": "IsActorClustered()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsActorClustered(const AActor* InActor)"
  },
  {
    "label": "ExcludeActorFromClusterGeneration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExcludeActorFromClusterGeneration(AActor* InActor)"
  },
  {
    "label": "DestroyLODActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyLODActor(ALODActor* InActor)"
  },
  {
    "label": "ExtractStaticMeshActorsFromLODActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractStaticMeshActorsFromLODActor(ALODActor* LODActor, TArray<AActor*> &InOutActors)"
  },
  {
    "label": "DeleteLODActorsInHLODLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLODActorsInHLODLevel(UWorld* InWorld, const int32 HLODLevelIndex)"
  },
  {
    "label": "ComputeStaticMeshLODLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ComputeStaticMeshLODLevel(const TArray<FStaticMeshSourceModel>& SourceModels, const FStaticMeshRenderData* RenderData, const float ScreenSize)"
  },
  {
    "label": "GetLODLevelForScreenSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODLevelForScreenSize(const UStaticMeshComponent* StaticMeshComponent, const float ScreenSize)"
  },
  {
    "label": "CreateVolumeForLODActor()",
    "kind": "Method",
    "detail": "Function (AHierarchicalLODVolume*)",
    "insertText": "CreateVolumeForLODActor(ALODActor* InLODActor, UWorld* InWorld)"
  },
  {
    "label": "HandleActorModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleActorModified(AActor* InActor)"
  },
  {
    "label": "IsWorldUsedForStreaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWorldUsedForStreaming(const UWorld* InWorld)"
  },
  {
    "label": "CleanStandaloneAssetsInPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanStandaloneAssetsInPackage(UPackage* InPackage)"
  }
]