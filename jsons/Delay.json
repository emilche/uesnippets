[
  {
    "label": "FDelay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDelay"
  },
  {
    "label": "FDelay()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FDelay()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const float InSampleRate, const float InBufferLengthSec = 2.0f)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ResetWithFade()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetWithFade()"
  },
  {
    "label": "SetDelayMsec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDelayMsec(const float InDelayMsec)"
  },
  {
    "label": "SetDelaySamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDelaySamples(const float InDelaySamples)"
  },
  {
    "label": "SetEasedDelayMsec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEasedDelayMsec(const float InDelayMsec, const bool bIsInit = false)"
  },
  {
    "label": "SetEaseFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEaseFactor(const float InEaseFactor)"
  },
  {
    "label": "SetOutputAttenuationDB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutputAttenuationDB(const float InDelayAttenDB)"
  },
  {
    "label": "WriteDelayAndInc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteDelayAndInc(const float InDelayInput)"
  },
  {
    "label": "ProcessAudioSample()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ProcessAudioSample(const float InAudio)"
  },
  {
    "label": "ProcessAudioBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioBuffer(const float* InAudio, int32 InNumSamples, float* OutAudio)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(bool bForce = false)"
  },
  {
    "label": "ResizeIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeIfNeeded(const int32 InNewNumSamples)"
  }
]