[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "MouseCursor()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_MOUSE_CURSOR_H_ # define MODULES_DESKTOP_CAPTURE_MOUSE_CURSOR_H_ # include<memory> # include \" modules / desktop_capture / desktop_frame . h \" # include \" modules / desktop_capture / desktop_geometry . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RTC_EXPORT MouseCursor { public :)",
    "insertText": "MouseCursor()"
  },
  {
    "label": "MouseCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MouseCursor(DesktopFrame* image, const DesktopVector& hotspot)"
  },
  {
    "label": "MouseCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MouseCursor(const MouseCursor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MouseCursor&)",
    "insertText": "operator(const MouseCursor&)"
  },
  {
    "label": "CopyOf()",
    "kind": "Method",
    "detail": "Function (MouseCursor*)",
    "insertText": "CopyOf(const MouseCursor& cursor)"
  },
  {
    "label": "set_image()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_image(DesktopFrame* image)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (image_ .)",
    "insertText": "reset(image)"
  },
  {
    "label": "image()",
    "kind": "Method",
    "detail": "Function (} const DesktopFrame*)",
    "insertText": "image()"
  },
  {
    "label": "set_hotspot()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_hotspot(const DesktopVector& hotspot)"
  },
  {
    "label": "hotspot()",
    "kind": "Method",
    "detail": "Function (hotspot_ = hotspot ; } const DesktopVector&)",
    "insertText": "hotspot()"
  }
]