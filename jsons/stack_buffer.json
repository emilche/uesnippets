[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PROFILER_STACK_BUFFER_H_ # define BASE_PROFILER_STACK_BUFFER_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" base / base_export . h \" # include \" base / memory / aligned_memory . h \" # include \" build / build_config . h \" namespace base { class BASE_EXPORT StackBuffer { public : size_t kPlatformStackAlignment = 2*)",
    "insertText": "sizeof(uintptr_t)"
  },
  {
    "label": "StackBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StackBuffer(size_t buffer_size)"
  },
  {
    "label": "StackBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StackBuffer(const StackBuffer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StackBuffer&)",
    "insertText": "operator(const StackBuffer&)"
  },
  {
    "label": "StackBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StackBuffer()"
  },
  {
    "label": "buffer()",
    "kind": "Method",
    "detail": "Function (uintptr_t*)",
    "insertText": "buffer()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "size()"
  }
]