[
  {
    "label": "_cef_render_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_render_handler_t"
  },
  {
    "label": "_cef_accessibility_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_accessibility_handler_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_screen_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_screen_info_t"
  },
  {
    "label": "_cef_drag_data_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_drag_data_t"
  },
  {
    "label": "_cef_accessibility_handler_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_RENDER_HANDLER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_RENDER_HANDLER_CAPI_H_ # pragma once # include \" include / capi / cef_accessibility_handler_capi . h \" # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_browser_capi . h \" # include \" include / capi / cef_drag_data_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_render_handler_t { cef_base_ref_counted_t base ; struct)",
    "insertText": "_cef_accessibility_handler_t(CEF_CALLBACK* get_accessibility_handler)( struct _cef_render_handler_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_root_screen_rect)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, cef_rect_t* rect)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* get_view_rect)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, cef_rect_t* rect)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_screen_point)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, int viewX, int viewY, int* screenX, int* screenY)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_screen_info)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, struct _cef_screen_info_t* screen_info)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_popup_show)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, int show)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_popup_size)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, const cef_rect_t* rect)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_paint)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, cef_paint_element_type_t type, size_t dirtyRectsCount, cef_rect_t const* dirtyRects, const void* buffer, int width, int height)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_accelerated_paint)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, cef_paint_element_type_t type, size_t dirtyRectsCount, cef_rect_t const* dirtyRects, void* shared_handle)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* start_dragging)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, struct _cef_drag_data_t* drag_data, cef_drag_operations_mask_t allowed_ops, int x, int y)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* update_drag_cursor)(struct _cef_render_handler_t* self, struct _cef_browser_t* browser, cef_drag_operations_mask_t operation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_scroll_offset_changed)( struct _cef_render_handler_t* self, struct _cef_browser_t* browser, double x, double y)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_ime_composition_range_changed)( struct _cef_render_handler_t* self, struct _cef_browser_t* browser, const cef_range_t* selected_range, size_t character_boundsCount, cef_rect_t const* character_bounds)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_text_selection_changed)( struct _cef_render_handler_t* self, struct _cef_browser_t* browser, const cef_string_t* selected_text, const cef_range_t* selected_range)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_virtual_keyboard_requested)( struct _cef_render_handler_t* self, struct _cef_browser_t* browser, cef_text_input_mode_t input_mode)"
  }
]