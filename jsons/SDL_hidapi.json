[
  {
    "label": "SDL_hid_device_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_hid_device_"
  },
  {
    "label": "SDL_hid_device_info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_hid_device_info"
  },
  {
    "label": "SDL_hid_init()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_hidapi_h_ # define SDL_hidapi_h_ # include \" SDL_stdinc . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif struct SDL_hid_device_ ; typedef struct SDL_hid_device_ SDL_hid_device ; typedef struct SDL_hid_device_info { char* path ; unsigned short vendor_id ; unsigned short product_id ; wchar_t* serial_number ; unsigned short release_number ; wchar_t* manufacturer_string ; wchar_t* product_string ; unsigned short usage_page ; unsigned short usage ; int interface_number ; int interface_class ; int interface_subclass ; int interface_protocol ; struct SDL_hid_device_info* next ; } SDL_hid_device_info ; DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_init(void)"
  },
  {
    "label": "SDL_hid_exit()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_exit(void)"
  },
  {
    "label": "SDL_hid_device_change_count()",
    "kind": "Method",
    "detail": "Function (DECLSPEC Uint32 SDLCALL)",
    "insertText": "SDL_hid_device_change_count(void)"
  },
  {
    "label": "SDL_hid_enumerate()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_hid_device_info* SDLCALL)",
    "insertText": "SDL_hid_enumerate(unsigned short vendor_id, unsigned short product_id)"
  },
  {
    "label": "SDL_hid_free_enumeration()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_hid_free_enumeration(SDL_hid_device_info *devs)"
  },
  {
    "label": "SDL_hid_open()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_hid_device* SDLCALL)",
    "insertText": "SDL_hid_open(unsigned short vendor_id, unsigned short product_id, const wchar_t *serial_number)"
  },
  {
    "label": "SDL_hid_open_path()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_hid_device* SDLCALL)",
    "insertText": "SDL_hid_open_path(const char *path, int bExclusive)"
  },
  {
    "label": "SDL_hid_write()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_write(SDL_hid_device *dev, const unsigned char *data, size_t length)"
  },
  {
    "label": "SDL_hid_read_timeout()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_read_timeout(SDL_hid_device *dev, unsigned char *data, size_t length, int milliseconds)"
  },
  {
    "label": "SDL_hid_read()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_read(SDL_hid_device *dev, unsigned char *data, size_t length)"
  },
  {
    "label": "SDL_hid_set_nonblocking()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_set_nonblocking(SDL_hid_device *dev, int nonblock)"
  },
  {
    "label": "SDL_hid_send_feature_report()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_send_feature_report(SDL_hid_device *dev, const unsigned char *data, size_t length)"
  },
  {
    "label": "SDL_hid_get_feature_report()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_get_feature_report(SDL_hid_device *dev, unsigned char *data, size_t length)"
  },
  {
    "label": "SDL_hid_close()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_hid_close(SDL_hid_device *dev)"
  },
  {
    "label": "SDL_hid_get_manufacturer_string()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_get_manufacturer_string(SDL_hid_device *dev, wchar_t *string, size_t maxlen)"
  },
  {
    "label": "SDL_hid_get_product_string()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_get_product_string(SDL_hid_device *dev, wchar_t *string, size_t maxlen)"
  },
  {
    "label": "SDL_hid_get_serial_number_string()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_get_serial_number_string(SDL_hid_device *dev, wchar_t *string, size_t maxlen)"
  },
  {
    "label": "SDL_hid_get_indexed_string()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_hid_get_indexed_string(SDL_hid_device *dev, int string_index, wchar_t *string, size_t maxlen)"
  },
  {
    "label": "SDL_hid_ble_scan()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_hid_ble_scan(SDL_bool active)"
  }
]