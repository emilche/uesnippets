[
  {
    "label": "FSelectionFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSelectionFacade"
  },
  {
    "label": "FSelectionKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectionKey"
  },
  {
    "label": "InitUnboundedGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitUnboundedGroup(FName GroupName, FName DependencyGroup)"
  },
  {
    "label": "InitWeightedUnboundedGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWeightedUnboundedGroup(FName GroupName, FName DependencyGroup)"
  },
  {
    "label": "InitBoundedGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBoundedGroup(FName GroupName, FName DependencyGroup, FName BoneDependencyGroup)"
  },
  {
    "label": "InitWeightedBoundedGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWeightedBoundedGroup(FName GroupName, FName DependencyGroup, FName BoneDependencyGroup)"
  },
  {
    "label": "FSelectionFacade()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FSelectionFacade(FManagedArrayCollection& InSelf)"
  },
  {
    "label": "FSelectionFacade()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FSelectionFacade(const FManagedArrayCollection& InSelf)"
  },
  {
    "label": "AddSelection()",
    "kind": "Method",
    "detail": "Function (FSelectionKey)",
    "insertText": "AddSelection(const TArray<int32>& Indices, FName DependencyGroup)"
  },
  {
    "label": "AddSelection()",
    "kind": "Method",
    "detail": "Function (FSelectionKey)",
    "insertText": "AddSelection(const TArray<int32>& Indices, const TArray<float>& Weights, FName DependencyGroup)"
  }
]