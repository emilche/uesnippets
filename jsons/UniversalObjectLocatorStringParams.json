[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FParseStringParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParseStringParams"
  },
  {
    "label": "FParseStringResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParseStringResult"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StringView . h \" # include \" Misc / EnumClassFlags . h \" # include \" Internationalization / Text . h \" namespace UE::UniversalObjectLocator { enum class EParseStringFlags : uint8 { None = 0,ErrorMessaging = 1<<0,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EParseStringFlags)"
  },
  {
    "label": "NeedsErrorMessaging()",
    "kind": "Method",
    "detail": "Function (EParseStringFlags Flags = EParseStringFlags::None ; bool)",
    "insertText": "NeedsErrorMessaging()"
  },
  {
    "label": "UE_UOL_PARSE_ERROR()",
    "kind": "Method",
    "detail": "Function (} } ; # define)",
    "insertText": "UE_UOL_PARSE_ERROR(InParams, ...) InParams.NeedsErrorMessaging() ? (__VA_ARGS__) : FText()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (FText ErrorMessage ; int32 NumCharsParsed = 0 ; bool bSuccess = false ; operator)",
    "insertText": "bool()"
  },
  {
    "label": "Failure()",
    "kind": "Method",
    "detail": "Function (NumCharsParsed + = AdditionalNumCharsParsed ; bSuccess = true ; return* this ; } FParseStringResult&)",
    "insertText": "Failure(const FText& InFailureText)"
  },
  {
    "label": "Progress()",
    "kind": "Method",
    "detail": "Function (ErrorMessage = InFailureText ; } bSuccess = false ; return* this ; } FStringView)",
    "insertText": "Progress(FStringView CurrentString, int32 NumToProgress)"
  }
]