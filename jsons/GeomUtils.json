[
  {
    "label": "Seg()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "Seg(End - Start)"
  },
  {
    "label": "Dir()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "Dir(Point - Start)"
  },
  {
    "label": "Seg()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "Seg(End - Start)"
  },
  {
    "label": "Dir()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "Dir(Point - Start)"
  },
  {
    "label": "Seg()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "Seg(End - Start)"
  },
  {
    "label": "Dir()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "Dir(Point - Start)"
  },
  {
    "label": "IntersectSegmentPoly2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IntersectSegmentPoly2D(const FVector& Start, const FVector& End, TConstArrayView<FVector> Poly,\n\t\t\t\t\t\t\t\tFVector2D::FReal& OutTMin, FVector2D::FReal& OutTMax, int32& OutSegMin, int32& OutSegMax)"
  },
  {
    "label": "InvBilinear2D()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "InvBilinear2D(const FVector Point, const FVector VertexA, const FVector VertexB, const FVector VertexC, const FVector VertexD)"
  }
]