[
  {
    "label": "FInstanceCullingResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceCullingResult"
  },
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FInstanceCullingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingManager"
  },
  {
    "label": "FInstanceCullingDrawParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingDrawParams"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FGPUScenePrimitiveCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScenePrimitiveCollector"
  },
  {
    "label": "FInstanceCullingDeferredContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingDeferredContext"
  },
  {
    "label": "FMeshDrawCommandPassStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandPassStats"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInstanceProcessingGPULoadBalancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceProcessingGPULoadBalancer"
  },
  {
    "label": "FInstanceCullingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingContext"
  },
  {
    "label": "FMeshDrawCommandInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandInfo"
  },
  {
    "label": "FPayloadData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPayloadData"
  },
  {
    "label": "FCompactionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactionData"
  },
  {
    "label": "DECLARE_UNIFORM_BUFFER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" MeshPassProcessor . h \" # include \" RHI . h \" # include \" RenderGraphResources . h \" struct FInstanceCullingResult ; class FGPUScene ; class FInstanceCullingManager ; class FInstanceCullingDrawParams ; class FScene ; class FGPUScenePrimitiveCollector ; class FInstanceCullingDeferredContext ; struct FMeshDrawCommandPassStats ;)",
    "insertText": "DECLARE_UNIFORM_BUFFER_STRUCT(FSceneUniformParameters, RENDERER_API) BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FInstanceCullingGlobalUniforms, RENDERER_API) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<uint>, InstanceIdsBuffer) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<uint>, PageInfoBuffer) SHADER_PARAMETER(uint32, BufferCapacity) END_GLOBAL_SHADER_PARAMETER_STRUCT() BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FBatchedPrimitiveParameters,RENDERER_API) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<float4>, Data) END_GLOBAL_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FInstanceCullingDrawParams, ) RDG_BUFFER_ACCESS(DrawIndirectArgsBuffer, ERHIAccess::IndirectArgs) RDG_BUFFER_ACCESS(InstanceIdOffsetBuffer, ERHIAccess::VertexOrIndexBuffer) SHADER_PARAMETER(uint32, InstanceDataByteOffset) SHADER_PARAMETER(uint32, IndirectArgsByteOffset) SHADER_PARAMETER_RDG_UNIFORM_BUFFER(FInstanceCullingGlobalUniforms, InstanceCulling) SHADER_PARAMETER_RDG_UNIFORM_BUFFER(FSceneUniformParameters, Scene) SHADER_PARAMETER_RDG_UNIFORM_BUFFER(FBatchedPrimitiveParameters, BatchedPrimitive) END_SHADER_PARAMETER_STRUCT() FMeshDrawCommandOverrideArgs GetMeshDrawCommandOverrideArgs(const FInstanceCullingDrawParams& InstanceCullingDrawParams)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum class EInstanceCullingMode { Normal,Stereo,} ; enum class EInstanceCullingFlags : uint8 { None = 0,NoInstanceOrderPreservation = 1<<0,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EInstanceCullingFlags)"
  },
  {
    "label": "GetInstanceIdBufferStride()",
    "kind": "Method",
    "detail": "Function (Generic,UnCulled,Num,} ; class FInstanceProcessingGPULoadBalancer ; class FInstanceCullingContext { public : enum class EInstanceFlags : uint8 { None = 0,DynamicInstanceDataOffset = 1<<0,ForceInstanceCulling = 1<<1,PreserveInstanceOrder = 1<<2 } ; uint32 UniformViewInstanceStride [ 2 ] = { BATCHED_INSTANCE_DATA_STRIDE,BATCHED_PRIMITIVE_DATA_STRIDE } ; uint32 IndirectArgsNumWords = 5 ; uint32 CompactionBlockNumInstances = 6 4 ; uint32)",
    "insertText": "GetInstanceIdBufferStride(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "GetUniformBufferViewStaticSlot()",
    "kind": "Method",
    "detail": "Function (FUniformBufferStaticSlot)",
    "insertText": "GetUniformBufferViewStaticSlot(EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "FInstanceCullingContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstanceCullingContext()"
  },
  {
    "label": "FInstanceCullingContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInstanceCullingContext(FName PassName, EShaderPlatform ShaderPlatform, FInstanceCullingManager* InInstanceCullingManager, TArrayView<const int32> InViewIds, const TRefCountPtr<IPooledRenderTarget>& InPrevHZB, EInstanceCullingMode InInstanceCullingMode = EInstanceCullingMode::Normal, EInstanceCullingFlags InFlags = EInstanceCullingFlags::None, EBatchProcessingMode InSingleInstanceProcessingMode = EBatchProcessingMode::UnCulled)"
  },
  {
    "label": "CreateDummyInstanceCullingUniformBuffer()",
    "kind": "Method",
    "detail": "Function (const TRDGUniformBufferRef<FInstanceCullingGlobalUniforms>)",
    "insertText": "CreateDummyInstanceCullingUniformBuffer(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "IsGPUCullingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGPUCullingEnabled()"
  },
  {
    "label": "IsOcclusionCullingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOcclusionCullingEnabled()"
  },
  {
    "label": "ResetCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCommands(int32 MaxNumCommands)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "AddInstancesToDrawCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstancesToDrawCommand(uint32 IndirectArgsOffset, int32 InstanceDataOffset, uint32 RunOffset, uint32 NumInstances, EInstanceFlags InstanceFlags)"
  },
  {
    "label": "AddInstancesToDrawCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstancesToDrawCommand(uint32 IndirectArgsOffset, int32 InstanceDataOffset, uint32 RunOffset, uint32 NumInstances, EInstanceFlags InstanceFlags, uint32 MaxBatchSize)"
  },
  {
    "label": "AddInstanceRunsToDrawCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstanceRunsToDrawCommand(uint32 IndirectArgsOffset, int32 InstanceDataOffset, const uint32* Runs, uint32 NumRuns, EInstanceFlags InstanceFlags, uint32 MaxBatchSize)"
  },
  {
    "label": "AllocateIndirectArgs()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AllocateIndirectArgs(const FMeshDrawCommand* MeshDrawCommand)"
  },
  {
    "label": "StepInstanceDataOffsetBytes()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "StepInstanceDataOffsetBytes(uint32 NumStepDraws)"
  },
  {
    "label": "GetInstanceIdNumElements()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetInstanceIdNumElements()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (using SyncPrerequisitesFuncType = TFunction<)",
    "insertText": "void(FInstanceCullingContext &InstanceCullingContext)"
  },
  {
    "label": "BeginAsyncSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAsyncSetup(SyncPrerequisitesFuncType&& InSyncPrerequisitesFunc)"
  },
  {
    "label": "WaitForSetupTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForSetupTask()"
  },
  {
    "label": "SetDynamicPrimitiveInstanceOffsets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicPrimitiveInstanceOffsets(int32 InDynamicInstanceIdOffset, int32 InDynamicInstanceIdNum)"
  },
  {
    "label": "BuildRenderingCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildRenderingCommands(FRDGBuilder& GraphBuilder, const FGPUScene& GPUScene, int32 InDynamicInstanceIdOffset, int32 InDynamicInstanceIdNum, FInstanceCullingResult& Results)"
  },
  {
    "label": "BuildRenderingCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildRenderingCommands(FRDGBuilder& GraphBuilder, const FGPUScene& GPUScene, FInstanceCullingDrawParams* InstanceCullingDrawParams)"
  },
  {
    "label": "HasCullingCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCullingCommands()"
  },
  {
    "label": "GetInstanceCullingMode()",
    "kind": "Method",
    "detail": "Function (EInstanceCullingMode)",
    "insertText": "GetInstanceCullingMode()"
  },
  {
    "label": "AddClearIndirectArgInstanceCountPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClearIndirectArgInstanceCountPass(FRDGBuilder& GraphBuilder, FGlobalShaderMap* ShaderMap, FRDGBufferRef DrawIndirectArgsBuffer, TFunction<int32()> NumIndirectArgsCallback = TFunction<int32()>())"
  },
  {
    "label": "SetupDrawCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDrawCommands(FMeshCommandOneFrameArray& VisibleMeshDrawCommandsInOut, bool bCompactIdenticalCommands, const FScene *Scene, int32& MaxInstancesOut, int32& VisibleMeshDrawCommandsNumOut, int32& NewPassVisibleMeshDrawCommandsNumOut)"
  },
  {
    "label": "SubmitDrawCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitDrawCommands(const FMeshCommandOneFrameArray& VisibleMeshDrawCommands, const FGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet, const FMeshDrawCommandOverrideArgs& OverrideArgs, int32 StartIndex, int32 NumMeshDrawCommands, uint32 InstanceFactor, FRHICommandList& RHICmdList)"
  },
  {
    "label": "BuildRenderingCommandsInternal()",
    "kind": "Method",
    "detail": "Function (FInstanceCullingManager* InstanceCullingManager = nullptr ; EShaderPlatform ShaderPlatform = SP_NumPlatforms ; TArray<int32,TInlineAllocator<6,SceneRenderingAllocator>> ViewIds ; TRefCountPtr<IPooledRenderTarget> PrevHZB = nullptr ; bool bIsEnabled = false ; EInstanceCullingMode InstanceCullingMode = EInstanceCullingMode::Normal ; EInstanceCullingFlags Flags = EInstanceCullingFlags::None ; uint32 TotalInstances = 0 U ; int32 DynamicInstanceIdOffset = - 1 ; int32 DynamicInstanceIdNum = - 1 ; SyncPrerequisitesFuncType SyncPrerequisitesFunc ; public : enum class EAsyncProcessingMode { DeferredOrAsync,Synchronous,} ; void)",
    "insertText": "BuildRenderingCommandsInternal(FRDGBuilder& GraphBuilder, const FGPUScene& GPUScene, EAsyncProcessingMode AsyncProcessingMode, FInstanceCullingDrawParams* InstanceCullingDrawParams)"
  },
  {
    "label": "FPayloadData()",
    "kind": "Method",
    "detail": "Function (struct FMeshDrawCommandInfo { uint32 bUseIndirect : 1 U ; uint32 IndirectArgsOffsetOrNumInstances : 3 1 U ; uint32 InstanceDataByteOffset ; uint32 NumBatches : 1 5 u ; uint32 BatchDataStride : 1 7 u ; } ; struct FPayloadData { uint32 bDynamicInstanceDataOffset_IndirectArgsIndex ; uint32 InstanceDataOffset ; uint32 RunInstanceOffset ; uint32 CompactionDataIndex ;)",
    "insertText": "FPayloadData()"
  },
  {
    "label": "FPayloadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPayloadData(bool bInDynamicInstanceDataOffset, uint32 InIndirectArgsIndex, uint32 InInstanceDataOffset, uint32 InRunInstanceOffset, uint32 InCompactionDataIndex) : bDynamicInstanceDataOffset_IndirectArgsIndex(InIndirectArgsIndex | (bInDynamicInstanceDataOffset ? (1u << 31u) : 0u)) , InstanceDataOffset(InInstanceDataOffset) , RunInstanceOffset(InRunInstanceOffset) , CompactionDataIndex(InCompactionDataIndex)"
  },
  {
    "label": "FCompactionData()",
    "kind": "Method",
    "detail": "Function (} } ; struct FCompactionData { const uint32 NumViewBits = 8 ; uint32 NumInstances_NumViews ; uint32 BlockOffset ; uint32 IndirectArgsIndex ; uint32 SrcInstanceIdOffset ; uint32 DestInstanceIdOffset ;)",
    "insertText": "FCompactionData()"
  },
  {
    "label": "FCompactionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCompactionData(uint32 InNumInstances, uint32 InNumViews, uint32 InBlockOffset, uint32 InIndirectArgsIndex, uint32 InSrcInstanceIdOffset, uint32 InDestInstanceIdOffset) : NumInstances_NumViews(InNumViews | (InNumInstances << NumViewBits)) , BlockOffset(InBlockOffset) , IndirectArgsIndex(InIndirectArgsIndex) , SrcInstanceIdOffset(InSrcInstanceIdOffset) , DestInstanceIdOffset(InDestInstanceIdOffset)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (} } ; TArray<FMeshDrawCommandInfo,SceneRenderingAllocator> MeshDrawCommandInfos ; TArray<FRHIDrawIndexedIndirectParameters,SceneRenderingAllocator> IndirectArgs ; TArray<uint32,SceneRenderingAllocator> DrawCommandDescs ; TArray<FPayloadData,SceneRenderingAllocator> PayloadData ; TArray<uint32,SceneRenderingAllocator> InstanceIdOffsets ; TArray<FCompactionData,SceneRenderingAllocator> DrawCommandCompactionData ; TArray<uint32,SceneRenderingAllocator> CompactionBlockDataIndices ; uint32 NumCompactionInstances = 0 U ; using LoadBalancerArray = TStaticArray<FInstanceProcessingGPULoadBalancer*,static_cast<)",
    "insertText": "uint32(EBatchProcessingMode::Num)"
  },
  {
    "label": "LoadBalancerArray()",
    "kind": "Method",
    "detail": "Function (LoadBalancerArray LoadBalancers =)",
    "insertText": "LoadBalancerArray(InPlace, nullptr)"
  }
]