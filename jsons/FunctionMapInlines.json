[
  {
    "label": "FunctionMapLookup()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AutoRTFM / AutoRTFMConstants . h \" # include \" Context . h \" # include \" FunctionMap . h \" # include \" Utils . h \" # include \" Containers / StringConv . h \" namespace AutoRTFM { void*)",
    "insertText": "FunctionMapLookup(void* OldFunction, const char* Where)"
  },
  {
    "label": "PrefixData()",
    "kind": "Method",
    "detail": "Function (const uint64)",
    "insertText": "PrefixData(reinterpret_cast<uint64*>(OldFunction) - 1)"
  },
  {
    "label": "FunctionMapTryLookup()",
    "kind": "Method",
    "detail": "Function (} void* const Result =)",
    "insertText": "FunctionMapTryLookup(OldFunction)"
  },
  {
    "label": "FunctionMapReportError()",
    "kind": "Method",
    "detail": "Function (# ifdef __clang__ [ [ clang::musttail ] ] # endif return)",
    "insertText": "FunctionMapReportError(OldFunction, Where)"
  },
  {
    "label": "FunctionMapLookup()",
    "kind": "Method",
    "detail": "Function (} return Result ; } template<TReturnType,. . . TParameterTypes> auto)",
    "insertText": "FunctionMapLookup(TReturnType (*Function)(TParameterTypes...), const char* Where) -> TReturnType (*)(TParameterTypes...)"
  }
]