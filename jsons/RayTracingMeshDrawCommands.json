[
  {
    "label": "FRayTracingGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingGeometry"
  },
  {
    "label": "FRayTracingSBTAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingSBTAllocation"
  },
  {
    "label": "FRayTracingCachedMeshCommandFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingCachedMeshCommandFlags"
  },
  {
    "label": "FRayTracingMeshCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingMeshCommand"
  },
  {
    "label": "FRayTracingShaderBindingData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingShaderBindingData"
  },
  {
    "label": "TUseBitwiseSwap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TUseBitwiseSwap"
  },
  {
    "label": "FRayTracingMeshCommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingMeshCommandContext"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FCachedRayTracingMeshCommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedRayTracingMeshCommandContext"
  },
  {
    "label": "FDynamicRayTracingMeshCommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicRayTracingMeshCommandContext"
  },
  {
    "label": "FRayTracingShaderCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingShaderCommand"
  },
  {
    "label": "FRayTracingCachedMeshCommandFlags()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MeshPassProcessor . h \" class FRayTracingGeometry ; struct FRayTracingSBTAllocation ; struct FRayTracingCachedMeshCommandFlags {)",
    "insertText": "FRayTracingCachedMeshCommandFlags()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Data = 0 ; bAllSegmentsOpaque = true ; bAllSegmentsCastShadow = true ; bAnySegmentsCastShadow = false ; bAnySegmentsDecal = false ; bAllSegmentsDecal = true ; bTwoSided = false ; bIsSky = false ; bAllSegmentsTranslucent = true ; bAllSegmentsReverseCulling = true ; } bool)",
    "insertText": "operator(const FRayTracingCachedMeshCommandFlags& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FRayTracingCachedMeshCommandFlags& Key)"
  },
  {
    "label": "SetRayTracingShaderBindingsForHitGroup()",
    "kind": "Method",
    "detail": "Function (} uint64 CachedMeshCommandHash = 0 ; union { struct { uint8 InstanceMask ; bool bAllSegmentsOpaque : 1 ; bool bAllSegmentsCastShadow : 1 ; bool bAnySegmentsCastShadow : 1 ; bool bAnySegmentsDecal : 1 ; bool bAllSegmentsDecal : 1 ; bool bTwoSided : 1 ; bool bIsSky : 1 ; bool bAllSegmentsTranslucent : 1 ; bool bAllSegmentsReverseCulling : 1 ; } ; uint32 Data ; } ; } ; class FRayTracingMeshCommand { public : FMeshDrawShaderBindings ShaderBindings ; FRHIRayTracingShader* MaterialShader = nullptr ; uint32 MaterialShaderIndex = UINT_MAX ; uint32 GeometrySegmentIndex = UINT_MAX ; uint8 InstanceMask = 0 xFF ; bool bCastRayTracedShadows = true ; bool bOpaque = true ; bool bAlphaMasked = false ; bool bDecal = false ; bool bIsSky = false ; bool bIsTranslucent = false ; bool bTwoSided = false ; bool bReverseCulling = false ; void)",
    "insertText": "SetRayTracingShaderBindingsForHitGroup(FRayTracingLocalShaderBindingWriter* BindingWriter, const TUniformBufferRef<FViewUniformShaderParameters>& ViewUniformBuffer, FRHIUniformBuffer* SceneUniformBuffer, FRHIUniformBuffer* NaniteUniformBuffer, uint32 RecordIndex, const FRHIRayTracingGeometry* RayTracingGeometry, uint32 SegmentIndex, uint32 HitGroupIndexInPipeline)"
  },
  {
    "label": "SetShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShader(const TShaderRef<FShader>& Shader)"
  },
  {
    "label": "IsUsingNaniteRayTracing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingNaniteRayTracing()"
  },
  {
    "label": "UpdateFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFlags(FRayTracingCachedMeshCommandFlags& Flags)"
  },
  {
    "label": "FRayTracingShaderBindingData()",
    "kind": "Method",
    "detail": "Function (private : FShaderUniformBufferParameter ViewUniformBufferParameter ; FShaderUniformBufferParameter SceneUniformBufferParameter ; FShaderUniformBufferParameter NaniteUniformBufferParameter ; } ; class FRayTracingShaderBindingData { public :)",
    "insertText": "FRayTracingShaderBindingData(const FRayTracingMeshCommand* InRayTracingMeshCommand, const FRHIRayTracingGeometry* InRayTracingGeometry, uint32 InSBTRecordIndex, bool bInHidden) : RayTracingMeshCommand(InRayTracingMeshCommand) , RayTracingGeometry(InRayTracingGeometry) , SBTRecordIndex(InSBTRecordIndex) , InstanceIndex(INDEX_NONE) , bHidden(bInHidden)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "check(InstanceIndex != INDEX_NONE)"
  },
  {
    "label": "FRayTracingShaderBindingData()",
    "kind": "Method",
    "detail": "Function (bool bHidden ; PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FRayTracingShaderBindingData(const FRayTracingShaderBindingData&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRayTracingShaderBindingData&)",
    "insertText": "operator(const FRayTracingShaderBindingData&)"
  },
  {
    "label": "FRayTracingShaderBindingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRayTracingShaderBindingData(FRayTracingShaderBindingData&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRayTracingShaderBindingData&)",
    "insertText": "operator(FRayTracingShaderBindingData&&)"
  },
  {
    "label": "FRayTracingMeshCommandContext()",
    "kind": "Method",
    "detail": "Function (using FRayTracingMeshCommandOneFrameArray = FRayTracingShaderBindingDataOneFrameArray ; class FRayTracingMeshCommandContext { public : ~)",
    "insertText": "FRayTracingMeshCommandContext()"
  },
  {
    "label": "AddCommand()",
    "kind": "Method",
    "detail": "Function (} FRayTracingMeshCommand&)",
    "insertText": "AddCommand(const FRayTracingMeshCommand& Initializer)"
  },
  {
    "label": "FinalizeCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeCommand(FRayTracingMeshCommand& RayTracingMeshCommand)"
  },
  {
    "label": "FCachedRayTracingMeshCommandContext()",
    "kind": "Method",
    "detail": "Function (} ; using FTempRayTracingMeshCommandStorage = TArray<FRayTracingMeshCommand> ; using FCachedRayTracingMeshCommandStorage = TSparseArray<FRayTracingMeshCommand> ; using FDynamicRayTracingMeshCommandStorage = TChunkedArray<FRayTracingMeshCommand> ; template<class T> class FCachedRayTracingMeshCommandContext : public FRayTracingMeshCommandContext { public :)",
    "insertText": "FCachedRayTracingMeshCommandContext(T& InDrawListStorage) : DrawListStorage(InDrawListStorage)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (CommandIndex = DrawListStorage .)",
    "insertText": "Add(Initializer)"
  },
  {
    "label": "FDynamicRayTracingMeshCommandContext()",
    "kind": "Method",
    "detail": "Function (} int32 CommandIndex = - 1 ; private : T& DrawListStorage ; } ; class FDynamicRayTracingMeshCommandContext : public FRayTracingMeshCommandContext { public :)",
    "insertText": "FDynamicRayTracingMeshCommandContext(FDynamicRayTracingMeshCommandStorage& InDynamicCommandStorage, FRayTracingShaderBindingDataOneFrameArray& InDirtyShaderBindings, const FRHIRayTracingGeometry* InRayTracingGeometry, uint32 InGeometrySegmentIndex, FRayTracingSBTAllocation* InSBTAllocation ) : DynamicCommandStorage(InDynamicCommandStorage), DirtyShaderBindings(InDirtyShaderBindings), RayTracingGeometry(InRayTracingGeometry), GeometrySegmentIndex(InGeometrySegmentIndex), SBTAllocation(InSBTAllocation), RayTracingInstanceIndex(INDEX_NONE), RayTracingDecalInstanceIndex(INDEX_NONE)"
  },
  {
    "label": "AddElement()",
    "kind": "Method",
    "detail": "Function (const int32 Index = DynamicCommandStorage .)",
    "insertText": "AddElement(Initializer)"
  },
  {
    "label": "SetRayTracingShaderBindings()",
    "kind": "Method",
    "detail": "Function (} ; class FRayTracingShaderCommand { public : FMeshDrawShaderBindings ShaderBindings ; FRHIRayTracingShader* Shader = nullptr ; uint32 ShaderIndex = UINT_MAX ; uint32 SlotInScene = UINT_MAX ; void)",
    "insertText": "SetRayTracingShaderBindings(FRayTracingLocalShaderBindingWriter* BindingWriter, const TUniformBufferRef<FViewUniformShaderParameters>& ViewUniformBuffer, FRHIUniformBuffer* SceneUniformBuffer, FRHIUniformBuffer* NaniteUniformBuffer, uint32 ShaderIndexInPipeline, uint32 ShaderSlot)"
  }
]