[
  {
    "label": "AudioProcessing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioProcessing"
  },
  {
    "label": "RtcEventLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLog"
  },
  {
    "label": "CallConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CallConfig"
  },
  {
    "label": "CallConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_CALL_CONFIG_H_ # define CALL_CALL_CONFIG_H_ # include \" api / fec_controller . h \" # include \" api / field_trials_view . h \" # include \" api / metronome / metronome . h \" # include \" api / neteq / neteq_factory . h \" # include \" api / network_state_predictor . h \" # include \" api / rtc_error . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" api / transport / bitrate_settings . h \" # include \" api / transport / network_control . h \" # include \" call / audio_state . h \" # include \" call / rtp_transport_config . h \" # include \" call / rtp_transport_controller_send_factory_interface . h \" namespace webrtc { class AudioProcessing ; class RtcEventLog ; struct CallConfig {)",
    "insertText": "CallConfig(RtcEventLog* event_log, TaskQueueBase* network_task_queue = nullptr)"
  },
  {
    "label": "CallConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallConfig(const CallConfig&)"
  },
  {
    "label": "ExtractTransportConfig()",
    "kind": "Method",
    "detail": "Function (RtpTransportConfig)",
    "insertText": "ExtractTransportConfig()"
  },
  {
    "label": "CallConfig()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CallConfig()"
  }
]