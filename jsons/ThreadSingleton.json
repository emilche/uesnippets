[
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FThreadSingletonInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadSingletonInitializer"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TThreadSingleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TThreadSingleton"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / Function . h \" # include \" HAL / PlatformTLS . h \" # include \" HAL / TlsAutoCleanup . h \" template<FuncType> class TFunctionRef ; class FThreadSingletonInitializer { public : FTlsAutoCleanup*)",
    "insertText": "Get(TFunctionRef<FTlsAutoCleanup*()> CreateInstance, uint32& TlsSlot)"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (FTlsAutoCleanup*)",
    "insertText": "TryGet(uint32& TlsSlot)"
  },
  {
    "label": "Inject()",
    "kind": "Method",
    "detail": "Function (FTlsAutoCleanup*)",
    "insertText": "Inject(FTlsAutoCleanup* Instance, uint32& TlsSlot)"
  },
  {
    "label": "GetTlsSlot()",
    "kind": "Method",
    "detail": "Function (} ; template<class T> class TThreadSingleton : public FTlsAutoCleanup { # if PLATFORM_UNIX | | PLATFORM_APPLE uint32&)",
    "insertText": "GetTlsSlot()"
  },
  {
    "label": "TThreadSingleton()",
    "kind": "Method",
    "detail": "Function (uint32 TlsSlot = FPlatformTLS::InvalidTlsSlot ; return TlsSlot ; } # endif protected :)",
    "insertText": "TThreadSingleton() : ThreadId(FPlatformTLS::GetCurrentThreadId())"
  },
  {
    "label": "TThreadSingleton()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TThreadSingleton()"
  },
  {
    "label": "SetTlsValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTlsValue(GetTlsSlot(), nullptr)"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (} } FTlsAutoCleanup*)",
    "insertText": "CreateInstance()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} const uint32 ThreadId ; public : T&)",
    "insertText": "Get()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} T&)",
    "insertText": "Get(TFunctionRef<FTlsAutoCleanup*()> CreateInstance)"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "TryGet()"
  },
  {
    "label": "Inject()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "Inject(T* Instance)"
  }
]