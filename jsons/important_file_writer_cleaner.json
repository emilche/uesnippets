[
  {
    "label": "SequencedTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequencedTaskRunner"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "NoDestructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoDestructor"
  },
  {
    "label": "AddDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDirectory(const FilePath& directory)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "UninitializeForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitializeForTesting()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (following)",
    "insertText": "Stop()"
  },
  {
    "label": "AddDirectoryImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDirectoryImpl(const FilePath& directory)"
  },
  {
    "label": "ScheduleTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleTask()"
  },
  {
    "label": "CleanInBackground()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CleanInBackground(Time upper_bound_time,\n                                std::vector<FilePath> directories,\n                                std::atomic_bool& stop_flag)"
  },
  {
    "label": "OnBackgroundTaskFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBackgroundTaskFinished(bool processing_completed)"
  },
  {
    "label": "DoStop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoStop()"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (task_runner_)",
    "insertText": "GUARDED_BY(task_runner_lock_)"
  },
  {
    "label": "GUARDED_BY_CONTEXT()",
    "kind": "Method",
    "detail": "Function (important_directories_)",
    "insertText": "GUARDED_BY_CONTEXT(sequence_checker_)"
  },
  {
    "label": "GUARDED_BY_CONTEXT()",
    "kind": "Method",
    "detail": "Function (pending_directories_)",
    "insertText": "GUARDED_BY_CONTEXT(sequence_checker_)"
  }
]