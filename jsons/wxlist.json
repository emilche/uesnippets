[
  {
    "label": "__POSITION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__POSITION"
  },
  {
    "label": "CBaseList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CBaseList"
  },
  {
    "label": "CNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CNode"
  },
  {
    "label": "CNodeCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CNodeCache"
  },
  {
    "label": "OBJECT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OBJECT"
  },
  {
    "label": "CGenericList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CGenericList"
  },
  {
    "label": "CNode()",
    "kind": "Method",
    "detail": "Function (# ifndef __WXLIST__ # define __WXLIST__ # ifndef __AFX_H__ struct __POSITION { int unused ; } ; typedef __POSITION* POSITION ; # endif const int DEFAULTCACHE = 1 0 ; class CBaseList # ifdef DEBUG : public CBaseObject # endif { public : # ifdef DEBUG class CNode : public CBaseObject { # else class CNode { # endif CNode* m_pPrev ; CNode* m_pNext ; void* m_pObject ; public :)",
    "insertText": "CNode() #ifdef DEBUG : CBaseObject(NAME(\"List node\"))"
  },
  {
    "label": "Prev()",
    "kind": "Method",
    "detail": "Function (} ; __out CNode*)",
    "insertText": "Prev()"
  },
  {
    "label": "SetNext()",
    "kind": "Method",
    "detail": "Function (m_pPrev = p ; } ; void)",
    "insertText": "SetNext(__in_opt CNode *p)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (m_pNext = p ; } ; __out void*)",
    "insertText": "GetData()"
  },
  {
    "label": "CNodeCache()",
    "kind": "Method",
    "detail": "Function (m_pObject = p ; } ; } ; class CNodeCache { public :)",
    "insertText": "CNodeCache(INT iCacheSize) : m_iCacheSize(iCacheSize), m_pHead(NULL), m_iUsed(0)"
  },
  {
    "label": "CNodeCache()",
    "kind": "Method",
    "detail": "Function (} ; ~)",
    "insertText": "CNodeCache()"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (CNode* pNode = m_pHead ;)",
    "insertText": "while(pNode)"
  },
  {
    "label": "Next()",
    "kind": "Method",
    "detail": "Function (CNode* pCurrent = pNode ; pNode = pNode ->)",
    "insertText": "Next()"
  },
  {
    "label": "AddToCache()",
    "kind": "Method",
    "detail": "Function (delete pCurrent ; } } ; void)",
    "insertText": "AddToCache(__inout CNode *pNode)"
  },
  {
    "label": "SetNext()",
    "kind": "Method",
    "detail": "Function (pNode ->)",
    "insertText": "SetNext(m_pHead)"
  },
  {
    "label": "RemoveFromCache()",
    "kind": "Method",
    "detail": "Function (m_pHead = pNode ; m_iUsed + + ; } else { delete pNode ; } } ; CNode*)",
    "insertText": "RemoveFromCache()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (CNode* pNode = m_pHead ;)",
    "insertText": "if(pNode != NULL)"
  },
  {
    "label": "ASSERT()",
    "kind": "Method",
    "detail": "Function (m_iUsed - - ;)",
    "insertText": "ASSERT(m_iUsed >= 0)"
  },
  {
    "label": "ASSERT()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "ASSERT(m_iUsed == 0)"
  },
  {
    "label": "CBaseList()",
    "kind": "Method",
    "detail": "Function (} return pNode ; } ; private : INT m_iCacheSize ; INT m_iUsed ; CNode* m_pHead ; } ; protected : CNode* m_pFirst ; CNode* m_pLast ; LONG m_Count ; private : CNodeCache m_Cache ; private :)",
    "insertText": "CBaseList(const CBaseList &refList)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CBaseList&)",
    "insertText": "operator(const CBaseList &refList)"
  },
  {
    "label": "CBaseList()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CBaseList(__in_opt LPCTSTR pName, INT iItems)"
  },
  {
    "label": "CBaseList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CBaseList(__in_opt LPCTSTR pName)"
  },
  {
    "label": "CBaseList()",
    "kind": "Method",
    "detail": "Function (# ifdef UNICODE)",
    "insertText": "CBaseList(__in_opt LPCSTR pName, INT iItems)"
  },
  {
    "label": "CBaseList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CBaseList(__in_opt LPCSTR pName)"
  },
  {
    "label": "CBaseList()",
    "kind": "Method",
    "detail": "Function (# endif ~)",
    "insertText": "CBaseList()"
  },
  {
    "label": "RemoveAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAll()"
  },
  {
    "label": "GetHeadPositionI()",
    "kind": "Method",
    "detail": "Function (__out_opt POSITION)",
    "insertText": "GetHeadPositionI()"
  },
  {
    "label": "GetTailPositionI()",
    "kind": "Method",
    "detail": "Function (__out_opt POSITION)",
    "insertText": "GetTailPositionI()"
  },
  {
    "label": "GetCountI()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCountI()"
  },
  {
    "label": "GetNextI()",
    "kind": "Method",
    "detail": "Function (protected : __out void*)",
    "insertText": "GetNextI(__inout POSITION& rp)"
  },
  {
    "label": "GetI()",
    "kind": "Method",
    "detail": "Function (__out_opt void*)",
    "insertText": "GetI(__in_opt POSITION p)"
  },
  {
    "label": "GetValidI()",
    "kind": "Method",
    "detail": "Function (__out void*)",
    "insertText": "GetValidI(__in POSITION p)"
  },
  {
    "label": "Next()",
    "kind": "Method",
    "detail": "Function (public : __out_opt POSITION)",
    "insertText": "Next(__in_opt POSITION pos)"
  },
  {
    "label": "pn()",
    "kind": "Method",
    "detail": "Function (} CNode*)",
    "insertText": "pn(CNode *)"
  },
  {
    "label": "Prev()",
    "kind": "Method",
    "detail": "Function (} __out_opt POSITION)",
    "insertText": "Prev(__in_opt POSITION pos)"
  },
  {
    "label": "FindI()",
    "kind": "Method",
    "detail": "Function (} protected : __out_opt POSITION)",
    "insertText": "FindI(__in void * pObj)"
  },
  {
    "label": "RemoveHeadI()",
    "kind": "Method",
    "detail": "Function (__out_opt void*)",
    "insertText": "RemoveHeadI()"
  },
  {
    "label": "RemoveTailI()",
    "kind": "Method",
    "detail": "Function (__out_opt void*)",
    "insertText": "RemoveTailI()"
  },
  {
    "label": "RemoveI()",
    "kind": "Method",
    "detail": "Function (__out_opt void*)",
    "insertText": "RemoveI(__in_opt POSITION p)"
  },
  {
    "label": "AddTailI()",
    "kind": "Method",
    "detail": "Function (__out_opt POSITION)",
    "insertText": "AddTailI(__in void * pObj)"
  },
  {
    "label": "AddTail()",
    "kind": "Method",
    "detail": "Function (public : BOOL)",
    "insertText": "AddTail(__in CBaseList *pList)"
  },
  {
    "label": "AddHeadI()",
    "kind": "Method",
    "detail": "Function (protected : __out_opt POSITION)",
    "insertText": "AddHeadI(__in void * pObj)"
  },
  {
    "label": "AddHead()",
    "kind": "Method",
    "detail": "Function (public : BOOL)",
    "insertText": "AddHead(__in CBaseList *pList)"
  },
  {
    "label": "AddAfterI()",
    "kind": "Method",
    "detail": "Function (protected : __out_opt POSITION)",
    "insertText": "AddAfterI(__in_opt POSITION p, __in void * pObj)"
  },
  {
    "label": "AddAfter()",
    "kind": "Method",
    "detail": "Function (public : BOOL)",
    "insertText": "AddAfter(__in_opt POSITION p, __in CBaseList *pList)"
  },
  {
    "label": "AddBeforeI()",
    "kind": "Method",
    "detail": "Function (protected : __out_opt POSITION)",
    "insertText": "AddBeforeI(__in_opt POSITION p, __in void * pObj)"
  },
  {
    "label": "AddBefore()",
    "kind": "Method",
    "detail": "Function (public : BOOL)",
    "insertText": "AddBefore(__in_opt POSITION p, __in CBaseList *pList)"
  },
  {
    "label": "MoveToTail()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MoveToTail(__in_opt POSITION pos, __in CBaseList *pList)"
  },
  {
    "label": "MoveToHead()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MoveToHead(__in_opt POSITION pos, __in CBaseList *pList)"
  },
  {
    "label": "Reverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reverse()"
  },
  {
    "label": "TRAVERSELIST()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRAVERSELIST(list, cursor) \\ for ( cursor = (list).GetHeadPosition() \\ ; cursor!=NULL \\ ; cursor = (list).Next(cursor) \\ ) #define REVERSETRAVERSELIST(list, cursor) \\ for ( cursor = (list).GetTailPosition() \\ ; cursor!=NULL \\ ; cursor = (list).Prev(cursor) \\)"
  },
  {
    "label": "CGenericList()",
    "kind": "Method",
    "detail": "Function (template<class OBJECT> class CGenericList : public CBaseList { public :)",
    "insertText": "CGenericList(__in_opt LPCTSTR pName, INT iItems, BOOL bLock = TRUE, BOOL bAlert = FALSE) : CBaseList(pName, iItems)"
  },
  {
    "label": "UNREFERENCED_PARAMETER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UNREFERENCED_PARAMETER(bAlert)"
  },
  {
    "label": "UNREFERENCED_PARAMETER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UNREFERENCED_PARAMETER(bLock)"
  },
  {
    "label": "CGenericList()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CGenericList(__in_opt LPCTSTR pName) : CBaseList(pName)"
  },
  {
    "label": "GetHeadPosition()",
    "kind": "Method",
    "detail": "Function (} ; __out_opt POSITION)",
    "insertText": "GetHeadPosition()"
  },
  {
    "label": "GetTailPosition()",
    "kind": "Method",
    "detail": "Function (} __out_opt POSITION)",
    "insertText": "GetTailPosition()"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetCount()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} __out_opt OBJECT*)",
    "insertText": "Get(__in_opt POSITION p)"
  },
  {
    "label": "GetValid()",
    "kind": "Method",
    "detail": "Function (} __out OBJECT*)",
    "insertText": "GetValid(__in POSITION p)"
  },
  {
    "label": "GetHead()",
    "kind": "Method",
    "detail": "Function (} __out_opt OBJECT*)",
    "insertText": "GetHead()"
  },
  {
    "label": "RemoveHead()",
    "kind": "Method",
    "detail": "Function (} __out_opt OBJECT*)",
    "insertText": "RemoveHead()"
  },
  {
    "label": "RemoveTail()",
    "kind": "Method",
    "detail": "Function (} __out_opt OBJECT*)",
    "insertText": "RemoveTail()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} __out_opt OBJECT*)",
    "insertText": "Remove(__in_opt POSITION p)"
  },
  {
    "label": "AddBefore()",
    "kind": "Method",
    "detail": "Function (} __out_opt POSITION)",
    "insertText": "AddBefore(__in_opt POSITION p, __in OBJECT * pObj)"
  },
  {
    "label": "AddAfter()",
    "kind": "Method",
    "detail": "Function (} __out_opt POSITION)",
    "insertText": "AddAfter(__in_opt POSITION p, __in OBJECT * pObj)"
  },
  {
    "label": "AddHead()",
    "kind": "Method",
    "detail": "Function (} __out_opt POSITION)",
    "insertText": "AddHead(__in OBJECT * pObj)"
  },
  {
    "label": "AddTail()",
    "kind": "Method",
    "detail": "Function (} __out_opt POSITION)",
    "insertText": "AddTail(__in OBJECT * pObj)"
  },
  {
    "label": "AddTail()",
    "kind": "Method",
    "detail": "Function (} BOOL)",
    "insertText": "AddTail(__in CGenericList<OBJECT> *pList)"
  },
  {
    "label": "AddHead()",
    "kind": "Method",
    "detail": "Function (} BOOL)",
    "insertText": "AddHead(__in CGenericList<OBJECT> *pList)"
  },
  {
    "label": "AddAfter()",
    "kind": "Method",
    "detail": "Function (} BOOL)",
    "insertText": "AddAfter(__in_opt POSITION p, __in CGenericList<OBJECT> *pList)"
  },
  {
    "label": "AddBefore()",
    "kind": "Method",
    "detail": "Function (} ; BOOL)",
    "insertText": "AddBefore(__in_opt POSITION p, __in CGenericList<OBJECT> *pList)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (} ; __out_opt POSITION)",
    "insertText": "Find(__in OBJECT * pObj)"
  }
]