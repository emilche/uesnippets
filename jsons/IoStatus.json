[
  {
    "label": "TStringBuilderBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TStringBuilderBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FIoStatus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoStatus"
  },
  {
    "label": "FIoStatusBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoStatusBuilder"
  },
  {
    "label": "TIoStatusOr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TIoStatusOr"
  },
  {
    "label": "GetIoErrorText()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" template<CharType> class TStringBuilderBase ; enum class EIoErrorCode { Ok,Unknown,InvalidCode,Cancelled,FileOpenFailed,FileNotOpen,ReadError,WriteError,NotFound,CorruptToc,UnknownChunkID,InvalidParameter,SignatureError,InvalidEncryptionKey,CompressionError,PendingFork,PendingEncryptionKey,} ; const TCHAR*)",
    "insertText": "GetIoErrorText(EIoErrorCode ErrorCode)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (const TCHAR* const* GetIoErrorText_ErrorCodeText ; return GetIoErrorText_ErrorCodeText [ static_cast<)",
    "insertText": "uint32(ErrorCode)"
  },
  {
    "label": "FIoStatus()",
    "kind": "Method",
    "detail": "Function (} class FIoStatus { public :)",
    "insertText": "FIoStatus()"
  },
  {
    "label": "FIoStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoStatus(EIoErrorCode Code, const FStringView& InErrorMessage)"
  },
  {
    "label": "FIoStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoStatus(EIoErrorCode Code)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FIoStatus&)",
    "insertText": "operator(const FIoStatus& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FIoStatus&)",
    "insertText": "operator(const EIoErrorCode InErrorCode)"
  },
  {
    "label": "IsOk()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsOk()"
  },
  {
    "label": "FIoStatusBuilder()",
    "kind": "Method",
    "detail": "Function (const FIoStatus Ok ; const FIoStatus Unknown ; const FIoStatus Invalid ; private : int32 MaxErrorMessageLength = 1 2 8 ; using FErrorMessage = TCHAR [ MaxErrorMessageLength ] ; EIoErrorCode ErrorCode = EIoErrorCode::Ok ; FErrorMessage ErrorMessage ; class FIoStatusBuilder ; } ; class FIoStatusBuilder { EIoErrorCode StatusCode ; FString Message ; public :)",
    "insertText": "FIoStatusBuilder(EIoErrorCode StatusCode)"
  },
  {
    "label": "FIoStatusBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoStatusBuilder(const FIoStatus& InStatus, FStringView String)"
  },
  {
    "label": "FIoStatusBuilder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FIoStatusBuilder()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FIoStatusBuilder&)",
    "insertText": "operator(FStringView String)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; FIoStatusBuilder)",
    "insertText": "operator(const FIoStatus& Status, FStringView String)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (template<T> class TIoStatusOr { template<U> class TIoStatusOr ; public :)",
    "insertText": "TIoStatusOr() : StatusValue(FIoStatus::Unknown)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TIoStatusOr(const TIoStatusOr& Other)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TIoStatusOr(TIoStatusOr&& Other)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TIoStatusOr(FIoStatus InStatus)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TIoStatusOr(const T& InValue)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TIoStatusOr(T&& InValue)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TIoStatusOr()"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (template<. . . ArgTypes>)",
    "insertText": "TIoStatusOr(ArgTypes&&... Args)"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (template<U>)",
    "insertText": "TIoStatusOr(const TIoStatusOr<U>& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<T>&)",
    "insertText": "operator(const TIoStatusOr<T>& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<T>&)",
    "insertText": "operator(TIoStatusOr<T>&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<T>&)",
    "insertText": "operator(const FIoStatus& OtherStatus)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<T>&)",
    "insertText": "operator(const T& OtherValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<T>&)",
    "insertText": "operator(T&& OtherValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<U> TIoStatusOr<T>&)",
    "insertText": "operator(const TIoStatusOr<U>& Other)"
  },
  {
    "label": "Status()",
    "kind": "Method",
    "detail": "Function (const FIoStatus&)",
    "insertText": "Status()"
  },
  {
    "label": "ValueOrDie()",
    "kind": "Method",
    "detail": "Function (const T&)",
    "insertText": "ValueOrDie()"
  },
  {
    "label": "ConsumeValueOrDie()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "ConsumeValueOrDie()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "StatusOrCrash()",
    "kind": "Method",
    "detail": "Function (private : FIoStatus StatusValue ; TTypeCompatibleBytes<T> Value ; } ; void)",
    "insertText": "StatusOrCrash(const FIoStatus& Status)"
  },
  {
    "label": "GetErrorCode()",
    "kind": "Method",
    "detail": "Function (EIoErrorCode ErrorCode = StatusValue .)",
    "insertText": "GetErrorCode()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (StatusValue = EIoErrorCode::Unknown ;)",
    "insertText": "if(ErrorCode == EIoErrorCode::Ok)"
  },
  {
    "label": "StatusOrCrash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StatusOrCrash(StatusValue)"
  },
  {
    "label": "GetTypedPtr()",
    "kind": "Method",
    "detail": "Function (} return* Value .)",
    "insertText": "GetTypedPtr()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (} StatusValue = FIoStatus::Unknown ; return)",
    "insertText": "MoveTemp(*Value.GetTypedPtr())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (StatusValue = Other . StatusValue ;)",
    "insertText": "if(StatusValue.IsOk())"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&Value) T(*(const T*)&Other.Value)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&Value) T(MoveTempIfPossible(*(T*)&Other.Value))"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (StatusValue = FIoStatus::Ok ;)",
    "insertText": "new(&Value) T(InValue)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (StatusValue = FIoStatus::Ok ;)",
    "insertText": "new(&Value) T(MoveTempIfPossible(InValue))"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (StatusValue = FIoStatus::Ok ;)",
    "insertText": "new(&Value) T(Forward<ArgTypes>(Args)...)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&Value) T(OtherValue)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&Value) T(MoveTempIfPossible(OtherValue))"
  },
  {
    "label": "TIoStatusOr()",
    "kind": "Method",
    "detail": "Function (StatusValue = EIoErrorCode::Ok ; } return* this ; } template<T> template<U> TIoStatusOr<T)",
    "insertText": "TIoStatusOr(const TIoStatusOr<U>& Other) : StatusValue(Other.StatusValue)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&Value) T(*(const U*)&Other.Value)"
  }
]