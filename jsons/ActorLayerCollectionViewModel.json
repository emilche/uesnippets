[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FActorLayerViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorLayerViewModel"
  },
  {
    "label": "UEditorEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorEngine"
  },
  {
    "label": "ULayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULayer"
  },
  {
    "label": "FActorLayerCollectionViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorLayerCollectionViewModel"
  },
  {
    "label": "SetActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActors( const TArray< TWeakObjectPtr< AActor > >& InActors )"
  },
  {
    "label": "RemoveActorsFromAllLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorsFromAllLayers()"
  },
  {
    "label": "RemoveActorsFromLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorsFromLayer( const TSharedPtr< FActorLayerViewModel >& Layer )"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "OnLayersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayersChanged( const ELayersAction::Type Action, const TWeakObjectPtr< ULayer >& ChangedLayer, const FName& ChangedProperty )"
  },
  {
    "label": "RefreshLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshLayers()"
  },
  {
    "label": "SortLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortLayers()"
  },
  {
    "label": "AppendLayerNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendLayerNames( TArray< FName >& OutLayerNames )"
  },
  {
    "label": "DoAllActorsBelongtoLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoAllActorsBelongtoLayer( const TSharedRef< FActorLayerViewModel >& Layer )"
  }
]