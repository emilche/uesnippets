[
  {
    "label": "FAutomatedApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomatedApplication"
  },
  {
    "label": "IElementLocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IElementLocator"
  },
  {
    "label": "IAsyncDriverSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverSequence"
  },
  {
    "label": "IAsyncDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElement"
  },
  {
    "label": "IAsyncDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElementCollection"
  },
  {
    "label": "FDriverConfiguration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDriverConfiguration"
  },
  {
    "label": "FModifierKeysState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModifierKeysState"
  },
  {
    "label": "FAsyncAutomationDriverFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncAutomationDriverFactory"
  },
  {
    "label": "FAsyncAutomationDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncAutomationDriver"
  },
  {
    "label": "FAutomationDriverFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationDriverFactory"
  },
  {
    "label": "FAutomationDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationDriver"
  },
  {
    "label": "FAsyncAutomationDriver()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IAutomationDriver . h \" # include \" WaitUntil . h \" # include \" Misc / Timespan . h \" # include \" InputCoreTypes . h \" class FAutomatedApplication ; class IElementLocator ; class IAsyncDriverSequence ; class IAsyncDriverElement ; class IAsyncDriverElementCollection ; class FDriverConfiguration ; class FModifierKeysState ; class FAsyncAutomationDriverFactory ; class FAsyncAutomationDriver : public IAsyncAutomationDriver,public TSharedFromThis<FAsyncAutomationDriver,ESPMode::ThreadSafe> { public : ~)",
    "insertText": "FAsyncAutomationDriver()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Wait(FTimespan Timespan)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Wait(const FDriverWaitDelegate& Delegate)"
  },
  {
    "label": "CreateSequence()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IAsyncDriverSequence,ESPMode::ThreadSafe>)",
    "insertText": "CreateSequence()"
  },
  {
    "label": "GetCursorPosition()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FVector2D>)",
    "insertText": "GetCursorPosition()"
  },
  {
    "label": "GetModifierKeys()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FModifierKeysState>)",
    "insertText": "GetModifierKeys()"
  },
  {
    "label": "FindElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IAsyncDriverElement,ESPMode::ThreadSafe>)",
    "insertText": "FindElement(const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& ElementLocator)"
  },
  {
    "label": "FindElements()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IAsyncDriverElementCollection,ESPMode::ThreadSafe>)",
    "insertText": "FindElements(const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& ElementLocator)"
  },
  {
    "label": "GetConfiguration()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FDriverConfiguration,ESPMode::ThreadSafe>)",
    "insertText": "GetConfiguration()"
  },
  {
    "label": "TrackPress()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "TrackPress(int32 KeyCode, int32 CharCode)"
  },
  {
    "label": "TrackPress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackPress(EMouseButtons::Type Button)"
  },
  {
    "label": "TrackRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackRelease(int32 KeyCode, int32 CharCode)"
  },
  {
    "label": "TrackRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackRelease(EMouseButtons::Type Button)"
  },
  {
    "label": "IsPressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPressed(int32 KeyCode, int32 CharCode)"
  },
  {
    "label": "IsPressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPressed(EMouseButtons::Type Button)"
  },
  {
    "label": "ProcessCharacterForControlCodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessCharacterForControlCodes(int32 CharCode)"
  },
  {
    "label": "FAsyncAutomationDriver()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FAsyncAutomationDriver(const TSharedRef<FAutomatedApplication, ESPMode::ThreadSafe>& InApplication, const TSharedRef<FDriverConfiguration, ESPMode::ThreadSafe>& InConfiguration) : Application(InApplication) , Configuration(InConfiguration)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (private : const TSharedRef<FAutomatedApplication,ESPMode::ThreadSafe> Application ; const TSharedRef<FDriverConfiguration,ESPMode::ThreadSafe> Configuration ; TSet<FKey> PressedModifiers ; TSet<int32> PressedKeys ; TSet<int32> PressedChars ; TSet<EMouseButtons::Type> PressedButtons ; TMap<int32,int32> CharactersToControlCodes ; FAsyncAutomationDriverFactory ; } ; class FAsyncAutomationDriverFactory { public : TSharedRef<FAsyncAutomationDriver,ESPMode::ThreadSafe>)",
    "insertText": "Create(const TSharedRef<FAutomatedApplication, ESPMode::ThreadSafe>& AutomatedApplication)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FAsyncAutomationDriver,ESPMode::ThreadSafe>)",
    "insertText": "Create(const TSharedRef<FAutomatedApplication, ESPMode::ThreadSafe>& AutomatedApplication, const TSharedRef<FDriverConfiguration, ESPMode::ThreadSafe>& Configuration)"
  },
  {
    "label": "FAutomationDriver()",
    "kind": "Method",
    "detail": "Function (} ; class FAutomationDriverFactory ; class FAutomationDriver : public IAutomationDriver,public TSharedFromThis<FAutomationDriver,ESPMode::ThreadSafe> { public : ~)",
    "insertText": "FAutomationDriver()"
  },
  {
    "label": "FAutomationDriver()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FAutomationDriver(const TSharedRef<FAutomatedApplication, ESPMode::ThreadSafe>& InApplication, const TSharedRef<FAsyncAutomationDriver, ESPMode::ThreadSafe>& InAsyncDriver) : Application(InApplication) , AsyncDriver(InAsyncDriver)"
  }
]