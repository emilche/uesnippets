[
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "ArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayRef"
  },
  {
    "label": "DxilFieldAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilFieldAnnotation"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "BuildVector()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" llvm / IR / IRBuilder . h \" namespace llvm { class Type ; class Value ; template<T> class ArrayRef ; } namespace hlsl { class DxilFieldAnnotation ; class DxilTypeSystem ; namespace HLMatrixLower { llvm::Value*)",
    "insertText": "BuildVector(llvm::Type *EltTy, llvm::ArrayRef<llvm::Value *> elts, llvm::IRBuilder<> &Builder)"
  }
]