[
  {
    "label": "FViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewModel"
  },
  {
    "label": "FTrackAreaViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackAreaViewModel"
  },
  {
    "label": "SOutlinerView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOutlinerView"
  },
  {
    "label": "SEQUENCERCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCERCORE_API"
  },
  {
    "label": "FVirtualTrackArea()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Layout / Geometry . h \" # include \" MVVM / ViewModels / ViewModel . h \" # include \" Math / Vector2D . h \" # include \" Templates / SharedPointer . h \" # include \" TimeToPixel . h \" namespace UE::Sequencer { class FViewModel ; } namespace UE { namespace Sequencer { class FTrackAreaViewModel ; class SOutlinerView ; class FVirtualTrackArea : public FTimeToPixel { public :)",
    "insertText": "FVirtualTrackArea(const FTrackAreaViewModel& InTrackArea, SOutlinerView& InTreeView, const FGeometry& InTrackAreaGeometry)"
  },
  {
    "label": "PixelToVerticalOffset()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "PixelToVerticalOffset(float InPixel)"
  },
  {
    "label": "VerticalOffsetToPixel()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "VerticalOffsetToPixel(float InOffset)"
  },
  {
    "label": "PhysicalToVirtual()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "PhysicalToVirtual(FVector2D InPosition)"
  },
  {
    "label": "VirtualToPhysical()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "VirtualToPhysical(FVector2D InPosition)"
  },
  {
    "label": "GetPhysicalSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetPhysicalSize()"
  },
  {
    "label": "HitTestNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FViewModel>)",
    "insertText": "HitTestNode(float InPhysicalPosition)"
  },
  {
    "label": "CachedTrackAreaGeometry()",
    "kind": "Method",
    "detail": "Function (FGeometry)",
    "insertText": "CachedTrackAreaGeometry()"
  }
]