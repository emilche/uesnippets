[
  {
    "label": "IEngineCrypto",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IEngineCrypto"
  },
  {
    "label": "GetFeatureName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Features / IModularFeatures . h \" # include \" Containers / ArrayView . h \" typedef void* FRSAKeyHandle ; FRSAKeyHandle InvalidRSAKeyHandle = nullptr ; struct IEngineCrypto : public IModularFeature { FName)",
    "insertText": "GetFeatureName()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "Name(TEXT(\"EngineCryptoFeature\"))"
  },
  {
    "label": "CreateRSAKey()",
    "kind": "Method",
    "detail": "Function (FRSAKeyHandle)",
    "insertText": "CreateRSAKey(const TArrayView<const uint8> InPublicExponent, const TArrayView<const uint8> InPrivateExponent, const TArrayView<const uint8> InModulus)"
  },
  {
    "label": "DestroyRSAKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRSAKey(FRSAKeyHandle InKey)"
  },
  {
    "label": "GetKeySize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetKeySize(FRSAKeyHandle InKey)"
  },
  {
    "label": "GetMaxDataSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxDataSize(FRSAKeyHandle InKey)"
  },
  {
    "label": "EncryptPublic()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "EncryptPublic(const TArrayView<const uint8> InSource, TArray<uint8>& OutDestination, FRSAKeyHandle InKey)"
  },
  {
    "label": "EncryptPrivate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "EncryptPrivate(const TArrayView<const uint8> InSource, TArray<uint8>& OutDestination, FRSAKeyHandle InKey)"
  },
  {
    "label": "DecryptPublic()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DecryptPublic(const TArrayView<const uint8> InSource, TArray<uint8>& OutDestination, FRSAKeyHandle InKey)"
  },
  {
    "label": "DecryptPrivate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DecryptPrivate(const TArrayView<const uint8> InSource, TArray<uint8>& OutDestination, FRSAKeyHandle InKey)"
  }
]