[
  {
    "label": "ChannelLinux",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelLinux"
  },
  {
    "label": "PlatformSharedMemoryRegion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PlatformSharedMemoryRegion"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "subtle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "subtle"
  },
  {
    "label": "SharedMemoryMapping",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedMemoryMapping"
  },
  {
    "label": "mojo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mojo"
  },
  {
    "label": "AcquireReservationForMapping()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MEMORY_SHARED_MEMORY_SECURITY_POLICY_H_ # define BASE_MEMORY_SHARED_MEMORY_SECURITY_POLICY_H_ # include<stddef . h> # include \" base / base_export . h \" namespace mojo { namespace core { class ChannelLinux ; } } namespace base { namespace subtle { class PlatformSharedMemoryRegion ; } class BASE_EXPORT SharedMemorySecurityPolicy { private : class subtle::PlatformSharedMemoryRegion ; class SharedMemoryMapping ; class mojo::core::ChannelLinux ; [ [ nodiscard ] ] bool)",
    "insertText": "AcquireReservationForMapping(size_t size)"
  },
  {
    "label": "ReleaseReservationForMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseReservationForMapping(size_t size)"
  }
]