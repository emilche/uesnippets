[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "USkeletalMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshSocket"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FViewportClick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportClick"
  },
  {
    "label": "FSelectedSocketInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectedSocketInfo"
  },
  {
    "label": "FViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportClient"
  },
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FGizmoState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGizmoState"
  },
  {
    "label": "FSkeletonSelectionEditMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonSelectionEditMode"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "FSkeletonSelectionEditMode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSkeletonSelectionEditMode()"
  },
  {
    "label": "DuplicateAndSelectSocket()",
    "kind": "Method",
    "detail": "Function (FSelectedSocketInfo)",
    "insertText": "DuplicateAndSelectSocket(const FSelectedSocketInfo& SocketInfoToDuplicate)"
  },
  {
    "label": "GetDPIUnscaledSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetDPIUnscaledSize(FViewport* Viewport, FViewportClient* Client)"
  }
]