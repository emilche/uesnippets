[
  {
    "label": "ReceiveTimeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReceiveTimeInfo"
  },
  {
    "label": "Dlrr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Dlrr"
  },
  {
    "label": "ReceiveTimeInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_DLRR_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_DLRR_H_ # include<stddef . h> # include<stdint . h> # include<vector> namespace webrtc { namespace rtcp { struct ReceiveTimeInfo {)",
    "insertText": "ReceiveTimeInfo() : ssrc(0), last_rr(0), delay_since_last_rr(0)"
  },
  {
    "label": "ReceiveTimeInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ReceiveTimeInfo(uint32_t ssrc, uint32_t last_rr, uint32_t delay) : ssrc(ssrc), last_rr(last_rr), delay_since_last_rr(delay)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} uint32_t ssrc ; uint32_t last_rr ; uint32_t delay_since_last_rr ; } ; bool)",
    "insertText": "operator(const ReceiveTimeInfo& lhs, const ReceiveTimeInfo& rhs)"
  },
  {
    "label": "Dlrr()",
    "kind": "Method",
    "detail": "Function (} class Dlrr { public : const uint8_t kBlockType = 5 ;)",
    "insertText": "Dlrr()"
  },
  {
    "label": "Dlrr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dlrr(const Dlrr& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Dlrr&)",
    "insertText": "operator(const Dlrr& other)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Parse(const uint8_t* buffer, uint16_t block_length_32bits)"
  },
  {
    "label": "BlockLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "BlockLength()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(uint8_t* buffer)"
  },
  {
    "label": "ClearItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearItems()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (sub_blocks_ .)",
    "insertText": "clear()"
  },
  {
    "label": "AddDlrrItem()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddDlrrItem(const ReceiveTimeInfo& time_info)"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (sub_blocks_ .)",
    "insertText": "push_back(time_info)"
  },
  {
    "label": "sub_blocks()",
    "kind": "Method",
    "detail": "Function (} const std::vector<ReceiveTimeInfo>&)",
    "insertText": "sub_blocks()"
  }
]