[
  {
    "label": "FInputChord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputChord"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Key)"
  },
  {
    "label": "GetRelationship()",
    "kind": "Method",
    "detail": "Function (enum class ERelationshipType { None,Same,Masked,Masks } ; ERelationshipType)",
    "insertText": "GetRelationship(const FInputChord& OtherChord)"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInputChord()"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInputChord(const FKey InKey) : Key(InKey) , bShift(false) , bCtrl(false) , bAlt(false) , bCmd(false)"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInputChord(const FKey InKey, const bool bInShift, const bool bInCtrl, const bool bInAlt, const bool bInCmd) : Key(InKey) , bShift(bInShift) , bCtrl(bInCtrl) , bAlt(bInAlt) , bCmd(bInCmd)"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInputChord(const EModifierKey::Type InModifierKeys, const FKey InKey ) : Key(InKey) , bShift((InModifierKeys & EModifierKey::Shift) !=0) , bCtrl((InModifierKeys & EModifierKey::Control) != 0) , bAlt((InModifierKeys & EModifierKey::Alt) != 0) , bCmd((InModifierKeys & EModifierKey::Command) != 0)"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInputChord(const FKey InKey, const EModifierKey::Type InModifierKeys ) : Key(InKey) , bShift((InModifierKeys & EModifierKey::Shift) !=0) , bCtrl((InModifierKeys & EModifierKey::Control) != 0) , bAlt((InModifierKeys & EModifierKey::Alt) != 0) , bCmd((InModifierKeys & EModifierKey::Command) != 0)"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInputChord(const FInputChord& Other)"
  },
  {
    "label": "FInputChord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInputChord(FInputChord&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInputChord&)",
    "insertText": "operator(const FInputChord& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FInputChord&)",
    "insertText": "operator(FInputChord&& Other)"
  },
  {
    "label": "NeedsControl()",
    "kind": "Method",
    "detail": "Function (} # if PLATFORM_MAC bool)",
    "insertText": "NeedsControl()"
  },
  {
    "label": "GetKeyText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetKeyText(const bool bLongDisplayName = true)"
  },
  {
    "label": "GetModifierText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetModifierText(TOptional<FText> ModifierAppender = TOptional<FText>())"
  },
  {
    "label": "HasAnyModifierKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyModifierKeys()"
  },
  {
    "label": "IsValidChord()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidChord()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Set(const FInputChord& InTemplate)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (* this = InTemplate ; } public : uint32)",
    "insertText": "GetTypeHash(const FInputChord& Chord)"
  }
]