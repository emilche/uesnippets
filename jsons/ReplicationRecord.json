[
  {
    "label": "FReplicationRecord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationRecord"
  },
  {
    "label": "FRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecord"
  },
  {
    "label": "FRecordInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecordInfo"
  },
  {
    "label": "FRecordInfoList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecordInfoList"
  },
  {
    "label": "u()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Net / Core / Misc / ResizableCircularQueue . h \" # include \" Iris / ReplicationSystem / ChangeMaskUtil . h \" namespace UE::Net::Private { class FReplicationRecord { public : typedef uint16 ReplicationRecordIndex ; ReplicationRecordIndex InvalidReplicationRecordIndex = 1)",
    "insertText": "u((sizeof(ReplicationRecordIndex) * 8u) - 1)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (ReplicationRecordIndex ReplicationRecordIndexMask = InvalidReplicationRecordIndex - 1 u ; struct FRecord { uint16 RecordCount ; } ; struct FRecordInfo { FChangeMaskStorageOrPointer ChangeMaskOrPtr ; uint32 Index : 2 0 ; uint32 ReplicatedObjectState : 5 ; uint32 HasChangeMask : 1 ; uint32 HasAttachments : 1 ; uint32 WroteTearOff : 1 ; uint32 WroteDestroySubObject : 1 ; uint32 NewBaselineIndex : 2 ; uint32 UnusedFlag : 1 ; ReplicationRecordIndex NextIndex ; uint16 Padding : 1 6 ; } ;)",
    "insertText": "static_assert(sizeof(FRecordInfo) == 16, \"Expected sizeof FRecordInfo to be 16 bytes\")"
  },
  {
    "label": "FRecordInfoList()",
    "kind": "Method",
    "detail": "Function (public : struct FRecordInfoList {)",
    "insertText": "FRecordInfoList()"
  },
  {
    "label": "PopInfoAndRemoveFromList()",
    "kind": "Method",
    "detail": "Function (ReplicationRecordIndex LastRecordIndex ; ReplicationRecordIndex FirstRecordIndex ; } ; void)",
    "insertText": "PopInfoAndRemoveFromList(FRecordInfoList& RecordList)"
  },
  {
    "label": "PushInfoAndAddToList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushInfoAndAddToList(FRecordInfoList& RecordList, const FRecordInfo& RecordInfo, uint64 AttachmentRecord = 0)"
  },
  {
    "label": "ResetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetList(FRecordInfoList& RecordList)"
  },
  {
    "label": "FReplicationRecord()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FReplicationRecord()"
  },
  {
    "label": "GetInfoForIndex()",
    "kind": "Method",
    "detail": "Function (FRecordInfo*)",
    "insertText": "GetInfoForIndex(ReplicationRecordIndex Index)"
  },
  {
    "label": "PeekInfo()",
    "kind": "Method",
    "detail": "Function (const FRecordInfo&)",
    "insertText": "PeekInfo()"
  },
  {
    "label": "PeekInfoAtOffset()",
    "kind": "Method",
    "detail": "Function (} const FRecordInfo&)",
    "insertText": "PeekInfoAtOffset(uint32 Offset)"
  },
  {
    "label": "GetInfoCount()",
    "kind": "Method",
    "detail": "Function (} const uint32)",
    "insertText": "GetInfoCount()"
  },
  {
    "label": "DequeueAttachmentRecord()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "DequeueAttachmentRecord()"
  },
  {
    "label": "GetFrontIndex()",
    "kind": "Method",
    "detail": "Function (ReplicationRecordIndex)",
    "insertText": "GetFrontIndex()"
  },
  {
    "label": "PopRecord()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "PopRecord()"
  },
  {
    "label": "PeekRecordAtOffset()",
    "kind": "Method",
    "detail": "Function (const uint32)",
    "insertText": "PeekRecordAtOffset(uint32 Offset)"
  },
  {
    "label": "GetRecordCount()",
    "kind": "Method",
    "detail": "Function (} const uint32)",
    "insertText": "GetRecordCount()"
  },
  {
    "label": "PushInfo()",
    "kind": "Method",
    "detail": "Function (} private : ReplicationRecordIndex)",
    "insertText": "PushInfo(const FRecordInfo& Info)"
  },
  {
    "label": "PopInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopInfo()"
  },
  {
    "label": "FReplicationRecord()",
    "kind": "Method",
    "detail": "Function (private : TResizableCircularQueue<FRecordInfo> RecordInfos ; TResizableCircularQueue<uint16> Record ; TResizableCircularQueue<uint64> AttachmentRecords ; ReplicationRecordIndex FrontIndex ; } ;)",
    "insertText": "FReplicationRecord() : RecordInfos(1024) , Record(256) , AttachmentRecords(64) , FrontIndex(0u)"
  },
  {
    "label": "Peek()",
    "kind": "Method",
    "detail": "Function (const uint64 AttachmentRecord = AttachmentRecords .)",
    "insertText": "Peek()"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (AttachmentRecords .)",
    "insertText": "Pop()"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (Record .)",
    "insertText": "Enqueue(InfoCount)"
  },
  {
    "label": "Count()",
    "kind": "Method",
    "detail": "Function (const SIZE_T CurrentInfoCount = RecordInfos .)",
    "insertText": "Count()"
  },
  {
    "label": "EnqueueDefaulted_GetRef()",
    "kind": "Method",
    "detail": "Function (FRecordInfo& NewInfo = RecordInfos .)",
    "insertText": "EnqueueDefaulted_GetRef()"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (NewInfo = Info ; NewInfo . NextIndex = InvalidReplicationRecordIndex ;)",
    "insertText": "return(FrontIndex + CurrentInfoCount)"
  },
  {
    "label": "FrontIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrontIndex(FrontIndex + 1u)"
  },
  {
    "label": "LastRecordIndex()",
    "kind": "Method",
    "detail": "Function (RecordList . FirstRecordIndex = RecordInfo . NextIndex ; RecordList .)",
    "insertText": "LastRecordIndex(RecordList.LastRecordIndex == RecordIndex)"
  },
  {
    "label": "PushInfoAndAddToList()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PushInfoAndAddToList(FRecordInfoList& RecordList, const FRecordInfo& RecordInfo, uint64 AttachmentRecord)"
  },
  {
    "label": "PushInfo()",
    "kind": "Method",
    "detail": "Function (FReplicationRecord::ReplicationRecordIndex NewIndex =)",
    "insertText": "PushInfo(RecordInfo)"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (AttachmentRecords .)",
    "insertText": "Enqueue(AttachmentRecord)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(FRecordInfo* LastRecord = GetInfoForIndex(RecordList.LastRecordIndex))"
  },
  {
    "label": "FRecordInfoList()",
    "kind": "Method",
    "detail": "Function (RecordList . FirstRecordIndex = InvalidReplicationRecordIndex ; RecordList . LastRecordIndex = InvalidReplicationRecordIndex ; } FReplicationRecord::)",
    "insertText": "FRecordInfoList() : LastRecordIndex(InvalidReplicationRecordIndex) , FirstRecordIndex(InvalidReplicationRecordIndex)"
  }
]