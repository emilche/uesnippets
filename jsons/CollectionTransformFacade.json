[
  {
    "label": "FCollectionTransformFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionTransformFacade"
  },
  {
    "label": "FCollectionTransformFacade()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FCollectionTransformFacade(FManagedArrayCollection& InCollection)"
  },
  {
    "label": "FCollectionTransformFacade()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FCollectionTransformFacade(const FManagedArrayCollection& InCollection)"
  },
  {
    "label": "SetPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPivot(const FTransform& InTransform)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(const FTransform& InTransform)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(const FTransform& InTransform, const TArray<int32>& InSelection)"
  },
  {
    "label": "BuildMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "BuildMatrix(const FVector& Translate,\n\t\t\tconst uint8 RotationOrder,\n\t\t\tconst FVector& Rotate,\n\t\t\tconst FVector& Scale,\n\t\t\tconst FVector& Shear,\n\t\t\tconst float UniformScale,\n\t\t\tconst FVector& RotatePivot,\n\t\t\tconst FVector& ScalePivot,\n\t\t\tconst bool InvertTransformation)"
  },
  {
    "label": "BuildTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "BuildTransform(const FVector& Translate,\n\t\t\tconst uint8 RotationOrder,\n\t\t\tconst FVector& Rotate,\n\t\t\tconst FVector& Scale,\n\t\t\tconst float UniformScale,\n\t\t\tconst FVector& RotatePivot,\n\t\t\tconst FVector& ScalePivot,\n\t\t\tconst bool InvertTransformation)"
  },
  {
    "label": "SetBoneTransformToIdentity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneTransformToIdentity(int32 BoneIdx)"
  },
  {
    "label": "HasCycle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCycle(const TManagedArray<int32>& Parents, int32 Node)"
  },
  {
    "label": "HasCycle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCycle(const TManagedArray<int32>& Parents, const TArray<int32>& SelectedBones)"
  },
  {
    "label": "ParentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParentTransform(const int32 TransformIndex, const int32 ChildIndex)"
  },
  {
    "label": "ParentTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParentTransforms(const int32 TransformIndex, const TArray<int32>& SelectedBones)"
  },
  {
    "label": "UnparentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnparentTransform(const int32 ChildIndex)"
  },
  {
    "label": "EnforceSingleRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnforceSingleRoot(const FString & RootName)"
  }
]