[
  {
    "label": "_Container",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Container"
  },
  {
    "label": "_Predicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Predicate"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ITERATOR_ERASE_IF_CONTAINER_H # define _LIBCPP___ITERATOR_ERASE_IF_CONTAINER_H # include<__config> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _Container, class _Predicate> _LIBCPP_HIDE_FROM_ABI typename _Container::size_type __libcpp_erase_if_container(_Container& __c, _Predicate& __pred)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (_Container::size_type __old_size = __c .)",
    "insertText": "size()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (const _Container::iterator __last = __c .)",
    "insertText": "end()"
  }
]