[
  {
    "label": "Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Image"
  },
  {
    "label": "CudaCompressor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CudaCompressor"
  },
  {
    "label": "CudaCompressor()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_TT_CUDACOMPRESSDXT_H # define NV_TT_CUDACOMPRESSDXT_H # include<nvimage / nvimage . h> # include<nvtt / nvtt . h> namespace nv { class Image ; class CudaCompressor { public :)",
    "insertText": "CudaCompressor()"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValid()"
  },
  {
    "label": "setImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setImage(const Image * image, nvtt::AlphaMode alphaMode)"
  },
  {
    "label": "compressDXT1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compressDXT1(const nvtt::CompressionOptions::Private & compressionOptions, const nvtt::OutputOptions::Private & outputOptions)"
  },
  {
    "label": "compressDXT3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compressDXT3(const nvtt::CompressionOptions::Private & compressionOptions, const nvtt::OutputOptions::Private & outputOptions)"
  },
  {
    "label": "compressDXT5()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compressDXT5(const nvtt::CompressionOptions::Private & compressionOptions, const nvtt::OutputOptions::Private & outputOptions)"
  }
]