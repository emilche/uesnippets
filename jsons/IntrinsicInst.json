[
  {
    "label": "IntrinsicInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntrinsicInst"
  },
  {
    "label": "DbgInfoIntrinsic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DbgInfoIntrinsic"
  },
  {
    "label": "DbgDeclareInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DbgDeclareInst"
  },
  {
    "label": "DbgValueInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DbgValueInst"
  },
  {
    "label": "MemIntrinsic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemIntrinsic"
  },
  {
    "label": "MemSetInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemSetInst"
  },
  {
    "label": "MemTransferInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemTransferInst"
  },
  {
    "label": "MemCpyInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemCpyInst"
  },
  {
    "label": "MemMoveInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemMoveInst"
  },
  {
    "label": "VAStartInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VAStartInst"
  },
  {
    "label": "VAEndInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VAEndInst"
  },
  {
    "label": "VACopyInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VACopyInst"
  },
  {
    "label": "InstrProfIncrementInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InstrProfIncrementInst"
  },
  {
    "label": "IntrinsicInst()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_INTRINSICINST_H # define LLVM_IR_INTRINSICINST_H # include \" llvm / IR / Constants . h \" # include \" llvm / IR / Function . h \" # include \" llvm / IR / Instructions . h \" # include \" llvm / IR / Intrinsics . h \" # include \" llvm / IR / Metadata . h \" # include \" llvm / IR / DebugInfoMetadata . h \" namespace llvm { class IntrinsicInst : public CallInst {)",
    "insertText": "IntrinsicInst()"
  },
  {
    "label": "IntrinsicInst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IntrinsicInst(const IntrinsicInst&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const IntrinsicInst&)"
  },
  {
    "label": "getIntrinsicID()",
    "kind": "Method",
    "detail": "Function (public : Intrinsic::ID)",
    "insertText": "getIntrinsicID()"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "classof(const CallInst *I)"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (} } ; class DbgInfoIntrinsic : public IntrinsicInst { public : bool)",
    "insertText": "classof(const IntrinsicInst *I)"
  },
  {
    "label": "StripCast()",
    "kind": "Method",
    "detail": "Function (} Value*)",
    "insertText": "StripCast(Value *C)"
  },
  {
    "label": "getAddress()",
    "kind": "Method",
    "detail": "Function (} ; class DbgDeclareInst : public DbgInfoIntrinsic { public : Value*)",
    "insertText": "getAddress()"
  },
  {
    "label": "getVariable()",
    "kind": "Method",
    "detail": "Function (DILocalVariable*)",
    "insertText": "getVariable()"
  },
  {
    "label": "getExpression()",
    "kind": "Method",
    "detail": "Function (} DIExpression*)",
    "insertText": "getExpression()"
  },
  {
    "label": "setVariable()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setVariable(DIVariable *v)"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(1, MetadataAsValue::get(getContext(), v))"
  },
  {
    "label": "getRawVariable()",
    "kind": "Method",
    "detail": "Function (} Metadata*)",
    "insertText": "getRawVariable()"
  },
  {
    "label": "getRawExpression()",
    "kind": "Method",
    "detail": "Function (} Metadata*)",
    "insertText": "getRawExpression()"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "classof(const Value *V)"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (} } ; class DbgValueInst : public DbgInfoIntrinsic { public : const Value*)",
    "insertText": "getValue()"
  },
  {
    "label": "getOffset()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getOffset()"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(2, MetadataAsValue::get(getContext(), v))"
  },
  {
    "label": "getRawDest()",
    "kind": "Method",
    "detail": "Function (} } ; class MemIntrinsic : public IntrinsicInst { public : Value*)",
    "insertText": "getRawDest()"
  },
  {
    "label": "getRawDestUse()",
    "kind": "Method",
    "detail": "Function (} const Use&)",
    "insertText": "getRawDestUse()"
  },
  {
    "label": "getLength()",
    "kind": "Method",
    "detail": "Function (} Value*)",
    "insertText": "getLength()"
  },
  {
    "label": "getLengthUse()",
    "kind": "Method",
    "detail": "Function (} const Use&)",
    "insertText": "getLengthUse()"
  },
  {
    "label": "getAlignmentCst()",
    "kind": "Method",
    "detail": "Function (} ConstantInt*)",
    "insertText": "getAlignmentCst()"
  },
  {
    "label": "getAlignment()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getAlignment()"
  },
  {
    "label": "getVolatileCst()",
    "kind": "Method",
    "detail": "Function (} ConstantInt*)",
    "insertText": "getVolatileCst()"
  },
  {
    "label": "isVolatile()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isVolatile()"
  },
  {
    "label": "getDestAddressSpace()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getDestAddressSpace()"
  },
  {
    "label": "getDest()",
    "kind": "Method",
    "detail": "Function (} Value*)",
    "insertText": "getDest()"
  },
  {
    "label": "setDest()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setDest(Value *Ptr)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(getRawDest()->getType() == Ptr->getType() && \"setDest called with pointer of wrong type!\")"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(0, Ptr)"
  },
  {
    "label": "setLength()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setLength(Value *L)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(getLength()->getType() == L->getType() && \"setLength called with value of wrong type!\")"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(2, L)"
  },
  {
    "label": "setAlignment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setAlignment(Constant* A)"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(3, A)"
  },
  {
    "label": "setVolatile()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setVolatile(Constant* V)"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(4, V)"
  },
  {
    "label": "getAlignmentType()",
    "kind": "Method",
    "detail": "Function (} Type*)",
    "insertText": "getAlignmentType()"
  },
  {
    "label": "getValueUse()",
    "kind": "Method",
    "detail": "Function (} const Use&)",
    "insertText": "getValueUse()"
  },
  {
    "label": "setValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setValue(Value *Val)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(getValue()->getType() == Val->getType() && \"setValue called with value of wrong type!\")"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(1, Val)"
  },
  {
    "label": "getRawSource()",
    "kind": "Method",
    "detail": "Function (} } ; class MemTransferInst : public MemIntrinsic { public : Value*)",
    "insertText": "getRawSource()"
  },
  {
    "label": "getRawSourceUse()",
    "kind": "Method",
    "detail": "Function (} const Use&)",
    "insertText": "getRawSourceUse()"
  },
  {
    "label": "getSource()",
    "kind": "Method",
    "detail": "Function (} Value*)",
    "insertText": "getSource()"
  },
  {
    "label": "getSourceAddressSpace()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getSourceAddressSpace()"
  },
  {
    "label": "setSource()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setSource(Value *Ptr)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(getRawSource()->getType() == Ptr->getType() && \"setSource called with pointer of wrong type!\")"
  },
  {
    "label": "setArgOperand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setArgOperand(1, Ptr)"
  },
  {
    "label": "getArgList()",
    "kind": "Method",
    "detail": "Function (} Value*)",
    "insertText": "getArgList()"
  },
  {
    "label": "getSrc()",
    "kind": "Method",
    "detail": "Function (} Value*)",
    "insertText": "getSrc()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (} GlobalVariable*)",
    "insertText": "getName()"
  },
  {
    "label": "getHash()",
    "kind": "Method",
    "detail": "Function (} ConstantInt*)",
    "insertText": "getHash()"
  },
  {
    "label": "getNumCounters()",
    "kind": "Method",
    "detail": "Function (} ConstantInt*)",
    "insertText": "getNumCounters()"
  },
  {
    "label": "getIndex()",
    "kind": "Method",
    "detail": "Function (} ConstantInt*)",
    "insertText": "getIndex()"
  }
]