[
  {
    "label": "FT_ServiceDescRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_ServiceDescRec_"
  },
  {
    "label": "FT_ServiceCacheRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_ServiceCacheRec_"
  },
  {
    "label": "FT_Service_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Service_"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTSERV_H__ # define __FTSERV_H__ FT_BEGIN_HEADER # if)",
    "insertText": "defined(_MSC_VER ) #pragma warning( disable : 4127 ) #endif #ifdef __cplusplus #define FT_FACE_FIND_SERVICE( face, ptr, id ) \\ FT_BEGIN_STMNT \\ FT_Module module = FT_MODULE( FT_FACE( face )->driver)"
  },
  {
    "label": "_pptr_()",
    "kind": "Method",
    "detail": "Function (\\ FT_Pointer _tmp_ = NULL ; \\ FT_Pointer*)",
    "insertText": "_pptr_(FT_Pointer*)&(ptr)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ \\ \\)",
    "insertText": "if(module->clazz->get_interface ) \\ _tmp_ = module->clazz->get_interface( module, FT_SERVICE_ID_ ## id)"
  },
  {
    "label": "FT_FACE_FIND_SERVICE()",
    "kind": "Method",
    "detail": "Function (\\* _pptr_ = _tmp_ ; \\ FT_END_STMNT # else # define)",
    "insertText": "FT_FACE_FIND_SERVICE(face, ptr, id ) \\ FT_BEGIN_STMNT \\ FT_Module module = FT_MODULE( FT_FACE( face )->driver)"
  },
  {
    "label": "FT_FACE_FIND_GLOBAL_SERVICE()",
    "kind": "Method",
    "detail": "Function (\\ ptr = _tmp_ ; \\ FT_END_STMNT # endif # ifdef __cplusplus # define)",
    "insertText": "FT_FACE_FIND_GLOBAL_SERVICE(face, ptr, id ) \\ FT_BEGIN_STMNT \\ FT_Module module = FT_MODULE( FT_FACE( face )->driver)"
  },
  {
    "label": "ft_module_get_service()",
    "kind": "Method",
    "detail": "Function (\\ \\ \\ _tmp_ =)",
    "insertText": "ft_module_get_service(module, FT_SERVICE_ID_ ## id)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC1()",
    "kind": "Method",
    "detail": "Function (\\ ptr = _tmp_ ; \\ FT_END_STMNT # endif typedef struct FT_ServiceDescRec_ { const char* serv_id ; const void* serv_data ; } FT_ServiceDescRec ; typedef const FT_ServiceDescRec* FT_ServiceDesc ; # ifndef FT_CONFIG_OPTION_PIC # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC1(class_, \\ serv_id_1, serv_data_1)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC2()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { NULL,NULL } \\ } ; # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC2(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC3()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { serv_id_2,serv_data_2 },\\ { NULL,NULL } \\ } ; # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC3(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC4()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { serv_id_2,serv_data_2 },\\ { serv_id_3,serv_data_3 },\\ { NULL,NULL } \\ } ; # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC4(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC5()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { serv_id_2,serv_data_2 },\\ { serv_id_3,serv_data_3 },\\ { serv_id_4,serv_data_4 },\\ { NULL,NULL } \\ } ; # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC5(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4, \\ serv_id_5, serv_data_5)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC6()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { serv_id_2,serv_data_2 },\\ { serv_id_3,serv_data_3 },\\ { serv_id_4,serv_data_4 },\\ { serv_id_5,serv_data_5 },\\ { NULL,NULL } \\ } ; # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC6(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4, \\ serv_id_5, serv_data_5, \\ serv_id_6, serv_data_6)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC7()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { serv_id_2,serv_data_2 },\\ { serv_id_3,serv_data_3 },\\ { serv_id_4,serv_data_4 },\\ { serv_id_5,serv_data_5 },\\ { serv_id_6,serv_data_6 },\\ { NULL,NULL } \\ } ; # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC7(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4, \\ serv_id_5, serv_data_5, \\ serv_id_6, serv_data_6, \\ serv_id_7, serv_data_7)"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC1()",
    "kind": "Method",
    "detail": "Function (\\ { serv_id_1,serv_data_1 },\\ { serv_id_2,serv_data_2 },\\ { serv_id_3,serv_data_3 },\\ { serv_id_4,serv_data_4 },\\ { serv_id_5,serv_data_5 },\\ { serv_id_6,serv_data_6 },\\ { serv_id_7,serv_data_7 },\\ { NULL,NULL } \\ } ; # else # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC1(class_, \\ serv_id_1, serv_data_1 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(clazz ) \\ FT_FREE( clazz)"
  },
  {
    "label": "class_()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ FT_Error \\ FT_Create_Class_ # #)",
    "insertText": "class_(FT_Library library, \\ FT_ServiceDescRec** output_class)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 2 ))"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC2()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = NULL ; \\ clazz [ 1 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC2(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 3 ))"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC3()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = serv_id_2 ; \\ clazz [ 1 ] . serv_data = serv_data_2 ; \\ clazz [ 2 ] . serv_id = NULL ; \\ clazz [ 2 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC3(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 4 ))"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC4()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = serv_id_2 ; \\ clazz [ 1 ] . serv_data = serv_data_2 ; \\ clazz [ 2 ] . serv_id = serv_id_3 ; \\ clazz [ 2 ] . serv_data = serv_data_3 ; \\ clazz [ 3 ] . serv_id = NULL ; \\ clazz [ 3 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC4(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 5 ))"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC5()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = serv_id_2 ; \\ clazz [ 1 ] . serv_data = serv_data_2 ; \\ clazz [ 2 ] . serv_id = serv_id_3 ; \\ clazz [ 2 ] . serv_data = serv_data_3 ; \\ clazz [ 3 ] . serv_id = serv_id_4 ; \\ clazz [ 3 ] . serv_data = serv_data_4 ; \\ clazz [ 4 ] . serv_id = NULL ; \\ clazz [ 4 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC5(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4, \\ serv_id_5, serv_data_5 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 6 ))"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC6()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = serv_id_2 ; \\ clazz [ 1 ] . serv_data = serv_data_2 ; \\ clazz [ 2 ] . serv_id = serv_id_3 ; \\ clazz [ 2 ] . serv_data = serv_data_3 ; \\ clazz [ 3 ] . serv_id = serv_id_4 ; \\ clazz [ 3 ] . serv_data = serv_data_4 ; \\ clazz [ 4 ] . serv_id = serv_id_5 ; \\ clazz [ 4 ] . serv_data = serv_data_5 ; \\ clazz [ 5 ] . serv_id = NULL ; \\ clazz [ 5 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC6(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4, \\ serv_id_5, serv_data_5, \\ serv_id_6, serv_data_6 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 7 ))"
  },
  {
    "label": "FT_DEFINE_SERVICEDESCREC7()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = serv_id_2 ; \\ clazz [ 1 ] . serv_data = serv_data_2 ; \\ clazz [ 2 ] . serv_id = serv_id_3 ; \\ clazz [ 2 ] . serv_data = serv_data_3 ; \\ clazz [ 3 ] . serv_id = serv_id_4 ; \\ clazz [ 3 ] . serv_data = serv_data_4 ; \\ clazz [ 4 ] . serv_id = serv_id_5 ; \\ clazz [ 4 ] . serv_data = serv_data_5 ; \\ clazz [ 5 ] . serv_id = serv_id_6 ; \\ clazz [ 5 ] . serv_data = serv_data_6 ; \\ clazz [ 6 ] . serv_id = NULL ; \\ clazz [ 6 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # define)",
    "insertText": "FT_DEFINE_SERVICEDESCREC7(class_, \\ serv_id_1, serv_data_1, \\ serv_id_2, serv_data_2, \\ serv_id_3, serv_data_3, \\ serv_id_4, serv_data_4, \\ serv_id_5, serv_data_5, \\ serv_id_6, serv_data_6, \\ serv_id_7, serv_data_7 ) \\ void \\ FT_Destroy_Class_ ## class_( FT_Library library, \\ FT_ServiceDescRec* clazz)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ FT_ServiceDescRec* clazz = NULL ; \\ FT_Error error ; \\ FT_Memory memory = library -> memory ; \\ \\ \\)",
    "insertText": "if(FT_ALLOC( clazz, sizeof ( *clazz ) * 8 ))"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (\\ \\ clazz [ 0 ] . serv_id = serv_id_1 ; \\ clazz [ 0 ] . serv_data = serv_data_1 ; \\ clazz [ 1 ] . serv_id = serv_id_2 ; \\ clazz [ 1 ] . serv_data = serv_data_2 ; \\ clazz [ 2 ] . serv_id = serv_id_3 ; \\ clazz [ 2 ] . serv_data = serv_data_3 ; \\ clazz [ 3 ] . serv_id = serv_id_4 ; \\ clazz [ 3 ] . serv_data = serv_data_4 ; \\ clazz [ 4 ] . serv_id = serv_id_5 ; \\ clazz [ 4 ] . serv_data = serv_data_5 ; \\ clazz [ 5 ] . serv_id = serv_id_6 ; \\ clazz [ 5 ] . serv_data = serv_data_6 ; \\ clazz [ 6 ] . serv_id = serv_id_7 ; \\ clazz [ 6 ] . serv_data = serv_data_7 ; \\ clazz [ 7 ] . serv_id = NULL ; \\ clazz [ 7 ] . serv_data = NULL ; \\ \\* output_class = clazz ; \\ \\ return FT_Err_Ok ; \\ } # endif)",
    "insertText": "FT_BASE(FT_Pointer ) ft_service_list_lookup( FT_ServiceDesc service_descriptors, const char* service_id)"
  },
  {
    "label": "FT_SERVICE_UNAVAILABLE()",
    "kind": "Method",
    "detail": "Function (typedef struct FT_ServiceCacheRec_ { FT_Pointer service_POSTSCRIPT_FONT_NAME ; FT_Pointer service_MULTI_MASTERS ; FT_Pointer service_GLYPH_DICT ; FT_Pointer service_PFR_METRICS ; FT_Pointer service_WINFNT ; } FT_ServiceCacheRec,* FT_ServiceCache ; # define)",
    "insertText": "FT_SERVICE_UNAVAILABLE((FT_Pointer)~1) #ifdef __cplusplus #define FT_FACE_LOOKUP_SERVICE( face, ptr, id)"
  },
  {
    "label": "Pptr()",
    "kind": "Method",
    "detail": "Function (\\ FT_Pointer*)",
    "insertText": "Pptr(FT_Pointer*)&(ptr)"
  },
  {
    "label": "FT_FACE()",
    "kind": "Method",
    "detail": "Function (internal->services. service_ ## id)",
    "insertText": "FT_FACE(face)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(svc == FT_SERVICE_UNAVAILABLE)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ else)",
    "insertText": "if(svc == NULL)"
  },
  {
    "label": "FT_FACE_FIND_SERVICE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "FT_FACE_FIND_SERVICE(face, svc, id)"
  },
  {
    "label": "FT_FACE()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "FT_FACE(face )->internal->services. service_ ## id = \\ (FT_Pointer)( svc != NULL ? svc \\ : FT_SERVICE_UNAVAILABLE)"
  },
  {
    "label": "FT_FACE_LOOKUP_SERVICE()",
    "kind": "Method",
    "detail": "Function (\\ } \\* Pptr = svc ; \\ FT_END_STMNT # else # define)",
    "insertText": "FT_FACE_LOOKUP_SERVICE(face, ptr, id)"
  },
  {
    "label": "FT_DEFINE_SERVICE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ ptr = svc ; \\ FT_END_STMNT # endif # define)",
    "insertText": "FT_DEFINE_SERVICE(name)"
  }
]