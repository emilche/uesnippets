[
  {
    "label": "COFFObjectFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COFFObjectFile"
  },
  {
    "label": "PDBContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PDBContext"
  },
  {
    "label": "PDBContext()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_DEBUGINFO_PDB_PDBCONTEXT_H # define LLVM_DEBUGINFO_PDB_PDBCONTEXT_H # include \" llvm / DebugInfo / DIContext . h \" # include \" llvm / DebugInfo / PDB / IPDBSession . h \" namespace llvm { namespace object { class COFFObjectFile ; } class PDBContext : public DIContext {)",
    "insertText": "PDBContext(PDBContext &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (PDBContext&)",
    "insertText": "operator(PDBContext &)"
  },
  {
    "label": "PDBContext()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "PDBContext(const object::COFFObjectFile &Object, std::unique_ptr<IPDBSession> PDBSession, bool RelativeAddress)"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "classof(const DIContext *DICtx)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "dump(raw_ostream &OS, DIDumpType DumpType = DIDT_All)"
  },
  {
    "label": "getLineInfoForAddress()",
    "kind": "Method",
    "detail": "Function (DILineInfo)",
    "insertText": "getLineInfoForAddress(uint64_t Address, DILineInfoSpecifier Specifier = DILineInfoSpecifier())"
  },
  {
    "label": "getLineInfoForAddressRange()",
    "kind": "Method",
    "detail": "Function (DILineInfoTable)",
    "insertText": "getLineInfoForAddressRange(uint64_t Address, uint64_t Size, DILineInfoSpecifier Specifier = DILineInfoSpecifier())"
  },
  {
    "label": "getInliningInfoForAddress()",
    "kind": "Method",
    "detail": "Function (DIInliningInfo)",
    "insertText": "getInliningInfoForAddress(uint64_t Address, DILineInfoSpecifier Specifier = DILineInfoSpecifier())"
  },
  {
    "label": "getFunctionName()",
    "kind": "Method",
    "detail": "Function (private : std::string)",
    "insertText": "getFunctionName(uint64_t Address, DINameKind NameKind)"
  }
]