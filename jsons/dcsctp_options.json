[
  {
    "label": "DcSctpOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DcSctpOptions"
  },
  {
    "label": "StreamPriority()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PUBLIC_DCSCTP_OPTIONS_H_ # define NET_DCSCTP_PUBLIC_DCSCTP_OPTIONS_H_ # include<stddef . h> # include<stdint . h> # include \" absl / types / optional . h \" # include \" net / dcsctp / public / types . h \" namespace dcsctp { struct DcSctpOptions { size_t kMaxSafeMTUSize = 1 1 9 1 ; int local_port = 5 0 0 0 ; int remote_port = 5 0 0 0 ; uint16_t announced_maximum_incoming_streams = 6 5 5 3 5 ; uint16_t announced_maximum_outgoing_streams = 6 5 5 3 5 ; size_t mtu = kMaxSafeMTUSize ; size_t max_message_size = 2 5 6* 1 0 2 4 ; StreamPriority default_stream_priority =)",
    "insertText": "StreamPriority(256)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (size_t max_receiver_window_buffer_size = 5* 1 0 2 4* 1 0 2 4 ; size_t max_send_buffer_size = 2 ' 0 0 0 ' 0 0 0 ; size_t total_buffered_amount_low_threshold = 1 ' 8 0 0 ' 0 0 0 ; DurationMs rtt_max =)",
    "insertText": "DurationMs(60'000)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (DurationMs rto_initial =)",
    "insertText": "DurationMs(500)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (DurationMs rto_min =)",
    "insertText": "DurationMs(400)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (DurationMs t1_init_timeout =)",
    "insertText": "DurationMs(1000)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (absl::optional<DurationMs> max_timer_backoff_duration = absl::nullopt ; DurationMs heartbeat_interval =)",
    "insertText": "DurationMs(30000)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (DurationMs delayed_ack_max_timeout =)",
    "insertText": "DurationMs(200)"
  },
  {
    "label": "DurationMs()",
    "kind": "Method",
    "detail": "Function (DurationMs min_rtt_variance =)",
    "insertText": "DurationMs(220)"
  }
]