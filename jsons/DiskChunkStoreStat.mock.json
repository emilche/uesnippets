[
  {
    "label": "FMockDiskChunkStoreStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMockDiskChunkStoreStat"
  },
  {
    "label": "OnChunkStored()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Common / StatsCollector . h \" # include \" Installer / DiskChunkStore . h \" # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FMockDiskChunkStoreStat : public IDiskChunkStoreStat { public : typedef TTuple<double,FGuid,FString,EChunkSaveResult> FChunkStored ; typedef TTuple<double,FGuid> FBeforeChunkLoad ; typedef TTuple<double,FGuid,FString,EChunkLoadResult> FChunkLoaded ; typedef TTuple<double,int32> FCacheUseUpdated ; public : void)",
    "insertText": "OnChunkStored(const FGuid& ChunkId, const FString& ChunkFilename, EChunkSaveResult SaveResult)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (RxChunkStored .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkId, ChunkFilename, SaveResult)"
  },
  {
    "label": "OnBeforeChunkLoad()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnBeforeChunkLoad(const FGuid& ChunkId)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (RxBeforeChunkLoad .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkId)"
  },
  {
    "label": "OnChunkLoaded()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnChunkLoaded(const FGuid& ChunkId, const FString& ChunkFilename, EChunkLoadResult LoadResult)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (RxChunkLoaded .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkId, ChunkFilename, LoadResult)"
  },
  {
    "label": "OnCacheUseUpdated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCacheUseUpdated(int32 ChunkCount)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (RxCacheUseUpdated .)",
    "insertText": "Emplace(FStatsCollector::GetSeconds(), ChunkCount)"
  }
]