[
  {
    "label": "UAIAsyncTaskBlueprintProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIAsyncTaskBlueprintProxy"
  },
  {
    "label": "UAIHotSpotManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIHotSpotManager"
  },
  {
    "label": "UAIPerceptionSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIPerceptionSystem"
  },
  {
    "label": "UAISystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISystem"
  },
  {
    "label": "UBehaviorTreeManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeManager"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UBlackboardData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardData"
  },
  {
    "label": "UEnvQueryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryManager"
  },
  {
    "label": "UNavLocalGridManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavLocalGridManager"
  },
  {
    "label": "FBlackboardDataToComponentsIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlackboardDataToComponentsIterator"
  },
  {
    "label": "GET_AI_CONFIG_VAR()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPath . h \" # include \" Engine / World . h \" # include \" AI / AISystemBase . h \" # include \" Math / RandomStream . h \" # include \" AISystem . generated . h \" class UAIAsyncTaskBlueprintProxy ; class UAIHotSpotManager ; class UAIPerceptionSystem ; class UAISystem ; class UBehaviorTreeManager ; class UBlackboardComponent ; class UBlackboardData ; class UEnvQueryManager ; class UNavLocalGridManager ; # define)",
    "insertText": "GET_AI_CONFIG_VAR(a) (GetDefault<UAISystem>()->a) UCLASS(config=Engine, defaultconfig, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UPROPERTY(globalconfig, EditAnywhere, Category = \"AISystem\", meta = (MetaClass = \"/Script/AIModule.AIPerceptionSystem\", DisplayName = \"Perception System Class\"))"
  },
  {
    "label": "UAISystem()",
    "kind": "Method",
    "detail": "Function (typedef TMultiMap<TWeakObjectPtr<UBlackboardData>,TWeakObjectPtr<UBlackboardComponent>> FBlackboardDataToComponentsMap ; FBlackboardDataToComponentsMap BlackboardDataToComponentsMap ; FDelegateHandle ActorSpawnedDelegateHandle ; FDelegateHandle PawnBeginPlayDelegateHandle ; FRandomStream RandomStream ; public :)",
    "insertText": "UAISystem(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "InitializeActorsForPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeActorsForPlay(bool bTimeGotReset)"
  },
  {
    "label": "WorldOriginLocationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WorldOriginLocationChanged(FIntVector OldOriginLocation, FIntVector NewOriginLocation)"
  },
  {
    "label": "CleanupWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupWorld(bool bSessionEnded = true, bool bCleanupResources = true)"
  },
  {
    "label": "StartPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartPlay()"
  },
  {
    "label": "GetCurrent()",
    "kind": "Method",
    "detail": "Function (} UAISystem*)",
    "insertText": "GetCurrent(UWorld& World)"
  },
  {
    "label": "GetOuterWorld()",
    "kind": "Method",
    "detail": "Function (} UWorld*)",
    "insertText": "GetOuterWorld()"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (} UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "AddReferenceFromProxyObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferenceFromProxyObject(UAIAsyncTaskBlueprintProxy* BlueprintProxy)"
  },
  {
    "label": "AddUnique()",
    "kind": "Method",
    "detail": "Function (AllProxyObjects .)",
    "insertText": "AddUnique(BlueprintProxy)"
  },
  {
    "label": "RemoveReferenceToProxyObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveReferenceToProxyObject(UAIAsyncTaskBlueprintProxy* BlueprintProxy)"
  },
  {
    "label": "RemoveSwap()",
    "kind": "Method",
    "detail": "Function (AllProxyObjects .)",
    "insertText": "RemoveSwap(BlueprintProxy)"
  },
  {
    "label": "RunEQS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunEQS(const FString& QueryName, UObject* Target)"
  },
  {
    "label": "FBlackboardDataToComponentsIterator()",
    "kind": "Method",
    "detail": "Function (struct FBlackboardDataToComponentsIterator { public :)",
    "insertText": "FBlackboardDataToComponentsIterator(FBlackboardDataToComponentsMap& BlackboardDataToComponentsMap, class UBlackboardData* BlackboardAsset)"
  },
  {
    "label": "GetCurrentIteratorRef()",
    "kind": "Method",
    "detail": "Function (+ +)",
    "insertText": "GetCurrentIteratorRef()"
  },
  {
    "label": "TryMoveIteratorToParentBlackboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryMoveIteratorToParentBlackboard()"
  },
  {
    "label": "Tmp()",
    "kind": "Method",
    "detail": "Function (FBlackboardDataToComponentsIterator)",
    "insertText": "Tmp(*this)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator()"
  },
  {
    "label": "Key()",
    "kind": "Method",
    "detail": "Function (} UBlackboardData*)",
    "insertText": "Key()"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (} UBlackboardComponent*)",
    "insertText": "Value()"
  },
  {
    "label": "RegisterBlackboardComponent()",
    "kind": "Method",
    "detail": "Function (} } int32 CurrentIteratorIndex ; const int32 InlineSize = 8 ; TArray<TWeakObjectPtr<UBlackboardData>> IteratorKeysForReference ; TArray<FBlackboardDataToComponentsMap::TConstKeyIterator,TInlineAllocator<InlineSize>> Iterators ; } ; void)",
    "insertText": "RegisterBlackboardComponent(class UBlackboardData& BlackboardAsset, class UBlackboardComponent& BlackboardComp)"
  },
  {
    "label": "UnregisterBlackboardComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterBlackboardComponent(class UBlackboardData& BlackboardAsset, class UBlackboardComponent& BlackboardComp)"
  },
  {
    "label": "CreateBlackboardDataToComponentsIterator()",
    "kind": "Method",
    "detail": "Function (FBlackboardDataToComponentsIterator)",
    "insertText": "CreateBlackboardDataToComponentsIterator(class UBlackboardData& BlackboardAsset)"
  },
  {
    "label": "ConditionalLoadDebuggerPlugin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalLoadDebuggerPlugin()"
  },
  {
    "label": "GetRandomStream()",
    "kind": "Method",
    "detail": "Function (const FRandomStream&)",
    "insertText": "GetRandomStream()"
  },
  {
    "label": "OnActorSpawned()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "OnActorSpawned(AActor* SpawnedActor)"
  },
  {
    "label": "OnPawnBeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPawnBeginPlay(APawn* Pawn)"
  },
  {
    "label": "LoadDebuggerPlugin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDebuggerPlugin()"
  }
]