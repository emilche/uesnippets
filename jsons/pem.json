[
  {
    "label": "IMPLEMENT_PEM_read_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_PEM_H # define HEADER_PEM_H # include<openssl / e_os2 . h> # include<openssl / bio . h> # include<openssl / safestack . h> # include<openssl / evp . h> # include<openssl / x509 . h> # include<openssl / pemerr . h> # ifdef __cplusplus \" C \" { # endif # define PEM_BUFSIZE 1 0 2 4 # define PEM_STRING_X509_OLD \" X509 CERTIFICATE \" # define PEM_STRING_X509 \" CERTIFICATE \" # define PEM_STRING_X509_TRUSTED \" TRUSTED CERTIFICATE \" # define PEM_STRING_X509_REQ_OLD \" NEW CERTIFICATE REQUEST \" # define PEM_STRING_X509_REQ \" CERTIFICATE REQUEST \" # define PEM_STRING_X509_CRL \" X509 CRL \" # define PEM_STRING_EVP_PKEY \" ANY PRIVATE KEY \" # define PEM_STRING_PUBLIC \" PUBLIC KEY \" # define PEM_STRING_RSA \" RSA PRIVATE KEY \" # define PEM_STRING_RSA_PUBLIC \" RSA PUBLIC KEY \" # define PEM_STRING_DSA \" DSA PRIVATE KEY \" # define PEM_STRING_DSA_PUBLIC \" DSA PUBLIC KEY \" # define PEM_STRING_PKCS7 \" PKCS7 \" # define PEM_STRING_PKCS7_SIGNED \" PKCS # 7 SIGNED DATA \" # define PEM_STRING_PKCS8 \" ENCRYPTED PRIVATE KEY \" # define PEM_STRING_PKCS8INF \" PRIVATE KEY \" # define PEM_STRING_DHPARAMS \" DH PARAMETERS \" # define PEM_STRING_DHXPARAMS \" X9 . 4 2 DH PARAMETERS \" # define PEM_STRING_SSL_SESSION \" SSL SESSION PARAMETERS \" # define PEM_STRING_DSAPARAMS \" DSA PARAMETERS \" # define PEM_STRING_ECDSA_PUBLIC \" ECDSA PUBLIC KEY \" # define PEM_STRING_ECPARAMETERS \" EC PARAMETERS \" # define PEM_STRING_ECPRIVATEKEY \" EC PRIVATE KEY \" # define PEM_STRING_PARAMETERS \" PARAMETERS \" # define PEM_STRING_CMS \" CMS \" # define PEM_TYPE_ENCRYPTED 1 0 # define PEM_TYPE_MIC_ONLY 2 0 # define PEM_TYPE_MIC_CLEAR 3 0 # define PEM_TYPE_CLEAR 4 0 # ifdef OPENSSL_NO_STDIO # define)",
    "insertText": "IMPLEMENT_PEM_read_fp(name, type, str, asn1) # define IMPLEMENT_PEM_write_fp(name, type, str, asn1) # define IMPLEMENT_PEM_write_fp_const(name, type, str, asn1) # define IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1) # define IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1) # else # define IMPLEMENT_PEM_read_fp(name, type, str, asn1) \\ type *PEM_read_##name(FILE *fp, type **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_read()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_read((d2i_of_void *)d2i_##asn1, str,fp,(void **)x,cb,u)"
  },
  {
    "label": "IMPLEMENT_PEM_write_fp()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_fp(name, type, str, asn1) \\ int PEM_write_##name(FILE *fp, type *x)"
  },
  {
    "label": "PEM_ASN1_write()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,x,NULL,NULL,0,NULL,NULL)"
  },
  {
    "label": "IMPLEMENT_PEM_write_fp_const()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_fp_const(name, type, str, asn1) \\ int PEM_write_##name(FILE *fp, const type *x)"
  },
  {
    "label": "PEM_ASN1_write()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,(void *)x,NULL,NULL,0,NULL,NULL)"
  },
  {
    "label": "IMPLEMENT_PEM_write_cb_fp()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1) \\ int PEM_write_##name(FILE *fp, type *x, const EVP_CIPHER *enc, \\ unsigned char *kstr, int klen, pem_password_cb *cb, \\ void *u)"
  },
  {
    "label": "PEM_ASN1_write()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write((i2d_of_void *)i2d_##asn1,str,fp,x,enc,kstr,klen,cb,u)"
  },
  {
    "label": "IMPLEMENT_PEM_write_cb_fp_const()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1) \\ int PEM_write_##name(FILE *fp, type *x, const EVP_CIPHER *enc, \\ unsigned char *kstr, int klen, pem_password_cb *cb, \\ void *u)"
  },
  {
    "label": "IMPLEMENT_PEM_read_bio()",
    "kind": "Method",
    "detail": "Function (\\ } # endif # define)",
    "insertText": "IMPLEMENT_PEM_read_bio(name, type, str, asn1) \\ type *PEM_read_bio_##name(BIO *bp, type **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_read_bio()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_read_bio((d2i_of_void *)d2i_##asn1, str,bp,(void **)x,cb,u)"
  },
  {
    "label": "IMPLEMENT_PEM_write_bio()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_bio(name, type, str, asn1) \\ int PEM_write_bio_##name(BIO *bp, type *x)"
  },
  {
    "label": "PEM_ASN1_write_bio()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,x,NULL,NULL,0,NULL,NULL)"
  },
  {
    "label": "IMPLEMENT_PEM_write_bio_const()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_bio_const(name, type, str, asn1) \\ int PEM_write_bio_##name(BIO *bp, const type *x)"
  },
  {
    "label": "PEM_ASN1_write_bio()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,(void *)x,NULL,NULL,0,NULL,NULL)"
  },
  {
    "label": "IMPLEMENT_PEM_write_cb_bio()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_cb_bio(name, type, str, asn1) \\ int PEM_write_bio_##name(BIO *bp, type *x, const EVP_CIPHER *enc, \\ unsigned char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_write_bio()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,x,enc,kstr,klen,cb,u)"
  },
  {
    "label": "IMPLEMENT_PEM_write_cb_bio_const()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write_cb_bio_const(name, type, str, asn1) \\ int PEM_write_bio_##name(BIO *bp, type *x, const EVP_CIPHER *enc, \\ unsigned char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_write_bio()",
    "kind": "Method",
    "detail": "Function (\\ return)",
    "insertText": "PEM_ASN1_write_bio((i2d_of_void *)i2d_##asn1,str,bp,(void *)x,enc,kstr,klen,cb,u)"
  },
  {
    "label": "IMPLEMENT_PEM_write()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "IMPLEMENT_PEM_write(name, type, str, asn1) \\ IMPLEMENT_PEM_write_bio(name, type, str, asn1) \\ IMPLEMENT_PEM_write_fp(name, type, str, asn1) # define IMPLEMENT_PEM_write_const(name, type, str, asn1) \\ IMPLEMENT_PEM_write_bio_const(name, type, str, asn1) \\ IMPLEMENT_PEM_write_fp_const(name, type, str, asn1) # define IMPLEMENT_PEM_write_cb(name, type, str, asn1) \\ IMPLEMENT_PEM_write_cb_bio(name, type, str, asn1) \\ IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1) # define IMPLEMENT_PEM_write_cb_const(name, type, str, asn1) \\ IMPLEMENT_PEM_write_cb_bio_const(name, type, str, asn1) \\ IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1) # define IMPLEMENT_PEM_read(name, type, str, asn1) \\ IMPLEMENT_PEM_read_bio(name, type, str, asn1) \\ IMPLEMENT_PEM_read_fp(name, type, str, asn1) # define IMPLEMENT_PEM_rw(name, type, str, asn1) \\ IMPLEMENT_PEM_read(name, type, str, asn1) \\ IMPLEMENT_PEM_write(name, type, str, asn1) # define IMPLEMENT_PEM_rw_const(name, type, str, asn1) \\ IMPLEMENT_PEM_read(name, type, str, asn1) \\ IMPLEMENT_PEM_write_const(name, type, str, asn1) # define IMPLEMENT_PEM_rw_cb(name, type, str, asn1) \\ IMPLEMENT_PEM_read(name, type, str, asn1) \\ IMPLEMENT_PEM_write_cb(name, type, str, asn1) # if defined(OPENSSL_NO_STDIO) # define DECLARE_PEM_read_fp(name, type) # define DECLARE_PEM_write_fp(name, type) # define DECLARE_PEM_write_fp_const(name, type) # define DECLARE_PEM_write_cb_fp(name, type) # else # define DECLARE_PEM_read_fp(name, type) \\ type *PEM_read_##name(FILE *fp, type **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "DECLARE_PEM_write_fp()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write_fp(name, type) \\ int PEM_write_##name(FILE *fp, type *x)"
  },
  {
    "label": "DECLARE_PEM_write_fp_const()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write_fp_const(name, type) \\ int PEM_write_##name(FILE *fp, const type *x)"
  },
  {
    "label": "DECLARE_PEM_write_cb_fp()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write_cb_fp(name, type) \\ int PEM_write_##name(FILE *fp, type *x, const EVP_CIPHER *enc, \\ unsigned char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "DECLARE_PEM_read_bio()",
    "kind": "Method",
    "detail": "Function (# endif # define)",
    "insertText": "DECLARE_PEM_read_bio(name, type) \\ type *PEM_read_bio_##name(BIO *bp, type **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "DECLARE_PEM_write_bio()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write_bio(name, type) \\ int PEM_write_bio_##name(BIO *bp, type *x)"
  },
  {
    "label": "DECLARE_PEM_write_bio_const()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write_bio_const(name, type) \\ int PEM_write_bio_##name(BIO *bp, const type *x)"
  },
  {
    "label": "DECLARE_PEM_write_cb_bio()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write_cb_bio(name, type) \\ int PEM_write_bio_##name(BIO *bp, type *x, const EVP_CIPHER *enc, \\ unsigned char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "DECLARE_PEM_write()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_PEM_write(name, type) \\ DECLARE_PEM_write_bio(name, type) \\ DECLARE_PEM_write_fp(name, type) # define DECLARE_PEM_write_const(name, type) \\ DECLARE_PEM_write_bio_const(name, type) \\ DECLARE_PEM_write_fp_const(name, type) # define DECLARE_PEM_write_cb(name, type) \\ DECLARE_PEM_write_cb_bio(name, type) \\ DECLARE_PEM_write_cb_fp(name, type) # define DECLARE_PEM_read(name, type) \\ DECLARE_PEM_read_bio(name, type) \\ DECLARE_PEM_read_fp(name, type) # define DECLARE_PEM_rw(name, type) \\ DECLARE_PEM_read(name, type) \\ DECLARE_PEM_write(name, type) # define DECLARE_PEM_rw_const(name, type) \\ DECLARE_PEM_read(name, type) \\ DECLARE_PEM_write_const(name, type) # define DECLARE_PEM_rw_cb(name, type) \\ DECLARE_PEM_read(name, type) \\ DECLARE_PEM_write_cb(name, type) typedef int pem_password_cb (char *buf, int size, int rwflag, void *userdata)"
  },
  {
    "label": "PEM_get_EVP_CIPHER_INFO()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_get_EVP_CIPHER_INFO(char *header, EVP_CIPHER_INFO *cipher)"
  },
  {
    "label": "PEM_do_header()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_do_header(EVP_CIPHER_INFO *cipher, unsigned char *data, long *len, pem_password_cb *callback, void *u)"
  },
  {
    "label": "PEM_read_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_read_bio(BIO *bp, char **name, char **header, unsigned char **data, long *len)"
  },
  {
    "label": "PEM_read_bio_ex()",
    "kind": "Method",
    "detail": "Function (# define PEM_FLAG_SECURE 0 x1 # define PEM_FLAG_EAY_COMPATIBLE 0 x2 # define PEM_FLAG_ONLY_B64 0 x4 int)",
    "insertText": "PEM_read_bio_ex(BIO *bp, char **name, char **header, unsigned char **data, long *len, unsigned int flags)"
  },
  {
    "label": "PEM_bytes_read_bio_secmem()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_bytes_read_bio_secmem(unsigned char **pdata, long *plen, char **pnm, const char *name, BIO *bp, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_write_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_bio(BIO *bp, const char *name, const char *hdr, const unsigned char *data, long len)"
  },
  {
    "label": "PEM_bytes_read_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_bytes_read_bio(unsigned char **pdata, long *plen, char **pnm, const char *name, BIO *bp, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_read_bio()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "PEM_ASN1_read_bio(d2i_of_void *d2i, const char *name, BIO *bp, void **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_write_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_ASN1_write_bio(i2d_of_void *i2d, const char *name, BIO *bp, void *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STACK_OF(X509_INFO) *PEM_X509_INFO_read_bio(BIO *bp, STACK_OF(X509_INFO) *sk, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_X509_INFO_write_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_X509_INFO_write_bio(BIO *bp, X509_INFO *xi, EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cd, void *u)"
  },
  {
    "label": "PEM_read()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO int)",
    "insertText": "PEM_read(FILE *fp, char **name, char **header, unsigned char **data, long *len)"
  },
  {
    "label": "PEM_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write(FILE *fp, const char *name, const char *hdr, const unsigned char *data, long len)"
  },
  {
    "label": "PEM_ASN1_read()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "PEM_ASN1_read(d2i_of_void *d2i, const char *name, FILE *fp, void **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_ASN1_write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_ASN1_write(i2d_of_void *i2d, const char *name, FILE *fp, void *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *callback, void *u)"
  },
  {
    "label": "STACK_OF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "STACK_OF(X509_INFO) *PEM_X509_INFO_read(FILE *fp, STACK_OF(X509_INFO) *sk, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_SignInit()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "PEM_SignInit(EVP_MD_CTX *ctx, EVP_MD *type)"
  },
  {
    "label": "PEM_SignUpdate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_SignUpdate(EVP_MD_CTX *ctx, unsigned char *d, unsigned int cnt)"
  },
  {
    "label": "PEM_SignFinal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_SignFinal(EVP_MD_CTX *ctx, unsigned char *sigret, unsigned int *siglen, EVP_PKEY *pkey)"
  },
  {
    "label": "PEM_def_callback()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_def_callback(char *buf, int num, int rwflag, void *userdata)"
  },
  {
    "label": "PEM_proc_type()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PEM_proc_type(char *buf, int type)"
  },
  {
    "label": "PEM_dek_info()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PEM_dek_info(char *buf, const char *type, int len, char *str)"
  },
  {
    "label": "DECLARE_PEM_rw()",
    "kind": "Method",
    "detail": "Function (# include<openssl / symhacks . h>)",
    "insertText": "DECLARE_PEM_rw(X509, X509) DECLARE_PEM_rw(X509_AUX, X509) DECLARE_PEM_rw(X509_REQ, X509_REQ) DECLARE_PEM_write(X509_REQ_NEW, X509_REQ) DECLARE_PEM_rw(X509_CRL, X509_CRL) DECLARE_PEM_rw(PKCS7, PKCS7) DECLARE_PEM_rw(NETSCAPE_CERT_SEQUENCE, NETSCAPE_CERT_SEQUENCE) DECLARE_PEM_rw(PKCS8, X509_SIG) DECLARE_PEM_rw(PKCS8_PRIV_KEY_INFO, PKCS8_PRIV_KEY_INFO) # ifndef OPENSSL_NO_RSA DECLARE_PEM_rw_cb(RSAPrivateKey, RSA) DECLARE_PEM_rw_const(RSAPublicKey, RSA) DECLARE_PEM_rw(RSA_PUBKEY, RSA) # endif # ifndef OPENSSL_NO_DSA DECLARE_PEM_rw_cb(DSAPrivateKey, DSA) DECLARE_PEM_rw(DSA_PUBKEY, DSA) DECLARE_PEM_rw_const(DSAparams, DSA) # endif # ifndef OPENSSL_NO_EC DECLARE_PEM_rw_const(ECPKParameters, EC_GROUP) DECLARE_PEM_rw_cb(ECPrivateKey, EC_KEY) DECLARE_PEM_rw(EC_PUBKEY, EC_KEY) # endif # ifndef OPENSSL_NO_DH DECLARE_PEM_rw_const(DHparams, DH) DECLARE_PEM_write_const(DHxparams, DH) # endif DECLARE_PEM_rw_cb(PrivateKey, EVP_PKEY) DECLARE_PEM_rw(PUBKEY, EVP_PKEY) int PEM_write_bio_PrivateKey_traditional(BIO *bp, EVP_PKEY *x, const EVP_CIPHER *enc, unsigned char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_write_bio_PKCS8PrivateKey_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_bio_PKCS8PrivateKey_nid(BIO *bp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_write_bio_PKCS8PrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_bio_PKCS8PrivateKey(BIO *, EVP_PKEY *, const EVP_CIPHER *, char *, int, pem_password_cb *, void *)"
  },
  {
    "label": "i2d_PKCS8PrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8PrivateKey_bio(BIO *bp, EVP_PKEY *x, const EVP_CIPHER *enc, char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "i2d_PKCS8PrivateKey_nid_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8PrivateKey_nid_bio(BIO *bp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "d2i_PKCS8PrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "d2i_PKCS8PrivateKey_bio(BIO *bp, EVP_PKEY **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "i2d_PKCS8PrivateKey_fp()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_STDIO int)",
    "insertText": "i2d_PKCS8PrivateKey_fp(FILE *fp, EVP_PKEY *x, const EVP_CIPHER *enc, char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "i2d_PKCS8PrivateKey_nid_fp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2d_PKCS8PrivateKey_nid_fp(FILE *fp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_write_PKCS8PrivateKey_nid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_PKCS8PrivateKey_nid(FILE *fp, EVP_PKEY *x, int nid, char *kstr, int klen, pem_password_cb *cb, void *u)"
  },
  {
    "label": "d2i_PKCS8PrivateKey_fp()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "d2i_PKCS8PrivateKey_fp(FILE *fp, EVP_PKEY **x, pem_password_cb *cb, void *u)"
  },
  {
    "label": "PEM_write_PKCS8PrivateKey()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_PKCS8PrivateKey(FILE *fp, EVP_PKEY *x, const EVP_CIPHER *enc, char *kstr, int klen, pem_password_cb *cd, void *u)"
  },
  {
    "label": "PEM_read_bio_Parameters()",
    "kind": "Method",
    "detail": "Function (# endif EVP_PKEY*)",
    "insertText": "PEM_read_bio_Parameters(BIO *bp, EVP_PKEY **x)"
  },
  {
    "label": "PEM_write_bio_Parameters()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PEM_write_bio_Parameters(BIO *bp, EVP_PKEY *x)"
  },
  {
    "label": "b2i_PrivateKey()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_DSA EVP_PKEY*)",
    "insertText": "b2i_PrivateKey(const unsigned char **in, long length)"
  },
  {
    "label": "b2i_PublicKey()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "b2i_PublicKey(const unsigned char **in, long length)"
  },
  {
    "label": "b2i_PrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "b2i_PrivateKey_bio(BIO *in)"
  },
  {
    "label": "b2i_PublicKey_bio()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "b2i_PublicKey_bio(BIO *in)"
  },
  {
    "label": "i2b_PrivateKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2b_PrivateKey_bio(BIO *out, EVP_PKEY *pk)"
  },
  {
    "label": "i2b_PublicKey_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2b_PublicKey_bio(BIO *out, EVP_PKEY *pk)"
  },
  {
    "label": "b2i_PVK_bio()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSSL_NO_RC4 EVP_PKEY*)",
    "insertText": "b2i_PVK_bio(BIO *in, pem_password_cb *cb, void *u)"
  },
  {
    "label": "i2b_PVK_bio()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "i2b_PVK_bio(BIO *out, EVP_PKEY *pk, int enclevel, pem_password_cb *cb, void *u)"
  }
]