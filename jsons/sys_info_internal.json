[
  {
    "label": "LazySysInfoValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazySysInfoValue"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_SYSTEM_SYS_INFO_INTERNAL_H_ # define BASE_SYSTEM_SYS_INFO_INTERNAL_H_ # include \" base / base_export . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { namespace internal { template<T,)",
    "insertText": "T(*F)(void)"
  },
  {
    "label": "LazySysInfoValue()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "LazySysInfoValue() : value_(F())"
  },
  {
    "label": "LazySysInfoValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "LazySysInfoValue(const LazySysInfoValue&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (LazySysInfoValue&)",
    "insertText": "operator(const LazySysInfoValue&)"
  },
  {
    "label": "LazySysInfoValue()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "LazySysInfoValue()"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "value()"
  },
  {
    "label": "NumberOfProcessors()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT int)",
    "insertText": "NumberOfProcessors()"
  }
]