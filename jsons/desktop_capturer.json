[
  {
    "label": "DesktopCaptureOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopCaptureOptions"
  },
  {
    "label": "DesktopFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopFrame"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Callback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Callback"
  },
  {
    "label": "Source",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Source"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "static_assert(std::is_same<SourceId, ScreenId>::value,\n                \"SourceId should be a same type as ScreenId.\")"
  },
  {
    "label": "SetSharedMemoryFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSharedMemoryFactory(\n      std::unique_ptr<SharedMemoryFactory> shared_memory_factory)"
  },
  {
    "label": "SetExcludedWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExcludedWindow(WindowId window)"
  },
  {
    "label": "GetSourceList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSourceList(SourceList* sources)"
  },
  {
    "label": "SelectSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectSource(SourceId id)"
  },
  {
    "label": "FocusOnSelectedSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FocusOnSelectedSource()"
  },
  {
    "label": "IsOccluded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOccluded(const DesktopVector& pos)"
  },
  {
    "label": "CreateWindowCapturer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopCapturer>)",
    "insertText": "CreateWindowCapturer(\n      const DesktopCaptureOptions& options)"
  },
  {
    "label": "CreateScreenCapturer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopCapturer>)",
    "insertText": "CreateScreenCapturer(\n      const DesktopCaptureOptions& options)"
  },
  {
    "label": "IsRunningUnderWayland()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunningUnderWayland()"
  },
  {
    "label": "CreateRawWindowCapturer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopCapturer>)",
    "insertText": "CreateRawWindowCapturer(\n      const DesktopCaptureOptions& options)"
  },
  {
    "label": "CreateRawScreenCapturer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopCapturer>)",
    "insertText": "CreateRawScreenCapturer(\n      const DesktopCaptureOptions& options)"
  }
]