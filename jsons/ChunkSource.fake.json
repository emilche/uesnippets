[
  {
    "label": "FFakeChunkSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFakeChunkSource"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_DEV_AUTOMATION_TESTS # include \" Containers / Map . h \" # include \" Data / ChunkData . h \" # include \" Installer / ChunkSource . h \" namespace BuildPatchServices { class FFakeChunkSource : public IChunkSource { public : IChunkDataAccess*)",
    "insertText": "Get(const FGuid& DataId)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IChunkDataAccess>* FindResult = ChunkDatas .)",
    "insertText": "Find(DataId)"
  },
  {
    "label": "AddRuntimeRequirements()",
    "kind": "Method",
    "detail": "Function (} TSet<FGuid>)",
    "insertText": "AddRuntimeRequirements(TSet<FGuid> NewRequirements)"
  },
  {
    "label": "AddRepeatRequirement()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AddRepeatRequirement(const FGuid& RepeatRequirement)"
  }
]