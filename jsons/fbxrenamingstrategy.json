[
  {
    "label": "FbxScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxScene"
  },
  {
    "label": "FbxNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNode"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "deriving",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "deriving"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "NameCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NameCell"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDirection"
  },
  {
    "label": "EDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDirection"
  },
  {
    "label": "EClashType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EClashType"
  },
  {
    "label": "EClashType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EClashType"
  },
  {
    "label": "NameCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NameCell"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "ERenamingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERenamingMode"
  },
  {
    "label": "ERenamingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERenamingMode"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Rename(FbxNameHandler& pName)"
  },
  {
    "label": "SetClashSolverType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClashSolverType(EClashType pType)"
  },
  {
    "label": "RenameUnparentNameSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameUnparentNameSpace(FbxNode* pNode, bool pIsRoot = false)"
  },
  {
    "label": "RemoveImportNameSpaceClash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveImportNameSpaceClash(FbxNode* pNode)"
  },
  {
    "label": "GetParentsNameSpaceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParentsNameSpaceList(FbxNode* pNode, FbxArray<FbxString*> &pNameSpaceList)"
  },
  {
    "label": "PropagateNameSpaceChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PropagateNameSpaceChange(FbxNode* pNode, FbxString OldNS, FbxString NewNS)"
  },
  {
    "label": "RenameToFBX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameToFBX(FbxNameHandler& pName)"
  },
  {
    "label": "RenameFromFBX()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameFromFBX(FbxNameHandler& pName)"
  },
  {
    "label": "lSceneRenamer()",
    "kind": "Method",
    "detail": "Function (FbxSceneRenamer)",
    "insertText": "lSceneRenamer(pScene)"
  },
  {
    "label": "RenameFor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameFor(ERenamingMode pMode)"
  },
  {
    "label": "ResolveNameClashing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveNameClashing(bool pFromFbx, bool pIgnoreNS, bool pIsCaseSensitive,\n                             bool pReplaceNonAlphaNum, bool pFirstNotNum,\n                             FbxString pInNameSpaceSymbol, FbxString pOutNameSpaceSymbol,\n                             bool pNoUnparentNS/*for MB < 7.5*/, bool pRemoveNameSpaceClash)"
  }
]