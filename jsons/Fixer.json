[
  {
    "label": "COREUOBJECT_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "COREUOBJECT_API"
  },
  {
    "label": "IFixer()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Logging / TokenizedMessage . h \" # include \" Templates / SharedPointer . h \" namespace UE::DataValidation { struct IFixer : TSharedFromThis<IFixer> { ~)",
    "insertText": "IFixer()"
  },
  {
    "label": "GetApplicability()",
    "kind": "Method",
    "detail": "Function (EFixApplicability)",
    "insertText": "GetApplicability(int32 FixIndex)"
  },
  {
    "label": "ApplyFix()",
    "kind": "Method",
    "detail": "Function (FFixResult)",
    "insertText": "ApplyFix(int32 FixIndex)"
  },
  {
    "label": "WrappedIn()",
    "kind": "Method",
    "detail": "Function (template<FixerType,. . . ArgTypes> TSharedRef<FixerType>)",
    "insertText": "WrappedIn(ArgTypes&&... Args)"
  },
  {
    "label": "CreateToken()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FFixToken>)",
    "insertText": "CreateToken(const FText& Label)"
  }
]