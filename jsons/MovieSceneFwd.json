[
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "ISequenceDataEventHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequenceDataEventHandler"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMovieScene, Log, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMovieSceneECS, Log, All)"
  },
  {
    "label": "GetLegacyConversionFrameRate()",
    "kind": "Method",
    "detail": "Function (FFrameRate)",
    "insertText": "GetLegacyConversionFrameRate()"
  },
  {
    "label": "EmitLegacyOutOfBoundsError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLegacyOutOfBoundsError(UObject* ErrorContext, FFrameRate InFrameRate, double InTime)"
  },
  {
    "label": "UpgradeLegacyMovieSceneTime()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "UpgradeLegacyMovieSceneTime(UObject* ErrorContext, FFrameRate InFrameRate, double InTime)"
  }
]