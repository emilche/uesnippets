[
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "ISequenceDataEventHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequenceDataEventHandler"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Stats / Stats2 . h \" # include \" Misc / EnumClassFlags . h \" # include \" HAL / PreprocessorHelpers . h \" # include \" MovieSceneFwd . generated . h \" # ifndef UE_MOVIESCENE_EVENTS # define UE_MOVIESCENE_EVENTS WITH_EDITOR # endif # ifndef UE_MOVIESCENE_EXPENSIVE_CONSISTENCY_CHECKS # define UE_MOVIESCENE_EXPENSIVE_CONSISTENCY_CHECKS 0 # endif # ifndef UE_MOVIESCENE_ENTITY_DEBUG # define UE_MOVIESCENE_ENTITY_DEBUG ! UE_BUILD_SHIPPING # endif # ifndef MOVIESCENE_DETAILED_STATS # define MOVIESCENE_DETAILED_STATS 0 # endif struct FFrameRate ; struct FFrameNumber ; class UObject ; namespace UE::MovieScene { class ISequenceDataEventHandler ; })",
    "insertText": "UENUM()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Stopped,Playing,Scrubbing,Jumping,Stepping,Paused,MAX } ; })",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (Tick,Platform,Audio,RelativeTimecode,Timecode,PlayEveryFrame,Custom,} ;)",
    "insertText": "UENUM(Flags)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None = 0)",
    "insertText": "UMETA(Hidden), Volatile = 1 << 0, BlockingEvaluation = 1 << 1, DynamicWeighting = 1 << 2, InheritedFlags = Volatile UMETA(Hidden)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EMovieSceneSequenceFlags)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM(Flags, meta=(Bitflags, UseEnumValuesAsMaskValuesInEditor = \"true\"))"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (None = 0)",
    "insertText": "UMETA(Hidden), Server = 1 << 0, Client = 1 << 1, All = Server | Client UMETA(Hidden)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EMovieSceneServerClientMask) MOVIESCENE_API DECLARE_LOG_CATEGORY_EXTERN(LogMovieScene, Log, All)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMovieSceneECS, Log, All)"
  },
  {
    "label": "DECLARE_STATS_GROUP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_STATS_GROUP(TEXT(\"Movie Scene Evaluation\"), STATGROUP_MovieSceneEval, STATCAT_Advanced)"
  },
  {
    "label": "GetLegacyConversionFrameRate()",
    "kind": "Method",
    "detail": "Function (FFrameRate)",
    "insertText": "GetLegacyConversionFrameRate()"
  },
  {
    "label": "EmitLegacyOutOfBoundsError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLegacyOutOfBoundsError(UObject* ErrorContext, FFrameRate InFrameRate, double InTime)"
  },
  {
    "label": "UpgradeLegacyMovieSceneTime()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "UpgradeLegacyMovieSceneTime(UObject* ErrorContext, FFrameRate InFrameRate, double InTime)"
  }
]