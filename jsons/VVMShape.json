[
  {
    "label": "FVerseVMEngineEnvironment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVerseVMEngineEnvironment"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FAccessContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAccessContext"
  },
  {
    "label": "VUniqueString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VUniqueString"
  },
  {
    "label": "VEmergentType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VEmergentType"
  },
  {
    "label": "TGlobalTrivialEmergentTypePtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TGlobalTrivialEmergentTypePtr"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "VShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VShape"
  },
  {
    "label": "VEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VEntry"
  },
  {
    "label": "FFieldsMapKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFieldsMapKeyFuncs"
  },
  {
    "label": "VClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VClass"
  },
  {
    "label": "VObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VObject"
  },
  {
    "label": "VValueObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VValueObject"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (class FProperty ; namespace Verse { struct FAccessContext ; struct VUniqueString ; struct VEmergentType ; template<Verse::VCppClassInfo* ClassInfo> struct TGlobalTrivialEmergentTypePtr ; enum class EFieldType : int8 { Offset,FProperty,FPropertyVar,FVerseProperty,Constant,} ; struct VShape : VCell { struct VEntry { union { uint64 Index ; FProperty* UProperty ; TWriteBarrier<VValue> Value ; } ; EFieldType Type ;)",
    "insertText": "VEntry(const VEntry& Other)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VEntry(VEntry&& Other) : VEntry(Other)"
  },
  {
    "label": "Offset()",
    "kind": "Method",
    "detail": "Function (} VEntry)",
    "insertText": "Offset()"
  },
  {
    "label": "IsProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProperty()"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VEntry(FProperty* InProperty, EFieldType InType)"
  },
  {
    "label": "VEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VEntry(FAccessContext Context, VValue InConstant)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (} ; struct FFieldsMapKeyFuncs : TDefaultMapKeyFuncs<TWriteBarrier<VUniqueString>,VEntry,false> { bool)",
    "insertText": "Matches(KeyInitType A, KeyInitType B)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(KeyInitType A, const VUniqueString& B)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKeyHash(KeyInitType Key)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKeyHash(const VUniqueString& Key)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (} ; using FieldsMap = TMap<TWriteBarrier<VUniqueString>,VEntry,FDefaultSetAllocator,FFieldsMapKeyFuncs> ;)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VCell)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; VShape*)",
    "insertText": "New(FAllocationContext Context, FieldsMap&& InFields)"
  },
  {
    "label": "GetField()",
    "kind": "Method",
    "detail": "Function (const VEntry*)",
    "insertText": "GetField(const VUniqueString& Name)"
  },
  {
    "label": "GetNumFields()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetNumFields()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const VShape& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const VShape& Shape)"
  },
  {
    "label": "CopyToMeltedShape()",
    "kind": "Method",
    "detail": "Function (VShape&)",
    "insertText": "CopyToMeltedShape(FAllocationContext)"
  },
  {
    "label": "CreateFieldsIterator()",
    "kind": "Method",
    "detail": "Function (FieldsMap::TIterator)",
    "insertText": "CreateFieldsIterator()"
  },
  {
    "label": "VShape()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "VShape(FAllocationContext Context, FieldsMap&& InFields)"
  }
]