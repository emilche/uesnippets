[
  {
    "label": "FGenericPlatformNamedPipe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericPlatformNamedPipe"
  },
  {
    "label": "FGenericPlatformNamedPipe()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainersFwd . h \" # include \" CoreTypes . h \" # if PLATFORM_SUPPORTS_NAMED_PIPES class FGenericPlatformNamedPipe { public :)",
    "insertText": "FGenericPlatformNamedPipe()"
  },
  {
    "label": "FGenericPlatformNamedPipe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGenericPlatformNamedPipe(const FGenericPlatformNamedPipe&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGenericPlatformNamedPipe&)",
    "insertText": "operator(const FGenericPlatformNamedPipe&)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Create(const FString& PipeName, bool bServer, bool bAsync)"
  },
  {
    "label": "ReadBytes()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ReadBytes(int32 NumBytes, void* OutData)"
  },
  {
    "label": "IsCreated()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCreated()"
  }
]