[
  {
    "label": "Clock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Clock"
  },
  {
    "label": "FlexfecReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FlexfecReceiver"
  },
  {
    "label": "FlexfecReceiver()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_INCLUDE_FLEXFEC_RECEIVER_H_ # define MODULES_RTP_RTCP_INCLUDE_FLEXFEC_RECEIVER_H_ # include<stdint . h> # include<memory> # include \" api / sequence_checker . h \" # include \" modules / rtp_rtcp / include / rtp_rtcp_defines . h \" # include \" modules / rtp_rtcp / source / forward_error_correction . h \" # include \" modules / rtp_rtcp / source / rtp_packet_received . h \" # include \" modules / rtp_rtcp / source / ulpfec_receiver . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { class Clock ; class FlexfecReceiver { public :)",
    "insertText": "FlexfecReceiver(uint32_t ssrc, uint32_t protected_media_ssrc, RecoveredPacketReceiver* recovered_packet_receiver)"
  },
  {
    "label": "FlexfecReceiver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlexfecReceiver(Clock* clock, uint32_t ssrc, uint32_t protected_media_ssrc, RecoveredPacketReceiver* recovered_packet_receiver)"
  },
  {
    "label": "FlexfecReceiver()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FlexfecReceiver()"
  },
  {
    "label": "OnRtpPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRtpPacket(const RtpPacketReceived& packet)"
  },
  {
    "label": "GetPacketCounter()",
    "kind": "Method",
    "detail": "Function (FecPacketCounter)",
    "insertText": "GetPacketCounter()"
  },
  {
    "label": "AddReceivedPacket()",
    "kind": "Method",
    "detail": "Function (protected : std::unique_ptr<ForwardErrorCorrection::ReceivedPacket>)",
    "insertText": "AddReceivedPacket(const RtpPacketReceived& packet)"
  },
  {
    "label": "ProcessReceivedPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessReceivedPacket(const ForwardErrorCorrection::ReceivedPacket& received_packet)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : const uint32_t ssrc_ ; const uint32_t protected_media_ssrc_ ; std::unique_ptr<ForwardErrorCorrection> erasure_code_)",
    "insertText": "RTC_GUARDED_BY(sequence_checker_)"
  }
]