[
  {
    "label": "check_range()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_INV_TXFM_H_ # define VPX_VPX_DSP_INV_TXFM_H_ # include<assert . h> # include \" . / vpx_config . h \" # include \" vpx_dsp / txfm_common . h \" # include \" vpx_ports / mem . h \" # ifdef __cplusplus \" C \" { # endif tran_high_t)",
    "insertText": "check_range(tran_high_t input)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_COEFFICIENT_RANGE_CHECKING)",
    "insertText": "assert(INT16_MIN <= input)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(input <= INT16_MAX)"
  },
  {
    "label": "dct_const_round_shift()",
    "kind": "Method",
    "detail": "Function (# endif return input ; } tran_high_t)",
    "insertText": "dct_const_round_shift(tran_high_t input)"
  },
  {
    "label": "ROUND_POWER_OF_TWO()",
    "kind": "Method",
    "detail": "Function (tran_high_t rv =)",
    "insertText": "ROUND_POWER_OF_TWO(input, DCT_CONST_BITS)"
  },
  {
    "label": "highbd_check_range()",
    "kind": "Method",
    "detail": "Function (} # if CONFIG_VP9_HIGHBITDEPTH tran_high_t)",
    "insertText": "highbd_check_range(tran_high_t input, int bd)"
  },
  {
    "label": "int_max()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_COEFFICIENT_RANGE_CHECKING const int32_t)",
    "insertText": "int_max(1 << (7 + bd))"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (const int32_t int_min = - int_max - 1 ;)",
    "insertText": "assert(int_min <= input)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(input <= int_max)"
  },
  {
    "label": "endif()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "endif(void)"
  },
  {
    "label": "idct8_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct8_c(const tran_low_t *input, tran_low_t *output)"
  },
  {
    "label": "idct16_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct16_c(const tran_low_t *input, tran_low_t *output)"
  },
  {
    "label": "idct32_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "idct32_c(const tran_low_t *input, tran_low_t *output)"
  },
  {
    "label": "iadst4_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst4_c(const tran_low_t *input, tran_low_t *output)"
  },
  {
    "label": "iadst8_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst8_c(const tran_low_t *input, tran_low_t *output)"
  },
  {
    "label": "iadst16_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iadst16_c(const tran_low_t *input, tran_low_t *output)"
  },
  {
    "label": "vpx_highbd_idct4_c()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_VP9_HIGHBITDEPTH void)",
    "insertText": "vpx_highbd_idct4_c(const tran_low_t *input, tran_low_t *output, int bd)"
  },
  {
    "label": "vpx_highbd_idct8_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_highbd_idct8_c(const tran_low_t *input, tran_low_t *output, int bd)"
  },
  {
    "label": "vpx_highbd_idct16_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_highbd_idct16_c(const tran_low_t *input, tran_low_t *output, int bd)"
  },
  {
    "label": "vpx_highbd_iadst4_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_highbd_iadst4_c(const tran_low_t *input, tran_low_t *output, int bd)"
  },
  {
    "label": "vpx_highbd_iadst8_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_highbd_iadst8_c(const tran_low_t *input, tran_low_t *output, int bd)"
  },
  {
    "label": "vpx_highbd_iadst16_c()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_highbd_iadst16_c(const tran_low_t *input, tran_low_t *output, int bd)"
  },
  {
    "label": "highbd_clip_pixel_add()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "highbd_clip_pixel_add(uint16_t dest, tran_high_t trans, int bd)"
  },
  {
    "label": "HIGHBD_WRAPLOW()",
    "kind": "Method",
    "detail": "Function (trans =)",
    "insertText": "HIGHBD_WRAPLOW(trans, bd)"
  },
  {
    "label": "clip_pixel_add()",
    "kind": "Method",
    "detail": "Function (} # endif uint8_t)",
    "insertText": "clip_pixel_add(uint8_t dest, tran_high_t trans)"
  },
  {
    "label": "WRAPLOW()",
    "kind": "Method",
    "detail": "Function (trans =)",
    "insertText": "WRAPLOW(trans)"
  }
]