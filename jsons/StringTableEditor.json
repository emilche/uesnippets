[
  {
    "label": "FStringTableEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringTableEditor"
  },
  {
    "label": "SStringTableEntryRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SStringTableEntryRow"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FCachedStringTableEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedStringTableEntry"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Toolkits / IToolkitHost . h \" # include \" IStringTableEditor . h \" # include \" EditorUndoClient . h \" # include \" Widgets / Input / SEditableTextBox . h \" # include \" Widgets / Input / SMultiLineEditableTextBox . h \" # include \" Widgets / Views / SListView . h \" # include \" Misc / TextFilter . h \" class FStringTableEditor : public IStringTableEditor,public FEditorUndoClient { class SStringTableEntryRow ; public : void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitStringTableEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitStringTableEditor(const EToolkitMode::Type Mode, const TSharedPtr<class IToolkitHost>& InitToolkitHost, UStringTable* StringTable)"
  },
  {
    "label": "FStringTableEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStringTableEditor()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "RefreshStringTableEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshStringTableEditor(const FString& NewSelection = FString())"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "HandleUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUndoRedo()"
  },
  {
    "label": "GetStringTable()",
    "kind": "Method",
    "detail": "Function (const UStringTable*)",
    "insertText": "GetStringTable()"
  },
  {
    "label": "HandlePostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePostChange(const FString& NewSelection = FString())"
  },
  {
    "label": "FCachedStringTableEntry()",
    "kind": "Method",
    "detail": "Function (private : struct FCachedStringTableEntry {)",
    "insertText": "FCachedStringTableEntry(FString InKey, FString InSourceString) : Key(MoveTemp(InKey)) , SourceString(MoveTemp(InSourceString))"
  },
  {
    "label": "SpawnTab_StringTable()",
    "kind": "Method",
    "detail": "Function (} FString Key ; FString SourceString ; } ; TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_StringTable(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnGenerateStringTableEntryRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateStringTableEntryRow(TSharedPtr<FCachedStringTableEntry> CachedStringTableEntry, const TSharedRef<STableViewBase>& Table)"
  },
  {
    "label": "RefreshCachedStringTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCachedStringTable(const FString& InCachedSelection = FString())"
  },
  {
    "label": "GetNamespace()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNamespace()"
  },
  {
    "label": "OnNamespaceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceChanged(const FText& InText)"
  },
  {
    "label": "OnNamespaceCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceCommitted(const FText& InText, ETextCommit::Type)"
  },
  {
    "label": "SetEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEntry(const FString& InKey, const FString& InSourceString)"
  },
  {
    "label": "DeleteEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteEntry(const FString& InKey)"
  },
  {
    "label": "IsValidIdentity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidIdentity(const FText& InIdentity, FText* OutReason = nullptr, const FText* InErrorCtx = nullptr)"
  },
  {
    "label": "OnKeyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeyChanged(const FText& InText)"
  },
  {
    "label": "OnSourceStringCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSourceStringCommitted(const FText& InText, ETextCommit::Type)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InNewText)"
  },
  {
    "label": "CanExecuteDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteDelete()"
  },
  {
    "label": "ExecuteDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteDelete()"
  },
  {
    "label": "OnConstructContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnConstructContextMenu()"
  },
  {
    "label": "OnAddClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAddClicked()"
  },
  {
    "label": "OnImportFromCSVClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnImportFromCSVClicked()"
  },
  {
    "label": "OnExportToCSVClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnExportToCSVClicked()"
  }
]