[
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "FEncryptionKeyManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / Mutex . h \" # include \" Async / UniqueLock . h \" # include \" Containers / Map . h \" # include \" Delegates / Delegate . h \" # include \" Misc / AES . h \" # include \" Misc / Guid . h \" namespace UE { class FEncryptionKeyManager { public :)",
    "insertText": "FEncryptionKeyManager(const FEncryptionKeyManager&)"
  },
  {
    "label": "FEncryptionKeyManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEncryptionKeyManager(FEncryptionKeyManager&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FEncryptionKeyManager&)",
    "insertText": "operator(const FEncryptionKeyManager&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FEncryptionKeyManager&)",
    "insertText": "operator(FEncryptionKeyManager&&)"
  },
  {
    "label": "FEncryptionKeyManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FEncryptionKeyManager()"
  },
  {
    "label": "ContainsKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsKey(const FGuid& Id)"
  },
  {
    "label": "AddKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKey(const FGuid& Id, const FAES::FAESKey& Key)"
  },
  {
    "label": "TryGetKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetKey(const FGuid& Id, FAES::FAESKey& OutKey)"
  },
  {
    "label": "GetAllKeys()",
    "kind": "Method",
    "detail": "Function (TMap<FGuid,FAES::FAESKey>)",
    "insertText": "GetAllKeys()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FEncryptionKeyAddedDelegate, const FGuid&, const FAES::FAESKey&)"
  },
  {
    "label": "OnKeyAdded()",
    "kind": "Method",
    "detail": "Function (FEncryptionKeyAddedDelegate&)",
    "insertText": "OnKeyAdded()"
  }
]