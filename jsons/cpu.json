[
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "IntelMicroArchitecture",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IntelMicroArchitecture"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_ALLOC_BASE_CPU_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_ALLOC_BASE_CPU_H_ # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" # include \" base / allocator / partition_allocator / partition_alloc_base / migration_adapter . h \" # include \" build / build_config . h \" namespace partition_alloc::internal::base { class)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC)"
  },
  {
    "label": "CPU()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CPU()"
  },
  {
    "label": "CPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CPU(CPU&&)"
  },
  {
    "label": "CPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CPU(const CPU&)"
  },
  {
    "label": "GetInstanceNoAllocation()",
    "kind": "Method",
    "detail": "Function (const CPU&)",
    "insertText": "GetInstanceNoAllocation()"
  },
  {
    "label": "signature()",
    "kind": "Method",
    "detail": "Function (enum IntelMicroArchitecture { PENTIUM = 0,SSE = 1,SSE2 = 2,SSE3 = 3,SSSE3 = 4,SSE41 = 5,SSE42 = 6,AVX = 7,AVX2 = 8,FMA3 = 9,MAX_INTEL_MICRO_ARCHITECTURE = 1 0 } ; int)",
    "insertText": "signature()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (int signature_ = 0 ; int type_ = 0 ; int stepping_ = 0 ; bool has_mmx_ = false ; bool has_sse_ = false ; bool has_sse2_ = false ; bool has_sse3_ = false ; bool has_ssse3_ = false ; bool has_sse41_ = false ; bool has_sse42_ = false ; bool has_popcnt_ = false ; bool has_avx_ = false ; bool has_fma3_ = false ; bool has_avx2_ = false ; bool has_aesni_ = false ; # if)",
    "insertText": "defined(ARCH_CPU_ARM_FAMILY)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (bool has_bti_ = false ; # endif # if)",
    "insertText": "defined(ARCH_CPU_X86_FAMILY)"
  }
]