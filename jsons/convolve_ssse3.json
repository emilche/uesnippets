[
  {
    "label": "shuffle_filter_ssse3()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_X86_CONVOLVE_SSSE3_H_ # define VPX_VPX_DSP_X86_CONVOLVE_SSSE3_H_ # include<assert . h> # include<tmmintrin . h> # include \" . / vpx_config . h \" void)",
    "insertText": "shuffle_filter_ssse3(const int16_t *const filter, __m128i *const f)"
  },
  {
    "label": "_mm_load_si128()",
    "kind": "Method",
    "detail": "Function (const __m128i f_values =)",
    "insertText": "_mm_load_si128((const __m128i *)filter)"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 0 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0200u))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 1 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0604u))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 2 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0a08u))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 3 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0e0cu))"
  },
  {
    "label": "shuffle_filter_odd_ssse3()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "shuffle_filter_odd_ssse3(const int16_t *const filter, __m128i *const f)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(filter[3] >= 0 && filter[3] < 256)"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 0 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0007u))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 1 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0402u))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 2 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0806u))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 3 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x0c0au))"
  },
  {
    "label": "_mm_shuffle_epi8()",
    "kind": "Method",
    "detail": "Function (f [ 4 ] =)",
    "insertText": "_mm_shuffle_epi8(f_values, _mm_set1_epi16(0x070eu))"
  },
  {
    "label": "convolve8_8_ssse3()",
    "kind": "Method",
    "detail": "Function (} __m128i)",
    "insertText": "convolve8_8_ssse3(const __m128i *const s, const __m128i *const f)"
  },
  {
    "label": "_mm_set1_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i k_64 =)",
    "insertText": "_mm_set1_epi16(1 << 6)"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x0 =)",
    "insertText": "_mm_maddubs_epi16(s[0], f[0])"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x1 =)",
    "insertText": "_mm_maddubs_epi16(s[1], f[1])"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x2 =)",
    "insertText": "_mm_maddubs_epi16(s[2], f[2])"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x3 =)",
    "insertText": "_mm_maddubs_epi16(s[3], f[3])"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i sum1,sum2 ; sum1 =)",
    "insertText": "_mm_add_epi16(x0, x2)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (sum2 =)",
    "insertText": "_mm_add_epi16(x1, x3)"
  },
  {
    "label": "_mm_add_epi16()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "_mm_add_epi16(sum1, k_64)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "_mm_adds_epi16(sum1, sum2)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (sum1 =)",
    "insertText": "_mm_srai_epi16(sum1, 7)"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x4 =)",
    "insertText": "_mm_maddubs_epi16(s[1], _mm_set1_epi8(64))"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i temp =)",
    "insertText": "_mm_adds_epi16(x0, x3)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_adds_epi16(temp, x1)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_adds_epi16(temp, x2)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_adds_epi16(temp, x4)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_adds_epi16(temp, k_64)"
  },
  {
    "label": "_mm_srai_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_srai_epi16(temp, 7)"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x4 =)",
    "insertText": "_mm_maddubs_epi16(s[4], f[4])"
  },
  {
    "label": "_mm_maddubs_epi16()",
    "kind": "Method",
    "detail": "Function (const __m128i x5 =)",
    "insertText": "_mm_maddubs_epi16(s[2], _mm_set1_epi8(64))"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (__m128i temp ; temp =)",
    "insertText": "_mm_adds_epi16(x0, x1)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_adds_epi16(temp, x3)"
  },
  {
    "label": "_mm_adds_epi16()",
    "kind": "Method",
    "detail": "Function (temp =)",
    "insertText": "_mm_adds_epi16(temp, x5)"
  }
]