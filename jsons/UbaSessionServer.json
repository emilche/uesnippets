[
  {
    "label": "NetworkServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkServer"
  },
  {
    "label": "ConnectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConnectionInfo"
  },
  {
    "label": "SessionServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SessionServer"
  },
  {
    "label": "ClientSession",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ClientSession"
  },
  {
    "label": "RemoteProcess",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RemoteProcess"
  },
  {
    "label": "CustomCasKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CustomCasKey"
  },
  {
    "label": "ApplicationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ApplicationData"
  },
  {
    "label": "WaitingProcess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WaitingProcess"
  },
  {
    "label": "SessionServer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaNetwork . h \" # include \" UbaSession . h \" # include \" UbaSessionServerCreateInfo . h \" namespace uba { class NetworkServer ; struct ConnectionInfo ; class SessionServer final : public Session { public :)",
    "insertText": "SessionServer(const SessionServerCreateInfo& info, const u8* environment = nullptr, u32 environmentSize = 0)"
  },
  {
    "label": "SessionServer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SessionServer()"
  },
  {
    "label": "RunProcessRemote()",
    "kind": "Method",
    "detail": "Function (ProcessHandle)",
    "insertText": "RunProcessRemote(const ProcessStartInfo& startInfo, float weight = 1.0f, const void* knownInputs = nullptr, u32 knownInputsCount = 0)"
  },
  {
    "label": "RunProcessRacing()",
    "kind": "Method",
    "detail": "Function (ProcessHandle)",
    "insertText": "RunProcessRacing(u32 raceAgainstRemoteProcessId)"
  },
  {
    "label": "DisableRemoteExecution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableRemoteExecution()"
  },
  {
    "label": "SetCustomCasKeyFromTrackedInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomCasKeyFromTrackedInputs(const tchar* fileName, const tchar* workingDir, const u8* trackedInputs, u32 trackedInputsBytes)"
  },
  {
    "label": "GetCasKeyFromTrackedInputs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCasKeyFromTrackedInputs(CasKey& out, const tchar* fileName, const tchar* workingDir, const u8* data, u32 dataLen)"
  },
  {
    "label": "SetRemoteProcessSlotAvailableEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteProcessSlotAvailableEvent(const Function<void()>& remoteProcessSlotAvailableEvent)"
  },
  {
    "label": "SetRemoteProcessReturnedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoteProcessReturnedEvent(const Function<void(Process&)>& remoteProcessReturnedEvent)"
  },
  {
    "label": "WaitOnAllTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitOnAllTasks()"
  },
  {
    "label": "SetMaxRemoteProcessCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxRemoteProcessCount(u32 count)"
  },
  {
    "label": "BeginExternalProcess()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "BeginExternalProcess(const tchar* description)"
  },
  {
    "label": "EndExternalProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndExternalProcess(u32 id, u32 exitCode)"
  },
  {
    "label": "UpdateProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProgress(u32 processesTotal, u32 processesDone, u32 errorCount)"
  },
  {
    "label": "UpdateStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatus(u32 statusRow, u32 statusColumn, const tchar* statusText, LogEntryType statusType, const tchar* statusLink)"
  },
  {
    "label": "GetServer()",
    "kind": "Method",
    "detail": "Function (NetworkServer&)",
    "insertText": "GetServer()"
  },
  {
    "label": "OnDisconnected()",
    "kind": "Method",
    "detail": "Function (protected : struct ClientSession ; void)",
    "insertText": "OnDisconnected(const Guid& clientUid, u32 clientId)"
  },
  {
    "label": "HandleMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMessage(const ConnectionInfo& connectionInfo, u8 messageType, BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "UBA_SESSION_MESSAGE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "UBA_SESSION_MESSAGE(x) bool Handle##x(const ConnectionInfo& connectionInfo, BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "StoreCasFile()",
    "kind": "Method",
    "detail": "Function (UBA_SESSION_MESSAGES # undef UBA_SESSION_MESSAGE bool)",
    "insertText": "StoreCasFile(CasKey& out, const StringKey& fileNameKey, const tchar* fileName)"
  },
  {
    "label": "WriteDirectoryTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteDirectoryTable(ClientSession& session, BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "WriteNameToHashTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteNameToHashTable(BinaryReader& reader, BinaryWriter& writer, u32 requestedSize)"
  },
  {
    "label": "ThreadMemoryCheckLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadMemoryCheckLoop()"
  },
  {
    "label": "DequeueProcess()",
    "kind": "Method",
    "detail": "Function (class RemoteProcess ; RemoteProcess*)",
    "insertText": "DequeueProcess(u32 sessionId, u32 clientId)"
  },
  {
    "label": "OnCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCancelled(RemoteProcess* process)"
  },
  {
    "label": "ProcessRemoved()",
    "kind": "Method",
    "detail": "Function (ProcessHandle)",
    "insertText": "ProcessRemoved(u32 processId)"
  },
  {
    "label": "GetProcessDescription()",
    "kind": "Method",
    "detail": "Function (TString)",
    "insertText": "GetProcessDescription(u32 processId)"
  },
  {
    "label": "PrepareProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareProcess(ProcessStartInfoHolder& startInfo, bool isChild, StringBufferBase& outRealApplication, const tchar*& outRealWorkingDir)"
  },
  {
    "label": "CreateFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateFile(CreateFileResponse& out, const CreateFileMessage& msg)"
  },
  {
    "label": "FileEntryAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileEntryAdded(StringKey fileNameKey, u64 lastWritten, u64 size)"
  },
  {
    "label": "PrintSessionStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintSessionStats(Logger& logger)"
  },
  {
    "label": "TraceSessionUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceSessionUpdate()"
  },
  {
    "label": "WriteRemoteEnvironmentVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteRemoteEnvironmentVariables(BinaryWriter& writer)"
  },
  {
    "label": "InitializeNameToHashTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeNameToHashTable()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (NetworkServer& m_server ; u32 m_uiLanguage ; Atomic<u32> m_maxRemoteProcessCount ; bool m_resetCas ; bool m_remoteExecutionEnabled ; bool m_nameToHashTableEnabled ; Vector<tchar> m_remoteEnvironmentVariables ; u8 ServiceId = SessionServiceId ; ReaderWriterLock m_remoteProcessSlotAvailableEventLock ; Function<)",
    "insertText": "void()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (ReaderWriterLock m_remoteProcessReturnedEventLock ; Function<)",
    "insertText": "void(Process&)"
  },
  {
    "label": "SessionServer()",
    "kind": "Method",
    "detail": "Function (CriticalSection m_remoteProcessAndSessionLock ; List<ProcessHandle> m_queuedRemoteProcesses ; UnorderedSet<ProcessHandle> m_activeRemoteProcesses ; u32 m_finishedRemoteProcessCount = 0 ; u32 m_returnedRemoteProcessCount = 0 ; u32 m_availableRemoteSlotCount = 0 ; u32 m_connectionCount = 0 ; ReaderWriterLock m_binKeysLock ; CasKey m_detoursBinaryKey ; CasKey m_agentBinaryKey ; struct ClientSession { TString name ; UnorderedSet<CasKey> sentKeys ; ReaderWriterLock dirTablePosLock ; u32 dirTablePos = 0 ; u32 id = ~ 0 u ; u32 processSlotCount = 1 ; u32 usedSlotCount = 0 ; u64 lastPing = 0 ; u64 memAvail = 0 ; u64 memTotal = 0 ; u64 pingTime = 0 ; float cpuLoad = 0 ; bool enabled = true ; bool dedicated = false ; bool abort = false ; } ; Vector<ClientSession*> m_clientSessions ; struct CustomCasKey { CasKey casKey ; TString workingDir ; Vector<u8> trackedInputs ; } ; ReaderWriterLock m_customCasKeysLock ; UnorderedMap<StringKey,CustomCasKey> m_customCasKeys ; UnorderedMap<StringKey,CasKey> m_nameToHashLookup ; ReaderWriterLock m_nameToHashLookupLock ; Atomic<bool> m_nameToHashInitialized ; ReaderWriterLock m_receivedFilesLock ; UnorderedMap<StringKey,CasKey> m_receivedFiles ; ReaderWriterLock m_fillUpOneAtTheTimeLock ; ReaderWriterLock m_applicationDataLock ; struct ApplicationData { ReaderWriterLock lock ; Vector<u8> bytes ; } ; UnorderedMap<StringKey,ApplicationData> m_applicationData ; Event m_memoryThreadEvent ; Thread m_memoryThread ; Atomic<u64> m_memAvail ; u64 m_memTotal = 0 ; u64 m_memRequiredToSpawn = 0 ; u8 m_memKillLoadPercent = 0 ; struct WaitingProcess { Event event ; WaitingProcess* next = nullptr ; } ; WaitingProcess* m_oldestWaitingProcess = nullptr ; WaitingProcess* m_newestWaitingProcess = nullptr ; ReaderWriterLock m_waitingProcessesLock ; bool m_allowWaitOnMem = false ; bool m_allowKillOnMem = false ; bool m_remoteLogEnabled = false ; bool m_remoteTraceEnabled = false ;)",
    "insertText": "SessionServer(const SessionServer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const SessionServer&)"
  }
]