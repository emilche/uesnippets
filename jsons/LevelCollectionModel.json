[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "UEditorEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorEngine"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "WORLDBROWSER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WORLDBROWSER_API"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FPropertyEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditorModule"
  },
  {
    "label": "FUnmodifiableObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnmodifiableObject"
  },
  {
    "label": "FTiledLandscapeImportSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTiledLandscapeImportSettings"
  },
  {
    "label": "LandscapeLayerSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LandscapeLayerSettings"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Engine / World . h \" # include \" TickableEditorObject . h \" # include \" WorldBrowserDragDrop . h \" # include \" Misc / EnumClassFlags . h \" # include \" Misc / IFilter . h \" # include \" LevelModel . h \" # include \" Misc / FilterCollection . h \" class FMenuBuilder ; class IDetailsView ; class UEditorEngine ; class UMaterialInterface ; typedef IFilter<const FLevelModel*> LevelFilter ; typedef TFilterCollection<const FLevelModel*> LevelFilterCollection ; enum class EBuildHierarchyMenuFlags { None,ShowGameVisibility = 1<<0 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EBuildHierarchyMenuFlags)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (class FLevelCollectionModel : public TSharedFromThis<FLevelCollectionModel>,public FTickableEditorObject { public :)",
    "insertText": "DECLARE_EVENT_OneParam(FLevelCollectionModel, FOnNewItemAdded, TSharedPtr<FLevelModel>)"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(FLevelCollectionModel, FSimpleEvent)"
  },
  {
    "label": "FLevelCollectionModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLevelCollectionModel()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "IsSimulating()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSimulating()"
  },
  {
    "label": "GetSimulationWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetSimulationWorld()"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "IsOriginRebasingEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsOriginRebasingEnabled()"
  },
  {
    "label": "GetWorldSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetWorldSize()"
  },
  {
    "label": "GetAllLevels()",
    "kind": "Method",
    "detail": "Function (const FLevelModelList&)",
    "insertText": "GetAllLevels()"
  },
  {
    "label": "GetFilteredLevels()",
    "kind": "Method",
    "detail": "Function (const FLevelModelList&)",
    "insertText": "GetFilteredLevels()"
  },
  {
    "label": "GetSelectedLevels()",
    "kind": "Method",
    "detail": "Function (const FLevelModelList&)",
    "insertText": "GetSelectedLevels()"
  },
  {
    "label": "AddFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFilter(const TSharedRef<LevelFilter>& InFilter)"
  },
  {
    "label": "RemoveFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFilter(const TSharedRef<LevelFilter>& InFilter)"
  },
  {
    "label": "IsFilterActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilterActive()"
  },
  {
    "label": "IterateHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateHierarchy(FLevelModelVisitor& Visitor)"
  },
  {
    "label": "SetSelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedLevels(const FLevelModelList& InList)"
  },
  {
    "label": "SetSelectedLevelsFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedLevelsFromWorld()"
  },
  {
    "label": "FindLevelModel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLevelModel>)",
    "insertText": "FindLevelModel(ULevel* InLevel)"
  },
  {
    "label": "FindLevelModel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FLevelModel>)",
    "insertText": "FindLevelModel(const FName& PackageName)"
  },
  {
    "label": "HideLevelsInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideLevelsInEditor(const FLevelModelList& InLevelList)"
  },
  {
    "label": "ShowLevelsInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowLevelsInEditor(const FLevelModelList& InLevelList)"
  },
  {
    "label": "ShowInEditorOnlySelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInEditorOnlySelectedLevels()"
  },
  {
    "label": "ShowInEditorAllButSelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInEditorAllButSelectedLevels()"
  },
  {
    "label": "HideLevelsInGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideLevelsInGame(const FLevelModelList& InLevelList)"
  },
  {
    "label": "ShowLevelsInGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowLevelsInGame(const FLevelModelList& InLevelList)"
  },
  {
    "label": "ShowInGameOnlySelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInGameOnlySelectedLevels()"
  },
  {
    "label": "ShowInGameAllButSelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInGameAllButSelectedLevels()"
  },
  {
    "label": "UnlockLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockLevels(const FLevelModelList& InLevelList)"
  },
  {
    "label": "LockLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockLevels(const FLevelModelList& InLevelList)"
  },
  {
    "label": "LockOnlySelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockOnlySelectedLevels()"
  },
  {
    "label": "LockAllButSelectedLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockAllButSelectedLevels()"
  },
  {
    "label": "SaveLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveLevels(const FLevelModelList& InLevelList)"
  },
  {
    "label": "LoadLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadLevels(const FLevelModelList& InLevelList)"
  },
  {
    "label": "UnloadLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadLevels(const FLevelModelList& InLevelList)"
  },
  {
    "label": "TranslateLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TranslateLevels(const FLevelModelList& InLevelList, FVector2D InAbsoluteDelta, bool bSnapDelta = true)"
  },
  {
    "label": "SnapTranslationDelta()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "SnapTranslationDelta(const FLevelModelList& InLevelList, FVector2D InAbsoluteDelta, bool bBoundsSnapping, FVector2D::FReal SnappingValue)"
  },
  {
    "label": "UpdateTranslationDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTranslationDelta(const FLevelModelList& InLevelList, FVector2D InTranslationDelta, bool bBoundsSnapping, FVector2D::FReal SnappingValue)"
  },
  {
    "label": "AssignParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignParent(const FLevelModelList& InLevels, TSharedPtr<FLevelModel> InParent)"
  },
  {
    "label": "AddExistingLevelsFromAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExistingLevelsFromAssetData(const TArray<struct FAssetData>& WorldList)"
  },
  {
    "label": "CreateDragDropOp()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<WorldHierarchy::FWorldBrowserDragDropOp>)",
    "insertText": "CreateDragDropOp()"
  },
  {
    "label": "CreateDragDropOp()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<WorldHierarchy::FWorldBrowserDragDropOp>)",
    "insertText": "CreateDragDropOp(const FLevelModelList& InLevels)"
  },
  {
    "label": "PassesAllFilters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesAllFilters(const FLevelModel& InLevelModel)"
  },
  {
    "label": "BuildHierarchyMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildHierarchyMenu(FMenuBuilder& InMenuBuilder, EBuildHierarchyMenuFlags Flags)"
  },
  {
    "label": "CustomizeFileMainMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeFileMainMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "GetPlayerView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPlayerView(FVector& Location, FRotator& Rotation)"
  },
  {
    "label": "GetObserverView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetObserverView(FVector& Location, FRotator& Rotation)"
  },
  {
    "label": "CompareLevelsZOrder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareLevelsZOrder(TSharedPtr<FLevelModel> InA, TSharedPtr<FLevelModel> InB)"
  },
  {
    "label": "RegisterDetailsCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDetailsCustomization(class FPropertyEditorModule& PropertyModule, TSharedPtr<class IDetailsView> InDetailsView)"
  },
  {
    "label": "UnregisterDetailsCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterDetailsCustomization(class FPropertyEditorModule& PropertyModule, TSharedPtr<class IDetailsView> InDetailsView)"
  },
  {
    "label": "IsTileWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTileWorld()"
  },
  {
    "label": "PopulateFilteredLevelsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateFilteredLevelsList()"
  },
  {
    "label": "RequestUpdateAllLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateAllLevels()"
  },
  {
    "label": "RequestRedrawAllLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRedrawAllLevels()"
  },
  {
    "label": "UpdateAllLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllLevels()"
  },
  {
    "label": "RedrawAllLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedrawAllLevels()"
  },
  {
    "label": "UpdateLevelActorsCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLevelActorsCount()"
  },
  {
    "label": "IsOneLevelSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOneLevelSelected()"
  },
  {
    "label": "AreAnyLevelsSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnyLevelsSelected()"
  },
  {
    "label": "AreAllSelectedLevelsUserManaged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllSelectedLevelsUserManaged()"
  },
  {
    "label": "AreAllSelectedLevelsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllSelectedLevelsLoaded()"
  },
  {
    "label": "AreAnySelectedLevelsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnySelectedLevelsLoaded()"
  },
  {
    "label": "AreAllSelectedLevelsUnloaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllSelectedLevelsUnloaded()"
  },
  {
    "label": "AreAnySelectedLevelsUnloaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnySelectedLevelsUnloaded()"
  },
  {
    "label": "AreAllSelectedLevelsEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllSelectedLevelsEditable()"
  },
  {
    "label": "AreAllSelectedLevelsEditableAndNotPersistent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllSelectedLevelsEditableAndNotPersistent()"
  },
  {
    "label": "AreAllSelectedLevelsEditableAndVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllSelectedLevelsEditableAndVisible()"
  },
  {
    "label": "AreAnySelectedLevelsEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnySelectedLevelsEditable()"
  },
  {
    "label": "AreAnySelectedLevelsEditableAndVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnySelectedLevelsEditableAndVisible()"
  },
  {
    "label": "CanExecuteGameVisibilityCommandsForSelectedLevels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteGameVisibilityCommandsForSelectedLevels()"
  },
  {
    "label": "CanExecuteGameVisibilityCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteGameVisibilityCommands()"
  },
  {
    "label": "IsSelectedLevelEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelectedLevelEditable()"
  },
  {
    "label": "IsNewLightingScenarioState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewLightingScenarioState(bool bExistingState)"
  },
  {
    "label": "SetIsLightingScenario()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsLightingScenario(bool bNewLightingScenario)"
  },
  {
    "label": "AreAnySelectedLevelsDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAnySelectedLevelsDirty()"
  },
  {
    "label": "AreActorsSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreActorsSelected()"
  },
  {
    "label": "CanConvertAnyLevelToExternalActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConvertAnyLevelToExternalActors(bool bExternal)"
  },
  {
    "label": "IsValidMoveActorsToLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidMoveActorsToLevel()"
  },
  {
    "label": "IsValidMoveFoliageToLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidMoveFoliageToLevel()"
  },
  {
    "label": "OnActorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelectionChanged(UObject* obj)"
  },
  {
    "label": "OnActorOrLevelSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorOrLevelSelectionChanged()"
  },
  {
    "label": "GetDisplayPathsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDisplayPathsState()"
  },
  {
    "label": "SetDisplayPathsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayPathsState(bool bDisplayPaths)"
  },
  {
    "label": "GetDisplayActorsCountState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDisplayActorsCountState()"
  },
  {
    "label": "SetDisplayActorsCountState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayActorsCountState(bool bDisplayActorsCount)"
  },
  {
    "label": "BroadcastSelectionChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent SelectionChanged ; void)",
    "insertText": "BroadcastSelectionChanged()"
  },
  {
    "label": "BroadcastCollectionChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent CollectionChanged ; void)",
    "insertText": "BroadcastCollectionChanged()"
  },
  {
    "label": "BroadcastHierarchyChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent HierarchyChanged ; void)",
    "insertText": "BroadcastHierarchyChanged()"
  },
  {
    "label": "BroadcastPreLevelsUnloaded()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent PreLevelsUnloaded ; void)",
    "insertText": "BroadcastPreLevelsUnloaded()"
  },
  {
    "label": "BroadcastPostLevelsUnloaded()",
    "kind": "Method",
    "detail": "Function (FSimpleEvent PostLevelsUnloaded ; void)",
    "insertText": "BroadcastPostLevelsUnloaded()"
  },
  {
    "label": "EditableAxisLength()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "EditableAxisLength()"
  },
  {
    "label": "EditableWorldArea()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "EditableWorldArea()"
  },
  {
    "label": "SCCCheckOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCCCheckOut(const FLevelModelList& InList)"
  },
  {
    "label": "SCCCheckIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCCCheckIn(const FLevelModelList& InList)"
  },
  {
    "label": "SCCOpenForAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCCOpenForAdd(const FLevelModelList& InList)"
  },
  {
    "label": "SCCHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCCHistory(const FLevelModelList& InList)"
  },
  {
    "label": "SCCRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCCRefresh(const FLevelModelList& InList)"
  },
  {
    "label": "SCCDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SCCDiffAgainstDepot(const FLevelModelList& InList, UEditorEngine* InEditor)"
  },
  {
    "label": "GetPackageNamesList()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetPackageNamesList(const FLevelModelList& InList)"
  },
  {
    "label": "GetFilenamesList()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetFilenamesList(const FLevelModelList& InList)"
  },
  {
    "label": "GetPackagesList()",
    "kind": "Method",
    "detail": "Function (TArray<UPackage*>)",
    "insertText": "GetPackagesList(const FLevelModelList& InList)"
  },
  {
    "label": "GetLevelObjectList()",
    "kind": "Method",
    "detail": "Function (TArray<ULevel*>)",
    "insertText": "GetLevelObjectList(const FLevelModelList& InList)"
  },
  {
    "label": "GetLoadedLevels()",
    "kind": "Method",
    "detail": "Function (FLevelModelList)",
    "insertText": "GetLoadedLevels(const FLevelModelList& InList)"
  },
  {
    "label": "GetLevelsHierarchy()",
    "kind": "Method",
    "detail": "Function (FLevelModelList)",
    "insertText": "GetLevelsHierarchy(const FLevelModelList& InList)"
  },
  {
    "label": "GetLevelsBoundingBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetLevelsBoundingBox(const FLevelModelList& InList, bool bIncludeChildren)"
  },
  {
    "label": "GetVisibleLevelsBoundingBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetVisibleLevelsBoundingBox(const FLevelModelList& InList, bool bIncludeChildren)"
  },
  {
    "label": "GetCommandList()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FUICommandList>)",
    "insertText": "GetCommandList()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "RefreshBrowser_Executed()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RefreshBrowser_Executed()"
  },
  {
    "label": "LoadSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSelectedLevels_Executed()"
  },
  {
    "label": "UnloadSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadSelectedLevels_Executed()"
  },
  {
    "label": "MakeLevelCurrent_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeLevelCurrent_Executed()"
  },
  {
    "label": "FindInContentBrowser_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindInContentBrowser_Executed()"
  },
  {
    "label": "IsValidFindInContentBrowser()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidFindInContentBrowser()"
  },
  {
    "label": "MoveActorsToSelected_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveActorsToSelected_Executed()"
  },
  {
    "label": "MoveFoliageToSelected_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveFoliageToSelected_Executed()"
  },
  {
    "label": "SaveSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSelectedLevels_Executed()"
  },
  {
    "label": "SaveSelectedLevelAs_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSelectedLevelAs_Executed()"
  },
  {
    "label": "MigrateSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateSelectedLevels_Executed()"
  },
  {
    "label": "ExpandSelectedItems_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandSelectedItems_Executed()"
  },
  {
    "label": "OnSCCCheckOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCCheckOut()"
  },
  {
    "label": "OnSCCOpenForAdd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCOpenForAdd()"
  },
  {
    "label": "OnSCCCheckIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCCheckIn()"
  },
  {
    "label": "OnSCCHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCHistory()"
  },
  {
    "label": "OnSCCRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCRefresh()"
  },
  {
    "label": "OnSCCDiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCDiffAgainstDepot()"
  },
  {
    "label": "OnSCCConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSCCConnect()"
  },
  {
    "label": "SelectAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllLevels_Executed()"
  },
  {
    "label": "DeselectAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectAllLevels_Executed()"
  },
  {
    "label": "InvertSelection_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvertSelection_Executed()"
  },
  {
    "label": "SelectActors_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectActors_Executed()"
  },
  {
    "label": "DeselectActors_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectActors_Executed()"
  },
  {
    "label": "ConvertLevelToExternalActors_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLevelToExternalActors_Executed(bool bExternal)"
  },
  {
    "label": "ShowInEditorSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInEditorSelectedLevels_Executed()"
  },
  {
    "label": "HideInEditorSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideInEditorSelectedLevels_Executed()"
  },
  {
    "label": "ShowInEditorOnlySelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInEditorOnlySelectedLevels_Executed()"
  },
  {
    "label": "ShowInEditorAllButSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInEditorAllButSelectedLevels_Executed()"
  },
  {
    "label": "ShowInEditorAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInEditorAllLevels_Executed()"
  },
  {
    "label": "HideInEditorAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideInEditorAllLevels_Executed()"
  },
  {
    "label": "ShowInGameSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInGameSelectedLevels_Executed()"
  },
  {
    "label": "HideInGameSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideInGameSelectedLevels_Executed()"
  },
  {
    "label": "ShowInGameOnlySelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInGameOnlySelectedLevels_Executed()"
  },
  {
    "label": "ShowInGameAllButSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInGameAllButSelectedLevels_Executed()"
  },
  {
    "label": "ShowInGameAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowInGameAllLevels_Executed()"
  },
  {
    "label": "HideInGameAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideInGameAllLevels_Executed()"
  },
  {
    "label": "LockSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockSelectedLevels_Executed()"
  },
  {
    "label": "UnlockSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockSelectedLevels_Executed()"
  },
  {
    "label": "LockOnlySelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockOnlySelectedLevels_Executed()"
  },
  {
    "label": "LockAllButSelectedLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockAllButSelectedLevels_Executed()"
  },
  {
    "label": "LockAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockAllLevels_Executed()"
  },
  {
    "label": "UnlockAllLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockAllLevels_Executed()"
  },
  {
    "label": "ToggleReadOnlyLevels_Executed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleReadOnlyLevels_Executed()"
  },
  {
    "label": "CanExecuteSCCCheckOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteSCCCheckOut()"
  },
  {
    "label": "FillEditorVisibilitySubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillEditorVisibilitySubMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillGameVisibilitySubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillGameVisibilitySubMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillSourceControlSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillSourceControlSubMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Initialize(UWorld* InWorld)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "DeselectActorsInAllReadOnlyLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectActorsInAllReadOnlyLevel(const FLevelModelList& InLevelList)"
  },
  {
    "label": "DeselectSurfaceInAllReadOnlyLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeselectSurfaceInAllReadOnlyLevel(const FLevelModelList& InLevelList)"
  },
  {
    "label": "OnLevelsCollectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsCollectionChanged()"
  },
  {
    "label": "OnLevelsSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsSelectionChanged()"
  },
  {
    "label": "OnLevelsSelectionChangedOutside()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsSelectionChangedOutside()"
  },
  {
    "label": "OnLevelsHierarchyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelsHierarchyChanged()"
  },
  {
    "label": "OnPreLoadLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreLoadLevels(const FLevelModelList& InList)"
  },
  {
    "label": "OnPreShowLevels()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnPreShowLevels(const FLevelModelList& InList)"
  },
  {
    "label": "OnLevelAddedToWorld()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnLevelAddedToWorld(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "OnLevelRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemovedFromWorld(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "OnRedrawAllViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRedrawAllViewports()"
  },
  {
    "label": "OnLevelActorAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorAdded(AActor* InActor)"
  },
  {
    "label": "OnLevelActorDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorDeleted(AActor* InActor)"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "CacheCanExecuteSourceControlVars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheCanExecuteSourceControlVars()"
  },
  {
    "label": "FUnmodifiableObject()",
    "kind": "Method",
    "detail": "Function (protected : TWeakObjectPtr<UWorld> CurrentWorld ; bool bRequestedUpdateAllLevels ; bool bRequestedRedrawAllLevels ; bool bRequestedUpdateActorsCount ; const TSharedRef<FUICommandList> CommandList ; const TSharedRef<LevelFilterCollection> Filters ; FLevelModelList RootLevelsList ; FLevelModelList AllLevelsList ; TMap<FName,TSharedPtr<FLevelModel>> AllLevelsMap ; FLevelModelList FilteredLevelsList ; FLevelModelList SelectedLevelsList ; FIntPoint WorldSize ; bool bDisplayPaths ; bool bDisplayActorsCount ; bool bCanExecuteSCCCheckOut ; bool bCanExecuteSCCOpenForAdd ; bool bCanExecuteSCCCheckIn ; bool bCanExecuteSCC ; bool bSelectionHasChanged ; bool bUpdatingLevelsSelection ; } ; struct FUnmodifiableObject {)",
    "insertText": "FUnmodifiableObject(UObject* InObject) : ImmuneObject(InObject) , bTransient(InObject->HasAnyFlags(RF_Transient))"
  },
  {
    "label": "SetFlags()",
    "kind": "Method",
    "detail": "Function (ImmuneObject ->)",
    "insertText": "SetFlags(RF_Transient)"
  },
  {
    "label": "FUnmodifiableObject()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FUnmodifiableObject()"
  },
  {
    "label": "ClearFlags()",
    "kind": "Method",
    "detail": "Function (ImmuneObject ->)",
    "insertText": "ClearFlags(RF_Transient)"
  },
  {
    "label": "FTiledLandscapeImportSettings()",
    "kind": "Method",
    "detail": "Function (} } private : UObject* ImmuneObject ; bool bTransient ; } ; struct FTiledLandscapeImportSettings {)",
    "insertText": "FTiledLandscapeImportSettings() : Scale3D(100.f,100.f,100.f) , ComponentsNum(8) , QuadsPerSection(63) , SectionsPerComponent(1) , TilesCoordinatesOffset(0,0) , SizeX(1009) , bFlipYAxis(true) , bEditLayersEnabled(false)"
  },
  {
    "label": "LandscapeLayerSettings()",
    "kind": "Method",
    "detail": "Function (} FVector Scale3D ; int32 ComponentsNum ; int32 QuadsPerSection ; int32 SectionsPerComponent ; TArray<FString> HeightmapFileList ; TArray<FIntPoint> TileCoordinates ; FIntPoint TilesCoordinatesOffset ; int32 SizeX ; bool bFlipYAxis ; bool bEditLayersEnabled ; TWeakObjectPtr<UMaterialInterface> LandscapeMaterial ; struct LandscapeLayerSettings {)",
    "insertText": "LandscapeLayerSettings() : bNoBlendWeight(false)"
  }
]