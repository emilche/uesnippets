[
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "FDetailLayoutBuilderImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailLayoutBuilderImpl"
  },
  {
    "label": "FDetailTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailTreeNode"
  },
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "IClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassViewerFilter"
  },
  {
    "label": "IDetailCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCustomization"
  },
  {
    "label": "IDetailKeyframeHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailKeyframeHandler"
  },
  {
    "label": "IDetailPropertyExtensionHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyExtensionHandler"
  },
  {
    "label": "IDetailPropertyChildrenCustomizationHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyChildrenCustomizationHandler"
  },
  {
    "label": "IPropertyGenerationUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyGenerationUtilities"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "SDetailNameArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDetailNameArea"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "FDetailsViewObjectRoot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailsViewObjectRoot"
  },
  {
    "label": "SDetailsViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDetailsViewBase"
  },
  {
    "label": "FPropertyAndParent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAndParent"
  },
  {
    "label": "FAnimatingNodeCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimatingNodeCollection"
  },
  {
    "label": "FDetailsViewConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailsViewConfig"
  },
  {
    "label": "SDetailsViewBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AssetThumbnail . h \" # include \" DetailColumnSizeData . h \" # include \" DetailFilter . h \" # include \" DetailsViewConfig . h \" # include \" DetailTreeNode . h \" # include \" Framework / Commands / UICommandList . h \" # include \" IDetailsView . h \" # include \" IDetailsViewPrivate . h \" # include \" Input / Reply . h \" # include \" IPropertyUtilities . h \" # include \" Layout / Visibility . h \" # include \" Misc / Attribute . h \" # include \" PropertyEditorModule . h \" # include \" PropertyNode . h \" # include \" PropertyPath . h \" # include \" PropertyRowGenerator . h \" # include \" StringPrefixTree . h \" # include \" Widgets / SWindow . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class FAssetThumbnailPool ; class FDetailCategoryImpl ; class FDetailLayoutBuilderImpl ; class FDetailTreeNode ; class FNotifyHook ; class FPropertyEditor ; class FUICommandList ; class IClassViewerFilter ; class IDetailCustomization ; class IDetailKeyframeHandler ; class IDetailPropertyExtensionHandler ; class IDetailPropertyChildrenCustomizationHandler ; class IPropertyGenerationUtilities ; class IPropertyUtilities ; class SDetailNameArea ; class SSearchBox ; struct FDetailsViewObjectRoot ; typedef STreeView<TSharedRef<FDetailTreeNode>> SDetailTree ; class SDetailsViewBase : public IDetailsViewPrivate { public :)",
    "insertText": "SDetailsViewBase()"
  },
  {
    "label": "IsUpdatable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUpdatable()"
  },
  {
    "label": "GetNumVisibleTopLevelObjects()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumVisibleTopLevelObjects()"
  },
  {
    "label": "GetPropertiesInOrderDisplayed()",
    "kind": "Method",
    "detail": "Function (TArray<FPropertyPath>)",
    "insertText": "GetPropertiesInOrderDisplayed()"
  },
  {
    "label": "GetPropertyRowNumbers()",
    "kind": "Method",
    "detail": "Function (TArray<TPair<int32,FPropertyPath>>)",
    "insertText": "GetPropertyRowNumbers()"
  },
  {
    "label": "CountRows()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CountRows()"
  },
  {
    "label": "HighlightProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightProperty(const FPropertyPath& Property)"
  },
  {
    "label": "ScrollPropertyIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollPropertyIntoView(const FPropertyPath& Property, bool bExpandProperty = false)"
  },
  {
    "label": "GetPaintSpacePropertyBounds()",
    "kind": "Method",
    "detail": "Function (FSlateRect)",
    "insertText": "GetPaintSpacePropertyBounds(const TSharedRef<FDetailTreeNode>& InDetailTreeNode, bool bIncludeChildren = true)"
  },
  {
    "label": "GetTickSpacePropertyBounds()",
    "kind": "Method",
    "detail": "Function (FSlateRect)",
    "insertText": "GetTickSpacePropertyBounds(const TSharedRef<FDetailTreeNode>& InDetailTreeNode, bool bIncludeChildren = true)"
  },
  {
    "label": "IsAncestorCollapsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAncestorCollapsed(const TSharedRef<IDetailTreeNode>& Node)"
  },
  {
    "label": "ShowAllAdvancedProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllAdvancedProperties()"
  },
  {
    "label": "SetOnDisplayedPropertiesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnDisplayedPropertiesChanged(FOnDisplayedPropertiesChanged InOnDisplayedPropertiesChangedDelegate)"
  },
  {
    "label": "GetOnDisplayedPropertiesChanged()",
    "kind": "Method",
    "detail": "Function (FOnDisplayedPropertiesChanged&)",
    "insertText": "GetOnDisplayedPropertiesChanged()"
  },
  {
    "label": "SetIsPropertyVisibleDelegate()",
    "kind": "Method",
    "detail": "Function (bDisableCustomDetailLayouts = bInDisableCustomDetailLayouts ; } void)",
    "insertText": "SetIsPropertyVisibleDelegate(FIsPropertyVisible InIsPropertyVisible)"
  },
  {
    "label": "GetIsPropertyVisibleDelegate()",
    "kind": "Method",
    "detail": "Function (FIsPropertyVisible&)",
    "insertText": "GetIsPropertyVisibleDelegate()"
  },
  {
    "label": "GetIsCustomRowVisibleDelegate()",
    "kind": "Method",
    "detail": "Function (FIsCustomRowVisible&)",
    "insertText": "GetIsCustomRowVisibleDelegate()"
  },
  {
    "label": "GetIsCustomRowReadOnlyDelegate()",
    "kind": "Method",
    "detail": "Function (FIsCustomRowReadOnly&)",
    "insertText": "GetIsCustomRowReadOnlyDelegate()"
  },
  {
    "label": "GetIsPropertyReadOnlyDelegate()",
    "kind": "Method",
    "detail": "Function (FIsPropertyReadOnly&)",
    "insertText": "GetIsPropertyReadOnlyDelegate()"
  },
  {
    "label": "GetIsPropertyEditingEnabledDelegate()",
    "kind": "Method",
    "detail": "Function (FIsPropertyEditingEnabled&)",
    "insertText": "GetIsPropertyEditingEnabledDelegate()"
  },
  {
    "label": "SetKeyframeHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyframeHandler(TSharedPtr<IDetailKeyframeHandler> InKeyframeHandler)"
  },
  {
    "label": "GetKeyframeHandler()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailKeyframeHandler>)",
    "insertText": "GetKeyframeHandler()"
  },
  {
    "label": "GetExtensionHandler()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailPropertyExtensionHandler>)",
    "insertText": "GetExtensionHandler()"
  },
  {
    "label": "GetChildrenCustomizationHandler()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IDetailPropertyChildrenCustomizationHandler>)",
    "insertText": "GetChildrenCustomizationHandler()"
  },
  {
    "label": "IsPropertyReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyReadOnly(const struct FPropertyAndParent& PropertyAndParent)"
  },
  {
    "label": "IsCustomRowVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomRowVisible(FName InRowName, FName InParentName)"
  },
  {
    "label": "IsCustomRowReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomRowReadOnly(FName InRowName, FName InParentName)"
  },
  {
    "label": "SetGenericLayoutDetailsDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGenericLayoutDetailsDelegate(FOnGetDetailCustomizationInstance OnGetGenericDetails)"
  },
  {
    "label": "GetGenericLayoutDetailsDelegate()",
    "kind": "Method",
    "detail": "Function (FOnGetDetailCustomizationInstance&)",
    "insertText": "GetGenericLayoutDetailsDelegate()"
  },
  {
    "label": "OnFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (FOnFinishedChangingProperties&)",
    "insertText": "OnFinishedChangingProperties()"
  },
  {
    "label": "RegisterInstancedCustomPropertyTypeLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterInstancedCustomPropertyTypeLayout(FName PropertyTypeName, FOnGetPropertyTypeCustomizationInstance PropertyTypeLayoutDelegate, TSharedPtr<IPropertyTypeIdentifier> Identifier = nullptr)"
  },
  {
    "label": "UnregisterInstancedCustomPropertyLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterInstancedCustomPropertyLayout(UStruct* Class)"
  },
  {
    "label": "UnregisterInstancedCustomPropertyTypeLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterInstancedCustomPropertyTypeLayout(FName PropertyTypeName, TSharedPtr<IPropertyTypeIdentifier> Identifier = nullptr)"
  },
  {
    "label": "SetCustomValidatePropertyNodesFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomValidatePropertyNodesFunction(FOnValidatePropertyRowGeneratorNodes InCustomValidatePropertyNodesFunction)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (CustomValidatePropertyNodesFunction =)",
    "insertText": "MoveTemp(InCustomValidatePropertyNodesFunction)"
  },
  {
    "label": "SetRightColumnMinWidth()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetRightColumnMinWidth(float InMinWidth)"
  },
  {
    "label": "RerunCurrentFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RerunCurrentFilter()"
  },
  {
    "label": "SetNodeExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodeExpansionState(TSharedRef<FDetailTreeNode> InTreeNode, bool bExpand, bool bRecursive)"
  },
  {
    "label": "SaveCustomExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCustomExpansionState(const FString& NodePath, bool bIsExpanded)"
  },
  {
    "label": "GetCustomSavedExpansionState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCustomSavedExpansionState(const FString& NodePath)"
  },
  {
    "label": "NotifyFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFinishedChangingProperties(const FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "RefreshTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTree()"
  },
  {
    "label": "RequestForceRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestForceRefresh()"
  },
  {
    "label": "GetThumbnailPool()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAssetThumbnailPool>)",
    "insertText": "GetThumbnailPool()"
  },
  {
    "label": "GetClassViewerFilters()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<IClassViewerFilter>>&)",
    "insertText": "GetClassViewerFilters()"
  },
  {
    "label": "GetPropertyUtilities()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyUtilities>)",
    "insertText": "GetPropertyUtilities()"
  },
  {
    "label": "CreateColorPickerWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateColorPickerWindow(const TSharedRef<FPropertyEditor>& PropertyEditor, bool bUseAlpha)"
  },
  {
    "label": "UpdateSinglePropertyMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSinglePropertyMap(TSharedPtr<FComplexPropertyNode> InRootPropertyNode, FDetailLayoutData& LayoutData, bool bIsExternal)"
  },
  {
    "label": "GetNotifyHook()",
    "kind": "Method",
    "detail": "Function (FNotifyHook*)",
    "insertText": "GetNotifyHook()"
  },
  {
    "label": "RestoreExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreExpandedItems(TSharedRef<FPropertyNode> StartNode)"
  },
  {
    "label": "RestoreExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreExpandedItems(TSharedRef<FPropertyNode> StartNode, TMap<UStruct*, FStringPrefixTree>* OptionalExpansionStates)"
  },
  {
    "label": "MarkNodeAnimating()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkNodeAnimating(TSharedPtr<FPropertyNode> InNode, float InAnimationDuration, TOptional<FGuid> InAnimationBatchId)"
  },
  {
    "label": "IsNodeAnimating()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeAnimating(TSharedPtr<FPropertyNode> InNode)"
  },
  {
    "label": "GetColumnSizeData()",
    "kind": "Method",
    "detail": "Function (FDetailColumnSizeData&)",
    "insertText": "GetColumnSizeData()"
  },
  {
    "label": "GetRootNodes()",
    "kind": "Method",
    "detail": "Function (FRootPropertyNodeList&)",
    "insertText": "GetRootNodes()"
  },
  {
    "label": "GetHeadNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetHeadNodes(TArray<TWeakPtr<FDetailTreeNode>>&)"
  },
  {
    "label": "OnColorPickerWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerWindowClosed(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "RequestItemExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestItemExpanded(TSharedRef<FDetailTreeNode> TreeNode, bool bExpand)"
  },
  {
    "label": "SetRootExpansionStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootExpansionStates(const bool bExpand, const bool bRecurse)"
  },
  {
    "label": "EnqueueDeferredAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueDeferredAction(FSimpleDelegate& DeferredAction)"
  },
  {
    "label": "RestoreAllExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreAllExpandedItems(TMap<UStruct*, FStringPrefixTree>* OptionalExpansionStates = nullptr)"
  },
  {
    "label": "GetDisplayManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDetailsDisplayManager>)",
    "insertText": "GetDisplayManager()"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnFocusReceived()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFocusReceived(const FGeometry& MyGeometry, const FFocusEvent& InFocusEvent)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "SetColorPropertyFromColorPicker()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetColorPropertyFromColorPicker(FLinearColor NewColor)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (struct FAnimatingNodeCollection { TArray<TSharedPtr<FPropertyPath>> NodePaths ; FTimerHandle NodeTimer ; FGuid BatchId ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FAnimatingNodeCollection& Other)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (continue ; })",
    "insertText": "if(!FPropertyPath::AreEqual(NodePaths[Idx].ToSharedRef(), Other.NodePaths[Idx].ToSharedRef()))"
  },
  {
    "label": "HandleNodeAnimationComplete()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "HandleNodeAnimationComplete(FAnimatingNodeCollection* InAnimatedNode)"
  },
  {
    "label": "UpdatePropertyMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertyMaps()"
  },
  {
    "label": "CustomUpdatePropertyMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomUpdatePropertyMap(TSharedPtr<FDetailLayoutBuilderImpl>& InDetailLayout)"
  },
  {
    "label": "GetTreeVisibility()",
    "kind": "Method",
    "detail": "Function (} EVisibility)",
    "insertText": "GetTreeVisibility()"
  },
  {
    "label": "GetScrollBarVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetScrollBarVisibility()"
  },
  {
    "label": "OnGetFilterButtonImageResource()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetFilterButtonImageResource()"
  },
  {
    "label": "OnLockButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnLockButtonClicked()"
  },
  {
    "label": "SetNodeExpansionStateRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodeExpansionStateRecursive(TSharedRef<FDetailTreeNode> InTreeNode, bool bIsItemExpanded)"
  },
  {
    "label": "OnItemExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemExpansionChanged(TSharedRef<FDetailTreeNode> InTreeNode, bool bIsItemExpanded)"
  },
  {
    "label": "OnGetChildrenForDetailTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForDetailTree(TSharedRef<FDetailTreeNode> InTreeNode, TArray< TSharedRef<FDetailTreeNode> >& OutChildren)"
  },
  {
    "label": "OnGenerateRowForDetailTree()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForDetailTree(TSharedRef<FDetailTreeNode> InTreeNode, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnRowReleasedForDetailTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRowReleasedForDetailTree(const TSharedRef<ITableRow>& TableRow)"
  },
  {
    "label": "IsShowOnlyModifiedChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowOnlyModifiedChecked()"
  },
  {
    "label": "OnCustomFilterClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCustomFilterClicked()"
  },
  {
    "label": "OnShowAllAdvancedClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowAllAdvancedClicked()"
  },
  {
    "label": "OnShowOnlyAllowedClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowOnlyAllowedClicked()"
  },
  {
    "label": "OnShowAllChildrenIfCategoryMatchesClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowAllChildrenIfCategoryMatchesClicked()"
  },
  {
    "label": "OnShowKeyableClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowKeyableClicked()"
  },
  {
    "label": "OnShowAnimatedClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowAnimatedClicked()"
  },
  {
    "label": "FilterRootNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterRootNode(const TSharedPtr<FComplexPropertyNode>& RootNode)"
  },
  {
    "label": "UpdateFilteredDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilteredDetails()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& InSearchText, ETextCommit::Type InCommitType)"
  },
  {
    "label": "UpdatePropertyAllowList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertyAllowList(const TSet<FPropertyPath>& InAllowedProperties)"
  },
  {
    "label": "GetNameAreaWidget()",
    "kind": "Method",
    "detail": "Function (CurrentFilter . PropertyAllowList = InAllowedProperties ; } TSharedPtr<SWidget>)",
    "insertText": "GetNameAreaWidget()"
  },
  {
    "label": "SetNameAreaCustomContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNameAreaCustomContent(TSharedRef<SWidget>& InCustomContent)"
  },
  {
    "label": "GetFilterAreaWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetFilterAreaWidget()"
  },
  {
    "label": "GetHostCommandList()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FUICommandList>)",
    "insertText": "GetHostCommandList()"
  },
  {
    "label": "GetHostTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager>)",
    "insertText": "GetHostTabManager()"
  },
  {
    "label": "SetHostTabManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHostTabManager(TSharedPtr<FTabManager> InTabManager)"
  },
  {
    "label": "FilterView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterView(const FString& InFilterText)"
  },
  {
    "label": "GetFilterBoxVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFilterBoxVisibility()"
  },
  {
    "label": "SetCustomFilterDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomFilterDelegate(FSimpleDelegate InOverride)"
  },
  {
    "label": "SetCustomFilterLabel()",
    "kind": "Method",
    "detail": "Function (CustomFilterDelegate = InOverride ; } void)",
    "insertText": "SetCustomFilterLabel(FText InText)"
  },
  {
    "label": "GetCustomFilterLabel()",
    "kind": "Method",
    "detail": "Function (CustomFilterLabel = InText ; } FText)",
    "insertText": "GetCustomFilterLabel()"
  },
  {
    "label": "HandlePendingCleanupTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePendingCleanupTimer()"
  },
  {
    "label": "HandlePendingCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePendingCleanup()"
  },
  {
    "label": "SetPendingRefreshTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPendingRefreshTimer()"
  },
  {
    "label": "ClearPendingRefreshTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPendingRefreshTimer()"
  },
  {
    "label": "HandlePendingRefreshTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePendingRefreshTimer()"
  },
  {
    "label": "SavePreSearchExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreSearchExpandedItems()"
  },
  {
    "label": "RestorePreSearchExpandedItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestorePreSearchExpandedItems()"
  },
  {
    "label": "GetMutableViewConfig()",
    "kind": "Method",
    "detail": "Function (struct FDetailsViewConfig*)",
    "insertText": "GetMutableViewConfig()"
  },
  {
    "label": "GetConstViewConfig()",
    "kind": "Method",
    "detail": "Function (const FDetailsViewConfig*)",
    "insertText": "GetConstViewConfig()"
  },
  {
    "label": "SaveViewConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveViewConfig()"
  },
  {
    "label": "ClearKeyboardFocusIfWithin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearKeyboardFocusIfWithin(const TSharedRef<SWidget>& Widget)"
  }
]