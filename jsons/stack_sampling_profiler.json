[
  {
    "label": "Unwinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Unwinder"
  },
  {
    "label": "StackSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StackSampler"
  },
  {
    "label": "StackSamplerTestDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StackSamplerTestDelegate"
  },
  {
    "label": "ProfileBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProfileBuilder"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "SamplingThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SamplingThread"
  },
  {
    "label": "IsSupportedForCurrentPlatform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupportedForCurrentPlatform()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "AddAuxUnwinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAuxUnwinder(std::unique_ptr<Unwinder> unwinder)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsSamplingThreadRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSamplingThreadRunning()"
  },
  {
    "label": "DisableIdleShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableIdleShutdown()"
  },
  {
    "label": "PerformSamplingThreadIdleShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformSamplingThreadIdleShutdown(\n        bool simulate_intervening_start)"
  },
  {
    "label": "GetNextSampleTime()",
    "kind": "Method",
    "detail": "Function (TimeTicks)",
    "insertText": "GetNextSampleTime(TimeTicks scheduled_current_sample_time,\n                                       TimeDelta sampling_interval,\n                                       TimeTicks now)"
  },
  {
    "label": "ApplyMetadataToPastSamplesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMetadataToPastSamplesImpl(\n      TimeTicks period_start,\n      TimeTicks period_end,\n      uint64_t name_hash,\n      absl::optional<int64_t> key,\n      int64_t value,\n      absl::optional<PlatformThreadId> thread_id)"
  },
  {
    "label": "ApplyMetadataToPastSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMetadataToPastSamples(\n      TimeTicks period_start,\n      TimeTicks period_end,\n      uint64_t name_hash,\n      absl::optional<int64_t> key,\n      int64_t value,\n      absl::optional<PlatformThreadId> thread_id)"
  }
]