[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FSkeletalMaterial",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMaterial"
  },
  {
    "label": "FSkeletalMeshLODInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshLODInfo"
  },
  {
    "label": "FSkinnedAssetBuildContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetBuildContext"
  },
  {
    "label": "FSkinnedAssetPostLoadContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetPostLoadContext"
  },
  {
    "label": "FSkinnedAsyncTaskContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAsyncTaskContext"
  },
  {
    "label": "FVertexFactoryType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactoryType"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UMeshDeformer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshDeformer"
  },
  {
    "label": "UMorphTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMorphTarget"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FSkinnedAssetAsyncBuildTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinnedAssetAsyncBuildTask"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USkinnedAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkinnedAsset"
  },
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FSkeletalMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshRenderData"
  },
  {
    "label": "USkeletalMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshSocket"
  },
  {
    "label": "USkeletalMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshSocket"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FSkinWeightProfilesData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightProfilesData"
  },
  {
    "label": "FSkeletalMeshModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshModel"
  },
  {
    "label": "may",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "may"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "FSkinnedAssetCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetCompilingManager"
  },
  {
    "label": "FSkinnedAssetAsyncBuildWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetAsyncBuildWorker"
  },
  {
    "label": "USkinnedAsset()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "USkinnedAsset(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetRefSkeleton, static const FReferenceSkeleton Dummy; return Dummy;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetLODInfo, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetShadowPhysicsAsset, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetComposedRefPoseMatrix, return FMatrix::Identity;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetComposedRefPoseMatrix, return FMatrix::Identity;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetUVChannelData, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetSupportRayTracing, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetRayTracingMinLOD, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetRefBasesInvMatrix, static const TArray<FMatrix44f> Dummy; return Dummy;)"
  },
  {
    "label": "GetMeshLodInfoDummyArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetMeshLodInfoDummyArray()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetLODInfoArray, return GetMeshLodInfoDummyArray()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetResourceForRendering, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetDefaultMinLod, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetMinLod, static const FPerPlatformInt Dummy;  return Dummy;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetPhysicsAsset, return nullptr;)"
  },
  {
    "label": "GetSkeletalMaterialDummyArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetSkeletalMaterialDummyArray()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetMaterials, return GetSkeletalMaterialDummyArray()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetLODNum, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::IsMaterialUsed, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetBounds, return FBoxSphereBounds()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetActiveSocketList, static TArray<class USkeletalMeshSocket*> Dummy; return Dummy;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::FindSocket, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::FindSocketInfo, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetSkeleton, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetDefaultMeshDeformer, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetOverlayMaterial, return nullptr;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetOverlayMaterialMaxDrawDistance, return 0.f;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::IsValidLODIndex, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetMinLodIdx, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::NeedCPUData, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetHasVertexColors, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetPlatformMinLODIdx, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetDisableBelowMinLodStripping, static const FPerPlatformBool Dummy; return Dummy;)"
  },
  {
    "label": "GetPathName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPathName(nullptr)"
  },
  {
    "label": "GetVertexFactoryTypesPerMaterialIndex()",
    "kind": "Method",
    "detail": "Function (FPSOPrecacheVertexFactoryDataPerMaterialIndexList)",
    "insertText": "GetVertexFactoryTypesPerMaterialIndex(USkinnedMeshComponent* SkinnedMeshComponent, int32 MinLODIndex, bool bCPUSkin, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "GetLODPathName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLODPathName(const USkinnedAsset* Mesh, int32 LODIndex)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::IsInitialBuildDone, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetEnableLODStreaming, return false;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetMaxNumStreamedLODs, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetMaxNumOptionalLODs, return 0;)"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(USkinnedAsset::GetImportedModel, return nullptr;)"
  },
  {
    "label": "UpdateUVChannelData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUVChannelData(bool bResetOverrides)"
  },
  {
    "label": "AcquireAsyncProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireAsyncProperty(uint64 AsyncProperties = MAX_uint64, ESkinnedAssetAsyncPropertyLockType LockType = ESkinnedAssetAsyncPropertyLockType::ReadWrite)"
  },
  {
    "label": "ReleaseAsyncProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAsyncProperty(uint64 AsyncProperties = MAX_uint64, ESkinnedAssetAsyncPropertyLockType LockType = ESkinnedAssetAsyncPropertyLockType::ReadWrite)"
  },
  {
    "label": "TryCancelAsyncTasks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCancelAsyncTasks()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"\")"
  }
]