[
  {
    "label": "A",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "A"
  },
  {
    "label": "B",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "B"
  },
  {
    "label": "Expectation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expectation"
  },
  {
    "label": "ExpectationSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpectationSet"
  },
  {
    "label": "FunctionMocker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionMocker"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ExpectationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpectationBase"
  },
  {
    "label": "TypedExpectation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypedExpectation"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "ExpectationTester",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpectationTester"
  },
  {
    "label": "Mock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mock"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UntypedActionResultHolderBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedActionResultHolderBase"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "UntypedFunctionMockerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedFunctionMockerBase"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UntypedOnCallSpecBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedOnCallSpecBase"
  },
  {
    "label": "Clause",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Clause"
  },
  {
    "label": "members",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "members"
  },
  {
    "label": "UntypedOnCallSpecBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedOnCallSpecBase"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "OnCallSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnCallSpec"
  },
  {
    "label": "OnCallSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnCallSpec"
  },
  {
    "label": "CallReaction",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CallReaction"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "NiceMock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NiceMock"
  },
  {
    "label": "NaggyMock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NaggyMock"
  },
  {
    "label": "StrictMock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrictMock"
  },
  {
    "label": "Mock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mock"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "ExpectationSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpectationSet"
  },
  {
    "label": "Sequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sequence"
  },
  {
    "label": "Less",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Less"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ExpectationSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpectationSet"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "Sequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sequence"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "GTEST_API_",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GTEST_API_"
  },
  {
    "label": "UntypedFunctionMockerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedFunctionMockerBase"
  },
  {
    "label": "Clause",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Clause"
  },
  {
    "label": "members",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "members"
  },
  {
    "label": "TypedExpectation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypedExpectation"
  },
  {
    "label": "ExpectationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExpectationBase"
  },
  {
    "label": "TypedExpectation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypedExpectation"
  },
  {
    "label": "FunctionMocker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionMocker"
  },
  {
    "label": "TypedExpectation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypedExpectation"
  },
  {
    "label": "MockSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockSpec"
  },
  {
    "label": "MockSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockSpec"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "internal"
  },
  {
    "label": "MockSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockSpec"
  },
  {
    "label": "ReferenceOrValueWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReferenceOrValueWrapper"
  },
  {
    "label": "ReferenceOrValueWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReferenceOrValueWrapper"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UntypedActionResultHolderBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UntypedActionResultHolderBase"
  },
  {
    "label": "ActionResultHolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ActionResultHolder"
  },
  {
    "label": "ActionResultHolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ActionResultHolder"
  },
  {
    "label": "FunctionMocker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionMocker"
  },
  {
    "label": "FunctionMocker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionMocker"
  },
  {
    "label": "MockFoo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockFoo"
  },
  {
    "label": "MockSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockSpec"
  },
  {
    "label": "TypedExpectation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypedExpectation"
  },
  {
    "label": "FunctionMocker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionMocker"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "MockFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockFunction"
  },
  {
    "label": "MockFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockFunction"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "MockFoo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockFoo"
  },
  {
    "label": "uses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "uses"
  },
  {
    "label": "GTEST_DECLARE_STATIC_MUTEX_()",
    "kind": "Method",
    "detail": "Function (GTEST_API_)",
    "insertText": "GTEST_DECLARE_STATIC_MUTEX_(g_gmock_mutex)"
  },
  {
    "label": "UntypedFunctionMockerBase()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UntypedFunctionMockerBase()"
  },
  {
    "label": "GTEST_LOCK_EXCLUDED_()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GTEST_LOCK_EXCLUDED_(g_gmock_mutex)"
  },
  {
    "label": "GTEST_LOCK_EXCLUDED_()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GTEST_LOCK_EXCLUDED_(g_gmock_mutex)"
  },
  {
    "label": "GetHandleOf()",
    "kind": "Method",
    "detail": "Function (Expectation)",
    "insertText": "GetHandleOf(ExpectationBase* exp)"
  },
  {
    "label": "InSequence()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "InSequence()"
  },
  {
    "label": "GTEST_EXCLUSIVE_LOCK_REQUIRED_()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex)"
  },
  {
    "label": "SpecifyCardinality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpecifyCardinality(const Cardinality& cardinality)"
  },
  {
    "label": "GTEST_EXCLUSIVE_LOCK_REQUIRED_()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex)"
  },
  {
    "label": "GTEST_EXCLUSIVE_LOCK_REQUIRED_()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GTEST_EXCLUSIVE_LOCK_REQUIRED_(g_gmock_mutex)"
  },
  {
    "label": "GTEST_LOCK_EXCLUDED_()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "GTEST_LOCK_EXCLUDED_(mutex_)"
  },
  {
    "label": "UntypedTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UntypedTimes(const Cardinality& a_cardinality)"
  },
  {
    "label": "LogWithLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogWithLocation(testing::internal::LogSeverity severity,\n                                const char* file, int line,\n                                const std::string& message)"
  },
  {
    "label": "l()",
    "kind": "Method",
    "detail": "Function (MutexLock)",
    "insertText": "l(&g_gmock_mutex)"
  },
  {
    "label": "untyped_expectation()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<ExpectationBase>)",
    "insertText": "untyped_expectation(expectation)"
  },
  {
    "label": "l()",
    "kind": "Method",
    "detail": "Function (MutexLock)",
    "insertText": "l(&g_gmock_mutex)"
  },
  {
    "label": "ReportUninterestingCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportUninterestingCall(CallReaction reaction, const std::string& msg)"
  }
]