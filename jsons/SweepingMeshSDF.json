[
  {
    "label": "TriangleMeshType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangleMeshType"
  },
  {
    "label": "TSweepingMeshSDF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSweepingMeshSDF"
  },
  {
    "label": "EComputeModes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EComputeModes"
  },
  {
    "label": "EInsideModes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInsideModes"
  },
  {
    "label": "CellSizeType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CellSizeType(1)"
  },
  {
    "label": "failed()",
    "kind": "Method",
    "detail": "Function (or)",
    "insertText": "failed(e.g. due to invalid arguments)"
  },
  {
    "label": "Compute()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Compute(UseOrigin, UseDims)"
  },
  {
    "label": "failed()",
    "kind": "Method",
    "detail": "Function (or)",
    "insertText": "failed(e.g. due to invalid arguments)"
  },
  {
    "label": "in()",
    "kind": "Method",
    "detail": "Function (intersections)",
    "insertText": "in(I-1,I]x{J}x{K}\n\t\tFDenseGrid3i& intersection_count = IntersectionsGrid;\n\t\tIntersectionsGrid.Resize(NI, NJ, NK)"
  },
  {
    "label": "compute_signs()",
    "kind": "Method",
    "detail": "Function (counts)",
    "insertText": "compute_signs(NI, NJ, NK, Distances, intersection_count)"
  },
  {
    "label": "in()",
    "kind": "Method",
    "detail": "Function (intersections)",
    "insertText": "in(I-1,I]x{J}x{K}\n\t\tFDenseGrid3i& intersection_count = IntersectionsGrid;\n\t\tIntersectionsGrid.Resize(NI, NJ, NK)"
  },
  {
    "label": "GridLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "GridLock(&GridSections[lock_idx])"
  },
  {
    "label": "compute_signs()",
    "kind": "Method",
    "detail": "Function (counts)",
    "insertText": "compute_signs(NI, NJ, NK, Distances, intersection_count)"
  },
  {
    "label": "in()",
    "kind": "Method",
    "detail": "Function (intersections)",
    "insertText": "in(I-1,I]x{J}x{K}\n\t\tFDenseGrid3i& intersection_count = IntersectionsGrid;\n\t\tIntersectionsGrid.Resize(NI, NJ, NK)"
  },
  {
    "label": "compute_signs()",
    "kind": "Method",
    "detail": "Function (counts)",
    "insertText": "compute_signs(NI, NJ, NK, Distances, intersection_count)"
  },
  {
    "label": "in()",
    "kind": "Method",
    "detail": "Function (intersections)",
    "insertText": "in(I-1,I]x{J}x{K}\n\t\tFDenseGrid3i& intersection_count = IntersectionsGrid;\n\t\tIntersectionsGrid.Resize(NI, NJ, NK)"
  },
  {
    "label": "compute_signs()",
    "kind": "Method",
    "detail": "Function (counts)",
    "insertText": "compute_signs(NI, NJ, NK, Distances, intersection_count)"
  },
  {
    "label": "Distance()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Distance(x0, w23*x1 + w31*x2 + w12*x3)"
  },
  {
    "label": "Distance()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Distance(x0, w23*x1 + w31*x2 + w12*x3)"
  }
]