[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxSymbol()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_SYMBOL_H_ # define _FBXSDK_CORE_SYMBOL_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / core / base / fbxmap . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxSymbol { public :)",
    "insertText": "FbxSymbol(const char* pName, const char* pRealm)"
  },
  {
    "label": "FbxSymbol()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxSymbol()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "GetID()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(FbxSymbol const& pSymbol)"
  },
  {
    "label": "FbxStringSymbol()",
    "kind": "Method",
    "detail": "Function (private : unsigned int mID ; } ; typedef FbxMap<FbxString,int,FbxStringCompare> FbxStringSymbolMap ; class FBXSDK_DLL FbxStringSymbol { public :)",
    "insertText": "FbxStringSymbol()"
  },
  {
    "label": "FbxStringSymbol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxStringSymbol(const char* pName)"
  },
  {
    "label": "FbxStringSymbol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxStringSymbol(const FbxStringSymbol& pOther)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (operator const)",
    "insertText": "char()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "AllocateGlobalStringSymbolMap()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AllocateGlobalStringSymbolMap()"
  },
  {
    "label": "FreeGlobalStringSymbolMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeGlobalStringSymbolMap()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxStringSymbol&)",
    "insertText": "operator(const char* pName)"
  }
]