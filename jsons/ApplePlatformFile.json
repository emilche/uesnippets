[
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "dirent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dirent"
  },
  {
    "label": "stat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stat"
  },
  {
    "label": "NormalizeFilename()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatformFile . h \" template<FuncType> class TFunctionRef ; class FApplePlatformFile : public IPhysicalPlatformFile { protected : FString)",
    "insertText": "NormalizeFilename(const TCHAR* Filename)"
  },
  {
    "label": "NormalizeDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "NormalizeDirectory(const TCHAR* Directory)"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (public : using IPhysicalPlatformFile::IterateDirectory ; using IPhysicalPlatformFile::IterateDirectoryStat ; bool)",
    "insertText": "FileExists(const TCHAR* Filename)"
  },
  {
    "label": "FileSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "FileSize(const TCHAR* Filename)"
  },
  {
    "label": "DeleteFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteFile(const TCHAR* Filename)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly(const TCHAR* Filename)"
  },
  {
    "label": "MoveFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveFile(const TCHAR* To, const TCHAR* From)"
  },
  {
    "label": "SetReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetReadOnly(const TCHAR* Filename, bool bNewReadOnlyValue)"
  },
  {
    "label": "GetTimeStamp()",
    "kind": "Method",
    "detail": "Function (FDateTime)",
    "insertText": "GetTimeStamp(const TCHAR* Filename)"
  },
  {
    "label": "SetTimeStamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeStamp(const TCHAR* Filename, const FDateTime DateTime)"
  },
  {
    "label": "GetAccessTimeStamp()",
    "kind": "Method",
    "detail": "Function (FDateTime)",
    "insertText": "GetAccessTimeStamp(const TCHAR* Filename)"
  },
  {
    "label": "GetFilenameOnDisk()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilenameOnDisk(const TCHAR* Filename)"
  },
  {
    "label": "IsSymlink()",
    "kind": "Method",
    "detail": "Function (ESymlinkResult)",
    "insertText": "IsSymlink(const TCHAR* Filename)"
  },
  {
    "label": "OpenRead()",
    "kind": "Method",
    "detail": "Function (IFileHandle*)",
    "insertText": "OpenRead(const TCHAR* Filename, bool bAllowWrite = false)"
  },
  {
    "label": "OpenWrite()",
    "kind": "Method",
    "detail": "Function (IFileHandle*)",
    "insertText": "OpenWrite(const TCHAR* Filename, bool bAppend = false, bool bAllowRead = false)"
  },
  {
    "label": "DirectoryExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DirectoryExists(const TCHAR* Directory)"
  },
  {
    "label": "CreateDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateDirectory(const TCHAR* Directory)"
  },
  {
    "label": "DeleteDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteDirectory(const TCHAR* Directory)"
  },
  {
    "label": "GetStatData()",
    "kind": "Method",
    "detail": "Function (FFileStatData)",
    "insertText": "GetStatData(const TCHAR* FilenameOrDirectory)"
  },
  {
    "label": "IterateDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IterateDirectory(const TCHAR* Directory, FDirectoryVisitor& Visitor)"
  },
  {
    "label": "IterateDirectoryStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IterateDirectoryStat(const TCHAR* Directory, FDirectoryStatVisitor& Visitor)"
  },
  {
    "label": "CopyFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFile(const TCHAR* To, const TCHAR* From, EPlatformFileRead ReadFlags = EPlatformFileRead::None, EPlatformFileWrite WriteFlags = EPlatformFileWrite::None)"
  },
  {
    "label": "IterateDirectoryCommon()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IterateDirectoryCommon(const TCHAR* Directory, const TFunctionRef<bool(struct dirent*)>& Visitor)"
  },
  {
    "label": "Stat()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stat(const TCHAR* Filename, struct stat* OutFileInfo)"
  }
]