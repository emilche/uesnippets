[
  {
    "label": "FAssetRegistryTagsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryTagsContext"
  },
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "UUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserWidget"
  },
  {
    "label": "UWidgetAnimation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetAnimation"
  },
  {
    "label": "UWidgetBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprintGeneratedClass"
  },
  {
    "label": "UWidgetBlueprintGeneratedClassExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprintGeneratedClassExtension"
  },
  {
    "label": "UWidgetTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetTree"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDelegateRuntimeBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelegateRuntimeBinding"
  },
  {
    "label": "FWidgetBlueprintGeneratedClassDelegates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintGeneratedClassDelegates"
  },
  {
    "label": "FWidgetBlueprintCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintCompilerContext"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Binding / DynamicPropertyPath . h \" # include \" Engine / BlueprintGeneratedClass . h \" # include \" FieldNotificationId . h \" # include \" WidgetBlueprintGeneratedClass . generated . h \" class FAssetRegistryTagsContext ; class UWidget ; class UUserWidget ; class UWidgetAnimation ; class UWidgetBlueprintGeneratedClass ; class UWidgetBlueprintGeneratedClassExtension ; class UWidgetTree ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Function,Property } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITOR class FWidgetBlueprintGeneratedClassDelegates { public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FGetAssetTagsWithContext, const UWidgetBlueprintGeneratedClass*, FAssetRegistryTagsContext)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FGetAssetTags, const UWidgetBlueprintGeneratedClass*, TArray<UObject::FAssetRegistryTag>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FCollectSaveOverrides, const UWidgetBlueprintGeneratedClass*, FObjectCollectSaveOverridesContext)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; # endif)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UWidgetBlueprintGeneratedClass()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UWidgetBlueprintGeneratedClass()"
  },
  {
    "label": "GetWidgetTreeArchetype()",
    "kind": "Method",
    "detail": "Function (public : UWidgetTree*)",
    "insertText": "GetWidgetTreeArchetype()"
  },
  {
    "label": "GetNamedSlotArchetypeContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNamedSlotArchetypeContent(TFunctionRef<void(FName , UWidget* )> Predicate)"
  },
  {
    "label": "FindWidgetTreeOwningClass()",
    "kind": "Method",
    "detail": "Function (UWidgetBlueprintGeneratedClass*)",
    "insertText": "FindWidgetTreeOwningClass()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "NeedsLoadForServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsLoadForServer()"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "CollectSaveOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectSaveOverrides(FObjectCollectSaveOverridesContext SaveContext)"
  },
  {
    "label": "PurgeClass()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PurgeClass(bool bRecompilingOnLoad)"
  },
  {
    "label": "InitializeWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeWidget(UUserWidget* UserWidget)"
  },
  {
    "label": "InitializeWidgetStatic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeWidgetStatic(UUserWidget* UserWidget , const UClass* InClass , UWidgetTree* InWidgetTree , const UClass* InWidgetTreeWidgetClass , const TArrayView<UWidgetAnimation*> InAnimations , const TArrayView<const FDelegateRuntimeBinding> InBindings)"
  },
  {
    "label": "ClassRequiresNativeTick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClassRequiresNativeTick()"
  },
  {
    "label": "GetExtension()",
    "kind": "Method",
    "detail": "Function (# endif template<ExtensionType> ExtensionType*)",
    "insertText": "GetExtension(bool bIncludeSuper = true)"
  },
  {
    "label": "GetExtension()",
    "kind": "Method",
    "detail": "Function (} UWidgetBlueprintGeneratedClassExtension*)",
    "insertText": "GetExtension(TSubclassOf<UWidgetBlueprintGeneratedClassExtension> InExtensionType, bool bIncludeSuper = true)"
  },
  {
    "label": "GetExtensions()",
    "kind": "Method",
    "detail": "Function (TArray<UWidgetBlueprintGeneratedClassExtension*>)",
    "insertText": "GetExtensions(TSubclassOf<UWidgetBlueprintGeneratedClassExtension> InExtensionType, bool bIncludeSuper = true)"
  },
  {
    "label": "ForEachExtension()",
    "kind": "Method",
    "detail": "Function (template<Predicate> void)",
    "insertText": "ForEachExtension(Predicate Pred, bool bIncludeSuper = true)"
  },
  {
    "label": "Pred()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pred(Extension)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(bIncludeSuper)"
  },
  {
    "label": "ForEachExtension()",
    "kind": "Method",
    "detail": "Function (ParentClass ->)",
    "insertText": "ForEachExtension(MoveTemp(Pred))"
  },
  {
    "label": "InitializeBindingsStatic()",
    "kind": "Method",
    "detail": "Function (} } } private : void)",
    "insertText": "InitializeBindingsStatic(UUserWidget* UserWidget, const TArrayView<const FDelegateRuntimeBinding> InBindings, const TMap<FName, FObjectPropertyBase*>& InPropertyMap)"
  },
  {
    "label": "BindAnimationsStatic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindAnimationsStatic(UUserWidget* Instance, const TArrayView<UWidgetAnimation*> InAnimations, const TMap<FName, FObjectPropertyBase*>& InPropertyMap)"
  },
  {
    "label": "GetExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExtensions(TArray<UWidgetBlueprintGeneratedClassExtension*>& OutExtensions, TSubclassOf<UWidgetBlueprintGeneratedClassExtension> InExtensionType, bool bIncludeSuper)"
  }
]