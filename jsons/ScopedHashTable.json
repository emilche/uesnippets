[
  {
    "label": "ScopedHashTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTable"
  },
  {
    "label": "ScopedHashTableVal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTableVal"
  },
  {
    "label": "ScopedHashTableScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTableScope"
  },
  {
    "label": "ScopedHashTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTable"
  },
  {
    "label": "ScopedHashTableIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTableIterator"
  },
  {
    "label": "ScopedHashTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTable"
  },
  {
    "label": "ScopedHashTableScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedHashTableScope"
  },
  {
    "label": "Scope1()",
    "kind": "Method",
    "detail": "Function (int>)",
    "insertText": "Scope1(HT)"
  },
  {
    "label": "Scope2()",
    "kind": "Method",
    "detail": "Function (int>)",
    "insertText": "Scope2(HT)"
  },
  {
    "label": "ScopedHashTableScope()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScopedHashTableScope(ScopedHashTable<K, V, KInfo, AllocatorTy> &HT)"
  },
  {
    "label": "V()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "V()"
  },
  {
    "label": "iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "iterator(0)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "end()"
  },
  {
    "label": "iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "iterator(I->second)"
  }
]