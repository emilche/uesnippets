[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DxcShaderInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxcShaderInfo"
  },
  {
    "label": "DxcShaderBytecode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxcShaderBytecode"
  },
  {
    "label": "DxcExportDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxcExportDesc"
  },
  {
    "label": "__declspec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__declspec"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# ifndef __DXC_DXR_FALLBACK_COMPILER_API__ # define __DXC_DXR_FALLBACK_COMPILER_API__ # include \" dxcapi . h \" enum class ShaderType : unsigned int { Raygen,AnyHit,ClosestHit,Intersection,Miss,Callable,Lib,} ; struct DxcShaderInfo { UINT32 Identifier ; UINT32 StackSize ; ShaderType Type ; } ; struct DxcShaderBytecode { LPBYTE pData ; UINT32 Size ; } ; struct DxcExportDesc { LPCWSTR ExportToRename ; LPCWSTR ExportName ; } ; struct)",
    "insertText": "__declspec(uuid(\"76bb3c85-006d-4b72-9e10-63cd97df57f0\"))"
  },
  {
    "label": "SetFindCalledShaders()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetFindCalledShaders(bool val)"
  },
  {
    "label": "SetDebugOutput()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetDebugOutput(int val)"
  },
  {
    "label": "RenameAndLink()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "RenameAndLink(DxcShaderBytecode *pLibs, UINT32 libCount, DxcExportDesc *pExports, UINT32 ExportCount, IDxcOperationResult **ppResult)"
  },
  {
    "label": "PatchShaderBindingTables()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "PatchShaderBindingTables(const LPCWSTR pEntryName, DxcShaderBytecode *pShaderBytecode, void *pShaderInfo, IDxcOperationResult **ppResult)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "Compile(DxcShaderBytecode *pLibs, UINT32 libCount, const LPCWSTR *pShaderNames, DxcShaderInfo *pShaderInfo, UINT32 shaderCount, UINT32 maxAttributeSize, IDxcOperationResult * *ppResult)"
  },
  {
    "label": "Link()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "Link(const LPCWSTR pEntryName, IDxcBlob **pLibs, UINT32 libCount, const LPCWSTR *pShaderNames, DxcShaderInfo *pShaderInfo, UINT32 shaderCount, UINT32 maxAttributeSize, UINT32 stackSizeInBytes, IDxcOperationResult * *ppResult)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} ; # ifdef _MSC_VER # define CLSID_SCOPE)",
    "insertText": "__declspec(selectany)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (0 x76bb3c85,0 x006d,0 x4b72,{ 0 x9e,0 x10,0 x63,0 xcd,0 x97,0 xdf,0 x57,0 xf0 } } ; typedef)",
    "insertText": "HRESULT(__stdcall *DxcCreateDxrFallbackCompilerProc)(REFCLSID rclsid, REFIID riid, LPVOID *ppv)"
  }
]