[
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (h)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(OodleDataCompression, Log, All)"
  },
  {
    "label": "ECompressorToString()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "ECompressorToString(ECompressor InCompressor, const TCHAR** OutName)"
  },
  {
    "label": "ECompressorFromString()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "ECompressorFromString(const class FString& InName, ECompressor& OutCompressor)"
  },
  {
    "label": "ECompressionLevelFromValue()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "ECompressionLevelFromValue(int8 InValue, ECompressionLevel& OutLevel)"
  },
  {
    "label": "ECompressionLevelToString()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "ECompressionLevelToString(ECompressionLevel InLevel, const TCHAR** OutName)"
  },
  {
    "label": "ECompressionLevelFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ECompressionLevelFromString(const TCHAR* InName, ECompressionLevel& OutLevel)"
  },
  {
    "label": "GetCommonUsageFromLegacyCompressionFlags()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "GetCommonUsageFromLegacyCompressionFlags(ECompressionFlags Flags)"
  },
  {
    "label": "GetCompressorAndLevelForCommonUsage()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "GetCompressorAndLevelForCommonUsage(ECompressionCommonUsage Usage,ECompressor & OutCompressor,ECompressionLevel & OutLevel)"
  },
  {
    "label": "CompressedBufferSizeNeeded()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "CompressedBufferSizeNeeded(int64 UncompressedSize)"
  },
  {
    "label": "GetMaximumCompressedSize()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "GetMaximumCompressedSize(int64 UncompressedSize)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Compress(\n\t\t\t\t\t\t\tvoid * OutCompressedData, int64 CompressedBufferSize,\n\t\t\t\t\t\t\tconst void * InUncompressedData, int64 UncompressedSize,\n\t\t\t\t\t\t\tECompressor Compressor,\n\t\t\t\t\t\t\tECompressionLevel Level,\n\t\t\t\t\t\t\tbool CompressIndependentChunks = false,\n\t\t\t\t\t\t\tint64 DictionaryBackup = 0)"
  },
  {
    "label": "CompressParallel()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "CompressParallel(\n\t\t\t\t\t\t\tvoid * OutCompressedData, int64 CompressedBufferSize,\n\t\t\t\t\t\t\tconst void * InUncompressedData, int64 UncompressedSize,\n\t\t\t\t\t\t\tECompressor Compressor,\tECompressionLevel Level,\n\t\t\t\t\t\t\tbool CompressIndependentChunks = false)"
  },
  {
    "label": "CompressParallel()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "CompressParallel(\n\t\t\t\t\t\t\tTArray64<uint8> & OutCompressedData,\n\t\t\t\t\t\t\tconst void * InUncompressedData, int64 UncompressedSize,\n\t\t\t\t\t\t\tECompressor Compressor,\tECompressionLevel Level,\n\t\t\t\t\t\t\tbool CompressIndependentChunks = false)"
  },
  {
    "label": "Decompress()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "Decompress(\n\t\t\t\t\t\tvoid * OutUncompressedData, int64 UncompressedSize,\n\t\t\t\t\t\tconst void * InCompressedData, int64 CompressedSize\n\t\t\t\t\t\t)"
  },
  {
    "label": "DecompressParallel()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "DecompressParallel(\n\t\t\t\t\t\tvoid * OutUncompressedData, int64 UncompressedSize,\n\t\t\t\t\t\tconst void * InCompressedData, int64 CompressedSize\n\t\t\t\t\t\t)"
  },
  {
    "label": "CompressionFormatInitOnFirstUseFromLock()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "CompressionFormatInitOnFirstUseFromLock()"
  },
  {
    "label": "StartupPreInit()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "StartupPreInit()"
  }
]