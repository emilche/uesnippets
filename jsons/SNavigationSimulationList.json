[
  {
    "label": "SListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SListView"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SGridPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGridPanel"
  },
  {
    "label": "SNavigationSimulationListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNavigationSimulationListBase"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWrapBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWrapBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SDetailView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDetailView"
  },
  {
    "label": "SNavigationSimulationSnapshotList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNavigationSimulationSnapshotList"
  },
  {
    "label": "SNavigationSimulationLiveList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNavigationSimulationLiveList"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" INavigationEventSimulationView . h \" # include \" Models / NavigationSimulationNode . h \" # include \" SlateNavigationEventSimulator . h \" # include \" ISlateReflectorModule . h \" template<ItemType> class SListView ; class ITableRow ; class SGridPanel ; class SNavigationSimulationListBase ; class SScrollBox ; class STableViewBase ; class SWrapBox ; class SWidget ; namespace SNavigationSimulationListInternal { class SDetailView ; })",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSnapshotWidgetAction, FNavigationSimulationWidgetInfo::TPointerAsInt)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (class SNavigationSimulationListBase : public INavigationEventSimulationView { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SNavigationSimulationListBase) : _ListItemsSource(nullptr)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(const TArray<FNavigationSimulationWidgetNodePtr>*, ListItemsSource) SLATE_END_ARGS() void Construct(const FArguments& Args, ENavigationSimulationNodeType NodeType)"
  },
  {
    "label": "SetSimulationResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSimulationResult(TArray<FSlateNavigationEventSimulator::FSimulationResult> SimulationResult)"
  },
  {
    "label": "SetListItemsSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetListItemsSource(const TArray<FNavigationSimulationWidgetNodePtr>& ListItems)"
  },
  {
    "label": "SelectLiveWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectLiveWidget(const TSharedPtr<const SWidget>& Widget)"
  },
  {
    "label": "SelectSnapshotWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectSnapshotWidget(FNavigationSimulationWidgetInfo::TPointerAsInt SnapshotWidget)"
  },
  {
    "label": "HandleSourceListSelectionChangedImpl()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "HandleSourceListSelectionChangedImpl(const FNavigationSimulationWidgetNodePtr& Item)"
  },
  {
    "label": "HandleNavigateToWidgetImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNavigateToWidgetImpl(TWeakPtr<const SWidget> LiveWidget, FNavigationSimulationWidgetInfo::TPointerAsInt SnapshotWidget)"
  },
  {
    "label": "GetSelectedItems()",
    "kind": "Method",
    "detail": "Function (TArray<FNavigationSimulationWidgetNodePtr>)",
    "insertText": "GetSelectedItems()"
  },
  {
    "label": "GetItemsSource()",
    "kind": "Method",
    "detail": "Function (const TArray<FNavigationSimulationWidgetNodePtr>&)",
    "insertText": "GetItemsSource()"
  },
  {
    "label": "HandleSourceListSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSourceListSelectionChanged(FNavigationSimulationWidgetNodePtr Item, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "HandleNavigateToLiveWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNavigateToLiveWidget(TWeakPtr<const SWidget> LiveWidget)"
  },
  {
    "label": "HandleNavigateToSnapshotWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNavigateToSnapshotWidget(FNavigationSimulationWidgetInfo::TPointerAsInt SnapshotWidget)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (private : ENavigationSimulationNodeType NodeType ; TSharedPtr<SListView<FNavigationSimulationWidgetNodePtr>> ListView ; TSharedPtr<SNavigationSimulationListInternal::SDetailView> ElementDetail ; TArray<FNavigationSimulationWidgetNodePtr> ItemsSource ; protected : bool bIsInSelectionGuard ; } ; class SNavigationSimulationSnapshotList : public SNavigationSimulationListBase { public : void)",
    "insertText": "Construct(const FArguments& Args, const FOnSnapshotWidgetAction& OnSnapshotWidgetSelected, const FOnSnapshotWidgetAction& OnNavigateToSnapshotWidget)"
  },
  {
    "label": "SelectWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectWidget(const TSharedPtr<SWidget>& Widget)"
  },
  {
    "label": "PaintSimuationResult()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "PaintSimuationResult(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (private : FOnSnapshotWidgetAction OnSnapshotWidgetSelected ; FOnSnapshotWidgetAction OnNavigateToSnapshotWidget ; } ; class SNavigationSimulationLiveList : public SNavigationSimulationListBase { public : void)",
    "insertText": "Construct(const FArguments& Args, const FSimpleWidgetDelegate& OnLiveWidgetSelected, const FSimpleWidgetDelegate& OnNavigateToLiveWidget)"
  }
]