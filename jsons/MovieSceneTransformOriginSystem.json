[
  {
    "label": "FMovieSceneAnimTypeID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneAnimTypeID"
  },
  {
    "label": "FInstanceToParentPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceToParentPair"
  },
  {
    "label": "UMovieSceneTransformOriginInstantiatorSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTransformOriginInstantiatorSystem"
  },
  {
    "label": "UMovieSceneTransformOriginSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTransformOriginSystem"
  },
  {
    "label": "FInstanceToParentPair()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" Math / Transform . h \" # include \" Misc / Build . h \" # include \" MovieSceneTransformOriginSystem . generated . h \" struct FMovieSceneAnimTypeID ; struct FInstanceToParentPair { UE::MovieScene::FInstanceHandle Child ; UE::MovieScene::FInstanceHandle Parent ;)",
    "insertText": "FInstanceToParentPair(const UE::MovieScene::FInstanceHandle Child, const UE::MovieScene::FInstanceHandle Parent)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (this -> Child = Child ; this -> Parent = Parent ; } bool)",
    "insertText": "operator(const FInstanceToParentPair& Other)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneTransformOriginInstantiatorSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneTransformOriginSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnLink()"
  },
  {
    "label": "IsRelevantImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRelevantImpl(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "GetTransformOriginsByInstanceID()",
    "kind": "Method",
    "detail": "Function (private : TSparseArray<FTransform> TransformOriginsByInstanceID ; TArray<FInstanceToParentPair> InstanceHandleToParentHandle ; UE::MovieScene::FEntityComponentFilter LocationAndRotationFilterResults ; # if WITH_EDITOR TMap<FMovieSceneSequenceID,UE::MovieScene::FInstanceHandle> SequenceIDToInstanceHandle ; # endif public : const TSparseArray<FTransform>&)",
    "insertText": "GetTransformOriginsByInstanceID()"
  }
]