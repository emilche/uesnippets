[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindow"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "GenerateHammingWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHammingWindow(float* WindowBuffer, int32 NumFrames, int32 NumChannels, bool bIsPeriodic)"
  },
  {
    "label": "GenerateHannWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHannWindow(float* WindowBuffer, int32 NumFrames, int32 NumChannels, bool bIsPeriodic)"
  },
  {
    "label": "GenerateBlackmanWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateBlackmanWindow(float* WindowBuffer, int32 NumFrames, int32 NumChannels, bool bIsPeriodic)"
  },
  {
    "label": "GetCOLAHopSizeForWindow()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCOLAHopSizeForWindow(EWindowType InType, uint32 WindowLength)"
  },
  {
    "label": "FWindow()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FWindow(EWindowType InType, int32 InNumFrames, int32 InNumChannels, bool bIsPeriodic)"
  },
  {
    "label": "ApplyToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToBuffer(float* InBuffer)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Generate(int32 NumFrames, int32 NumChannels, bool bIsPeriodic)"
  },
  {
    "label": "CeilLog2()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CeilLog2(int32 InNum)"
  },
  {
    "label": "GetPowerSpectrumScaling()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPowerSpectrumScaling(int32 FFTSize, EFFTScaling InCurrentScaling, EFFTScaling InTargetScaling)"
  },
  {
    "label": "ScalePowerSpectrumInPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScalePowerSpectrumInPlace(int32 FFTSize, EFFTScaling InCurrentScaling, EFFTScaling InTargetScaling, TArrayView<float> InPowerSpectrum)"
  }
]