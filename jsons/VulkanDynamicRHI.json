[
  {
    "label": "FVulkanFramebuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanFramebuffer"
  },
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueue"
  },
  {
    "label": "FVulkanUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanUniformBuffer"
  },
  {
    "label": "FVulkanViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanViewport"
  },
  {
    "label": "IHeadMountedDisplayVulkanExtensions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHeadMountedDisplayVulkanExtensions"
  },
  {
    "label": "FRHITransientHeapAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHITransientHeapAllocation"
  },
  {
    "label": "FOptionalVulkanInstanceExtensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalVulkanInstanceExtensions"
  },
  {
    "label": "FVulkanDynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHI"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FUpdateTextureRegion2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion2D"
  },
  {
    "label": "FUpdateTextureRegion3D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion3D"
  },
  {
    "label": "IRHICommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRHICommandContext"
  },
  {
    "label": "FRHICommandListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListBase"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVulkanDynamicRHIModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDynamicRHIModule"
  },
  {
    "label": "FOptionalVulkanInstanceExtensions()",
    "kind": "Method",
    "detail": "Function (} ; uint32 Packed ; } ;)",
    "insertText": "FOptionalVulkanInstanceExtensions()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (Packed = 0 ; } } ; PRAGMA_DISABLE_DEPRECATION_WARNINGS class FVulkanDynamicRHI : public IVulkanDynamicRHI { public : FVulkanDynamicRHI&)",
    "insertText": "Get()"
  },
  {
    "label": "FVulkanDynamicRHI()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FVulkanDynamicRHI()"
  },
  {
    "label": "RHIGetVulkanVersion()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetVulkanVersion()"
  },
  {
    "label": "RHIGetVkInstance()",
    "kind": "Method",
    "detail": "Function (VkInstance)",
    "insertText": "RHIGetVkInstance()"
  },
  {
    "label": "RHIGetVkDevice()",
    "kind": "Method",
    "detail": "Function (VkDevice)",
    "insertText": "RHIGetVkDevice()"
  },
  {
    "label": "RHIGetVulkanDeviceUUID()",
    "kind": "Method",
    "detail": "Function (const uint8*)",
    "insertText": "RHIGetVulkanDeviceUUID()"
  },
  {
    "label": "RHIGetVkPhysicalDevice()",
    "kind": "Method",
    "detail": "Function (VkPhysicalDevice)",
    "insertText": "RHIGetVkPhysicalDevice()"
  },
  {
    "label": "RHIGetVkAllocationCallbacks()",
    "kind": "Method",
    "detail": "Function (const VkAllocationCallbacks*)",
    "insertText": "RHIGetVkAllocationCallbacks()"
  },
  {
    "label": "RHIGetGraphicsVkQueue()",
    "kind": "Method",
    "detail": "Function (VkQueue)",
    "insertText": "RHIGetGraphicsVkQueue()"
  },
  {
    "label": "RHIGetGraphicsQueueIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetGraphicsQueueIndex()"
  },
  {
    "label": "RHIGetGraphicsQueueFamilyIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetGraphicsQueueFamilyIndex()"
  },
  {
    "label": "RHIGetActiveVkCommandBuffer()",
    "kind": "Method",
    "detail": "Function (VkCommandBuffer)",
    "insertText": "RHIGetActiveVkCommandBuffer()"
  },
  {
    "label": "RHIGetGraphicsAdapterLUID()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "RHIGetGraphicsAdapterLUID(VkPhysicalDevice InPhysicalDevice)"
  },
  {
    "label": "RHIDoesAdapterMatchDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIDoesAdapterMatchDevice(const void* InAdapterId)"
  },
  {
    "label": "RHIGetVkDeviceProcAddr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetVkDeviceProcAddr(const char* InName)"
  },
  {
    "label": "RHIGetVkInstanceProcAddr()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetVkInstanceProcAddr(const char* InName)"
  },
  {
    "label": "RHIGetSwapChainVkFormat()",
    "kind": "Method",
    "detail": "Function (VkFormat)",
    "insertText": "RHIGetSwapChainVkFormat(EPixelFormat InFormat)"
  },
  {
    "label": "RHISupportsEXTFragmentDensityMap2()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHISupportsEXTFragmentDensityMap2()"
  },
  {
    "label": "RHIGetAllInstanceExtensions()",
    "kind": "Method",
    "detail": "Function (TArray<VkExtensionProperties>)",
    "insertText": "RHIGetAllInstanceExtensions()"
  },
  {
    "label": "RHIGetAllDeviceExtensions()",
    "kind": "Method",
    "detail": "Function (TArray<VkExtensionProperties>)",
    "insertText": "RHIGetAllDeviceExtensions(VkPhysicalDevice InPhysicalDevice)"
  },
  {
    "label": "RHIGetLoadedDeviceExtensions()",
    "kind": "Method",
    "detail": "Function (TArray<FAnsiString>)",
    "insertText": "RHIGetLoadedDeviceExtensions()"
  },
  {
    "label": "RHICreateTexture2DFromResource()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateTexture2DFromResource(EPixelFormat Format, uint32 SizeX, uint32 SizeY, uint32 NumMips, uint32 NumSamples, VkImage Resource, ETextureCreateFlags Flags, const FClearValueBinding& ClearValueBinding = FClearValueBinding::Transparent, const FVulkanRHIExternalImageDeleteCallbackInfo& ExternalImageDeleteCallbackInfo = {})"
  },
  {
    "label": "RHICreateTexture2DFromAndroidHardwareBuffer()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_ANDROID FTextureRHIRef)",
    "insertText": "RHICreateTexture2DFromAndroidHardwareBuffer(AHardwareBuffer* HardwareBuffer)"
  },
  {
    "label": "RHICreateTexture2DArrayFromResource()",
    "kind": "Method",
    "detail": "Function (# endif FTextureRHIRef)",
    "insertText": "RHICreateTexture2DArrayFromResource(EPixelFormat Format, uint32 SizeX, uint32 SizeY, uint32 ArraySize, uint32 NumMips, uint32 NumSamples, VkImage Resource, ETextureCreateFlags Flags, const FClearValueBinding& ClearValueBinding = FClearValueBinding::Transparent)"
  },
  {
    "label": "RHICreateTextureCubeFromResource()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateTextureCubeFromResource(EPixelFormat Format, uint32 Size, bool bArray, uint32 ArraySize, uint32 NumMips, VkImage Resource, ETextureCreateFlags Flags, const FClearValueBinding& ClearValueBinding = FClearValueBinding::Transparent)"
  },
  {
    "label": "RHIGetVkImage()",
    "kind": "Method",
    "detail": "Function (VkImage)",
    "insertText": "RHIGetVkImage(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetViewVkFormat()",
    "kind": "Method",
    "detail": "Function (VkFormat)",
    "insertText": "RHIGetViewVkFormat(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetAllocationInfo()",
    "kind": "Method",
    "detail": "Function (FVulkanRHIAllocationInfo)",
    "insertText": "RHIGetAllocationInfo(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetImageViewInfo()",
    "kind": "Method",
    "detail": "Function (FVulkanRHIImageViewInfo)",
    "insertText": "RHIGetImageViewInfo(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetAllocationInfo()",
    "kind": "Method",
    "detail": "Function (FVulkanRHIAllocationInfo)",
    "insertText": "RHIGetAllocationInfo(FRHIBuffer* InBuffer)"
  },
  {
    "label": "RHISetImageLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetImageLayout(VkImage Image, VkImageLayout OldLayout, VkImageLayout NewLayout, const VkImageSubresourceRange& SubresourceRange)"
  },
  {
    "label": "RHISetUploadImageLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISetUploadImageLayout(VkImage Image, VkImageLayout OldLayout, VkImageLayout NewLayout, const VkImageSubresourceRange& SubresourceRange)"
  },
  {
    "label": "RHIFinishExternalComputeWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIFinishExternalComputeWork(VkCommandBuffer InCommandBuffer)"
  },
  {
    "label": "RHIRegisterWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIRegisterWork(uint32 NumPrimitives)"
  },
  {
    "label": "RHISubmitUploadCommandBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISubmitUploadCommandBuffer()"
  },
  {
    "label": "RHIVerifyResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIVerifyResult(VkResult Result, const ANSICHAR* VkFuntion, const ANSICHAR* Filename, uint32 Line)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "PostInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInit()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetName()"
  },
  {
    "label": "InitInstance()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitInstance()"
  },
  {
    "label": "RHIEndFrame_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIEndFrame_RenderThread(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "RHIEndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIEndFrame(const FRHIEndFrameArgs& Args)"
  },
  {
    "label": "RHICreateSamplerState()",
    "kind": "Method",
    "detail": "Function (FSamplerStateRHIRef)",
    "insertText": "RHICreateSamplerState(const FSamplerStateInitializerRHI& Initializer)"
  },
  {
    "label": "RHICreateRasterizerState()",
    "kind": "Method",
    "detail": "Function (FRasterizerStateRHIRef)",
    "insertText": "RHICreateRasterizerState(const FRasterizerStateInitializerRHI& Initializer)"
  },
  {
    "label": "RHICreateDepthStencilState()",
    "kind": "Method",
    "detail": "Function (FDepthStencilStateRHIRef)",
    "insertText": "RHICreateDepthStencilState(const FDepthStencilStateInitializerRHI& Initializer)"
  },
  {
    "label": "RHICreateBlendState()",
    "kind": "Method",
    "detail": "Function (FBlendStateRHIRef)",
    "insertText": "RHICreateBlendState(const FBlendStateInitializerRHI& Initializer)"
  },
  {
    "label": "RHICreateVertexDeclaration()",
    "kind": "Method",
    "detail": "Function (FVertexDeclarationRHIRef)",
    "insertText": "RHICreateVertexDeclaration(const FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "RHICreatePixelShader()",
    "kind": "Method",
    "detail": "Function (FPixelShaderRHIRef)",
    "insertText": "RHICreatePixelShader(TArrayView<const uint8> Code, const FSHAHash& Hash)"
  },
  {
    "label": "RHICreateVertexShader()",
    "kind": "Method",
    "detail": "Function (FVertexShaderRHIRef)",
    "insertText": "RHICreateVertexShader(TArrayView<const uint8> Code, const FSHAHash& Hash)"
  },
  {
    "label": "RHICreateMeshShader()",
    "kind": "Method",
    "detail": "Function (FMeshShaderRHIRef)",
    "insertText": "RHICreateMeshShader(TArrayView<const uint8> Code, const FSHAHash& Hash)"
  },
  {
    "label": "RHICreateAmplificationShader()",
    "kind": "Method",
    "detail": "Function (FAmplificationShaderRHIRef)",
    "insertText": "RHICreateAmplificationShader(TArrayView<const uint8> Code, const FSHAHash& Hash)"
  },
  {
    "label": "RHICreateGeometryShader()",
    "kind": "Method",
    "detail": "Function (FGeometryShaderRHIRef)",
    "insertText": "RHICreateGeometryShader(TArrayView<const uint8> Code, const FSHAHash& Hash)"
  },
  {
    "label": "RHICreateComputeShader()",
    "kind": "Method",
    "detail": "Function (FComputeShaderRHIRef)",
    "insertText": "RHICreateComputeShader(TArrayView<const uint8> Code, const FSHAHash& Hash)"
  },
  {
    "label": "RHICreateGPUFence()",
    "kind": "Method",
    "detail": "Function (FGPUFenceRHIRef)",
    "insertText": "RHICreateGPUFence(const FName &Name)"
  },
  {
    "label": "RHICreateTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHICreateTransition(FRHITransition* Transition, const FRHITransitionCreateInfo& CreateInfo)"
  },
  {
    "label": "RHIReleaseTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIReleaseTransition(FRHITransition* Transition)"
  },
  {
    "label": "RHICreateStagingBuffer()",
    "kind": "Method",
    "detail": "Function (FStagingBufferRHIRef)",
    "insertText": "RHICreateStagingBuffer()"
  },
  {
    "label": "RHICreateBoundShaderState()",
    "kind": "Method",
    "detail": "Function (FBoundShaderStateRHIRef)",
    "insertText": "RHICreateBoundShaderState(FRHIVertexDeclaration* VertexDeclaration, FRHIVertexShader* VertexShader, FRHIPixelShader* PixelShader, FRHIGeometryShader* GeometryShader)"
  },
  {
    "label": "RHICreateGraphicsPipelineState()",
    "kind": "Method",
    "detail": "Function (FGraphicsPipelineStateRHIRef)",
    "insertText": "RHICreateGraphicsPipelineState(const FGraphicsPipelineStateInitializer& Initializer)"
  },
  {
    "label": "RHICreateComputePipelineState()",
    "kind": "Method",
    "detail": "Function (FComputePipelineStateRHIRef)",
    "insertText": "RHICreateComputePipelineState(FRHIComputeShader* ComputeShader)"
  },
  {
    "label": "RHICreateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (FUniformBufferRHIRef)",
    "insertText": "RHICreateUniformBuffer(const void* Contents, const FRHIUniformBufferLayout* Layout, EUniformBufferUsage Usage, EUniformBufferValidation Validation)"
  },
  {
    "label": "RHIUpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUpdateUniformBuffer(FRHICommandListBase& RHICmdList, FRHIUniformBuffer* UniformBufferRHI, const void* Contents)"
  },
  {
    "label": "RHICreateBuffer()",
    "kind": "Method",
    "detail": "Function (FBufferRHIRef)",
    "insertText": "RHICreateBuffer(FRHICommandListBase& RHICmdList, FRHIBufferDesc const& Desc, ERHIAccess ResourceState, FRHIResourceCreateInfo& CreateInfo)"
  },
  {
    "label": "RHIReplaceResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIReplaceResources(FRHICommandListBase& RHICmdList, TArray<FRHIResourceReplaceInfo>&& ReplaceInfos)"
  },
  {
    "label": "LockBuffer_BottomOfPipe()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "LockBuffer_BottomOfPipe(FRHICommandListBase& RHICmdList, FRHIBuffer* Buffer, uint32 Offset, uint32 Size, EResourceLockMode LockMode)"
  },
  {
    "label": "UnlockBuffer_BottomOfPipe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockBuffer_BottomOfPipe(FRHICommandListBase& RHICmdList, FRHIBuffer* Buffer)"
  },
  {
    "label": "RHILockBuffer()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHILockBuffer(FRHICommandListBase& RHICmdList, FRHIBuffer* BufferRHI, uint32 Offset, uint32 Size, EResourceLockMode LockMode)"
  },
  {
    "label": "RHIUnlockBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUnlockBuffer(FRHICommandListBase& RHICmdList, FRHIBuffer* Buffer)"
  },
  {
    "label": "RHICreateTextureReference()",
    "kind": "Method",
    "detail": "Function (FTextureReferenceRHIRef)",
    "insertText": "RHICreateTextureReference(FRHICommandListBase& RHICmdList, FRHITexture* InReferencedTexture)"
  },
  {
    "label": "RHIUpdateTextureReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUpdateTextureReference(FRHICommandListBase& RHICmdList, FRHITextureReference* TextureRef, FRHITexture* NewTexture)"
  },
  {
    "label": "RHICalcTexturePlatformSize()",
    "kind": "Method",
    "detail": "Function (FRHICalcTextureSizeResult)",
    "insertText": "RHICalcTexturePlatformSize(FRHITextureDesc const& Desc, uint32 FirstMipIndex)"
  },
  {
    "label": "RHIGetTextureMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIGetTextureMemoryStats(FTextureMemoryStats& OutStats)"
  },
  {
    "label": "RHIGetTextureMemoryVisualizeData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIGetTextureMemoryVisualizeData(FColor* TextureData, int32 SizeX, int32 SizeY, int32 Pitch, int32 PixelSize)"
  },
  {
    "label": "RHICreateTexture()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateTexture(FRHICommandListBase& RHICmdList, const FRHITextureCreateDesc& CreateDesc)"
  },
  {
    "label": "RHIAsyncCreateTexture2D()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHIAsyncCreateTexture2D(uint32 SizeX, uint32 SizeY, uint8 Format, uint32 NumMips, ETextureCreateFlags Flags, ERHIAccess InResourceState, void** InitialMipData, uint32 NumInitialMips, const TCHAR* DebugName, FGraphEventRef& OutCompletionEvent)"
  },
  {
    "label": "RHIComputeMemorySize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIComputeMemorySize(FRHITexture* TextureRHI)"
  },
  {
    "label": "RHIAsyncReallocateTexture2D()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHIAsyncReallocateTexture2D(FRHITexture* Texture2D, int32 NewMipCount, int32 NewSizeX, int32 NewSizeY, FThreadSafeCounter* RequestStatus)"
  },
  {
    "label": "RHIFinalizeAsyncReallocateTexture2D()",
    "kind": "Method",
    "detail": "Function (ETextureReallocationStatus)",
    "insertText": "RHIFinalizeAsyncReallocateTexture2D(FRHITexture* Texture2D, bool bBlockUntilCompleted)"
  },
  {
    "label": "FinalizeAsyncReallocateTexture2D_RenderThread()",
    "kind": "Method",
    "detail": "Function (ETextureReallocationStatus)",
    "insertText": "FinalizeAsyncReallocateTexture2D_RenderThread(class FRHICommandListImmediate& RHICmdList, FRHITexture* Texture2D, bool bBlockUntilCompleted)"
  },
  {
    "label": "RHICancelAsyncReallocateTexture2D()",
    "kind": "Method",
    "detail": "Function (} ETextureReallocationStatus)",
    "insertText": "RHICancelAsyncReallocateTexture2D(FRHITexture* Texture2D, bool bBlockUntilCompleted)"
  },
  {
    "label": "RHILockTexture2D()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHILockTexture2D(FRHITexture* Texture, uint32 MipIndex, EResourceLockMode LockMode, uint32& DestStride, bool bLockWithinMiptail, uint64* OutLockedByteCount = nullptr)"
  },
  {
    "label": "RHIUnlockTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUnlockTexture2D(FRHITexture* Texture, uint32 MipIndex, bool bLockWithinMiptail)"
  },
  {
    "label": "InternalUnlockTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUnlockTexture2D(false, Texture, MipIndex, bLockWithinMiptail)"
  },
  {
    "label": "RHILockTexture2DArray()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "RHILockTexture2DArray(FRHITexture* Texture, uint32 TextureIndex, uint32 MipIndex, EResourceLockMode LockMode, uint32& DestStride, bool bLockWithinMiptail)"
  },
  {
    "label": "RHIUnlockTexture2DArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUnlockTexture2DArray(FRHITexture* Texture, uint32 TextureIndex, uint32 MipIndex, bool bLockWithinMiptail)"
  },
  {
    "label": "RHIUpdateTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUpdateTexture2D(FRHICommandListBase& RHICmdList, FRHITexture* Texture, uint32 MipIndex, const struct FUpdateTextureRegion2D& UpdateRegion, uint32 SourcePitch, const uint8* SourceData)"
  },
  {
    "label": "InternalUpdateTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUpdateTexture2D(RHICmdList, Texture, MipIndex, UpdateRegion, SourcePitch, SourceData)"
  },
  {
    "label": "RHIUpdateTexture3D()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RHIUpdateTexture3D(FRHICommandListBase& RHICmdList, FRHITexture* Texture, uint32 MipIndex, const struct FUpdateTextureRegion3D& UpdateRegion, uint32 SourceRowPitch, uint32 SourceDepthPitch, const uint8* SourceData)"
  },
  {
    "label": "InternalUpdateTexture3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUpdateTexture3D(RHICmdList, Texture, MipIndex, UpdateRegion, SourceRowPitch, SourceDepthPitch, SourceData)"
  },
  {
    "label": "RHILockTextureCubeFace()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "RHILockTextureCubeFace(FRHITexture* Texture, uint32 FaceIndex, uint32 ArrayIndex, uint32 MipIndex, EResourceLockMode LockMode, uint32& DestStride, bool bLockWithinMiptail)"
  },
  {
    "label": "RHIUnlockTextureCubeFace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUnlockTextureCubeFace(FRHITexture* Texture, uint32 FaceIndex, uint32 ArrayIndex, uint32 MipIndex, bool bLockWithinMiptail)"
  },
  {
    "label": "RHIBindDebugLabelName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIBindDebugLabelName(FRHICommandListBase& RHICmdList, FRHITexture* Texture, const TCHAR* Name)"
  },
  {
    "label": "RHIBindDebugLabelName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIBindDebugLabelName(FRHICommandListBase& RHICmdList, FRHIUnorderedAccessView* UnorderedAccessViewRHI, const TCHAR* Name)"
  },
  {
    "label": "RHIReadSurfaceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIReadSurfaceData(FRHITexture* Texture, FIntRect Rect, TArray<FColor>& OutData, FReadSurfaceDataFlags InFlags)"
  },
  {
    "label": "RHIReadSurfaceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIReadSurfaceData(FRHITexture* Texture, FIntRect Rect, TArray<FLinearColor>& OutData, FReadSurfaceDataFlags InFlags)"
  },
  {
    "label": "RHIMapStagingSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIMapStagingSurface(FRHITexture* Texture, FRHIGPUFence* Fence, void*& OutData, int32& OutWidth, int32& OutHeight, uint32 GPUIndex = 0)"
  },
  {
    "label": "RHIUnmapStagingSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUnmapStagingSurface(FRHITexture* Texture, uint32 GPUIndex = 0)"
  },
  {
    "label": "RHIReadSurfaceFloatData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIReadSurfaceFloatData(FRHITexture* Texture, FIntRect Rect, TArray<FFloat16Color>& OutData, ECubeFace CubeFace, int32 ArrayIndex, int32 MipIndex)"
  },
  {
    "label": "RHIRead3DSurfaceFloatData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIRead3DSurfaceFloatData(FRHITexture* Texture, FIntRect Rect, FIntPoint ZMinMax, TArray<FFloat16Color>& OutData)"
  },
  {
    "label": "RHICreateRenderQuery()",
    "kind": "Method",
    "detail": "Function (FRenderQueryRHIRef)",
    "insertText": "RHICreateRenderQuery(ERenderQueryType QueryType)"
  },
  {
    "label": "RHIGetRenderQueryResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIGetRenderQueryResult(FRHIRenderQuery* RenderQuery, uint64& OutResult, bool bWait, uint32 GPUIndex = INDEX_NONE)"
  },
  {
    "label": "RHIGetViewportBackBuffer()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHIGetViewportBackBuffer(FRHIViewport* Viewport)"
  },
  {
    "label": "RHIAliasTextureResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIAliasTextureResources(FTextureRHIRef& DestTexture, FTextureRHIRef& SrcTexture)"
  },
  {
    "label": "RHICreateAliasedTexture()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateAliasedTexture(FTextureRHIRef& SourceTexture)"
  },
  {
    "label": "RHIAdvanceFrameForGetViewportBackBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIAdvanceFrameForGetViewportBackBuffer(FRHIViewport* Viewport)"
  },
  {
    "label": "RHIFlushResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIFlushResources()"
  },
  {
    "label": "RHIGetGPUFrameCycles()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetGPUFrameCycles(uint32 GPUIndex = 0)"
  },
  {
    "label": "RHICreateViewport()",
    "kind": "Method",
    "detail": "Function (FViewportRHIRef)",
    "insertText": "RHICreateViewport(void* WindowHandle, uint32 SizeX, uint32 SizeY, bool bIsFullscreen, EPixelFormat PreferredPixelFormat)"
  },
  {
    "label": "RHIResizeViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIResizeViewport(FRHIViewport* Viewport, uint32 SizeX, uint32 SizeY, bool bIsFullscreen)"
  },
  {
    "label": "RHIResizeViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIResizeViewport(FRHIViewport* Viewport, uint32 SizeX, uint32 SizeY, bool bIsFullscreen, EPixelFormat PreferredPixelFormat)"
  },
  {
    "label": "RHITick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHITick(float DeltaTime)"
  },
  {
    "label": "RHIBlockUntilGPUIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIBlockUntilGPUIdle()"
  },
  {
    "label": "RHISuspendRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISuspendRendering()"
  },
  {
    "label": "RHIResumeRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIResumeRendering()"
  },
  {
    "label": "RHIIsRenderingSuspended()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIIsRenderingSuspended()"
  },
  {
    "label": "RHIGetAvailableResolutions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIGetAvailableResolutions(FScreenResolutionArray& Resolutions, bool bIgnoreRefreshRate)"
  },
  {
    "label": "RHIGetSupportedResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIGetSupportedResolution(uint32& Width, uint32& Height)"
  },
  {
    "label": "RHIGetNativeDevice()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetNativeDevice()"
  },
  {
    "label": "RHIGetNativePhysicalDevice()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetNativePhysicalDevice()"
  },
  {
    "label": "RHIGetNativeGraphicsQueue()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetNativeGraphicsQueue()"
  },
  {
    "label": "RHIGetNativeComputeQueue()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetNativeComputeQueue()"
  },
  {
    "label": "RHIGetNativeInstance()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHIGetNativeInstance()"
  },
  {
    "label": "RHIGetDefaultContext()",
    "kind": "Method",
    "detail": "Function (class IRHICommandContext*)",
    "insertText": "RHIGetDefaultContext()"
  },
  {
    "label": "RHIGetCommandContext()",
    "kind": "Method",
    "detail": "Function (IRHIComputeContext*)",
    "insertText": "RHIGetCommandContext(ERHIPipeline Pipeline, FRHIGPUMask GPUMask)"
  },
  {
    "label": "RHIFinalizeContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIFinalizeContext(FRHIFinalizeContextArgs&& Args, TRHIPipelineArray<IRHIPlatformCommandList*>& Output)"
  },
  {
    "label": "RHISubmitCommandLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISubmitCommandLists(FRHISubmitCommandListsArgs&& Args)"
  },
  {
    "label": "RHIGetMinimumAlignmentForBufferBackedSRV()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "RHIGetMinimumAlignmentForBufferBackedSRV(EPixelFormat Format)"
  },
  {
    "label": "RHICreateTransientResourceAllocator()",
    "kind": "Method",
    "detail": "Function (IRHITransientResourceAllocator*)",
    "insertText": "RHICreateTransientResourceAllocator()"
  },
  {
    "label": "GetPrecachePSOHashVersion()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPrecachePSOHashVersion()"
  },
  {
    "label": "RHIComputePrecachePSOHash()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "RHIComputePrecachePSOHash(const FGraphicsPipelineStateInitializer& Initializer)"
  },
  {
    "label": "RHIComputeStatePrecachePSOHash()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "RHIComputeStatePrecachePSOHash(const FGraphicsPipelineStateInitializer& Initializer)"
  },
  {
    "label": "RHIMatchPrecachePSOInitializers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIMatchPrecachePSOInitializers(const FGraphicsPipelineStateInitializer& LHS, const FGraphicsPipelineStateInitializer& RHS)"
  },
  {
    "label": "AsyncReallocateTexture2D_RenderThread()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "AsyncReallocateTexture2D_RenderThread(class FRHICommandListImmediate& RHICmdList, FRHITexture* Texture2D, int32 NewMipCount, int32 NewSizeX, int32 NewSizeY, FThreadSafeCounter* RequestStatus)"
  },
  {
    "label": "LockTexture2D_RenderThread()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "LockTexture2D_RenderThread(class FRHICommandListImmediate& RHICmdList, FRHITexture* Texture, uint32 MipIndex, EResourceLockMode LockMode, uint32& DestStride, bool bLockWithinMiptail, bool bNeedsDefaultRHIFlush = true, uint64* OutLockedByteCount = nullptr)"
  },
  {
    "label": "UnlockTexture2D_RenderThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnlockTexture2D_RenderThread(class FRHICommandListImmediate& RHICmdList, FRHITexture* Texture, uint32 MipIndex, bool bLockWithinMiptail, bool bNeedsDefaultRHIFlush = true)"
  },
  {
    "label": "InternalUnlockTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUnlockTexture2D(true, Texture, MipIndex, bLockWithinMiptail)"
  },
  {
    "label": "RHIBeginUpdateTexture3D()",
    "kind": "Method",
    "detail": "Function (} FUpdateTexture3DData)",
    "insertText": "RHIBeginUpdateTexture3D(FRHICommandListBase& RHICmdList, FRHITexture* Texture, uint32 MipIndex, const struct FUpdateTextureRegion3D& UpdateRegion)"
  },
  {
    "label": "RHIEndUpdateTexture3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIEndUpdateTexture3D(FRHICommandListBase& RHICmdList, FUpdateTexture3DData& UpdateData)"
  },
  {
    "label": "RHICreateShaderResourceView()",
    "kind": "Method",
    "detail": "Function (FShaderResourceViewRHIRef)",
    "insertText": "RHICreateShaderResourceView(class FRHICommandListBase& RHICmdList, FRHIViewableResource* Resource, FRHIViewDesc const& ViewDesc)"
  },
  {
    "label": "RHICreateUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (FUnorderedAccessViewRHIRef)",
    "insertText": "RHICreateUnorderedAccessView(class FRHICommandListBase& RHICmdList, FRHIViewableResource* Resource, FRHIViewDesc const& ViewDesc)"
  },
  {
    "label": "RHICreateResourceCollection()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_SUPPORTS_BINDLESS_RENDERING FRHIResourceCollectionRef)",
    "insertText": "RHICreateResourceCollection(FRHICommandListBase& RHICmdList, TConstArrayView<FRHIResourceCollectionMember> InMembers)"
  },
  {
    "label": "RHICalcRayTracingSceneSize()",
    "kind": "Method",
    "detail": "Function (# endif FRayTracingAccelerationStructureSize)",
    "insertText": "RHICalcRayTracingSceneSize(const FRayTracingSceneInitializer& Initializer)"
  },
  {
    "label": "RHICalcRayTracingGeometrySize()",
    "kind": "Method",
    "detail": "Function (FRayTracingAccelerationStructureSize)",
    "insertText": "RHICalcRayTracingGeometrySize(const FRayTracingGeometryInitializer& Initializer)"
  },
  {
    "label": "RHICreateRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (FRayTracingGeometryRHIRef)",
    "insertText": "RHICreateRayTracingGeometry(FRHICommandListBase& RHICmdList, const FRayTracingGeometryInitializer& Initializer)"
  },
  {
    "label": "RHICreateRayTracingScene()",
    "kind": "Method",
    "detail": "Function (FRayTracingSceneRHIRef)",
    "insertText": "RHICreateRayTracingScene(FRayTracingSceneInitializer Initializer)"
  },
  {
    "label": "RHICreateRayTracingShader()",
    "kind": "Method",
    "detail": "Function (FRayTracingShaderRHIRef)",
    "insertText": "RHICreateRayTracingShader(TArrayView<const uint8> Code, const FSHAHash& Hash, EShaderFrequency ShaderFrequency)"
  },
  {
    "label": "RHICreateRayTracingPipelineState()",
    "kind": "Method",
    "detail": "Function (FRayTracingPipelineStateRHIRef)",
    "insertText": "RHICreateRayTracingPipelineState(const FRayTracingPipelineStateInitializer& Initializer)"
  },
  {
    "label": "RHICreateShaderBindingTable()",
    "kind": "Method",
    "detail": "Function (FShaderBindingTableRHIRef)",
    "insertText": "RHICreateShaderBindingTable(FRHICommandListBase& RHICmdList, const FRayTracingShaderBindingTableInitializer& Initializer)"
  },
  {
    "label": "GetInstanceExtensions()",
    "kind": "Method",
    "detail": "Function (uint32 TotalPresentCount = 0 ; const TArray<const ANSICHAR*>&)",
    "insertText": "GetInstanceExtensions()"
  },
  {
    "label": "RecreateSwapChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateSwapChain(void* NewNativeWindow)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (VkInstance)",
    "insertText": "GetInstance()"
  },
  {
    "label": "GetOptionalExtensions()",
    "kind": "Method",
    "detail": "Function (} const FOptionalVulkanInstanceExtensions&)",
    "insertText": "GetOptionalExtensions()"
  },
  {
    "label": "RHILockStagingBuffer()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "RHILockStagingBuffer(FRHIStagingBuffer* StagingBuffer, FRHIGPUFence* Fence, uint32 Offset, uint32 SizeRHI)"
  },
  {
    "label": "RHIUnlockStagingBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIUnlockStagingBuffer(FRHIStagingBuffer* StagingBuffer)"
  },
  {
    "label": "GetViewports()",
    "kind": "Method",
    "detail": "Function (TArray<FVulkanViewport*>&)",
    "insertText": "GetViewports()"
  },
  {
    "label": "PooledUniformBuffersBeginFrame()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PooledUniformBuffersBeginFrame()"
  },
  {
    "label": "ReleasePooledUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePooledUniformBuffers()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (protected : uint32 ApiVersion = 0 ; VkInstance Instance ; TArray<const ANSICHAR*> InstanceExtensions ; TArray<const ANSICHAR*> InstanceLayers ; FVulkanDevice* Device ; TArray<FVulkanViewport*> Viewports ; TRefCountPtr<FVulkanViewport> DrawingViewport ; void)",
    "insertText": "CreateInstance()"
  },
  {
    "label": "SelectDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectDevice()"
  },
  {
    "label": "InitGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitGPU(FVulkanDevice* Device)"
  },
  {
    "label": "InitDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDevice(FVulkanDevice* Device)"
  },
  {
    "label": "SetupInstanceLayers()",
    "kind": "Method",
    "detail": "Function (class FVulkanCommandListContext ; class FVulkanViewport ; TArray<const ANSICHAR*>)",
    "insertText": "SetupInstanceLayers(FVulkanInstanceExtensionArray& UEExtensions)"
  },
  {
    "label": "RebuildPipelineCache()",
    "kind": "Method",
    "detail": "Function (IConsoleObject* SavePipelineCacheCmd = nullptr ; IConsoleObject* RebuildPipelineCacheCmd = nullptr ; # if VULKAN_SUPPORTS_VALIDATION_CACHE IConsoleObject* SaveValidationCacheCmd = nullptr ; # endif void)",
    "insertText": "RebuildPipelineCache()"
  },
  {
    "label": "SaveValidationCache()",
    "kind": "Method",
    "detail": "Function (# if VULKAN_SUPPORTS_VALIDATION_CACHE void)",
    "insertText": "SaveValidationCache()"
  },
  {
    "label": "DumpMemory()",
    "kind": "Method",
    "detail": "Function (# endif # if UE_BUILD_DEBUG | | UE_BUILD_DEVELOPMENT IConsoleObject* DumpMemoryCmd = nullptr ; IConsoleObject* DumpMemoryFullCmd = nullptr ; IConsoleObject* DumpStagingMemoryCmd = nullptr ; IConsoleObject* DumpLRUCmd = nullptr ; IConsoleObject* TrimLRUCmd = nullptr ; public : void)",
    "insertText": "DumpMemory()"
  },
  {
    "label": "DumpMemoryFull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMemoryFull()"
  },
  {
    "label": "DumpStagingMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpStagingMemory()"
  },
  {
    "label": "DumpLRU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpLRU()"
  },
  {
    "label": "TrimLRU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimLRU()"
  },
  {
    "label": "SetupDebugLayerCallback()",
    "kind": "Method",
    "detail": "Function (# endif public : enum class EActiveDebugLayerExtension { None,GfxReconstructLayer,VkTraceLayer,DebugUtilsExtension } ; protected : bool bIsStandaloneStereoDevice = false ; EActiveDebugLayerExtension ActiveDebugLayerExtension = EActiveDebugLayerExtension::None ; # if VULKAN_HAS_DEBUGGING_ENABLED VkDebugUtilsMessengerEXT Messenger = VK_NULL_HANDLE ; void)",
    "insertText": "SetupDebugLayerCallback()"
  },
  {
    "label": "RemoveDebugLayerCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDebugLayerCallback()"
  },
  {
    "label": "InternalUnlockTexture2D()",
    "kind": "Method",
    "detail": "Function (# endif FCriticalSection LockBufferCS ; void)",
    "insertText": "InternalUnlockTexture2D(bool bFromRenderingThread, FRHITexture* Texture, uint32 MipIndex, bool bLockWithinMiptail)"
  },
  {
    "label": "InternalUpdateTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUpdateTexture2D(FRHICommandListBase& RHICmdList, FRHITexture* TextureRHI, uint32 MipIndex, const struct FUpdateTextureRegion2D& UpdateRegion, uint32 SourcePitch, const uint8* SourceData)"
  },
  {
    "label": "InternalUpdateTexture3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalUpdateTexture3D(FRHICommandListBase& RHICmdList, FRHITexture* TextureRHI, uint32 MipIndex, const struct FUpdateTextureRegion3D& UpdateRegion, uint32 SourceRowPitch, uint32 SourceDepthPitch, const uint8* SourceData)"
  },
  {
    "label": "UpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUniformBuffer(FRHICommandListBase& RHICmdList, FVulkanUniformBuffer* UniformBuffer, const void* Contents)"
  },
  {
    "label": "SetupValidationRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupValidationRequests()"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (FOptionalVulkanInstanceExtensions OptionalInstanceExtensions ; public : TSharedPtr<IHeadMountedDisplayVulkanExtensions,ESPMode::ThreadSafe> HMDVulkanExtensions ; } ; PRAGMA_ENABLE_DEPRECATION_WARNINGS class FVulkanDynamicRHIModule : public IDynamicRHIModule { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupported()"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupported(ERHIFeatureLevel::Type RequestedFeatureLevel)"
  },
  {
    "label": "CreateRHI()",
    "kind": "Method",
    "detail": "Function (FDynamicRHI*)",
    "insertText": "CreateRHI(ERHIFeatureLevel::Type RequestedFeatureLevel = ERHIFeatureLevel::Num)"
  }
]