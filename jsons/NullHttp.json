[
  {
    "label": "FNullHttpRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullHttpRequest"
  },
  {
    "label": "FNullHttpResponse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullHttpResponse"
  },
  {
    "label": "GetURL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GenericPlatform / HttpRequestImpl . h \" # include \" Interfaces / IHttpResponse . h \" class FNullHttpRequest : public FHttpRequestImpl { public : FString)",
    "insertText": "GetURL()"
  },
  {
    "label": "GetURLParameter()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetURLParameter(const FString& ParameterName)"
  },
  {
    "label": "GetHeader()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetHeader(const FString& HeaderName)"
  },
  {
    "label": "GetAllHeaders()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetAllHeaders()"
  },
  {
    "label": "GetContentType()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContentType()"
  },
  {
    "label": "GetContentLength()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetContentLength()"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (const TArray<uint8>&)",
    "insertText": "GetContent()"
  },
  {
    "label": "GetVerb()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetVerb()"
  },
  {
    "label": "SetVerb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerb(const FString& InVerb)"
  },
  {
    "label": "SetURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetURL(const FString& InURL)"
  },
  {
    "label": "GetOption()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOption(const FName Option)"
  },
  {
    "label": "SetOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOption(const FName Option, const FString& OptionValue)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const TArray<uint8>& ContentPayload)"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(TArray<uint8>&& ContentPayload)"
  },
  {
    "label": "SetContentAsString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentAsString(const FString& ContentString)"
  },
  {
    "label": "SetContentAsStreamedFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetContentAsStreamedFile(const FString& Filename)"
  },
  {
    "label": "SetContentFromStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetContentFromStream(TSharedRef<FArchive, ESPMode::ThreadSafe> Stream)"
  },
  {
    "label": "SetResponseBodyReceiveStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResponseBodyReceiveStream(TSharedRef<FArchive> Stream)"
  },
  {
    "label": "SetHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeader(const FString& HeaderName, const FString& HeaderValue)"
  },
  {
    "label": "AppendToHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendToHeader(const FString& HeaderName, const FString& AdditionalHeaderValue)"
  },
  {
    "label": "ProcessRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessRequest()"
  },
  {
    "label": "CancelRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelRequest()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (EHttpRequestStatus::Type)",
    "insertText": "GetStatus()"
  },
  {
    "label": "GetFailureReason()",
    "kind": "Method",
    "detail": "Function (EHttpFailureReason)",
    "insertText": "GetFailureReason()"
  },
  {
    "label": "GetEffectiveURL()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetEffectiveURL()"
  },
  {
    "label": "GetResponse()",
    "kind": "Method",
    "detail": "Function (const FHttpResponsePtr)",
    "insertText": "GetResponse()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaSeconds)"
  },
  {
    "label": "GetElapsedTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetElapsedTime()"
  },
  {
    "label": "SetDelegateThreadPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDelegateThreadPolicy(EHttpRequestDelegateThreadPolicy InThreadPolicy)"
  },
  {
    "label": "GetDelegateThreadPolicy()",
    "kind": "Method",
    "detail": "Function (EHttpRequestDelegateThreadPolicy)",
    "insertText": "GetDelegateThreadPolicy()"
  },
  {
    "label": "SetTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeout(float InTimeoutSecs)"
  },
  {
    "label": "ClearTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTimeout()"
  },
  {
    "label": "ResetTimeoutStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTimeoutStatus()"
  },
  {
    "label": "GetTimeout()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetTimeout()"
  },
  {
    "label": "SetActivityTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActivityTimeout(float InTimeoutSecs)"
  },
  {
    "label": "ProcessRequestUntilComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRequestUntilComplete()"
  },
  {
    "label": "FNullHttpRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNullHttpRequest() : CompletionStatus(EHttpRequestStatus::NotStarted) , FailureReason(EHttpFailureReason::None) , ElapsedTime(0)"
  },
  {
    "label": "FNullHttpRequest()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FNullHttpRequest()"
  },
  {
    "label": "FinishedRequest()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "FinishedRequest()"
  },
  {
    "label": "GetResponseCode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetResponseCode()"
  },
  {
    "label": "GetContentAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContentAsString()"
  },
  {
    "label": "FNullHttpResponse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNullHttpResponse()"
  }
]