[
  {
    "label": "UMaterialParameterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialParameterCollection"
  },
  {
    "label": "UMovieScene3DTransformSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene3DTransformSection"
  },
  {
    "label": "UMovieSceneAudioSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneAudioSection"
  },
  {
    "label": "UMovieSceneDataLayerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneDataLayerSection"
  },
  {
    "label": "UMovieSceneLevelVisibilitySection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneLevelVisibilitySection"
  },
  {
    "label": "UMovieSceneSkeletalAnimationSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSkeletalAnimationSection"
  },
  {
    "label": "FCameraShakeBaseStartParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeBaseStartParams"
  },
  {
    "label": "FCameraShakeSourceComponentStartParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeSourceComponentStartParams"
  },
  {
    "label": "FMovieSceneObjectBindingID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneObjectBindingID"
  },
  {
    "label": "FPerlinNoiseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerlinNoiseParams"
  },
  {
    "label": "FLevelVisibilityComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelVisibilityComponentData"
  },
  {
    "label": "FMovieSceneDataLayerComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneDataLayerComponentData"
  },
  {
    "label": "FConstraintComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintComponentData"
  },
  {
    "label": "FMovieSceneSkeletalAnimationComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSkeletalAnimationComponentData"
  },
  {
    "label": "FMovieSceneAudioComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneAudioComponentData"
  },
  {
    "label": "FMovieSceneCameraShakeComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneCameraShakeComponentData"
  },
  {
    "label": "FMovieSceneCameraShakeInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneCameraShakeInstanceData"
  },
  {
    "label": "FMovieSceneAudioInputData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneAudioInputData"
  },
  {
    "label": "FComponentAttachParamsDestination",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentAttachParamsDestination"
  },
  {
    "label": "FComponentAttachParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentAttachParams"
  },
  {
    "label": "FComponentDetachParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentDetachParams"
  },
  {
    "label": "FAttachmentComponent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttachmentComponent"
  },
  {
    "label": "FFadeComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFadeComponentData"
  },
  {
    "label": "FFloatPropertyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatPropertyTraits"
  },
  {
    "label": "FColorPropertyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColorPropertyTraits"
  },
  {
    "label": "FDoubleVectorPropertyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDoubleVectorPropertyTraits"
  },
  {
    "label": "FFloatVectorPropertyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFloatVectorPropertyTraits"
  },
  {
    "label": "FBoolPropertyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoolPropertyTraits"
  },
  {
    "label": "FBoolMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoolMetaData"
  },
  {
    "label": "FObjectPropertyTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPropertyTraits"
  },
  {
    "label": "FObjectMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectMetadata"
  },
  {
    "label": "FMovieSceneTracksComponentTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTracksComponentTypes"
  },
  {
    "label": "FObjectPropertyRegistration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPropertyRegistration"
  },
  {
    "label": "FMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetaData"
  },
  {
    "label": "FAccessors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAccessors"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / Range . h \" # include \" Math / Transform . h \" # include \" EntitySystem / BuiltInComponentTypes . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieScenePropertySystemTypes . h \" # include \" EntitySystem / MovieScenePropertyMetaDataTraits . h \" # include \" EntitySystem / MovieScenePropertyTraits . h \" # include \" Engine / EngineTypes . h \" # include \" EulerTransform . h \" # include \" TransformData . h \" # include \" MovieSceneTracksPropertyTypes . h \" # include \" Styling / SlateColor . h \" # include \" ConstraintChannel . h \" # include \" MaterialTypes . h \" # include \" Sections / MovieSceneCameraShakeSection . h \" # include \" Misc / Guid . h \" # include \" Tracks / MovieSceneMaterialTrack . h \" # include \" MovieSceneTracksComponentTypes . generated . h \" class UMaterialParameterCollection ; class UMovieScene3DTransformSection ; class UMovieSceneAudioSection ; class UMovieSceneDataLayerSection ; class UMovieSceneLevelVisibilitySection ; class UMovieSceneSkeletalAnimationSection ; struct FCameraShakeBaseStartParams ; struct FCameraShakeSourceComponentStartParams ; struct FMovieSceneObjectBindingID ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category=\"Perlin Noise\")"
  },
  {
    "label": "FPerlinNoiseParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPerlinNoiseParams()"
  },
  {
    "label": "FPerlinNoiseParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPerlinNoiseParams(float InFrequency, double InAmplitude)"
  },
  {
    "label": "RandomizeOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RandomizeOffset(float InMaxOffset = 100.f)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "FMovieSceneCameraShakeComponentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneCameraShakeComponentData()"
  },
  {
    "label": "FMovieSceneCameraShakeComponentData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneCameraShakeComponentData(const FMovieSceneCameraShakeSectionData& InSectionData, const UMovieSceneSection& InSection) : SectionData(InSectionData) , SectionSignature(InSection.GetSignature())"
  },
  {
    "label": "GetRange()",
    "kind": "Method",
    "detail": "Function (const TRange<FFrameNumber> SectionRange = InSection .)",
    "insertText": "GetRange()"
  },
  {
    "label": "HasLowerBound()",
    "kind": "Method",
    "detail": "Function (SectionStartTime = SectionRange .)",
    "insertText": "HasLowerBound() ? SectionRange.GetLowerBoundValue()"
  },
  {
    "label": "HasUpperBound()",
    "kind": "Method",
    "detail": "Function (SectionEndTime = SectionRange .)",
    "insertText": "HasUpperBound() ? SectionRange.GetUpperBoundValue() : FFrameNumber(TNumericLimits<int32>::Max())"
  },
  {
    "label": "ResolveAttachment()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE { namespace MovieScene { struct FComponentAttachParamsDestination { FName SocketName = NAME_None ; FName ComponentName = NAME_None ; USceneComponent*)",
    "insertText": "ResolveAttachment(AActor* InParentActor)"
  },
  {
    "label": "ApplyAttach()",
    "kind": "Method",
    "detail": "Function (} ; struct FComponentAttachParams { EAttachmentRule AttachmentLocationRule = EAttachmentRule::KeepRelative ; EAttachmentRule AttachmentRotationRule = EAttachmentRule::KeepRelative ; EAttachmentRule AttachmentScaleRule = EAttachmentRule::KeepRelative ; void)",
    "insertText": "ApplyAttach(USceneComponent* NewAttachParent, USceneComponent* ChildComponentToAttach, const FName& SocketName)"
  },
  {
    "label": "ApplyDetach()",
    "kind": "Method",
    "detail": "Function (} ; struct FComponentDetachParams { EDetachmentRule DetachmentLocationRule = EDetachmentRule::KeepRelative ; EDetachmentRule DetachmentRotationRule = EDetachmentRule::KeepRelative ; EDetachmentRule DetachmentScaleRule = EDetachmentRule::KeepRelative ; void)",
    "insertText": "ApplyDetach(USceneComponent* NewAttachParent, USceneComponent* ChildComponentToAttach, const FName& SocketName)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} ; struct FAttachmentComponent { FComponentAttachParamsDestination Destination ; FComponentAttachParams AttachParams ; FComponentDetachParams DetachParams ; } ; struct FFadeComponentData { FLinearColor FadeColor ; bool bFadeAudio ; } ; struct FFloatPropertyTraits { bool bIsComposite = false ; using StorageType = double ; using CustomAccessorStorageType = float ; using MetaDataType = TPropertyMetaData<> ; using TraitsType = FFloatPropertyTraits ; using FloatTraitsImpl = TDirectPropertyTraits<float> ; void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, const FCustomPropertyAccessor& BaseCustomAccessor, double& OutValue)"
  },
  {
    "label": "FFloatPropertyTraits()",
    "kind": "Method",
    "detail": "Function (const TCustomPropertyAccessor<FFloatPropertyTraits>& CustomAccessor = static_cast<const TCustomPropertyAccessor<)",
    "insertText": "FFloatPropertyTraits(BaseCustomAccessor)"
  },
  {
    "label": "GetterValue()",
    "kind": "Method",
    "detail": "Function (const float)",
    "insertText": "GetterValue(*CustomAccessor.Functions.Getter)(InObject)"
  },
  {
    "label": "OutValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutValue(double)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, uint16 PropertyOffset, double& OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (float Value ;)",
    "insertText": "GetObjectPropertyValue(InObject, PropertyOffset, Value)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FTrackInstancePropertyBindings* PropertyBindings, double& OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (float Value ;)",
    "insertText": "GetObjectPropertyValue(InObject, PropertyBindings, Value)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, const FName& PropertyPath, double& OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (float Value ;)",
    "insertText": "GetObjectPropertyValue(InObject, PropertyPath, Value)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, const FCustomPropertyAccessor& BaseCustomAccessor, double InValue)"
  },
  {
    "label": "SetterValue()",
    "kind": "Method",
    "detail": "Function (const float)",
    "insertText": "SetterValue(float)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, uint16 PropertyOffset, double InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectPropertyValue(InObject, PropertyOffset, SetterValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FTrackInstancePropertyBindings* PropertyBindings, double InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectPropertyValue(InObject, PropertyBindings, SetterValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} } ; struct FColorPropertyTraits { using StorageType = FIntermediateColor ; using MetaDataType = TPropertyMetaData<EColorPropertyType> ; void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, EColorPropertyType ColorType, const FCustomPropertyAccessor& BaseCustomAccessor, FIntermediateColor& OutValue)"
  },
  {
    "label": "FColorPropertyTraits()",
    "kind": "Method",
    "detail": "Function (const TCustomPropertyAccessor<FColorPropertyTraits>& CustomAccessor = static_cast<const TCustomPropertyAccessor<)",
    "insertText": "FColorPropertyTraits(BaseCustomAccessor)"
  },
  {
    "label": "OutValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutValue(*CustomAccessor.Functions.Getter)(InObject, ColorType)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, EColorPropertyType ColorType, uint16 PropertyOffset, FIntermediateColor& OutValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, EColorPropertyType ColorType, uint16 PropertyOffset, const FIntermediateColor& InValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} } ; struct FDoubleVectorPropertyTraits { using StorageType = FDoubleIntermediateVector ; using MetaDataType = TPropertyMetaData<FVectorPropertyMetaData> ; void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FVectorPropertyMetaData MetaData, const FCustomPropertyAccessor& BaseCustomAccessor, FDoubleIntermediateVector& OutValue)"
  },
  {
    "label": "FDoubleVectorPropertyTraits()",
    "kind": "Method",
    "detail": "Function (const TCustomPropertyAccessor<FDoubleVectorPropertyTraits>& CustomAccessor = static_cast<const TCustomPropertyAccessor<)",
    "insertText": "FDoubleVectorPropertyTraits(BaseCustomAccessor)"
  },
  {
    "label": "OutValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutValue(*CustomAccessor.Functions.Getter)(InObject, MetaData)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FVectorPropertyMetaData MetaData, uint16 PropertyOffset, FDoubleIntermediateVector& OutValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FVectorPropertyMetaData MetaData, uint16 PropertyOffset, const FDoubleIntermediateVector& InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FVectorPropertyMetaData MetaData, FTrackInstancePropertyBindings* PropertyBindings, const FDoubleIntermediateVector& InValue)"
  },
  {
    "label": "CombineComposites()",
    "kind": "Method",
    "detail": "Function (} FDoubleIntermediateVector)",
    "insertText": "CombineComposites(FVectorPropertyMetaData MetaData, double InX, double InY, double InZ, double InW)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} } ; struct FFloatVectorPropertyTraits { using StorageType = FFloatIntermediateVector ; using MetaDataType = TPropertyMetaData<FVectorPropertyMetaData> ; void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FVectorPropertyMetaData MetaData, const FCustomPropertyAccessor& BaseCustomAccessor, FFloatIntermediateVector& OutValue)"
  },
  {
    "label": "FFloatVectorPropertyTraits()",
    "kind": "Method",
    "detail": "Function (const TCustomPropertyAccessor<FFloatVectorPropertyTraits>& CustomAccessor = static_cast<const TCustomPropertyAccessor<)",
    "insertText": "FFloatVectorPropertyTraits(BaseCustomAccessor)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FVectorPropertyMetaData MetaData, uint16 PropertyOffset, FFloatIntermediateVector& OutValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FVectorPropertyMetaData MetaData, uint16 PropertyOffset, const FFloatIntermediateVector& InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FVectorPropertyMetaData MetaData, FTrackInstancePropertyBindings* PropertyBindings, const FFloatIntermediateVector& InValue)"
  },
  {
    "label": "CombineComposites()",
    "kind": "Method",
    "detail": "Function (} FFloatIntermediateVector)",
    "insertText": "CombineComposites(FVectorPropertyMetaData MetaData, float InX, float InY, float InZ, float InW)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} } ; struct FBoolPropertyTraits { bool bIsComposite = false ; struct FBoolMetaData { uint8 BitFieldSize = 0 ; uint8 BitIndex = 0 ; } ; using StorageType = bool ; using MetaDataType = TPropertyMetaData<FBoolMetaData> ; using TraitsType = TDirectPropertyTraits<bool> ; using ParamType = bool ; void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FBoolMetaData MetaData, const FCustomPropertyAccessor& BaseCustomAccessor, bool& OutValue)"
  },
  {
    "label": "TraitsType()",
    "kind": "Method",
    "detail": "Function (const TCustomPropertyAccessor<TraitsType>& CustomAccessor = static_cast<const TCustomPropertyAccessor<)",
    "insertText": "TraitsType(BaseCustomAccessor)"
  },
  {
    "label": "OutValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutValue(*CustomAccessor.Functions.Getter)(InObject)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FBoolMetaData MetaData, uint16 PropertyOffset, bool& OutValue)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (const void* PropertyAddress = reinterpret_cast<const)",
    "insertText": "uint8(InObject)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (OutValue = PropertyBindings -> GetCurrentValue<)",
    "insertText": "bool(*InObject)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FBoolMetaData MetaData, const FName& PropertyPath, bool& OutValue)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TOptional<bool> Property = FTrackInstancePropertyBindings::StaticValue<)",
    "insertText": "bool(InObject, *PropertyPath.ToString())"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (OutValue =)",
    "insertText": "MoveTemp(Property.GetValue())"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FBoolMetaData MetaData, const FCustomPropertyAccessor& BaseCustomAccessor, bool InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FBoolMetaData MetaData, uint16 PropertyOffset, bool InValue)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (PropertyBindings -> CallFunction<)",
    "insertText": "bool(*InObject, InValue)"
  },
  {
    "label": "StaticClass()",
    "kind": "Method",
    "detail": "Function (} } ; struct FObjectPropertyTraits { bool bIsComposite = false ; struct FObjectMetadata { TObjectPtr<UClass> ObjectClass =)",
    "insertText": "StaticClass()"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (bool bAllowsClear = true ; } ; using StorageType = FObjectComponent ; using MetaDataType = TPropertyMetaData<FObjectMetadata> ; using TraitsType = FObjectPropertyTraits ; using ParamType = UObject* ; using ObjectTraitsImpl = TIndirectPropertyTraits<UObject*,FObjectComponent> ; void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FObjectMetadata ObjectMetadata, const FCustomPropertyAccessor& BaseCustomAccessor, FObjectComponent& OutValue)"
  },
  {
    "label": "FObjectPropertyTraits()",
    "kind": "Method",
    "detail": "Function (const TCustomPropertyAccessor<FObjectPropertyTraits>& CustomAccessor = static_cast<const TCustomPropertyAccessor<)",
    "insertText": "FObjectPropertyTraits(BaseCustomAccessor)"
  },
  {
    "label": "OutValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutValue(*CustomAccessor.Functions.Getter)(InObject, ObjectMetadata)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FObjectMetadata ObjectMetadata, uint16 PropertyOffset, FObjectComponent& OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectPropertyValue(InObject, PropertyOffset, OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FObjectMetadata ObjectMetadata, FTrackInstancePropertyBindings* PropertyBindings, FObjectComponent& OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectPropertyValue(InObject, PropertyBindings, OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetObjectPropertyValue(const UObject* InObject, FObjectMetadata ObjectMetadata, const FName& PropertyPath, StorageType& OutValue)"
  },
  {
    "label": "GetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectPropertyValue(InObject, PropertyPath, OutValue)"
  },
  {
    "label": "CanAssignValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanAssignValue(const FObjectMetadata& ObjectMetadata, UObject* DesiredValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} return false ; } void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FObjectMetadata ObjectMetadata, const FCustomPropertyAccessor& BaseCustomAccessor, const FObjectComponent& InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FObjectMetadata ObjectMetadata, uint16 PropertyOffset, const FObjectComponent& InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectPropertyValue(InObject, PropertyOffset, InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetObjectPropertyValue(UObject* InObject, FObjectMetadata ObjectMetadata, FTrackInstancePropertyBindings* PropertyBindings, const FObjectComponent& InValue)"
  },
  {
    "label": "SetObjectPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectPropertyValue(InObject, PropertyBindings, InValue)"
  },
  {
    "label": "FMovieSceneTracksComponentTypes()",
    "kind": "Method",
    "detail": "Function (} } } ; using FBytePropertyTraits = TDirectPropertyTraits<uint8,false> ; using FEnumPropertyTraits = TDirectPropertyTraits<uint8,false> ; using FIntPropertyTraits = TDirectPropertyTraits<int32,false> ; using FDoublePropertyTraits = TDirectPropertyTraits<double,false> ; using FTransformPropertyTraits = TIndirectPropertyTraits<FTransform,FIntermediate3DTransform> ; using FEulerTransformPropertyTraits = TIndirectPropertyTraits<FEulerTransform,FIntermediate3DTransform> ; using FComponentTransformPropertyTraits = TDirectPropertyTraits<FIntermediate3DTransform> ; using FRotatorPropertyTraits = TDirectPropertyTraits<FRotator> ; using FStringPropertyTraits = TDirectPropertyTraits<FString> ; using FFloatParameterTraits = TIndirectPropertyTraits<float,double,false> ; using FColorParameterTraits = TIndirectPropertyTraits<FLinearColor,FIntermediateColor> ; struct FMovieSceneTracksComponentTypes { ~)",
    "insertText": "FMovieSceneTracksComponentTypes()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TPropertyComponents<FBoolPropertyTraits> Bool ; TPropertyComponents<FBytePropertyTraits> Byte ; TPropertyComponents<FEnumPropertyTraits> Enum ; TPropertyComponents<FIntPropertyTraits> Integer ; TPropertyComponents<FFloatPropertyTraits> Float ; TPropertyComponents<FDoublePropertyTraits> Double ; TPropertyComponents<FColorPropertyTraits> Color ; TPropertyComponents<FFloatVectorPropertyTraits> FloatVector ; TPropertyComponents<FDoubleVectorPropertyTraits> DoubleVector ; TPropertyComponents<FTransformPropertyTraits> Transform ; TPropertyComponents<FEulerTransformPropertyTraits> EulerTransform ; TPropertyComponents<FComponentTransformPropertyTraits> ComponentTransform ; TPropertyComponents<FRotatorPropertyTraits> Rotator ; TPropertyComponents<FStringPropertyTraits> String ; TPropertyComponents<FObjectPropertyTraits> Object ; TPropertyComponents<FFloatParameterTraits> FloatParameter ; TPropertyComponents<FColorParameterTraits> ColorParameter ; TComponentTypeID<FSourceDoubleChannel> QuaternionRotationChannel [ 3 ] ; TComponentTypeID<FSourceDoubleChannel> RotatorChannel [ 3 ] ; TComponentTypeID<FConstraintComponentData> ConstraintChannel ; TComponentTypeID<TWeakObjectPtr<USceneComponent>> AttachParent ; TComponentTypeID<FAttachmentComponent> AttachComponent ; TComponentTypeID<FMovieSceneObjectBindingID> AttachParentBinding ; TComponentTypeID<FPerlinNoiseParams> FloatPerlinNoiseChannel ; TComponentTypeID<FPerlinNoiseParams> DoublePerlinNoiseChannel ; TComponentTypeID<FMovieSceneSkeletalAnimationComponentData> SkeletalAnimation ; TComponentTypeID<FComponentMaterialInfo> ComponentMaterialInfo ; TComponentTypeID<FName> BoolParameterName ; TComponentTypeID<FName> ScalarParameterName ; TComponentTypeID<FName> Vector2DParameterName ; TComponentTypeID<FName> VectorParameterName ; TComponentTypeID<FName> ColorParameterName ; TComponentTypeID<FName> TransformParameterName ; TComponentTypeID<FMaterialParameterInfo> ScalarMaterialParameterInfo ; TComponentTypeID<FMaterialParameterInfo> ColorMaterialParameterInfo ; TComponentTypeID<FMaterialParameterInfo> VectorMaterialParameterInfo ; TComponentTypeID<FObjectComponent> BoundMaterial ; TComponentTypeID<TWeakObjectPtr<UMaterialParameterCollection>> MPC ; TComponentTypeID<FFadeComponentData> Fade ; TComponentTypeID<FMovieSceneAudioComponentData> Audio ; TComponentTypeID<FMovieSceneAudioInputData> AudioInputs ; TComponentTypeID<FName> AudioTriggerName ; TComponentTypeID<FMovieSceneCameraShakeComponentData> CameraShake ; TComponentTypeID<FMovieSceneCameraShakeInstanceData> CameraShakeInstance ; struct FObjectPropertyRegistration : TCustomPropertyRegistration<FObjectPropertyTraits> { struct FMetaData { TWeakObjectPtr<UClass> AllowedClass ; bool bAllowsClear = true ; } ; void)",
    "insertText": "Add(UClass* ClassType, FName PropertyName, GetterFunc Getter, SetterFunc Setter)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TCustomPropertyRegistration<FObjectPropertyTraits)",
    "insertText": "Add(ClassType, PropertyName, Getter, Setter)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Add(UClass* ClassType, FName PropertyName, GetterFunc Getter, SetterFunc Setter, FMetaData InMetaData)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32 CustomIndex = CustomAccessors .)",
    "insertText": "Num()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (MetaData .)",
    "insertText": "Add(CustomIndex, InMetaData)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (} TMap<int32,FMovieSceneTracksComponentTypes::FObjectPropertyRegistration::FMetaData> MetaData ; } ; struct FAccessors { TCustomPropertyRegistration<FBoolPropertyTraits> Bool ; TCustomPropertyRegistration<FBytePropertyTraits> Byte ; TCustomPropertyRegistration<FEnumPropertyTraits> Enum ; TCustomPropertyRegistration<FIntPropertyTraits> Integer ; TCustomPropertyRegistration<FFloatPropertyTraits> Float ; TCustomPropertyRegistration<FDoublePropertyTraits> Double ; TCustomPropertyRegistration<FColorPropertyTraits> Color ; TCustomPropertyRegistration<FFloatVectorPropertyTraits> FloatVector ; TCustomPropertyRegistration<FDoubleVectorPropertyTraits> DoubleVector ; TCustomPropertyRegistration<FComponentTransformPropertyTraits,1> ComponentTransform ; FObjectPropertyRegistration Object ; } Accessors ; struct { FComponentTypeID BoundMaterialChanged ; FComponentTypeID CustomPrimitiveData ; FComponentTypeID Slomo ; FComponentTypeID Visibility ; } Tags ; TComponentTypeID<FLevelVisibilityComponentData> LevelVisibility ; TComponentTypeID<FMovieSceneDataLayerComponentData> DataLayer ; void)",
    "insertText": "Destroy()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FMovieSceneTracksComponentTypes*)",
    "insertText": "Get()"
  }
]