[
  {
    "label": "FSkyLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkyLightSceneProxy"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FLightSceneInfoCompact",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfoCompact"
  },
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxy"
  },
  {
    "label": "EShaderPlatform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderPlatform"
  },
  {
    "label": "FEngineShowFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEngineShowFlags"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRayTracingPrimaryRaysOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingPrimaryRaysOptions"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ShouldRenderRayTracingEffect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingEffect(bool bEffectEnabled, ERayTracingPipelineCompatibilityFlags CompatibilityFlags, const FSceneView& View)"
  },
  {
    "label": "ShouldRenderRayTracingEffect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingEffect(bool bEffectEnabled, ERayTracingPipelineCompatibilityFlags CompatibilityFlags, const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "ShouldRenderRayTracingSkyLightEffect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingSkyLightEffect()"
  },
  {
    "label": "AnyRayTracingPassEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyRayTracingPassEnabled(const FScene* Scene, const FViewInfo& View)"
  },
  {
    "label": "AnyInlineRayTracingPassEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyInlineRayTracingPassEnabled(const FScene* Scene, const FViewInfo& View)"
  },
  {
    "label": "GetRayTracingTranslucencyOptions()",
    "kind": "Method",
    "detail": "Function (FRayTracingPrimaryRaysOptions)",
    "insertText": "GetRayTracingTranslucencyOptions(const FViewInfo& View)"
  },
  {
    "label": "ShouldRenderRayTracingSkyLight()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingSkyLight(const FSkyLightSceneProxy* SkyLightSceneProxy, EShaderPlatform ShaderPlatform)"
  },
  {
    "label": "ShouldRenderRayTracingAmbientOcclusion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingAmbientOcclusion(const FViewInfo& View)"
  },
  {
    "label": "ShouldRenderRayTracingTranslucency()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingTranslucency(const FViewInfo& View)"
  },
  {
    "label": "ShouldRenderRayTracingShadows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingShadows(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "ShouldRenderRayTracingShadowsForLight()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingShadowsForLight(const FSceneViewFamily& ViewFamily, const FLightSceneProxy& LightProxy)"
  },
  {
    "label": "ShouldRenderRayTracingShadowsForLight()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderRayTracingShadowsForLight(const FSceneViewFamily& ViewFamily, const FLightSceneInfoCompact& LightInfo)"
  },
  {
    "label": "ShouldRenderPluginRayTracingGlobalIllumination()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderPluginRayTracingGlobalIllumination(const FViewInfo& View)"
  },
  {
    "label": "HasRayTracedOverlay()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasRayTracedOverlay(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "GetCullingMode()",
    "kind": "Method",
    "detail": "Function (ECullingMode)",
    "insertText": "GetCullingMode(const FEngineShowFlags& ShowFlags)"
  },
  {
    "label": "EnableRayTracingShadowTwoSidedGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableRayTracingShadowTwoSidedGeometry()"
  },
  {
    "label": "GetRaytracingMaxNormalBias()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRaytracingMaxNormalBias()"
  },
  {
    "label": "GetRayTracingCullingRadius()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRayTracingCullingRadius()"
  },
  {
    "label": "IsRayTracingInstanceDebugDataEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRayTracingInstanceDebugDataEnabled(const FViewInfo& View)"
  },
  {
    "label": "IsRayTracingInstanceOverlapEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRayTracingInstanceOverlapEnabled(const FViewInfo& View)"
  },
  {
    "label": "CanUseRayTracingAMDHitToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUseRayTracingAMDHitToken()"
  }
]