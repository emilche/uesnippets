[
  {
    "label": "_cef_display_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_display_t"
  },
  {
    "label": "int64()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_VIEWS_CEF_DISPLAY_CAPI_H_ # define CEF_INCLUDE_CAPI_VIEWS_CEF_DISPLAY_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_display_t { cef_base_ref_counted_t base ;)",
    "insertText": "int64(CEF_CALLBACK* get_id)(struct _cef_display_t* self)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "float(CEF_CALLBACK* get_device_scale_factor)(struct _cef_display_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* convert_point_to_pixels)(struct _cef_display_t* self, cef_point_t* point)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* convert_point_from_pixels)(struct _cef_display_t* self, cef_point_t* point)"
  },
  {
    "label": "cef_rect_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_rect_t(CEF_CALLBACK* get_bounds)(struct _cef_display_t* self)"
  },
  {
    "label": "cef_rect_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_rect_t(CEF_CALLBACK* get_work_area)(struct _cef_display_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_rotation)(struct _cef_display_t* self)"
  },
  {
    "label": "cef_display_get_primary()",
    "kind": "Method",
    "detail": "Function (} cef_display_t ; CEF_EXPORT cef_display_t*)",
    "insertText": "cef_display_get_primary()"
  },
  {
    "label": "cef_display_get_nearest_point()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_display_t*)",
    "insertText": "cef_display_get_nearest_point(const cef_point_t* point, int input_pixel_coords)"
  },
  {
    "label": "cef_display_get_matching_bounds()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_display_t*)",
    "insertText": "cef_display_get_matching_bounds(const cef_rect_t* bounds, int input_pixel_coords)"
  },
  {
    "label": "cef_display_get_count()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT size_t)",
    "insertText": "cef_display_get_count()"
  },
  {
    "label": "cef_display_get_alls()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_display_get_alls(size_t* displaysCount, cef_display_t** displays)"
  }
]