[
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "ICommonEditorViewportToolbarInfoProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICommonEditorViewportToolbarInfoProvider"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "FShowMenuCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShowMenuCommand"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UNREALED_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNREALED_API"
  },
  {
    "label": "SCommonEditorViewportToolbarBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCommonEditorViewportToolbarBase"
  },
  {
    "label": "UNREALED_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNREALED_API"
  },
  {
    "label": "SCommonEditorViewportToolbarBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCommonEditorViewportToolbarBase"
  },
  {
    "label": "ICommonEditorViewportToolbarInfoProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICommonEditorViewportToolbarInfoProvider"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "SEditorViewportViewMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewportViewMenu"
  },
  {
    "label": "ICommonEditorViewportToolbarInfoProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICommonEditorViewportToolbarInfoProvider"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (them)",
    "insertText": "for(int32 EntryIndex = 0; EntryIndex < MenuCommands.Num()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "MakeAssetViewerProfileComboBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAssetViewerProfileComboBox()"
  },
  {
    "label": "BuildComboMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildComboMenu()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedPtr<class ICommonEditorViewportToolbarInfoProvider> InInfoProvider)"
  },
  {
    "label": "ConstructScreenPercentageMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructScreenPercentageMenu(FMenuBuilder& MenuBuilder, class FEditorViewportClient* ViewportClient)"
  },
  {
    "label": "OnFarViewPlaneValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFarViewPlaneValueChanged( float NewValue )"
  },
  {
    "label": "OnRealtimeWarningClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRealtimeWarningClicked()"
  },
  {
    "label": "CreateViewMenuExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateViewMenuExtensions(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "MakeViewMenu()",
    "kind": "Method",
    "detail": "Function (SEditorViewportViewMenu>)",
    "insertText": "MakeViewMenu()"
  },
  {
    "label": "OnScreenPercentageValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScreenPercentageValueChanged(int32 NewValue)"
  }
]