[
  {
    "label": "_LIBCPP_TYPE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TYPE_VIS"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___RANDOM_RANDOM_DEVICE_H # define _LIBCPP___RANDOM_RANDOM_DEVICE_H # include<__config> # include<string> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_PUSH_MACROS #include <__undef_macros> _LIBCPP_BEGIN_NAMESPACE_STD #if !defined(_LIBCPP_HAS_NO_RANDOM_DEVICE)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifdef _LIBCPP_USING_DEV_RANDOM int __f_ ; # elif !)",
    "insertText": "defined(_LIBCPP_ABI_NO_RANDOM_DEVICE_COMPATIBILITY_LAYOUT) _LIBCPP_DIAGNOSTIC_PUSH _LIBCPP_CLANG_DIAGNOSTIC_IGNORED(\"-Wunused-private-field\") # if defined(__APPLE__)"
  },
  {
    "label": "min()",
    "kind": "Method",
    "detail": "Function (# endif _LIBCPP_DIAGNOSTIC_POP # endif public : typedef unsigned result_type ; _LIBCPP_CONSTEXPR const result_type _Min = 0 ; _LIBCPP_CONSTEXPR const result_type _Max = 0 xFFFFFFFFu ; _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR result_type)",
    "insertText": "min()"
  },
  {
    "label": "random_device()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "random_device(const string& __token)"
  },
  {
    "label": "random_device()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "random_device(const string& __token = \"/dev/urandom\")"
  },
  {
    "label": "random_device()",
    "kind": "Method",
    "detail": "Function (# endif ~)",
    "insertText": "random_device()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (result_type)",
    "insertText": "operator()()"
  },
  {
    "label": "random_device()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "random_device(const random_device&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const random_device&)"
  }
]