[
  {
    "label": "IXmppChat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppChat"
  },
  {
    "label": "IXmppMessages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppMessages"
  },
  {
    "label": "IXmppMultiUserChat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppMultiUserChat"
  },
  {
    "label": "IXmppPresence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppPresence"
  },
  {
    "label": "IXmppPubSub",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppPubSub"
  },
  {
    "label": "IXmppStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppStanza"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FXmppServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppServer"
  },
  {
    "label": "FXmppUserJid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppUserJid"
  },
  {
    "label": "IXmppConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppConnection"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Templates / SharedPointer . h \" class IXmppChat ; class IXmppMessages ; class IXmppMultiUserChat ; class IXmppPresence ; class IXmppPubSub ; class IXmppStanza ; namespace EXmppLoginStatus { enum Type { NotStarted,ProcessingLogin,ProcessingLogout,LoggedIn,LoggedOut } ; const TCHAR*)",
    "insertText": "ToString(EXmppLoginStatus::Type EnumVal)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} ; return)",
    "insertText": "TEXT(\"Unknown\")"
  },
  {
    "label": "FXmppServer()",
    "kind": "Method",
    "detail": "Function (} } ; class FXmppServer { public :)",
    "insertText": "FXmppServer() : ServerPort(5222) , bUseSSL(true) , bUsePlainTextAuth(false) , PingInterval(60.0f) , PingTimeout(30.0f) , MaxPingRetries(1) , bPrivateChatFriendsOnly(false) , bResetPingTimeoutOnReceiveStanza(true)"
  },
  {
    "label": "FXmppUserJid()",
    "kind": "Method",
    "detail": "Function (} FString ServerAddr ; int32 ServerPort ; FString PlatformUserId ; FString Domain ; FString ClientResource ; FString AppId ; FString Platform ; bool bUseSSL ; bool bUsePlainTextAuth ; float PingInterval ; float PingTimeout ; int32 MaxPingRetries ; bool bPrivateChatFriendsOnly ; bool bResetPingTimeoutOnReceiveStanza ; } ; class FXmppUserJid { public :)",
    "insertText": "FXmppUserJid(FString InId = FString(), FString InDomain = FString(), FString InResource = FString() ) : Id(MoveTemp(InId)) , Domain(MoveTemp(InDomain)) , Resource(MoveTemp(InResource))"
  },
  {
    "label": "FromFullJid()",
    "kind": "Method",
    "detail": "Function (} FXmppUserJid)",
    "insertText": "FromFullJid(const FString& JidString)"
  },
  {
    "label": "ParseResource()",
    "kind": "Method",
    "detail": "Function (FString Id ; FString Domain ; FString Resource ; bool)",
    "insertText": "ParseResource(const FString& InResource, FString& OutAppId, FString& OutPlatform, FString& OutPlatformUserId)"
  },
  {
    "label": "CreateResource()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CreateResource(const FString& AppId, const FString& Platform, const FString& PlatformUserId)"
  },
  {
    "label": "ParseResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseResource(FString& OutAppId, FString& OutPlatform, FString& OutPlatformUserId)"
  },
  {
    "label": "ParseMucUserResource()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ParseMucUserResource(const FString& InResource)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FXmppUserJid& Other)"
  },
  {
    "label": "GetFullPath()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetFullPath()"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "Result(Id)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (Result + =)",
    "insertText": "TEXT(\"@\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (Result + =)",
    "insertText": "TEXT(\"/\")"
  },
  {
    "label": "GetBareId()",
    "kind": "Method",
    "detail": "Function (} } return Result ; } FString)",
    "insertText": "GetBareId()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "ToDebugString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToDebugString()"
  },
  {
    "label": "IXmppConnection()",
    "kind": "Method",
    "detail": "Function (} ; typedef TSharedPtr<IXmppPresence,ESPMode::ThreadSafe> IXmppPresencePtr ; typedef TSharedPtr<IXmppPubSub,ESPMode::ThreadSafe> IXmppPubSubPtr ; typedef TSharedPtr<IXmppMessages,ESPMode::ThreadSafe> IXmppMessagesPtr ; typedef TSharedPtr<IXmppMultiUserChat,ESPMode::ThreadSafe> IXmppMultiUserChatPtr ; typedef TSharedPtr<IXmppChat,ESPMode::ThreadSafe> IXmppChatPtr ; class IXmppConnection : public TSharedFromThis<IXmppConnection> { public : ~)",
    "insertText": "IXmppConnection()"
  },
  {
    "label": "SetServer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetServer(const FXmppServer& Server)"
  },
  {
    "label": "GetServer()",
    "kind": "Method",
    "detail": "Function (const FXmppServer&)",
    "insertText": "GetServer()"
  },
  {
    "label": "Login()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Login(const FString& UserId, const FString& Auth)"
  },
  {
    "label": "Logout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Logout()"
  },
  {
    "label": "GetLoginStatus()",
    "kind": "Method",
    "detail": "Function (EXmppLoginStatus::Type)",
    "insertText": "GetLoginStatus()"
  },
  {
    "label": "GetUserJid()",
    "kind": "Method",
    "detail": "Function (const FXmppUserJid&)",
    "insertText": "GetUserJid()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppLoginComplete, const FXmppUserJid& , bool , const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppLogoutComplete, const FXmppUserJid& , bool , const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnXmppLoginChanged, const FXmppUserJid& , EXmppLoginStatus::Type)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnXmppStanzaReceived, const IXmppStanza&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnXmppStanzaSent, const IXmppStanza&)"
  },
  {
    "label": "OnLoginComplete()",
    "kind": "Method",
    "detail": "Function (FOnXmppLoginComplete&)",
    "insertText": "OnLoginComplete()"
  },
  {
    "label": "OnLoginChanged()",
    "kind": "Method",
    "detail": "Function (FOnXmppLoginChanged&)",
    "insertText": "OnLoginChanged()"
  },
  {
    "label": "OnLogoutComplete()",
    "kind": "Method",
    "detail": "Function (FOnXmppLogoutComplete&)",
    "insertText": "OnLogoutComplete()"
  },
  {
    "label": "OnStanzaSent()",
    "kind": "Method",
    "detail": "Function (FOnXmppStanzaSent&)",
    "insertText": "OnStanzaSent()"
  },
  {
    "label": "OnStanzaReceived()",
    "kind": "Method",
    "detail": "Function (FOnXmppStanzaReceived&)",
    "insertText": "OnStanzaReceived()"
  },
  {
    "label": "Presence()",
    "kind": "Method",
    "detail": "Function (IXmppPresencePtr)",
    "insertText": "Presence()"
  },
  {
    "label": "PubSub()",
    "kind": "Method",
    "detail": "Function (IXmppPubSubPtr)",
    "insertText": "PubSub()"
  },
  {
    "label": "Messages()",
    "kind": "Method",
    "detail": "Function (IXmppMessagesPtr)",
    "insertText": "Messages()"
  },
  {
    "label": "MultiUserChat()",
    "kind": "Method",
    "detail": "Function (IXmppMultiUserChatPtr)",
    "insertText": "MultiUserChat()"
  },
  {
    "label": "PrivateChat()",
    "kind": "Method",
    "detail": "Function (IXmppChatPtr)",
    "insertText": "PrivateChat()"
  },
  {
    "label": "DumpState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpState()"
  }
]