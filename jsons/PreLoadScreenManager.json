[
  {
    "label": "FPreLoadScreenManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreLoadScreenManager"
  },
  {
    "label": "FPreLoadScreenManagerDelete",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreLoadScreenManagerDelete"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SVirtualWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVirtualWindow"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" PreLoadScreen . h \" # include \" CoreMinimal . h \" # include \" Widgets / SVirtualWindow . h \" # include \" Widgets / SWindow . h \" # include \" TickableObjectRenderThread . h \" # include \" Containers / Ticker . h \" # include \" PreLoadSlateThreading . h \" class FPreLoadScreenManager { public : FPreLoadScreenManager*)",
    "insertText": "Get()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSlateRenderer& InSlateRenderer)"
  },
  {
    "label": "RegisterPreLoadScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPreLoadScreen(const TSharedPtr<IPreLoadScreen>& PreLoadScreen)"
  },
  {
    "label": "UnRegisterPreLoadScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnRegisterPreLoadScreen(const TSharedPtr<IPreLoadScreen>& PreLoadScreen)"
  },
  {
    "label": "PlayFirstPreLoadScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayFirstPreLoadScreen(EPreLoadScreenTypes PreLoadScreenTypeToPlay)"
  },
  {
    "label": "PlayPreLoadScreenWithTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayPreLoadScreenWithTag(FName InTag)"
  },
  {
    "label": "StopPreLoadScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopPreLoadScreen()"
  },
  {
    "label": "WaitForEngineLoadingScreenToFinish()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForEngineLoadingScreenToFinish()"
  },
  {
    "label": "PassPreLoadScreenWindowBackToGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PassPreLoadScreenWindowBackToGame()"
  },
  {
    "label": "IsUsingMainWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingMainWindow()"
  },
  {
    "label": "GetRenderWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWindow>)",
    "insertText": "GetRenderWindow()"
  },
  {
    "label": "HasRegisteredPreLoadScreenType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasRegisteredPreLoadScreenType(EPreLoadScreenTypes PreLoadScreenTypeToCheck)"
  },
  {
    "label": "HasActivePreLoadScreenType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasActivePreLoadScreenType(EPreLoadScreenTypes PreLoadScreenTypeToCheck)"
  },
  {
    "label": "HasValidActivePreLoadScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidActivePreLoadScreen()"
  },
  {
    "label": "SetEngineLoadingComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEngineLoadingComplete(bool IsEngineLoadingFinished = true)"
  },
  {
    "label": "IsEngineLoadingComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEngineLoadingComplete()"
  },
  {
    "label": "ArePreLoadScreensEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ArePreLoadScreensEnabled()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnPreLoadScreenManagerCleanUp)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnPreLoadScreenManagerCleanUp OnPreLoadScreenManagerCleanUp ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FIsPreloadScreenResponsibleForRenderingMultiDelegate, bool)"
  },
  {
    "label": "FPreLoadScreenManager()",
    "kind": "Method",
    "detail": "Function (FIsPreloadScreenResponsibleForRenderingMultiDelegate IsResponsibleForRenderingDelegate ; protected :)",
    "insertText": "FPreLoadScreenManager()"
  },
  {
    "label": "PlayPreLoadScreenAtIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayPreLoadScreenAtIndex(int32 Index)"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "HandleEarlyStartupPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEarlyStartupPlay()"
  },
  {
    "label": "EarlyPlayFrameTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EarlyPlayFrameTick()"
  },
  {
    "label": "GameLogicFrameTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GameLogicFrameTick()"
  },
  {
    "label": "EarlyPlayRenderFrameTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EarlyPlayRenderFrameTick()"
  },
  {
    "label": "HasActivePreLoadScreenTypeForEarlyStartup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasActivePreLoadScreenTypeForEarlyStartup()"
  },
  {
    "label": "PlatformSpecificGameLogicFrameTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlatformSpecificGameLogicFrameTick()"
  },
  {
    "label": "StaticRenderTick_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticRenderTick_RenderThread()"
  },
  {
    "label": "RenderTick_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderTick_RenderThread()"
  },
  {
    "label": "HandleEngineLoadingPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEngineLoadingPlay()"
  },
  {
    "label": "HandleCustomSplashScreenPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCustomSplashScreenPlay()"
  },
  {
    "label": "GetActivePreLoadScreen()",
    "kind": "Method",
    "detail": "Function (IPreLoadScreen*)",
    "insertText": "GetActivePreLoadScreen()"
  },
  {
    "label": "HandleStopPreLoadScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleStopPreLoadScreen()"
  },
  {
    "label": "CleanUpResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpResources()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FPreLoadScreenManagerDelete { void)",
    "insertText": "operator()(FPreLoadScreenManager* Ptr)"
  },
  {
    "label": "Android_PlatformSpecificGameLogicFrameTick()",
    "kind": "Method",
    "detail": "Function (delete Ptr ; } } ; TUniquePtr<FPreLoadScreenManager,FPreLoadScreenManagerDelete> Instance ; std::atomic<bool> bRenderingEnabled ; FCriticalSection ActivePreloadScreenCriticalSection ; TWeakPtr<IPreLoadScreen> ActivePreloadScreen ; TArray<TSharedPtr<IPreLoadScreen>> PreLoadScreens ; int32 ActivePreLoadScreenIndex ; double LastTickTime ; TSharedPtr<FPreLoadSlateWidgetRenderer> WidgetRenderer ; TWeakPtr<class SWindow> MainWindow ; TSharedPtr<class SVirtualWindow> VirtualRenderWindow ; bool bInitialized ; FPreLoadScreenSlateSynchMechanism* SyncMechanism ; FPreLoadScreenSlateSynchMechanism ; bool bIsResponsibleForRendering ; bool bHasRenderPreLoadScreenFrame_RenderThread ; double LastRenderTickTime ; float OriginalSlateSleepVariableValue ; bool bIsEngineLoadingComplete ; private : # if PLATFORM_ANDROID void)",
    "insertText": "Android_PlatformSpecificGameLogicFrameTick()"
  },
  {
    "label": "IOS_PlatformSpecificGameLogicFrameTick()",
    "kind": "Method",
    "detail": "Function (# endif # if PLATFORM_IOS void)",
    "insertText": "IOS_PlatformSpecificGameLogicFrameTick()"
  }
]