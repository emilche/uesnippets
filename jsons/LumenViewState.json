[
  {
    "label": "FLumenGatherCvarState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenGatherCvarState"
  },
  {
    "label": "FScreenProbeGatherTemporalState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenProbeGatherTemporalState"
  },
  {
    "label": "FReSTIRTemporalResamplingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReSTIRTemporalResamplingState"
  },
  {
    "label": "FReSTIRTemporalAccumulationState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReSTIRTemporalAccumulationState"
  },
  {
    "label": "FReSTIRGatherTemporalState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReSTIRGatherTemporalState"
  },
  {
    "label": "FReflectionTemporalState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionTemporalState"
  },
  {
    "label": "FRadianceCacheClipmap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheClipmap"
  },
  {
    "label": "FRadianceCacheState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheState"
  },
  {
    "label": "FLumenViewState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenViewState"
  },
  {
    "label": "FLumenGatherCvarState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderGraphResources . h \" # include \" SceneTexturesConfig . h \" # include \" Math / LFSR . h \" const int32 NumLumenDiffuseIndirectTextures = 2 ; const int32 MaxVoxelClipmapLevels = 8 ; class FLumenGatherCvarState { public :)",
    "insertText": "FLumenGatherCvarState()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (int32 TraceMeshSDFs ; float MeshSDFTraceDistance ; float SurfaceBias ; int32 VoxelTracingMode ; int32 DirectLighting ; bool)",
    "insertText": "operator(const FLumenGatherCvarState& Rhs)"
  },
  {
    "label": "FIntRect()",
    "kind": "Method",
    "detail": "Function (DiffuseIndirectHistoryViewRect =)",
    "insertText": "FIntRect(0, 0, 0, 0)"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (DiffuseIndirectHistoryScreenPositionScaleBias =)",
    "insertText": "FVector4f(0, 0, 0, 0)"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (HistorySceneTexturesExtent =)",
    "insertText": "FIntPoint(0,0)"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (HistorySubstrateMaxClosureCount = 0 ; } void)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "AddCrossGPUTransfers()",
    "kind": "Method",
    "detail": "Function (} # if WITH_MGPU void)",
    "insertText": "AddCrossGPUTransfers(uint32 SourceGPUIndex, uint32 DestGPUIndex, TArray<FTransferResourceParams>& OutTransfers)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(NAME) \\ if (NAME) OutTransfers.Add(FTransferResourceParams(NAME->GetRHI(), SourceGPUIndex, DestGPUIndex, false, false)) TRANSFER_LUMEN_RESOURCE(DiffuseIndirectHistoryRT)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(RoughSpecularIndirectHistoryRT)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(NumFramesAccumulatedRT)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(FastUpdateModeHistoryRT)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(HistoryScreenProbeSceneDepth)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(HistoryScreenProbeTranslatedWorldPosition)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeHistoryScreenProbeRadiance)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ImportanceSamplingHistoryScreenProbeRadiance)"
  },
  {
    "label": "GetGPUSizeBytes()",
    "kind": "Method",
    "detail": "Function (# undef TRANSFER_LUMEN_RESOURCE } # endif uint64)",
    "insertText": "GetGPUSizeBytes(bool bLogSizes)"
  },
  {
    "label": "FReSTIRTemporalResamplingState()",
    "kind": "Method",
    "detail": "Function (} ; class FReSTIRTemporalResamplingState { public : FIntRect HistoryViewRect ; FVector4f HistoryScreenPositionScaleBias ; FIntPoint HistoryReservoirViewSize ; FIntPoint HistoryReservoirBufferSize ; TRefCountPtr<IPooledRenderTarget> TemporalReservoirRayDirectionRT ; TRefCountPtr<IPooledRenderTarget> TemporalReservoirTraceRadianceRT ; TRefCountPtr<IPooledRenderTarget> TemporalReservoirTraceHitDistanceRT ; TRefCountPtr<IPooledRenderTarget> TemporalReservoirTraceHitNormalRT ; TRefCountPtr<IPooledRenderTarget> TemporalReservoirWeightsRT ; TRefCountPtr<IPooledRenderTarget> DownsampledDepthHistoryRT ; TRefCountPtr<IPooledRenderTarget> DownsampledNormalHistoryRT ;)",
    "insertText": "FReSTIRTemporalResamplingState()"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (HistoryReservoirViewSize =)",
    "insertText": "FIntPoint(0, 0)"
  },
  {
    "label": "FReSTIRTemporalAccumulationState()",
    "kind": "Method",
    "detail": "Function (} } ; class FReSTIRTemporalAccumulationState { public : FIntRect DiffuseIndirectHistoryViewRect ; FVector4f DiffuseIndirectHistoryScreenPositionScaleBias ; TRefCountPtr<IPooledRenderTarget> DiffuseIndirectHistoryRT ; TRefCountPtr<IPooledRenderTarget> RoughSpecularIndirectHistoryRT ; TRefCountPtr<IPooledRenderTarget> ResolveVarianceHistoryRT ; TRefCountPtr<IPooledRenderTarget> NumFramesAccumulatedRT ; FIntPoint HistorySceneTexturesExtent ; FIntPoint HistoryEffectiveResolution ;)",
    "insertText": "FReSTIRTemporalAccumulationState()"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (FVector4f HistoryScreenPositionScaleBias =)",
    "insertText": "FVector4f(0.0f, 0.0f, 0.0f, 0.0f)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(NAME) \\ if (NAME) OutTransfers.Add(FTransferResourceParams(NAME->GetRHI(), SourceGPUIndex, DestGPUIndex, false, false)) TRANSFER_LUMEN_RESOURCE(SpecularAndSecondMomentHistory)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(NumFramesAccumulatedHistory)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(LayerSceneDepthHistory)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(LayerSceneNormalHistory)"
  },
  {
    "label": "FRadianceCacheState()",
    "kind": "Method",
    "detail": "Function (} ; class FRadianceCacheClipmap { public : FVector Center ; float Extent ; FVector3f CornerTranslatedWorldSpace ; float ProbeTMin ; FVector VolumeUVOffset ; float CellSize ; } ; class FRadianceCacheState { public :)",
    "insertText": "FRadianceCacheState()"
  },
  {
    "label": "ReleaseTextures()",
    "kind": "Method",
    "detail": "Function (} TArray<FRadianceCacheClipmap> Clipmaps ; float ClipmapWorldExtent = 0 . 0 f ; float ClipmapDistributionBase = 0 . 0 f ; TRefCountPtr<IPooledRenderTarget> RadianceProbeIndirectionTexture ; TRefCountPtr<IPooledRenderTarget> RadianceProbeAtlasTexture ; TRefCountPtr<IPooledRenderTarget> FinalRadianceAtlas ; TRefCountPtr<IPooledRenderTarget> FinalIrradianceAtlas ; TRefCountPtr<IPooledRenderTarget> ProbeOcclusionAtlas ; TRefCountPtr<IPooledRenderTarget> DepthProbeAtlasTexture ; TRefCountPtr<FRDGPooledBuffer> ProbeAllocator ; TRefCountPtr<FRDGPooledBuffer> ProbeFreeListAllocator ; TRefCountPtr<FRDGPooledBuffer> ProbeFreeList ; TRefCountPtr<FRDGPooledBuffer> ProbeLastUsedFrame ; TRefCountPtr<FRDGPooledBuffer> ProbeLastTracedFrame ; TRefCountPtr<FRDGPooledBuffer> ProbeWorldOffset ; void)",
    "insertText": "ReleaseTextures()"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(NAME) \\ if (NAME) OutTransfers.Add(FTransferResourceParams(NAME->GetRHI(), SourceGPUIndex, DestGPUIndex, false, false)) TRANSFER_LUMEN_RESOURCE(RadianceProbeIndirectionTexture)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(RadianceProbeAtlasTexture)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(FinalRadianceAtlas)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(FinalIrradianceAtlas)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeOcclusionAtlas)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(DepthProbeAtlasTexture)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeAllocator)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeFreeListAllocator)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeFreeList)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeLastUsedFrame)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeLastTracedFrame)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(ProbeWorldOffset)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(NAME) \\ if (NAME) OutTransfers.Add(FTransferResourceParams(NAME->GetRHI(), SourceGPUIndex, DestGPUIndex, false, false)) TRANSFER_LUMEN_RESOURCE(TranslucencyVolume0)"
  },
  {
    "label": "TRANSFER_LUMEN_RESOURCE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TRANSFER_LUMEN_RESOURCE(TranslucencyVolume1)"
  },
  {
    "label": "AddCrossGPUTransfers()",
    "kind": "Method",
    "detail": "Function (# undef TRANSFER_LUMEN_RESOURCE ScreenProbeGatherState .)",
    "insertText": "AddCrossGPUTransfers(SourceGPUIndex, DestGPUIndex, OutTransfers)"
  }
]