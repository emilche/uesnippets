[
  {
    "label": "FFoliageHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFoliageHelper"
  },
  {
    "label": "GetFoliageActorInstanceTag()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameFramework / Actor . h \" class FFoliageHelper { public : # if WITH_EDITOR FName)",
    "insertText": "GetFoliageActorInstanceTag()"
  },
  {
    "label": "NAME_FoliageActorInstanceTag()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NAME_FoliageActorInstanceTag(TEXT(\"FoliageActorInstance\"))"
  },
  {
    "label": "SetHidden()",
    "kind": "Method",
    "detail": "Function (FSetActorHiddenInSceneOutliner)",
    "insertText": "SetHidden(InActor, bOwned)"
  },
  {
    "label": "AddUnique()",
    "kind": "Method",
    "detail": "Function (InActor -> Tags .)",
    "insertText": "AddUnique(GetFoliageActorInstanceTag())"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} else { InActor -> Tags .)",
    "insertText": "Remove(GetFoliageActorInstanceTag())"
  },
  {
    "label": "IsOwnedByFoliage()",
    "kind": "Method",
    "detail": "Function (} } } bool)",
    "insertText": "IsOwnedByFoliage(const AActor* InActor)"
  }
]