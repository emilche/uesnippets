[
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "IMessageTransportHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageTransportHandler"
  },
  {
    "label": "IMessageTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageTransport"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Misc / Guid . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class IMessageContext ; class IMessageTransportHandler ; class IMessageTransport { public : FName)",
    "insertText": "GetDebugName()"
  },
  {
    "label": "StartTransport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartTransport(IMessageTransportHandler& Handler)"
  },
  {
    "label": "StopTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopTransport()"
  },
  {
    "label": "TransportMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransportMessage(const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context, const TArray<FGuid>& Recipients)"
  },
  {
    "label": "IMessageTransport()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "IMessageTransport()"
  }
]