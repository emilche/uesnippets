[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "FActiveTimerHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Types / WidgetActiveTimerDelegate . h \" enum class EActiveTimerReturnType : uint8 ; class FActiveTimerHandle { public :)",
    "insertText": "FActiveTimerHandle(float InExecutionPeriod, FWidgetActiveTimerDelegate InTimerFunction, double InNextExecutionTime)"
  },
  {
    "label": "IsPendingExecution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPendingExecution()"
  },
  {
    "label": "UpdateExecutionPendingState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateExecutionPendingState(double CurrentTime)"
  },
  {
    "label": "ExecuteIfPending()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "ExecuteIfPending(double CurrentTime, float DeltaTime)"
  },
  {
    "label": "IsReady()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsReady(double CurrentTime)"
  }
]