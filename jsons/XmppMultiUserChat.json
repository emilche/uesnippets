[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FXmppChatMember",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppChatMember"
  },
  {
    "label": "FXmppRoomInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppRoomInfo"
  },
  {
    "label": "FXmppRoomConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppRoomConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FXmppChatRoomConfigOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppChatRoomConfigOp"
  },
  {
    "label": "FXmppMultiUserChatStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppMultiUserChatStrophe"
  },
  {
    "label": "IXmppMultiUserChat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppMultiUserChat"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppConnection . h \" # include \" XmppPresence . h \" # include \" XmppChat . h \" typedef FString FXmppRoomId ; namespace EXmppChatMemberAffiliation { enum Type { Owner,Admin,Member,Outcast,None } ; const TCHAR*)",
    "insertText": "ToString(Type Affiliation)"
  },
  {
    "label": "ToType()",
    "kind": "Method",
    "detail": "Function (} } Type)",
    "insertText": "ToType(const FString& Affiliation)"
  },
  {
    "label": "ToType()",
    "kind": "Method",
    "detail": "Function (} } Type)",
    "insertText": "ToType(const FString& Role)"
  },
  {
    "label": "FXmppChatMember()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FXmppChatMember(const FXmppMucPresence& MemberPresence) : Nickname(MemberPresence.GetNickName()) , RoomMemberJid(MemberPresence.UserJid) , UserJid(MemberPresence.MemberJid) , UserPresence(MemberPresence) , Affiliation(EXmppChatMemberAffiliation::ToType(MemberPresence.Affiliation)) , Role(EXmppChatMemberRole::ToType(MemberPresence.Role))"
  },
  {
    "label": "ToDebugString()",
    "kind": "Method",
    "detail": "Function (} FString Nickname ; FXmppUserJid RoomMemberJid ; FXmppUserJid UserJid ; FXmppUserPresence UserPresence ; EXmppChatMemberAffiliation::Type Affiliation ; EXmppChatMemberRole::Type Role ; FString)",
    "insertText": "ToDebugString()"
  },
  {
    "label": "FXmppRoomInfo()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TSharedPtr<FXmppChatMember,ESPMode::ThreadSafe> FXmppChatMemberPtr ; typedef TSharedRef<FXmppChatMember,ESPMode::ThreadSafe> FXmppChatMemberRef ; class FXmppRoomInfo { public :)",
    "insertText": "FXmppRoomInfo() : bIsPrivate(false)"
  },
  {
    "label": "FXmppRoomConfig()",
    "kind": "Method",
    "detail": "Function (} } ; class FXmppRoomConfig { public :)",
    "insertText": "FXmppRoomConfig() : RoomName(TEXT(\"\")) , RoomDesc(TEXT(\"\")) , bIsPrivate(true) , Password(TEXT(\"\")) , bIsPersistent(false) , bAllowPublicSearch(false) , bIsModerated(false) , bIsMembersOnly(false) , bAllowChangeSubject(false) , MaxMsgHistory(0) , RoomAnonymity(ERoomAnonymity::Semianonymous)"
  },
  {
    "label": "ConvertRoomAnonymityToString()",
    "kind": "Method",
    "detail": "Function (} enum class ERoomAnonymity { Semianonymous,Nonanonymous,Fullanonymous } ; const FString)",
    "insertText": "ConvertRoomAnonymityToString(ERoomAnonymity InRoomAnonymity)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(InRoomAnonymity == ERoomAnonymity::Semianonymous)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(InRoomAnonymity == ERoomAnonymity::Fullanonymous)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "TEXT(\"INVALID ROOMANONYMITY ENUM\")"
  },
  {
    "label": "IXmppMultiUserChat()",
    "kind": "Method",
    "detail": "Function (} } FString RoomName ; FString RoomDesc ; bool bIsPrivate ; FString Password ; bool bIsPersistent ; private : bool bAllowPublicSearch ; bool bIsModerated ; bool bIsMembersOnly ; bool bAllowChangeSubject ; int32 MaxMsgHistory ; ERoomAnonymity RoomAnonymity ; class FXmppChatRoomConfigOp ; class FXmppMultiUserChatStrophe ; } ; class IXmppMultiUserChat { public : ~)",
    "insertText": "IXmppMultiUserChat()"
  },
  {
    "label": "CreateRoom()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CreateRoom(const FXmppRoomId& RoomId, const FString& Nickname, const FXmppRoomConfig& RoomConfig = FXmppRoomConfig())"
  },
  {
    "label": "ConfigureRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConfigureRoom(const FXmppRoomId& RoomId, const FXmppRoomConfig& RoomConfig)"
  },
  {
    "label": "JoinPublicRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JoinPublicRoom(const FXmppRoomId& RoomId, const FString& Nickname)"
  },
  {
    "label": "JoinPrivateRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JoinPrivateRoom(const FXmppRoomId& RoomId, const FString& Nickname, const FString& Password)"
  },
  {
    "label": "RegisterMember()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterMember(const FXmppRoomId& RoomId, const FString& Nickname)"
  },
  {
    "label": "UnregisterMember()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterMember(const FXmppRoomId& RoomId, const FString& Nickname)"
  },
  {
    "label": "ExitRoom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExitRoom(const FXmppRoomId& RoomId)"
  },
  {
    "label": "SendChat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendChat(const FXmppRoomId& RoomId, const FString& MsgBody, const FString& ChatInfo)"
  },
  {
    "label": "GetJoinedRooms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetJoinedRooms(TArray<FXmppRoomId>& OutRooms)"
  },
  {
    "label": "RefreshRoomInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RefreshRoomInfo(const FXmppRoomId& RoomId)"
  },
  {
    "label": "GetRoomInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRoomInfo(const FXmppRoomId& RoomId, FXmppRoomInfo& OutRoomInfo)"
  },
  {
    "label": "GetMembers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMembers(const FXmppRoomId& RoomId, TArray<FXmppChatMemberRef>& OutMembers)"
  },
  {
    "label": "GetMember()",
    "kind": "Method",
    "detail": "Function (FXmppChatMemberPtr)",
    "insertText": "GetMember(const FXmppRoomId& RoomId, const FXmppUserJid& MemberJid)"
  },
  {
    "label": "GetLastMessages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLastMessages(const FXmppRoomId& RoomId, int32 NumMessages, TArray< TSharedRef<FXmppChatMessage> >& OutMessages)"
  },
  {
    "label": "HandleMucPresence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMucPresence(const FXmppMucPresence& MemberPresence)"
  },
  {
    "label": "DumpMultiUserChatState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMultiUserChatState()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomCreateComplete, const TSharedRef<IXmppConnection>& , bool , const FXmppRoomId& , const FString&)"
  },
  {
    "label": "OnRoomCreated()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomCreateComplete&)",
    "insertText": "OnRoomCreated()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomConfigureComplete, const TSharedRef<IXmppConnection>& , bool , const FXmppRoomId& , const FString&)"
  },
  {
    "label": "OnRoomConfigured()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomConfigureComplete&)",
    "insertText": "OnRoomConfigured()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomInfoRefreshComplete, const TSharedRef<IXmppConnection>& , bool , const FXmppRoomId& , const FString&)"
  },
  {
    "label": "OnRoomInfoRefreshed()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomInfoRefreshComplete&)",
    "insertText": "OnRoomInfoRefreshed()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomJoinPublicComplete, const TSharedRef<IXmppConnection>& , bool , const FXmppRoomId& , const FString&)"
  },
  {
    "label": "OnJoinPublicRoom()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomJoinPublicComplete&)",
    "insertText": "OnJoinPublicRoom()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomJoinPrivateComplete, const TSharedRef<IXmppConnection>& , bool , const FXmppRoomId& , const FString&)"
  },
  {
    "label": "OnJoinPrivateRoom()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomJoinPrivateComplete&)",
    "insertText": "OnJoinPrivateRoom()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomExitComplete, const TSharedRef<IXmppConnection>& , bool , const FXmppRoomId& , const FString&)"
  },
  {
    "label": "OnExitRoom()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomExitComplete&)",
    "insertText": "OnExitRoom()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppRoomMemberJoin, const TSharedRef<IXmppConnection>& , const FXmppRoomId& , const FXmppUserJid&)"
  },
  {
    "label": "OnRoomMemberJoin()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomMemberJoin&)",
    "insertText": "OnRoomMemberJoin()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppRoomMemberExit, const TSharedRef<IXmppConnection>& , const FXmppRoomId& , const FXmppUserJid&)"
  },
  {
    "label": "OnRoomMemberExit()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomMemberExit&)",
    "insertText": "OnRoomMemberExit()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppRoomMemberChanged, const TSharedRef<IXmppConnection>& , const FXmppRoomId& , const FXmppUserJid&)"
  },
  {
    "label": "OnRoomMemberChanged()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomMemberChanged&)",
    "insertText": "OnRoomMemberChanged()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnXmppRoomChatReceived, const TSharedRef<IXmppConnection>& , const FXmppRoomId& , const FXmppUserJid& , const TSharedRef<FXmppChatMessage>&)"
  },
  {
    "label": "OnRoomChatReceived()",
    "kind": "Method",
    "detail": "Function (FOnXmppRoomChatReceived&)",
    "insertText": "OnRoomChatReceived()"
  }
]