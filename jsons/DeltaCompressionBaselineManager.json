[
  {
    "label": "UReplicationSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReplicationSystem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FChangeMaskCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChangeMaskCache"
  },
  {
    "label": "FDeltaCompressionBaselineInvalidationTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeltaCompressionBaselineInvalidationTracker"
  },
  {
    "label": "FNetRefHandleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRefHandleManager"
  },
  {
    "label": "FReplicationConnections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationConnections"
  },
  {
    "label": "FDeltaCompressionBaselineManagerInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeltaCompressionBaselineManagerInitParams"
  },
  {
    "label": "FDeltaCompressionBaselineManagerPreSendUpdateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeltaCompressionBaselineManagerPreSendUpdateParams"
  },
  {
    "label": "FDeltaCompressionBaselineManagerPostSendUpdateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeltaCompressionBaselineManagerPostSendUpdateParams"
  },
  {
    "label": "FDeltaCompressionBaselineManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeltaCompressionBaselineManager"
  },
  {
    "label": "FInternalBaseline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternalBaseline"
  },
  {
    "label": "FObjectBaselineInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectBaselineInfo"
  },
  {
    "label": "FPerObjectInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerObjectInfo"
  },
  {
    "label": "FBaselineSharingContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaselineSharingContext"
  },
  {
    "label": "IsDeltaCompressionEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Net / Core / NetBitArray . h \" # include \" Iris / ReplicationSystem / DeltaCompression / DeltaCompressionBaseline . h \" # include \" Iris / ReplicationSystem / DeltaCompression / DeltaCompressionBaselineStorage . h \" class UReplicationSystem ; namespace UE::Net { enum class ENetObjectDeltaCompressionStatus : unsigned ; } namespace UE::Net::Private { struct FChangeMaskCache ; class FDeltaCompressionBaselineInvalidationTracker ; typedef uint32 FInternalNetRefIndex ; class FNetRefHandleManager ; class FReplicationConnections ; } namespace UE::Net::Private { bool)",
    "insertText": "IsDeltaCompressionEnabled()"
  },
  {
    "label": "FDeltaCompressionBaselineManager()",
    "kind": "Method",
    "detail": "Function (struct FDeltaCompressionBaselineManagerInitParams { const FDeltaCompressionBaselineInvalidationTracker* BaselineInvalidationTracker = nullptr ; FReplicationConnections* Connections = nullptr ; const FNetRefHandleManager* NetRefHandleManager = nullptr ; FReplicationStateStorage* ReplicationStateStorage = nullptr ; UReplicationSystem* ReplicationSystem = nullptr ; FInternalNetRefIndex MaxNetObjectCount = 0 ; FInternalNetRefIndex MaxInternalNetRefIndex = 0 ; uint32 MaxDeltaCompressedObjectCount = 0 ; } ; struct FDeltaCompressionBaselineManagerPreSendUpdateParams { const FChangeMaskCache* ChangeMaskCache = nullptr ; } ; struct FDeltaCompressionBaselineManagerPostSendUpdateParams { } ; class FDeltaCompressionBaselineManager { public : enum : uint32 { MaxBaselineCount = 2 } ; enum : uint32 { InvalidBaselineIndex = MaxBaselineCount } ; enum : uint32 { BaselineIndexBitCount = 2 } ;)",
    "insertText": "FDeltaCompressionBaselineManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FDeltaCompressionBaselineManagerInitParams& InitParams)"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "OnMaxInternalNetRefIndexIncreased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxInternalNetRefIndexIncreased(UE::Net::Private::FInternalNetRefIndex NewMaxInternalIndex)"
  },
  {
    "label": "PreSendUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreSendUpdate(FDeltaCompressionBaselineManagerPreSendUpdateParams& UpdateParams)"
  },
  {
    "label": "PostSendUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSendUpdate(FDeltaCompressionBaselineManagerPostSendUpdateParams& UpdateParams)"
  },
  {
    "label": "AddConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConnection(uint32 ConnectionId)"
  },
  {
    "label": "RemoveConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConnection(uint32 ConnectionId)"
  },
  {
    "label": "SetDeltaCompressionStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeltaCompressionStatus(FInternalNetRefIndex Index, ENetObjectDeltaCompressionStatus Status)"
  },
  {
    "label": "GetDeltaCompressionStatus()",
    "kind": "Method",
    "detail": "Function (ENetObjectDeltaCompressionStatus)",
    "insertText": "GetDeltaCompressionStatus(FInternalNetRefIndex Index)"
  },
  {
    "label": "GetMaxDeltaCompressedObjectCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMaxDeltaCompressedObjectCount()"
  },
  {
    "label": "CreateBaseline()",
    "kind": "Method",
    "detail": "Function (FDeltaCompressionBaseline)",
    "insertText": "CreateBaseline(uint32 ConnId, uint32 ObjectIndex, uint32 BaselineIndex)"
  },
  {
    "label": "DestroyBaseline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBaseline(uint32 ConnId, uint32 ObjectIndex, uint32 BaselineIndex)"
  },
  {
    "label": "LostBaseline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LostBaseline(uint32 ConnId, uint32 ObjectIndex, uint32 BaselineIndex)"
  },
  {
    "label": "GetBaseline()",
    "kind": "Method",
    "detail": "Function (FDeltaCompressionBaseline)",
    "insertText": "GetBaseline(uint32 ConnId, uint32 ObjectIndex, uint32 BaselineIndex)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (private : using ObjectInfoIndexType = uint16 ; enum : unsigned { InvalidObjectInfoIndex = 0,InvalidBaselineStateInfoIndex = 0,InvalidInternalIndex = 0,ObjectInfoGrowCount = 1 2 8,} ; enum class EChangeMaskBehavior : unsigned { Discard,Merge,} ; class FInternalBaseline { public : bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPerObjectInfo()"
  },
  {
    "label": "UpdateScope()",
    "kind": "Method",
    "detail": "Function (public : ChangeMaskStorageType* ChangeMasksForConnections ; uint32 ObjectIndex ; uint32 PrevBaselineCreationFrame ; uint16 ChangeMaskStride ; FObjectBaselineInfo BaselinesForConnections [ 1 ] ; } ; struct FBaselineSharingContext { FNetBitArray ObjectInfoIndicesWithNewBaseline ; TArray<DeltaCompressionBaselineStateInfoIndexType> ObjectInfoIndexToBaselineInfoIndex ; uint32 CreatedBaselineCount = 0 ; } ; private : void)",
    "insertText": "UpdateScope()"
  },
  {
    "label": "UpdateDirtyStateMasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDirtyStateMasks(const FChangeMaskCache* ChangeMaskCache)"
  },
  {
    "label": "AddObjectToScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectToScope(uint32 ObjectIndex)"
  },
  {
    "label": "RemoveObjectFromScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectFromScope(uint32 ObjectIndex)"
  },
  {
    "label": "AllocPerObjectInfoForObject()",
    "kind": "Method",
    "detail": "Function (FPerObjectInfo*)",
    "insertText": "AllocPerObjectInfoForObject(uint32 ObjectIndex)"
  },
  {
    "label": "FreePerObjectInfoForObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreePerObjectInfoForObject(uint32 ObjectIndex)"
  },
  {
    "label": "ConstructPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructPerObjectInfo(FPerObjectInfo*)"
  },
  {
    "label": "DestructPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestructPerObjectInfo(FPerObjectInfo*)"
  },
  {
    "label": "AllocPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (ObjectInfoIndexType)",
    "insertText": "AllocPerObjectInfo()"
  },
  {
    "label": "FreePerObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreePerObjectInfo(ObjectInfoIndexType Index)"
  },
  {
    "label": "GetPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (FPerObjectInfo*)",
    "insertText": "GetPerObjectInfo(ObjectInfoIndexType Index)"
  },
  {
    "label": "GetPerObjectInfoForObject()",
    "kind": "Method",
    "detail": "Function (FPerObjectInfo*)",
    "insertText": "GetPerObjectInfoForObject(uint32 ObjectIndex)"
  },
  {
    "label": "FreeAllPerObjectInfos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeAllPerObjectInfos()"
  },
  {
    "label": "DestroyBaseline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBaseline(uint32 ConnId, uint32 ObjectIndex, uint32 BaselineIndex, EChangeMaskBehavior ChangeMaskBehavior)"
  },
  {
    "label": "ReleaseInternalBaseline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseInternalBaseline(FInternalBaseline& InternalBaseline)"
  },
  {
    "label": "AdjustBaselineCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustBaselineCount(const FPerObjectInfo* ObjectInfo, ObjectInfoIndexType ObjectInfoIndex, int16 Adjustment)"
  },
  {
    "label": "ReleaseBaselinesForConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseBaselinesForConnection(uint32 ConnId)"
  },
  {
    "label": "ConstructBaselineSharingContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructBaselineSharingContext(FBaselineSharingContext&)"
  },
  {
    "label": "DestructBaselineSharingContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestructBaselineSharingContext(FBaselineSharingContext&)"
  },
  {
    "label": "DoesObjectSupportDeltaCompression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesObjectSupportDeltaCompression(uint32 ObjectIndex)"
  },
  {
    "label": "GetChangeMaskPointerForBaseline()",
    "kind": "Method",
    "detail": "Function (ChangeMaskStorageType*)",
    "insertText": "GetChangeMaskPointerForBaseline(const FPerObjectInfo*, uint32 ConnId, uint32 BaselineIndex)"
  },
  {
    "label": "GetChangeMaskPointerForConnection()",
    "kind": "Method",
    "detail": "Function (ChangeMaskStorageType*)",
    "insertText": "GetChangeMaskPointerForConnection(const FPerObjectInfo*, uint32 ConnId)"
  },
  {
    "label": "IsAllowedToCreateBaselineForObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowedToCreateBaselineForObject(uint32 ConnId, uint32 ObjectIndex, const FPerObjectInfo*, ObjectInfoIndexType InfoIndex)"
  },
  {
    "label": "InvalidateBaselinesDueToModifiedConditionals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateBaselinesDueToModifiedConditionals()"
  },
  {
    "label": "alignof()",
    "kind": "Method",
    "detail": "Function (private : FDeltaCompressionBaselineStorage BaselineStorage ; FNetBitArray DeltaCompressionEnabledObjects ; FNetBitArray UsedPerObjectInfos ; TArray<ObjectInfoIndexType> ObjectIndexToObjectInfoIndex ; TArray<uint8,TAlignedHeapAllocator<)",
    "insertText": "alignof(FPerObjectInfo)"
  },
  {
    "label": "checkSlow()",
    "kind": "Method",
    "detail": "Function (const SIZE_T ObjectInfoStorageIndex = Index* BytesPerObjectInfo ;)",
    "insertText": "checkSlow(ObjectInfoStorageIndex < (uint32)ObjectInfoStorage.Num())"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (uint8* StoragePointer = ObjectInfoStorage .)",
    "insertText": "GetData()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const ObjectInfoIndexType InfoIndex = ObjectIndexToObjectInfoIndex [ ObjectIndex ] ;)",
    "insertText": "if(InfoIndex != InvalidObjectInfoIndex)"
  },
  {
    "label": "GetChangeMaskPointerForBaseline()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } ChangeMaskStorageType*)",
    "insertText": "GetChangeMaskPointerForBaseline(const FPerObjectInfo* ObjectInfo, uint32 ConnId, uint32 BaselineIndex)"
  },
  {
    "label": "BaselineChangeMaskOffset()",
    "kind": "Method",
    "detail": "Function (const uint32 ChangeMaskStride = ObjectInfo -> ChangeMaskStride ; const SIZE_T)",
    "insertText": "BaselineChangeMaskOffset(MaxConnectionCount + 2U*ConnId + BaselineIndex)"
  },
  {
    "label": "GetChangeMaskPointerForConnection()",
    "kind": "Method",
    "detail": "Function (ChangeMaskStorageType* ChangeMaskPointer = ObjectInfo -> ChangeMasksForConnections + BaselineChangeMaskOffset ; return ChangeMaskPointer ; } ChangeMaskStorageType*)",
    "insertText": "GetChangeMaskPointerForConnection(const FPerObjectInfo* ObjectInfo, uint32 ConnId)"
  }
]