[
  {
    "label": "CYCLIC_REFRESH",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CYCLIC_REFRESH"
  },
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "macroblock_plane",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macroblock_plane"
  },
  {
    "label": "vp9_cyclic_refresh_alloc()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_AQ_CYCLICREFRESH_H_ # define VPX_VP9_ENCODER_VP9_AQ_CYCLICREFRESH_H_ # include \" vpx / vpx_integer . h \" # include \" vp9 / common / vp9_blockd . h \" # include \" vp9 / encoder / vp9_block . h \" # include \" vp9 / encoder / vp9_skin_detection . h \" # ifdef __cplusplus \" C \" { # endif # define CR_SEGMENT_ID_BASE 0 # define CR_SEGMENT_ID_BOOST1 1 # define CR_SEGMENT_ID_BOOST2 2 # define CR_MAX_RATE_TARGET_RATIO 4 . 0 struct CYCLIC_REFRESH { int percent_refresh ; int max_qdelta_perc ; int sb_index ; int time_for_refresh ; int target_num_seg_blocks ; int actual_num_seg1_blocks ; int actual_num_seg2_blocks ; int rdmult ; signed char* map ; uint8_t* last_coded_q_map ; int64_t thresh_rate_sb ; int64_t thresh_dist_sb ; int16_t motion_thresh ; double rate_ratio_qdelta ; int rate_boost_fac ; double low_content_avg ; int qindex_delta [ 3 ] ; int reduce_refresh ; double weight_segment ; int apply_cyclic_refresh ; int counter_encode_maxq_scene_change ; int skip_flat_static_blocks ; int content_mode ; } ; struct VP9_COMP ; typedef struct CYCLIC_REFRESH CYCLIC_REFRESH ; CYCLIC_REFRESH*)",
    "insertText": "vp9_cyclic_refresh_alloc(int mi_rows, int mi_cols)"
  },
  {
    "label": "vp9_cyclic_refresh_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_free(CYCLIC_REFRESH *cr)"
  },
  {
    "label": "vp9_cyclic_refresh_estimate_bits_at_q()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_cyclic_refresh_estimate_bits_at_q(const struct VP9_COMP *cpi, double correction_factor)"
  },
  {
    "label": "vp9_cyclic_refresh_rc_bits_per_mb()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_cyclic_refresh_rc_bits_per_mb(const struct VP9_COMP *cpi, int i, double correction_factor)"
  },
  {
    "label": "vp9_cyclic_refresh_update_segment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_update_segment(struct VP9_COMP *const cpi, MODE_INFO *const mi, int mi_row, int mi_col, BLOCK_SIZE bsize, int64_t rate, int64_t dist, int skip, struct macroblock_plane *const p)"
  },
  {
    "label": "vp9_cyclic_refresh_update_sb_postencode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_update_sb_postencode(struct VP9_COMP *const cpi, const MODE_INFO *const mi, int mi_row, int mi_col, BLOCK_SIZE bsize)"
  },
  {
    "label": "vp9_cyclic_refresh_postencode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_postencode(struct VP9_COMP *const cpi)"
  },
  {
    "label": "vp9_cyclic_refresh_set_golden_update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_set_golden_update(struct VP9_COMP *const cpi)"
  },
  {
    "label": "vp9_cyclic_refresh_update_parameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_update_parameters(struct VP9_COMP *const cpi)"
  },
  {
    "label": "vp9_cyclic_refresh_setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_setup(struct VP9_COMP *const cpi)"
  },
  {
    "label": "vp9_cyclic_refresh_get_rdmult()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_cyclic_refresh_get_rdmult(const CYCLIC_REFRESH *cr)"
  },
  {
    "label": "vp9_cyclic_refresh_reset_resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_cyclic_refresh_reset_resize(struct VP9_COMP *const cpi)"
  },
  {
    "label": "cyclic_refresh_segment_id_boosted()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "cyclic_refresh_segment_id_boosted(int segment_id)"
  }
]