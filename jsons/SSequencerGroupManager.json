[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "UMovieSceneNodeGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneNodeGroup"
  },
  {
    "label": "FSequencerNodeGroupTreeNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerNodeGroupTreeNode"
  },
  {
    "label": "FSequencerNodeGroupNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerNodeGroupNode"
  },
  {
    "label": "SSequencerGroupManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerGroupManager"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STreeView . h \" class FSequencer ; class FMenuBuilder ; class UMovieScene ; class UMovieSceneNodeGroup ; struct FSequencerNodeGroupTreeNode ; struct FSequencerNodeGroupNode ; class SSequencerGroupManager : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerGroupManager)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FSequencer> InWeakSequencer)"
  },
  {
    "label": "SSequencerGroupManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SSequencerGroupManager()"
  },
  {
    "label": "GetSequencer()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSequencer>)",
    "insertText": "GetSequencer()"
  },
  {
    "label": "GetIconBrush()",
    "kind": "Method",
    "detail": "Function (} const FSlateBrush*)",
    "insertText": "GetIconBrush(TSharedPtr<FSequencerNodeGroupTreeNode> NodeGroupTreeNode)"
  },
  {
    "label": "RefreshNodeGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshNodeGroups()"
  },
  {
    "label": "GetMovieScene()",
    "kind": "Method",
    "detail": "Function (bNodeGroupsDirty = true ; } UMovieScene*)",
    "insertText": "GetMovieScene()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "UpdateTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTree()"
  },
  {
    "label": "HandleTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTreeSelectionChanged(TSharedPtr<FSequencerNodeGroupTreeNode> InSelectedNode, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "SelectItemsInGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectItemsInGroup(FSequencerNodeGroupNode* NodeGroupNode)"
  },
  {
    "label": "RequestDeleteNodeGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestDeleteNodeGroup(FSequencerNodeGroupNode* NodeGroupNode)"
  },
  {
    "label": "RemoveSelectedItemsFromNodeGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSelectedItemsFromNodeGroup()"
  },
  {
    "label": "CreateNodeGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNodeGroup()"
  },
  {
    "label": "GetSelectedItemsNodePaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedItemsNodePaths(TSet<FString>& OutSelectedNodePaths)"
  },
  {
    "label": "SelectSelectedItemsInSequencer()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SelectSelectedItemsInSequencer()"
  },
  {
    "label": "SelectItemsSelectedInSequencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectItemsSelectedInSequencer()"
  },
  {
    "label": "RequestRenameNodeGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRenameNodeGroup(UMovieSceneNodeGroup* NodeGroup)"
  },
  {
    "label": "OnContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (RequestedRenameNodeGroup = NodeGroup ; } private : TSharedPtr<SWidget>)",
    "insertText": "OnContextMenuOpening()"
  }
]