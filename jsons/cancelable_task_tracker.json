[
  {
    "label": "Location",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Location"
  },
  {
    "label": "ScopedClosureRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedClosureRunner"
  },
  {
    "label": "TaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskRunner"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "PostTask()",
    "kind": "Method",
    "detail": "Function (TaskId)",
    "insertText": "PostTask(TaskRunner* task_runner,\n                  const Location& from_here,\n                  OnceClosure task)"
  },
  {
    "label": "PostTaskAndReply()",
    "kind": "Method",
    "detail": "Function (TaskId)",
    "insertText": "PostTaskAndReply(TaskRunner* task_runner,\n                          const Location& from_here,\n                          OnceClosure task,\n                          OnceClosure reply)"
  },
  {
    "label": "NewTrackedTaskId()",
    "kind": "Method",
    "detail": "Function (TaskId)",
    "insertText": "NewTrackedTaskId(IsCanceledCallback* is_canceled_cb)"
  },
  {
    "label": "TryCancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryCancel(TaskId id)"
  },
  {
    "label": "TryCancelAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryCancelAll()"
  },
  {
    "label": "RunIfNotCanceled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunIfNotCanceled(\n      const scoped_refptr<SequencedTaskRunner>& origin_task_runner,\n      const scoped_refptr<TaskCancellationFlag>& flag,\n      OnceClosure task)"
  },
  {
    "label": "RunThenUntrackIfNotCanceled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunThenUntrackIfNotCanceled(\n      const scoped_refptr<SequencedTaskRunner>& origin_task_runner,\n      const scoped_refptr<TaskCancellationFlag>& flag,\n      OnceClosure task,\n      OnceClosure untrack)"
  },
  {
    "label": "IsCanceled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCanceled(\n      const scoped_refptr<SequencedTaskRunner>& origin_task_runner,\n      const scoped_refptr<TaskCancellationFlag>& flag,\n      const ScopedClosureRunner& cleanup_runner)"
  },
  {
    "label": "Track()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Track(TaskId id, scoped_refptr<TaskCancellationFlag> flag)"
  },
  {
    "label": "Untrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Untrack(TaskId id)"
  }
]