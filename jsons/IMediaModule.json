[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "IMediaCaptureSupport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaCaptureSupport"
  },
  {
    "label": "IMediaClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaClock"
  },
  {
    "label": "IMediaPlayerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaPlayerFactory"
  },
  {
    "label": "IMediaTicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaTicker"
  },
  {
    "label": "IMediaTimeSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaTimeSource"
  },
  {
    "label": "IMediaPlayerLifecycleManagerDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaPlayerLifecycleManagerDelegate"
  },
  {
    "label": "IMediaModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaModule"
  },
  {
    "label": "GetPlatformName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Delegates / Delegate . h \" # include \" Misc / Timespan . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SharedPointer . h \" class FName ; class IMediaCaptureSupport ; class IMediaClock ; class IMediaPlayerFactory ; class IMediaTicker ; class IMediaTimeSource ; class IMediaPlayerLifecycleManagerDelegate ; class IMediaModule : public IModuleInterface { public : FName)",
    "insertText": "GetPlatformName(const FGuid& PlatformGuid)"
  },
  {
    "label": "GetPlatformGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetPlatformGuid(const FName & PlatformName)"
  },
  {
    "label": "GetCaptureSupports()",
    "kind": "Method",
    "detail": "Function (const TArray<IMediaCaptureSupport*>&)",
    "insertText": "GetCaptureSupports()"
  },
  {
    "label": "RegisterCaptureSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCaptureSupport(IMediaCaptureSupport& Support)"
  },
  {
    "label": "UnregisterCaptureSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCaptureSupport(IMediaCaptureSupport& Support)"
  },
  {
    "label": "GetPlayerFactories()",
    "kind": "Method",
    "detail": "Function (public : const TArray<IMediaPlayerFactory*>&)",
    "insertText": "GetPlayerFactories()"
  },
  {
    "label": "GetPlayerFactory()",
    "kind": "Method",
    "detail": "Function (IMediaPlayerFactory*)",
    "insertText": "GetPlayerFactory(const FName& FactoryName)"
  },
  {
    "label": "GetPlayerFactory()",
    "kind": "Method",
    "detail": "Function (IMediaPlayerFactory*)",
    "insertText": "GetPlayerFactory(const FGuid& PlayerPluginGuid)"
  },
  {
    "label": "RegisterPlayerFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPlayerFactory(IMediaPlayerFactory& Factory)"
  },
  {
    "label": "UnregisterPlayerFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPlayerFactory(IMediaPlayerFactory& Factory)"
  },
  {
    "label": "SetPlayerLifecycleManagerDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlayerLifecycleManagerDelegate(IMediaPlayerLifecycleManagerDelegate* Delegate)"
  },
  {
    "label": "GetPlayerLifecycleManagerDelegate()",
    "kind": "Method",
    "detail": "Function (IMediaPlayerLifecycleManagerDelegate*)",
    "insertText": "GetPlayerLifecycleManagerDelegate()"
  },
  {
    "label": "CreateMediaPlayerInstanceID()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CreateMediaPlayerInstanceID()"
  },
  {
    "label": "GetClock()",
    "kind": "Method",
    "detail": "Function (public : IMediaClock&)",
    "insertText": "GetClock()"
  },
  {
    "label": "GetTicker()",
    "kind": "Method",
    "detail": "Function (IMediaTicker&)",
    "insertText": "GetTicker()"
  },
  {
    "label": "GetFrameStartTime()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetFrameStartTime()"
  },
  {
    "label": "GetOnTickPreEngineCompleted()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "GetOnTickPreEngineCompleted()"
  },
  {
    "label": "LockToTimecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockToTimecode(bool Locked)"
  },
  {
    "label": "SetTimeSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeSource(const TSharedPtr<IMediaTimeSource, ESPMode::ThreadSafe>& NewTimeSource)"
  },
  {
    "label": "GetTimeSource()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMediaTimeSource,ESPMode::ThreadSafe>)",
    "insertText": "GetTimeSource()"
  },
  {
    "label": "TickPostEngine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickPostEngine()"
  },
  {
    "label": "TickPostRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickPostRender()"
  },
  {
    "label": "TickPreEngine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickPreEngine()"
  },
  {
    "label": "TickPreSlate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickPreSlate()"
  },
  {
    "label": "IMediaModule()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "IMediaModule()"
  }
]