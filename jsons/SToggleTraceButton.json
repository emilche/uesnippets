[
  {
    "label": "ITraceController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITraceController"
  },
  {
    "label": "SToggleTraceButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToggleTraceButton"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class ITraceController ; namespace UE::TraceTools { class SToggleTraceButton : public SCompoundWidget {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SToggleTraceButton, SCompoundWidget, TRACETOOLS_API)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (StatusBar = 0,SlimToolbar = 1,} ;)",
    "insertText": "DECLARE_DELEGATE(FOnToggleTraceRequested)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SToggleTraceButton) : _ButtonSize(EButtonSize::StatusBar)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnToggleTraceRequested, OnToggleTraceRequested) SLATE_ATTRIBUTE(bool, IsTraceRunning) SLATE_ARGUMENT(EButtonSize, ButtonSize) SLATE_END_ARGS() public: TRACETOOLS_API SToggleTraceButton()"
  },
  {
    "label": "SToggleTraceButton()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SToggleTraceButton()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetRecordingButtonColor()",
    "kind": "Method",
    "detail": "Function (private : FSlateColor)",
    "insertText": "GetRecordingButtonColor()"
  },
  {
    "label": "GetRecordingButtonOutlineColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetRecordingButtonOutlineColor()"
  },
  {
    "label": "GetRecordingButtonTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRecordingButtonTooltipText()"
  },
  {
    "label": "GetStartTraceIconVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetStartTraceIconVisibility()"
  },
  {
    "label": "GetStopTraceIconVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetStopTraceIconVisibility()"
  },
  {
    "label": "ToggleTrace_OnClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleTrace_OnClicked()"
  },
  {
    "label": "GetToggleTraceCenterBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetToggleTraceCenterBrush()"
  },
  {
    "label": "GetToggleTraceOutlineBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetToggleTraceOutlineBrush()"
  },
  {
    "label": "GetToggleTraceStopBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetToggleTraceStopBrush()"
  }
]