[
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SOutputLogDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOutputLogDialog"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SWindow ; class SOutputLogDialog : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SOutputLogDialog)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr<SWindow>, ParentWindow) SLATE_ATTRIBUTE(FText, Header) SLATE_ATTRIBUTE(FText, Log) SLATE_ATTRIBUTE(FText, Footer) SLATE_ATTRIBUTE(TArray<FText>, Buttons) SLATE_END_ARGS() static UNREALED_API void Open(const FText& InTitle, const FText& InHeader, const FText& InLog, const FText& InFooter = FText::GetEmpty())"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Open(const FText& InTitle, const FText& InHeader, const FText& InLog, const FText& InFooter, const TArray<FText>& InButtons)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float LayoutScaleMultiplier)"
  },
  {
    "label": "CopyMessageToClipboard()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CopyMessageToClipboard()"
  },
  {
    "label": "HandleButtonClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "HandleButtonClicked(int32)"
  },
  {
    "label": "HandleCopyMessageButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleCopyMessageButtonClicked()"
  }
]