[
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPreviewMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPreviewMesh"
  },
  {
    "label": "UBrushStampIndicatorBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBrushStampIndicatorBuilder"
  },
  {
    "label": "UBrushStampIndicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBrushStampIndicator"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" InteractiveGizmo . h \" # include \" InteractiveGizmoBuilder . h \" # include \" BrushStampIndicator . generated . h \" class UPrimitiveComponent ; class UPreviewMesh ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API virtual UInteractiveGizmo* BuildGizmo(const FToolBuilderState& SceneState)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API virtual void Setup()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(IToolsContextRenderAPI* RenderAPI)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(float Radius, const FVector& Position, const FVector& Normal, float Falloff, float Strength)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(float Radius, const FTransform& WorldTransform, float Falloff)"
  }
]