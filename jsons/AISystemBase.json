[
  {
    "label": "UAISystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISystemBase"
  },
  {
    "label": "IAISystemModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAISystemModule"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Engine / EngineBaseTypes . h \" # include \" UObject / SoftObjectPath . h \" # include \" Modules / ModuleInterface . h \" # include \" AISystemBase . generated . h \")",
    "insertText": "UCLASS(abstract, config = Engine, defaultconfig, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual ~UAISystemBase()"
  },
  {
    "label": "InitializeActorsForPlay()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitializeActorsForPlay(bool bTimeGotReset) PURE_VIRTUAL(UAISystemBase::InitializeActorsForPlay,)"
  },
  {
    "label": "WorldOriginLocationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WorldOriginLocationChanged(FIntVector OldOriginLocation, FIntVector NewOriginLocation) PURE_VIRTUAL(UAISystemBase::WorldOriginLocationChanged,)"
  },
  {
    "label": "CleanupWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupWorld(bool bSessionEnded = true, bool bCleanupResources = true)"
  },
  {
    "label": "StartPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartPlay()"
  },
  {
    "label": "OnMatchStateSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMatchStateSet(FName NewMatchState)"
  },
  {
    "label": "GetAISystemClassName()",
    "kind": "Method",
    "detail": "Function (public : FSoftClassPath)",
    "insertText": "GetAISystemClassName()"
  },
  {
    "label": "GetAISystemModuleName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetAISystemModuleName()"
  },
  {
    "label": "ShouldInstantiateInNetMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldInstantiateInNetMode(ENetMode NetMode)"
  },
  {
    "label": "CreateAISystemInstance()",
    "kind": "Method",
    "detail": "Function (} ; class IAISystemModule : public IModuleInterface { public : UAISystemBase*)",
    "insertText": "CreateAISystemInstance(UWorld* World)"
  }
]