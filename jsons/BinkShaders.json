[
  {
    "label": "FPointerTableBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPointerTableBase"
  },
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FShaderCompilerEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCompilerEnvironment"
  },
  {
    "label": "FBinkDrawVS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBinkDrawVS"
  },
  {
    "label": "FBinkDrawYCbCrPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBinkDrawYCbCrPS"
  },
  {
    "label": "FALPHA",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FALPHA"
  },
  {
    "label": "FSRGB",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSRGB"
  },
  {
    "label": "FBinkDrawICtCpPS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBinkDrawICtCpPS"
  },
  {
    "label": "FTONEMAP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTONEMAP"
  },
  {
    "label": "FST2084",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FST2084"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GlobalShader . h \" # include \" HAL / PreprocessorHelpers . h \" # include \" Math / Vector4 . h \" # include \" PipelineStateCache . h \" # include \" RHI . h \" # include \" RenderResource . h \" # include \" Serialization / MemoryLayout . h \" # include \" Shader . h \" # include \" ShaderParameterMacros . h \" # include \" ShaderParameterMetadata . h \" # include \" ShaderParameterStruct . h \" # include \" ShaderParameterUtils . h \" # include \" ShaderPermutation . h \" class FPointerTableBase ; class FRDGTexture ; struct FShaderCompilerEnvironment ;)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FBinkParameters, ) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, tex0) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, tex1) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, tex2) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, tex3) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, tex4) SHADER_PARAMETER_SAMPLER(SamplerState, samp0) SHADER_PARAMETER_SAMPLER(SamplerState, samp1) SHADER_PARAMETER_SAMPLER(SamplerState, samp2) SHADER_PARAMETER_SAMPLER(SamplerState, samp3) SHADER_PARAMETER_SAMPLER(SamplerState, samp4) SHADER_PARAMETER(FVector4f, consta) SHADER_PARAMETER(FVector4f, crc) SHADER_PARAMETER(FVector4f, cbc) SHADER_PARAMETER(FVector4f, adj) SHADER_PARAMETER(FVector4f, yscale) SHADER_PARAMETER(FVector4f, xy_xform0) SHADER_PARAMETER(FVector4f, xy_xform1) SHADER_PARAMETER(FVector4f, uv_xform0) SHADER_PARAMETER(FVector4f, uv_xform1) SHADER_PARAMETER(FVector4f, uv_xform2) RENDER_TARGET_BINDING_SLOTS() END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_EXPORTED_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EXPORTED_SHADER_TYPE(FBinkDrawVS, Global, RENDERCORE_API)"
  },
  {
    "label": "SHADER_USE_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SHADER_USE_PARAMETER_STRUCT(FBinkDrawVS, FGlobalShader)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FParameters, ) SHADER_PARAMETER_STRUCT_INCLUDE(FBinkParameters, BinkParameters) END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_EXPORTED_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (struct FBinkDrawYCbCrPS : FGlobalShader {)",
    "insertText": "DECLARE_EXPORTED_SHADER_TYPE(FBinkDrawYCbCrPS, Global, RENDERCORE_API)"
  },
  {
    "label": "SHADER_USE_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SHADER_USE_PARAMETER_STRUCT(FBinkDrawYCbCrPS, FGlobalShader)"
  },
  {
    "label": "SHADER_PERMUTATION_BOOL()",
    "kind": "Method",
    "detail": "Function (class FALPHA :)",
    "insertText": "SHADER_PERMUTATION_BOOL(\"ALPHA\")"
  },
  {
    "label": "SHADER_PERMUTATION_BOOL()",
    "kind": "Method",
    "detail": "Function (class FSRGB :)",
    "insertText": "SHADER_PERMUTATION_BOOL(\"SRGB\")"
  },
  {
    "label": "DECLARE_EXPORTED_SHADER_TYPE()",
    "kind": "Method",
    "detail": "Function (struct FBinkDrawICtCpPS : FGlobalShader {)",
    "insertText": "DECLARE_EXPORTED_SHADER_TYPE(FBinkDrawICtCpPS, Global, RENDERCORE_API)"
  },
  {
    "label": "SHADER_USE_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SHADER_USE_PARAMETER_STRUCT(FBinkDrawICtCpPS, FGlobalShader)"
  },
  {
    "label": "SHADER_PERMUTATION_BOOL()",
    "kind": "Method",
    "detail": "Function (class FTONEMAP :)",
    "insertText": "SHADER_PERMUTATION_BOOL(\"TONEMAP\")"
  },
  {
    "label": "SHADER_PERMUTATION_BOOL()",
    "kind": "Method",
    "detail": "Function (class FST2084 :)",
    "insertText": "SHADER_PERMUTATION_BOOL(\"ST2084\")"
  }
]