[
  {
    "label": "celt_inner_prod_neon()",
    "kind": "Method",
    "detail": "Function (opus_val32)",
    "insertText": "celt_inner_prod_neon(const opus_val16 *x, const opus_val16 *y, int N)"
  },
  {
    "label": "dual_inner_prod_neon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dual_inner_prod_neon(const opus_val16 *x, const opus_val16 *y01,\n        const opus_val16 *y02, int N, opus_val32 *xy1, opus_val32 *xy2)"
  },
  {
    "label": "celt_pitch_xcorr_neon()",
    "kind": "Method",
    "detail": "Function (opus_val32)",
    "insertText": "celt_pitch_xcorr_neon(const opus_val16 *_x, const opus_val16 *_y,\n    opus_val32 *xcorr, int len, int max_pitch, int arch)"
  },
  {
    "label": "celt_pitch_xcorr_edsp()",
    "kind": "Method",
    "detail": "Function (opus_val32)",
    "insertText": "celt_pitch_xcorr_edsp(const opus_val16 *_x, const opus_val16 *_y,\n    opus_val32 *xcorr, int len, int max_pitch, int arch)"
  },
  {
    "label": "xcorr_kernel_neon_fixed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xcorr_kernel_neon_fixed(\n                    const opus_val16 *x,\n                    const opus_val16 *y,\n                    opus_val32       sum[4],\n                    int              len)"
  },
  {
    "label": "celt_pitch_xcorr_float_neon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "celt_pitch_xcorr_float_neon(const opus_val16 *_x, const opus_val16 *_y,\n                                 opus_val32 *xcorr, int len, int max_pitch, int arch)"
  }
]