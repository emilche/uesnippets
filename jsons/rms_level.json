[
  {
    "label": "RmsLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RmsLevel"
  },
  {
    "label": "Levels",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Levels"
  },
  {
    "label": "RmsLevel()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_RMS_LEVEL_H_ # define MODULES_AUDIO_PROCESSING_RMS_LEVEL_H_ # include<stddef . h> # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / array_view . h \" namespace webrtc { class RmsLevel { public : struct Levels { int average ; int peak ; } ; enum : int { kMinLevelDb = 1 2 7,kInaudibleButNotMuted = 1 2 6 } ;)",
    "insertText": "RmsLevel()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Analyze()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Analyze(rtc::ArrayView<const int16_t> data)"
  },
  {
    "label": "Analyze()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Analyze(rtc::ArrayView<const float> data)"
  },
  {
    "label": "AnalyzeMuted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalyzeMuted(size_t length)"
  },
  {
    "label": "Average()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Average()"
  },
  {
    "label": "AverageAndPeak()",
    "kind": "Method",
    "detail": "Function (Levels)",
    "insertText": "AverageAndPeak()"
  },
  {
    "label": "CheckBlockSize()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CheckBlockSize(size_t block_size)"
  }
]