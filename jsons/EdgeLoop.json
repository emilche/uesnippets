[
  {
    "label": "FEdgeLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdgeLoop"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const FDynamicMesh3* mesh, const TArray<int>& vertices, const TArray<int> & edges, const TArray<int>* BowtieVerticesIn = nullptr)"
  },
  {
    "label": "InitializeFromEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromEdges(const TArray<int>& EdgesIn)"
  },
  {
    "label": "InitializeFromVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeFromVertices(const TArray<int>& VerticesIn, bool bAutoOrient = true)"
  },
  {
    "label": "InitializeFromVertices()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InitializeFromVertices(VerticesIn, bAutoOrient)"
  },
  {
    "label": "CalculateBowtieVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateBowtieVertices()"
  },
  {
    "label": "SetCorrectOrientation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCorrectOrientation()"
  },
  {
    "label": "VertexLoopToEdgeLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VertexLoopToEdgeLoop(const FDynamicMesh3* Mesh, const TArray<int>& VertexLoop, TArray<int>& OutEdgeLoop)"
  },
  {
    "label": "ConvertLoopToTriOrderedEdgeLoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertLoopToTriOrderedEdgeLoop(const FDynamicMesh3& Mesh,\n\tconst TArray<int32>& VertexLoop, const TArray<int32>& EdgeLoop,\n\tTArray<FMeshTriOrderedEdgeID>& TriOrderedEdgesLoopOut )"
  },
  {
    "label": "ConvertTriOrderedEdgeLoopToLoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertTriOrderedEdgeLoopToLoop(const FDynamicMesh3& Mesh,\n\tconst TArray<FMeshTriOrderedEdgeID>& TriOrderedEdgesLoopOut,\n\tTArray<int32>& VertexLoop, TArray<int32>* EdgeLoop = nullptr)"
  }
]