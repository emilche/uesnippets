[
  {
    "label": "determinant_impl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "determinant_impl"
  },
  {
    "label": "bruteforce_det3_helper()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_DETERMINANT_H # define EIGEN_DETERMINANT_H namespace Eigen { namespace internal { template<Derived> EIGEN_DEVICE_FUNC const Derived::Scalar)",
    "insertText": "bruteforce_det3_helper(const MatrixBase<Derived>& matrix, int a, int b, int c)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (} template<Derived,int DeterminantType = Derived::RowsAtCompileTime> struct determinant_impl { traits<Derived>::Scalar)",
    "insertText": "run(const Derived& m)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (Scalar d2_01 =)",
    "insertText": "det2(m, 0, 1)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (Scalar d2_02 =)",
    "insertText": "det2(m, 0, 2)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (Scalar d2_03 =)",
    "insertText": "det2(m, 0, 3)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (Scalar d2_12 =)",
    "insertText": "det2(m, 1, 2)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (Scalar d2_13 =)",
    "insertText": "det2(m, 1, 3)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (Scalar d2_23 =)",
    "insertText": "det2(m, 2, 3)"
  },
  {
    "label": "det3()",
    "kind": "Method",
    "detail": "Function (Scalar d3_0 =)",
    "insertText": "det3(m, 1,d2_23, 2,d2_13, 3,d2_12)"
  },
  {
    "label": "det3()",
    "kind": "Method",
    "detail": "Function (Scalar d3_1 =)",
    "insertText": "det3(m, 0,d2_23, 2,d2_03, 3,d2_02)"
  },
  {
    "label": "det3()",
    "kind": "Method",
    "detail": "Function (Scalar d3_2 =)",
    "insertText": "det3(m, 0,d2_13, 1,d2_03, 3,d2_01)"
  },
  {
    "label": "det3()",
    "kind": "Method",
    "detail": "Function (Scalar d3_3 =)",
    "insertText": "det3(m, 0,d2_12, 1,d2_02, 2,d2_01)"
  },
  {
    "label": "det2()",
    "kind": "Method",
    "detail": "Function (} protected : EIGEN_DEVICE_FUNC Scalar)",
    "insertText": "det2(const Derived& m, Index i0, Index i1)"
  },
  {
    "label": "det3()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC Scalar)",
    "insertText": "det3(const Derived& m, Index i0, const Scalar& d0, Index i1, const Scalar& d1, Index i2, const Scalar& d2)"
  },
  {
    "label": "determinant()",
    "kind": "Method",
    "detail": "Function (} } ; } template<Derived> EIGEN_DEVICE_FUNC internal::traits<Derived>::Scalar MatrixBase<Derived)",
    "insertText": "determinant()"
  },
  {
    "label": "eigen_assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eigen_assert(rows() == cols())"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (typedef internal::nested_eval<Derived,Base::RowsAtCompileTime>::type Nested ; return internal::determinant_impl<internal::remove_all<Nested>::type)",
    "insertText": "run(derived())"
  }
]