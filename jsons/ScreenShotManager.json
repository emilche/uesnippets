[
  {
    "label": "FScreenshotComparisons",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenshotComparisons"
  },
  {
    "label": "FScreenShotDataItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenShotDataItem"
  },
  {
    "label": "UScreenShotComparisonSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScreenShotComparisonSettings"
  },
  {
    "label": "FScreenShotManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenShotManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Async / Future . h \" # include \" ImageComparer . h \" # include \" Interfaces / IScreenShotManager . h \" # include \" MessageEndpoint . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogScreenShotManager, Log, All)"
  },
  {
    "label": "FScreenShotManager()",
    "kind": "Method",
    "detail": "Function (class FScreenshotComparisons ; struct FScreenShotDataItem ; class UScreenShotComparisonSettings ; class FScreenShotManager : public IScreenShotManager { public : enum class EApprovedFolderOptions : int8 { None = 0,UsePlatformFolders = 1<<0 } ;)",
    "insertText": "FScreenShotManager()"
  },
  {
    "label": "CompareScreenshotAsync()",
    "kind": "Method",
    "detail": "Function (public : TFuture<FImageComparisonResult>)",
    "insertText": "CompareScreenshotAsync(const FString& IncomingPath, const FAutomationScreenshotMetadata& MetaData, const EScreenShotCompareOptions Options)"
  },
  {
    "label": "ExportScreenshotComparisonResult()",
    "kind": "Method",
    "detail": "Function (FScreenshotExportResult)",
    "insertText": "ExportScreenshotComparisonResult(FString ScreenshotName, FString ExportPath = TEXT(\"\"), bool bOnlyGeneratedFiles = false)"
  },
  {
    "label": "OpenComparisonReportsAsync()",
    "kind": "Method",
    "detail": "Function (TFuture<TSharedPtr<TArray<FComparisonReport>>>)",
    "insertText": "OpenComparisonReportsAsync(const FString& ImportPath)"
  },
  {
    "label": "GetIdealApprovedFolderForImage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetIdealApprovedFolderForImage(const FAutomationScreenshotMetadata& MetaData)"
  },
  {
    "label": "FindApprovedFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "FindApprovedFiles(const FAutomationScreenshotMetadata& IncomingMetaData, const FString& FilePattern)"
  },
  {
    "label": "CompareImageSequence()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FImageComparisonResult>)",
    "insertText": "CompareImageSequence(const TMap<FString, FString>& Sequence, const FAutomationScreenshotMetadata& Metadata)"
  },
  {
    "label": "NotifyAutomationTestFrameworkOfImageComparison()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAutomationTestFrameworkOfImageComparison(const FImageComparisonResult& Result)"
  },
  {
    "label": "GetPathComponentForRHI()",
    "kind": "Method",
    "detail": "Function (private : FString)",
    "insertText": "GetPathComponentForRHI(const FAutomationScreenshotMetadata& MetaData)"
  },
  {
    "label": "GetPathComponentForPlatformAndRHI()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathComponentForPlatformAndRHI(const FAutomationScreenshotMetadata& MetaData)"
  },
  {
    "label": "GetPathComponentForTestImages()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPathComponentForTestImages(const FAutomationScreenshotMetadata& MetaData, bool bIncludeVariantName)"
  },
  {
    "label": "GetApprovedFolderForImageWithOptions()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetApprovedFolderForImageWithOptions(const FAutomationScreenshotMetadata& MetaData, EApprovedFolderOptions InOptions)"
  },
  {
    "label": "GetDefaultExportDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultExportDirectory()"
  },
  {
    "label": "CompareScreenshot()",
    "kind": "Method",
    "detail": "Function (FImageComparisonResult)",
    "insertText": "CompareScreenshot(const FString& IncomingPath, const FAutomationScreenshotMetadata& MetaData, const EScreenShotCompareOptions Options)"
  },
  {
    "label": "CopyDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDirectory(const FString& DestDir, const FString& SrcDir, const TArray<FString> Patterns)"
  },
  {
    "label": "BuildFallbackPlatformsListFromConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFallbackPlatformsListFromConfig()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : FString ScreenshotTempDeltaFolder ; FString ScreenshotResultsFolder ; TSharedPtr<TArray<FString>> PendingComparisonReportPaths ; TMap<FString,FString> FallbackPlatforms ; bool bUseConfidentialPlatformPaths ; } ; FScreenShotManager::EApprovedFolderOptions)",
    "insertText": "operator(FScreenShotManager::EApprovedFolderOptions lhs, FScreenShotManager::EApprovedFolderOptions rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FScreenShotManager::EApprovedFolderOptions& lhs, FScreenShotManager::EApprovedFolderOptions rhs)"
  }
]