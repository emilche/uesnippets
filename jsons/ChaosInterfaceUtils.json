[
  {
    "label": "FGeometryAddParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryAddParams"
  },
  {
    "label": "ConvertCollisionTraceFlag()",
    "kind": "Method",
    "detail": "Function (Chaos::EChaosCollisionTraceFlag)",
    "insertText": "ConvertCollisionTraceFlag(ECollisionTraceFlag Flag)"
  },
  {
    "label": "CreateGeometry()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "CreateGeometry(const FGeometryAddParams& InParams, TArray<Chaos::FImplicitObjectPtr>& OutGeoms, Chaos::FShapesArray& OutShapes)"
  },
  {
    "label": "CreateGeometry()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "CreateGeometry(const FGeometryAddParams& InParams, TArray<TUniquePtr<Chaos::FImplicitObject>>& OutGeoms, Chaos::FShapesArray& OutShapes)"
  },
  {
    "label": "CalculateMassPropertiesFromShapeCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateMassPropertiesFromShapeCollection(Chaos::FMassProperties& OutProperties, const TArray<FPhysicsShapeHandle>& InShapes, float InDensityKGPerCM)"
  },
  {
    "label": "CalculateMassPropertiesFromShapeCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateMassPropertiesFromShapeCollection(Chaos::FMassProperties& OutProperties, const Chaos::FShapesArray& InShapes, const TArray<bool>& bContributesToMass, float InDensityKGPerCM)"
  }
]