[
  {
    "label": "FSlateVectorGraphicsCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateVectorGraphicsCache"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "FSlateD3DTextureManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateD3DTextureManager"
  },
  {
    "label": "FDynamicTextureResource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicTextureResource"
  },
  {
    "label": "FSlateD3DTextureManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Textures / TextureAtlas . h \" # include \" Rendering / ShaderResourceManager . h \" # include \" SlateD3DTextures . h \" class FSlateVectorGraphicsCache ; class ISlateStyle ; class FSlateD3DTextureManager : public ISlateAtlasProvider,public FSlateShaderResourceManager { public :)",
    "insertText": "FSlateD3DTextureManager()"
  },
  {
    "label": "GetNumAtlasPages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumAtlasPages()"
  },
  {
    "label": "GetAtlasPageResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetAtlasPageResource(const int32 InIndex)"
  },
  {
    "label": "IsAtlasPageResourceAlphaOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAtlasPageResourceAlphaOnly(const int32 InIndex)"
  },
  {
    "label": "GetAtlasSlotInfoAtPosition()",
    "kind": "Method",
    "detail": "Function (# if WITH_ATLAS_DEBUGGING FAtlasSlotInfo)",
    "insertText": "GetAtlasSlotInfoAtPosition(FIntPoint InPosition, int32 AtlasIndex)"
  },
  {
    "label": "LoadUsedTextures()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "LoadUsedTextures()"
  },
  {
    "label": "LoadStyleResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadStyleResources(const ISlateStyle& Style)"
  },
  {
    "label": "GetShaderResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetShaderResource(const FSlateBrush& Brush, FVector2f LocalSize, float DrawScale)"
  },
  {
    "label": "GetTextureAtlasProvider()",
    "kind": "Method",
    "detail": "Function (ISlateAtlasProvider*)",
    "insertText": "GetTextureAtlasProvider()"
  },
  {
    "label": "CreateColorTexture()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "CreateColorTexture(const FName TextureName, FColor InColor)"
  },
  {
    "label": "CreateDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "CreateDynamicTextureResource(FName ResourceName, uint32 Width, uint32 Height, const TArray< uint8 >& RawData)"
  },
  {
    "label": "ReleaseDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseDynamicTextureResource(const FSlateBrush& InBrush)"
  },
  {
    "label": "UpdateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCache()"
  },
  {
    "label": "ConditionalFlushCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalFlushCache()"
  },
  {
    "label": "GetDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (private : FSlateShaderResourceProxy*)",
    "insertText": "GetDynamicTextureResource(const FSlateBrush& InBrush)"
  },
  {
    "label": "GetVectorResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetVectorResource(const FSlateBrush& Brush, FVector2f LocalSize, float DrawScale)"
  },
  {
    "label": "CreateTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTextures(const TArray< const FSlateBrush* >& Resources)"
  },
  {
    "label": "LoadTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadTexture(const FSlateBrush& InBrush, uint32& OutWidth, uint32& OutHeight, TArray<uint8>& OutDecodedImage)"
  },
  {
    "label": "GenerateTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GenerateTextureResource(const FNewTextureInfo& Info, FName TextureName)"
  },
  {
    "label": "FDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (private : struct FDynamicTextureResource { FSlateShaderResourceProxy* Proxy ; FSlateD3DTexture* D3DTexture ;)",
    "insertText": "FDynamicTextureResource(FSlateD3DTexture* ExistingTexture)"
  },
  {
    "label": "FDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDynamicTextureResource()"
  }
]