[
  {
    "label": "StrPtrEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StrPtrEntry"
  },
  {
    "label": "StrBufEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StrBufEntry"
  },
  {
    "label": "VarArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VarArray"
  },
  {
    "label": "StrPtrDict",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrPtrDict"
  },
  {
    "label": "StrBufDict",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrBufDict"
  },
  {
    "label": "BufferDict",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferDict"
  },
  {
    "label": "Var",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Var"
  },
  {
    "label": "StrPtrDict()",
    "kind": "Method",
    "detail": "Function (struct StrPtrEntry ; struct StrBufEntry ; class VarArray ; class StrPtrDict : public StrDict { public :)",
    "insertText": "StrPtrDict()"
  },
  {
    "label": "VGetVar()",
    "kind": "Method",
    "detail": "Function (StrPtr*)",
    "insertText": "VGetVar(const StrPtr &var)"
  },
  {
    "label": "VSetVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VSetVar(const StrPtr &var, const StrPtr &val)"
  },
  {
    "label": "VRemoveVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VRemoveVar(const StrPtr &var)"
  },
  {
    "label": "VGetVarX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "VGetVarX(int x, StrRef &var, StrRef &val)"
  },
  {
    "label": "VClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VClear()"
  },
  {
    "label": "StrBufDict()",
    "kind": "Method",
    "detail": "Function (tabLength = 0 ; } private : VarArray* elems ; int tabSize ; int tabLength ; } ; class StrBufDict : public StrDict { public :)",
    "insertText": "StrBufDict()"
  },
  {
    "label": "StrBufDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrBufDict(StrDict & dict)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StrBufDict&)",
    "insertText": "operator(StrDict & dict)"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCount()"
  },
  {
    "label": "GetVarN()",
    "kind": "Method",
    "detail": "Function (tabLength = 0 ; } StrPtr*)",
    "insertText": "GetVarN(const StrPtr &var)"
  },
  {
    "label": "KeepOne()",
    "kind": "Method",
    "detail": "Function (StrBuf*)",
    "insertText": "KeepOne(const StrPtr &var)"
  },
  {
    "label": "BufferDict()",
    "kind": "Method",
    "detail": "Function (private : VarArray* elems ; int tabSize ; int tabLength ; } ; const int BufferDictMax = 2 0 ; class BufferDict : public StrDict { public :)",
    "insertText": "BufferDict()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} BufferDict&)",
    "insertText": "operator(const BufferDict &s)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (buf .)",
    "insertText": "Clear()"
  },
  {
    "label": "GetBuffer()",
    "kind": "Method",
    "detail": "Function (protected : StrPtr*)",
    "insertText": "GetBuffer()"
  }
]