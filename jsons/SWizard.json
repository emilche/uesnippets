[
  {
    "label": "SWizard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWizard"
  },
  {
    "label": "FWizardPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWizardPage"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Containers / IndirectArray . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateWidgetStyleAsset . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Navigation / SBreadcrumbTrail . h \" # include \" Styling / SlateTypes . h \" # include \" Styling / CoreStyle . h \" # include \" Framework / SlateDelegates . h \" # include \" Styling / AppStyle . h \")",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(int32, FOnGetPageIndex, int32)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (public : class FWizardPage { public :)",
    "insertText": "SLATE_BEGIN_ARGS(FWizardPage) : _ButtonContent() , _CanShow(true) , _PageContent()"
  },
  {
    "label": "SLATE_NAMED_SLOT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_NAMED_SLOT(FArguments, ButtonContent) SLATE_ATTRIBUTE(FText, Name) SLATE_ATTRIBUTE(bool, CanShow) SLATE_EVENT(FSimpleDelegate, OnEnter) SLATE_EVENT(FSimpleDelegate, OnLeave) SLATE_DEFAULT_SLOT(FArguments, PageContent) SLATE_END_ARGS() public: FWizardPage( const FArguments& InArgs ) : ButtonContent(InArgs._ButtonContent) , Showable(InArgs._CanShow) , OnEnterDelegate(InArgs._OnEnter) , OnLeaveDelegate(InArgs._OnLeave) , PageContent(InArgs._PageContent) , Name(InArgs._Name)"
  },
  {
    "label": "CanShow()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "CanShow()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetName()"
  },
  {
    "label": "GetButtonContent()",
    "kind": "Method",
    "detail": "Function (} const TSharedRef<SWidget>&)",
    "insertText": "GetButtonContent()"
  },
  {
    "label": "SLATE_SUPPORTS_SLOT_WITH_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_SUPPORTS_SLOT_WITH_ARGS(FWizardPage) SLATE_STYLE_ARGUMENT(FButtonStyle, ButtonStyle) SLATE_STYLE_ARGUMENT(FButtonStyle, CancelButtonStyle) SLATE_STYLE_ARGUMENT(FButtonStyle, FinishButtonStyle) SLATE_STYLE_ARGUMENT(FTextBlockStyle, ButtonTextStyle) SLATE_ATTRIBUTE(bool, CanFinish) SLATE_ATTRIBUTE(FText, FinishButtonText) SLATE_ATTRIBUTE(FText, FinishButtonToolTip) SLATE_ATTRIBUTE(int32, InitialPageIndex) SLATE_ATTRIBUTE(FVector2D, DesiredSize) SLATE_EVENT(FSimpleDelegate, OnCanceled) SLATE_EVENT(FSimpleDelegate, OnFinished) SLATE_EVENT(FOnClicked, OnFirstPageBackClicked) SLATE_EVENT(FOnGetPageIndex, OnGetNextPageIndex) SLATE_EVENT(FOnGetPageIndex, OnTryToMoveToPage) SLATE_ARGUMENT(bool, ShowPageList) SLATE_ARGUMENT(bool, ShowCancelButton) SLATE_ARGUMENT(bool, ShowBreadcrumbs) SLATE_STYLE_ARGUMENT(FButtonStyle, BreadcrumbButtonStyle)"
  },
  {
    "label": "SLATE_STYLE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_STYLE_ARGUMENT(FTextBlockStyle, BreadcrumbTextStyle)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_ARGUMENT(bool, ShowPageTitle) SLATE_STYLE_ARGUMENT(FTextBlockStyle, PageTitleTextStyle)"
  },
  {
    "label": "SLATE_NAMED_SLOT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_NAMED_SLOT(FArguments, PageFooter) SLATE_END_ARGS() public: APPFRAMEWORK_API bool CanShowPage( int32 PageIndex)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetNumPages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumPages()"
  },
  {
    "label": "GetCurrentPageIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentPageIndex()"
  },
  {
    "label": "GetPageIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPageIndex(const TSharedPtr<SWidget>& PageWidget)"
  },
  {
    "label": "ShowPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowPage(int32 PageIndex)"
  },
  {
    "label": "AdvanceToPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceToPage(int32 PageIndex)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (public : FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "Page()",
    "kind": "Method",
    "detail": "Function (public : FWizardPage::FArguments)",
    "insertText": "Page()"
  },
  {
    "label": "HandleCancelButtonClicked()",
    "kind": "Method",
    "detail": "Function (FWizardPage::FArguments Args ; return Args ; } private : FReply)",
    "insertText": "HandleCancelButtonClicked()"
  },
  {
    "label": "HandleFinishButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleFinishButtonClicked()"
  },
  {
    "label": "HandleNextButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleNextButtonClicked()"
  },
  {
    "label": "HandleNextButtonIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleNextButtonIsEnabled()"
  },
  {
    "label": "HandleNextButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleNextButtonVisibility()"
  },
  {
    "label": "HandlePageButtonCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePageButtonCheckStateChanged(ECheckBoxState NewState, int32 PageIndex)"
  },
  {
    "label": "HandlePageButtonIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandlePageButtonIsChecked(int32 PageIndex)"
  },
  {
    "label": "HandlePageButtonIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePageButtonIsEnabled(int32 PageIndex)"
  },
  {
    "label": "HandlePrevButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandlePrevButtonClicked()"
  },
  {
    "label": "HandlePrevButtonIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePrevButtonIsEnabled()"
  },
  {
    "label": "HandlePrevButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandlePrevButtonVisibility()"
  },
  {
    "label": "HandleBreadcrumbClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBreadcrumbClicked(const int32& PageIndex)"
  },
  {
    "label": "GetNextPageIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNextPageIndex()"
  },
  {
    "label": "GetPrevPageIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPrevPageIndex()"
  },
  {
    "label": "HandleGetPageTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleGetPageTitle()"
  }
]