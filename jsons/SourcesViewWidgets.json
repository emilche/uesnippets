[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTreeItem"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FCollectionItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollectionItem"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSlateFontInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateFontInfo"
  },
  {
    "label": "SAssetTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetTreeItem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SCollectionTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCollectionTreeItem"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetTagItemTypes . h \" # include \" Delegates / Delegate . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Geometry . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SCheckBox . h \" # include \" Widgets / SCompoundWidget . h \" class FDragDropEvent ; class FSlateRect ; class FString ; class FTreeItem ; class SEditableTextBox ; class SInlineEditableTextBlock ; class SWidget ; struct FCollectionItem ; struct FSlateBrush ; struct FSlateFontInfo ; class SAssetTreeItem : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_FourParams(FOnNameChanged, const TSharedPtr<FTreeItem>& , const FString& , const UE::Slate::FDeprecateVector2DParameter& , const ETextCommit::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(bool, FOnVerifyNameChanged, const TSharedPtr<FTreeItem>& , const FString& , FText&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SAssetTreeItem ) : _TreeItem( TSharedPtr<FTreeItem>() ) , _IsItemExpanded( false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FTreeItem>, TreeItem ) SLATE_EVENT( FOnNameChanged, OnNameChanged ) SLATE_EVENT( FOnVerifyNameChanged, OnVerifyNameChanged ) SLATE_ATTRIBUTE( bool, IsItemExpanded ) SLATE_ATTRIBUTE( FText, HighlightText) SLATE_ATTRIBUTE( FSlateFontInfo, FontOverride) SLATE_EVENT( FIsSelected, IsSelected ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "SAssetTreeItem()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SAssetTreeItem()"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragOver()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragOver(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "VerifyNameChanged()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "VerifyNameChanged(const FText& InName, FText& OutError)"
  },
  {
    "label": "HandleNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNameCommitted(const FText& NewText, ETextCommit::Type)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "GetFolderIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetFolderIcon()"
  },
  {
    "label": "GetFolderColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetFolderColor()"
  },
  {
    "label": "GetNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNameText()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText()"
  },
  {
    "label": "GetBorderImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBorderImage()"
  },
  {
    "label": "GenerateStateIcons()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateStateIcons()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (private : enum class EFolderType : uint8 { Normal,CustomVirtual,PluginRoot,Code,Developer,} ; TWeakPtr<FTreeItem> TreeItem ; TSharedPtr<SEditableTextBox> EditableName ; FOnNameChanged OnNameChanged ; FOnVerifyNameChanged OnVerifyNameChanged ; TAttribute<bool> IsItemExpanded ; FIsSelected IsSelected ; bool bDraggedOver ; EFolderType FolderType ; TSharedPtr<SInlineEditableTextBlock> InlineRenameWidget ; FDelegateHandle EnterEditingModeDelegateHandle ; } ; class SCollectionTreeItem : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnBeginNameChange, const TSharedPtr<FCollectionItem>&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_FourParams(bool, FOnNameChangeCommit, const TSharedPtr<FCollectionItem>& , const FString& , bool , FText&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_FourParams(bool, FOnVerifyRenameCommit, const TSharedPtr<FCollectionItem>& , const FString& , const FSlateRect& , FText& ) DECLARE_DELEGATE_RetVal_FourParams( bool, FOnValidateDragDrop, TSharedRef<FCollectionItem> , const FGeometry& , const FDragDropEvent& , bool&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_ThreeParams(FReply, FOnHandleDragDrop, TSharedRef<FCollectionItem> , const FGeometry& , const FDragDropEvent&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SCollectionTreeItem ) : _CollectionItem( TSharedPtr<FCollectionItem>() ) , _ParentWidget()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FCollectionItem>, CollectionItem ) SLATE_ARGUMENT( TSharedPtr<SWidget>, ParentWidget ) SLATE_EVENT( FOnBeginNameChange, OnBeginNameChange ) SLATE_EVENT( FOnNameChangeCommit, OnNameChangeCommit ) SLATE_EVENT( FOnVerifyRenameCommit, OnVerifyRenameCommit ) SLATE_EVENT( FOnValidateDragDrop, OnValidateDragDrop ) SLATE_EVENT( FOnHandleDragDrop, OnHandleDragDrop ) SLATE_EVENT( FIsSelected, IsSelected ) SLATE_ATTRIBUTE( bool, IsReadOnly ) SLATE_ATTRIBUTE( FText, HighlightText ) SLATE_ATTRIBUTE( bool, IsCheckBoxEnabled ) SLATE_ATTRIBUTE( ECheckBoxState, IsCollectionChecked ) SLATE_EVENT( FOnCheckStateChanged, OnCollectionCheckStateChanged ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "IsDraggedOver()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDraggedOver()"
  },
  {
    "label": "HandleBeginNameChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBeginNameChange(const FText& OldText)"
  },
  {
    "label": "HandleNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNameCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "HandleVerifyNameChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleVerifyNameChanged(const FText& NewText, FText& OutErrorMessage)"
  },
  {
    "label": "GetCollectionColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetCollectionColor()"
  },
  {
    "label": "GetCollectionObjectCountText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCollectionObjectCountText()"
  },
  {
    "label": "GetCollectionWarningText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCollectionWarningText()"
  },
  {
    "label": "BuildToolTipInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildToolTipInfo(const FOnBuildAssetTagItemToolTipInfoEntry& InCallback)"
  }
]