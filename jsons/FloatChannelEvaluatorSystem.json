[
  {
    "label": "FSourceFloatChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSourceFloatChannel"
  },
  {
    "label": "FCachedInterpolation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedInterpolation"
  },
  {
    "label": "UFloatChannelEvaluatorSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFloatChannelEvaluatorSystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Set . h \" # include \" Containers / SortedMap . h \" # include \" EntitySystem / EntityAllocationIterator . h \" # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" FloatChannelEvaluatorSystem . generated . h \" namespace UE::MovieScene { struct FSourceFloatChannel ; namespace Interpolation { struct FCachedInterpolation ; } })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENETRACKS_API UFloatChannelEvaluatorSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "IsRelevantImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRelevantImpl(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "RegisterChannelType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterChannelType(TComponentTypeID<UE::MovieScene::FSourceFloatChannel> SourceChannelType, TComponentTypeID<UE::MovieScene::Interpolation::FCachedInterpolation> CachedInterpolationType, TComponentTypeID<double> ResultType)"
  }
]