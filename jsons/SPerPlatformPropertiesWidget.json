[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SPerPlatformPropertiesRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPerPlatformPropertiesRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" PerPlatformPropertyCustomization . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FMenuBuilder ; class SWidget ; class SPerPlatformPropertiesRow : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPerPlatformPropertiesRow)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnGenerateWidget, OnGenerateWidget) SLATE_EVENT(FOnPlatformOverrideAction, OnRemovePlatform) SLATE_END_ARGS() void Construct(const FArguments& InArgs, FName PlatformName)"
  },
  {
    "label": "MakePerPlatformWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "MakePerPlatformWidget(FName InName)"
  },
  {
    "label": "RemovePlatform()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "RemovePlatform(FName PlatformName)"
  },
  {
    "label": "CheckPlatformCount()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "CheckPlatformCount(double InCurrentTime, float InDeltaSeconds)"
  },
  {
    "label": "AddPlatformToMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPlatformToMenu(const FName& PlatformName, const FTextFormat Format, FMenuBuilder& AddPlatformMenuBuilder)"
  }
]