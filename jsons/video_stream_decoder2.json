[
  {
    "label": "VideoReceiver2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoReceiver2"
  },
  {
    "label": "ReceiveStatisticsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReceiveStatisticsProxy"
  },
  {
    "label": "VideoStreamDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoStreamDecoder"
  },
  {
    "label": "VideoStreamDecoder()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_VIDEO_STREAM_DECODER2_H_ # define VIDEO_VIDEO_STREAM_DECODER2_H_ # include<list> # include<map> # include<memory> # include<vector> # include \" api / scoped_refptr . h \" # include \" api / video / video_sink_interface . h \" # include \" api / video_codecs / video_decoder . h \" # include \" modules / remote_bitrate_estimator / include / remote_bitrate_estimator . h \" # include \" modules / video_coding / include / video_coding_defines . h \" # include \" rtc_base / platform_thread . h \" namespace webrtc { class VideoReceiver2 ; namespace internal { class ReceiveStatisticsProxy ; class VideoStreamDecoder : public VCMReceiveCallback { public :)",
    "insertText": "VideoStreamDecoder(VideoReceiver2* video_receiver, ReceiveStatisticsProxy* receive_statistics_proxy, rtc::VideoSinkInterface<VideoFrame>* incoming_video_stream)"
  },
  {
    "label": "VideoStreamDecoder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VideoStreamDecoder()"
  },
  {
    "label": "FrameToRender()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "FrameToRender(VideoFrame& video_frame, absl::optional<uint8_t> qp, TimeDelta decode_time, VideoContentType content_type)"
  },
  {
    "label": "OnDroppedFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDroppedFrames(uint32_t frames_dropped)"
  },
  {
    "label": "OnIncomingPayloadType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIncomingPayloadType(int payload_type)"
  },
  {
    "label": "OnDecoderInfoChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecoderInfoChanged(const VideoDecoder::DecoderInfo& decoder_info)"
  }
]