[
  {
    "label": "FAnimationEditorPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationEditorPreviewScene"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "FPersonaToolkitArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersonaToolkitArgs"
  },
  {
    "label": "FPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersonaToolkit"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "TSharedRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSharedRef"
  },
  {
    "label": "FPersonaToolkit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IPersonaPreviewScene . h \" # include \" IEditableSkeleton . h \" # include \" IPersonaToolkit . h \" # include \" PersonaModule . h \" class FAnimationEditorPreviewScene ; class UAnimationAsset ; class UAnimBlueprint ; class USkeletalMesh ; class UPhysicsAsset ; struct FPersonaToolkitArgs ; class FPersonaToolkit : public IPersonaToolkit,public TSharedFromThis<FPersonaToolkit> { public :)",
    "insertText": "FPersonaToolkit()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UObject* InAsset, const FPersonaToolkitArgs& PersonaToolkitArgs, USkeleton* InSkeleton = nullptr)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(USkeleton* InSkeleton, const FPersonaToolkitArgs& PersonaToolkitArgs)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UAnimationAsset* InAnimationAsset, const FPersonaToolkitArgs& PersonaToolkitArgs)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(USkeletalMesh* InSkeletalMesh, const FPersonaToolkitArgs& PersonaToolkitArgs)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UAnimBlueprint* InAnimBlueprint, const FPersonaToolkitArgs& PersonaToolkitArgs)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UPhysicsAsset* InPhysicsAsset, const FPersonaToolkitArgs& PersonaToolkitArgs)"
  },
  {
    "label": "CreatePreviewScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePreviewScene(const FPersonaToolkitArgs& PersonaToolkitArgs)"
  },
  {
    "label": "SetPreviewSceneDetailsOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewSceneDetailsOptions(const FPersonaPreviewSceneDetailsOptions& Options)"
  },
  {
    "label": "GetSkeleton()",
    "kind": "Method",
    "detail": "Function (class USkeleton*)",
    "insertText": "GetSkeleton()"
  },
  {
    "label": "GetEditableSkeleton()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IEditableSkeleton>)",
    "insertText": "GetEditableSkeleton()"
  },
  {
    "label": "GetPreviewMeshComponent()",
    "kind": "Method",
    "detail": "Function (class UDebugSkelMeshComponent*)",
    "insertText": "GetPreviewMeshComponent()"
  },
  {
    "label": "GetMesh()",
    "kind": "Method",
    "detail": "Function (class USkeletalMesh*)",
    "insertText": "GetMesh()"
  },
  {
    "label": "SetMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMesh(class USkeletalMesh* InSkeletalMesh)"
  },
  {
    "label": "GetAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (class UAnimBlueprint*)",
    "insertText": "GetAnimBlueprint()"
  },
  {
    "label": "GetAnimationAsset()",
    "kind": "Method",
    "detail": "Function (class UAnimationAsset*)",
    "insertText": "GetAnimationAsset()"
  },
  {
    "label": "SetAnimationAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimationAsset(class UAnimationAsset* InAnimationAsset)"
  },
  {
    "label": "GetPreviewScene()",
    "kind": "Method",
    "detail": "Function (class TSharedRef<IPersonaPreviewScene>)",
    "insertText": "GetPreviewScene()"
  },
  {
    "label": "GetPreviewMesh()",
    "kind": "Method",
    "detail": "Function (class USkeletalMesh*)",
    "insertText": "GetPreviewMesh()"
  },
  {
    "label": "SetPreviewMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewMesh(class USkeletalMesh* InSkeletalMesh, bool bSetPreviewMeshInAsset = true)"
  },
  {
    "label": "SetPreviewAnimationBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewAnimationBlueprint(UAnimBlueprint* InAnimBlueprint)"
  },
  {
    "label": "GetPreviewAnimationBlueprint()",
    "kind": "Method",
    "detail": "Function (UAnimBlueprint*)",
    "insertText": "GetPreviewAnimationBlueprint()"
  },
  {
    "label": "GetCustomData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCustomData(const int32 Key)"
  },
  {
    "label": "SetCustomData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomData(const int32 Key, const int32 CustomData)"
  },
  {
    "label": "CustomizeSceneSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeSceneSettings(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetContext()"
  },
  {
    "label": "CanPreviewMeshUseDifferentSkeleton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPreviewMeshUseDifferentSkeleton()"
  },
  {
    "label": "CommonInitialSetup()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CommonInitialSetup(const FPersonaToolkitArgs& PersonaToolkitArgs)"
  }
]