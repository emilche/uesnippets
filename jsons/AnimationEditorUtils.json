[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UAnimBoneCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionSettings"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UPoseWatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatch"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UAnimBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintGeneratedClass"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "SCreateAnimationAssetDlg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCreateAnimationAssetDlg"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "FAnimationCompressionSelectionDialogConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationCompressionSelectionDialogConfig"
  },
  {
    "label": "SAnimationCompressionSelectionDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationCompressionSelectionDialog"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "ShowModal()",
    "kind": "Method",
    "detail": "Function (EAppReturnType::Type)",
    "insertText": "ShowModal()"
  },
  {
    "label": "GetAssetPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAssetPath()"
  },
  {
    "label": "GetAssetName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAssetName()"
  },
  {
    "label": "GetFullAssetPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFullAssetPath()"
  },
  {
    "label": "OnPathChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathChange(const FString& NewPath)"
  },
  {
    "label": "OnNameChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameChange(const FText& NewName, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnButtonClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnButtonClick(EAppReturnType::Type ButtonID)"
  },
  {
    "label": "ValidatePackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidatePackage()"
  },
  {
    "label": "SAnimationCompressionSelectionDialog()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "SAnimationCompressionSelectionDialog()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FAnimationCompressionSelectionDialogConfig& InConfig)"
  },
  {
    "label": "SetOnAssetSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnAssetSelected(const FOnAssetSelected& InHandler)"
  },
  {
    "label": "DoSelectAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoSelectAsset(const FAssetData& SelectedAsset)"
  },
  {
    "label": "OnConfirmClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnConfirmClicked()"
  },
  {
    "label": "OnCancelClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCancelClicked()"
  },
  {
    "label": "CloseDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDialog()"
  },
  {
    "label": "OnAssetSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelected(const FAssetData& AssetData)"
  },
  {
    "label": "OnAssetsActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetsActivated(const TArray<FAssetData>& SelectedAssets, EAssetTypeActivationMethod::Type ActivationType)"
  },
  {
    "label": "CreateModalAnimationCompressionSelectionDialog()",
    "kind": "Method",
    "detail": "Function (FAssetData)",
    "insertText": "CreateModalAnimationCompressionSelectionDialog(const FAnimationCompressionSelectionDialogConfig& InConfig)"
  },
  {
    "label": "CreateAnimationAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAnimationAssets(const TArray<TSoftObjectPtr<UObject>>& SkeletonsOrSkeletalMeshes, TSubclassOf<UAnimationAsset> AssetClass, const FString& InPrefix, FAnimAssetCreated AssetCreated, UObject* NameBaseObject = nullptr, bool bDoNotShowNameDialog = false, bool bAllowReplaceExisting = false)"
  },
  {
    "label": "CreateNewAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewAnimBlueprint(TArray<TWeakObjectPtr<UObject>> SkeletonsOrSkeletalMeshes, FAnimAssetCreated AssetCreated, bool bInContentBrowser)"
  },
  {
    "label": "CreateNewAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewAnimBlueprint(TArray<TSoftObjectPtr<UObject>> SkeletonsOrSkeletalMeshes, FAnimAssetCreated AssetCreated, bool bInContentBrowser)"
  },
  {
    "label": "FillCreateAssetMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillCreateAssetMenu(FMenuBuilder& MenuBuilder, const TArray<TSoftObjectPtr<UObject>>& SkeletonsOrSkeletalMeshes, FAnimAssetCreated AssetCreated, bool bInContentBrowser=true)"
  },
  {
    "label": "CreateUniqueAssetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUniqueAssetName(const FString& InBasePackageName, const FString& InSuffix, FString& OutPackageName, FString& OutAssetName)"
  },
  {
    "label": "ApplyCompressionAlgorithm()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyCompressionAlgorithm(TArray<UAnimSequence*>& AnimSequencePtrs, UAnimBoneCompressionSettings* OverrideSettings)"
  },
  {
    "label": "CreateUniqueAssetName()",
    "kind": "Method",
    "detail": "Function (name)",
    "insertText": "CreateUniqueAssetName(AssetPath, InPrefix, PackageName, Name)"
  },
  {
    "label": "RegenerateSubGraphArrays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateSubGraphArrays(UAnimBlueprint* Blueprint)"
  },
  {
    "label": "RegenerateGraphSubGraphs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateGraphSubGraphs(UAnimBlueprint* OwningBlueprint, UEdGraph* GraphToFix)"
  },
  {
    "label": "RemoveDuplicateSubGraphs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDuplicateSubGraphs(UEdGraph* GraphToClean)"
  },
  {
    "label": "FindChildGraphsFromNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindChildGraphsFromNodes(UEdGraph* GraphToSearch, TArray<UEdGraph*>& ChildGraphs)"
  },
  {
    "label": "IsAnimGraph()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnimGraph(UEdGraph* Graph)"
  },
  {
    "label": "GetPoseWatchNodeLinkID()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPoseWatchNodeLinkID(UPoseWatch* PoseWatch, OUT UAnimBlueprintGeneratedClass*& AnimBPGenClass)"
  },
  {
    "label": "SetPoseWatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPoseWatch(UPoseWatch* PoseWatch, UAnimBlueprint* AnimBlueprintIfKnown = nullptr)"
  },
  {
    "label": "RemovePoseWatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePoseWatch(UPoseWatch* PoseWatch, UAnimBlueprint* AnimBlueprintIfKnown=nullptr)"
  },
  {
    "label": "RemovePoseWatchFromNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePoseWatchFromNode(UEdGraphNode* Node, UAnimBlueprint* AnimBlueprint)"
  },
  {
    "label": "RemovePoseWatchesFromGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePoseWatchesFromGraph(UAnimBlueprint* AnimBlueprint, class UEdGraph* Graph)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (removed)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnPoseWatchesChanged, UAnimBlueprint* /*InAnimBlueprint*/, UEdGraphNode* /*InNode*/)"
  },
  {
    "label": "SetupDebugLinkedAnimInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDebugLinkedAnimInstances(UAnimBlueprint* InAnimBlueprint, UObject* InRootObjectBeingDebugged)"
  }
]