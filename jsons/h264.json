[
  {
    "label": "SdpVideoFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SdpVideoFormat"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "CreateH264Format()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_H264_INCLUDE_H264_H_ # define MODULES_VIDEO_CODING_CODECS_H264_INCLUDE_H264_H_ # include<memory> # include<string> # include<vector> # include \" api / video_codecs / h264_profile_level_id . h \" # include \" api / video_codecs / scalability_mode . h \" # include \" media / base / codec . h \" # include \" modules / video_coding / include / video_codec_interface . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { struct SdpVideoFormat ; RTC_EXPORT SdpVideoFormat)",
    "insertText": "CreateH264Format(H264Profile profile, H264Level level, const std::string& packetization_mode, bool add_scalability_modes = false)"
  },
  {
    "label": "DisableRtcUseH264()",
    "kind": "Method",
    "detail": "Function (RTC_EXPORT void)",
    "insertText": "DisableRtcUseH264()"
  },
  {
    "label": "SupportedH264Codecs()",
    "kind": "Method",
    "detail": "Function (std::vector<SdpVideoFormat>)",
    "insertText": "SupportedH264Codecs(bool add_scalability_modes = false)"
  },
  {
    "label": "SupportedH264DecoderCodecs()",
    "kind": "Method",
    "detail": "Function (std::vector<SdpVideoFormat>)",
    "insertText": "SupportedH264DecoderCodecs()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (class RTC_EXPORT H264Encoder : public VideoEncoder { public : std::unique_ptr<H264Encoder>)",
    "insertText": "Create(const cricket::VideoCodec& codec)"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupported()"
  },
  {
    "label": "SupportsScalabilityMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsScalabilityMode(ScalabilityMode scalability_mode)"
  },
  {
    "label": "H264Encoder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "H264Encoder()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } ; class RTC_EXPORT H264Decoder : public VideoDecoder { public : std::unique_ptr<H264Decoder>)",
    "insertText": "Create()"
  },
  {
    "label": "H264Decoder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "H264Decoder()"
  }
]