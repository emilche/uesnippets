[
  {
    "label": "FbxObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxObject"
  },
  {
    "label": "FbxAnimStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimStack"
  },
  {
    "label": "FbxRotationOrder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxRotationOrder"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "methods",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "methods"
  },
  {
    "label": "EMatrixIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMatrixIndex"
  },
  {
    "label": "EMatrixIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMatrixIndex"
  },
  {
    "label": "EAxisIndex",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAxisIndex"
  },
  {
    "label": "Cell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Cell"
  },
  {
    "label": "NeedApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedApply(FbxAnimStack* pAnimStack, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "NeedApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedApply(FbxObject* pObj, FbxAnimStack* pAnimStack, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "NeedApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedApply(FbxAnimCurveNode& pCurveNode, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "NeedApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedApply(FbxAnimCurve** pCurve, int pCount, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "NeedApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedApply(FbxAnimCurve& pCurve, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxAnimStack* pAnimStack, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxObject* pObj, FbxAnimStack* pAnimStack, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxAnimCurveNode& pCurveNode, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxAnimCurve** pCurve, int pCount, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "GetContinuousOffset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetContinuousOffset(FbxRotationOrder& pOrder, FbxVector4& pOffset, FbxVector4& pNew, FbxVector4& pOld)"
  },
  {
    "label": "GetKFCurvesFromAnimCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKFCurvesFromAnimCurve(FbxAnimCurve** pSrc, int pSrcCount, KFCurve** pDst, int& pDstCount)"
  },
  {
    "label": "SetDerivativeTolerance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDerivativeTolerance(double pValue)"
  },
  {
    "label": "SetValueTolerance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValueTolerance(double pValue)"
  },
  {
    "label": "SetKeepFirstAndLastKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepFirstAndLastKeys( bool pKeepFirstAndLastKeys )"
  },
  {
    "label": "SetKeepOneKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepOneKey( bool pKeepOneKey )"
  },
  {
    "label": "SetKeepNotPureAutoKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeepNotPureAutoKeys(bool pKeep)"
  },
  {
    "label": "SetTranslationThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTranslationThreshold( double pTranslationThreshold )"
  },
  {
    "label": "SetRotationThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationThreshold( double pRotationThreshold )"
  },
  {
    "label": "SetScalingThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScalingThreshold( double pScalingThreshold )"
  },
  {
    "label": "SetDefaultThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultThreshold( double pDefaultThreshold )"
  },
  {
    "label": "SetModes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetModes(bool pExporting, FbxIOSettings& pIOS)"
  },
  {
    "label": "IsKeyConstant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKeyConstant(FbxAnimCurve& pCurve, int pIndex, int pFirstIndex, int pLastIndex, double pMinValue, double pMaxValue, bool pOnlyCheckAutoKeys)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxAnimCurve** pCurve, int pCount, FbxIOSettings& pIOS, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "SetApplyKeySyncFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplyKeySyncFilter(bool pFlag)"
  },
  {
    "label": "SetPrecision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrecision(double pPrecision)"
  },
  {
    "label": "SetKeySync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeySync(bool pKeySync)"
  },
  {
    "label": "KeyReducer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "KeyReducer(FbxAnimCurve& pSCurve, FbxAnimCurve& pTCurve, FbxTime pStart, FbxTime pStop)"
  },
  {
    "label": "Subdivise()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Subdivise(FbxAnimCurve& pSCurve, FbxAnimCurve& pTCurve, int pLeft, int pRight)"
  },
  {
    "label": "FindMaxError()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "FindMaxError(FbxAnimCurve& pSCurve, FbxAnimCurve& pTCurve, int pLeft, int pRight, int& pSplit)"
  },
  {
    "label": "SetKeysOnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeysOnFrame(bool pKeysOnFrame)"
  },
  {
    "label": "SetPeriodTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPeriodTime(FbxTime &pPeriod)"
  },
  {
    "label": "SetIntelligentMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIntelligentMode( bool pIntelligent )"
  },
  {
    "label": "SetScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScale(double pScale)"
  },
  {
    "label": "SetScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScale(FbxAnimCurve* pScale)"
  },
  {
    "label": "SetShift()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShift(FbxTime& pShift)"
  },
  {
    "label": "SetScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScale(double pScale)"
  },
  {
    "label": "SetQualityTolerance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQualityTolerance(double pQualityTolerance)"
  },
  {
    "label": "SetTestForPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTestForPath(bool pTestForPath)"
  },
  {
    "label": "SetForceAutoTangents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForceAutoTangents(bool pForceAutoTangents)"
  },
  {
    "label": "SetRotationOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationOrder(FbxEuler::EOrder pOrder)"
  },
  {
    "label": "InterpolationQualityFactor()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "InterpolationQualityFactor(FbxVector4& lV1, FbxVector4& lV2)"
  },
  {
    "label": "NeedApply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedApply(FbxAnimCurveNode* pCurveNode[3], FbxStatus* pStatus=NULL)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxAnimCurveNode* pCurveNode[3], FbxStatus* pStatus=NULL)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Apply(FbxAnimCurve** pCurve, double* pVals, FbxStatus* pStatus=NULL)"
  },
  {
    "label": "SetSourceMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceMatrix(EMatrixIndex pIndex, FbxAMatrix& pMatrix)"
  },
  {
    "label": "SetDestMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDestMatrix(EMatrixIndex pIndex, FbxAMatrix& pMatrix)"
  },
  {
    "label": "SetResamplingPeriod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResamplingPeriod(FbxTime& pResamplingPeriod)"
  },
  {
    "label": "SetGenerateLastKeyExactlyAtEndTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGenerateLastKeyExactlyAtEndTime(bool pFlag)"
  },
  {
    "label": "SetResamplingOnFrameRateMultiple()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResamplingOnFrameRateMultiple(bool pFlag)"
  },
  {
    "label": "SetApplyUnroll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplyUnroll(bool pFlag)"
  },
  {
    "label": "SetApplyConstantKeyReducer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplyConstantKeyReducer(bool pFlag)"
  },
  {
    "label": "SetResampleTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResampleTranslation(bool pFlag)"
  },
  {
    "label": "SetSrcRotateOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSrcRotateOrder(FbxEuler::EOrder pOrder)"
  },
  {
    "label": "SetDestRotateOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDestRotateOrder(FbxEuler::EOrder pOrder)"
  },
  {
    "label": "SetForceApply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForceApply(bool pVal)"
  },
  {
    "label": "SetTranslationLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTranslationLimits(FbxLimits &limit )"
  },
  {
    "label": "SetRotationLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationLimits(FbxLimits &limit )"
  },
  {
    "label": "SetScalingLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScalingLimits(FbxLimits &limit )"
  },
  {
    "label": "DoConvert()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoConvert(FbxAnimCurve** pCurve, \n                    double pT[eAxisCount], \n                    double pR[eAxisCount], \n                    double pS[eAxisCount],\n\t\t\t\t\tFbxStatus* pStatus)"
  },
  {
    "label": "FindTimeInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindTimeInterval(\n        FbxTime& pStart, \n        FbxTime& pEnd,\n        FbxAnimCurve* pTFCurve [eAxisCount], \n        FbxAnimCurve* pRFCurve [eAxisCount], \n        FbxAnimCurve* pSFCurve [eAxisCount]\n    )"
  },
  {
    "label": "ComputeTotalMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeTotalMatrix(\n        FbxAMatrix& pGlobal, \n        Cell& pCell,\n        FbxAMatrix& pTranslate,\n        FbxAMatrix& pRotate,\n        FbxAMatrix& pScale\n\t)"
  },
  {
    "label": "ExtractTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractTransforms(\n        FbxVector4& pScaleVector,\n        FbxVector4& pRotateVector,\n        FbxVector4& pTranslateVector,\n        FbxAMatrix& pGlobal,\n        Cell& pDest\n    )"
  },
  {
    "label": "SetDestFCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDestFCurve(FbxAnimCurve* pCurve [eAxisCount], \n                       int pIndex, \n                       FbxTime pTime, \n                       FbxVector4 pVector,\n                       FbxAnimCurveDef::EInterpolationType pInterpMode[eAxisCount], \n                       FbxAnimCurveDef::ETangentMode pTangentMode[eAxisCount])"
  },
  {
    "label": "FillInterpAndTangeant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillInterpAndTangeant(FbxTime& pTime, \n                               FbxAnimCurve* pSourceCurve[eAxisCount], \n                               FbxAnimCurveDef::EInterpolationType* pInterp, \n                               FbxAnimCurveDef::ETangentMode* pTangeant)"
  },
  {
    "label": "SetDestFCurveTangeant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDestFCurveTangeant(FbxAnimCurve* pCurve [eAxisCount], \n                               int pIndex, \n                               FbxAnimCurveDef::ETangentMode pTangentMode[eAxisCount], \n                               FbxVector4 pKeyValue, \n                               FbxVector4 pNextKeyValue)"
  }
]