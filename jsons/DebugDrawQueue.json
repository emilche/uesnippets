[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "TListThreadSafe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TListThreadSafe"
  },
  {
    "label": "FDebugDrawQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDrawQueue"
  },
  {
    "label": "EBuffer",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBuffer"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (FRotationMatrix)",
    "insertText": "R(AxisRot)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CommandQueueCS)"
  },
  {
    "label": "GetCenterOfInterestImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCenterOfInterestImpl()"
  },
  {
    "label": "GetRadiusOfInterestImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRadiusOfInterestImpl()"
  },
  {
    "label": "IsInRegionOfInterestImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsInRegionOfInterestImpl(Pos)"
  },
  {
    "label": "IsInRegionOfInterestImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsInRegionOfInterestImpl(Pos, Radius)"
  },
  {
    "label": "IsInRegionOfInterestImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsInRegionOfInterestImpl(Bounds)"
  },
  {
    "label": "SetConsumerActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConsumerActive(void* Consumer, bool bConsumerActive)"
  },
  {
    "label": "IsInBudget()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsInBudget()"
  }
]