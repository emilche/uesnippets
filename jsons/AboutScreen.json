[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SAboutScreen",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAboutScreen"
  },
  {
    "label": "FLineDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLineDefinition"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Margin . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class ITableRow ; class SButton ; class STableViewBase ; struct FSlateBrush ; class SAboutScreen : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAboutScreen)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() UNREALED_API void Construct(const FArguments& InArgs)"
  },
  {
    "label": "FLineDefinition()",
    "kind": "Method",
    "detail": "Function (private : struct FLineDefinition { public : FText Text ; int32 FontSize ; FLinearColor TextColor ; FMargin Margin ;)",
    "insertText": "FLineDefinition(const FText& InText ) : Text( InText ) , FontSize( 9 ) , TextColor( FLinearColor(0.5f, 0.5f, 0.5f) ) , Margin( FMargin(6.f, 0.f, 0.f, 0.f))"
  },
  {
    "label": "FLineDefinition()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLineDefinition(const FText& InText, int32 InFontSize, const FLinearColor& InTextColor, const FMargin& InMargin ) : Text( InText ) , FontSize( InFontSize ) , TextColor( InTextColor ) , Margin( InMargin)"
  },
  {
    "label": "MakeAboutTextItemWidget()",
    "kind": "Method",
    "detail": "Function (} } ; TArray<TSharedRef<FLineDefinition>> AboutLines ; TSharedPtr<SButton> UEButton ; TSharedPtr<SButton> EpicGamesButton ; TSharedRef<ITableRow>)",
    "insertText": "MakeAboutTextItemWidget(TSharedRef<FLineDefinition> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnUEButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnUEButtonClicked()"
  },
  {
    "label": "OnEpicGamesButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnEpicGamesButtonClicked()"
  },
  {
    "label": "OnClose()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClose()"
  }
]