[
  {
    "label": "EShaderPlatform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderPlatform"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "URuntimeVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTexture"
  },
  {
    "label": "FRuntimeVirtualTextureDetailsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRuntimeVirtualTextureDetailsCustomization"
  },
  {
    "label": "TextureGroup",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureGroup"
  },
  {
    "label": "URuntimeVirtualTextureStreamingProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTextureStreamingProxy"
  },
  {
    "label": "FInitSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitSettings"
  },
  {
    "label": "FRuntimeVirtualTextureRenderResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRuntimeVirtualTextureRenderResource"
  },
  {
    "label": "UVirtualTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVirtualTexture2D"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / TextureDefines . h \" # include \" VirtualTexturing . h \" # include \" VT / RuntimeVirtualTextureEnum . h \" # include \" RuntimeVirtualTexture . generated . h \" enum EShaderPlatform : uint16 ; namespace UE { namespace Shader { enum class EValueType : uint8 ; } })",
    "insertText": "UCLASS(ClassGroup = Rendering, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() ENGINE_API ~URuntimeVirtualTexture()"
  },
  {
    "label": "GetMaterialType()",
    "kind": "Method",
    "detail": "Function (public : ERuntimeVirtualTextureMaterialType)",
    "insertText": "GetMaterialType()"
  },
  {
    "label": "GetClampedTileCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetClampedTileCount(int32 InTileCount, bool InAdaptive)"
  },
  {
    "label": "GetMaxTileCountLog2()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetMaxTileCountLog2(bool InAdaptive)"
  },
  {
    "label": "GetClampedTileSize()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetClampedTileSize(int32 InTileSize)"
  },
  {
    "label": "GetCompressTextures()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCompressTextures()"
  },
  {
    "label": "GetLQCompression()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetLQCompression()"
  },
  {
    "label": "GetLayerCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLayerCount()"
  },
  {
    "label": "GetLayerCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLayerCount(ERuntimeVirtualTextureMaterialType InMaterialType)"
  },
  {
    "label": "GetLayerFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetLayerFormat(int32 LayerIndex)"
  },
  {
    "label": "IsLayerSRGB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLayerSRGB(int32 LayerIndex)"
  },
  {
    "label": "IsLayerYCoCg()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLayerYCoCg(int32 LayerIndex)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IVirtualTexture* InProducer, FVTProducerDescription const& InProducerDesc, FTransform const& InVolumeToWorld, FBox const& InWorldBounds)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "GetProducerHandle()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureProducerHandle)",
    "insertText": "GetProducerHandle()"
  },
  {
    "label": "GetAllocatedVirtualTexture()",
    "kind": "Method",
    "detail": "Function (IAllocatedVirtualTexture*)",
    "insertText": "GetAllocatedVirtualTexture()"
  },
  {
    "label": "GetUniformParameter()",
    "kind": "Method",
    "detail": "Function (FVector4)",
    "insertText": "GetUniformParameter(int32 Index)"
  },
  {
    "label": "GetUniformParameterType()",
    "kind": "Method",
    "detail": "Function (UE::Shader::EValueType)",
    "insertText": "GetUniformParameterType(int32 Index)"
  },
  {
    "label": "InitResource()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "InitResource(IVirtualTexture* InProducer, FVTProducerDescription const& InProducerDesc)"
  },
  {
    "label": "InitNullResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitNullResource()"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "CreateStreamingTextureProducer()",
    "kind": "Method",
    "detail": "Function (# endif private : class FRuntimeVirtualTextureRenderResource* Resource ; FVector4 WorldToUVTransformParameters [ 3 ] ; FVector4 WorldHeightUnpackParameter ; } ; class UVirtualTexture2D ; namespace RuntimeVirtualTexture { IVirtualTexture*)",
    "insertText": "CreateStreamingTextureProducer(UVirtualTexture2D* InStreamingTexture, FVTProducerDescription const& InOwnerProducerDesc, FVTProducerDescription& OutStreamingProducerDesc)"
  },
  {
    "label": "BindStreamingTextureProducer()",
    "kind": "Method",
    "detail": "Function (IVirtualTexture*)",
    "insertText": "BindStreamingTextureProducer(IVirtualTexture* InProducer, IVirtualTexture* InStreamingProducer, int32 InTransitionLevel)"
  },
  {
    "label": "IsMaterialTypeSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaterialTypeSupported(ERuntimeVirtualTextureMaterialType MaterialType)"
  },
  {
    "label": "IsMaterialTypeSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMaterialTypeSupported(ERuntimeVirtualTextureMaterialType MaterialType, EShaderPlatform InPlatform)"
  }
]