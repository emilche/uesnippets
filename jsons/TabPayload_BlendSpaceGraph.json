[
  {
    "label": "FTabPayload_BlendSpaceGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabPayload_BlendSpaceGraph"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" WorkflowOrientedApp / WorkflowUObjectDocuments . h \" # include \" BlendSpaceGraph . h \" struct FTabPayload_BlendSpaceGraph : public FTabPayload { public : TSharedRef<FTabPayload_BlendSpaceGraph>)",
    "insertText": "Make(const UBlendSpaceGraph* DocumentID)"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEqual(const TSharedRef<FTabPayload>& OtherPayload)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(OtherPayload->PayloadType == NAME_Object)"
  },
  {
    "label": "UObject()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<UObject> WeakObject = FTabPayload_UObject::CastChecked<)",
    "insertText": "UObject(OtherPayload)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} return false ; } bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FTabPayload_BlendSpaceGraph()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTabPayload_BlendSpaceGraph()"
  },
  {
    "label": "GetBlendSpaceGraph()",
    "kind": "Method",
    "detail": "Function (} ; UBlendSpaceGraph*)",
    "insertText": "GetBlendSpaceGraph(TSharedPtr<FTabPayload> Payload)"
  },
  {
    "label": "FTabPayload_BlendSpaceGraph()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FTabPayload_BlendSpaceGraph(UBlendSpaceGraph* InDocumentID) : FTabPayload(UBlendSpaceGraph::StaticClass()->GetFName()) , DocumentID(InDocumentID)"
  }
]