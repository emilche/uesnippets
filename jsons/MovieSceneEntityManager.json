[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBase"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FMovieSceneExportedEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportedEntity"
  },
  {
    "label": "FChildEntityInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChildEntityInitializer"
  },
  {
    "label": "FComponentRegistry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentRegistry"
  },
  {
    "label": "FEntityAllocationIteratorProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAllocationIteratorProxy"
  },
  {
    "label": "FFreeEntityOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeEntityOperation"
  },
  {
    "label": "FMutualEntityInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMutualEntityInitializer"
  },
  {
    "label": "IComponentTypeHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IComponentTypeHandler"
  },
  {
    "label": "IMovieSceneEntityMutation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMovieSceneEntityMutation"
  },
  {
    "label": "TReadOptional",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TReadOptional"
  },
  {
    "label": "TWriteOptional",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TWriteOptional"
  },
  {
    "label": "IMovieSceneConditionalEntityMutation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMovieSceneConditionalEntityMutation"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FEntityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntityManager"
  },
  {
    "label": "FEntityInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityInitializer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEntityAllocationProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAllocationProxy"
  },
  {
    "label": "FEntityAllocationIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAllocationIterator"
  },
  {
    "label": "FEntityAllocationIteratorProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAllocationIteratorProxy"
  },
  {
    "label": "FEntityLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityLocation"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFreeEntityOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeEntityOperation"
  },
  {
    "label": "FAllocationMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocationMask"
  },
  {
    "label": "FCommitData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommitData"
  },
  {
    "label": "FEntityManager()",
    "kind": "Method",
    "detail": "Function (MOVIESCENE_API)",
    "insertText": "FEntityManager()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "AllocateEntity()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEntityID)",
    "insertText": "AllocateEntity()"
  },
  {
    "label": "FreeEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeEntity(FMovieSceneEntityID EntityID)"
  },
  {
    "label": "FreeEntities()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FreeEntities(const FEntityComponentFilter& Filter, TSet<FMovieSceneEntityID>* OutFreedEntities = nullptr)"
  },
  {
    "label": "FreeEntities()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FreeEntities(const FFreeEntityOperation& Operation, TSet<FMovieSceneEntityID>* OutFreedEntities = nullptr)"
  },
  {
    "label": "AllocateContiguousEntities()",
    "kind": "Method",
    "detail": "Function (FEntityDataLocation)",
    "insertText": "AllocateContiguousEntities(const FComponentMask& EntityComponentMask, int32* InOutNum)"
  },
  {
    "label": "AllocateEntity()",
    "kind": "Method",
    "detail": "Function (FEntityInfo)",
    "insertText": "AllocateEntity(const FComponentMask& EntityComponentMask)"
  },
  {
    "label": "GetEntityHandle()",
    "kind": "Method",
    "detail": "Function (FEntityHandle)",
    "insertText": "GetEntityHandle(FMovieSceneEntityID EntityID)"
  },
  {
    "label": "UpdateThreadingModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateThreadingModel()"
  },
  {
    "label": "AddComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComponent(FMovieSceneEntityID EntityID, FComponentTypeID ComponentTypeID)"
  },
  {
    "label": "AddComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComponent(FMovieSceneEntityID EntityID, FComponentTypeID ComponentTypeID, EEntityRecursion Recursion)"
  },
  {
    "label": "AddComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComponents(FMovieSceneEntityID EntityID, const FComponentMask& EntityComponentMask)"
  },
  {
    "label": "AddComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComponents(FMovieSceneEntityID EntityID, const FComponentMask& EntityComponentMask, EEntityRecursion Recursion)"
  },
  {
    "label": "RemoveComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponent(FMovieSceneEntityID EntityID, FComponentTypeID ComponentTypeID)"
  },
  {
    "label": "RemoveComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponent(FMovieSceneEntityID EntityID, FComponentTypeID ComponentTypeID, EEntityRecursion Recursion)"
  },
  {
    "label": "RemoveComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponents(FMovieSceneEntityID EntityID, const FComponentMask& ComponentsToRemove)"
  },
  {
    "label": "RemoveComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponents(FMovieSceneEntityID EntityID, const FComponentMask& ComponentsToRemove, EEntityRecursion Recursion)"
  },
  {
    "label": "CopyComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyComponent(FMovieSceneEntityID SrcEntityID, FMovieSceneEntityID DstEntityID, FComponentTypeID ComponentTypeID)"
  },
  {
    "label": "CopyComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyComponents(FMovieSceneEntityID SrcEntityID, FMovieSceneEntityID DstEntityID, const FComponentMask& ComponentsToCopy)"
  },
  {
    "label": "ChangeEntityType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeEntityType(FMovieSceneEntityID InEntity, const FComponentMask& InNewMask)"
  },
  {
    "label": "FilterComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterComponents(FMovieSceneEntityID EntityID, const FComponentMask& EntitiesToKeep)"
  },
  {
    "label": "CombineComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CombineComponents(FMovieSceneEntityID DestinationEntityID, FMovieSceneEntityID SourceEntityID, const FComponentMask* OptionalMask = nullptr)"
  },
  {
    "label": "DuplicateEntity()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEntityID)",
    "insertText": "DuplicateEntity(FMovieSceneEntityID InOther)"
  },
  {
    "label": "OverwriteEntityWithDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverwriteEntityWithDuplicate(FMovieSceneEntityID& InOutEntity, FMovieSceneEntityID InEntityToDuplicate)"
  },
  {
    "label": "InitializeChildAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeChildAllocation(const FComponentMask& ParentType, const FComponentMask& ChildType, const FEntityAllocation* ParentAllocation, TArrayView<const int32> ParentAllocationOffsets, const FEntityRange& InChildEntityRange)"
  },
  {
    "label": "AddMutualComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMutualComponents()"
  },
  {
    "label": "AddMutualComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMutualComponents(const FEntityComponentFilter& InFilter)"
  },
  {
    "label": "Compact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compact()"
  },
  {
    "label": "MutateAll()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MutateAll(const FEntityComponentFilter& Filter, const IMovieSceneEntityMutation& Mutation, EMutuallyInclusiveComponentType MutualTypes = EMutuallyInclusiveComponentType::Mandatory)"
  },
  {
    "label": "MutateConditional()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MutateConditional(const FEntityComponentFilter& Filter, const IMovieSceneConditionalEntityMutation& Mutation, EMutuallyInclusiveComponentType MutualTypes = EMutuallyInclusiveComponentType::Mandatory)"
  },
  {
    "label": "TouchEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TouchEntity(FMovieSceneEntityID EntityID)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(FMovieSceneEntityID ParentID, FMovieSceneEntityID ChildID)"
  },
  {
    "label": "CountMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountMemory(FArchive& Ar, FMovieSceneEntityID EntityID)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& ReferenceCollector)"
  },
  {
    "label": "ReplaceEntityID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceEntityID(FMovieSceneEntityID& InOutEntity, FMovieSceneEntityID EntityToDiscard)"
  },
  {
    "label": "OnStructureChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStructureChanged()"
  },
  {
    "label": "CreateEntityAllocationEntry()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CreateEntityAllocationEntry(const FComponentMask& EntityComponentMask, uint16 InitialCapacity, uint16 MaxCapacity)"
  },
  {
    "label": "GetOrCreateAllocationWithSlack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetOrCreateAllocationWithSlack(const FComponentMask& EntityComponentMask, int32* InOutDesiredSlack = nullptr)"
  },
  {
    "label": "CreateAllocationWithSlack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CreateAllocationWithSlack(const FComponentMask& EntityComponentMask, int32* InOutDesiredSlack = nullptr)"
  },
  {
    "label": "MigrateEntity()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MigrateEntity(int32 DestIndex, int32 SourceIndex, int32 SourceEntryIndexWithinAllocation)"
  },
  {
    "label": "CopyComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyComponents(int32 DestAllocationIndex, int32 DestEntityIndex, int32 SourceAllocationIndex, int32 SourceEntityIndex, const FComponentMask* OptionalMask = nullptr)"
  },
  {
    "label": "AddEntityToAllocation()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddEntityToAllocation(int32 AllocationIndex, FMovieSceneEntityID ID, EMemoryType MemoryType = EMemoryType::DefaultConstructed)"
  },
  {
    "label": "RemoveEntityFromAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEntityFromAllocation(int32 AllocationIndex, int32 SourceEntryIndexWithinAllocation)"
  },
  {
    "label": "CombineAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CombineAllocations(int32 DestinationIndex, int32 SourceIndex)"
  },
  {
    "label": "ReserveAllocation()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ReserveAllocation(int32 AllocationIndex, int32 NumToReserve)"
  },
  {
    "label": "DestroyAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAllocation(FEntityAllocation* Allocation, bool bDestructComponentData = true)"
  },
  {
    "label": "CheckInvariants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckInvariants()"
  },
  {
    "label": "MarkAllocationForFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAllocationForFree(int32 AllocationIndex)"
  },
  {
    "label": "MarkEntityForFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkEntityForFree(FMovieSceneEntityID EntityID)"
  }
]