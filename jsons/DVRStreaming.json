[
  {
    "label": "FDVRStreamingStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDVRStreamingStatus"
  },
  {
    "label": "IDVRStreamingSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDVRStreamingSystem"
  },
  {
    "label": "FGenericDVRStreamingSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericDVRStreamingSystem"
  },
  {
    "label": "IDVRStreamingSystem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FDVRStreamingStatus { bool bIsStreaming ; bool bIsStreamingEnabled ; int32 ViewerCount ; FString ProgramName ; FString HLSUrl ; FString ProviderUrl ; } ; class IDVRStreamingSystem { public : ~)",
    "insertText": "IDVRStreamingSystem()"
  },
  {
    "label": "GetStreamingStatus()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetStreamingStatus(FDVRStreamingStatus &StreamingStatus)"
  },
  {
    "label": "EnableStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableStreaming(bool Enable)"
  },
  {
    "label": "FGenericDVRStreamingSystem()",
    "kind": "Method",
    "detail": "Function (} ; class FGenericDVRStreamingSystem : public IDVRStreamingSystem { public :)",
    "insertText": "FGenericDVRStreamingSystem() : bIsStreamingEnabled(false)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (StreamingStatus . bIsStreaming = false ; StreamingStatus . bIsStreamingEnabled = bIsStreamingEnabled ; StreamingStatus . ViewerCount = 0 ; StreamingStatus . ProgramName =)",
    "insertText": "TEXT(\"\")"
  }
]