[
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "TDynamicVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDynamicVector"
  },
  {
    "label": "iterates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "iterates"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIterator"
  },
  {
    "label": "TDynamicVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDynamicVector"
  },
  {
    "label": "iterates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "iterates"
  },
  {
    "label": "FConstIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstIterator"
  },
  {
    "label": "TDynamicVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDynamicVector"
  },
  {
    "label": "TBlockVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBlockVector"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "TDynamicVectorN",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDynamicVectorN"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "ElementVectorN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementVectorN"
  },
  {
    "label": "FIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIterator"
  },
  {
    "label": "TDynamicVectorN",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDynamicVectorN"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Fill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fill(const Type& Value)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(unsigned int Count)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(unsigned int Count, const Type& InitValue)"
  },
  {
    "label": "SetMinimumSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMinimumSize(unsigned int Count, const Type& InitValue)"
  },
  {
    "label": "GetLength()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetLength()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const Type& Data)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const TDynamicVector& Data)"
  },
  {
    "label": "PopBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopBack()"
  },
  {
    "label": "InsertAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAt(const Type& Data, unsigned int Index)"
  },
  {
    "label": "InsertAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAt(const Type& Data, unsigned int Index, const Type& InitValue)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(const Func& f)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (FIterator)",
    "insertText": "Copy(*this)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (FConstIterator)",
    "insertText": "Copy(*this)"
  }
]