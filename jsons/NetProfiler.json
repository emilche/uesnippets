[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ENetProfilerConnectionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENetProfilerConnectionMode"
  },
  {
    "label": "FNetProfilerName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerName"
  },
  {
    "label": "FNetProfilerEventType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerEventType"
  },
  {
    "label": "FNetProfilerLifeTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerLifeTime"
  },
  {
    "label": "FNetProfilerObjectInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerObjectInstance"
  },
  {
    "label": "FNetProfilerContentEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerContentEvent"
  },
  {
    "label": "FNetProfilerStatsCounterType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerStatsCounterType"
  },
  {
    "label": "FNetProfilerStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerStats"
  },
  {
    "label": "FNetProfilerPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerPacket"
  },
  {
    "label": "FNetProfilerFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerFrame"
  },
  {
    "label": "FNetProfilerConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerConnection"
  },
  {
    "label": "FNetProfilerGameInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerGameInstance"
  },
  {
    "label": "FNetProfilerAggregatedStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerAggregatedStats"
  },
  {
    "label": "FNetProfilerAggregatedStatsCounterStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetProfilerAggregatedStatsCounterStats"
  },
  {
    "label": "INetProfilerProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INetProfilerProvider"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Templates / Function . h \" # include \" TraceServices / Containers / Tables . h \" # include \" TraceServices / Model / AnalysisSession . h \" # include \" UObject / NameTypes . h \" # include<limits> namespace TraceServices { enum class ENetProfilerAggregationMode : uint32 { None,Aggregate,InstanceMax,} ; enum class ENetProfilerDeliveryStatus : uint8 { Unknown,Delivered,Dropped } ; enum ENetProfilerConnectionMode : uint8 { Outgoing = 0,Incoming = 1,Count } ; enum class ENetProfilerChannelCloseReason : uint8 { Destroyed = 0,Dormancy,LevelUnloaded,Relevancy,TearOff,} ; enum class ENetProfilerConnectionState : uint8 { USOCK_Invalid = 0,USOCK_Closed = 1,USOCK_Pending = 2,USOCK_Open = 3,} ; const TCHAR*)",
    "insertText": "LexToString(const ENetProfilerChannelCloseReason Value)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "LexToString(const ENetProfilerConnectionState Value)"
  },
  {
    "label": "infinity()",
    "kind": "Method",
    "detail": "Function (struct FNetProfilerName { const TCHAR* Name ; uint32 NameIndex ; } ; struct FNetProfilerEventType { uint32 EventTypeIndex ; const TCHAR* Name ; uint32 NameIndex : 1 6 ; uint32 Level : 1 6 ; } ; typedef double FNetProfilerTimeStamp ; struct FNetProfilerLifeTime { FNetProfilerTimeStamp Begin = 0 ; FNetProfilerTimeStamp End = std::numeric_limits<double)",
    "insertText": "infinity()"
  },
  {
    "label": "uint64()",
    "kind": "Method",
    "detail": "Function (uint64 NetObjectId = 0 ; } ; uint64 TypeId =)",
    "insertText": "uint64(0)"
  },
  {
    "label": "MakeBunchInfo()",
    "kind": "Method",
    "detail": "Function (uint64 bOpen : 1 ; uint64 bClose : 1 ; uint64 bReliable : 1 ; uint64 bHasPackageMapExports : 1 ; uint64 bHasMustBeMappedGUIDs : 1 ; uint64 bIsValid : 1 ; uint64 Padding : 1 8 ; } ; uint64 Value ; FNetProfilerBunchInfo)",
    "insertText": "MakeBunchInfo(uint64 InValue)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (FNetProfilerBunchInfo Info ; Info . Value = InValue ; return Info ; } } ; struct FNetProfilerContentEvent { uint64 StartPos : 2 4 ; uint64 EndPos : 2 4 ; uint64 Level : 8 ; uint64 Padding : 8 ; FNetProfilerBunchInfo BunchInfo ; uint32 EventTypeIndex ; uint32 NameIndex ; uint32 ObjectInstanceIndex ; } ; enum class ENetProfilerStatsCounterType : uint8 { Packet = 0,Frame = 1,} ; struct FNetProfilerStatsCounterType { uint32 StatsCounterTypeIndex ; uint32 NameIndex ; ENetProfilerStatsCounterType Type ; } ; struct FNetProfilerStats { uint32 StatsCounterTypeIndex ; uint32 StatsValue ; } ; struct FNetProfilerPacket { FNetProfilerTimeStamp TimeStamp ; uint32 SequenceNumber ; uint32 ContentSizeInBits ; uint32 TotalPacketSizeInBytes ; uint32 StartEventIndex ; uint32 EventCount ; uint32 StartStatsIndex ; uint32 StatsCount ; uint32 NetProfilerFrameIndex ; ENetProfilerDeliveryStatus DeliveryStatus ; ENetProfilerConnectionState ConnectionState ; } ; struct FNetProfilerFrame { FNetProfilerTimeStamp TimeStamp ; uint64 EngineFrameNumber = 0 ; uint32 StartStatsIndex = 0 ; uint32 StatsCount = 0 ; } ; struct FNetProfilerConnection { const TCHAR* Name = nullptr ; const TCHAR* AddressString = nullptr ; FNetProfilerLifeTime LifeTime ; uint32 GameInstanceIndex ; uint32 ConnectionIndex : 1 6 ; uint32 ConnectionId : 1 4 ; uint32 bHasIncomingData : 1 ; uint32 bHasOutgoingData : 1 ; } ; struct FNetProfilerGameInstance { FNetProfilerLifeTime LifeTime ; uint32 GameInstanceIndex ; uint32 GameInstanceId ; const TCHAR* InstanceName = nullptr ; bool bIsUsingIrisReplication = false ; bool bIsServer = false ; } ; struct FNetProfilerAggregatedStats { uint32 EventTypeIndex ; uint32 InstanceCount = 0 U ; uint32 TotalInclusive = 0 U ; uint32 MaxInclusive = 0 U ; uint32 AverageInclusive = 0 U ; uint32 TotalExclusive = 0 U ; uint32 MaxExclusive = 0 U ; } ; struct FNetProfilerAggregatedStatsCounterStats { uint32 StatsCounterTypeIndex ; uint32 Sum ; uint32 Min ; uint32 Max ; uint32 Average ; uint32 Count ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "INetProfilerProvider()",
    "kind": "Method",
    "detail": "Function (Sum = 0 ; Min = 0 ; Max = 0 ; Average = 0 ; Count = 0 ; } } ; class INetProfilerProvider : public IProvider { public : ~)",
    "insertText": "INetProfilerProvider()"
  },
  {
    "label": "GetNetTraceVersion()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNetTraceVersion()"
  },
  {
    "label": "GetNameCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNameCount()"
  },
  {
    "label": "ReadNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadNames(TFunctionRef<void(const FNetProfilerName*, uint64)> Callback)"
  },
  {
    "label": "ReadName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadName(uint32 NameIndex, TFunctionRef<void(const FNetProfilerName&)> Callback)"
  },
  {
    "label": "GetEventTypesCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetEventTypesCount()"
  },
  {
    "label": "ReadEventTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadEventTypes(TFunctionRef<void(const FNetProfilerEventType*, uint64)> Callback)"
  },
  {
    "label": "ReadEventType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadEventType(uint32 EventTypeIndex, TFunctionRef<void(const FNetProfilerEventType&)> Callback)"
  },
  {
    "label": "GetGameInstanceCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetGameInstanceCount()"
  },
  {
    "label": "ReadGameInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadGameInstances(TFunctionRef<void(const FNetProfilerGameInstance&)> Callback)"
  },
  {
    "label": "GetGameInstanceChangeCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetGameInstanceChangeCount()"
  },
  {
    "label": "GetConnectionCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetConnectionCount(uint32 GameInstanceIndex)"
  },
  {
    "label": "ReadConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadConnections(uint32 GameInstanceIndex, TFunctionRef<void(const FNetProfilerConnection&)> Callback)"
  },
  {
    "label": "ReadConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadConnection(uint32 ConnectionIndex, TFunctionRef<void(const FNetProfilerConnection&)> Callback)"
  },
  {
    "label": "GetConnectionChangeCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetConnectionChangeCount()"
  },
  {
    "label": "GetObjectCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetObjectCount(uint32 GameInstanceIndex)"
  },
  {
    "label": "ReadObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadObjects(uint32 GameInstanceIndex, TFunctionRef<void(const FNetProfilerObjectInstance&)> Callback)"
  },
  {
    "label": "ReadObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadObject(uint32 GameInstanceIndex, uint32 ObjectIndex, TFunctionRef<void(const FNetProfilerObjectInstance&)> Callback)"
  },
  {
    "label": "GetObjectsChangeCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetObjectsChangeCount(uint32 GameInstanceIndex)"
  },
  {
    "label": "FindPacketIndexFromPacketSequence()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindPacketIndexFromPacketSequence(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode, uint32 SequenceNumber)"
  },
  {
    "label": "GetPacketCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPacketCount(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode)"
  },
  {
    "label": "EnumeratePackets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumeratePackets(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode, uint32 PacketIndexIntervalStart, uint32 PacketIndexIntervalEnd, TFunctionRef<void(const FNetProfilerPacket&)> Callback)"
  },
  {
    "label": "GetPacketChangeCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPacketChangeCount(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode)"
  },
  {
    "label": "EnumeratePacketContentEventsByIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumeratePacketContentEventsByIndex(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode, uint32 StartEventIndex, uint32 EndEventIndex, TFunctionRef<void(const FNetProfilerContentEvent&)> Callback)"
  },
  {
    "label": "EnumeratePacketContentEventsByPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumeratePacketContentEventsByPosition(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode, uint32 PacketIndex, uint32 StartPosition, uint32 EndPosition, TFunctionRef<void(const FNetProfilerContentEvent&)> Callback)"
  },
  {
    "label": "GetPacketContentEventChangeCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPacketContentEventChangeCount(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode)"
  },
  {
    "label": "GetNetStatsCounterTypesCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNetStatsCounterTypesCount()"
  },
  {
    "label": "ReadNetStatsCounterTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadNetStatsCounterTypes(TFunctionRef<void(const FNetProfilerStatsCounterType*, uint64)> Callback)"
  },
  {
    "label": "ReadNetStatsCounterType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadNetStatsCounterType(uint32 TypeIndex, TFunctionRef<void(const FNetProfilerStatsCounterType&)> Callback)"
  },
  {
    "label": "CreateAggregation()",
    "kind": "Method",
    "detail": "Function (ITable<FNetProfilerAggregatedStats>*)",
    "insertText": "CreateAggregation(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode, uint32 PacketIndexIntervalStart, uint32 PacketIndexIntervalEnd, uint32 StartPosition, uint32 EndPosition)"
  },
  {
    "label": "CreateStatsCountersAggregation()",
    "kind": "Method",
    "detail": "Function (ITable<FNetProfilerAggregatedStatsCounterStats>*)",
    "insertText": "CreateStatsCountersAggregation(uint32 ConnectionIndex, ENetProfilerConnectionMode Mode, uint32 PacketIndexIntervalStart, uint32 PacketIndexIntervalEnd)"
  },
  {
    "label": "GetNetProfilerProviderName()",
    "kind": "Method",
    "detail": "Function (} ; FName)",
    "insertText": "GetNetProfilerProviderName()"
  },
  {
    "label": "ReadNetProfilerProvider()",
    "kind": "Method",
    "detail": "Function (const INetProfilerProvider*)",
    "insertText": "ReadNetProfilerProvider(const IAnalysisSession& Session)"
  }
]