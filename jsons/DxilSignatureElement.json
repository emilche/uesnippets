[
  {
    "label": "ShaderModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderModel"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilSignatureElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSignatureElement"
  },
  {
    "label": "DxilSignature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSignature"
  },
  {
    "label": "SetID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetID(unsigned ID)"
  },
  {
    "label": "SetSigPointKind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSigPointKind(DXIL::SigPointKind K)"
  },
  {
    "label": "SetRows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRows(unsigned Rows)"
  },
  {
    "label": "SetCols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCols(unsigned Cols)"
  },
  {
    "label": "SetOutputStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutputStream(unsigned Stream)"
  },
  {
    "label": "SetKind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKind(Semantic::Kind kind)"
  },
  {
    "label": "SetStartRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartRow(int StartRow)"
  },
  {
    "label": "SetStartCol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartCol(int Component)"
  },
  {
    "label": "SetSemanticIndexVec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSemanticIndexVec(const std::vector<unsigned> &Vec)"
  },
  {
    "label": "AppendSemanticIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSemanticIndex(unsigned SemIdx)"
  },
  {
    "label": "SetCompType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompType(CompType CT)"
  },
  {
    "label": "SetDynIdxCompMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynIdxCompMask(unsigned DynIdxCompMask)"
  },
  {
    "label": "SetUsageMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsageMask(unsigned UsageMask)"
  }
]