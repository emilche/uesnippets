[
  {
    "label": "AbsoluteSendTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AbsoluteSendTime"
  },
  {
    "label": "AbsoluteCaptureTimeExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AbsoluteCaptureTimeExtension"
  },
  {
    "label": "AudioLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioLevel"
  },
  {
    "label": "CsrcAudioLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CsrcAudioLevel"
  },
  {
    "label": "TransmissionOffset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransmissionOffset"
  },
  {
    "label": "TransportSequenceNumber",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransportSequenceNumber"
  },
  {
    "label": "TransportSequenceNumberV2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransportSequenceNumberV2"
  },
  {
    "label": "VideoOrientation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoOrientation"
  },
  {
    "label": "PlayoutDelayLimits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PlayoutDelayLimits"
  },
  {
    "label": "VideoContentTypeExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoContentTypeExtension"
  },
  {
    "label": "VideoTimingExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoTimingExtension"
  },
  {
    "label": "ColorSpaceExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ColorSpaceExtension"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "BaseRtpStringExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BaseRtpStringExtension"
  },
  {
    "label": "RtpStreamId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpStreamId"
  },
  {
    "label": "RepairedRtpStreamId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RepairedRtpStreamId"
  },
  {
    "label": "RtpMid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpMid"
  },
  {
    "label": "InbandComfortNoiseExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InbandComfortNoiseExtension"
  },
  {
    "label": "VideoFrameTrackingIdExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoFrameTrackingIdExtension"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data, uint32_t* time_24bits)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data, uint32_t time_24bits)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    AbsoluteCaptureTime* extension)"
  },
  {
    "label": "ValueSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ValueSize(const AbsoluteCaptureTime& extension)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    const AbsoluteCaptureTime& extension)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    bool* voice_activity,\n                    uint8_t* audio_level)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    bool voice_activity,\n                    uint8_t audio_level)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    std::vector<uint8_t>* csrc_audio_levels)"
  },
  {
    "label": "ValueSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ValueSize(rtc::ArrayView<const uint8_t> csrc_audio_levels)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    rtc::ArrayView<const uint8_t> csrc_audio_levels)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data, int32_t* rtp_time)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data, int32_t rtp_time)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    uint16_t* transport_sequence_number)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    uint16_t transport_sequence_number)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    uint16_t* transport_sequence_number,\n                    absl::optional<FeedbackRequest>* feedback_request)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    uint16_t transport_sequence_number,\n                    const absl::optional<FeedbackRequest>& feedback_request)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data, VideoRotation* value)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data, VideoRotation value)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data, uint8_t* value)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data, uint8_t value)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    VideoPlayoutDelay* playout_delay)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    const VideoPlayoutDelay& playout_delay)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    VideoContentType* content_type)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    VideoContentType content_type)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    VideoSendTiming* timing)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    const VideoSendTiming& timing)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    uint16_t time_delta_ms,\n                    uint8_t offset)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    ColorSpace* color_space)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    const ColorSpace& color_space)"
  },
  {
    "label": "CombineRangeAndChromaSiting()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "CombineRangeAndChromaSiting(\n      ColorSpace::RangeID range,\n      ColorSpace::ChromaSiting chroma_siting_horizontal,\n      ColorSpace::ChromaSiting chroma_siting_vertical)"
  },
  {
    "label": "ParseHdrMetadata()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ParseHdrMetadata(rtc::ArrayView<const uint8_t> data,\n                                 HdrMetadata* hdr_metadata)"
  },
  {
    "label": "ParseChromaticity()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ParseChromaticity(const uint8_t* data,\n                                  HdrMasteringMetadata::Chromaticity* p)"
  },
  {
    "label": "ParseLuminance()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ParseLuminance(const uint8_t* data, float* f, int denominator)"
  },
  {
    "label": "WriteHdrMetadata()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WriteHdrMetadata(rtc::ArrayView<uint8_t> data,\n                                 const HdrMetadata& hdr_metadata)"
  },
  {
    "label": "WriteChromaticity()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WriteChromaticity(uint8_t* data,\n                                  const HdrMasteringMetadata::Chromaticity& p)"
  },
  {
    "label": "WriteLuminance()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WriteLuminance(uint8_t* data, float f, int denominator)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data, std::string* str)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data, absl::string_view str)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    absl::optional<uint8_t>* level)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    absl::optional<uint8_t> level)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data,\n                    uint16_t* video_frame_tracking_id)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ArrayView<uint8_t> data,\n                    uint16_t video_frame_tracking_id)"
  }
]