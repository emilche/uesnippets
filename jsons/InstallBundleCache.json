[
  {
    "label": "FInstallBundleCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstallBundleCache"
  },
  {
    "label": "FInstallBundleCacheInitInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstallBundleCacheInitInfo"
  },
  {
    "label": "FInstallBundleCacheBundleInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstallBundleCacheBundleInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInstallBundleCacheReserveResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstallBundleCacheReserveResult"
  },
  {
    "label": "FInstallBundleCacheFlushResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstallBundleCacheFlushResult"
  },
  {
    "label": "FPerSourceBundleCacheInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerSourceBundleCacheInfo"
  },
  {
    "label": "FBundleCacheInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBundleCacheInfo"
  },
  {
    "label": "FCacheSortPredicate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheSortPredicate"
  },
  {
    "label": "MinValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" HAL / Platform . h \" # include \" InstallBundleTypes . h \" # include \" Misc / DateTime . h \" # include \" Misc / Optional . h \" # include \" Misc / Timespan . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FInstallBundleCache ; struct FInstallBundleCacheInitInfo { FName CacheName ; uint64 Size = 0 ; } ; struct FInstallBundleCacheBundleInfo { FName BundleName ; uint64 FullInstallSize = 0 ; uint64 InstallOverheadSize = 0 ; uint64 CurrentInstallSize = 0 ; FDateTime TimeStamp =)",
    "insertText": "MinValue()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FInstallBundleCacheInitInfo InitInfo)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "RemoveBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBundle(FInstallBundleSourceType Source, FName BundleName)"
  },
  {
    "label": "GetBundleInfo()",
    "kind": "Method",
    "detail": "Function (TOptional<FInstallBundleCacheBundleInfo>)",
    "insertText": "GetBundleInfo(FName BundleName)"
  },
  {
    "label": "GetBundleInfo()",
    "kind": "Method",
    "detail": "Function (TOptional<FInstallBundleCacheBundleInfo>)",
    "insertText": "GetBundleInfo(FInstallBundleSourceType Source, FName BundleName)"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetUsedSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetUsedSize()"
  },
  {
    "label": "GetFreeSpace()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetFreeSpace()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (FInstallBundleCacheReserveResult)",
    "insertText": "Reserve(FName BundleName)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (FInstallBundleCacheFlushResult)",
    "insertText": "Flush(FInstallBundleSourceType* Source = nullptr)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(FName BundleName)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(FInstallBundleSourceType Source, FName BundleName)"
  },
  {
    "label": "IsReserved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReserved(FName BundleName)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Release(FName BundleName)"
  },
  {
    "label": "SetPendingEvict()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPendingEvict(FName BundleName)"
  },
  {
    "label": "ClearPendingEvict()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClearPendingEvict(FName BundleName)"
  },
  {
    "label": "HintRequested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HintRequested(FName BundleName, bool bRequested)"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (FInstallBundleCacheStats)",
    "insertText": "GetStats(EInstallBundleCacheDumpToLog DumpToLog = EInstallBundleCacheDumpToLog::None, bool bVerbose = false)"
  },
  {
    "label": "GetFreeSpaceInternal()",
    "kind": "Method",
    "detail": "Function (private : uint64)",
    "insertText": "GetFreeSpaceInternal(uint64 UsedSize)"
  },
  {
    "label": "CheckInvariants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckInvariants()"
  },
  {
    "label": "UpdateCacheInfoFromSourceInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCacheInfoFromSourceInfo(FName BundleName)"
  },
  {
    "label": "AgeA()",
    "kind": "Method",
    "detail": "Function (FTimespan)",
    "insertText": "AgeA(Now > A.TimeStamp) ? Now - A.TimeStamp : FTimespan(0)"
  },
  {
    "label": "AgeB()",
    "kind": "Method",
    "detail": "Function (FTimespan)",
    "insertText": "AgeB(Now > B.TimeStamp) ? Now - B.TimeStamp : FTimespan(0)"
  },
  {
    "label": "UtcNow()",
    "kind": "Method",
    "detail": "Function (} ; private : FDateTime Now =)",
    "insertText": "UtcNow()"
  }
]