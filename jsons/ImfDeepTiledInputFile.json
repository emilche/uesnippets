[
  {
    "label": "DeepTiledInputFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeepTiledInputFile"
  },
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "Data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Data"
  },
  {
    "label": "InputFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputFile"
  },
  {
    "label": "MultiPartInputFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MultiPartInputFile"
  },
  {
    "label": "DeepTiledOutputFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeepTiledOutputFile"
  },
  {
    "label": "setFrameBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFrameBuffer(const DeepFrameBuffer& frameBuffer)"
  },
  {
    "label": "readTile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readTile(int dx, int dy, int l = 0)"
  },
  {
    "label": "readTile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readTile(int dx, int dy, int lx, int ly)"
  },
  {
    "label": "readTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readTiles(int dx1, int dx2, int dy1, int dy2, int lx, int ly)"
  },
  {
    "label": "readTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readTiles(int dx1, int dx2, int dy1, int dy2, int l = 0)"
  },
  {
    "label": "readPixelSampleCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readPixelSampleCount(int dx, int dy, int l = 0)"
  },
  {
    "label": "readPixelSampleCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readPixelSampleCount(int dx, int dy, int lx, int ly)"
  },
  {
    "label": "readPixelSampleCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readPixelSampleCounts(int dx1, int dx2, int dy1, int dy2, int lx, int ly)"
  },
  {
    "label": "readPixelSampleCounts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readPixelSampleCounts(int dx1, int dx2, int dy1, int dy2, int l = 0)"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initialize()"
  },
  {
    "label": "multiPartInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "multiPartInitialize(InputPartData* part)"
  },
  {
    "label": "compatibilityInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compatibilityInitialize(OPENEXR_IMF_INTERNAL_NAMESPACE::IStream& is)"
  }
]