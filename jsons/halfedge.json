[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrFace"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrHalfedge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHalfedge"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrVertex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrVertex"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrMesh"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrHalfedge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHalfedge"
  },
  {
    "label": "Mask",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Mask"
  },
  {
    "label": "HbrFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrFace"
  },
  {
    "label": "adaptiveFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "adaptiveFlags"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrHalfedgeCompare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHalfedgeCompare"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrHalfedgeOperator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHalfedgeOperator"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(HbrHalfedge<T>* opposite, int index, HbrVertex<T>* origin, unsigned int *fvarbits, HbrFace<T>* face)"
  },
  {
    "label": "GetVertex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetVertex()"
  },
  {
    "label": "GetVertex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetVertex(mesh)"
  },
  {
    "label": "GetFace()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetFace()"
  },
  {
    "label": "GetFVarInfiniteSharp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFVarInfiniteSharp(int datum)"
  },
  {
    "label": "IsFVarInfiniteSharpAnywhere()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFVarInfiniteSharpAnywhere()"
  },
  {
    "label": "GetFVarSharpness()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFVarSharpness(int datum, bool ignoreGeometry=false)"
  },
  {
    "label": "GuaranteeNeighbor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GuaranteeNeighbor()"
  },
  {
    "label": "StitchGetEdge()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "StitchGetEdge(&stitchEdge[i])"
  },
  {
    "label": "GetStitchEdge()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetStitchEdge(i + 2)"
  }
]