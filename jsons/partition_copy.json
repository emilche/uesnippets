[
  {
    "label": "_InputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator"
  },
  {
    "label": "_OutputIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_OutputIterator1"
  },
  {
    "label": "_OutputIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_OutputIterator2"
  },
  {
    "label": "_Predicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Predicate"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_PARTITION_COPY_H # define _LIBCPP___ALGORITHM_PARTITION_COPY_H # include<__config> # include<__iterator / iterator_traits . h> # include<__utility / pair . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _InputIterator, class _OutputIterator1, class _OutputIterator2, class _Predicate> _LIBCPP_CONSTEXPR_AFTER_CXX17 pair<_OutputIterator1, _OutputIterator2> partition_copy(_InputIterator __first, _InputIterator __last, _OutputIterator1 __out_true, _OutputIterator2 __out_false, _Predicate __pred)"
  },
  {
    "label": "_OutputIterator2()",
    "kind": "Method",
    "detail": "Function (* __out_true =* __first ; + + __out_true ; } else {* __out_false =* __first ; + + __out_false ; } } return pair<_OutputIterator1,)",
    "insertText": "_OutputIterator2(__out_true, __out_false)"
  }
]