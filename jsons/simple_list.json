[
  {
    "label": "simple_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "simple_node"
  },
  {
    "label": "remove_from_list()",
    "kind": "Method",
    "detail": "Function (# ifndef _SIMPLE_LIST_H # define _SIMPLE_LIST_H struct simple_node { struct simple_node* next ; struct simple_node* prev ; } ; # define)",
    "insertText": "remove_from_list(elem)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define insert_at_head(list, elem)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define insert_at_tail(list, elem)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define move_to_head(list, elem)"
  },
  {
    "label": "insert_at_head()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "insert_at_head(list, elem)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define move_to_tail(list, elem)"
  },
  {
    "label": "insert_at_tail()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "insert_at_tail(list, elem)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define make_empty_list(sentinal)"
  }
]