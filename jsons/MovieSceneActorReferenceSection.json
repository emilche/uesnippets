[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FKeyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandle"
  },
  {
    "label": "FMovieSceneSequenceHierarchy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceHierarchy"
  },
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "FMovieSceneActorReferenceKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneActorReferenceKey"
  },
  {
    "label": "FMovieSceneActorReferenceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneActorReferenceData"
  },
  {
    "label": "UMovieSceneActorReferenceSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneActorReferenceSection"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Channels / MovieSceneChannel . h \" # include \" Channels / MovieSceneChannelData . h \" # include \" Channels / MovieSceneChannelTraits . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Curves / IntegralCurve . h \" # include \" Curves / KeyHandle . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Math / Range . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / FrameRate . h \" # include \" Misc / FrameTime . h \" # include \" Misc / Guid . h \" # include \" MovieSceneFwd . h \" # include \" MovieSceneObjectBindingID . h \" # include \" MovieSceneSection . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneActorReferenceSection . generated . h \" class IMovieScenePlayer ; class UObject ; struct FKeyHandle ; struct FMovieSceneSequenceHierarchy ; struct FMovieSceneSequenceID ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneActorReferenceKey()"
  },
  {
    "label": "FMovieSceneActorReferenceKey()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneActorReferenceKey(const FMovieSceneObjectBindingID& InBindingID) : Object(InBindingID)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMovieSceneActorReferenceKey& A, const FMovieSceneActorReferenceKey& B)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneActorReferenceData() : DefaultValue()"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (} TMovieSceneChannelData<FMovieSceneActorReferenceKey>)",
    "insertText": "GetData()"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Evaluate(FFrameTime InTime, FMovieSceneActorReferenceKey& OutValue)"
  },
  {
    "label": "GetKeys()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "GetKeys(const TRange<FFrameNumber>& WithinRange, TArray<FFrameNumber>* OutKeyTimes, TArray<FKeyHandle>* OutKeyHandles)"
  },
  {
    "label": "GetKeyTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyTimes(TArrayView<const FKeyHandle> InHandles, TArrayView<FFrameNumber> OutKeyTimes)"
  },
  {
    "label": "SetKeyTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyTimes(TArrayView<const FKeyHandle> InHandles, TArrayView<const FFrameNumber> InKeyTimes)"
  },
  {
    "label": "DuplicateKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateKeys(TArrayView<const FKeyHandle> InHandles, TArrayView<FKeyHandle> OutNewHandles)"
  },
  {
    "label": "DeleteKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteKeys(TArrayView<const FKeyHandle> InHandles)"
  },
  {
    "label": "DeleteKeysFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteKeysFrom(FFrameNumber InTime, bool bDeleteKeysBefore)"
  },
  {
    "label": "ChangeFrameResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeFrameResolution(FFrameRate SourceRate, FFrameRate DestinationRate)"
  },
  {
    "label": "ComputeEffectiveRange()",
    "kind": "Method",
    "detail": "Function (TRange<FFrameNumber>)",
    "insertText": "ComputeEffectiveRange()"
  },
  {
    "label": "GetNumKeys()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumKeys()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Offset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Offset(FFrameNumber DeltaPosition)"
  },
  {
    "label": "ClearDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDefault()"
  },
  {
    "label": "GetHandle()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "GetHandle(int32 Index)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIndex(FKeyHandle Handle)"
  },
  {
    "label": "SetDefault()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetDefault(FMovieSceneActorReferenceKey InDefaultValue)"
  },
  {
    "label": "GetDefault()",
    "kind": "Method",
    "detail": "Function (DefaultValue = InDefaultValue ; } const FMovieSceneActorReferenceKey&)",
    "insertText": "GetDefault()"
  },
  {
    "label": "GetLegacyConversionFrameRate()",
    "kind": "Method",
    "detail": "Function (FFrameRate LegacyFrameRate =)",
    "insertText": "GetLegacyConversionFrameRate()"
  },
  {
    "label": "UpgradeLegacyMovieSceneTime()",
    "kind": "Method",
    "detail": "Function (FFrameNumber KeyTime =)",
    "insertText": "UpgradeLegacyMovieSceneTime(nullptr, LegacyFrameRate, Time)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (KeyTimes .)",
    "insertText": "Add(KeyTime)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (KeyValues .)",
    "insertText": "Add(Value)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual void PostLoad()"
  },
  {
    "label": "OnBindingIDsUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBindingIDsUpdated(const TMap<UE::MovieScene::FFixedObjectBindingID, UE::MovieScene::FFixedObjectBindingID>& OldFixedToNewFixedMap, FMovieSceneSequenceID LocalSequenceID, TSharedRef<UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "GetActorReferenceData()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneActorReferenceData&)",
    "insertText": "GetActorReferenceData()"
  },
  {
    "label": "EvaluateChannel()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "EvaluateChannel(const FMovieSceneActorReferenceData* InChannel, FFrameTime InTime, FMovieSceneActorReferenceKey& OutValue)"
  }
]