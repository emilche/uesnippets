[
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "FDesiredLayerStates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDesiredLayerStates"
  },
  {
    "label": "FPreAnimatedDataLayerStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedDataLayerStorage"
  },
  {
    "label": "UMovieSceneDataLayerSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneDataLayerSystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectKey . h \" # include \" Containers / Map . h \" # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" EntitySystem / MovieSceneCachedEntityFilterResult . h \" # include \" MovieSceneDataLayerSystem . generated . h \" class UDataLayerManager ; namespace UE { namespace MovieScene { struct FDesiredLayerStates ; struct FPreAnimatedDataLayerStorage ; } })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneDataLayerSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "IsRelevantImpl()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsRelevantImpl(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLink()"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "GetDataLayerManager()",
    "kind": "Method",
    "detail": "Function (UDataLayerManager*)",
    "insertText": "GetDataLayerManager(UE::MovieScene::FMovieSceneEntityID EntityID, UE::MovieScene::FRootInstanceHandle RootInstance)"
  },
  {
    "label": "UpdateDesiredStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDesiredStates()"
  },
  {
    "label": "BeginTrackingEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTrackingEntities()"
  }
]