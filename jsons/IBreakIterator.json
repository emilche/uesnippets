[
  {
    "label": "IBreakIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBreakIterator"
  },
  {
    "label": "IBreakIterator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StringView . h \" # include \" Internationalization / Text . h \" class IBreakIterator { public : ~)",
    "insertText": "IBreakIterator()"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(const FText& InText)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(CopyTemp(InText.ToString()))"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetString(const FString& InString)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(CopyTemp(InString))"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetString(const TCHAR* const InString, const int32 InStringLength)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(FString::ConstructFromPtrSize(InString, (!InString || *InString == TEXT('\\0')) ? 0 : InStringLength))"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetString(FString&& InString)"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(const FText& InText)"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(FStringView(InText.ToString()))"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetStringRef(const FString& InString)"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(FStringView(InString))"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetStringRef(const TCHAR* const InString, const int32 InStringLength)"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(FStringView(InString, InStringLength))"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetStringRef(const FString* InString)"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(FStringView(*InString))"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetStringRef(FStringView InString)"
  },
  {
    "label": "ClearString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearString()"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(FStringView())"
  },
  {
    "label": "GetCurrentPosition()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetCurrentPosition()"
  },
  {
    "label": "ResetToBeginning()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResetToBeginning()"
  },
  {
    "label": "ResetToEnd()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResetToEnd()"
  },
  {
    "label": "MoveToPrevious()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToPrevious()"
  },
  {
    "label": "MoveToNext()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToNext()"
  },
  {
    "label": "MoveToCandidateBefore()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToCandidateBefore(const int32 InIndex)"
  },
  {
    "label": "MoveToCandidateAfter()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToCandidateAfter(const int32 InIndex)"
  }
]