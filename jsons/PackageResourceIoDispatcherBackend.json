[
  {
    "label": "FBulkDataCookedIndex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBulkDataCookedIndex"
  },
  {
    "label": "FIoChunkId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoChunkId"
  },
  {
    "label": "IPackageResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPackageResourceManager"
  },
  {
    "label": "MakePackageResourceIoDispatcherBackend()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IO / IoDispatcherBackend . h \" # include \" Misc / PackageSegment . h \" # include \" Templates / SharedPointer . h \" class FBulkDataCookedIndex ; class FIoChunkId ; class IPackageResourceManager ; namespace UE { TSharedRef<IIoDispatcherBackend>)",
    "insertText": "MakePackageResourceIoDispatcherBackend(IPackageResourceManager& Mgr)"
  },
  {
    "label": "CreatePackageResourceChunkId()",
    "kind": "Method",
    "detail": "Function (FIoChunkId)",
    "insertText": "CreatePackageResourceChunkId(const FName& PackageName, EPackageSegment Segment, const FBulkDataCookedIndex& CookedIndex, bool bExternalResource)"
  },
  {
    "label": "TryGetPackageNameFromChunkId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetPackageNameFromChunkId(const FIoChunkId& ChunkId, FName& OutPackageName, EPackageSegment& OutSegment, bool& bOutExternal)"
  }
]