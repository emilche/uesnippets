[
  {
    "label": "PIXScopedEventObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PIXScopedEventObject"
  },
  {
    "label": "PIXScopedRetailEventObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PIXScopedRetailEventObject"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef _PixEvents_H_ # define _PixEvents_H_ # ifndef _PIX3_H_ # error Do not include this file directly - use pix3 . h # endif # include \" PIXEventsCommon . h \" # if _MSC_VER<1 8 0 0 # error This version of pix3 . h is only supported on Visual Studio 2 0 1 3 or higher # elif _MSC_VER<1 9 0 0 # ifndef # define # define PIX3__DEFINED_CONSTEXPR # endif # endif # if)",
    "insertText": "defined(USE_PIX) || !defined(PIX_XBOX)"
  },
  {
    "label": "PIXCopyEventArguments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXCopyEventArguments(_Out_writes_to_ptr_(limit) UINT64*& destination, _In_ const UINT64* limit)"
  },
  {
    "label": "UNREFERENCED_PARAMETER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UNREFERENCED_PARAMETER(destination)"
  },
  {
    "label": "UNREFERENCED_PARAMETER()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UNREFERENCED_PARAMETER(limit)"
  },
  {
    "label": "PIXCopyEventArguments()",
    "kind": "Method",
    "detail": "Function (} template<ARG,. . . ARGS> void)",
    "insertText": "PIXCopyEventArguments(_Out_writes_to_ptr_(limit) UINT64*& destination, _In_ const UINT64* limit, ARG const& arg, ARGS const&... args)"
  },
  {
    "label": "PIXCopyEventArgument()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXCopyEventArgument(destination, limit, arg)"
  },
  {
    "label": "PIXCopyEventArguments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXCopyEventArguments(destination, limit, args...)"
  },
  {
    "label": "PIXCopyStringArguments()",
    "kind": "Method",
    "detail": "Function (} template<ARG,. . . ARGS> void)",
    "insertText": "PIXCopyStringArguments(_Out_writes_to_ptr_(limit) UINT64*& destination, _In_ const UINT64* limit, ARG const& arg, ARGS const&... args)"
  },
  {
    "label": "PIXCopyStringArgument()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXCopyStringArgument(destination, limit, arg)"
  },
  {
    "label": "PIXCopyStringArgumentsWithContext()",
    "kind": "Method",
    "detail": "Function (} template<ARG,. . . ARGS> void)",
    "insertText": "PIXCopyStringArgumentsWithContext(_Out_writes_to_ptr_(limit) UINT64*& destination, _In_ const UINT64* limit, void* context, ARG const& arg, ARGS const&... args)"
  },
  {
    "label": "UNREFERENCED_PARAMETER()",
    "kind": "Method",
    "detail": "Function (# ifdef PIX_XBOX)",
    "insertText": "UNREFERENCED_PARAMETER(context)"
  },
  {
    "label": "PIXCopyEventArgument()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "PIXCopyEventArgument(destination, limit, context)"
  },
  {
    "label": "PIXGetEventSize()",
    "kind": "Method",
    "detail": "Function (# endif } UINT8)",
    "insertText": "PIXGetEventSize(const UINT64* end, const UINT64* start)"
  },
  {
    "label": "UINT8()",
    "kind": "Method",
    "detail": "Function (const UINT64 actualEventSize = end - start ; return static_cast<)",
    "insertText": "UINT8(actualEventSize > PIXEventsSizeMax ? PIXEventsSizeMax : actualEventSize)"
  },
  {
    "label": "PIXEncodeStringIsAnsi()",
    "kind": "Method",
    "detail": "Function (} template<STR> UINT8)",
    "insertText": "PIXEncodeStringIsAnsi()"
  },
  {
    "label": "PIXEventsReplaceBlock()",
    "kind": "Method",
    "detail": "Function (UINT64 time =)",
    "insertText": "PIXEventsReplaceBlock(threadInfo, false)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UINT64* destination = threadInfo -> destination ; UINT64* limit = threadInfo -> biasedLimit ;)",
    "insertText": "if(destination >= limit)"
  },
  {
    "label": "PIXCopyStringArguments()",
    "kind": "Method",
    "detail": "Function (limit + = PIXEventsSafeFastCopySpaceQwords ; UINT64* eventDestination = destination + + ;* destination + + = color ;)",
    "insertText": "PIXCopyStringArguments(destination, limit, formatString, args...)"
  },
  {
    "label": "PIXGetEventSize()",
    "kind": "Method",
    "detail": "Function (* destination = PIXEventsBlockEndMarker ; const UINT8 eventSize =)",
    "insertText": "PIXGetEventSize(destination, threadInfo->destination)"
  },
  {
    "label": "STR()",
    "kind": "Method",
    "detail": "Function (const UINT8 eventMetadata = PIX_EVENT_METADATA_HAS_COLOR | PIXEncodeStringIsAnsi<)",
    "insertText": "STR()"
  },
  {
    "label": "PIXEncodeEventInfo()",
    "kind": "Method",
    "detail": "Function (* eventDestination =)",
    "insertText": "PIXEncodeEventInfo(time, PIXEvent_BeginEvent, eventSize, eventMetadata)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXGetThreadInfo()",
    "kind": "Method",
    "detail": "Function (PIXEventsThreadInfo* threadInfo =)",
    "insertText": "PIXGetThreadInfo()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UINT64* limit = threadInfo -> biasedLimit ;)",
    "insertText": "if(limit != nullptr)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UINT64* destination = threadInfo -> destination ;)",
    "insertText": "if(destination < limit)"
  },
  {
    "label": "PIXGetTimestampCounter()",
    "kind": "Method",
    "detail": "Function (limit + = PIXEventsSafeFastCopySpaceQwords ; UINT64 time =)",
    "insertText": "PIXGetTimestampCounter()"
  },
  {
    "label": "PIXBeginEventAllocate()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } else {)",
    "insertText": "PIXBeginEventAllocate(threadInfo, color, formatString, args...)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXBeginEventAllocate(PIXEventsThreadInfo* threadInfo, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "STR()",
    "kind": "Method",
    "detail": "Function (const UINT8 eventMetadata = PIXEncodeStringIsAnsi<)",
    "insertText": "STR() | PIXEncodeIndexColor(color)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXSetMarkerAllocate(PIXEventsThreadInfo* threadInfo, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXEncodeEventInfo()",
    "kind": "Method",
    "detail": "Function (* eventDestination =)",
    "insertText": "PIXEncodeEventInfo(time, PIXEvent_SetMarker, eventSize, eventMetadata)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarkerAllocate()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } else {)",
    "insertText": "PIXSetMarkerAllocate(threadInfo, color, formatString, args...)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXSetMarkerAllocate(PIXEventsThreadInfo* threadInfo, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXBeginEventOnContextCpuAllocate(UINT64*& eventDestination, UINT8& eventSize, PIXEventsThreadInfo* threadInfo, void* context, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXCopyStringArgumentsWithContext()",
    "kind": "Method",
    "detail": "Function (eventDestination = nullptr ; return ; } limit + = PIXEventsSafeFastCopySpaceQwords ; eventDestination = destination + + ;* destination + + = color ;)",
    "insertText": "PIXCopyStringArgumentsWithContext(destination, limit, context, formatString, args...)"
  },
  {
    "label": "PIXBeginEventOnContextCpu()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXBeginEventOnContextCpu(UINT64*& eventDestination, UINT8& eventSize, void* context, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (UINT64* limit = threadInfo -> biasedLimit ;)",
    "insertText": "if(limit == nullptr)"
  },
  {
    "label": "PIXBeginEventOnContextCpuAllocate()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } else {)",
    "insertText": "PIXBeginEventOnContextCpuAllocate(eventDestination, eventSize, threadInfo, context, color, formatString, args...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} } template<CONTEXT,STR,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEventOnContextCpu()",
    "kind": "Method",
    "detail": "Function (UINT64* destination = nullptr ; UINT8 eventSize = 0 u ; # ifdef PIX_CONTEXT_EMIT_CPU_EVENTS)",
    "insertText": "PIXBeginEventOnContextCpu(destination, eventSize, context, color, formatString, args...)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef PIX_USE_GPU_MARKERS_V2)",
    "insertText": "if(destination != nullptr)"
  },
  {
    "label": "PIXInsertTimingMarkerOnContextForBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXInsertTimingMarkerOnContextForBeginEvent(context, PIXEvent_BeginEvent, static_cast<void*>(destination), eventSize * sizeof(UINT64))"
  },
  {
    "label": "UINT8()",
    "kind": "Method",
    "detail": "Function (* destination = 0 ull ; eventSize = static_cast<const)",
    "insertText": "UINT8(destination - buffer)"
  },
  {
    "label": "PIXEncodeEventInfo()",
    "kind": "Method",
    "detail": "Function (* eventDestination =)",
    "insertText": "PIXEncodeEventInfo(0, PIXEvent_BeginEvent, eventSize, eventMetadata)"
  },
  {
    "label": "PIXInsertGPUMarkerOnContextForBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXInsertGPUMarkerOnContextForBeginEvent(context, PIXEvent_BeginEvent, static_cast<void*>(buffer), static_cast<UINT>(reinterpret_cast<BYTE*>(destination) - reinterpret_cast<BYTE*>(buffer)))"
  },
  {
    "label": "EncodeBeginEventForContext()",
    "kind": "Method",
    "detail": "Function (# else destination =)",
    "insertText": "EncodeBeginEventForContext(buffer, color, formatString, args...)"
  },
  {
    "label": "PIXBeginGPUEventOnContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginGPUEventOnContext(context, static_cast<void*>(buffer), static_cast<UINT>(reinterpret_cast<BYTE*>(destination) - reinterpret_cast<BYTE*>(buffer)))"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# endif } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXBeginEventOnContextCpuAllocate(UINT64*& eventDestination, UINT8& eventSize, PIXEventsThreadInfo* threadInfo, void* context, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEventOnContextCpu()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXBeginEventOnContextCpu(UINT64*& eventDestination, UINT8& eventSize, void* context, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} } template<CONTEXT,STR,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# endif } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXSetMarkerOnContextCpuAllocate(UINT64*& eventDestination, UINT8& eventSize, PIXEventsThreadInfo* threadInfo, void* context, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarkerOnContextCpu()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXSetMarkerOnContextCpu(UINT64*& eventDestination, UINT8& eventSize, void* context, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarkerOnContextCpuAllocate()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } else {)",
    "insertText": "PIXSetMarkerOnContextCpuAllocate(eventDestination, eventSize, threadInfo, context, color, formatString, args...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} } template<CONTEXT,STR,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT64 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarkerOnContextCpu()",
    "kind": "Method",
    "detail": "Function (UINT64* destination = nullptr ; UINT8 eventSize = 0 u ; # ifdef PIX_CONTEXT_EMIT_CPU_EVENTS)",
    "insertText": "PIXSetMarkerOnContextCpu(destination, eventSize, context, color, formatString, args...)"
  },
  {
    "label": "PIXInsertTimingMarkerOnContextForSetMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXInsertTimingMarkerOnContextForSetMarker(context, PIXEvent_SetMarker, static_cast<void*>(destination), eventSize * sizeof(UINT64))"
  },
  {
    "label": "PIXEncodeEventInfo()",
    "kind": "Method",
    "detail": "Function (* eventDestination =)",
    "insertText": "PIXEncodeEventInfo(0, PIXEvent_SetMarker, eventSize, eventMetadata)"
  },
  {
    "label": "PIXInsertGPUMarkerOnContextForSetMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXInsertGPUMarkerOnContextForSetMarker(context, PIXEvent_SetMarker, static_cast<void*>(buffer), static_cast<UINT>(reinterpret_cast<BYTE*>(destination) - reinterpret_cast<BYTE*>(buffer)))"
  },
  {
    "label": "EncodeSetMarkerForContext()",
    "kind": "Method",
    "detail": "Function (# else destination =)",
    "insertText": "EncodeSetMarkerForContext(buffer, color, formatString, args...)"
  },
  {
    "label": "PIXSetGPUMarkerOnContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXSetGPUMarkerOnContext(context, static_cast<void*>(buffer), static_cast<UINT>(reinterpret_cast<BYTE*>(destination) - reinterpret_cast<BYTE*>(buffer)))"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# endif } } template<STR,. . . ARGS>)",
    "insertText": "__declspec(noinline) void PIXSetMarkerOnContextCpuAllocate(UINT64*& eventDestination, UINT8& eventSize, PIXEventsThreadInfo* threadInfo, void* context, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarkerOnContextCpu()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; } template<STR,. . . ARGS> void)",
    "insertText": "PIXSetMarkerOnContextCpu(UINT64*& eventDestination, UINT8& eventSize, void* context, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} } template<CONTEXT,STR,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT8 color, STR formatString, ARGS... args)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (# endif } })",
    "insertText": "__declspec(noinline) inline void PIXEndEventAllocate(PIXEventsThreadInfo* threadInfo)"
  },
  {
    "label": "PIXEventsReplaceBlock()",
    "kind": "Method",
    "detail": "Function (UINT64 time =)",
    "insertText": "PIXEventsReplaceBlock(threadInfo, true)"
  },
  {
    "label": "PIXEncodeEventInfo()",
    "kind": "Method",
    "detail": "Function (limit + = PIXEventsSafeFastCopySpaceQwords ; const UINT8 eventSize = 1 ; const UINT8 eventMetadata = PIX_EVENT_METADATA_NONE ;* destination + + =)",
    "insertText": "PIXEncodeEventInfo(time, PIXEvent_EndEvent, eventSize, eventMetadata)"
  },
  {
    "label": "PIXEndEvent()",
    "kind": "Method",
    "detail": "Function (* destination = PIXEventsBlockEndMarker ; threadInfo -> destination = destination ; } void)",
    "insertText": "PIXEndEvent()"
  },
  {
    "label": "PIXEndEventAllocate()",
    "kind": "Method",
    "detail": "Function (* destination = PIXEventsBlockEndMarker ; threadInfo -> destination = destination ; } else {)",
    "insertText": "PIXEndEventAllocate(threadInfo)"
  },
  {
    "label": "__declspec()",
    "kind": "Method",
    "detail": "Function (} } })",
    "insertText": "__declspec(noinline) inline UINT64* PIXEndEventOnContextCpuAllocate(PIXEventsThreadInfo* threadInfo, void* context)"
  },
  {
    "label": "PIXEndEventOnContextCpu()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; return eventDestination ; } UINT64*)",
    "insertText": "PIXEndEventOnContextCpu(void* context)"
  },
  {
    "label": "PIXEndEventOnContextCpuAllocate()",
    "kind": "Method",
    "detail": "Function (threadInfo -> destination = destination ; return eventDestination ; } else { return)",
    "insertText": "PIXEndEventOnContextCpuAllocate(threadInfo, context)"
  },
  {
    "label": "PIXEndEvent()",
    "kind": "Method",
    "detail": "Function (} } return nullptr ; } template<CONTEXT> void)",
    "insertText": "PIXEndEvent(CONTEXT* context)"
  },
  {
    "label": "PIXEndEventOnContextCpu()",
    "kind": "Method",
    "detail": "Function (UINT64* destination = nullptr ; # ifdef PIX_CONTEXT_EMIT_CPU_EVENTS destination =)",
    "insertText": "PIXEndEventOnContextCpu(context)"
  },
  {
    "label": "PIXInsertTimingMarkerOnContextForEndEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXInsertTimingMarkerOnContextForEndEvent(context, PIXEvent_EndEvent)"
  },
  {
    "label": "PIXEncodeEventInfo()",
    "kind": "Method",
    "detail": "Function (const UINT8 eventMetadata = PIX_EVENT_METADATA_NONE ;* eventDestination =)",
    "insertText": "PIXEncodeEventInfo(0, PIXEvent_EndEvent, eventSize, eventMetadata)"
  },
  {
    "label": "PIXInsertGPUMarkerOnContextForEndEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXInsertGPUMarkerOnContextForEndEvent(context, PIXEvent_EndEvent, static_cast<void*>(buffer), static_cast<UINT>(reinterpret_cast<BYTE*>(destination) - reinterpret_cast<BYTE*>(buffer)))"
  },
  {
    "label": "PIXEndGPUEventOnContext()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "PIXEndGPUEventOnContext(context)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif } } } # if)",
    "insertText": "defined(USE_PIX) template<typename... ARGS> void PIXBeginEvent(UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginEvent(color, formatString, args...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginEvent(static_cast<UINT64>(color), formatString, args...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXBeginEvent(UINT8 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXSetMarker(color, formatString, args...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXSetMarker(static_cast<UINT64>(color), formatString, args...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS> void)",
    "insertText": "PIXSetMarker(UINT8 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginEvent(context, color, formatString, args...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginEvent(context, static_cast<UINT64>(color), formatString, args...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT8 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginEvent(CONTEXT* context, UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXSetMarker(context, color, formatString, args...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXSetMarker(context, static_cast<UINT64>(color), formatString, args...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetMarker(CONTEXT* context, UINT8 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXEndEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXEndEvent(context)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} # else void)",
    "insertText": "PIXBeginEvent(UINT64, _In_ PCSTR, ...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXBeginEvent(UINT64, _In_ PCWSTR, ...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXBeginEvent(void*, UINT64, _In_ PCSTR, ...)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXBeginEvent(void*, UINT64, _In_ PCWSTR, ...)"
  },
  {
    "label": "PIXEndEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXEndEvent(void*)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXSetMarker(UINT64, _In_ PCSTR, ...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXSetMarker(UINT64, _In_ PCWSTR, ...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXSetMarker(void*, UINT64, _In_ PCSTR, ...)"
  },
  {
    "label": "PIXSetMarker()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PIXSetMarker(void*, UINT64, _In_ PCWSTR, ...)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} # endif template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXBeginRetailEvent(CONTEXT* context, UINT8 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXSetRetailMarker()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT,. . . ARGS> void)",
    "insertText": "PIXSetRetailMarker(CONTEXT* context, UINT8 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXEndRetailEvent()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT> void)",
    "insertText": "PIXEndRetailEvent(CONTEXT* context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<CONTEXT> class PIXScopedEventObject { CONTEXT* m_context ; public : template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, UINT64 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginEvent(m_context, color, formatString, args...)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, UINT64 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, UINT32 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, UINT32 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, INT32 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, INT32 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, DWORD color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, DWORD color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, UINT8 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(CONTEXT* context, UINT8 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "PIXScopedEventObject()"
  },
  {
    "label": "PIXEndEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXEndEvent(m_context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} } ; template<CONTEXT> class PIXScopedRetailEventObject { CONTEXT* m_context ; public : template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, UINT64 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXBeginRetailEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXBeginRetailEvent(m_context, color, formatString, args...)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, UINT64 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, UINT32 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, UINT32 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, INT32 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, INT32 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, DWORD color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, DWORD color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, UINT8 color, PCWSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedRetailEventObject(CONTEXT* context, UINT8 color, PCSTR formatString, ARGS... args) : m_context(context)"
  },
  {
    "label": "PIXScopedRetailEventObject()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "PIXScopedRetailEventObject()"
  },
  {
    "label": "PIXEndRetailEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PIXEndRetailEvent(m_context)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} } ; template<> class PIXScopedEventObject<void> { public : template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(UINT64 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(UINT64 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(UINT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(UINT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(INT32 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(INT32 color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(DWORD color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(DWORD color, PCSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(UINT8 color, PCWSTR formatString, ARGS... args)"
  },
  {
    "label": "PIXScopedEventObject()",
    "kind": "Method",
    "detail": "Function (} template<. . . ARGS>)",
    "insertText": "PIXScopedEventObject(UINT8 color, PCSTR formatString, ARGS... args)"
  }
]