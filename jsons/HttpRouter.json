[
  {
    "label": "FHttpPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpPath"
  },
  {
    "label": "FHttpRequestHandlerIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHttpRequestHandlerIterator"
  },
  {
    "label": "FHttpRouter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHttpRouter"
  },
  {
    "label": "Query()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IHttpRouter . h \" # include \" HttpRequestHandler . h \" # include \" HttpRouteHandle . h \" # include \" HttpRequestHandlerRegistrar . h \" struct FHttpPath ; struct FHttpRequestHandlerIterator ; class FHttpRouter final : public IHttpRouter { public : bool)",
    "insertText": "Query(const TSharedPtr<FHttpServerRequest>& Request, const FHttpResultCallback& OnProcessingComplete)"
  },
  {
    "label": "BindRoute()",
    "kind": "Method",
    "detail": "Function (FHttpRouteHandle)",
    "insertText": "BindRoute(const FHttpPath& HttpPath, const EHttpServerRequestVerbs& RequestVerbs, const FHttpRequestHandler& Handler)"
  },
  {
    "label": "UnbindRoute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindRoute(const FHttpRouteHandle& RouteHandle)"
  },
  {
    "label": "RegisterRequestPreprocessor()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterRequestPreprocessor(FHttpRequestHandler RequestPreprocessor)"
  },
  {
    "label": "UnregisterRequestPreprocessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterRequestPreprocessor(const FDelegateHandle& RequestPreprocessorHandle)"
  },
  {
    "label": "CreateRequestHandlerIterator()",
    "kind": "Method",
    "detail": "Function (FHttpRequestHandlerIterator)",
    "insertText": "CreateRequestHandlerIterator(const TSharedPtr<FHttpServerRequest>& Request)"
  }
]