[
  {
    "label": "TransientDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransientDetector"
  },
  {
    "label": "TransientDetector()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_DETECTOR_H_ # define MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_DETECTOR_H_ # include<stddef . h> # include<deque> # include<memory> # include \" modules / audio_processing / transient / moving_moments . h \" # include \" modules / audio_processing / transient / wpd_tree . h \" namespace webrtc { class TransientDetector { public :)",
    "insertText": "TransientDetector(int sample_rate_hz)"
  },
  {
    "label": "TransientDetector()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TransientDetector()"
  },
  {
    "label": "Detect()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Detect(const float* data, size_t data_length, const float* reference_data, size_t reference_length)"
  },
  {
    "label": "using_reference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "using_reference()"
  }
]