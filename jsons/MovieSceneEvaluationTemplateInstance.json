[
  {
    "label": "FMovieSceneContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneContext"
  },
  {
    "label": "FMovieSceneSubSequenceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSubSequenceData"
  },
  {
    "label": "FMovieSceneBlendingAccumulator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBlendingAccumulator"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FMovieSceneEntitySystemRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneEntitySystemRunner"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "UMovieSceneCompiledDataManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneCompiledDataManager"
  },
  {
    "label": "FSequenceInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequenceInstance"
  },
  {
    "label": "FMovieSceneRootEvaluationTemplateInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneRootEvaluationTemplateInstance"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Map . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneInstanceRegistry . h \" # include \" EntitySystem / MovieSceneSharedPlaybackState . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / StrongObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" MovieSceneFwd . h \" # include \" MovieSceneSequenceID . h \" # include \" Evaluation / MovieSceneRootOverridePath . h \" # include \" Compilation / MovieSceneCompiledDataID . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" MovieSceneEvaluationTemplateInstance . generated . h \" struct FMovieSceneContext ; struct FMovieSceneSubSequenceData ; struct FMovieSceneBlendingAccumulator ; class IMovieScenePlayer ; class UMovieSceneSequence ; class FMovieSceneEntitySystemRunner ; class UMovieSceneEntitySystemLinker ; class UMovieSceneCompiledDataManager ; namespace UE { namespace MovieScene { struct FSequenceInstance ; } })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API FMovieSceneRootEvaluationTemplateInstance()"
  },
  {
    "label": "FMovieSceneRootEvaluationTemplateInstance()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMovieSceneRootEvaluationTemplateInstance()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UMovieSceneSequence& RootSequence, IMovieScenePlayer& Player, UMovieSceneCompiledDataManager* InCompiledDataManager)"
  },
  {
    "label": "EvaluateSynchronousBlocking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateSynchronousBlocking(FMovieSceneContext Context)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetSharedPlaybackState()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<UE::MovieScene::FSharedPlaybackState>)",
    "insertText": "GetSharedPlaybackState()"
  },
  {
    "label": "GetRootInstanceHandle()",
    "kind": "Method",
    "detail": "Function (UE::MovieScene::FRootInstanceHandle)",
    "insertText": "GetRootInstanceHandle()"
  },
  {
    "label": "GetRootSequence()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSequence*)",
    "insertText": "GetRootSequence()"
  },
  {
    "label": "GetCompiledDataID()",
    "kind": "Method",
    "detail": "Function (FMovieSceneCompiledDataID)",
    "insertText": "GetCompiledDataID()"
  },
  {
    "label": "GetCompiledDataManager()",
    "kind": "Method",
    "detail": "Function (UMovieSceneCompiledDataManager*)",
    "insertText": "GetCompiledDataManager()"
  },
  {
    "label": "GetRunner()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneEntitySystemRunner>)",
    "insertText": "GetRunner()"
  },
  {
    "label": "HasEverUpdated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasEverUpdated()"
  },
  {
    "label": "GetEntitySystemLinker()",
    "kind": "Method",
    "detail": "Function (UMovieSceneEntitySystemLinker*)",
    "insertText": "GetEntitySystemLinker()"
  },
  {
    "label": "GetHierarchy()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneSequenceHierarchy*)",
    "insertText": "GetHierarchy()"
  },
  {
    "label": "GetSequenceParentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSequenceParentage(const UE::MovieScene::FInstanceHandle InstanceHandle, TArray<UE::MovieScene::FInstanceHandle>& OutParentHandles)"
  },
  {
    "label": "GetRootInstance()",
    "kind": "Method",
    "detail": "Function (const UE::MovieScene::FSequenceInstance*)",
    "insertText": "GetRootInstance()"
  },
  {
    "label": "FindInstance()",
    "kind": "Method",
    "detail": "Function (UE::MovieScene::FSequenceInstance*)",
    "insertText": "FindInstance(FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "FindEntityFromOwner()",
    "kind": "Method",
    "detail": "Function (UE::MovieScene::FMovieSceneEntityID)",
    "insertText": "FindEntityFromOwner(UObject* Owner, uint32 EntityID, FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "FindEntitiesFromOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindEntitiesFromOwner(UObject* Owner, FMovieSceneSequenceID SequenceID, TArray<UE::MovieScene::FMovieSceneEntityID>& OutEntityIDs)"
  },
  {
    "label": "GetSequence()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSequence*)",
    "insertText": "GetSequence(FMovieSceneSequenceIDRef SequenceID)"
  },
  {
    "label": "PlaybackContextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlaybackContextChanged(IMovieScenePlayer& Player)"
  },
  {
    "label": "FindSubData()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneSubSequenceData*)",
    "insertText": "FindSubData(FMovieSceneSequenceIDRef SequenceID)"
  },
  {
    "label": "CopyActuators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyActuators(FMovieSceneBlendingAccumulator& Accumulator)"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "EnableGlobalPreAnimatedStateCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableGlobalPreAnimatedStateCapture()"
  },
  {
    "label": "SetEmulatedNetworkMask()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetEmulatedNetworkMask(EMovieSceneServerClientMask InNewMask)"
  },
  {
    "label": "GetEmulatedNetworkMask()",
    "kind": "Method",
    "detail": "Function (EMovieSceneServerClientMask)",
    "insertText": "GetEmulatedNetworkMask()"
  },
  {
    "label": "ConstructEntityLinker()",
    "kind": "Method",
    "detail": "Function (# endif private : UMovieSceneEntitySystemLinker*)",
    "insertText": "ConstructEntityLinker(IMovieScenePlayer& Player)"
  }
]