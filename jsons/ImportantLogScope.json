[
  {
    "label": "FImportantLogScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImportantLogScope"
  },
  {
    "label": "FFieldSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFieldSet"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Trace / Config . h \" namespace UE { namespace Trace { namespace Private { # if TRACE_PRIVATE_MINIMAL_ENABLED&& TRACE_PRIVATE_ALLOW_IMPORTANTS class FImportantLogScope { public : template<EventType> FImportantLogScope)",
    "insertText": "Enter()"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (template<EventType> FImportantLogScope)",
    "insertText": "Enter(uint32 ArrayDataSize)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FImportantLogScope&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const FImportantLogScope&)",
    "insertText": "operator(bool)"
  }
]