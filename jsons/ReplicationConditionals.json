[
  {
    "label": "ELifetimeCondition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELifetimeCondition"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FReplicationProtocol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationProtocol"
  },
  {
    "label": "FDeltaCompressionBaselineInvalidationTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeltaCompressionBaselineInvalidationTracker"
  },
  {
    "label": "FNetRefHandleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRefHandleManager"
  },
  {
    "label": "FReplicationConnections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationConnections"
  },
  {
    "label": "FNetObjectGroups",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectGroups"
  },
  {
    "label": "FReplicationFiltering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationFiltering"
  },
  {
    "label": "FReplicationConditionalsInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationConditionalsInitParams"
  },
  {
    "label": "FReplicationConditionals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationConditionals"
  },
  {
    "label": "FConditionalsMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConditionalsMask"
  },
  {
    "label": "FPerObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerObjectInfo"
  },
  {
    "label": "FPerConnectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerConnectionInfo"
  },
  {
    "label": "FSubObjectConditionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubObjectConditionInfo"
  },
  {
    "label": "FObjectDynamicConditions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectDynamicConditions"
  },
  {
    "label": "FReplicationConditionals()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Iris / ReplicationSystem / NetObjectGroupHandle . h \" # include \" Net / Core / NetBitArray . h \" enum ELifetimeCondition : int ; namespace UE::Net { enum class EReplicationCondition : uint32 ; struct FReplicationProtocol ; namespace Private { class FDeltaCompressionBaselineInvalidationTracker ; typedef uint32 FInternalNetRefIndex ; class FNetRefHandleManager ; class FReplicationConnections ; class FNetObjectGroups ; class FReplicationFiltering ; class FNetObjectGroups ; } } namespace UE::Net::Private { struct FReplicationConditionalsInitParams { const FNetRefHandleManager* NetRefHandleManager = nullptr ; const FReplicationFiltering* ReplicationFiltering = nullptr ; FReplicationConnections* ReplicationConnections = nullptr ; const FNetObjectGroups* NetObjectGroups = nullptr ; FDeltaCompressionBaselineInvalidationTracker* BaselineInvalidationTracker = nullptr ; FInternalNetRefIndex MaxInternalNetRefIndex = 0 ; uint32 MaxConnectionCount = 0 ; } ; class FReplicationConditionals { public :)",
    "insertText": "FReplicationConditionals()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FReplicationConditionalsInitParams& Params)"
  },
  {
    "label": "OnMaxInternalNetRefIndexIncreased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxInternalNetRefIndexIncreased(FInternalNetRefIndex NewMaxInternalIndex)"
  },
  {
    "label": "AddConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConnection(uint32 ConnectionId)"
  },
  {
    "label": "RemoveConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConnection(uint32 ConnectionId)"
  },
  {
    "label": "SetConditionConnectionFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetConditionConnectionFilter(FInternalNetRefIndex ObjectIndex, EReplicationCondition Condition, uint32 ConnectionId, bool bEnable)"
  },
  {
    "label": "SetCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCondition(FInternalNetRefIndex ObjectIndex, EReplicationCondition Condition, bool bEnable)"
  },
  {
    "label": "SetOwningConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwningConnection(FInternalNetRefIndex ObjectIndex, uint32 ConnectionId)"
  },
  {
    "label": "InitPropertyCustomConditions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPropertyCustomConditions(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "SetPropertyCustomCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPropertyCustomCondition(FInternalNetRefIndex ObjectIndex, const void* Owner, uint16 RepIndex, bool bIsActive)"
  },
  {
    "label": "SetPropertyDynamicCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPropertyDynamicCondition(FInternalNetRefIndex ObjectIndex, const void* Owner, uint16 RepIndex, ELifetimeCondition Condition)"
  },
  {
    "label": "MarkLifeTimeConditionalsDirtyForObjectsInGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkLifeTimeConditionalsDirtyForObjectsInGroup(FNetObjectGroupHandle GroupHandle)"
  },
  {
    "label": "MarkPropertyDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPropertyDirty(FInternalNetRefIndex ObjectIndex, uint16 RepIndex)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "IsUninitialized()",
    "kind": "Method",
    "detail": "Function (struct FConditionalsMask { bool)",
    "insertText": "IsUninitialized()"
  },
  {
    "label": "SetConditionEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetConditionEnabled(int Condition, bool bEnabled)"
  },
  {
    "label": "ApplyConditionalsToChangeMask()",
    "kind": "Method",
    "detail": "Function (} uint16 ConditionalsMask ; } ; bool)",
    "insertText": "ApplyConditionalsToChangeMask(uint32 ReplicatingConnectionId, bool bIsInitialState, FInternalNetRefIndex ParentObjectIndex, FInternalNetRefIndex ObjectIndex, uint32* ChangeMaskData, const uint32* ConditionalChangeMaskData, const FReplicationProtocol* Protocol)"
  },
  {
    "label": "GetSubObjectsToReplicate()",
    "kind": "Method",
    "detail": "Function (using FSubObjectsToReplicateArray = TArray<FInternalNetRefIndex,TInlineAllocator<3 2>> ; void)",
    "insertText": "GetSubObjectsToReplicate(uint32 ReplicationConnectionId, FInternalNetRefIndex ParentObjectIndex, FSubObjectsToReplicateArray& OutSubObjectsToReplicate)"
  },
  {
    "label": "UpdateObjectsInScope()",
    "kind": "Method",
    "detail": "Function (private : struct FPerObjectInfo { uint16 AutonomousConnectionId : 1 5 ; uint16 bRepPhysics : 1 ; } ; struct FPerConnectionInfo { TArray<FConditionalsMask> ObjectConditionals ; } ; struct FSubObjectConditionInfo { int8 Condition ; } ; struct FObjectDynamicConditions { TMap<uint16,int16> DynamicConditions ; } ; private : void)",
    "insertText": "UpdateObjectsInScope()"
  },
  {
    "label": "UpdateAndResetObjectsWithDirtyConditionals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAndResetObjectsWithDirtyConditionals()"
  },
  {
    "label": "GetLifetimeConditionals()",
    "kind": "Method",
    "detail": "Function (FConditionalsMask)",
    "insertText": "GetLifetimeConditionals(uint32 ReplicatingConnectionId, FInternalNetRefIndex ParentObjectIndex, bool bInitialState)"
  },
  {
    "label": "GetPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (FPerObjectInfo*)",
    "insertText": "GetPerObjectInfo(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "ClearPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPerObjectInfo(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "ClearConnectionInfosForObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearConnectionInfosForObject(const FNetBitArray& ValidConnections, uint32 MaxConnectionId, FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "GetChildSubObjectsToReplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildSubObjectsToReplicate(uint32 ReplicatingConnectionId, const FConditionalsMask& LifetimeConditionals, const FInternalNetRefIndex ParentObjectIndex, FSubObjectsToReplicateArray& OutSubObjectsToReplicate)"
  },
  {
    "label": "GetDynamicCondition()",
    "kind": "Method",
    "detail": "Function (ELifetimeCondition)",
    "insertText": "GetDynamicCondition(FInternalNetRefIndex ObjectIndex, uint16 RepIndex)"
  },
  {
    "label": "SetDynamicCondition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicCondition(FInternalNetRefIndex ObjectIndex, uint16 RepIndex, ELifetimeCondition Condition)"
  },
  {
    "label": "DynamicConditionChangeRequiresBaselineInvalidation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DynamicConditionChangeRequiresBaselineInvalidation(ELifetimeCondition OldCondition, ELifetimeCondition NewCondition)"
  },
  {
    "label": "MarkRemoteRoleDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRemoteRoleDirty(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "GetRemoteRoleRepIndex()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetRemoteRoleRepIndex(const FReplicationProtocol* Protocol)"
  },
  {
    "label": "InvalidateBaselinesForObjectHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateBaselinesForObjectHierarchy(uint32 ObjectIndex, const TConstArrayView<uint32>& ConnectionsToInvalidate)"
  }
]