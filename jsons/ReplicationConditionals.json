[
  {
    "label": "ELifetimeCondition",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELifetimeCondition"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FReplicationProtocol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationProtocol"
  },
  {
    "label": "FDeltaCompressionBaselineInvalidationTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeltaCompressionBaselineInvalidationTracker"
  },
  {
    "label": "FNetRefHandleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRefHandleManager"
  },
  {
    "label": "FReplicationConnections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationConnections"
  },
  {
    "label": "FNetObjectGroups",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectGroups"
  },
  {
    "label": "FReplicationFiltering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationFiltering"
  },
  {
    "label": "FNetObjectGroups",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectGroups"
  },
  {
    "label": "FReplicationConditionalsInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationConditionalsInitParams"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FReplicationConditionals",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationConditionals"
  },
  {
    "label": "FConditionalsMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConditionalsMask"
  },
  {
    "label": "FPerObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerObjectInfo"
  },
  {
    "label": "FPerConnectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerConnectionInfo"
  },
  {
    "label": "FSubObjectConditionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubObjectConditionInfo"
  },
  {
    "label": "FObjectDynamicConditions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectDynamicConditions"
  },
  {
    "label": "FReplicationConditionals()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FReplicationConditionals()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FReplicationConditionalsInitParams& Params)"
  },
  {
    "label": "OnMaxInternalNetRefIndexIncreased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxInternalNetRefIndexIncreased(FInternalNetRefIndex NewMaxInternalIndex)"
  },
  {
    "label": "AddConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConnection(uint32 ConnectionId)"
  },
  {
    "label": "RemoveConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConnection(uint32 ConnectionId)"
  },
  {
    "label": "SetConditionConnectionFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetConditionConnectionFilter(FInternalNetRefIndex ObjectIndex, EReplicationCondition Condition, uint32 ConnectionId, bool bEnable)"
  },
  {
    "label": "SetCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCondition(FInternalNetRefIndex ObjectIndex, EReplicationCondition Condition, bool bEnable)"
  },
  {
    "label": "SetOwningConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwningConnection(FInternalNetRefIndex ObjectIndex, uint32 ConnectionId)"
  },
  {
    "label": "InitPropertyCustomConditions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPropertyCustomConditions(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "SetPropertyCustomCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPropertyCustomCondition(FInternalNetRefIndex ObjectIndex, const void* Owner, uint16 RepIndex, bool bIsActive)"
  },
  {
    "label": "SetPropertyDynamicCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPropertyDynamicCondition(FInternalNetRefIndex ObjectIndex, const void* Owner, uint16 RepIndex, ELifetimeCondition Condition)"
  },
  {
    "label": "MarkLifeTimeConditionalsDirtyForObjectsInGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkLifeTimeConditionalsDirtyForObjectsInGroup(FNetObjectGroupHandle GroupHandle)"
  },
  {
    "label": "MarkPropertyDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPropertyDirty(FInternalNetRefIndex ObjectIndex, uint16 RepIndex)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "ApplyConditionalsToChangeMask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyConditionalsToChangeMask(uint32 ReplicatingConnectionId, bool bIsInitialState, FInternalNetRefIndex ParentObjectIndex, FInternalNetRefIndex ObjectIndex, uint32* ChangeMaskData, const uint32* ConditionalChangeMaskData, const FReplicationProtocol* Protocol)"
  },
  {
    "label": "GetSubObjectsToReplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSubObjectsToReplicate(uint32 ReplicationConnectionId, FInternalNetRefIndex ParentObjectIndex, FSubObjectsToReplicateArray& OutSubObjectsToReplicate)"
  },
  {
    "label": "UpdateObjectsInScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateObjectsInScope()"
  },
  {
    "label": "UpdateAndResetObjectsWithDirtyConditionals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAndResetObjectsWithDirtyConditionals()"
  },
  {
    "label": "ClearPerObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPerObjectInfo(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "ClearConnectionInfosForObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearConnectionInfosForObject(const FNetBitArray& ValidConnections, uint32 MaxConnectionId, FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "GetChildSubObjectsToReplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChildSubObjectsToReplicate(uint32 ReplicatingConnectionId, const FConditionalsMask& LifetimeConditionals, const FInternalNetRefIndex ParentObjectIndex, FSubObjectsToReplicateArray& OutSubObjectsToReplicate)"
  },
  {
    "label": "SetDynamicCondition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicCondition(FInternalNetRefIndex ObjectIndex, uint16 RepIndex, ELifetimeCondition Condition)"
  },
  {
    "label": "MarkRemoteRoleDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRemoteRoleDirty(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "GetRemoteRoleRepIndex()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetRemoteRoleRepIndex(const FReplicationProtocol* Protocol)"
  },
  {
    "label": "InvalidateBaselinesForObjectHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateBaselinesForObjectHierarchy(uint32 ObjectIndex, const TConstArrayView<uint32>& ConnectionsToInvalidate)"
  }
]