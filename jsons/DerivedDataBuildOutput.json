[
  {
    "label": "FCbField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbField"
  },
  {
    "label": "FCbObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbObject"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FBuildOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildOutput"
  },
  {
    "label": "FBuildOutputBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildOutputBuilder"
  },
  {
    "label": "FCacheRecord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheRecord"
  },
  {
    "label": "FCacheRecordBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheRecordBuilder"
  },
  {
    "label": "FOptionalBuildOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalBuildOutput"
  },
  {
    "label": "FValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FValue"
  },
  {
    "label": "FValueWithId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FValueWithId"
  },
  {
    "label": "FBuildOutputLog",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildOutputLog"
  },
  {
    "label": "FBuildOutputMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildOutputMessage"
  },
  {
    "label": "FValueId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FValueId"
  },
  {
    "label": "IBuildOutputInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildOutputInternal"
  },
  {
    "label": "IBuildOutputBuilderInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildOutputBuilderInternal"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IBuildOutputInternal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" CoreTypes . h \" # include \" Misc / ScopeExit . h \" # include \" Templates / RefCounting . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" # define class FCbField ; class FCbObject ; class FCbWriter ; namespace UE::DerivedData { class FBuildOutput ; } namespace UE::DerivedData { class FBuildOutputBuilder ; } namespace UE::DerivedData { class FCacheRecord ; } namespace UE::DerivedData { class FCacheRecordBuilder ; } namespace UE::DerivedData { class FOptionalBuildOutput ; } namespace UE::DerivedData { class FValue ; } namespace UE::DerivedData { class FValueWithId ; } namespace UE::DerivedData { struct FBuildOutputLog ; } namespace UE::DerivedData { struct FBuildOutputMessage ; } namespace UE::DerivedData { struct FValueId ; } namespace UE::DerivedData::Private { class IBuildOutputInternal { public : ~)",
    "insertText": "IBuildOutputInternal()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FSharedString&)",
    "insertText": "GetName()"
  },
  {
    "label": "GetFunction()",
    "kind": "Method",
    "detail": "Function (const FUtf8SharedString&)",
    "insertText": "GetFunction()"
  },
  {
    "label": "GetMeta()",
    "kind": "Method",
    "detail": "Function (const FCbObject&)",
    "insertText": "GetMeta()"
  },
  {
    "label": "FindMeta()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindMeta(FUtf8StringView Key, FCbField& OutMeta)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (const FValueWithId&)",
    "insertText": "GetValue(const FValueId& Id)"
  },
  {
    "label": "GetValues()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FValueWithId>)",
    "insertText": "GetValues()"
  },
  {
    "label": "GetMessages()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FBuildOutputMessage>)",
    "insertText": "GetMessages()"
  },
  {
    "label": "GetLogs()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FBuildOutputLog>)",
    "insertText": "GetLogs()"
  },
  {
    "label": "HasLogs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLogs()"
  },
  {
    "label": "HasError()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasError()"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Save(FCbWriter& Writer)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Save(FCacheRecordBuilder& RecordBuilder)"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRef()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "CreateBuildOutput()",
    "kind": "Method",
    "detail": "Function (} ; FBuildOutput)",
    "insertText": "CreateBuildOutput(IBuildOutputInternal* Output)"
  },
  {
    "label": "IBuildOutputBuilderInternal()",
    "kind": "Method",
    "detail": "Function (class IBuildOutputBuilderInternal { public : ~)",
    "insertText": "IBuildOutputBuilderInternal()"
  },
  {
    "label": "AddMeta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeta(FUtf8StringView Key, const FCbField& Meta)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(const FValueId& Id, const FValue& Value)"
  },
  {
    "label": "AddMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMessage(const FBuildOutputMessage& Message)"
  },
  {
    "label": "AddLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLog(const FBuildOutputLog& Log)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (FBuildOutput)",
    "insertText": "Build()"
  },
  {
    "label": "CreateBuildOutputBuilder()",
    "kind": "Method",
    "detail": "Function (} ; FBuildOutputBuilder)",
    "insertText": "CreateBuildOutputBuilder(IBuildOutputBuilderInternal* OutputBuilder)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} namespace UE::DerivedData { enum class EBuildOutputMessageLevel : uint8 { Error,Warning,Display,} ; FUtf8StringBuilderBase&)",
    "insertText": "operator(FUtf8StringBuilderBase& Builder, EBuildOutputMessageLevel Level)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FBuildOutputMessage { FUtf8StringView Message ; EBuildOutputMessageLevel Level ; } ; enum class EBuildOutputLogLevel : uint8 { Error,Warning,} ; FUtf8StringBuilderBase&)",
    "insertText": "operator(FUtf8StringBuilderBase& Builder, EBuildOutputLogLevel Level)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (Output ->)",
    "insertText": "Save(Writer)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (Output ->)",
    "insertText": "Save(RecordBuilder)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (} FOptionalBuildOutput)",
    "insertText": "Load(const FSharedString& Name, const FUtf8SharedString& Function, const FCbObject& Output)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (FOptionalBuildOutput)",
    "insertText": "Load(const FSharedString& Name, const FUtf8SharedString& Function, const FCacheRecord& Output)"
  },
  {
    "label": "CreateBuildOutput()",
    "kind": "Method",
    "detail": "Function (private : class FOptionalBuildOutput ; FBuildOutput)",
    "insertText": "CreateBuildOutput(Private::IBuildOutputInternal* Output)"
  },
  {
    "label": "FBuildOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBuildOutput(Private::IBuildOutputInternal* InOutput) : Output(InOutput)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (OutputBuilder ->)",
    "insertText": "AddValue(Id, Value)"
  },
  {
    "label": "AddMessage()",
    "kind": "Method",
    "detail": "Function (OutputBuilder ->)",
    "insertText": "AddMessage(Message)"
  },
  {
    "label": "AddLog()",
    "kind": "Method",
    "detail": "Function (OutputBuilder ->)",
    "insertText": "AddLog(Log)"
  },
  {
    "label": "CreateBuildOutputBuilder()",
    "kind": "Method",
    "detail": "Function (} private : FBuildOutputBuilder)",
    "insertText": "CreateBuildOutputBuilder(Private::IBuildOutputBuilderInternal* OutputBuilder)"
  },
  {
    "label": "FBuildOutputBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBuildOutputBuilder(Private::IBuildOutputBuilderInternal* InOutputBuilder) : OutputBuilder(InOutputBuilder)"
  },
  {
    "label": "FOptionalBuildOutput()",
    "kind": "Method",
    "detail": "Function (} TUniquePtr<Private::IBuildOutputBuilderInternal> OutputBuilder ; } ; class FOptionalBuildOutput : private FBuildOutput { public :)",
    "insertText": "FOptionalBuildOutput() : FBuildOutput(nullptr)"
  },
  {
    "label": "FOptionalBuildOutput()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOptionalBuildOutput(FBuildOutput&& InOutput) : FBuildOutput(MoveTemp(InOutput))"
  },
  {
    "label": "FOptionalBuildOutput()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOptionalBuildOutput(const FBuildOutput& InOutput) : FBuildOutput(InOutput)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FOptionalBuildOutput&)",
    "insertText": "operator(FBuildOutput&& InOutput)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(MoveTemp(InOutput))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(InOutput)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "FOptionalBuildOutput()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "FOptionalBuildOutput()"
  }
]