[
  {
    "label": "FOpaqueHitProxyContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOpaqueHitProxyContainer"
  },
  {
    "label": "FStaticMeshInstanceBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshInstanceBuffer"
  },
  {
    "label": "FStaticMeshInstanceData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshInstanceData"
  },
  {
    "label": "FISMInstanceUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FISMInstanceUpdateChangeSet"
  },
  {
    "label": "HHitProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HHitProxy"
  },
  {
    "label": "FISMPrecomputedSpatialHashData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FISMPrecomputedSpatialHashData"
  },
  {
    "label": "FISMCInstanceDataSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FISMCInstanceDataSceneProxy"
  },
  {
    "label": "FPrimitiveInstanceDataManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveInstanceDataManager"
  },
  {
    "label": "FISMCInstanceDataSceneProxyLegacyReordered",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FISMCInstanceDataSceneProxyLegacyReordered"
  },
  {
    "label": "FISMCInstanceDataSceneProxyNoGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FISMCInstanceDataSceneProxyNoGPUScene"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" InstanceDataSceneProxy . h \" # include \" Containers / StridedView . h \" # include \" RHIShaderPlatform . h \" # include \" RHIFeatureLevel . h \" class FOpaqueHitProxyContainer ; class FStaticMeshInstanceBuffer ; class FStaticMeshInstanceData ; class FISMInstanceUpdateChangeSet ; class HHitProxy ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogInstanceProxy, Log, All)"
  },
  {
    "label": "FISMCInstanceDataSceneProxy()",
    "kind": "Method",
    "detail": "Function (TArray<FInstanceSceneDataBuffers::FCompressedSpatialHashItem> Hashes ; TArray<int32> ProxyIndexToComponentIndexRemap ; } ; class FISMCInstanceDataSceneProxy : public FInstanceDataSceneProxy { public :)",
    "insertText": "FISMCInstanceDataSceneProxy(FStaticShaderPlatform InShaderPlatform, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (const FInstanceSceneDataBuffers&)",
    "insertText": "GetData()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(FISMInstanceUpdateChangeSet&& ChangeSet)"
  },
  {
    "label": "BuildFromLegacyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFromLegacyData(TUniquePtr<FStaticMeshInstanceData> &&ExternalLegacyData, const FRenderBounds &InstanceLocalBounds, TArray<int32> &&InLegacyInstanceReorderTable)"
  },
  {
    "label": "UpdatePrimitiveTransform()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "UpdatePrimitiveTransform(FISMInstanceUpdateChangeSet&& ChangeSet)"
  },
  {
    "label": "CheckPlatformFeatureLevel()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CheckPlatformFeatureLevel(FStaticShaderPlatform InShaderPlatform, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetLocalBoundsPadExtent()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "GetLocalBoundsPadExtent(const FRenderTransform& LocalToWorld, float PadAmount)"
  },
  {
    "label": "BuildFromOptimizedDataBuffers()",
    "kind": "Method",
    "detail": "Function (using FISMPrecomputedSpatialHashDataPtr = TSharedPtr<const FISMPrecomputedSpatialHashData,ESPMode::ThreadSafe> ; protected : void)",
    "insertText": "BuildFromOptimizedDataBuffers(FISMInstanceUpdateChangeSet& ChangeSet, FInstanceIdIndexMap &OutInstanceIdIndexMap, FInstanceSceneDataBuffers::FWriteView &OutData)"
  },
  {
    "label": "UpdateIdMapping()",
    "kind": "Method",
    "detail": "Function (template<IndexRemapType> void)",
    "insertText": "UpdateIdMapping(FISMInstanceUpdateChangeSet& ChangeSet, const IndexRemapType &IndexRemap)"
  },
  {
    "label": "ApplyDataChanges()",
    "kind": "Method",
    "detail": "Function (template<IndexRemapType> void)",
    "insertText": "ApplyDataChanges(FISMInstanceUpdateChangeSet &ChangeSet, const IndexRemapType &IndexRemap, int32 PostUpdateNumInstances, FInstanceSceneDataBuffers::FWriteView &ProxyData)"
  },
  {
    "label": "ApplyAttributeChanges()",
    "kind": "Method",
    "detail": "Function (template<IndexRemapType> void)",
    "insertText": "ApplyAttributeChanges(FISMInstanceUpdateChangeSet &ChangeSet, const IndexRemapType &IndexRemap, FInstanceSceneDataBuffers::FWriteView &ProxyData)"
  },
  {
    "label": "TestAndApplyInstanceBufferSizeFixup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestAndApplyInstanceBufferSizeFixup(int32 PostUpdateNumInstances)"
  },
  {
    "label": "FISMCInstanceDataSceneProxyLegacyReordered()",
    "kind": "Method",
    "detail": "Function (FStaticShaderPlatform ShaderPlatform ; ERHIFeatureLevel::Type FeatureLevel ; bool bUseLegacyRenderingPath = false ; TBitArray<> ValidInstanceIdMask ; FInstanceIdIndexMap InstanceIdIndexMap ; FInstanceDataUpdateTaskInfo InstanceDataUpdateTaskInfo ; bool bIsNew = true ; bool bBuildOptimized = false ; # if WITH_EDITOR TPimplPtr<FOpaqueHitProxyContainer> HitProxyContainer ; # endif class FPrimitiveInstanceDataManager ; FISMPrecomputedSpatialHashDataPtr PrecomputedOptimizationData ; } ; class FISMCInstanceDataSceneProxyLegacyReordered : public FISMCInstanceDataSceneProxy { public :)",
    "insertText": "FISMCInstanceDataSceneProxyLegacyReordered(FStaticShaderPlatform InShaderPlatform, ERHIFeatureLevel::Type InFeatureLevel, bool bInLegacyReordered)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(FISMInstanceUpdateChangeSet&& ChangeSet)"
  },
  {
    "label": "BuildFromLegacyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFromLegacyData(TUniquePtr<FStaticMeshInstanceData> &&InExternalLegacyData, const FRenderBounds &InstanceLocalBounds, TArray<int32> &&InLegacyInstanceReorderTable)"
  },
  {
    "label": "UpdateInstancesTransforms()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateInstancesTransforms(FInstanceSceneDataBuffers::FWriteView &ProxyData, const FStaticMeshInstanceData &LegacyInstanceData)"
  },
  {
    "label": "FISMCInstanceDataSceneProxyNoGPUScene()",
    "kind": "Method",
    "detail": "Function (TArray<int32> LegacyInstanceReorderTable ; bool bLegacyReordered = false ; TUniquePtr<FStaticMeshInstanceData> ExternalLegacyData ; } ; class FISMCInstanceDataSceneProxyNoGPUScene : public FISMCInstanceDataSceneProxyLegacyReordered { public :)",
    "insertText": "FISMCInstanceDataSceneProxyNoGPUScene(FStaticShaderPlatform InShaderPlatform, ERHIFeatureLevel::Type InFeatureLevel, bool bInLegacyReordered)"
  },
  {
    "label": "FISMCInstanceDataSceneProxyNoGPUScene()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FISMCInstanceDataSceneProxyNoGPUScene()"
  },
  {
    "label": "ReleaseStaticMeshInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseStaticMeshInstanceBuffer()"
  },
  {
    "label": "ApplyDataChanges()",
    "kind": "Method",
    "detail": "Function (template<IndexRemapType> void)",
    "insertText": "ApplyDataChanges(FISMInstanceUpdateChangeSet &ChangeSet, const IndexRemapType &IndexRemap, int32 PostUpdateNumInstances, FInstanceSceneDataBuffers::FWriteView &ProxyData, FStaticMeshInstanceData &LegacyInstanceData)"
  },
  {
    "label": "GetLegacyInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (FStaticMeshInstanceBuffer*)",
    "insertText": "GetLegacyInstanceBuffer()"
  }
]