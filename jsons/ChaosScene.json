[
  {
    "label": "AdvanceOneTimeStepTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AdvanceOneTimeStepTask"
  },
  {
    "label": "FChaosSolversModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosSolversModule"
  },
  {
    "label": "FForceFieldProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForceFieldProxy"
  },
  {
    "label": "FSolverStateStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSolverStateStorage"
  },
  {
    "label": "FSkeletalMeshPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshPhysicsProxy"
  },
  {
    "label": "FStaticMeshPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshPhysicsProxy"
  },
  {
    "label": "FPerSolverFieldSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerSolverFieldSystem"
  },
  {
    "label": "IPhysicsProxyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPhysicsProxyBase"
  },
  {
    "label": "FPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsProxy"
  },
  {
    "label": "FCollisionEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionEventData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TRawEventHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRawEventHandler"
  },
  {
    "label": "FAccelerationStructureHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAccelerationStructureHandle"
  },
  {
    "label": "ISpatialAcceleration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpatialAcceleration"
  },
  {
    "label": "ISpatialAccelerationCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISpatialAccelerationCollection"
  },
  {
    "label": "TArrayCollectionArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TArrayCollectionArray"
  },
  {
    "label": "FPBDRigidDirtyParticlesBufferAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidDirtyParticlesBufferAccessor"
  },
  {
    "label": "FChaosSceneCallbackInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosSceneCallbackInput"
  },
  {
    "label": "FChaosSceneSimCallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosSceneSimCallback"
  },
  {
    "label": "FChaosScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosScene"
  },
  {
    "label": "ChaosInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ChaosInterface"
  },
  {
    "label": "FScopedSceneLock_Chaos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedSceneLock_Chaos"
  },
  {
    "label": "FChaosScene()",
    "kind": "Method",
    "detail": "Function (PHYSICSCORE_API)",
    "insertText": "FChaosScene(\n\t\tUObject* OwnerPtr\n\t\t, Chaos::FReal InAsyncDt\n\t\t, const FName& DebugName = NAME_None\n\t)"
  },
  {
    "label": "AddActorsToScene_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorsToScene_AssumesLocked(TArray<FPhysicsActorHandle>& InHandles,const bool bImmediate=true)"
  },
  {
    "label": "RemoveActorFromAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorFromAccelerationStructure(FPhysicsActorHandle Actor)"
  },
  {
    "label": "RemoveActorFromAccelerationStructureImp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorFromAccelerationStructureImp(Chaos::FGeometryParticle* Particle)"
  },
  {
    "label": "UpdateActorsInAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateActorsInAccelerationStructure(const TArrayView<FPhysicsActorHandle>& Actors)"
  },
  {
    "label": "UpdateActorInAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateActorInAccelerationStructure(const FPhysicsActorHandle& Actor)"
  },
  {
    "label": "WaitPhysScenes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitPhysScenes()"
  },
  {
    "label": "CopySolverAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySolverAccelerationStructure()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "AddPieModifiedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPieModifiedObject(UObject* InObj)"
  },
  {
    "label": "StartFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartFrame()"
  },
  {
    "label": "SetUpForFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpForFrame(const FVector* NewGrav,float InDeltaSeconds,float InMinPhysicsDeltaTime,float InMaxPhysicsDeltaTime,float InMaxSubstepDeltaTime,int32 InMaxSubsteps,bool bSubstepping)"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame()"
  },
  {
    "label": "KillSafeAsyncTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KillSafeAsyncTasks()"
  },
  {
    "label": "WaitSolverTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitSolverTasks()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "GetCompletionEvents()",
    "kind": "Method",
    "detail": "Function (FGraphEventArray)",
    "insertText": "GetCompletionEvents()"
  },
  {
    "label": "OnSyncBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSyncBodies(Chaos::FPhysicsSolverBase* Solver)"
  },
  {
    "label": "SetGravity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravity(const Chaos::FVec3& Acceleration)"
  },
  {
    "label": "SyncBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncBodies(TSolver* Solver)"
  },
  {
    "label": "SetDebugDrawScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugDrawScene(const ChaosDD::Private::FChaosDDScenePtr& CDDScene)"
  }
]