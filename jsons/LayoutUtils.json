[
  {
    "label": "AlignmentArrangeResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AlignmentArrangeResult"
  },
  {
    "label": "GetChildAlignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetChildAlignment"
  },
  {
    "label": "GetChildAlignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetChildAlignment"
  },
  {
    "label": "GetChildAlignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetChildAlignment"
  },
  {
    "label": "FStretchItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStretchItem"
  },
  {
    "label": "AsInt()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AsInt(EFlowDirection InFlowDirection, const SlotType& InSlot )"
  },
  {
    "label": "AlignmentArrangeResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AlignmentArrangeResult(MarginPre, ChildSize)"
  },
  {
    "label": "AlignmentArrangeResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AlignmentArrangeResult(AllottedSize - ChildSize - MarginPost, ChildSize)"
  },
  {
    "label": "AlignmentArrangeResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AlignmentArrangeResult(MarginPre, ChildSize)"
  },
  {
    "label": "AlignmentArrangeResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AlignmentArrangeResult(AllottedSize - ChildSize - MarginPost, ChildSize)"
  },
  {
    "label": "It()",
    "kind": "Method",
    "detail": "Function (TPanelChildrenConstIterator<SlotType>)",
    "insertText": "It(Children, Orientation, InLayoutFlow)"
  },
  {
    "label": "ReturnPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "ReturnPadding(InPadding)"
  },
  {
    "label": "ComputePopupFitInRect()",
    "kind": "Method",
    "detail": "Function (UE::Slate::FDeprecateVector2DResult)",
    "insertText": "ComputePopupFitInRect(const FSlateRect& InAnchor, const FSlateRect& PopupRect, const EOrientation& Orientation, const FSlateRect& RectToFit)"
  }
]