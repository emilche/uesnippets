[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ScopedFILECloser",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScopedFILECloser"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FILES_SCOPED_FILE_H_ # define BASE_FILES_SCOPED_FILE_H_ # include<stdio . h> # include<memory> # include \" base / base_export . h \" # include \" base / scoped_generic . h \" # include \" build / build_config . h \" namespace base { namespace internal { # if)",
    "insertText": "BUILDFLAG(IS_ANDROID)"
  },
  {
    "label": "InvalidValue()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "InvalidValue()"
  },
  {
    "label": "Acquire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Acquire(const ScopedGeneric<int, ScopedFDCloseTraits>&, int)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release(const ScopedGeneric<int, ScopedFDCloseTraits>&, int)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (} ; # elif)",
    "insertText": "BUILDFLAG(IS_POSIX) || BUILDFLAG(IS_FUCHSIA) #if BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX) static void Acquire(const ScopedGeneric<int, ScopedFDCloseTraits>&, int)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif } ; # endif struct ScopedFILECloser { void)",
    "insertText": "operator()(FILE* x)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (} } ; } # if)",
    "insertText": "BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX)"
  },
  {
    "label": "EnableFDOwnershipEnforcement()",
    "kind": "Method",
    "detail": "Function (void BASE_EXPORT)",
    "insertText": "EnableFDOwnershipEnforcement(bool enabled)"
  },
  {
    "label": "ResetFDOwnership()",
    "kind": "Method",
    "detail": "Function (void BASE_EXPORT)",
    "insertText": "ResetFDOwnership()"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (} # endif # if)",
    "insertText": "BUILDFLAG(IS_POSIX) || BUILDFLAG(IS_FUCHSIA)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# endif typedef std::unique_ptr<FILE,internal::ScopedFILECloser> ScopedFILE ; # if)",
    "insertText": "BUILDFLAG(IS_CHROMEOS) || BUILDFLAG(IS_LINUX) bool BASE_EXPORT IsFDOwned(int fd)"
  }
]