[
  {
    "label": "FDelegateHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDelegateHandle"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "DETAILCUSTOMIZATIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DETAILCUSTOMIZATIONS_API"
  },
  {
    "label": "FSkeletalMeshComponentDetails()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / SkeletalMeshComponent . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" IDetailCustomization . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FDelegateHandle ; class IDetailLayoutBuilder ; class IPropertyHandle ; class SComboButton ; class SWidget ; class UClass ; class UObject ; class USkeleton ; struct FAssetData ; class FSkeletalMeshComponentDetails : public IDetailCustomization { public :)",
    "insertText": "FSkeletalMeshComponentDetails()"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "CreateAsyncSceneValueWidgetWithWarning()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateAsyncSceneValueWidgetWithWarning(const TSharedPtr<IPropertyHandle>& AsyncScenePropertyHandle)"
  },
  {
    "label": "UpdateAnimationCategory()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateAnimationCategory(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "UpdatePhysicsCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicsCategory(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "VisibilityForAnimationMode()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "VisibilityForAnimationMode(EAnimationMode::Type AnimationMode)"
  },
  {
    "label": "VisibilityForBlueprintMode()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "VisibilityForBlueprintMode()"
  },
  {
    "label": "VisibilityForSingleAnimMode()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "VisibilityForSingleAnimMode()"
  },
  {
    "label": "AnimPickerIsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AnimPickerIsEnabled()"
  },
  {
    "label": "VisibilityForAnimModeProperty()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "VisibilityForAnimModeProperty()"
  },
  {
    "label": "OnShouldFilterAnimAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnShouldFilterAnimAsset(const FAssetData& AssetData)"
  },
  {
    "label": "PerformInitialRegistrationOfSkeletalMeshes()",
    "kind": "Method",
    "detail": "Function (USkeletalMeshComponent::FOnSkeletalMeshPropertyChanged OnSkeletalMeshPropertyChanged ; void)",
    "insertText": "PerformInitialRegistrationOfSkeletalMeshes(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "RegisterSkeletalMeshPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSkeletalMeshPropertyChanged(TWeakObjectPtr<USkeletalMeshComponent> Mesh)"
  },
  {
    "label": "UnregisterSkeletalMeshPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSkeletalMeshPropertyChanged(TWeakObjectPtr<USkeletalMeshComponent> Mesh)"
  },
  {
    "label": "UnregisterAllMeshPropertyChangedCallers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAllMeshPropertyChangedCallers()"
  },
  {
    "label": "GetValidSkeletonFromRegisteredMeshes()",
    "kind": "Method",
    "detail": "Function (USkeleton*)",
    "insertText": "GetValidSkeletonFromRegisteredMeshes()"
  },
  {
    "label": "SkeletalMeshPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SkeletalMeshPropertyChanged()"
  },
  {
    "label": "GetClassPickerMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetClassPickerMenuContent()"
  },
  {
    "label": "GetSelectedAnimBlueprintName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSelectedAnimBlueprintName()"
  },
  {
    "label": "OnClassPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassPicked(UClass* PickedClass)"
  },
  {
    "label": "OnBrowseToAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowseToAnimBlueprint()"
  },
  {
    "label": "UseSelectedAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseSelectedAnimBlueprint()"
  },
  {
    "label": "UpdateSkeletonNameAndPickerVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkeletonNameAndPickerVisibility()"
  }
]