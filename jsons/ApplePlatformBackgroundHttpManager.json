[
  {
    "label": "BACKGROUNDHTTP_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BACKGROUNDHTTP_API"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BackgroundHttpManagerImpl . h \" # include \" Interfaces / IBackgroundHttpRequest . h \" # include \" IOS / ApplePlatformBackgroundHttpRequest . h \" typedef TWeakPtr<FApplePlatformBackgroundHttpRequest,ESPMode::ThreadSafe> FBackgroundHttpURLMappedRequestPtr ;)",
    "insertText": "DECLARE_DELEGATE(FIOSBackgroundHttpPostSessionWorkCallback)"
  },
  {
    "label": "FApplePlatformBackgroundHttpManager()",
    "kind": "Method",
    "detail": "Function (class FApplePlatformBackgroundHttpManager : public FBackgroundHttpManagerImpl { public :)",
    "insertText": "FApplePlatformBackgroundHttpManager()"
  },
  {
    "label": "AddRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequest(const FBackgroundHttpRequestPtr Request)"
  },
  {
    "label": "RemoveRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRequest(const FBackgroundHttpRequestPtr Request)"
  },
  {
    "label": "SetCellularPreference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCellularPreference(int32 Value)"
  },
  {
    "label": "IsGenericImplementation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGenericImplementation()"
  },
  {
    "label": "OnDownloadCompleted()",
    "kind": "Method",
    "detail": "Function (private : TArray<FBackgroundHttpRequestPtr> PendingRemoveRequests ; FRWLock PendingRemoveRequestLock ; FDelegateHandle OnDownloadCompletedHandle ; FDelegateHandle OnDownloadMetricsHandle ; void)",
    "insertText": "OnDownloadCompleted(const uint64 DownloadId, const bool bSuccess)"
  },
  {
    "label": "OnDownloadMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDownloadMetrics(const uint64 DownloadId, const int32 TotalBytesDownloaded, const float DownloadDuration)"
  }
]