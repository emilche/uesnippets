[
  {
    "label": "LoggedAlrStateEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedAlrStateEvent"
  },
  {
    "label": "RtcEventAlrState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventAlrState"
  },
  {
    "label": "LoggedAlrStateEvent()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_ALR_STATE_H_ # define LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_ALR_STATE_H_ # include<memory> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / rtc_event_log / rtc_event . h \" # include \" api / units / timestamp . h \" # include \" logging / rtc_event_log / events / rtc_event_definition . h \" # include \" logging / rtc_event_log / events / rtc_event_field_encoding . h \" # include \" logging / rtc_event_log / events / rtc_event_field_encoding_parser . h \" # include \" logging / rtc_event_log / events / rtc_event_field_extraction . h \" namespace webrtc { struct LoggedAlrStateEvent {)",
    "insertText": "LoggedAlrStateEvent()"
  },
  {
    "label": "LoggedAlrStateEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedAlrStateEvent(Timestamp timestamp, bool in_alr) : timestamp(timestamp), in_alr(in_alr)"
  },
  {
    "label": "log_time_us()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "log_time_us()"
  },
  {
    "label": "log_time_ms()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "log_time_ms()"
  },
  {
    "label": "log_time()",
    "kind": "Method",
    "detail": "Function (} Timestamp)",
    "insertText": "log_time()"
  },
  {
    "label": "RtcEventAlrState()",
    "kind": "Method",
    "detail": "Function (bool in_alr ; } ; class RtcEventAlrState final : public RtcEvent { public : Type kType = Type::AlrStateEvent ;)",
    "insertText": "RtcEventAlrState(bool in_alr)"
  },
  {
    "label": "RtcEventAlrState()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtcEventAlrState()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "GetType()"
  },
  {
    "label": "in_alr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "in_alr()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (} RtcEventLogParseStatus)",
    "insertText": "Parse(absl::string_view s, bool batched, std::vector<LoggedAlrStateEvent>& output)"
  },
  {
    "label": "RtcEventAlrState()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "RtcEventAlrState(const RtcEventAlrState& other)"
  }
]