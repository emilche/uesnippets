[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SErrorText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SErrorText"
  },
  {
    "label": "SLandscapeEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLandscapeEditor"
  },
  {
    "label": "FPropertyAndParent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAndParent"
  },
  {
    "label": "SLandscapeAssetThumbnail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLandscapeAssetThumbnail"
  },
  {
    "label": "FLandscapeToolKit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeToolKit"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarBuilder"
  },
  {
    "label": "FEdModeLandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdModeLandscape"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" LandscapeEdMode . h \" # include \" LandscapeEditorDetails . h \" # include \" Toolkits / IToolkitHost . h \" # include \" AssetThumbnail . h \" # include \" Toolkits / BaseToolkit . h \" # include \" Framework / SlateDelegates . h \" class Error ; class IDetailsView ; class SErrorText ; class SLandscapeEditor ; struct FPropertyAndParent ; class SLandscapeAssetThumbnail : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SLandscapeAssetThumbnail ) : _ThumbnailSize( 64,64)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FIntPoint, ThumbnailSize) SLATE_EVENT(FAccessAsset, OnAccessAsset) SLATE_END_ARGS() void Construct(const FArguments& InArgs, UObject* Asset, TSharedRef<FAssetThumbnailPool> ThumbnailPool)"
  },
  {
    "label": "SLandscapeAssetThumbnail()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SLandscapeAssetThumbnail()"
  },
  {
    "label": "SetAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsset(UObject* Asset)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMaterialCompilationFinished()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnMaterialCompilationFinished(UMaterialInterface* MaterialInterface)"
  },
  {
    "label": "Manage()",
    "kind": "Method",
    "detail": "Function (FAccessAsset OnAccessAsset ; TSharedPtr<FAssetThumbnail> AssetThumbnail ; } ; namespace LandscapeEditorNames { const FName)",
    "insertText": "Manage(TEXT(\"ToolMode_Manage\"))"
  },
  {
    "label": "Sculpt()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "Sculpt(TEXT(\"ToolMode_Sculpt\"))"
  },
  {
    "label": "Paint()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "Paint(TEXT(\"ToolMode_Paint\"))"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} class FLandscapeToolKit : public FModeToolkit { public : void)",
    "insertText": "Init(const TSharedPtr< class IToolkitHost >& InitToolkitHost)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetEditorMode()",
    "kind": "Method",
    "detail": "Function (FEdModeLandscape*)",
    "insertText": "GetEditorMode()"
  },
  {
    "label": "GetInlineContent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetInlineContent()"
  },
  {
    "label": "NotifyToolChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyToolChanged()"
  },
  {
    "label": "NotifyBrushChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBrushChanged()"
  },
  {
    "label": "RefreshDetailPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshDetailPanel()"
  },
  {
    "label": "GetToolPaletteNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetToolPaletteNames(TArray<FName>& InPaletteName)"
  },
  {
    "label": "GetToolPaletteDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolPaletteDisplayName(FName PaletteName)"
  },
  {
    "label": "BuildToolPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildToolPalette(FName PaletteName, class FToolBarBuilder& ToolbarBuilder)"
  },
  {
    "label": "OnToolPaletteChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolPaletteChanged(FName PaletteName)"
  },
  {
    "label": "GetActiveToolDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActiveToolDisplayName()"
  },
  {
    "label": "GetActiveToolMessage()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActiveToolMessage()"
  },
  {
    "label": "GetIsPropertyVisibleFromProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsPropertyVisibleFromProperty(const FProperty& Property)"
  },
  {
    "label": "OnChangeMode()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnChangeMode(FName ModeName)"
  },
  {
    "label": "IsModeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModeEnabled(FName ModeName)"
  },
  {
    "label": "IsModeActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModeActive(FName ModeName)"
  },
  {
    "label": "OnChangeTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeTool(FName ToolName)"
  },
  {
    "label": "IsToolEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToolEnabled(FName ToolName)"
  },
  {
    "label": "IsToolActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToolActive(FName ToolName)"
  },
  {
    "label": "IsToolAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToolAvailable(FName ToolName)"
  },
  {
    "label": "OnChangeBrushSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeBrushSet(FName BrushSetName)"
  },
  {
    "label": "IsBrushSetEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBrushSetEnabled(FName BrushSetName)"
  },
  {
    "label": "IsBrushSetActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBrushSetActive(FName BrushSetName)"
  },
  {
    "label": "OnChangeBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeBrush(FName BrushName)"
  },
  {
    "label": "IsBrushActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBrushActive(FName BrushName)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SLandscapeEditor> LandscapeEditorWidgets ; TSharedPtr<FLandscapeEditorDetails> BrushesWidgets ; const TArray<FName> PaletteNames ; } ; class SLandscapeEditor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SLandscapeEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<FLandscapeToolKit> InParentToolkit)"
  },
  {
    "label": "GetErrorText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetErrorText()"
  },
  {
    "label": "GetLandscapeEditorIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLandscapeEditorIsEnabled()"
  },
  {
    "label": "GetIsPropertyVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsPropertyVisible(const FPropertyAndParent& PropertyAndParent)"
  }
]