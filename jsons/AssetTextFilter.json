[
  {
    "label": "FAssetTextFilterContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetTextFilterContext"
  },
  {
    "label": "ICollectionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICollectionManager"
  },
  {
    "label": "FCompiledAssetTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompiledAssetTextFilter"
  },
  {
    "label": "FAssetTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetTextFilter"
  },
  {
    "label": "FPrivateToken",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrivateToken"
  },
  {
    "label": "IAssetTextFilterHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetTextFilterHandler"
  },
  {
    "label": "FAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IContentBrowserSingleton . h \" # include \" Misc / StringBuilder . h \" # include \" Misc / TextFilterExpressionEvaluator . h \" # include \" Misc / TextFilterUtils . h \" class FAssetTextFilterContext ; class ICollectionManager ; class FCompiledAssetTextFilter ; class FAssetTextFilter : public TSharedFromThis<FAssetTextFilter> { public :)",
    "insertText": "FAssetTextFilter()"
  },
  {
    "label": "FAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetTextFilter(FAssetTextFilter&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetTextFilter&)",
    "insertText": "operator(FAssetTextFilter&& Other)"
  },
  {
    "label": "FAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetTextFilter(const FAssetTextFilter& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetTextFilter&)",
    "insertText": "operator(const FAssetTextFilter& Other)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<FCompiledAssetTextFilter>)",
    "insertText": "Compile()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "SetCustomTextFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomTextFilters(TArray<FText> InQueries)"
  },
  {
    "label": "GetRawFilterText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRawFilterText()"
  },
  {
    "label": "SetRawFilterText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRawFilterText(const FText& InFilterText)"
  },
  {
    "label": "GetFilterErrorText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterErrorText()"
  },
  {
    "label": "SetIncludeClassName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludeClassName(const bool InIncludeClassName)"
  },
  {
    "label": "SetIncludeAssetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludeAssetPath(const bool InIncludeAssetPath)"
  },
  {
    "label": "GetIncludeAssetPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIncludeAssetPath()"
  },
  {
    "label": "SetIncludeCollectionNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludeCollectionNames(const bool InIncludeCollectionNames)"
  },
  {
    "label": "GetIncludeCollectionNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIncludeCollectionNames()"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "OnChanged()"
  },
  {
    "label": "HandleCollectionDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionDestroyed(const FCollectionNameType& Collection)"
  },
  {
    "label": "HandleCollectionRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionRenamed(const FCollectionNameType& OriginalCollection, const FCollectionNameType& NewCollection)"
  },
  {
    "label": "HandleCollectionUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCollectionUpdated(const FCollectionNameType& Collection)"
  },
  {
    "label": "BroadcastChangedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastChangedEvent()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ChangedEvent .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "FPrivateToken()",
    "kind": "Method",
    "detail": "Function (} TArray<FCollectionNameType> ReferencedDynamicCollections ; FTextFilterExpressionEvaluator TextFilterExpressionEvaluator ; TArray<FText> CustomTextFilters ; FDelegateHandle OnCollectionCreatedHandle ; FDelegateHandle OnCollectionDestroyedHandle ; FDelegateHandle OnCollectionRenamedHandle ; FDelegateHandle OnCollectionUpdatedHandle ; bool bIncludeClassName = false ; bool bIncludeAssetPath = false ; bool bIncludeCollectionNames = false ; bool bReferencedDynamicCollectionsDirty = true ; FSimpleMulticastDelegate ChangedEvent ; } ; class FCompiledAssetTextFilter : private ITextFilterExpressionContext,public TSharedFromThis<FCompiledAssetTextFilter> { typedef TRemoveReference<FAssetFilterType>::Type* FAssetFilterTypePtr ; class FAssetTextFilter ; struct FPrivateToken {)",
    "insertText": "FPrivateToken()"
  },
  {
    "label": "FCompiledAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (} ; public :)",
    "insertText": "FCompiledAssetTextFilter(FPrivateToken, TSharedRef<const FTextFilterExpressionEvaluator> InSharedEvaluator, TSharedPtr<const TArray<FCollectionNameType>> InReferencedDynamicCollections, bool InIncludeClassName, bool InIncludeAssetPath, bool InIncludeCollectionNames)"
  },
  {
    "label": "FCompiledAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCompiledAssetTextFilter()"
  },
  {
    "label": "FCompiledAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCompiledAssetTextFilter(FCompiledAssetTextFilter&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCompiledAssetTextFilter&)",
    "insertText": "operator(FCompiledAssetTextFilter&&)"
  },
  {
    "label": "CloneForThreading()",
    "kind": "Method",
    "detail": "Function (FCompiledAssetTextFilter)",
    "insertText": "CloneForThreading()"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesFilter(FAssetFilterType InItem)"
  },
  {
    "label": "TestBasicStringExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestBasicStringExpression(const FTextFilterString& InValue, const ETextFilterTextComparisonMode InTextComparisonMode)"
  },
  {
    "label": "TestComplexExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestComplexExpression(const FName& InKey, const FTextFilterString& InValue, const ETextFilterComparisonOperation InComparisonOperation, const ETextFilterTextComparisonMode InTextComparisonMode)"
  },
  {
    "label": "FCompiledAssetTextFilter()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FCompiledAssetTextFilter(FCompiledAssetTextFilter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCompiledAssetTextFilter&)",
    "insertText": "operator(const FCompiledAssetTextFilter&)"
  },
  {
    "label": "IAssetTextFilterHandler()",
    "kind": "Method",
    "detail": "Function (TSharedRef<const FTextFilterExpressionEvaluator> Evaluator ; TSharedPtr<const TArray<FCollectionNameType>> ReferencedDynamicCollections ; ICollectionManager* CollectionManager ; bool bIncludeClassName = false ; bool bIncludeAssetPath = false ; bool bIncludeCollectionNames = false ; FAssetFilterTypePtr AssetPtr ; FString TextBuffer ; FStringView AssetDisplayName ; FStringView AssetFullPath ; FStringView AssetExportTextPath ; TArray<FName> AssetCollectionNames ; } ; class IAssetTextFilterHandler { public : ~)",
    "insertText": "IAssetTextFilterHandler()"
  },
  {
    "label": "HandleTextFilterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTextFilterValue(const FContentBrowserItem& InContentBrowserItem, const FTextFilterString& InValue, const ETextFilterTextComparisonMode InTextComparisonMode, bool& bOutIsMatch)"
  },
  {
    "label": "HandleTextFilterKeyValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTextFilterKeyValue(const FContentBrowserItem& InContentBrowserItem, const FName& InKey, const FTextFilterString& InValue, const ETextFilterComparisonOperation InComparisonOperation, const ETextFilterTextComparisonMode InTextComparisonMode, bool& bOutIsMatch)"
  },
  {
    "label": "RegisterHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterHandler()"
  },
  {
    "label": "UnregisterHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterHandler()"
  }
]