[
  {
    "label": "FFindStronglyConnected",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFindStronglyConnected"
  },
  {
    "label": "NodeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NodeInfo"
  },
  {
    "label": "FFindStronglyConnected()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FFindStronglyConnected { struct NodeInfo { int32 IndexValue ; int32 LowIndex ; bool InStack ; } ; TMultiMap<UObject*,UObject*> AllEdges ; TMultiMap<UObject*,UObject*> Edges ; TArray<UObject*> AllObjects ; TSet<UObject*> PermanentObjects ; TArray<UObject*> TempObjects ; TMap<UObject*,NodeInfo> NodeIndex ; int32 PrimaryIndex ; TArray<UObject*> Stack ; TArray<TArray<UObject*>> Components ; TArray<TArray<UObject*>> SimpleCycles ;)",
    "insertText": "FFindStronglyConnected() : PrimaryIndex(1)"
  },
  {
    "label": "FindAllCycles()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FindAllCycles()"
  },
  {
    "label": "FindSimpleCycleForComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSimpleCycleForComponent(TArray<UObject*>& Dest, const TArray<UObject*>& Component)"
  },
  {
    "label": "StrongConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StrongConnect(UObject* Node)"
  },
  {
    "label": "FindSimpleCycleForComponentInner()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "FindSimpleCycleForComponentInner(TArray<UObject*>& Dest, const TArray<UObject*>& Component, UObject* Node)"
  },
  {
    "label": "StrongConnectInner()",
    "kind": "Method",
    "detail": "Function (NodeInfo*)",
    "insertText": "StrongConnectInner(UObject* Node)"
  }
]