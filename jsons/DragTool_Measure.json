[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FDragTool_Measure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragTool_Measure"
  },
  {
    "label": "FDragTool_Measure()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EditorDragTools . h \" class FCanvas ; class FEditorViewportClient ; class FSceneView ; class FDragTool_Measure : public FDragTool { public :)",
    "insertText": "FDragTool_Measure(FEditorViewportClient* InViewportClient)"
  },
  {
    "label": "StartDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDrag(FEditorViewportClient* InViewportClient, const FVector& InStart, const FVector2D& InStartScreen)"
  },
  {
    "label": "AddDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDelta(const FVector& InDelta)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FSceneView* View,FCanvas* Canvas)"
  },
  {
    "label": "GetSnappedPixelPos()",
    "kind": "Method",
    "detail": "Function (private : FVector2D)",
    "insertText": "GetSnappedPixelPos(FVector2D PixelPos)"
  }
]