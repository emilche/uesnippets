[
  {
    "label": "member",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "member"
  },
  {
    "label": "ForwardIt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForwardIt"
  },
  {
    "label": "ForwardIt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForwardIt"
  },
  {
    "label": "PredicateType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PredicateType"
  },
  {
    "label": "ForwardIt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForwardIt"
  },
  {
    "label": "ForwardIt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForwardIt"
  },
  {
    "label": "PredicateType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PredicateType"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "non",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "non"
  },
  {
    "label": "FNoncopyable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNoncopyable"
  },
  {
    "label": "cannot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "cannot"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "TGuardValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TGuardValue"
  },
  {
    "label": "TOptionalGuardValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOptionalGuardValue"
  },
  {
    "label": "TGuardValue_Bitfield_Cleanup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TGuardValue_Bitfield_Cleanup"
  },
  {
    "label": "TScopeCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TScopeCounter"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "TKeyValuePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TKeyValuePair"
  },
  {
    "label": "TRemovePointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRemovePointer"
  },
  {
    "label": "TRemovePointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRemovePointer"
  },
  {
    "label": "TRValueToLValueReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRValueToLValueReference"
  },
  {
    "label": "TRValueToLValueReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TRValueToLValueReference"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TForceInitAtBoot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TForceInitAtBoot"
  },
  {
    "label": "FNoopStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNoopStruct"
  },
  {
    "label": "FNoncopyable()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FNoncopyable(const FNoncopyable&)"
  },
  {
    "label": "GuardSomeBool()",
    "kind": "Method",
    "detail": "Function (TGuardValue<bool>)",
    "insertText": "GuardSomeBool(bSomeBool, false)"
  },
  {
    "label": "GuardSomeBool()",
    "kind": "Method",
    "detail": "Function (TOptionalGuardValue<bool>)",
    "insertText": "GuardSomeBool(bSomeBool, false)"
  },
  {
    "label": "BeginProcessing()",
    "kind": "Method",
    "detail": "Function (TScopeCounter<int32>)",
    "insertText": "BeginProcessing(ProcessingCount)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (mistake)",
    "insertText": "static_assert(std::is_lvalue_reference_v<T>, \"MoveTemp called on an rvalue\")"
  },
  {
    "label": "BitMask()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "BitMask( uint32 Count )"
  }
]