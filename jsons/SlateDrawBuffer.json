[
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FSlateDrawBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateDrawBuffer"
  },
  {
    "label": "FSlateDrawBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / GCObject . h \" # include \" HAL / CriticalSection . h \" # include \" Types / SlateVector2 . h \" # include \" Tasks / Task . h \" # include<atomic> class FSlateWindowElementList ; class SWindow ; class FSlateDrawBuffer : public FGCObject { public :)",
    "insertText": "FSlateDrawBuffer()"
  },
  {
    "label": "ClearBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearBuffer()"
  },
  {
    "label": "UpdateResourceVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResourceVersion(uint32 NewResourceVersion)"
  },
  {
    "label": "AddWindowElementList()",
    "kind": "Method",
    "detail": "Function (FSlateWindowElementList&)",
    "insertText": "AddWindowElementList(TSharedRef<SWindow> ForWindow)"
  },
  {
    "label": "RemoveUnusedWindowElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedWindowElement(const TArray<SWindow*>& AllWindows)"
  },
  {
    "label": "GetWindowElementLists()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<FSlateWindowElementList>>&)",
    "insertText": "GetWindowElementLists()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock(const UE::Tasks::FTask& PrerequisiteTask)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock()"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock(UE::Tasks::FTask{})"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsLocked()"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  }
]