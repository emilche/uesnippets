[
  {
    "label": "FConsoleSlateDebugger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConsoleSlateDebugger"
  },
  {
    "label": "FConsoleSlateDebugger()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Debugging / SlateDebugging . h \" # if WITH_SLATE_DEBUGGING # include \" CoreMinimal . h \" # include \" Debugging / ConsoleSlateDebuggerUtility . h \" # include \" Delegates / Delegate . h \" # include \" Input / Reply . h \" # include \" HAL / IConsoleManager . h \" class FConsoleSlateDebugger : public FSlateDebugging::IWidgetInputRoutingEvent { public :)",
    "insertText": "FConsoleSlateDebugger()"
  },
  {
    "label": "StartDebugging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDebugging()"
  },
  {
    "label": "StopDebugging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopDebugging()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "OnPreProcessInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreProcessInput(ESlateDebuggingInputEvent InputEventType, const TCHAR* InputPrecessor, bool bHandled)"
  },
  {
    "label": "OnRouteInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRouteInput(ESlateDebuggingInputEvent InputEventType, const FName& RoutedType)"
  },
  {
    "label": "OnInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputEvent(ESlateDebuggingInputEvent InputEventType, const FReply& InReply, const TSharedPtr<SWidget>& HandlerWidget)"
  },
  {
    "label": "OnInputRouted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputRouted(ESlateDebuggingInputEvent InputEventType)"
  },
  {
    "label": "OnInputProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputProcessed(ESlateDebuggingInputEvent InputEventType)"
  },
  {
    "label": "RemoveListeners()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RemoveListeners()"
  },
  {
    "label": "UpdateListeners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateListeners()"
  },
  {
    "label": "OnLogVariablesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLogVariablesChanged(IConsoleVariable*)"
  },
  {
    "label": "SetInputFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInputFilter(const TArray< FString >& Parms)"
  },
  {
    "label": "ClearInputFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInputFilters()"
  },
  {
    "label": "EnableInputFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableInputFilters()"
  },
  {
    "label": "SetFocusFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFocusFilter(const TArray< FString >& Parms)"
  },
  {
    "label": "ClearFocusFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFocusFilters()"
  },
  {
    "label": "EnableFocusFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableFocusFilters()"
  },
  {
    "label": "OnWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWarning(const FSlateDebuggingWarningEventArgs& EventArgs)"
  },
  {
    "label": "OnInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInputEvent(const FSlateDebuggingInputEventArgs& EventArgs)"
  },
  {
    "label": "OnFocusEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusEvent(const FSlateDebuggingFocusEventArgs& EventArgs)"
  },
  {
    "label": "OnAttemptNavigationEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAttemptNavigationEvent(const FSlateDebuggingNavigationEventArgs& EventArgs)"
  },
  {
    "label": "OnExecuteNavigationEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExecuteNavigationEvent(const FSlateDebuggingExecuteNavigationEventArgs& EventArgs)"
  },
  {
    "label": "OnCaptureStateChangeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCaptureStateChangeEvent(const FSlateDebuggingMouseCaptureEventArgs& EventArgs)"
  },
  {
    "label": "OnCursorChangeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCursorChangeEvent(const FSlateDebuggingCursorQueryEventArgs& EventArgs)"
  },
  {
    "label": "OptionallyDumpCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OptionallyDumpCallStack()"
  }
]