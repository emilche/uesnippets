[
  {
    "label": "UContentBundleDescriptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleDescriptor"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FContentBundleClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleClient"
  },
  {
    "label": "UContentBundleEngineSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleEngineSubsystem"
  },
  {
    "label": "FContentBundleBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleBase"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / WeakObjectPtr . h \" # include \" WorldPartition / ContentBundle / ContentBundleStatus . h \" # include \" ContentBundleClient . generated . h \" class UContentBundleDescriptor ; class UWorld ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "CreateClient()",
    "kind": "Method",
    "detail": "Function (NoContent,ContentBundleInjected } ; class FContentBundleClient { class UContentBundleEngineSubsystem ; class FContentBundleBase ; public : TSharedPtr<FContentBundleClient>)",
    "insertText": "CreateClient(const UContentBundleDescriptor* InContentBundleDescriptor, FString const& InDisplayName)"
  },
  {
    "label": "FContentBundleClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FContentBundleClient(const UContentBundleDescriptor* InContentBundleDescriptor, FString const& InDisplayName)"
  },
  {
    "label": "FContentBundleClient()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FContentBundleClient()"
  },
  {
    "label": "GetDescriptor()",
    "kind": "Method",
    "detail": "Function (const UContentBundleDescriptor*)",
    "insertText": "GetDescriptor()"
  },
  {
    "label": "RequestContentInjection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RequestContentInjection()"
  },
  {
    "label": "RequestRemoveContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRemoveContent()"
  },
  {
    "label": "RequestUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUnregister()"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (EContentBundleClientState)",
    "insertText": "GetState()"
  },
  {
    "label": "ShouldRemoveContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRemoveContent(UWorld* World)"
  },
  {
    "label": "DoOnContentRegisteredInWorld()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "DoOnContentRegisteredInWorld(UWorld* InjectedWorld)"
  },
  {
    "label": "DoOnContentInjectedInWorld()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "DoOnContentInjectedInWorld(EContentBundleStatus InjectionStatus, UWorld* InjectedWorld)"
  },
  {
    "label": "DoOnContentRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "DoOnContentRemovedFromWorld(UWorld* InjectedWorld)"
  },
  {
    "label": "DoOnClientToUnregister()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "DoOnClientToUnregister()"
  },
  {
    "label": "HasContentToRemove()",
    "kind": "Method",
    "detail": "Function (} ; private : bool)",
    "insertText": "HasContentToRemove()"
  },
  {
    "label": "OnContentRegisteredInWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentRegisteredInWorld(EContentBundleStatus ContentBundleStatus, UWorld* World)"
  },
  {
    "label": "OnContentInjectedInWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentInjectedInWorld(EContentBundleStatus InjectionStatus, UWorld* InjectedWorld)"
  },
  {
    "label": "OnContentRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentRemovedFromWorld(EContentBundleStatus RemovalStatus, UWorld* InjectedWorld)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(EContentBundleClientState State)"
  },
  {
    "label": "SetWorldContentState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldContentState(UWorld* World, EWorldContentState State)"
  },
  {
    "label": "GetWorldContentState()",
    "kind": "Method",
    "detail": "Function (EWorldContentState)",
    "insertText": "GetWorldContentState(UWorld* World)"
  }
]