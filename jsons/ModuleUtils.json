[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "GlobalVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalVariable"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "PtrType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PtrType"
  },
  {
    "label": "SmallPtrSetImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallPtrSetImpl"
  },
  {
    "label": "appendToGlobalCtors()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TRANSFORMS_UTILS_MODULEUTILS_H # define LLVM_TRANSFORMS_UTILS_MODULEUTILS_H # include \" llvm / ADT / ArrayRef . h \" # include<utility> namespace llvm { class Module ; class Function ; class GlobalValue ; class GlobalVariable ; class Constant ; class StringRef ; class Value ; class Type ; template<class PtrType> class SmallPtrSetImpl ; void)",
    "insertText": "appendToGlobalCtors(Module &M, Function *F, int Priority)"
  },
  {
    "label": "appendToGlobalDtors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "appendToGlobalDtors(Module &M, Function *F, int Priority)"
  },
  {
    "label": "collectUsedGlobalVariables()",
    "kind": "Method",
    "detail": "Function (GlobalVariable*)",
    "insertText": "collectUsedGlobalVariables(Module &M, SmallPtrSetImpl<GlobalValue *> &Set, bool CompilerUsed)"
  },
  {
    "label": "checkSanitizerInterfaceFunction()",
    "kind": "Method",
    "detail": "Function (Function*)",
    "insertText": "checkSanitizerInterfaceFunction(Constant *FuncOrBitcast)"
  },
  {
    "label": "createSanitizerCtorAndInitFunctions()",
    "kind": "Method",
    "detail": "Function (std::pair<Function*,Function*>)",
    "insertText": "createSanitizerCtorAndInitFunctions(Module &M, StringRef CtorName, StringRef InitName, ArrayRef<Type *> InitArgTypes, ArrayRef<Value *> InitArgs)"
  }
]