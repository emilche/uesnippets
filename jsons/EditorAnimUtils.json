[
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "FNameDuplicationRule",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNameDuplicationRule"
  },
  {
    "label": "FAnimationRetargetContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationRetargetContext"
  },
  {
    "label": "AssetType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssetType"
  },
  {
    "label": "AssetType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssetType"
  },
  {
    "label": "DuplicateAssetsToRetarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateAssetsToRetarget(UPackage* DestinationPackage, const FNameDuplicationRule* NameRule)"
  },
  {
    "label": "RetargetAnimations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetargetAnimations(USkeleton* OldSkeleton, USkeleton* NewSkeleton)"
  },
  {
    "label": "AddRemappedAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRemappedAsset(UAnimationAsset* OriginalAsset, UAnimationAsset* NewAsset)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TArray<TWeakObjectPtr<UObject>> AssetsToRetarget, bool bRetargetReferredAssets)"
  },
  {
    "label": "GetAllAnimationSequencesReferredInBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllAnimationSequencesReferredInBlueprint(UAnimBlueprint* AnimBlueprint, TArray<UAnimationAsset*>& AnimationAsset)"
  },
  {
    "label": "ReplaceReferredAnimationsInBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceReferredAnimationsInBlueprint(UAnimBlueprint* AnimBlueprint, const TMap<UAnimationAsset*, UAnimationAsset*>& AnimAssetReplacementMap)"
  },
  {
    "label": "CopyAnimCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyAnimCurves(USkeleton* OldSkeleton, USkeleton* NewSkeleton, UAnimSequenceBase* SequenceBase, const FName ContainerName, ERawCurveTrackTypes CurveType)"
  }
]