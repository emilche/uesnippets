[
  {
    "label": "ISnappingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISnappingPolicy"
  },
  {
    "label": "IViewportSnappingModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IViewportSnappingModule"
  },
  {
    "label": "RegisterSnappingPolicy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Templates / SharedPointer . h \" class ISnappingPolicy ; class IViewportSnappingModule : public IModuleInterface { public : void)",
    "insertText": "RegisterSnappingPolicy(TSharedPtr<ISnappingPolicy> NewPolicy)"
  },
  {
    "label": "UnregisterSnappingPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSnappingPolicy(TSharedPtr<ISnappingPolicy> PolicyToRemove)"
  },
  {
    "label": "GetMergedPolicy()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISnappingPolicy>)",
    "insertText": "GetMergedPolicy()"
  },
  {
    "label": "GetSnapManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISnappingPolicy>)",
    "insertText": "GetSnapManager()"
  },
  {
    "label": "IViewportSnappingModule()",
    "kind": "Method",
    "detail": "Function (IViewportSnappingModule& Module = FModuleManager::LoadModuleChecked<)",
    "insertText": "IViewportSnappingModule(\"ViewportSnapping\")"
  }
]