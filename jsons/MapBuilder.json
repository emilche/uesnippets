[
  {
    "label": "TMapBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMapBuilder"
  },
  {
    "label": "TMapBuilder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" template<KeyType,ValueType,SetAllocator = FDefaultSetAllocator> class TMapBuilder { public :)",
    "insertText": "TMapBuilder()"
  },
  {
    "label": "TMapBuilder()",
    "kind": "Method",
    "detail": "Function (} template<OtherAllocator>)",
    "insertText": "TMapBuilder(const TMap<KeyType, ValueType, OtherAllocator>& InMap ) : Map(InMap)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} public : TMapBuilder&)",
    "insertText": "Add(KeyType InKey, ValueType InValue)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Map .)",
    "insertText": "Add(InKey, InValue)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Map .)",
    "insertText": "Append(OtherMap)"
  }
]