[
  {
    "label": "FFrameTrackViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFrameTrackViewport"
  },
  {
    "label": "FFrameTrackViewport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Insights / ViewModels / AxisViewportInt32 . h \" # include \" Insights / ViewModels / AxisViewportDouble . h \" namespace UE::Insights::TimingProfiler { class FFrameTrackViewport { private : float SLATE_UNITS_TOLERANCE = 0 . 1 f ; public :)",
    "insertText": "FFrameTrackViewport()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetHorizontalAxisViewport()",
    "kind": "Method",
    "detail": "Function (} const FAxisViewportInt32&)",
    "insertText": "GetHorizontalAxisViewport()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetHeight()"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetSize(const float InWidth, const float InHeight)"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (const bool bWidthChanged = HorizontalAxisViewport .)",
    "insertText": "SetSize(InWidth)"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (const bool bHeightChanged = VerticalAxisViewport .)",
    "insertText": "SetSize(InHeight)"
  },
  {
    "label": "OnSizeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSizeChanged()"
  },
  {
    "label": "GetNumFramesPerSample()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumFramesPerSample()"
  },
  {
    "label": "GetFirstFrameIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetFirstFrameIndex()"
  }
]