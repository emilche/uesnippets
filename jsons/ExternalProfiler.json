[
  {
    "label": "FExternalProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalProfiler"
  },
  {
    "label": "FColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColor"
  },
  {
    "label": "FScopedExternalProfilerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedExternalProfilerBase"
  },
  {
    "label": "FActiveExternalProfilerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveExternalProfilerBase"
  },
  {
    "label": "FExternalProfilerIncluder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalProfilerIncluder"
  },
  {
    "label": "FExternalProfilerExcluder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalProfilerExcluder"
  },
  {
    "label": "FExternalProfilerTrace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalProfilerTrace"
  },
  {
    "label": "UE_EXTERNAL_PROFILING_ENABLED()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringConv . h \" # include \" CoreTypes . h \" # include \" Features / IModularFeature . h \" # include \" Misc / Build . h \" # include \" UObject / NameTypes . h \" # ifndef UE_EXTERNAL_PROFILING_ENABLED # define)",
    "insertText": "UE_EXTERNAL_PROFILING_ENABLED(!UE_BUILD_SHIPPING)"
  },
  {
    "label": "FExternalProfiler()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FExternalProfiler()"
  },
  {
    "label": "PauseProfiler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PauseProfiler()"
  },
  {
    "label": "ResumeProfiler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeProfiler()"
  },
  {
    "label": "FrameSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FrameSync()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register()"
  },
  {
    "label": "ProfilerPauseFunction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProfilerPauseFunction()"
  },
  {
    "label": "ProfilerResumeFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerResumeFunction()"
  },
  {
    "label": "GetProfilerName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetProfilerName()"
  },
  {
    "label": "GetFeatureName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFeatureName()"
  },
  {
    "label": "StartScopedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartScopedEvent(const struct FColor& Color, const TCHAR* Text)"
  },
  {
    "label": "StartScopedEvent()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "StartScopedEvent(const struct FColor& Color, const ANSICHAR* Text)"
  },
  {
    "label": "StartScopedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartScopedEvent(Color, ANSI_TO_TCHAR(Text))"
  },
  {
    "label": "EndScopedEvent()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "EndScopedEvent()"
  },
  {
    "label": "SetThreadName()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SetThreadName(const TCHAR* Name)"
  },
  {
    "label": "GetActiveProfiler()",
    "kind": "Method",
    "detail": "Function (} private : int32 TimerCount ; bool bIsPaused ; class FScopedExternalProfilerBase ; } ; class FActiveExternalProfilerBase { public : FExternalProfiler*)",
    "insertText": "GetActiveProfiler()"
  },
  {
    "label": "StartScopedTimer()",
    "kind": "Method",
    "detail": "Function (private : bool bDidInitialize ; FExternalProfiler* ActiveProfiler ; } ; class FScopedExternalProfilerBase : public FActiveExternalProfilerBase { protected : void)",
    "insertText": "StartScopedTimer(const bool bWantPause)"
  },
  {
    "label": "StopScopedTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopScopedTimer()"
  },
  {
    "label": "FExternalProfilerIncluder()",
    "kind": "Method",
    "detail": "Function (private : bool bWasPaused ; } ; class FExternalProfilerIncluder : public FScopedExternalProfilerBase { public :)",
    "insertText": "FExternalProfilerIncluder()"
  },
  {
    "label": "StartScopedTimer()",
    "kind": "Method",
    "detail": "Function (const bool bWantPause = false ;)",
    "insertText": "StartScopedTimer(bWantPause)"
  },
  {
    "label": "FExternalProfilerExcluder()",
    "kind": "Method",
    "detail": "Function (} } ; class FExternalProfilerExcluder : public FScopedExternalProfilerBase { public :)",
    "insertText": "FExternalProfilerExcluder()"
  },
  {
    "label": "StartScopedEvent()",
    "kind": "Method",
    "detail": "Function (Profiler ->)",
    "insertText": "StartScopedEvent(Color, Text)"
  },
  {
    "label": "SCOPE_PROFILER_INCLUDER()",
    "kind": "Method",
    "detail": "Function (} } } ; # define)",
    "insertText": "SCOPE_PROFILER_INCLUDER(X)"
  },
  {
    "label": "SCOPE_PROFILER_EXCLUDER()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPE_PROFILER_EXCLUDER(X)"
  }
]