[
  {
    "label": "SHAREDSETTINGSWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHAREDSETTINGSWIDGETS_API"
  },
  {
    "label": "FManifestUpdateHelper()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / FileHelper . h \" class FManifestUpdateHelper { public :)",
    "insertText": "FManifestUpdateHelper(const FString& InFilename)"
  },
  {
    "label": "ReplaceStringPortion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceStringPortion(FString& InOutString, const FString& MatchPrefix, const FString& MatchSuffix, const FString& NewInfix)"
  },
  {
    "label": "HasKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasKey(const FString& MatchPrefix)"
  },
  {
    "label": "ReplaceKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceKey(const FString& MatchPrefix, const FString& MatchSuffix, const FString& NewInfix)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Finalize(const FString& TargetFilename, bool bShowNotifyOnFailure = true, FFileHelper::EEncodingOptions EncodingOption = FFileHelper::EEncodingOptions::AutoDetect)"
  },
  {
    "label": "GetFirstErrorMessage()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFirstErrorMessage()"
  }
]