[
  {
    "label": "FMovieSceneSkeletalAnimRootMotionTrackParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSkeletalAnimRootMotionTrackParams"
  },
  {
    "label": "FAnimationPoseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationPoseData"
  },
  {
    "label": "UMirrorDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMirrorDataTable"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneSkeletalAnimationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSkeletalAnimationParams"
  },
  {
    "label": "UMovieSceneSkeletalAnimationSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSkeletalAnimationSection"
  },
  {
    "label": "FRootMotionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionParams"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FRootMotionTransformParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionTransformParam"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneSection . h \" # include \" Animation / AnimSequenceBase . h \" # include \" Channels / MovieSceneFloatChannel . h \" # include \" EntitySystem / IMovieSceneEntityProvider . h \" # include \" MovieSceneSkeletalAnimationSection . generated . h \" struct FMovieSceneSkeletalAnimRootMotionTrackParams ; struct FAnimationPoseData ; class UMirrorDataTable ; enum class ESwapRootBone : uint8 ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneSkeletalAnimationParams()"
  },
  {
    "label": "MapTimeToAnimation()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "MapTimeToAnimation(const UMovieSceneSection* InSection, FFrameTime InPosition, FFrameRate InFrameRate)"
  },
  {
    "label": "MakeTransform()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSequenceTransform)",
    "insertText": "MakeTransform(const FFrameRate& OuterFrameRate, const TRange<FFrameNumber>& OuterRange)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(BlueprintReadWrite, EditAnywhere, Category = \"Animation\", meta=(ShowOnlyInnerProperties))"
  },
  {
    "label": "MapTimeToAnimation()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "MapTimeToAnimation(FFrameTime InPosition, FFrameRate InFrameRate)"
  },
  {
    "label": "CacheChannelProxy()",
    "kind": "Method",
    "detail": "Function (EMovieSceneChannelProxyType)",
    "insertText": "CacheChannelProxy()"
  },
  {
    "label": "SetRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRange(const TRange<FFrameNumber>& NewRange)"
  },
  {
    "label": "SetStartFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartFrame(TRangeBound<FFrameNumber> NewStartFrame)"
  },
  {
    "label": "SetEndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEndFrame(TRangeBound<FFrameNumber> NewEndFrame)"
  },
  {
    "label": "GetTimeWarp()",
    "kind": "Method",
    "detail": "Function (FMovieSceneTimeWarpVariant*)",
    "insertText": "GetTimeWarp()"
  },
  {
    "label": "DeleteChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteChannels(TArrayView<const FName> ChannelNames)"
  },
  {
    "label": "GetAutoSizeRange()",
    "kind": "Method",
    "detail": "Function (struct FRootMotionParams { bool bBlendFirstChildOfRoot ; int32 ChildBoneIndex ; TOptional<FTransform> Transform ; TOptional<FTransform> PreviousTransform ; } ; protected : TOptional<TRange<FFrameNumber>>)",
    "insertText": "GetAutoSizeRange()"
  },
  {
    "label": "TrimSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimSection(FQualifiedFrameTime TrimTime, bool bTrimLeft, bool bDeleteKeys)"
  },
  {
    "label": "SplitSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "SplitSection(FQualifiedFrameTime SplitTime, bool bDeleteKeys)"
  },
  {
    "label": "GetSnapTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSnapTimes(TArray<FFrameNumber>& OutSnapTimes, bool bGetSectionBorders)"
  },
  {
    "label": "GetOffsetTime()",
    "kind": "Method",
    "detail": "Function (TOptional<FFrameTime>)",
    "insertText": "GetOffsetTime()"
  },
  {
    "label": "MigrateFrameTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigrateFrameTimes(FFrameRate SourceRate, FFrameRate DestinationRate)"
  },
  {
    "label": "GetTotalWeightValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTotalWeightValue(FFrameTime InTime)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "ImportEntityImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportEntityImpl(UMovieSceneEntitySystemLinker* EntityLinker, const FEntityImportParams& InParams, FImportedEntity* OutImportedEntity)"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (private : # if WITH_EDITOR void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Modify(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "PostEditImport()",
    "kind": "Method",
    "detail": "Function (float PreviousPlayRate ; private : void)",
    "insertText": "PostEditImport()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "GetRootMotionParams()",
    "kind": "Method",
    "detail": "Function (# endif FTransform PreviousTransform ; TOptional<int32> TempRootBoneIndex ; public : struct FRootMotionTransformParam { FFrameTime CurrentTime ; FFrameRate FrameRate ; bool bOutIsAdditive ; FTransform OutTransform ; FTransform OutParentTransform ; FTransform OutPoseTransform ; FTransform OutRootStartTransform ; float OutWeight ; } ; FMovieSceneSkeletalAnimRootMotionTrackParams*)",
    "insertText": "GetRootMotionParams()"
  },
  {
    "label": "GetRootMotionVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootMotionVelocity(FFrameTime PreviousTime, FFrameTime CurrentTime, FFrameRate FrameRate, FTransform& OutVelocity, float& OutWeight)"
  },
  {
    "label": "SetBoneIndexForRootMotionCalculations()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SetBoneIndexForRootMotionCalculations(bool bBlendFirstChildOfRoot)"
  },
  {
    "label": "GetRootMotionTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRootMotionTransform(FAnimationPoseData& PoseData, FRootMotionTransformParam& InOutParams)"
  },
  {
    "label": "MatchSectionByBoneTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MatchSectionByBoneTransform(USkeletalMeshComponent* SkelMeshComp, FFrameTime CurrentFrame, FFrameRate FrameRate, const FName& BoneName)"
  },
  {
    "label": "ClearMatchedOffsetTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMatchedOffsetTransforms()"
  },
  {
    "label": "GetRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRootMotion(FFrameTime CurrentTime, FRootMotionParams& OutRootMotionParams)"
  },
  {
    "label": "ToggleMatchTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleMatchTranslation()"
  },
  {
    "label": "ToggleMatchIncludeZHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleMatchIncludeZHeight()"
  },
  {
    "label": "ToggleMatchIncludeYawRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleMatchIncludeYawRotation()"
  },
  {
    "label": "ToggleMatchIncludePitchRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleMatchIncludePitchRotation()"
  },
  {
    "label": "ToggleMatchIncludeRollRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleMatchIncludeRollRotation()"
  },
  {
    "label": "ToggleShowSkeleton()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "ToggleShowSkeleton()"
  },
  {
    "label": "GetRootMotionStartOffset()",
    "kind": "Method",
    "detail": "Function (# endif FTransform)",
    "insertText": "GetRootMotionStartOffset()"
  },
  {
    "label": "MultiplyOutInverseOnNextClips()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "MultiplyOutInverseOnNextClips(FVector PreviousMatchedLocationOffset, FRotator PreviousMatchedRotationOffset)"
  }
]