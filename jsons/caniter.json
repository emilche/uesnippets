[
  {
    "label": "Hashtable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Hashtable"
  },
  {
    "label": "Normalizer2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Normalizer2"
  },
  {
    "label": "Normalizer2Impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Normalizer2Impl"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "CanonicalIterator()",
    "kind": "Method",
    "detail": "Function (# ifndef CANITER_H # define CANITER_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_NORMALIZATION # include \" unicode / uobject . h \" # include \" unicode / unistr . h \" # ifndef CANITER_SKIP_ZEROES # define CANITER_SKIP_ZEROES TRUE # endif U_NAMESPACE_BEGIN class Hashtable ; class Normalizer2 ; class Normalizer2Impl ; class CanonicalIterator U_FINAL : public UObject { public :)",
    "insertText": "CanonicalIterator(const UnicodeString &source, UErrorCode &status)"
  },
  {
    "label": "CanonicalIterator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CanonicalIterator()"
  },
  {
    "label": "getSource()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getSource()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "next()"
  },
  {
    "label": "setSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSource(const UnicodeString &newSource, UErrorCode &status)"
  },
  {
    "label": "permute()",
    "kind": "Method",
    "detail": "Function (# ifndef void U_EXPORT2)",
    "insertText": "permute(UnicodeString &source, UBool skipZeros, Hashtable *result, UErrorCode &status)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (# endif UClassID U_EXPORT2)",
    "insertText": "getStaticClassID()"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID()"
  },
  {
    "label": "CanonicalIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CanonicalIterator(const CanonicalIterator& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CanonicalIterator&)",
    "insertText": "operator(const CanonicalIterator& other)"
  },
  {
    "label": "getEquivalents()",
    "kind": "Method",
    "detail": "Function (UnicodeString source ; UBool done ; UnicodeString** pieces ; int32_t pieces_length ; int32_t* pieces_lengths ; int32_t* current ; int32_t current_length ; UnicodeString buffer ; const Normalizer2& nfd ; const Normalizer2Impl& nfcImpl ; UnicodeString*)",
    "insertText": "getEquivalents(const UnicodeString &segment, int32_t &result_len, UErrorCode &status)"
  },
  {
    "label": "getEquivalents2()",
    "kind": "Method",
    "detail": "Function (Hashtable*)",
    "insertText": "getEquivalents2(Hashtable *fillinResult, const char16_t *segment, int32_t segLen, UErrorCode &status)"
  },
  {
    "label": "extract()",
    "kind": "Method",
    "detail": "Function (Hashtable*)",
    "insertText": "extract(Hashtable *fillinResult, UChar32 comp, const char16_t *segment, int32_t segLen, int32_t segmentPos, UErrorCode &status)"
  },
  {
    "label": "cleanPieces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cleanPieces()"
  }
]