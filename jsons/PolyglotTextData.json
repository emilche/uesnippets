[
  {
    "label": "FPolyglotTextData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPolyglotTextData"
  },
  {
    "label": "Z_Construct_UScriptStruct_FPolyglotTextData_Statics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Z_Construct_UScriptStruct_FPolyglotTextData_Statics"
  },
  {
    "label": "FPolyglotTextData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Internationalization / LocalizedTextSourceTypes . h \" # include \" Internationalization / Text . h \" struct FPolyglotTextData { struct Z_Construct_UScriptStruct_FPolyglotTextData_Statics ; public :)",
    "insertText": "FPolyglotTextData()"
  },
  {
    "label": "FPolyglotTextData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPolyglotTextData(const ELocalizedTextSourceCategory& InCategory, const FString& InNamespace, const FString& InKey, const FString& InNativeString, const FString& InNativeCulture = FString())"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid(FText* OutFailureReason = nullptr)"
  },
  {
    "label": "SetCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategory(const ELocalizedTextSourceCategory InCategory)"
  },
  {
    "label": "GetCategory()",
    "kind": "Method",
    "detail": "Function (ELocalizedTextSourceCategory)",
    "insertText": "GetCategory()"
  },
  {
    "label": "SetNativeCulture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNativeCulture(const FString& InNativeCulture)"
  },
  {
    "label": "GetNativeCulture()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetNativeCulture()"
  },
  {
    "label": "ResolveNativeCulture()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ResolveNativeCulture()"
  },
  {
    "label": "GetLocalizedCultures()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "GetLocalizedCultures()"
  },
  {
    "label": "SetIdentity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIdentity(const FString& InNamespace, const FString& InKey)"
  },
  {
    "label": "GetIdentity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetIdentity(FString& OutNamespace, FString& OutKey)"
  },
  {
    "label": "GetNamespace()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetNamespace()"
  },
  {
    "label": "GetKey()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetKey()"
  },
  {
    "label": "SetNativeString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNativeString(const FString& InNativeString)"
  },
  {
    "label": "GetNativeString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetNativeString()"
  },
  {
    "label": "AddLocalizedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalizedString(const FString& InCulture, const FString& InLocalizedString)"
  },
  {
    "label": "RemoveLocalizedString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLocalizedString(const FString& InCulture)"
  },
  {
    "label": "GetLocalizedString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLocalizedString(const FString& InCulture, FString& OutLocalizedString)"
  },
  {
    "label": "ClearLocalizedStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLocalizedStrings()"
  },
  {
    "label": "IsMinimalPatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IsMinimalPatch(const bool InIsMinimalPatch)"
  },
  {
    "label": "IsMinimalPatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMinimalPatch()"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetText()"
  },
  {
    "label": "CacheText()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CacheText(FText* OutFailureReason = nullptr)"
  },
  {
    "label": "ClearCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCache()"
  }
]