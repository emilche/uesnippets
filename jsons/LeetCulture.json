[
  {
    "label": "FLeetCulture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLeetCulture"
  },
  {
    "label": "FLeetCulture()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Internationalization / LocTesting . h \" # include \" Internationalization / ICustomCulture . h \" # if ENABLE_LOC_TESTING class FLeetCulture : public ICustomCulture { public :)",
    "insertText": "FLeetCulture(const FCultureRef& InInvariantCulture)"
  },
  {
    "label": "StaticGetName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "StaticGetName()"
  },
  {
    "label": "GetBaseCulture()",
    "kind": "Method",
    "detail": "Function (FCultureRef)",
    "insertText": "GetBaseCulture()"
  },
  {
    "label": "GetEnglishName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetEnglishName()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetNativeName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetNativeName()"
  },
  {
    "label": "GetUnrealLegacyThreeLetterISOLanguageName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetUnrealLegacyThreeLetterISOLanguageName()"
  },
  {
    "label": "GetThreeLetterISOLanguageName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetThreeLetterISOLanguageName()"
  },
  {
    "label": "GetTwoLetterISOLanguageName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetTwoLetterISOLanguageName()"
  },
  {
    "label": "GetNativeLanguage()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetNativeLanguage()"
  },
  {
    "label": "GetNativeRegion()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetNativeRegion()"
  },
  {
    "label": "GetRegion()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetRegion()"
  },
  {
    "label": "GetScript()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetScript()"
  },
  {
    "label": "GetVariant()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetVariant()"
  },
  {
    "label": "IsRightToLeft()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRightToLeft()"
  }
]