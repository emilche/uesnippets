[
  {
    "label": "VideoSourceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoSourceBase"
  },
  {
    "label": "SinkPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SinkPair"
  },
  {
    "label": "VideoSourceBaseGuarded",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoSourceBaseGuarded"
  },
  {
    "label": "VideoSourceBase()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_BASE_VIDEO_SOURCE_BASE_H_ # define MEDIA_BASE_VIDEO_SOURCE_BASE_H_ # include<vector> # include \" api / sequence_checker . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" api / video / video_source_interface . h \" # include \" rtc_base / system / no_unique_address . h \" namespace rtc { class VideoSourceBase : public VideoSourceInterface<webrtc::VideoFrame> { public :)",
    "insertText": "VideoSourceBase()"
  },
  {
    "label": "AddOrUpdateSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOrUpdateSink(VideoSinkInterface<webrtc::VideoFrame>* sink, const VideoSinkWants& wants)"
  },
  {
    "label": "RemoveSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSink(VideoSinkInterface<webrtc::VideoFrame>* sink)"
  },
  {
    "label": "SinkPair()",
    "kind": "Method",
    "detail": "Function (protected : struct SinkPair {)",
    "insertText": "SinkPair(VideoSinkInterface<webrtc::VideoFrame>* sink, VideoSinkWants wants) : sink(sink), wants(wants)"
  },
  {
    "label": "FindSinkPair()",
    "kind": "Method",
    "detail": "Function (} VideoSinkInterface<webrtc::VideoFrame>* sink ; VideoSinkWants wants ; } ; SinkPair*)",
    "insertText": "FindSinkPair(const VideoSinkInterface<webrtc::VideoFrame>* sink)"
  },
  {
    "label": "sink_pairs()",
    "kind": "Method",
    "detail": "Function (const std::vector<SinkPair>&)",
    "insertText": "sink_pairs()"
  },
  {
    "label": "VideoSourceBaseGuarded()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VideoSourceBaseGuarded()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (RTC_NO_UNIQUE_ADDRESS webrtc::SequenceChecker source_sequence_ ; private : std::vector<SinkPair> sinks_)",
    "insertText": "RTC_GUARDED_BY(&source_sequence_)"
  }
]