[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FCurveEditorDragOperation_Tangent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditorDragOperation_Tangent"
  },
  {
    "label": "FKeyData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyData"
  },
  {
    "label": "OnInitialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CurveDataAbstraction . h \" # include \" CurveEditorTypes . h \" # include \" Curves / KeyHandle . h \" # include \" ICurveEditorDragOperation . h \" # include \" Math / Vector2D . h \" # include \" Misc / Optional . h \" class FCurveEditor ; struct FPointerEvent ; class FCurveEditorDragOperation_Tangent : public ICurveEditorKeyDragOperation { public : void)",
    "insertText": "OnInitialize(FCurveEditor* InCurveEditor, const TOptional<FCurvePointHandle>& InCardinalPoint)"
  },
  {
    "label": "OnBeginDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnEndDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndDrag(FVector2D InitialPosition, FVector2D CurrentPosition, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnCancelDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCancelDrag()"
  },
  {
    "label": "RoundTrajectory()",
    "kind": "Method",
    "detail": "Function (private : FVector2D)",
    "insertText": "RoundTrajectory(FVector2D Delta)"
  },
  {
    "label": "FKeyData()",
    "kind": "Method",
    "detail": "Function (private : FCurveEditor* CurveEditor ; private : struct FKeyData {)",
    "insertText": "FKeyData(FCurveModelID InCurveID) : CurveID(InCurveID)"
  }
]