[
  {
    "label": "IDelegateInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDelegateInstance"
  },
  {
    "label": "IBaseDelegateInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IBaseDelegateInstance"
  },
  {
    "label": "TDelegateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDelegateBase"
  },
  {
    "label": "FNotThreadSafeNotCheckedDelegateMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotThreadSafeNotCheckedDelegateMode"
  },
  {
    "label": "FThreadSafeDelegateMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadSafeDelegateMode"
  },
  {
    "label": "FNotThreadSafeDelegateMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotThreadSafeDelegateMode"
  },
  {
    "label": "TMemFunPtrType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMemFunPtrType"
  },
  {
    "label": "TPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPayload"
  },
  {
    "label": "TPlacementNewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPlacementNewer"
  },
  {
    "label": "RetType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / AssertionMacros . h \" # include \" Templates / TypeCompatibleBytes . h \" # include \" Templates / Tuple . h \" class IDelegateInstance ; template<FuncType,UserPolicy> struct IBaseDelegateInstance ; template<> class TDelegateBase ; struct FNotThreadSafeNotCheckedDelegateMode ; struct FThreadSafeDelegateMode ; struct FNotThreadSafeDelegateMode ; template<RetType,. . . ArgTypes,UserPolicy> struct IBaseDelegateInstance<)",
    "insertText": "RetType(ArgTypes...)"
  },
  {
    "label": "CreateCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCopy(TDelegateBase<FThreadSafeDelegateMode>& Base)"
  },
  {
    "label": "CreateCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCopy(TDelegateBase<FNotThreadSafeDelegateMode>& Base)"
  },
  {
    "label": "CreateCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCopy(TDelegateBase<FNotThreadSafeNotCheckedDelegateMode>& Base)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (RetType)",
    "insertText": "Execute(ArgTypes...)"
  },
  {
    "label": "ExecuteIfSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecuteIfSafe(ArgTypes...)"
  },
  {
    "label": "RetType()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "RetType(Class::* Type)(ArgTypes...)"
  },
  {
    "label": "Ret()",
    "kind": "Method",
    "detail": "Function (} ; PRAGMA_ENABLE_DEPRECATION_WARNINGS template<FuncType> struct TPayload ; template<Ret,. . . Types> struct TPayload<)",
    "insertText": "Ret(Types...)"
  },
  {
    "label": "TPayload()",
    "kind": "Method",
    "detail": "Function (TTuple<Types . . .,Ret> Values ; template<. . . ArgTypes>)",
    "insertText": "TPayload(ArgTypes&&... Args) : Values(Forward<ArgTypes>(Args)..., Ret())"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (} Ret&)",
    "insertText": "GetResult()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} } ; template<. . . Types> struct TPayload<)",
    "insertText": "void(Types...)"
  },
  {
    "label": "TPayload()",
    "kind": "Method",
    "detail": "Function (TTuple<Types . . .> Values ; template<. . . ArgTypes>)",
    "insertText": "TPayload(ArgTypes&&... Args) : Values(Forward<ArgTypes>(Args)...)"
  },
  {
    "label": "TPlacementNewer()",
    "kind": "Method",
    "detail": "Function (} } ; template<T> struct TPlacementNewer {)",
    "insertText": "TPlacementNewer() : bConstructed(false)"
  },
  {
    "label": "TPlacementNewer()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TPlacementNewer()"
  },
  {
    "label": "TPlacementNewerTTypeTypedef()",
    "kind": "Method",
    "detail": "Function (typedef T)",
    "insertText": "TPlacementNewerTTypeTypedef((TPlacementNewerTTypeTypedef*)&Bytes)->TPlacementNewerTTypeTypedef::~TPlacementNewerTTypeTypedef()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } template<. . . ArgTypes> T*)",
    "insertText": "operator()(ArgTypes&&... Args)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (T* Result =)",
    "insertText": "new(&Bytes) T(Forward<ArgTypes>(Args)...)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bConstructed = true ; return Result ; } T*)",
    "insertText": "operator()"
  }
]