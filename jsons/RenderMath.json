[
  {
    "label": "GetBasisDeterminantSign()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PackedNormal . h \" float)",
    "insertText": "GetBasisDeterminantSign(const FVector& XAxis, const FVector& YAxis, const FVector& ZAxis)"
  },
  {
    "label": "Basis()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "Basis(FPlane(XAxis, 0), FPlane(YAxis, 0), FPlane(ZAxis, 0), FPlane(0, 0, 0, 1))"
  },
  {
    "label": "GetBasisDeterminantSignByte()",
    "kind": "Method",
    "detail": "Function (} int8)",
    "insertText": "GetBasisDeterminantSignByte(const FPackedNormal& XAxis, const FPackedNormal& YAxis, const FPackedNormal& ZAxis)"
  },
  {
    "label": "GenerateYAxis()",
    "kind": "Method",
    "detail": "Function (} template<VectorType> FVector)",
    "insertText": "GenerateYAxis(const VectorType& XAxis, const VectorType& ZAxis)"
  },
  {
    "label": "ToFVector()",
    "kind": "Method",
    "detail": "Function (FVector x = XAxis .)",
    "insertText": "ToFVector()"
  },
  {
    "label": "ToFVector4()",
    "kind": "Method",
    "detail": "Function (FVector4 z = ZAxis .)",
    "insertText": "ToFVector4()"
  }
]