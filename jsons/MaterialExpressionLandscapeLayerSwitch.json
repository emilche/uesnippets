[
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FMaterialParameterInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialParameterInfo"
  },
  {
    "label": "UMaterialExpressionLandscapeLayerSwitch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionLandscapeLayerSwitch"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" MaterialExpressionIO . h \" # include \" MaterialValueType . h \" # include \" Materials / MaterialExpression . h \" # include \" MaterialExpressionLandscapeLayerSwitch . generated . h \" class UTexture ; struct FMaterialParameterInfo ;)",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FStructuredArchive::FRecord Record)"
  },
  {
    "label": "IsResultMaterialAttributes()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "IsResultMaterialAttributes(int32 OutputIndex)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "CanRenameNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameNode()"
  },
  {
    "label": "SetEditableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableName(const FString& NewName)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesSearchQuery(const TCHAR* SearchQuery)"
  },
  {
    "label": "GenerateHLSLExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateHLSLExpression(FMaterialHLSLGenerator& Generator, UE::HLSLTree::FScope& Scope, int32 OutputIndex, UE::HLSLTree::FExpression const*& OutExpression)"
  },
  {
    "label": "GetReferencedTexture()",
    "kind": "Method",
    "detail": "Function (# endif UObject*)",
    "insertText": "GetReferencedTexture()"
  },
  {
    "label": "GetReferencedTextures()",
    "kind": "Method",
    "detail": "Function (ReferencedTextureArray)",
    "insertText": "GetReferencedTextures()"
  },
  {
    "label": "CanReferenceTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReferenceTexture()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostLoad()"
  }
]