[
  {
    "label": "FHaltonSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHaltonSequence"
  },
  {
    "label": "FHaltonSequence()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" class FHaltonSequence { public :)",
    "insertText": "FHaltonSequence()"
  },
  {
    "label": "GetNumberOfDimensions()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumberOfDimensions()"
  },
  {
    "label": "GetFaurePermutations()",
    "kind": "Method",
    "detail": "Function (const TArray<int>&)",
    "insertText": "GetFaurePermutations()"
  },
  {
    "label": "InitTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTables(const TArray<TArray<int>>& Permutations)"
  },
  {
    "label": "BuildPermutation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPermutation(int Size, int Base, int Digits, const TArray<TArray<int>>& Permutations)"
  },
  {
    "label": "FlattenPermutation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlattenPermutation(const TArray<int>& PermutationLocal)"
  }
]