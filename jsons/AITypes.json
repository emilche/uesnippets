[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAINamedID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAINamedID"
  },
  {
    "label": "FAIGenericID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIGenericID"
  },
  {
    "label": "FAIBasicCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIBasicCounter"
  },
  {
    "label": "FAIResCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIResCounter"
  },
  {
    "label": "FAIResourcesSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIResourcesSet"
  },
  {
    "label": "FAIResourceLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIResourceLock"
  },
  {
    "label": "FAIRequestID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIRequestID"
  },
  {
    "label": "UNavigationQueryFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationQueryFilter"
  },
  {
    "label": "FAIMoveRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAIMoveRequest"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FIntervalCountdown",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntervalCountdown"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(ID.Index)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(ID.Index)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(NextAvailableID)"
  },
  {
    "label": "ContainsResourceIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ContainsResourceIndex(Resource.Index)"
  },
  {
    "label": "FAIResourceLock()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FAIResourceLock()"
  },
  {
    "label": "SetLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLock(EAIRequestPriority::Type LockPriority)"
  },
  {
    "label": "ClearLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLock(EAIRequestPriority::Type LockPriority)"
  },
  {
    "label": "SetUseResourceLockCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseResourceLockCount(bool inUseResourceLockCount)"
  },
  {
    "label": "ForceClearAllLocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceClearAllLocks()"
  },
  {
    "label": "RegisterResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterResource(const FAIResourceID& Resource)"
  },
  {
    "label": "GetResourcesCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetResourcesCount()"
  },
  {
    "label": "GetSetDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSetDescription(FAIResourcesSet ResourceSet)"
  },
  {
    "label": "IsEquivalent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsEquivalent(Other.RequestID)"
  },
  {
    "label": "FAIMoveRequest()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FAIMoveRequest()"
  },
  {
    "label": "FAIMoveRequest()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FAIMoveRequest(const AActor* InGoalActor)"
  },
  {
    "label": "FAIMoveRequest()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FAIMoveRequest(const FVector& InGoalLocation)"
  },
  {
    "label": "SetGoalActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGoalActor(const AActor* InGoalActor)"
  },
  {
    "label": "SetGoalLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGoalLocation(const FVector& InGoalLocation)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (negative)",
    "insertText": "return(Interval - TimeLeft)"
  }
]