[
  {
    "label": "DcSctpSocketFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DcSctpSocketFactory"
  },
  {
    "label": "DcSctpSocketFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PUBLIC_DCSCTP_SOCKET_FACTORY_H_ # define NET_DCSCTP_PUBLIC_DCSCTP_SOCKET_FACTORY_H_ # include<memory> # include \" absl / strings / string_view . h \" # include \" net / dcsctp / public / dcsctp_options . h \" # include \" net / dcsctp / public / dcsctp_socket . h \" # include \" net / dcsctp / public / packet_observer . h \" namespace dcsctp { class DcSctpSocketFactory { public : ~)",
    "insertText": "DcSctpSocketFactory()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DcSctpSocketInterface>)",
    "insertText": "Create(absl::string_view log_prefix, DcSctpSocketCallbacks& callbacks, std::unique_ptr<PacketObserver> packet_observer, const DcSctpOptions& options)"
  }
]