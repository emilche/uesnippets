[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UEditorEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorEngine"
  },
  {
    "label": "ULayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULayer"
  },
  {
    "label": "FActorLayerViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorLayerViewModel"
  },
  {
    "label": "FActorLayerViewModel()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" # include \" EditorUndoClient . h \" # include \" Layers / LayersSubsystem . h \" class AActor ; class UEditorEngine ; class ULayer ; class FActorLayerViewModel : public TSharedFromThis<FActorLayerViewModel>,public FEditorUndoClient { public : ~)",
    "insertText": "FActorLayerViewModel()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FActorLayerViewModel>)",
    "insertText": "Create(const TWeakObjectPtr< ULayer >& InLayer, const TArray< TWeakObjectPtr< AActor > >& InActors, const TWeakObjectPtr< UEditorEngine >& InEditor)"
  },
  {
    "label": "NewLayer()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FActorLayerViewModel>)",
    "insertText": "NewLayer(new FActorLayerViewModel( InLayer, InActors, InEditor ))"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (NewLayer ->)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetName()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "FActorLayerViewModel()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate Changed ; private :)",
    "insertText": "FActorLayerViewModel(const TWeakObjectPtr< ULayer >& InLayer, const TArray< TWeakObjectPtr< AActor > >& InActors, const TWeakObjectPtr< UEditorEngine >& InEditor)"
  },
  {
    "label": "OnLayersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayersChanged(const ELayersAction::Type Action, const TWeakObjectPtr< ULayer >& ChangedLayer, const FName& ChangedProperty)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  }
]