[
  {
    "label": "MCContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCContext"
  },
  {
    "label": "MCExpr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCExpr"
  },
  {
    "label": "MCSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSection"
  },
  {
    "label": "MCStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCStreamer"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "ConstantPoolEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantPoolEntry"
  },
  {
    "label": "ConstantPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantPool"
  },
  {
    "label": "AssemblerConstantPools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssemblerConstantPools"
  },
  {
    "label": "ConstantPoolEntry()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_CONSTANTPOOLS_H # define LLVM_MC_CONSTANTPOOLS_H # include \" llvm / ADT / MapVector . h \" # include \" llvm / ADT / SmallVector . h \" namespace llvm { class MCContext ; class MCExpr ; class MCSection ; class MCStreamer ; class MCSymbol ; struct ConstantPoolEntry {)",
    "insertText": "ConstantPoolEntry(MCSymbol *L, const MCExpr *Val, unsigned Sz) : Label(L), Value(Val), Size(Sz)"
  },
  {
    "label": "ConstantPool()",
    "kind": "Method",
    "detail": "Function (} MCSymbol* Label ; const MCExpr* Value ; unsigned Size ; } ; class ConstantPool { typedef SmallVector<ConstantPoolEntry,4> EntryVecTy ; EntryVecTy Entries ; public :)",
    "insertText": "ConstantPool()"
  },
  {
    "label": "addEntry()",
    "kind": "Method",
    "detail": "Function (} const MCExpr*)",
    "insertText": "addEntry(const MCExpr *Value, MCContext &Context, unsigned Size)"
  },
  {
    "label": "emitEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitEntries(MCStreamer &Streamer)"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "empty()"
  },
  {
    "label": "emitAll()",
    "kind": "Method",
    "detail": "Function (} ; class AssemblerConstantPools { typedef MapVector<MCSection*,ConstantPool> ConstantPoolMapTy ; ConstantPoolMapTy ConstantPools ; public : void)",
    "insertText": "emitAll(MCStreamer &Streamer)"
  },
  {
    "label": "emitForCurrentSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitForCurrentSection(MCStreamer &Streamer)"
  },
  {
    "label": "addEntry()",
    "kind": "Method",
    "detail": "Function (const MCExpr*)",
    "insertText": "addEntry(MCStreamer &Streamer, const MCExpr *Expr, unsigned Size)"
  },
  {
    "label": "getConstantPool()",
    "kind": "Method",
    "detail": "Function (private : ConstantPool*)",
    "insertText": "getConstantPool(MCSection *Section)"
  },
  {
    "label": "getOrCreateConstantPool()",
    "kind": "Method",
    "detail": "Function (ConstantPool&)",
    "insertText": "getOrCreateConstantPool(MCSection *Section)"
  }
]