[
  {
    "label": "FakeDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeDecoder"
  },
  {
    "label": "FakeH264Decoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeH264Decoder"
  },
  {
    "label": "FakeDecoder()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_FAKE_DECODER_H_ # define TEST_FAKE_DECODER_H_ # include<stdint . h> # include<memory> # include \" api / task_queue / task_queue_base . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" api / video / encoded_image . h \" # include \" api / video_codecs / video_decoder . h \" # include \" modules / video_coding / include / video_codec_interface . h \" namespace webrtc { namespace test { class FakeDecoder : public VideoDecoder { public : enum { kDefaultWidth = 3 2 0,kDefaultHeight = 1 8 0 } ;)",
    "insertText": "FakeDecoder()"
  },
  {
    "label": "FakeDecoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FakeDecoder(TaskQueueFactory* task_queue_factory)"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Configure(const Settings& settings)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Decode(const EncodedImage& input, bool missing_frames, int64_t render_time_ms)"
  },
  {
    "label": "RegisterDecodeCompleteCallback()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RegisterDecodeCompleteCallback(DecodedImageCallback* callback)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Release()"
  },
  {
    "label": "GetDecoderInfo()",
    "kind": "Method",
    "detail": "Function (DecoderInfo)",
    "insertText": "GetDecoderInfo()"
  },
  {
    "label": "ImplementationName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "ImplementationName()"
  },
  {
    "label": "SetDelayedDecoding()",
    "kind": "Method",
    "detail": "Function (const char* kImplementationName ; void)",
    "insertText": "SetDelayedDecoding(int decode_delay_ms)"
  },
  {
    "label": "FakeH264Decoder()",
    "kind": "Method",
    "detail": "Function (private : DecodedImageCallback* callback_ ; int width_ ; int height_ ; std::unique_ptr<TaskQueueBase,TaskQueueDeleter> task_queue_ ; TaskQueueFactory* task_queue_factory_ ; int decode_delay_ms_ ; } ; class FakeH264Decoder : public FakeDecoder { public : ~)",
    "insertText": "FakeH264Decoder()"
  }
]