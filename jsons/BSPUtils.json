[
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FPoly",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoly"
  },
  {
    "label": "BSPUTILS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BSPUTILS_API"
  },
  {
    "label": "bspRepartition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspRepartition( UWorld* InWorld, int32 iNode )"
  },
  {
    "label": "bspNodeToFPoly()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "bspNodeToFPoly( UModel* Model, int32 iNode, FPoly* EdPoly )"
  },
  {
    "label": "bspCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspCleanup( UModel* Model )"
  },
  {
    "label": "bspBuildFPolys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspBuildFPolys( UModel* Model, bool SurfLinks, int32 iNode, TArray<FPoly>* DestArray = NULL )"
  },
  {
    "label": "bspMergeCoplanars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspMergeCoplanars( UModel* Model, bool RemapLinks, bool MergeDisparateTextures )"
  },
  {
    "label": "bspBrushCSG()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "bspBrushCSG( ABrush* Actor, UModel* Model, UModel* TempModel, UMaterialInterface* SelectedMaterialInstance, uint32 PolyFlags, EBrushType BrushType, ECsgOper CSGOper, bool bBuildBounds, bool bMergePolys, bool bReplaceNULLMaterialRefs, bool bShowProgressBar=true )"
  },
  {
    "label": "bspOptGeom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspOptGeom( UModel* Model )"
  },
  {
    "label": "polySetAndClearPolyFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "polySetAndClearPolyFlags(UModel *Model, uint32 SetBits, uint32 ClearBits,bool SelectedOnly, bool UpdateBrush)"
  },
  {
    "label": "polyFindBrush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "polyFindBrush(UModel* InModel, int32 iSurf, FPoly &Poly)"
  },
  {
    "label": "polyFindMaster()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "polyFindMaster(UModel* InModel, int32 iSurf, FPoly &Poly)"
  },
  {
    "label": "polyUpdateBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "polyUpdateBrush(UModel* Model, int32 iSurf, bool bUpdateTexCoords, bool bOnlyRefreshSurfaceMaterials)"
  },
  {
    "label": "polyUpdateMaster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "polyUpdateMaster(UModel* Model, int32 iSurf, bool bUpdateTexCoords, bool bOnlyRefreshSurfaceMaterials)"
  },
  {
    "label": "polyGetLinkedPolys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "polyGetLinkedPolys(ABrush* InBrush, FPoly* InPoly, TArray<FPoly>* InPolyList)"
  },
  {
    "label": "polySplitOverlappingEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "polySplitOverlappingEdges( TArray<FPoly>* InPolyList, TArray<FPoly>* InResult )"
  },
  {
    "label": "polyGetOuterEdgeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "polyGetOuterEdgeList(TArray<FPoly>* InPolyList, TArray<FEdge>* InEdgeList)"
  }
]