[
  {
    "label": "FTimerAggregator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerAggregator"
  },
  {
    "label": "FTimerAggregator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" ProfilingDebugging / MiscTrace . h \" # include \" TraceServices / Containers / Tables . h \" # include \" TraceServices / Model / TimingProfiler . h \" # include \" Insights / TimingProfiler / ViewModels / StatsAggregator . h \" namespace UE::Insights::TimingProfiler { class FTimerAggregator : public FStatsAggregator { public :)",
    "insertText": "FTimerAggregator() : FStatsAggregator(TEXT(\"Timers\"))"
  },
  {
    "label": "FTimerAggregator()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTimerAggregator()"
  },
  {
    "label": "GetResultTable()",
    "kind": "Method",
    "detail": "Function (} TraceServices::ITable<TraceServices::FTimingProfilerAggregatedStats>*)",
    "insertText": "GetResultTable()"
  },
  {
    "label": "ResetResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetResults()"
  },
  {
    "label": "GetFrameType()",
    "kind": "Method",
    "detail": "Function (ETraceFrameType)",
    "insertText": "GetFrameType()"
  },
  {
    "label": "CreateWorker()",
    "kind": "Method",
    "detail": "Function (FrameType = InFrameType ; } protected : IStatsAggregationWorker*)",
    "insertText": "CreateWorker(TSharedPtr<const TraceServices::IAnalysisSession> InSession)"
  }
]