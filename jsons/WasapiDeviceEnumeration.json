[
  {
    "label": "FWasapiDeviceEnumeration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWasapiDeviceEnumeration"
  },
  {
    "label": "FDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWasapiDeviceEnumeration()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioCaptureCore . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include \" Windows / AllowWindowsPlatformAtomics . h \" # include \" Microsoft / COMPointer . h \" THIRD_PARTY_INCLUDES_START # include<AudioClient . h> # include<Mmdeviceapi . h> THIRD_PARTY_INCLUDES_END # include \" Windows / HideWindowsPlatformAtomics . h \" # include \" Windows / HideWindowsPlatformTypes . h \" namespace Audio { class FWasapiDeviceEnumeration { public : struct FDeviceInfo { enum class EEndpointType { Unknown,Render,Capture } ; FString DeviceId ; FString FriendlyName ; uint32 NumInputChannels = 0 ; uint32 NumOutputChannels = 0 ; uint32 BitsPerSample = 0 ; uint32 PreferredSampleRate = 0 ; EEndpointType EndpointType = EEndpointType::Unknown ; } ;)",
    "insertText": "FWasapiDeviceEnumeration()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetDefaultInputDeviceId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultInputDeviceId()"
  },
  {
    "label": "GetDefaultOutputDeviceId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultOutputDeviceId()"
  },
  {
    "label": "GetDeviceInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceInfo(const FString& InDeviceId, FDeviceInfo& OutDeviceInfo)"
  },
  {
    "label": "GetDeviceIdFromIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceIdFromIndex(int32 InDeviceIndex, EDataFlow InDataFlow, FString& OutDeviceId)"
  },
  {
    "label": "GetDeviceIndexFromId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceIndexFromId(const FString& InDeviceId, int32& OutDeviceIndex)"
  },
  {
    "label": "GetInputDevicesAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInputDevicesAvailable(TArray<FDeviceInfo>& OutDevices)"
  },
  {
    "label": "GetIMMDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIMMDevice(const FString& InDeviceId, TComPtr<IMMDevice>& OutDevice)"
  },
  {
    "label": "EnumerateDefaults()",
    "kind": "Method",
    "detail": "Function (private : FString DefaultRenderId ; FString DefaultCaptureId ; TComPtr<IMMDeviceEnumerator> DeviceEnumerator ; void)",
    "insertText": "EnumerateDefaults()"
  },
  {
    "label": "GetDeviceProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceProperties(TComPtr<IMMDevice> InDevice, FDeviceInfo& OutInfo)"
  },
  {
    "label": "GetDeviceId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceId(TComPtr<IMMDevice> InDevice, FString& OutString)"
  },
  {
    "label": "GetDeviceFriendlyName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDeviceFriendlyName(TComPtr<IMMDevice> InDevice, FString& OutString)"
  },
  {
    "label": "GetEndpointType()",
    "kind": "Method",
    "detail": "Function (FDeviceInfo::EEndpointType)",
    "insertText": "GetEndpointType(TComPtr<IMMDevice> InDevice)"
  },
  {
    "label": "GetAudioClientMixFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAudioClientMixFormat(TComPtr<IAudioClient3> AudioClient, WAVEFORMATEX** OutFormat)"
  }
]