[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "CStaticArray()",
    "kind": "Method",
    "detail": "Function (template<class T> class ST_DLL_LINK CStaticArray : public CArray<T> { public :)",
    "insertText": "CStaticArray(size_t siNumElements, const char* pOwner, bool bResize = true) : m_bInUse(true), m_nBlockHandle(-1)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (size_t siBlockSize = siNumElements*)",
    "insertText": "sizeof(T)"
  },
  {
    "label": "TmpHeapBlockLock()",
    "kind": "Method",
    "detail": "Function (st_byte* pHeapBlock =)",
    "insertText": "TmpHeapBlockLock(siBlockSize, pOwner, m_nBlockHandle)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(pHeapBlock)"
  },
  {
    "label": "SetExternalMemory()",
    "kind": "Method",
    "detail": "Function (CArray<T)",
    "insertText": "SetExternalMemory(pHeapBlock, siBlockSize)"
  },
  {
    "label": "CStaticArray()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CStaticArray()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(m_nBlockHandle > -1)"
  },
  {
    "label": "TmpHeapBlockUnlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TmpHeapBlockUnlock(m_nBlockHandle)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Release(void)"
  }
]