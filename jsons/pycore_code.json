[
  {
    "label": "callable_cache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "callable_cache"
  },
  {
    "label": "_PyCodeConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_PyCodeConstructor"
  },
  {
    "label": "changes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "changes"
  },
  {
    "label": "_PyCodeConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_PyCodeConstructor"
  },
  {
    "label": "_PyCodeConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_PyCodeConstructor"
  },
  {
    "label": "_specialization_stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_specialization_stats"
  },
  {
    "label": "_opcode_stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_opcode_stats"
  },
  {
    "label": "_call_stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_call_stats"
  },
  {
    "label": "_object_stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_object_stats"
  },
  {
    "label": "_stats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_stats"
  },
  {
    "label": "_PyCode_Quicken()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyCode_Quicken(PyCodeObject *code)"
  },
  {
    "label": "_PyCode_InitAddressRange()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_PyCode_InitAddressRange(PyCodeObject* co, PyCodeAddressRange *bounds)"
  },
  {
    "label": "_PyLineTable_InitAddressRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyLineTable_InitAddressRange(\n    const char *linetable,\n    Py_ssize_t length,\n    int firstlineno,\n    PyCodeAddressRange *range)"
  },
  {
    "label": "_PyLineTable_NextAddressRange()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_PyLineTable_NextAddressRange(PyCodeAddressRange *range)"
  },
  {
    "label": "_PyLineTable_PreviousAddressRange()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_PyLineTable_PreviousAddressRange(PyCodeAddressRange *range)"
  },
  {
    "label": "_Py_Specialize_LoadAttr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_LoadAttr(PyObject *owner, _Py_CODEUNIT *instr,\n                                   PyObject *name)"
  },
  {
    "label": "_Py_Specialize_StoreAttr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_StoreAttr(PyObject *owner, _Py_CODEUNIT *instr,\n                                    PyObject *name)"
  },
  {
    "label": "_Py_Specialize_LoadGlobal()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_LoadGlobal(PyObject *globals, PyObject *builtins, _Py_CODEUNIT *instr, PyObject *name)"
  },
  {
    "label": "_Py_Specialize_LoadMethod()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_LoadMethod(PyObject *owner, _Py_CODEUNIT *instr,\n                                     PyObject *name)"
  },
  {
    "label": "_Py_Specialize_BinarySubscr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_BinarySubscr(PyObject *sub, PyObject *container, _Py_CODEUNIT *instr)"
  },
  {
    "label": "_Py_Specialize_StoreSubscr()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_StoreSubscr(PyObject *container, PyObject *sub, _Py_CODEUNIT *instr)"
  },
  {
    "label": "_Py_Specialize_Call()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_Call(PyObject *callable, _Py_CODEUNIT *instr,\n                               int nargs, PyObject *kwnames)"
  },
  {
    "label": "_Py_Specialize_Precall()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_Py_Specialize_Precall(PyObject *callable, _Py_CODEUNIT *instr,\n                                  int nargs, PyObject *kwnames, int oparg)"
  },
  {
    "label": "_Py_Specialize_BinaryOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Py_Specialize_BinaryOp(PyObject *lhs, PyObject *rhs, _Py_CODEUNIT *instr,\n                                    int oparg, PyObject **locals)"
  },
  {
    "label": "_Py_Specialize_CompareOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Py_Specialize_CompareOp(PyObject *lhs, PyObject *rhs,\n                                     _Py_CODEUNIT *instr, int oparg)"
  },
  {
    "label": "_Py_Specialize_UnpackSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Py_Specialize_UnpackSequence(PyObject *seq, _Py_CODEUNIT *instr,\n                                          int oparg)"
  },
  {
    "label": "_PyStaticCode_Dealloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_PyStaticCode_Dealloc(PyCodeObject *co)"
  },
  {
    "label": "_PyStaticCode_InternStrings()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_PyStaticCode_InternStrings(PyCodeObject *co)"
  },
  {
    "label": "_Py_PrintSpecializationStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Py_PrintSpecializationStats(int to_file)"
  },
  {
    "label": "write_varint()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "write_varint(ptr, val)"
  },
  {
    "label": "adaptive_counter_bits()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "adaptive_counter_bits(value, ADAPTIVE_BACKOFF_START)"
  },
  {
    "label": "adaptive_counter_bits()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "adaptive_counter_bits(value, backoff)"
  },
  {
    "label": "_PyCode_CreateLineArray()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_PyCode_CreateLineArray(PyCodeObject *co)"
  },
  {
    "label": "_PyCode_CreateLineArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "_PyCode_CreateLineArray(co)"
  }
]