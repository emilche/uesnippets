[
  {
    "label": "CefStreamResourceHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefStreamResourceHandler"
  },
  {
    "label": "CefStreamResourceHandler()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_WRAPPER_CEF_STREAM_RESOURCE_HANDLER_H_ # define CEF_INCLUDE_WRAPPER_CEF_STREAM_RESOURCE_HANDLER_H_ # pragma once # include \" include / base / cef_macros . h \" # include \" include / cef_resource_handler . h \" # include \" include / cef_response . h \" # include \" include / cef_stream . h \" class CefStreamResourceHandler : public CefResourceHandler { public :)",
    "insertText": "CefStreamResourceHandler(const CefString& mime_type, CefRefPtr<CefStreamReader> stream)"
  },
  {
    "label": "CefStreamResourceHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefStreamResourceHandler(int status_code, const CefString& status_text, const CefString& mime_type, CefResponse::HeaderMap header_map, CefRefPtr<CefStreamReader> stream)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Open(CefRefPtr<CefRequest> request, bool& handle_request, CefRefPtr<CefCallback> callback)"
  },
  {
    "label": "GetResponseHeaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResponseHeaders(CefRefPtr<CefResponse> response, int64& response_length, CefString& redirectUrl)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(void* data_out, int bytes_to_read, int& bytes_read, CefRefPtr<CefResourceReadCallback> callback)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel()"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (private : const int status_code_ ; const CefString status_text_ ; const CefString mime_type_ ; const CefResponse::HeaderMap header_map_ ; const CefRefPtr<CefStreamReader> stream_ ;)",
    "insertText": "IMPLEMENT_REFCOUNTING(CefStreamResourceHandler)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(CefStreamResourceHandler)"
  }
]