[
  {
    "label": "ReceiveStatistics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReceiveStatistics"
  },
  {
    "label": "RtxReceiveStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtxReceiveStream"
  },
  {
    "label": "RtxReceiveStream()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_RTX_RECEIVE_STREAM_H_ # define CALL_RTX_RECEIVE_STREAM_H_ # include<cstdint> # include<map> # include \" api / sequence_checker . h \" # include \" call / rtp_packet_sink_interface . h \" # include \" rtc_base / system / no_unique_address . h \" namespace webrtc { class ReceiveStatistics ; class RtxReceiveStream : public RtpPacketSinkInterface { public :)",
    "insertText": "RtxReceiveStream(RtpPacketSinkInterface* media_sink, std::map<int, int> associated_payload_types, uint32_t media_ssrc, ReceiveStatistics* rtp_receive_statistics = nullptr)"
  },
  {
    "label": "RtxReceiveStream()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtxReceiveStream()"
  },
  {
    "label": "SetAssociatedPayloadTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssociatedPayloadTypes(std::map<int, int> associated_payload_types)"
  },
  {
    "label": "OnRtpPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRtpPacket(const RtpPacketReceived& packet)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : RTC_NO_UNIQUE_ADDRESS SequenceChecker packet_checker_ ; RtpPacketSinkInterface* const media_sink_ ; std::map<int,int> associated_payload_types_)",
    "insertText": "RTC_GUARDED_BY(&packet_checker_)"
  }
]