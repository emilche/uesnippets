[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FDebugDisplayInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDebugDisplayInfo"
  },
  {
    "label": "INavLinkCustomInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavLinkCustomInterface"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "ANavigationData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANavigationData"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "INavLinkCustomInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavLinkCustomInterface"
  },
  {
    "label": "INavAgentInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavAgentInterface"
  },
  {
    "label": "UNavigationComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationComponent"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPathFollowingResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathFollowingResult"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPathFollowingRequestResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathFollowingRequestResult"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UPathFollowingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPathFollowingComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "FVisualLogEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLogEntry"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogPathFollowing, Warning, All)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString(uint16 Value)"
  },
  {
    "label": "FPathFollowingResult()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FPathFollowingResult(FPathFollowingResultFlags::Type InFlags)"
  },
  {
    "label": "FPathFollowingResult()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FPathFollowingResult(EPathFollowingResult::Type ResultCode, FPathFollowingResultFlags::Type ExtraFlags)"
  },
  {
    "label": "HasFlag()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "HasFlag(FPathFollowingResultFlags::Success)"
  },
  {
    "label": "HasFlag()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "HasFlag(FPathFollowingResultFlags::UserAbort | FPathFollowingResultFlags::NewRequest)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "UpdateCachedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedComponents()"
  },
  {
    "label": "RequestMove()",
    "kind": "Method",
    "detail": "Function (FAIRequestID)",
    "insertText": "RequestMove(const FAIMoveRequest& RequestData, FNavPathSharedPtr InPath)"
  },
  {
    "label": "AbortMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortMove(const UObject& Instigator, FPathFollowingResultFlags::Type AbortFlags, FAIRequestID RequestID = FAIRequestID::CurrentRequest, EPathFollowingVelocityMode VelocityMode = EPathFollowingVelocityMode::Reset)"
  },
  {
    "label": "RequestMoveWithImmediateFinish()",
    "kind": "Method",
    "detail": "Function (FAIRequestID)",
    "insertText": "RequestMoveWithImmediateFinish(EPathFollowingResult::Type Result, EPathFollowingVelocityMode VelocityMode = EPathFollowingVelocityMode::Reset)"
  },
  {
    "label": "PauseMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseMove(FAIRequestID RequestID = FAIRequestID::CurrentRequest, EPathFollowingVelocityMode VelocityMode = EPathFollowingVelocityMode::Reset)"
  },
  {
    "label": "ResumeMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeMove(FAIRequestID RequestID = FAIRequestID::CurrentRequest)"
  },
  {
    "label": "OnPathFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathFinished(const FPathFollowingResult& Result)"
  },
  {
    "label": "OnSegmentFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSegmentFinished()"
  },
  {
    "label": "OnPathUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathUpdated()"
  },
  {
    "label": "SetNavMovementInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNavMovementInterface(INavMovementInterface* NavMoveInterface)"
  },
  {
    "label": "SetBlockDetectionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlockDetectionState(bool bEnable)"
  },
  {
    "label": "SetBlockDetection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlockDetection(float DistanceThreshold, float Interval, int32 NumSamples)"
  },
  {
    "label": "SetPreciseReachThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreciseReachThreshold(float AgentRadiusMultiplier, float AgentHalfHeightMultiplier)"
  },
  {
    "label": "SetLastMoveAtGoal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastMoveAtGoal(bool bFinishedAtGoal)"
  },
  {
    "label": "SetAcceptanceRadius()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAcceptanceRadius(const float InAcceptanceRadius)"
  },
  {
    "label": "SetDestinationActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDestinationActor(const AActor* InDestinationActor)"
  },
  {
    "label": "OnActorBump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorBump(AActor* SelfActor, AActor* OtherActor, FVector NormalImpulse, const FHitResult& Hit)"
  },
  {
    "label": "FinishUsingCustomLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishUsingCustomLink(INavLinkCustomInterface* CustomNavLink)"
  },
  {
    "label": "OnPathEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathEvent(FNavigationPath* InPath, ENavPathEvent::Type Event)"
  },
  {
    "label": "LogPathHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogPathHelper(const AActor* LogOwner, FNavPathSharedPtr InLogPath, const AActor* LogGoalActor)"
  },
  {
    "label": "LogPathHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogPathHelper(const AActor* LogOwner, FNavigationPath* InLogPath, const AActor* LogGoalActor)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "OnNewPawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewPawn(APawn* NewPawn)"
  },
  {
    "label": "SetMoveSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMoveSegment(int32 SegmentStartIndex)"
  },
  {
    "label": "FollowPathSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FollowPathSegment(float DeltaTime)"
  },
  {
    "label": "UpdatePathSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePathSegment()"
  },
  {
    "label": "StartUsingCustomLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartUsingCustomLink(INavLinkCustomInterface* CustomNavLink, const FVector& DestPoint)"
  },
  {
    "label": "UpdateBlockDetection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateBlockDetection()"
  },
  {
    "label": "UpdateDecelerationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDecelerationData()"
  },
  {
    "label": "ResetMoveSegmentCustomLinkCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMoveSegmentCustomLinkCache()"
  },
  {
    "label": "DetermineCurrentTargetPathPoint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DetermineCurrentTargetPathPoint(int32 StartIndex)"
  },
  {
    "label": "UpdateMovementComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateMovementComponent(bool bForce = false)"
  },
  {
    "label": "HandlePathUpdateEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePathUpdateEvent()"
  },
  {
    "label": "OnWaitingPathTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWaitingPathTimeout()"
  },
  {
    "label": "ResetBlockDetectionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBlockDetectionData()"
  },
  {
    "label": "ForceBlockDetectionUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceBlockDetectionUpdate()"
  },
  {
    "label": "UpdateMoveFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMoveFocus()"
  },
  {
    "label": "OnNavigationInitDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNavigationInitDone()"
  },
  {
    "label": "OnNavDataRegistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNavDataRegistered(ANavigationData* NavData)"
  }
]