[
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "FSoundConcurrencyManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundConcurrencyManager"
  },
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSoundConcurrencySettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundConcurrencySettings"
  },
  {
    "label": "USoundConcurrency",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundConcurrency"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FConcurrencyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConcurrencyHandle"
  },
  {
    "label": "FConcurrencySoundData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConcurrencySoundData"
  },
  {
    "label": "FConcurrencyGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConcurrencyGroup"
  },
  {
    "label": "FSoundInstanceEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundInstanceEntry"
  },
  {
    "label": "FOwnerConcurrencyMapEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOwnerConcurrencyMapEntry"
  },
  {
    "label": "FSoundConcurrencyManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundConcurrencyManager"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogAudioConcurrency, Log, All)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(float InElapsed)"
  },
  {
    "label": "SetTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTarget(float InTargetVolume, float InLerpTime)"
  },
  {
    "label": "GenerateNewID()",
    "kind": "Method",
    "detail": "Function (FConcurrencyGroupID)",
    "insertText": "GenerateNewID()"
  },
  {
    "label": "AddActiveSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActiveSound(FActiveSound& ActiveSound)"
  },
  {
    "label": "RemoveActiveSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActiveSound(FActiveSound& ActiveSound)"
  },
  {
    "label": "UpdateGeneration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGeneration(FActiveSound* NewActiveSound = nullptr)"
  },
  {
    "label": "CullSoundsDueToMaxConcurrency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CullSoundsDueToMaxConcurrency()"
  },
  {
    "label": "FSoundConcurrencyManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSoundConcurrencyManager(FAudioDevice* InAudioDevice)"
  },
  {
    "label": "RemoveActiveSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActiveSound(FActiveSound& ActiveSound)"
  },
  {
    "label": "StopDueToVoiceStealing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopDueToVoiceStealing(FActiveSound& ActiveSound)"
  },
  {
    "label": "UpdateVolumeScaleGenerations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVolumeScaleGenerations()"
  },
  {
    "label": "UpdateSoundsToCull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSoundsToCull()"
  },
  {
    "label": "CreateNewGroupsFromHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewGroupsFromHandles(\n\t\tconst FActiveSound& NewActiveSound,\n\t\tconst TArray<FConcurrencyHandle>& ConcurrencyHandles,\n\t\tTArray<FConcurrencyGroup*>& OutGroupsToApply\n\t)"
  }
]