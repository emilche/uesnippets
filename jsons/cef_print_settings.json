[
  {
    "label": "CefPrintSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefPrintSettings"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_PRINT_SETTINGS_H_ # define CEF_INCLUDE_CEF_PRINT_SETTINGS_H_ # pragma once # include<vector> # include \" include / cef_base . h \" class CefPrintSettings : public CefBaseRefCounted { public : typedef cef_color_model_t ColorModel ; typedef cef_duplex_mode_t DuplexMode ; typedef std::vector<CefRange> PageRangeList ; CefRefPtr<CefPrintSettings>)",
    "insertText": "Create()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "SetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOrientation(bool landscape)"
  },
  {
    "label": "IsLandscape()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLandscape()"
  },
  {
    "label": "SetPrinterPrintableArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrinterPrintableArea(const CefSize& physical_size_device_units, const CefRect& printable_area_device_units, bool landscape_needs_flip)"
  },
  {
    "label": "SetDeviceName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDeviceName(const CefString& name)"
  },
  {
    "label": "GetDeviceName()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetDeviceName()"
  },
  {
    "label": "SetDPI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDPI(int dpi)"
  },
  {
    "label": "GetDPI()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDPI()"
  },
  {
    "label": "SetPageRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPageRanges(const PageRangeList& ranges)"
  },
  {
    "label": "GetPageRangesCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetPageRangesCount()"
  },
  {
    "label": "GetPageRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPageRanges(PageRangeList& ranges)"
  },
  {
    "label": "SetSelectionOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionOnly(bool selection_only)"
  },
  {
    "label": "IsSelectionOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelectionOnly()"
  },
  {
    "label": "SetCollate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollate(bool collate)"
  },
  {
    "label": "WillCollate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillCollate()"
  },
  {
    "label": "SetColorModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColorModel(ColorModel model)"
  },
  {
    "label": "GetColorModel()",
    "kind": "Method",
    "detail": "Function (ColorModel)",
    "insertText": "GetColorModel()"
  },
  {
    "label": "SetCopies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCopies(int copies)"
  },
  {
    "label": "GetCopies()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCopies()"
  },
  {
    "label": "SetDuplexMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDuplexMode(DuplexMode mode)"
  },
  {
    "label": "GetDuplexMode()",
    "kind": "Method",
    "detail": "Function (DuplexMode)",
    "insertText": "GetDuplexMode()"
  }
]