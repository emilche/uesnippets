[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FWebJSScripting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebJSScripting"
  },
  {
    "label": "FWebJSParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWebJSParam"
  },
  {
    "label": "FCEFJSScripting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFJSScripting"
  },
  {
    "label": "push_macro()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_CEF3 # include \" WebJSFunction . h \" # include \" WebJSScripting . h \" # if PLATFORM_WINDOWS # include \" Windows / AllowWindowsPlatformTypes . h \" # include \" Windows / AllowWindowsPlatformAtomics . h \" # endif # pragma)",
    "insertText": "push_macro(\"OVERRIDE\") #undef OVERRIDE THIRD_PARTY_INCLUDES_START #if PLATFORM_APPLE PRAGMA_DISABLE_DEPRECATION_WARNINGS #endif #include \"include/cef_client.h\" #include \"include/cef_values.h\" #if PLATFORM_APPLE PRAGMA_ENABLE_DEPRECATION_WARNINGS #endif THIRD_PARTY_INCLUDES_END #pragma pop_macro(\"OVERRIDE\")"
  },
  {
    "label": "FCEFJSScripting()",
    "kind": "Method",
    "detail": "Function (class FWebJSScripting ; struct FWebJSParam ; # if WITH_CEF3 class FCEFJSScripting : public FWebJSScripting,public TSharedFromThis<FCEFJSScripting> { public :)",
    "insertText": "FCEFJSScripting(CefRefPtr<CefBrowser> Browser, bool bJSBindingToLoweringEnabled) : FWebJSScripting(bJSBindingToLoweringEnabled) , InternalCefBrowser(Browser)"
  },
  {
    "label": "UnbindCefBrowser()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnbindCefBrowser()"
  },
  {
    "label": "BindUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindUObject(const FString& Name, UObject* Object, bool bIsPermanent = true)"
  },
  {
    "label": "UnbindUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindUObject(const FString& Name, UObject* Object = nullptr, bool bIsPermanent = true)"
  },
  {
    "label": "OnProcessMessageReceived()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnProcessMessageReceived(CefRefPtr<CefBrowser> Browser, CefProcessId SourceProcess, CefRefPtr<CefProcessMessage> Message)"
  },
  {
    "label": "SendProcessMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendProcessMessage(CefRefPtr<CefProcessMessage> Message)"
  },
  {
    "label": "ConvertStruct()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDictionaryValue>)",
    "insertText": "ConvertStruct(UStruct* TypeInfo, const void* StructPtr)"
  },
  {
    "label": "ConvertObject()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDictionaryValue>)",
    "insertText": "ConvertObject(UObject* Object)"
  },
  {
    "label": "SetConverted()",
    "kind": "Method",
    "detail": "Function (template<ContainerType,KeyType> bool)",
    "insertText": "SetConverted(CefRefPtr<ContainerType> Container, KeyType Key, FWebJSParam& Param)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} case FWebJSParam::PTYPE_OBJECT : {)",
    "insertText": "if(Param.ObjectValue == nullptr)"
  },
  {
    "label": "ConvertObject()",
    "kind": "Method",
    "detail": "Function (} else { CefRefPtr<CefDictionaryValue> ConvertedObject =)",
    "insertText": "ConvertObject(Param.ObjectValue)"
  },
  {
    "label": "ConvertStruct()",
    "kind": "Method",
    "detail": "Function (} } case FWebJSParam::PTYPE_STRUCT : { CefRefPtr<CefDictionaryValue> ConvertedStruct =)",
    "insertText": "ConvertStruct(Param.StructValue->GetTypeInfo(), Param.StructValue->GetData())"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} case FWebJSParam::PTYPE_ARRAY : { CefRefPtr<CefListValue> ConvertedArray =)",
    "insertText": "Create()"
  },
  {
    "label": "SetConverted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConverted(ConvertedArray, i, (*Param.ArrayValue)[i])"
  },
  {
    "label": "SetList()",
    "kind": "Method",
    "detail": "Function (} return Container ->)",
    "insertText": "SetList(Key, ConvertedArray)"
  },
  {
    "label": "SetConverted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConverted(ConvertedMap, TCHAR_TO_WCHAR(*Pair.Key), Pair.Value)"
  },
  {
    "label": "SetDictionary()",
    "kind": "Method",
    "detail": "Function (} return Container ->)",
    "insertText": "SetDictionary(Key, ConvertedMap)"
  },
  {
    "label": "GetPermanentBindings()",
    "kind": "Method",
    "detail": "Function (} default : return false ; } } CefRefPtr<CefDictionaryValue>)",
    "insertText": "GetPermanentBindings()"
  },
  {
    "label": "InvokeJSFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvokeJSFunction(FGuid FunctionId, int32 ArgCount, FWebJSParam Arguments[], bool bIsError=false)"
  },
  {
    "label": "InvokeJSFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvokeJSFunction(FGuid FunctionId, const CefRefPtr<CefListValue>& FunctionArguments, bool bIsError=false)"
  },
  {
    "label": "InvokeJSErrorResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvokeJSErrorResult(FGuid FunctionId, const FString& Error)"
  },
  {
    "label": "ConvertStructArgImpl()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ConvertStructArgImpl(uint8* Args, FProperty* Param, CefRefPtr<CefListValue> List, int32 Index)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "HandleExecuteUObjectMethodMessage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HandleExecuteUObjectMethodMessage(CefRefPtr<CefListValue> MessageArguments)"
  },
  {
    "label": "HandleReleaseUObjectMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleReleaseUObjectMessage(CefRefPtr<CefListValue> MessageArguments)"
  }
]