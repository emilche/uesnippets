[
  {
    "label": "SPIEPreviewWindowTitleBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPIEPreviewWindowTitleBar"
  },
  {
    "label": "PIEPREVIEWDEVICEPROFILESELECTOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PIEPREVIEWDEVICEPROFILESELECTOR_API"
  },
  {
    "label": "FPIEPreviewDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEPreviewDevice"
  },
  {
    "label": "SGameLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGameLayerManager"
  },
  {
    "label": "FPIEPreviewDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEPreviewDevice"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FPIEPreviewDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEPreviewDevice"
  },
  {
    "label": "FPIEPreviewDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEPreviewDevice"
  },
  {
    "label": "PrepareWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareWindow(FVector2D WindowPosition, const float InitialScaleFactor, TSharedPtr<FPIEPreviewDevice> PreviewDevice)"
  },
  {
    "label": "PrepareShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareShutdown()"
  },
  {
    "label": "GetDevice()",
    "kind": "Method",
    "detail": "Function (FPIEPreviewDevice>)",
    "insertText": "GetDevice()"
  },
  {
    "label": "SetWindowScaleFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowScaleFactor(const float ScaleFactor, const bool bStore = true)"
  },
  {
    "label": "RotateWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RotateWindow()"
  },
  {
    "label": "FlipBezelVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlipBezelVisibility()"
  },
  {
    "label": "GetDefaultTitleBarSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDefaultTitleBarSize()"
  },
  {
    "label": "SetClampWindowSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClampWindowSize(const bool bClamp)"
  },
  {
    "label": "BuildSettingsMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildSettingsMenu()"
  },
  {
    "label": "SetGameLayerManagerWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGameLayerManagerWidget(TSharedPtr<class SGameLayerManager> GameLayerManager)"
  },
  {
    "label": "SetDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDevice(TSharedPtr<class FPIEPreviewDevice> InDevice)"
  },
  {
    "label": "ValidatePosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidatePosition(FVector2D& WindowPos)"
  },
  {
    "label": "ScaleWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScaleWindow(float ScaleFactor)"
  },
  {
    "label": "ComputeBezelOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeBezelOrientation()"
  },
  {
    "label": "CreatePIEPreviewBezelOverlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePIEPreviewBezelOverlay(UTexture2D* pBezelImage)"
  },
  {
    "label": "UpdateWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWindow()"
  },
  {
    "label": "ComputeDPIScaleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeDPIScaleFactor()"
  },
  {
    "label": "OnWindowMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowMoved(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "OnDisplayDPIChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisplayDPIChanged(TSharedRef<SWindow> Window)"
  },
  {
    "label": "UpdateGameLayerManagerDefaultViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGameLayerManagerDefaultViewport()"
  }
]