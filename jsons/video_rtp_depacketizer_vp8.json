[
  {
    "label": "VideoRtpDepacketizerVp8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoRtpDepacketizerVp8"
  },
  {
    "label": "VideoRtpDepacketizerVp8()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_VP8_H_ # define MODULES_RTP_RTCP_SOURCE_VIDEO_RTP_DEPACKETIZER_VP8_H_ # include<cstdint> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" modules / rtp_rtcp / source / rtp_video_header . h \" # include \" modules / rtp_rtcp / source / video_rtp_depacketizer . h \" # include \" rtc_base / copy_on_write_buffer . h \" namespace webrtc { class VideoRtpDepacketizerVp8 : public VideoRtpDepacketizer { public :)",
    "insertText": "VideoRtpDepacketizerVp8()"
  },
  {
    "label": "VideoRtpDepacketizerVp8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VideoRtpDepacketizerVp8(const VideoRtpDepacketizerVp8&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (VideoRtpDepacketizerVp8&)",
    "insertText": "operator(const VideoRtpDepacketizerVp8&)"
  },
  {
    "label": "ParseRtpPayload()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ParseRtpPayload(rtc::ArrayView<const uint8_t> rtp_payload, RTPVideoHeader* video_header)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (absl::optional<ParsedRtpPayload>)",
    "insertText": "Parse(rtc::CopyOnWriteBuffer rtp_payload)"
  }
]