[
  {
    "label": "TurnCustomizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TurnCustomizer"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RelayCredentials",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RelayCredentials"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "PortAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PortAllocator"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "generation()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "generation()"
  },
  {
    "label": "set_generation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_generation(uint32_t generation)"
  },
  {
    "label": "PortAllocator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PortAllocator()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "set_restrict_ice_credentials_change()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_restrict_ice_credentials_change(bool value)"
  },
  {
    "label": "SetConfiguration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetConfiguration(const ServerAddresses& stun_servers,\n                        const std::vector<RelayServerConfig>& turn_servers,\n                        int candidate_pool_size,\n                        bool prune_turn_ports,\n                        webrtc::TurnCustomizer* turn_customizer = nullptr,\n                        const absl::optional<int>&\n                            stun_candidate_keepalive_interval = absl::nullopt)"
  },
  {
    "label": "SetConfiguration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetConfiguration(const ServerAddresses& stun_servers,\n                        const std::vector<RelayServerConfig>& turn_servers,\n                        int candidate_pool_size,\n                        webrtc::PortPrunePolicy turn_port_prune_policy,\n                        webrtc::TurnCustomizer* turn_customizer = nullptr,\n                        const absl::optional<int>&\n                            stun_candidate_keepalive_interval = absl::nullopt)"
  },
  {
    "label": "SetIceTiebreaker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIceTiebreaker(uint64_t tiebreaker)"
  },
  {
    "label": "CreateSession()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<PortAllocatorSession>)",
    "insertText": "CreateSession(\n      absl::string_view content_name,\n      int component,\n      absl::string_view ice_ufrag,\n      absl::string_view ice_pwd)"
  },
  {
    "label": "TakePooledSession()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<PortAllocatorSession>)",
    "insertText": "TakePooledSession(\n      absl::string_view content_name,\n      int component,\n      absl::string_view ice_ufrag,\n      absl::string_view ice_pwd)"
  },
  {
    "label": "FreezeCandidatePool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreezeCandidatePool()"
  },
  {
    "label": "DiscardCandidatePool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardCandidatePool()"
  },
  {
    "label": "SetCandidateFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCandidateFilter(uint32_t filter)"
  },
  {
    "label": "GetCandidateStatsFromPooledSessions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCandidateStatsFromPooledSessions(\n      CandidateStatsList* candidate_stats_list)"
  },
  {
    "label": "GetPooledIceCredentials()",
    "kind": "Method",
    "detail": "Function (std::vector<IceParameters>)",
    "insertText": "GetPooledIceCredentials()"
  }
]