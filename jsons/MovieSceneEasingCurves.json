[
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UMovieSceneBuiltInEasingFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneBuiltInEasingFunction"
  },
  {
    "label": "UMovieSceneEasingExternalCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEasingExternalCurve"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Curves / RichCurve . h \" # include \" Generators / MovieSceneEasingFunction . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" UObject / Class . h \" # include \" UObject / Interface . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneEasingCurves . generated . h \" class UCurveFloat ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Linear)",
    "insertText": "UMETA(Grouping=Linear,DisplayName=\"Linear\"), SinIn UMETA(Grouping=Sinusoidal,DisplayName=\"Sinusoidal In\"), SinOut UMETA(Grouping=Sinusoidal,DisplayName=\"Sinusoidal Out\"), SinInOut UMETA(Grouping=Sinusoidal,DisplayName=\"Sinusoidal InOut\"), QuadIn UMETA(Grouping=Quadratic,DisplayName=\"Quadratic In\"), QuadOut UMETA(Grouping=Quadratic,DisplayName=\"Quadratic Out\"), QuadInOut UMETA(Grouping=Quadratic,DisplayName=\"Quadratic InOut\"), Cubic UMETA(Grouping = Cubic, DisplayName = \"Cubic\"), CubicIn UMETA(Grouping=Cubic,DisplayName=\"Cubic In\"), CubicOut UMETA(Grouping=Cubic,DisplayName=\"Cubic Out\"), CubicInOut UMETA(Grouping=Cubic,DisplayName=\"Cubic InOut\"), HermiteCubicInOut UMETA(Grouping = Cubic, DisplayName = \"Hermite-Cubic InOut\"), QuartIn UMETA(Grouping=Quartic,DisplayName=\"Quartic In\"), QuartOut UMETA(Grouping=Quartic,DisplayName=\"Quartic Out\"), QuartInOut UMETA(Grouping=Quartic,DisplayName=\"Quartic InOut\"), QuintIn UMETA(Grouping=Quintic,DisplayName=\"Quintic In\"), QuintOut UMETA(Grouping=Quintic,DisplayName=\"Quintic Out\"), QuintInOut UMETA(Grouping=Quintic,DisplayName=\"Quintic InOut\"), ExpoIn UMETA(Grouping=Exponential,DisplayName=\"Exponential In\"), ExpoOut UMETA(Grouping=Exponential,DisplayName=\"Exponential Out\"), ExpoInOut UMETA(Grouping=Exponential,DisplayName=\"Exponential InOut\"), CircIn UMETA(Grouping=Circular,DisplayName=\"Circular In\"), CircOut UMETA(Grouping=Circular,DisplayName=\"Circular Out\"), CircInOut UMETA(Grouping=Circular,DisplayName=\"Circular InOut\"), Custom UMETA(Grouping = Custom, DisplayName = \"Custom\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(BlueprintType, meta=(DisplayName = \"Built-In Function\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API UMovieSceneBuiltInEasingFunction(const FObjectInitializer& Initiailizer)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Evaluate(float InTime)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(meta=(DisplayName=\"Curve Asset\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API virtual float Evaluate(float InTime)"
  }
]