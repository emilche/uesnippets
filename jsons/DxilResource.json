[
  {
    "label": "DxilResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilResource"
  },
  {
    "label": "GetNumCoords()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DxilConstants . h \" # include \" dxc / DXIL / DxilCompType . h \" # include \" dxc / DXIL / DxilResourceBase . h \" namespace hlsl { class DxilResource : public DxilResourceBase { public : unsigned)",
    "insertText": "GetNumCoords(Kind ResourceKind)"
  },
  {
    "label": "GetNumDimensions()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetNumDimensions(Kind ResourceKind)"
  },
  {
    "label": "GetNumDimensionsForCalcLOD()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetNumDimensionsForCalcLOD(Kind ResourceKind)"
  },
  {
    "label": "GetNumOffsets()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetNumOffsets(Kind ResourceKind)"
  },
  {
    "label": "IsAnyTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyTexture(Kind ResourceKind)"
  },
  {
    "label": "IsAnyArrayTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyArrayTexture(Kind ResourceKind)"
  },
  {
    "label": "IsAnyTextureCube()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyTextureCube(Kind ResourceKind)"
  },
  {
    "label": "IsFeedbackTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFeedbackTexture(Kind ResourceKind)"
  },
  {
    "label": "IsArrayKind()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsArrayKind(Kind ResourceKind)"
  },
  {
    "label": "DxilResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DxilResource()"
  },
  {
    "label": "GetCompType()",
    "kind": "Method",
    "detail": "Function (CompType)",
    "insertText": "GetCompType()"
  },
  {
    "label": "SetCompType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCompType(const CompType CT)"
  },
  {
    "label": "GetRetType()",
    "kind": "Method",
    "detail": "Function (llvm::Type*)",
    "insertText": "GetRetType()"
  },
  {
    "label": "GetSampleCount()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetSampleCount()"
  },
  {
    "label": "SetSampleCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleCount(unsigned SampleCount)"
  },
  {
    "label": "GetElementStride()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetElementStride()"
  },
  {
    "label": "SetElementStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetElementStride(unsigned ElemStride)"
  },
  {
    "label": "GetBaseAlignLog2()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetBaseAlignLog2()"
  },
  {
    "label": "SetBaseAlignLog2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBaseAlignLog2(unsigned baseAlignLog2)"
  },
  {
    "label": "GetSamplerFeedbackType()",
    "kind": "Method",
    "detail": "Function (DXIL::SamplerFeedbackType)",
    "insertText": "GetSamplerFeedbackType()"
  },
  {
    "label": "SetSamplerFeedbackType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSamplerFeedbackType(DXIL::SamplerFeedbackType Value)"
  },
  {
    "label": "IsGloballyCoherent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGloballyCoherent()"
  },
  {
    "label": "SetGloballyCoherent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGloballyCoherent(bool b)"
  },
  {
    "label": "HasCounter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCounter()"
  },
  {
    "label": "SetHasCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasCounter(bool b)"
  },
  {
    "label": "IsRO()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRO()"
  },
  {
    "label": "IsRW()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRW()"
  },
  {
    "label": "SetRW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRW(bool bRW)"
  },
  {
    "label": "IsROV()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsROV()"
  },
  {
    "label": "SetROV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetROV(bool bROV)"
  },
  {
    "label": "IsAnyTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyTexture()"
  },
  {
    "label": "IsStructuredBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStructuredBuffer()"
  },
  {
    "label": "IsTypedBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTypedBuffer()"
  },
  {
    "label": "IsRawBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRawBuffer()"
  },
  {
    "label": "IsTBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTBuffer()"
  },
  {
    "label": "IsFeedbackTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFeedbackTexture()"
  },
  {
    "label": "IsAnyArrayTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyArrayTexture()"
  },
  {
    "label": "IsAnyTextureCube()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyTextureCube()"
  },
  {
    "label": "IsArrayKind()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsArrayKind()"
  },
  {
    "label": "HasAtomic64Use()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAtomic64Use()"
  },
  {
    "label": "SetHasAtomic64Use()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasAtomic64Use(bool b)"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "classof(const DxilResourceBase *R)"
  }
]