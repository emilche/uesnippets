[
  {
    "label": "FCefSchemeHandlerFactories",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCefSchemeHandlerFactories"
  },
  {
    "label": "FFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFactory"
  },
  {
    "label": "AddSchemeHandlerFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IWebBrowserSchemeHandler . h \" # if WITH_CEF3 # include \" CEFLibCefIncludes . h \" class FCefSchemeHandlerFactories { public : void)",
    "insertText": "AddSchemeHandlerFactory(FString Scheme, FString Domain, IWebBrowserSchemeHandlerFactory* WebBrowserSchemeHandlerFactory)"
  },
  {
    "label": "RemoveSchemeHandlerFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSchemeHandlerFactory(IWebBrowserSchemeHandlerFactory* WebBrowserSchemeHandlerFactory)"
  },
  {
    "label": "RegisterFactoriesWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterFactoriesWith(CefRefPtr<CefRequestContext>& Context)"
  },
  {
    "label": "FFactory()",
    "kind": "Method",
    "detail": "Function (private : struct FFactory { public :)",
    "insertText": "FFactory(FString Scheme, FString Domain, CefRefPtr<CefSchemeHandlerFactory> Factory)"
  }
]