[
  {
    "label": "ILibavDecoderAAC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILibavDecoderAAC"
  },
  {
    "label": "FInputAU",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputAU"
  },
  {
    "label": "FOutputInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutputInfo"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" libav_Decoder_Common . h \" class ILibavDecoderAAC : public ILibavDecoder { public : bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ILibavDecoderAAC,ESPMode::ThreadSafe>)",
    "insertText": "Create(const TArray<uint8>& InCodecSpecificData)"
  },
  {
    "label": "ILibavDecoderAAC()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ILibavDecoderAAC()"
  },
  {
    "label": "DecodeAccessUnit()",
    "kind": "Method",
    "detail": "Function (struct FInputAU : public ILibavDecoder::FInputAccessUnit { } ; struct FOutputInfo { uint64 ChannelMask = 0 ; int64 PTS = 0 ; int64 UserValue = 0 ; int32 NumChannels = 0 ; int32 NumSamples = 0 ; int32 SampleRate = 0 ; } ; EDecoderError)",
    "insertText": "DecodeAccessUnit(const FInputAU& InInputAccessUnit)"
  },
  {
    "label": "SendEndOfData()",
    "kind": "Method",
    "detail": "Function (EDecoderError)",
    "insertText": "SendEndOfData()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "HaveOutput()",
    "kind": "Method",
    "detail": "Function (EOutputStatus)",
    "insertText": "HaveOutput(FOutputInfo& OutInfo)"
  },
  {
    "label": "GetOutputAsS16()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOutputAsS16(int16* OutInterleavedBuffer, int32 OutBufferSizeInBytes)"
  },
  {
    "label": "GetOutputAsF32()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOutputAsF32(float* OutInterleavedBuffer, int32 OutBufferSizeInBytes)"
  }
]