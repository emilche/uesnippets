[
  {
    "label": "FBackgroundHttpFileHashHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBackgroundHttpFileHashHelper"
  },
  {
    "label": "FBackgroundHttpManagerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBackgroundHttpManagerImpl"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BackgroundHttpFileHashHelper . h \" # include \" Containers / Array . h \" # include \" Containers / Ticker . h \" # include \" Containers / UnrealString . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / Platform . h \" # include \" Interfaces / IBackgroundHttpManager . h \" # include \" Interfaces / IBackgroundHttpRequest . h \" # include \" Interfaces / IBackgroundHttpResponse . h \" # include \" Logging / LogMacros . h \" # include \" Templates / Atomic . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogBackgroundHttpManager, Log, All)"
  },
  {
    "label": "FBackgroundHttpManagerImpl()",
    "kind": "Method",
    "detail": "Function (class FBackgroundHttpManagerImpl : public IBackgroundHttpManager,public FTSTickerObjectBase { public :)",
    "insertText": "FBackgroundHttpManagerImpl()"
  },
  {
    "label": "AddRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequest(const FBackgroundHttpRequestPtr Request)"
  },
  {
    "label": "RemoveRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRequest(const FBackgroundHttpRequestPtr Request)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "DeleteAllTemporaryFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteAllTemporaryFiles()"
  },
  {
    "label": "GetMaxActiveDownloads()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMaxActiveDownloads()"
  },
  {
    "label": "SetMaxActiveDownloads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxActiveDownloads(int MaxActiveDownloads)"
  },
  {
    "label": "GetTempFileLocationForURL()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTempFileLocationForURL(const FString& URL)"
  },
  {
    "label": "CleanUpDataAfterCompletingRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpDataAfterCompletingRequest(const FBackgroundHttpRequestPtr Request)"
  },
  {
    "label": "SetCellularPreference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCellularPreference(int32 Value)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "AssociateWithAnyExistingRequest()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "AssociateWithAnyExistingRequest(const FBackgroundHttpRequestPtr Request)"
  },
  {
    "label": "CheckForExistingCompletedDownload()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForExistingCompletedDownload(const FBackgroundHttpRequestPtr Request, FString& ExistingFilePathOut, int64& ExistingFileSizeOut)"
  },
  {
    "label": "ActivatePendingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivatePendingRequests()"
  },
  {
    "label": "DeleteStaleTempFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteStaleTempFiles()"
  },
  {
    "label": "GatherAllTempFilenames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherAllTempFilenames(TArray<FString>& OutAllTempFilenames, bool bOutputAsFullPaths = false)"
  },
  {
    "label": "ConvertAllTempFilenamesToFullPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertAllTempFilenamesToFullPaths(TArray<FString>& OutFilenamesAsFullPaths, const TArray<FString>& FilenamesToConvertToFullPaths)"
  },
  {
    "label": "GatherTempFilesOlderThen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherTempFilesOlderThen(TArray<FString>& OutTimedOutTempFilenames,double SecondsToConsiderOld, TArray<FString>* OptionalFileList = nullptr)"
  },
  {
    "label": "GatherTempFilesWithoutURLMappings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherTempFilesWithoutURLMappings(TArray<FString>& OutTempFilesMissingURLMappings, TArray<FString>* OptionalFileList = nullptr)"
  },
  {
    "label": "GetFileHashHelper()",
    "kind": "Method",
    "detail": "Function (BackgroundHttpFileHashHelperRef)",
    "insertText": "GetFileHashHelper()"
  }
]