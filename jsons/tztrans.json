[
  {
    "label": "TimeZoneRule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeZoneRule"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "TimeZoneTransition()",
    "kind": "Method",
    "detail": "Function (# ifndef TZTRANS_H # define TZTRANS_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / uobject . h \" U_NAMESPACE_BEGIN class TimeZoneRule ; class U_I18N_API TimeZoneTransition : public UObject { public :)",
    "insertText": "TimeZoneTransition(UDate time, const TimeZoneRule& from, const TimeZoneRule& to)"
  },
  {
    "label": "TimeZoneTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TimeZoneTransition()"
  },
  {
    "label": "TimeZoneTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TimeZoneTransition(const TimeZoneTransition& source)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (TimeZoneTransition*)",
    "insertText": "clone(void)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TimeZoneTransition&)",
    "insertText": "operator(const TimeZoneTransition& right)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const TimeZoneTransition& that)"
  },
  {
    "label": "getTime()",
    "kind": "Method",
    "detail": "Function (UDate)",
    "insertText": "getTime(void)"
  },
  {
    "label": "setTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTime(UDate time)"
  },
  {
    "label": "getFrom()",
    "kind": "Method",
    "detail": "Function (const TimeZoneRule*)",
    "insertText": "getFrom(void)"
  },
  {
    "label": "setFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFrom(const TimeZoneRule& from)"
  },
  {
    "label": "adoptFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptFrom(TimeZoneRule* from)"
  },
  {
    "label": "setTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTo(const TimeZoneRule& to)"
  },
  {
    "label": "adoptTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptTo(TimeZoneRule* to)"
  },
  {
    "label": "getTo()",
    "kind": "Method",
    "detail": "Function (const TimeZoneRule*)",
    "insertText": "getTo(void)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (private : UDate fTime ; TimeZoneRule* fFrom ; TimeZoneRule* fTo ; public : UClassID U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID(void)"
  }
]