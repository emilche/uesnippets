[
  {
    "label": "ST_DLL_LINK",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ST_DLL_LINK"
  },
  {
    "label": "ETermHint",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETermHint"
  },
  {
    "label": "ETimeCompare",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETimeCompare"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stdlib . h> # include \" Core / ExportBegin . h \" # include \" Core / Types . h \" # include \" Core / FixedString . h \" # ifdef ST_SETS_PACKING_INTERNALLY # pragma)",
    "insertText": "pack(push, 4)"
  },
  {
    "label": "CFileSystem()",
    "kind": "Method",
    "detail": "Function (class ST_DLL_LINK CFileSystem { public : enum ETermHint { SHORT_TERM,LONG_TERM } ; enum ETimeCompare { EQUAL,FIRST_OLDER,SECOND_OLDER,FILE_ERROR } ; ~)",
    "insertText": "CFileSystem()"
  },
  {
    "label": "FileExists()",
    "kind": "Method",
    "detail": "Function (} st_bool)",
    "insertText": "FileExists(const st_char* pFilename)"
  },
  {
    "label": "FileSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "FileSize(const st_char* pFilename)"
  },
  {
    "label": "LoadFile()",
    "kind": "Method",
    "detail": "Function (st_byte*)",
    "insertText": "LoadFile(const st_char* pFilename, ETermHint eTermHint = SHORT_TERM)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release(st_byte* pBuffer)"
  },
  {
    "label": "CleanPlatformFilename()",
    "kind": "Method",
    "detail": "Function (CFixedString)",
    "insertText": "CleanPlatformFilename(const st_char* pFilename)"
  },
  {
    "label": "CleanPlatformFilename()",
    "kind": "Method",
    "detail": "Function (CFixedString)",
    "insertText": "CleanPlatformFilename(const CFixedString& strFilename)"
  },
  {
    "label": "CompareFileTimes()",
    "kind": "Method",
    "detail": "Function (} ETimeCompare)",
    "insertText": "CompareFileTimes(const st_char* pFilenameOne, const st_char* pFilenameTwo)"
  }
]