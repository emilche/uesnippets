[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FCacheBucket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheBucket"
  },
  {
    "label": "FCacheKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheKey"
  },
  {
    "label": "IsValidName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" CoreTypes . h \" # include \" IO / IoHash . h \" # include \" Misc / AsciiSet . h \" # include \" Misc / CString . h \" # include \" Templates / TypeHash . h \" # define class FCbFieldView ; class FCbWriter ; namespace UE::DerivedData { class FCacheBucket { public : int32 MaxNameLen = 6 3 ; template<CharType> bool)",
    "insertText": "IsValidName(TStringView<CharType> Name)"
  },
  {
    "label": "Valid()",
    "kind": "Method",
    "detail": "Function (FAsciiSet)",
    "insertText": "Valid(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\")"
  },
  {
    "label": "FCacheBucket()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCacheBucket()"
  },
  {
    "label": "FCacheBucket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCacheBucket(FUtf8StringView Name)"
  },
  {
    "label": "FCacheBucket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCacheBucket(FWideStringView Name)"
  },
  {
    "label": "FCacheBucket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCacheBucket(FUtf8StringView Name, FStringView DisplayName)"
  },
  {
    "label": "FCacheBucket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCacheBucket(FWideStringView Name, FStringView DisplayName)"
  },
  {
    "label": "ToDisplayName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToDisplayName(FStringBuilderBase& OutDisplayName)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FCacheBucket Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(FCacheBucket Bucket)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FAnsiStringView)",
    "insertText": "ToString()"
  },
  {
    "label": "ToCString()",
    "kind": "Method",
    "detail": "Function (const ANSICHAR*)",
    "insertText": "ToCString()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (const FCacheBucket& BucketA = A . Bucket ; const FCacheBucket& BucketB = B . Bucket ; return BucketA = = BucketB ? A . Hash<B . Hash : BucketA<BucketB ; } uint32)",
    "insertText": "GetTypeHash(const FCacheKey& Key)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<CharType> TStringBuilderBase<CharType>&)",
    "insertText": "operator(TStringBuilderBase<CharType>& Builder, const FCacheBucket& Bucket)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, FCacheBucket Bucket)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FCacheBucket& OutBucket)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<CharType> TStringBuilderBase<CharType>&)",
    "insertText": "operator(TStringBuilderBase<CharType>& Builder, const FCacheKey& Key)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, const FCacheKey& Key)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FCacheKey& OutKey)"
  },
  {
    "label": "ConvertLegacyCacheKey()",
    "kind": "Method",
    "detail": "Function (FCacheKey)",
    "insertText": "ConvertLegacyCacheKey(FStringView Key)"
  }
]