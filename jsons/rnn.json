[
  {
    "label": "RnnVad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RnnVad"
  },
  {
    "label": "RnnVad()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_RNN_H_ # define MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_RNN_H_ # include<stddef . h> # include<sys / types . h> # include<array> # include<vector> # include \" api / array_view . h \" # include \" modules / audio_processing / agc2 / cpu_features . h \" # include \" modules / audio_processing / agc2 / rnn_vad / common . h \" # include \" modules / audio_processing / agc2 / rnn_vad / rnn_fc . h \" # include \" modules / audio_processing / agc2 / rnn_vad / rnn_gru . h \" namespace webrtc { namespace rnn_vad { class RnnVad { public :)",
    "insertText": "RnnVad(const AvailableCpuFeatures& cpu_features)"
  },
  {
    "label": "RnnVad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RnnVad(const RnnVad&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RnnVad&)",
    "insertText": "operator(const RnnVad&)"
  },
  {
    "label": "RnnVad()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RnnVad()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ComputeVadProbability()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeVadProbability(rtc::ArrayView<const float, kFeatureVectorSize> feature_vector, bool is_silence)"
  }
]