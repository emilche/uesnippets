[
  {
    "label": "ir_function_signature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ir_function_signature"
  },
  {
    "label": "FCodeBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCodeBackend"
  },
  {
    "label": "exec_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "exec_list"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "FHlslCrossCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHlslCrossCompilerContext"
  },
  {
    "label": "ILanguageSpec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ILanguageSpec"
  },
  {
    "label": "_mesa_glsl_parse_state",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_mesa_glsl_parse_state"
  },
  {
    "label": "exec_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "exec_list"
  },
  {
    "label": "FCRTMemLeakScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCRTMemLeakScope"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Validate(Instructions, ParseState)"
  },
  {
    "label": "Optimize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Optimize(exec_list* Instructions, _mesa_glsl_parse_state* ParseState)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(exec_list* Instructions, _mesa_glsl_parse_state* ParseState)"
  },
  {
    "label": "FHlslCrossCompilerContext()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FHlslCrossCompilerContext(int InFlags, EHlslShaderFrequency InShaderFrequency, EHlslCompileTarget InCompileTarget)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(\n\t\tconst char* InSourceFilename,\n\t\tstruct ILanguageSpec* InLanguageSpec)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Run(\n\t\tconst char* InShaderSource,\n\t\tconst char* InEntryPoint,\n\t\tFCodeBackend* InShaderBackEnd,\n\t\tchar** OutShaderSource,\n\t\tchar** OutErrorLog\n\t\t)"
  },
  {
    "label": "RunFrontend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunFrontend(const char** InOutShaderSource)"
  },
  {
    "label": "RunBackend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunBackend(\n\t\tconst char* InShaderSource,\n\t\tconst char* InEntryPoint,\n\t\tFCodeBackend* InShaderBackEnd)"
  },
  {
    "label": "_CrtMemCheckpoint()",
    "kind": "Method",
    "detail": "Function (ENABLE_CRT_MEM_LEAKS)",
    "insertText": "_CrtMemCheckpoint(&Begin)"
  },
  {
    "label": "_CrtMemCheckpoint()",
    "kind": "Method",
    "detail": "Function (ENABLE_CRT_MEM_LEAKS)",
    "insertText": "_CrtMemCheckpoint(&End)"
  },
  {
    "label": "_CrtSetBreakAlloc()",
    "kind": "Method",
    "detail": "Function (ENABLE_CRT_MEM_LEAKS)",
    "insertText": "_CrtSetBreakAlloc(Block)"
  },
  {
    "label": "_CrtCheckMemory()",
    "kind": "Method",
    "detail": "Function (ENABLE_CRT_MEM_LEAKS)",
    "insertText": "_CrtCheckMemory()"
  }
]