[
  {
    "label": "glBlendBarrierKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendBarrierKHR(void)"
  },
  {
    "label": "glDebugMessageControlKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)"
  },
  {
    "label": "glDebugMessageInsertKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)"
  },
  {
    "label": "glDebugMessageCallbackKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void *userParam)"
  },
  {
    "label": "glGetDebugMessageLogKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)"
  },
  {
    "label": "glPushDebugGroupKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar *message)"
  },
  {
    "label": "glPopDebugGroupKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPopDebugGroupKHR(void)"
  },
  {
    "label": "glObjectLabelKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar *label)"
  },
  {
    "label": "glGetObjectLabelKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label)"
  },
  {
    "label": "glObjectPtrLabelKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glObjectPtrLabelKHR(const void *ptr, GLsizei length, const GLchar *label)"
  },
  {
    "label": "glGetObjectPtrLabelKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetObjectPtrLabelKHR(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)"
  },
  {
    "label": "glGetPointervKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPointervKHR(GLenum pname, void **params)"
  },
  {
    "label": "glMaxShaderCompilerThreadsKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMaxShaderCompilerThreadsKHR(GLuint count)"
  },
  {
    "label": "glGetGraphicsResetStatusKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetGraphicsResetStatusKHR(void)"
  },
  {
    "label": "glReadnPixelsKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glReadnPixelsKHR(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)"
  },
  {
    "label": "glGetnUniformfvKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetnUniformfvKHR(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)"
  },
  {
    "label": "glGetnUniformivKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetnUniformivKHR(GLuint program, GLint location, GLsizei bufSize, GLint *params)"
  },
  {
    "label": "glGetnUniformuivKHR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetnUniformuivKHR(GLuint program, GLint location, GLsizei bufSize, GLuint *params)"
  },
  {
    "label": "glEGLImageTargetTexture2DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image)"
  },
  {
    "label": "glEGLImageTargetRenderbufferStorageOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image)"
  },
  {
    "label": "glCopyImageSubDataOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCopyImageSubDataOES(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)"
  },
  {
    "label": "glEnableiOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEnableiOES(GLenum target, GLuint index)"
  },
  {
    "label": "glDisableiOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDisableiOES(GLenum target, GLuint index)"
  },
  {
    "label": "glBlendEquationiOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendEquationiOES(GLuint buf, GLenum mode)"
  },
  {
    "label": "glBlendEquationSeparateiOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendEquationSeparateiOES(GLuint buf, GLenum modeRGB, GLenum modeAlpha)"
  },
  {
    "label": "glBlendFunciOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendFunciOES(GLuint buf, GLenum src, GLenum dst)"
  },
  {
    "label": "glBlendFuncSeparateiOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendFuncSeparateiOES(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)"
  },
  {
    "label": "glColorMaskiOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glColorMaskiOES(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)"
  },
  {
    "label": "glIsEnablediOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsEnablediOES(GLenum target, GLuint index)"
  },
  {
    "label": "glDrawElementsBaseVertexOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex)"
  },
  {
    "label": "glDrawRangeElementsBaseVertexOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawRangeElementsBaseVertexOES(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex)"
  },
  {
    "label": "glDrawElementsInstancedBaseVertexOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedBaseVertexOES(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex)"
  },
  {
    "label": "glMultiDrawElementsBaseVertexEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawElementsBaseVertexEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei drawcount, const GLint *basevertex)"
  },
  {
    "label": "glFramebufferTextureOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTextureOES(GLenum target, GLenum attachment, GLuint texture, GLint level)"
  },
  {
    "label": "glGetProgramBinaryOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, void *binary)"
  },
  {
    "label": "glProgramBinaryOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramBinaryOES(GLuint program, GLenum binaryFormat, const void *binary, GLint length)"
  },
  {
    "label": "glMapBufferOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMapBufferOES(GLenum target, GLenum access)"
  },
  {
    "label": "glUnmapBufferOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUnmapBufferOES(GLenum target)"
  },
  {
    "label": "glGetBufferPointervOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetBufferPointervOES(GLenum target, GLenum pname, void **params)"
  },
  {
    "label": "glPrimitiveBoundingBoxOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPrimitiveBoundingBoxOES(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW)"
  },
  {
    "label": "glMinSampleShadingOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMinSampleShadingOES(GLfloat value)"
  },
  {
    "label": "glPatchParameteriOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPatchParameteriOES(GLenum pname, GLint value)"
  },
  {
    "label": "glTexImage3DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void *pixels)"
  },
  {
    "label": "glTexSubImage3DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *pixels)"
  },
  {
    "label": "glCopyTexSubImage3DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)"
  },
  {
    "label": "glCompressedTexImage3DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void *data)"
  },
  {
    "label": "glCompressedTexSubImage3DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void *data)"
  },
  {
    "label": "glFramebufferTexture3DOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)"
  },
  {
    "label": "glTexParameterIivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexParameterIivOES(GLenum target, GLenum pname, const GLint *params)"
  },
  {
    "label": "glTexParameterIuivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexParameterIuivOES(GLenum target, GLenum pname, const GLuint *params)"
  },
  {
    "label": "glGetTexParameterIivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTexParameterIivOES(GLenum target, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetTexParameterIuivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTexParameterIuivOES(GLenum target, GLenum pname, GLuint *params)"
  },
  {
    "label": "glSamplerParameterIivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSamplerParameterIivOES(GLuint sampler, GLenum pname, const GLint *param)"
  },
  {
    "label": "glSamplerParameterIuivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSamplerParameterIuivOES(GLuint sampler, GLenum pname, const GLuint *param)"
  },
  {
    "label": "glGetSamplerParameterIivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSamplerParameterIivOES(GLuint sampler, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetSamplerParameterIuivOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSamplerParameterIuivOES(GLuint sampler, GLenum pname, GLuint *params)"
  },
  {
    "label": "glTexBufferOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexBufferOES(GLenum target, GLenum internalformat, GLuint buffer)"
  },
  {
    "label": "glTexBufferRangeOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexBufferRangeOES(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)"
  },
  {
    "label": "glTexStorage3DMultisampleOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorage3DMultisampleOES(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)"
  },
  {
    "label": "glTextureViewOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureViewOES(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)"
  },
  {
    "label": "glBindVertexArrayOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBindVertexArrayOES(GLuint array)"
  },
  {
    "label": "glDeleteVertexArraysOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteVertexArraysOES(GLsizei n, const GLuint *arrays)"
  },
  {
    "label": "glGenVertexArraysOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenVertexArraysOES(GLsizei n, GLuint *arrays)"
  },
  {
    "label": "glIsVertexArrayOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsVertexArrayOES(GLuint array)"
  },
  {
    "label": "glViewportArrayvOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportArrayvOES(GLuint first, GLsizei count, const GLfloat *v)"
  },
  {
    "label": "glViewportIndexedfOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportIndexedfOES(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)"
  },
  {
    "label": "glViewportIndexedfvOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportIndexedfvOES(GLuint index, const GLfloat *v)"
  },
  {
    "label": "glScissorArrayvOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorArrayvOES(GLuint first, GLsizei count, const GLint *v)"
  },
  {
    "label": "glScissorIndexedOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorIndexedOES(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)"
  },
  {
    "label": "glScissorIndexedvOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorIndexedvOES(GLuint index, const GLint *v)"
  },
  {
    "label": "glDepthRangeArrayfvOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDepthRangeArrayfvOES(GLuint first, GLsizei count, const GLfloat *v)"
  },
  {
    "label": "glDepthRangeIndexedfOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDepthRangeIndexedfOES(GLuint index, GLfloat n, GLfloat f)"
  },
  {
    "label": "glGetFloati_vOES()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFloati_vOES(GLenum target, GLuint index, GLfloat *data)"
  },
  {
    "label": "glRenderbufferStorageMultisampleAdvancedAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRenderbufferStorageMultisampleAdvancedAMD(GLenum target, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glNamedRenderbufferStorageMultisampleAdvancedAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glNamedRenderbufferStorageMultisampleAdvancedAMD(GLuint renderbuffer, GLsizei samples, GLsizei storageSamples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glGetPerfMonitorGroupsAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups)"
  },
  {
    "label": "glGetPerfMonitorCountersAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters)"
  },
  {
    "label": "glGetPerfMonitorGroupStringAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)"
  },
  {
    "label": "glGetPerfMonitorCounterStringAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)"
  },
  {
    "label": "glGetPerfMonitorCounterInfoAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void *data)"
  },
  {
    "label": "glGenPerfMonitorsAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenPerfMonitorsAMD(GLsizei n, GLuint *monitors)"
  },
  {
    "label": "glDeletePerfMonitorsAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors)"
  },
  {
    "label": "glSelectPerfMonitorCountersAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList)"
  },
  {
    "label": "glBeginPerfMonitorAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBeginPerfMonitorAMD(GLuint monitor)"
  },
  {
    "label": "glEndPerfMonitorAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEndPerfMonitorAMD(GLuint monitor)"
  },
  {
    "label": "glGetPerfMonitorCounterDataAMD()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)"
  },
  {
    "label": "glBlitFramebufferANGLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"
  },
  {
    "label": "glRenderbufferStorageMultisampleANGLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glDrawArraysInstancedANGLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount)"
  },
  {
    "label": "glDrawElementsInstancedANGLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)"
  },
  {
    "label": "glVertexAttribDivisorANGLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glVertexAttribDivisorANGLE(GLuint index, GLuint divisor)"
  },
  {
    "label": "glGetTranslatedShaderSourceANGLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)"
  },
  {
    "label": "glCopyTextureLevelsAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount)"
  },
  {
    "label": "glRenderbufferStorageMultisampleAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glResolveMultisampleFramebufferAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glResolveMultisampleFramebufferAPPLE(void)"
  },
  {
    "label": "glFenceSyncAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFenceSyncAPPLE(GLenum condition, GLbitfield flags)"
  },
  {
    "label": "glIsSyncAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsSyncAPPLE(GLsync sync)"
  },
  {
    "label": "glDeleteSyncAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteSyncAPPLE(GLsync sync)"
  },
  {
    "label": "glClientWaitSyncAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout)"
  },
  {
    "label": "glWaitSyncAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout)"
  },
  {
    "label": "glGetInteger64vAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetInteger64vAPPLE(GLenum pname, GLint64 *params)"
  },
  {
    "label": "glGetSyncivAPPLE()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei count, GLsizei *length, GLint *values)"
  },
  {
    "label": "glEGLImageTargetTexStorageEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEGLImageTargetTexStorageEXT(GLenum target, GLeglImageOES image, const GLint* attrib_list)"
  },
  {
    "label": "glEGLImageTargetTextureStorageEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEGLImageTargetTextureStorageEXT(GLuint texture, GLeglImageOES image, const GLint* attrib_list)"
  },
  {
    "label": "glDrawArraysInstancedBaseInstanceEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawArraysInstancedBaseInstanceEXT(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance)"
  },
  {
    "label": "glDrawElementsInstancedBaseInstanceEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance)"
  },
  {
    "label": "glDrawElementsInstancedBaseVertexBaseInstanceEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedBaseVertexBaseInstanceEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance)"
  },
  {
    "label": "glBindFragDataLocationIndexedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBindFragDataLocationIndexedEXT(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name)"
  },
  {
    "label": "glBindFragDataLocationEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name)"
  },
  {
    "label": "glGetProgramResourceLocationIndexEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetProgramResourceLocationIndexEXT(GLuint program, GLenum programInterface, const GLchar *name)"
  },
  {
    "label": "glGetFragDataIndexEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFragDataIndexEXT(GLuint program, const GLchar *name)"
  },
  {
    "label": "glBufferStorageEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBufferStorageEXT(GLenum target, GLsizeiptr size, const void *data, GLbitfield flags)"
  },
  {
    "label": "glClearTexImageEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glClearTexImageEXT(GLuint texture, GLint level, GLenum format, GLenum type, const void *data)"
  },
  {
    "label": "glClearTexSubImageEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glClearTexSubImageEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void *data)"
  },
  {
    "label": "glClipControlEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glClipControlEXT(GLenum origin, GLenum depth)"
  },
  {
    "label": "glCopyImageSubDataEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCopyImageSubDataEXT(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth)"
  },
  {
    "label": "glLabelObjectEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glLabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar *label)"
  },
  {
    "label": "glGetObjectLabelEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label)"
  },
  {
    "label": "glInsertEventMarkerEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glInsertEventMarkerEXT(GLsizei length, const GLchar *marker)"
  },
  {
    "label": "glPushGroupMarkerEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPushGroupMarkerEXT(GLsizei length, const GLchar *marker)"
  },
  {
    "label": "glPopGroupMarkerEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPopGroupMarkerEXT(void)"
  },
  {
    "label": "glDiscardFramebufferEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum *attachments)"
  },
  {
    "label": "glGenQueriesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenQueriesEXT(GLsizei n, GLuint *ids)"
  },
  {
    "label": "glDeleteQueriesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteQueriesEXT(GLsizei n, const GLuint *ids)"
  },
  {
    "label": "glIsQueryEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsQueryEXT(GLuint id)"
  },
  {
    "label": "glBeginQueryEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBeginQueryEXT(GLenum target, GLuint id)"
  },
  {
    "label": "glEndQueryEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEndQueryEXT(GLenum target)"
  },
  {
    "label": "glQueryCounterEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glQueryCounterEXT(GLuint id, GLenum target)"
  },
  {
    "label": "glGetQueryivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetQueryivEXT(GLenum target, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetQueryObjectivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetQueryObjectivEXT(GLuint id, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetQueryObjectuivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint *params)"
  },
  {
    "label": "glGetQueryObjecti64vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 *params)"
  },
  {
    "label": "glGetQueryObjectui64vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 *params)"
  },
  {
    "label": "glGetInteger64vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetInteger64vEXT(GLenum pname, GLint64 *data)"
  },
  {
    "label": "glDrawBuffersEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawBuffersEXT(GLsizei n, const GLenum *bufs)"
  },
  {
    "label": "glEnableiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEnableiEXT(GLenum target, GLuint index)"
  },
  {
    "label": "glDisableiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDisableiEXT(GLenum target, GLuint index)"
  },
  {
    "label": "glBlendEquationiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendEquationiEXT(GLuint buf, GLenum mode)"
  },
  {
    "label": "glBlendEquationSeparateiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendEquationSeparateiEXT(GLuint buf, GLenum modeRGB, GLenum modeAlpha)"
  },
  {
    "label": "glBlendFunciEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendFunciEXT(GLuint buf, GLenum src, GLenum dst)"
  },
  {
    "label": "glBlendFuncSeparateiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendFuncSeparateiEXT(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)"
  },
  {
    "label": "glColorMaskiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glColorMaskiEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)"
  },
  {
    "label": "glIsEnablediEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsEnablediEXT(GLenum target, GLuint index)"
  },
  {
    "label": "glDrawElementsBaseVertexEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLint basevertex)"
  },
  {
    "label": "glDrawRangeElementsBaseVertexEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawRangeElementsBaseVertexEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void *indices, GLint basevertex)"
  },
  {
    "label": "glDrawElementsInstancedBaseVertexEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedBaseVertexEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex)"
  },
  {
    "label": "glDrawArraysInstancedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount)"
  },
  {
    "label": "glDrawElementsInstancedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)"
  },
  {
    "label": "glDrawTransformFeedbackEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawTransformFeedbackEXT(GLenum mode, GLuint id)"
  },
  {
    "label": "glDrawTransformFeedbackInstancedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawTransformFeedbackInstancedEXT(GLenum mode, GLuint id, GLsizei instancecount)"
  },
  {
    "label": "glBufferStorageExternalEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBufferStorageExternalEXT(GLenum target, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags)"
  },
  {
    "label": "glNamedBufferStorageExternalEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glNamedBufferStorageExternalEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLeglClientBufferEXT clientBuffer, GLbitfield flags)"
  },
  {
    "label": "glGetFragmentShadingRatesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFragmentShadingRatesEXT(GLsizei samples, GLsizei maxCount, GLsizei *count, GLenum *shadingRates)"
  },
  {
    "label": "glShadingRateEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateEXT(GLenum rate)"
  },
  {
    "label": "glShadingRateCombinerOpsEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateCombinerOpsEXT(GLenum combinerOp0, GLenum combinerOp1)"
  },
  {
    "label": "glFramebufferShadingRateEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferShadingRateEXT(GLenum target, GLenum attachment, GLuint texture, GLint baseLayer, GLsizei numLayers, GLsizei texelWidth, GLsizei texelHeight)"
  },
  {
    "label": "glFramebufferTextureEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level)"
  },
  {
    "label": "glVertexAttribDivisorEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glVertexAttribDivisorEXT(GLuint index, GLuint divisor)"
  },
  {
    "label": "glMapBufferRangeEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)"
  },
  {
    "label": "glFlushMappedBufferRangeEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length)"
  },
  {
    "label": "glGetUnsignedBytevEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetUnsignedBytevEXT(GLenum pname, GLubyte *data)"
  },
  {
    "label": "glGetUnsignedBytei_vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetUnsignedBytei_vEXT(GLenum target, GLuint index, GLubyte *data)"
  },
  {
    "label": "glDeleteMemoryObjectsEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteMemoryObjectsEXT(GLsizei n, const GLuint *memoryObjects)"
  },
  {
    "label": "glIsMemoryObjectEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsMemoryObjectEXT(GLuint memoryObject)"
  },
  {
    "label": "glCreateMemoryObjectsEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCreateMemoryObjectsEXT(GLsizei n, GLuint *memoryObjects)"
  },
  {
    "label": "glMemoryObjectParameterivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, const GLint *params)"
  },
  {
    "label": "glGetMemoryObjectParameterivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetMemoryObjectParameterivEXT(GLuint memoryObject, GLenum pname, GLint *params)"
  },
  {
    "label": "glTexStorageMem2DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorageMem2DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTexStorageMem2DMultisampleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorageMem2DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTexStorageMem3DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorageMem3DEXT(GLenum target, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTexStorageMem3DMultisampleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorageMem3DMultisampleEXT(GLenum target, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glBufferStorageMemEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBufferStorageMemEXT(GLenum target, GLsizeiptr size, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTextureStorageMem2DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorageMem2DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTextureStorageMem2DMultisampleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorageMem2DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTextureStorageMem3DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorageMem3DEXT(GLuint texture, GLsizei levels, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTextureStorageMem3DMultisampleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorageMem3DMultisampleEXT(GLuint texture, GLsizei samples, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glNamedBufferStorageMemEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glNamedBufferStorageMemEXT(GLuint buffer, GLsizeiptr size, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glImportMemoryFdEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glImportMemoryFdEXT(GLuint memory, GLuint64 size, GLenum handleType, GLint fd)"
  },
  {
    "label": "glImportMemoryWin32HandleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glImportMemoryWin32HandleEXT(GLuint memory, GLuint64 size, GLenum handleType, void *handle)"
  },
  {
    "label": "glImportMemoryWin32NameEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glImportMemoryWin32NameEXT(GLuint memory, GLuint64 size, GLenum handleType, const void *name)"
  },
  {
    "label": "glMultiDrawArraysEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)"
  },
  {
    "label": "glMultiDrawElementsEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawElementsEXT(GLenum mode, const GLsizei *count, GLenum type, const void *const*indices, GLsizei primcount)"
  },
  {
    "label": "glMultiDrawArraysIndirectEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawArraysIndirectEXT(GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride)"
  },
  {
    "label": "glMultiDrawElementsIndirectEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawElementsIndirectEXT(GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride)"
  },
  {
    "label": "glRenderbufferStorageMultisampleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glFramebufferTexture2DMultisampleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples)"
  },
  {
    "label": "glReadBufferIndexedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glReadBufferIndexedEXT(GLenum src, GLint index)"
  },
  {
    "label": "glDrawBuffersIndexedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawBuffersIndexedEXT(GLint n, const GLenum *location, const GLint *indices)"
  },
  {
    "label": "glGetIntegeri_vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetIntegeri_vEXT(GLenum target, GLuint index, GLint *data)"
  },
  {
    "label": "glPolygonOffsetClampEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPolygonOffsetClampEXT(GLfloat factor, GLfloat units, GLfloat clamp)"
  },
  {
    "label": "glPrimitiveBoundingBoxEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPrimitiveBoundingBoxEXT(GLfloat minX, GLfloat minY, GLfloat minZ, GLfloat minW, GLfloat maxX, GLfloat maxY, GLfloat maxZ, GLfloat maxW)"
  },
  {
    "label": "glRasterSamplesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRasterSamplesEXT(GLuint samples, GLboolean fixedsamplelocations)"
  },
  {
    "label": "glGetGraphicsResetStatusEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetGraphicsResetStatusEXT(void)"
  },
  {
    "label": "glReadnPixelsEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)"
  },
  {
    "label": "glGetnUniformfvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)"
  },
  {
    "label": "glGetnUniformivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint *params)"
  },
  {
    "label": "glGenSemaphoresEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenSemaphoresEXT(GLsizei n, GLuint *semaphores)"
  },
  {
    "label": "glDeleteSemaphoresEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteSemaphoresEXT(GLsizei n, const GLuint *semaphores)"
  },
  {
    "label": "glIsSemaphoreEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsSemaphoreEXT(GLuint semaphore)"
  },
  {
    "label": "glSemaphoreParameterui64vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, const GLuint64 *params)"
  },
  {
    "label": "glGetSemaphoreParameterui64vEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSemaphoreParameterui64vEXT(GLuint semaphore, GLenum pname, GLuint64 *params)"
  },
  {
    "label": "glWaitSemaphoreEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glWaitSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *srcLayouts)"
  },
  {
    "label": "glSignalSemaphoreEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSignalSemaphoreEXT(GLuint semaphore, GLuint numBufferBarriers, const GLuint *buffers, GLuint numTextureBarriers, const GLuint *textures, const GLenum *dstLayouts)"
  },
  {
    "label": "glImportSemaphoreFdEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glImportSemaphoreFdEXT(GLuint semaphore, GLenum handleType, GLint fd)"
  },
  {
    "label": "glImportSemaphoreWin32HandleEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glImportSemaphoreWin32HandleEXT(GLuint semaphore, GLenum handleType, void *handle)"
  },
  {
    "label": "glImportSemaphoreWin32NameEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glImportSemaphoreWin32NameEXT(GLuint semaphore, GLenum handleType, const void *name)"
  },
  {
    "label": "glActiveShaderProgramEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glActiveShaderProgramEXT(GLuint pipeline, GLuint program)"
  },
  {
    "label": "glBindProgramPipelineEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBindProgramPipelineEXT(GLuint pipeline)"
  },
  {
    "label": "glCreateShaderProgramvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar **strings)"
  },
  {
    "label": "glDeleteProgramPipelinesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteProgramPipelinesEXT(GLsizei n, const GLuint *pipelines)"
  },
  {
    "label": "glGenProgramPipelinesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenProgramPipelinesEXT(GLsizei n, GLuint *pipelines)"
  },
  {
    "label": "glGetProgramPipelineInfoLogEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)"
  },
  {
    "label": "glGetProgramPipelineivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint *params)"
  },
  {
    "label": "glIsProgramPipelineEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsProgramPipelineEXT(GLuint pipeline)"
  },
  {
    "label": "glProgramParameteriEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramParameteriEXT(GLuint program, GLenum pname, GLint value)"
  },
  {
    "label": "glProgramUniform1fEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0)"
  },
  {
    "label": "glProgramUniform1fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)"
  },
  {
    "label": "glProgramUniform1iEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1iEXT(GLuint program, GLint location, GLint v0)"
  },
  {
    "label": "glProgramUniform1ivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)"
  },
  {
    "label": "glProgramUniform2fEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1)"
  },
  {
    "label": "glProgramUniform2fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)"
  },
  {
    "label": "glProgramUniform2iEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1)"
  },
  {
    "label": "glProgramUniform2ivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)"
  },
  {
    "label": "glProgramUniform3fEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)"
  },
  {
    "label": "glProgramUniform3fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)"
  },
  {
    "label": "glProgramUniform3iEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)"
  },
  {
    "label": "glProgramUniform3ivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)"
  },
  {
    "label": "glProgramUniform4fEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)"
  },
  {
    "label": "glProgramUniform4fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)"
  },
  {
    "label": "glProgramUniform4iEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)"
  },
  {
    "label": "glProgramUniform4ivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)"
  },
  {
    "label": "glProgramUniformMatrix2fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix3fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix4fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glUseProgramStagesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program)"
  },
  {
    "label": "glValidateProgramPipelineEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glValidateProgramPipelineEXT(GLuint pipeline)"
  },
  {
    "label": "glProgramUniform1uiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0)"
  },
  {
    "label": "glProgramUniform2uiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1)"
  },
  {
    "label": "glProgramUniform3uiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)"
  },
  {
    "label": "glProgramUniform4uiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)"
  },
  {
    "label": "glProgramUniform1uivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)"
  },
  {
    "label": "glProgramUniform2uivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)"
  },
  {
    "label": "glProgramUniform3uivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)"
  },
  {
    "label": "glProgramUniform4uivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)"
  },
  {
    "label": "glProgramUniformMatrix2x3fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix3x2fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix2x4fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix4x2fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix3x4fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glProgramUniformMatrix4x3fvEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glFramebufferFetchBarrierEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferFetchBarrierEXT(void)"
  },
  {
    "label": "glFramebufferPixelLocalStorageSizeEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferPixelLocalStorageSizeEXT(GLuint target, GLsizei size)"
  },
  {
    "label": "glGetFramebufferPixelLocalStorageSizeEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFramebufferPixelLocalStorageSizeEXT(GLuint target)"
  },
  {
    "label": "glClearPixelLocalStorageuiEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glClearPixelLocalStorageuiEXT(GLsizei offset, GLsizei n, const GLuint *values)"
  },
  {
    "label": "glTexPageCommitmentEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexPageCommitmentEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean commit)"
  },
  {
    "label": "glPatchParameteriEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPatchParameteriEXT(GLenum pname, GLint value)"
  },
  {
    "label": "glTexParameterIivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params)"
  },
  {
    "label": "glTexParameterIuivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params)"
  },
  {
    "label": "glGetTexParameterIivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetTexParameterIuivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params)"
  },
  {
    "label": "glSamplerParameterIivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSamplerParameterIivEXT(GLuint sampler, GLenum pname, const GLint *param)"
  },
  {
    "label": "glSamplerParameterIuivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSamplerParameterIuivEXT(GLuint sampler, GLenum pname, const GLuint *param)"
  },
  {
    "label": "glGetSamplerParameterIivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSamplerParameterIivEXT(GLuint sampler, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetSamplerParameterIuivEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSamplerParameterIuivEXT(GLuint sampler, GLenum pname, GLuint *params)"
  },
  {
    "label": "glTexBufferEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer)"
  },
  {
    "label": "glTexBufferRangeEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexBufferRangeEXT(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size)"
  },
  {
    "label": "glTexStorage1DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)"
  },
  {
    "label": "glTexStorage2DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glTexStorage3DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)"
  },
  {
    "label": "glTextureStorage1DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)"
  },
  {
    "label": "glTextureStorage2DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glTextureStorage3DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)"
  },
  {
    "label": "glTexStorageAttribs2DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorageAttribs2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const GLint* attrib_list)"
  },
  {
    "label": "glTexStorageAttribs3DEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexStorageAttribs3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const GLint* attrib_list)"
  },
  {
    "label": "glTextureViewEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureViewEXT(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers)"
  },
  {
    "label": "glAcquireKeyedMutexWin32EXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glAcquireKeyedMutexWin32EXT(GLuint memory, GLuint64 key, GLuint timeout)"
  },
  {
    "label": "glReleaseKeyedMutexWin32EXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glReleaseKeyedMutexWin32EXT(GLuint memory, GLuint64 key)"
  },
  {
    "label": "glWindowRectanglesEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glWindowRectanglesEXT(GLenum mode, GLsizei count, const GLint *box)"
  },
  {
    "label": "glGetTextureHandleIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTextureHandleIMG(GLuint texture)"
  },
  {
    "label": "glGetTextureSamplerHandleIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTextureSamplerHandleIMG(GLuint texture, GLuint sampler)"
  },
  {
    "label": "glUniformHandleui64IMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformHandleui64IMG(GLint location, GLuint64 value)"
  },
  {
    "label": "glUniformHandleui64vIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformHandleui64vIMG(GLint location, GLsizei count, const GLuint64 *value)"
  },
  {
    "label": "glProgramUniformHandleui64IMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformHandleui64IMG(GLuint program, GLint location, GLuint64 value)"
  },
  {
    "label": "glProgramUniformHandleui64vIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformHandleui64vIMG(GLuint program, GLint location, GLsizei count, const GLuint64 *values)"
  },
  {
    "label": "glFramebufferTexture2DDownsampleIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTexture2DDownsampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint xscale, GLint yscale)"
  },
  {
    "label": "glFramebufferTextureLayerDownsampleIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTextureLayerDownsampleIMG(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLint xscale, GLint yscale)"
  },
  {
    "label": "glRenderbufferStorageMultisampleIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glFramebufferTexture2DMultisampleIMG()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples)"
  },
  {
    "label": "glApplyFramebufferAttachmentCMAAINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glApplyFramebufferAttachmentCMAAINTEL(void)"
  },
  {
    "label": "glBeginPerfQueryINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBeginPerfQueryINTEL(GLuint queryHandle)"
  },
  {
    "label": "glCreatePerfQueryINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCreatePerfQueryINTEL(GLuint queryId, GLuint *queryHandle)"
  },
  {
    "label": "glDeletePerfQueryINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeletePerfQueryINTEL(GLuint queryHandle)"
  },
  {
    "label": "glEndPerfQueryINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEndPerfQueryINTEL(GLuint queryHandle)"
  },
  {
    "label": "glGetFirstPerfQueryIdINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFirstPerfQueryIdINTEL(GLuint *queryId)"
  },
  {
    "label": "glGetNextPerfQueryIdINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetNextPerfQueryIdINTEL(GLuint queryId, GLuint *nextQueryId)"
  },
  {
    "label": "glGetPerfCounterInfoINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar *counterName, GLuint counterDescLength, GLchar *counterDesc, GLuint *counterOffset, GLuint *counterDataSize, GLuint *counterTypeEnum, GLuint *counterDataTypeEnum, GLuint64 *rawCounterMaxValue)"
  },
  {
    "label": "glGetPerfQueryDataINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, void *data, GLuint *bytesWritten)"
  },
  {
    "label": "glGetPerfQueryIdByNameINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfQueryIdByNameINTEL(GLchar *queryName, GLuint *queryId)"
  },
  {
    "label": "glGetPerfQueryInfoINTEL()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar *queryName, GLuint *dataSize, GLuint *noCounters, GLuint *noInstances, GLuint *capsMask)"
  },
  {
    "label": "glFramebufferParameteriMESA()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferParameteriMESA(GLenum target, GLenum pname, GLint param)"
  },
  {
    "label": "glGetFramebufferParameterivMESA()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFramebufferParameterivMESA(GLenum target, GLenum pname, GLint *params)"
  },
  {
    "label": "glGetTextureHandleNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTextureHandleNV(GLuint texture)"
  },
  {
    "label": "glGetTextureSamplerHandleNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler)"
  },
  {
    "label": "glMakeTextureHandleResidentNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMakeTextureHandleResidentNV(GLuint64 handle)"
  },
  {
    "label": "glMakeTextureHandleNonResidentNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMakeTextureHandleNonResidentNV(GLuint64 handle)"
  },
  {
    "label": "glGetImageHandleNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format)"
  },
  {
    "label": "glMakeImageHandleResidentNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMakeImageHandleResidentNV(GLuint64 handle, GLenum access)"
  },
  {
    "label": "glMakeImageHandleNonResidentNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMakeImageHandleNonResidentNV(GLuint64 handle)"
  },
  {
    "label": "glUniformHandleui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformHandleui64NV(GLint location, GLuint64 value)"
  },
  {
    "label": "glUniformHandleui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value)"
  },
  {
    "label": "glProgramUniformHandleui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value)"
  },
  {
    "label": "glProgramUniformHandleui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values)"
  },
  {
    "label": "glIsTextureHandleResidentNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsTextureHandleResidentNV(GLuint64 handle)"
  },
  {
    "label": "glIsImageHandleResidentNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsImageHandleResidentNV(GLuint64 handle)"
  },
  {
    "label": "glBlendParameteriNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendParameteriNV(GLenum pname, GLint value)"
  },
  {
    "label": "glBlendBarrierNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlendBarrierNV(void)"
  },
  {
    "label": "glViewportPositionWScaleNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportPositionWScaleNV(GLuint index, GLfloat xcoeff, GLfloat ycoeff)"
  },
  {
    "label": "glBeginConditionalRenderNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBeginConditionalRenderNV(GLuint id, GLenum mode)"
  },
  {
    "label": "glEndConditionalRenderNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEndConditionalRenderNV(void)"
  },
  {
    "label": "glSubpixelPrecisionBiasNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSubpixelPrecisionBiasNV(GLuint xbits, GLuint ybits)"
  },
  {
    "label": "glConservativeRasterParameteriNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glConservativeRasterParameteriNV(GLenum pname, GLint param)"
  },
  {
    "label": "glCopyBufferSubDataNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"
  },
  {
    "label": "glCoverageMaskNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverageMaskNV(GLboolean mask)"
  },
  {
    "label": "glCoverageOperationNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverageOperationNV(GLenum operation)"
  },
  {
    "label": "glDrawBuffersNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawBuffersNV(GLsizei n, const GLenum *bufs)"
  },
  {
    "label": "glDrawArraysInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount)"
  },
  {
    "label": "glDrawElementsInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)"
  },
  {
    "label": "glDrawVkImageNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawVkImageNV(GLuint64 vkImage, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1)"
  },
  {
    "label": "glGetVkProcAddrNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetVkProcAddrNV(const GLchar *name)"
  },
  {
    "label": "glWaitVkSemaphoreNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glWaitVkSemaphoreNV(GLuint64 vkSemaphore)"
  },
  {
    "label": "glSignalVkSemaphoreNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSignalVkSemaphoreNV(GLuint64 vkSemaphore)"
  },
  {
    "label": "glSignalVkFenceNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSignalVkFenceNV(GLuint64 vkFence)"
  },
  {
    "label": "glDeleteFencesNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeleteFencesNV(GLsizei n, const GLuint *fences)"
  },
  {
    "label": "glGenFencesNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenFencesNV(GLsizei n, GLuint *fences)"
  },
  {
    "label": "glIsFenceNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsFenceNV(GLuint fence)"
  },
  {
    "label": "glTestFenceNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTestFenceNV(GLuint fence)"
  },
  {
    "label": "glGetFenceivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFenceivNV(GLuint fence, GLenum pname, GLint *params)"
  },
  {
    "label": "glFinishFenceNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFinishFenceNV(GLuint fence)"
  },
  {
    "label": "glSetFenceNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSetFenceNV(GLuint fence, GLenum condition)"
  },
  {
    "label": "glFragmentCoverageColorNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFragmentCoverageColorNV(GLuint color)"
  },
  {
    "label": "glBlitFramebufferNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"
  },
  {
    "label": "glCoverageModulationTableNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverageModulationTableNV(GLsizei n, const GLfloat *v)"
  },
  {
    "label": "glGetCoverageModulationTableNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetCoverageModulationTableNV(GLsizei bufSize, GLfloat *v)"
  },
  {
    "label": "glCoverageModulationNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverageModulationNV(GLenum components)"
  },
  {
    "label": "glRenderbufferStorageMultisampleNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glRenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)"
  },
  {
    "label": "glUniform1i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform1i64NV(GLint location, GLint64EXT x)"
  },
  {
    "label": "glUniform2i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y)"
  },
  {
    "label": "glUniform3i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)"
  },
  {
    "label": "glUniform4i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)"
  },
  {
    "label": "glUniform1i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glUniform2i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glUniform3i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glUniform4i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glUniform1ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform1ui64NV(GLint location, GLuint64EXT x)"
  },
  {
    "label": "glUniform2ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y)"
  },
  {
    "label": "glUniform3ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)"
  },
  {
    "label": "glUniform4ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)"
  },
  {
    "label": "glUniform1ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glUniform2ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glUniform3ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glUniform4ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glGetUniformi64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params)"
  },
  {
    "label": "glProgramUniform1i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x)"
  },
  {
    "label": "glProgramUniform2i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y)"
  },
  {
    "label": "glProgramUniform3i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)"
  },
  {
    "label": "glProgramUniform4i64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)"
  },
  {
    "label": "glProgramUniform1i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glProgramUniform2i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glProgramUniform3i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glProgramUniform4i64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)"
  },
  {
    "label": "glProgramUniform1ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x)"
  },
  {
    "label": "glProgramUniform2ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y)"
  },
  {
    "label": "glProgramUniform3ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)"
  },
  {
    "label": "glProgramUniform4ui64NV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)"
  },
  {
    "label": "glProgramUniform1ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glProgramUniform2ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glProgramUniform3ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glProgramUniform4ui64vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)"
  },
  {
    "label": "glVertexAttribDivisorNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glVertexAttribDivisorNV(GLuint index, GLuint divisor)"
  },
  {
    "label": "glGetInternalformatSampleivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetInternalformatSampleivNV(GLenum target, GLenum internalformat, GLsizei samples, GLenum pname, GLsizei count, GLint *params)"
  },
  {
    "label": "glGetMemoryObjectDetachedResourcesuivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetMemoryObjectDetachedResourcesuivNV(GLuint memory, GLenum pname, GLint first, GLsizei count, GLuint *params)"
  },
  {
    "label": "glResetMemoryObjectParameterNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glResetMemoryObjectParameterNV(GLuint memory, GLenum pname)"
  },
  {
    "label": "glTexAttachMemoryNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glBufferAttachMemoryNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBufferAttachMemoryNV(GLenum target, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glTextureAttachMemoryNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureAttachMemoryNV(GLuint texture, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glNamedBufferAttachMemoryNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glNamedBufferAttachMemoryNV(GLuint buffer, GLuint memory, GLuint64 offset)"
  },
  {
    "label": "glBufferPageCommitmentMemNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBufferPageCommitmentMemNV(GLenum target, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit)"
  },
  {
    "label": "glTexPageCommitmentMemNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexPageCommitmentMemNV(GLenum target, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit)"
  },
  {
    "label": "glNamedBufferPageCommitmentMemNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glNamedBufferPageCommitmentMemNV(GLuint buffer, GLintptr offset, GLsizeiptr size, GLuint memory, GLuint64 memOffset, GLboolean commit)"
  },
  {
    "label": "glTexturePageCommitmentMemNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexturePageCommitmentMemNV(GLuint texture, GLint layer, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLuint memory, GLuint64 offset, GLboolean commit)"
  },
  {
    "label": "glDrawMeshTasksNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawMeshTasksNV(GLuint first, GLuint count)"
  },
  {
    "label": "glDrawMeshTasksIndirectNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDrawMeshTasksIndirectNV(GLintptr indirect)"
  },
  {
    "label": "glMultiDrawMeshTasksIndirectNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawMeshTasksIndirectNV(GLintptr indirect, GLsizei drawcount, GLsizei stride)"
  },
  {
    "label": "glMultiDrawMeshTasksIndirectCountNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMultiDrawMeshTasksIndirectCountNV(GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride)"
  },
  {
    "label": "glUniformMatrix2x3fvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glUniformMatrix3x2fvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glUniformMatrix2x4fvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glUniformMatrix4x2fvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glUniformMatrix3x4fvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glUniformMatrix4x3fvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glUniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)"
  },
  {
    "label": "glGenPathsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGenPathsNV(GLsizei range)"
  },
  {
    "label": "glDeletePathsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDeletePathsNV(GLuint path, GLsizei range)"
  },
  {
    "label": "glIsPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsPathNV(GLuint path)"
  },
  {
    "label": "glPathCommandsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords)"
  },
  {
    "label": "glPathCoordsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void *coords)"
  },
  {
    "label": "glPathSubCommandsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte *commands, GLsizei numCoords, GLenum coordType, const void *coords)"
  },
  {
    "label": "glPathSubCoordsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void *coords)"
  },
  {
    "label": "glPathStringNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathStringNV(GLuint path, GLenum format, GLsizei length, const void *pathString)"
  },
  {
    "label": "glPathGlyphsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void *charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"
  },
  {
    "label": "glPathGlyphRangeNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"
  },
  {
    "label": "glWeightPathsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights)"
  },
  {
    "label": "glCopyPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCopyPathNV(GLuint resultPath, GLuint srcPath)"
  },
  {
    "label": "glInterpolatePathsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight)"
  },
  {
    "label": "glTransformPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glPathParameterivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathParameterivNV(GLuint path, GLenum pname, const GLint *value)"
  },
  {
    "label": "glPathParameteriNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathParameteriNV(GLuint path, GLenum pname, GLint value)"
  },
  {
    "label": "glPathParameterfvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value)"
  },
  {
    "label": "glPathParameterfNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathParameterfNV(GLuint path, GLenum pname, GLfloat value)"
  },
  {
    "label": "glPathDashArrayNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray)"
  },
  {
    "label": "glPathStencilFuncNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask)"
  },
  {
    "label": "glPathStencilDepthOffsetNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathStencilDepthOffsetNV(GLfloat factor, GLfloat units)"
  },
  {
    "label": "glStencilFillPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask)"
  },
  {
    "label": "glStencilStrokePathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask)"
  },
  {
    "label": "glStencilFillPathInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glStencilStrokePathInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glPathCoverDepthFuncNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathCoverDepthFuncNV(GLenum func)"
  },
  {
    "label": "glCoverFillPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverFillPathNV(GLuint path, GLenum coverMode)"
  },
  {
    "label": "glCoverStrokePathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverStrokePathNV(GLuint path, GLenum coverMode)"
  },
  {
    "label": "glCoverFillPathInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glCoverStrokePathInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glGetPathParameterivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathParameterivNV(GLuint path, GLenum pname, GLint *value)"
  },
  {
    "label": "glGetPathParameterfvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathParameterfvNV(GLuint path, GLenum pname, GLfloat *value)"
  },
  {
    "label": "glGetPathCommandsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathCommandsNV(GLuint path, GLubyte *commands)"
  },
  {
    "label": "glGetPathCoordsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathCoordsNV(GLuint path, GLfloat *coords)"
  },
  {
    "label": "glGetPathDashArrayNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathDashArrayNV(GLuint path, GLfloat *dashArray)"
  },
  {
    "label": "glGetPathMetricsNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics)"
  },
  {
    "label": "glGetPathMetricRangeNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat *metrics)"
  },
  {
    "label": "glGetPathSpacingNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing)"
  },
  {
    "label": "glIsPointInFillPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y)"
  },
  {
    "label": "glIsPointInStrokePathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y)"
  },
  {
    "label": "glGetPathLengthNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments)"
  },
  {
    "label": "glPointAlongPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat *x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY)"
  },
  {
    "label": "glMatrixLoad3x2fNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoad3x2fNV(GLenum matrixMode, const GLfloat *m)"
  },
  {
    "label": "glMatrixLoad3x3fNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoad3x3fNV(GLenum matrixMode, const GLfloat *m)"
  },
  {
    "label": "glMatrixLoadTranspose3x3fNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoadTranspose3x3fNV(GLenum matrixMode, const GLfloat *m)"
  },
  {
    "label": "glMatrixMult3x2fNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMult3x2fNV(GLenum matrixMode, const GLfloat *m)"
  },
  {
    "label": "glMatrixMult3x3fNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMult3x3fNV(GLenum matrixMode, const GLfloat *m)"
  },
  {
    "label": "glMatrixMultTranspose3x3fNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMultTranspose3x3fNV(GLenum matrixMode, const GLfloat *m)"
  },
  {
    "label": "glStencilThenCoverFillPathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilThenCoverFillPathNV(GLuint path, GLenum fillMode, GLuint mask, GLenum coverMode)"
  },
  {
    "label": "glStencilThenCoverStrokePathNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilThenCoverStrokePathNV(GLuint path, GLint reference, GLuint mask, GLenum coverMode)"
  },
  {
    "label": "glStencilThenCoverFillPathInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilThenCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glStencilThenCoverStrokePathInstancedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStencilThenCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)"
  },
  {
    "label": "glPathGlyphIndexRangeNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathGlyphIndexRangeNV(GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint pathParameterTemplate, GLfloat emScale, GLuint *baseAndCount)"
  },
  {
    "label": "glPathGlyphIndexArrayNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, const void *fontName, GLbitfield fontStyle, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"
  },
  {
    "label": "glPathMemoryGlyphIndexArrayNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPathMemoryGlyphIndexArrayNV(GLuint firstPathName, GLenum fontTarget, GLsizeiptr fontSize, const void *fontData, GLsizei faceIndex, GLuint firstGlyphIndex, GLsizei numGlyphs, GLuint pathParameterTemplate, GLfloat emScale)"
  },
  {
    "label": "glProgramPathFragmentInputGenNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glProgramPathFragmentInputGenNV(GLuint program, GLint location, GLenum genMode, GLint components, const GLfloat *coeffs)"
  },
  {
    "label": "glGetProgramResourcefvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetProgramResourcefvNV(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei count, GLsizei *length, GLfloat *params)"
  },
  {
    "label": "glMatrixFrustumEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)"
  },
  {
    "label": "glMatrixLoadIdentityEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoadIdentityEXT(GLenum mode)"
  },
  {
    "label": "glMatrixLoadTransposefEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoadTransposefEXT(GLenum mode, const GLfloat *m)"
  },
  {
    "label": "glMatrixLoadTransposedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoadTransposedEXT(GLenum mode, const GLdouble *m)"
  },
  {
    "label": "glMatrixLoadfEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoadfEXT(GLenum mode, const GLfloat *m)"
  },
  {
    "label": "glMatrixLoaddEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixLoaddEXT(GLenum mode, const GLdouble *m)"
  },
  {
    "label": "glMatrixMultTransposefEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMultTransposefEXT(GLenum mode, const GLfloat *m)"
  },
  {
    "label": "glMatrixMultTransposedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMultTransposedEXT(GLenum mode, const GLdouble *m)"
  },
  {
    "label": "glMatrixMultfEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMultfEXT(GLenum mode, const GLfloat *m)"
  },
  {
    "label": "glMatrixMultdEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixMultdEXT(GLenum mode, const GLdouble *m)"
  },
  {
    "label": "glMatrixOrthoEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)"
  },
  {
    "label": "glMatrixPopEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixPopEXT(GLenum mode)"
  },
  {
    "label": "glMatrixPushEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixPushEXT(GLenum mode)"
  },
  {
    "label": "glMatrixRotatefEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)"
  },
  {
    "label": "glMatrixRotatedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)"
  },
  {
    "label": "glMatrixScalefEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z)"
  },
  {
    "label": "glMatrixScaledEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z)"
  },
  {
    "label": "glMatrixTranslatefEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z)"
  },
  {
    "label": "glMatrixTranslatedEXT()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z)"
  },
  {
    "label": "glPolygonModeNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glPolygonModeNV(GLenum face, GLenum mode)"
  },
  {
    "label": "glReadBufferNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glReadBufferNV(GLenum mode)"
  },
  {
    "label": "glFramebufferSampleLocationsfvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferSampleLocationsfvNV(GLenum target, GLuint start, GLsizei count, const GLfloat *v)"
  },
  {
    "label": "glNamedFramebufferSampleLocationsfvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glNamedFramebufferSampleLocationsfvNV(GLuint framebuffer, GLuint start, GLsizei count, const GLfloat *v)"
  },
  {
    "label": "glResolveDepthValuesNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glResolveDepthValuesNV(void)"
  },
  {
    "label": "glScissorExclusiveNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorExclusiveNV(GLint x, GLint y, GLsizei width, GLsizei height)"
  },
  {
    "label": "glScissorExclusiveArrayvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorExclusiveArrayvNV(GLuint first, GLsizei count, const GLint *v)"
  },
  {
    "label": "glBindShadingRateImageNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glBindShadingRateImageNV(GLuint texture)"
  },
  {
    "label": "glGetShadingRateImagePaletteNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetShadingRateImagePaletteNV(GLuint viewport, GLuint entry, GLenum *rate)"
  },
  {
    "label": "glGetShadingRateSampleLocationivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetShadingRateSampleLocationivNV(GLenum rate, GLuint samples, GLuint index, GLint *location)"
  },
  {
    "label": "glShadingRateImageBarrierNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateImageBarrierNV(GLboolean synchronize)"
  },
  {
    "label": "glShadingRateImagePaletteNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateImagePaletteNV(GLuint viewport, GLuint first, GLsizei count, const GLenum *rates)"
  },
  {
    "label": "glShadingRateSampleOrderNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateSampleOrderNV(GLenum order)"
  },
  {
    "label": "glShadingRateSampleOrderCustomNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateSampleOrderCustomNV(GLenum rate, GLuint samples, const GLint *locations)"
  },
  {
    "label": "glCreateSemaphoresNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glCreateSemaphoresNV(GLsizei n, GLuint *semaphores)"
  },
  {
    "label": "glSemaphoreParameterivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glSemaphoreParameterivNV(GLuint semaphore, GLenum pname, const GLint *params)"
  },
  {
    "label": "glGetSemaphoreParameterivNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetSemaphoreParameterivNV(GLuint semaphore, GLenum pname, GLint *params)"
  },
  {
    "label": "glViewportArrayvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportArrayvNV(GLuint first, GLsizei count, const GLfloat *v)"
  },
  {
    "label": "glViewportIndexedfNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportIndexedfNV(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)"
  },
  {
    "label": "glViewportIndexedfvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportIndexedfvNV(GLuint index, const GLfloat *v)"
  },
  {
    "label": "glScissorArrayvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorArrayvNV(GLuint first, GLsizei count, const GLint *v)"
  },
  {
    "label": "glScissorIndexedNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorIndexedNV(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)"
  },
  {
    "label": "glScissorIndexedvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glScissorIndexedvNV(GLuint index, const GLint *v)"
  },
  {
    "label": "glDepthRangeArrayfvNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDepthRangeArrayfvNV(GLuint first, GLsizei count, const GLfloat *v)"
  },
  {
    "label": "glDepthRangeIndexedfNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDepthRangeIndexedfNV(GLuint index, GLfloat n, GLfloat f)"
  },
  {
    "label": "glGetFloati_vNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetFloati_vNV(GLenum target, GLuint index, GLfloat *data)"
  },
  {
    "label": "glEnableiNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEnableiNV(GLenum target, GLuint index)"
  },
  {
    "label": "glDisableiNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDisableiNV(GLenum target, GLuint index)"
  },
  {
    "label": "glIsEnablediNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glIsEnablediNV(GLenum target, GLuint index)"
  },
  {
    "label": "glViewportSwizzleNV()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glViewportSwizzleNV(GLuint index, GLenum swizzlex, GLenum swizzley, GLenum swizzlez, GLenum swizzlew)"
  },
  {
    "label": "glFramebufferTextureMultiviewOVR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTextureMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint baseViewIndex, GLsizei numViews)"
  },
  {
    "label": "glFramebufferTextureMultisampleMultiviewOVR()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferTextureMultisampleMultiviewOVR(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsizei samples, GLint baseViewIndex, GLsizei numViews)"
  },
  {
    "label": "glAlphaFuncQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glAlphaFuncQCOM(GLenum func, GLclampf ref)"
  },
  {
    "label": "glGetDriverControlsQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetDriverControlsQCOM(GLint *num, GLsizei size, GLuint *driverControls)"
  },
  {
    "label": "glGetDriverControlStringQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glGetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString)"
  },
  {
    "label": "glEnableDriverControlQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEnableDriverControlQCOM(GLuint driverControl)"
  },
  {
    "label": "glDisableDriverControlQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glDisableDriverControlQCOM(GLuint driverControl)"
  },
  {
    "label": "glExtGetTexturesQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetTexturesQCOM(GLuint *textures, GLint maxTextures, GLint *numTextures)"
  },
  {
    "label": "glExtGetBuffersQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetBuffersQCOM(GLuint *buffers, GLint maxBuffers, GLint *numBuffers)"
  },
  {
    "label": "glExtGetRenderbuffersQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetRenderbuffersQCOM(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers)"
  },
  {
    "label": "glExtGetFramebuffersQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetFramebuffersQCOM(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers)"
  },
  {
    "label": "glExtGetTexLevelParameterivQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params)"
  },
  {
    "label": "glExtTexObjectStateOverrideiQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param)"
  },
  {
    "label": "glExtGetTexSubImageQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void *texels)"
  },
  {
    "label": "glExtGetBufferPointervQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetBufferPointervQCOM(GLenum target, void **params)"
  },
  {
    "label": "glExtGetShadersQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetShadersQCOM(GLuint *shaders, GLint maxShaders, GLint *numShaders)"
  },
  {
    "label": "glExtGetProgramsQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetProgramsQCOM(GLuint *programs, GLint maxPrograms, GLint *numPrograms)"
  },
  {
    "label": "glExtIsProgramBinaryQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtIsProgramBinaryQCOM(GLuint program)"
  },
  {
    "label": "glExtGetProgramBinarySourceQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar *source, GLint *length)"
  },
  {
    "label": "glExtrapolateTex2DQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glExtrapolateTex2DQCOM(GLuint src1, GLuint src2, GLuint output, GLfloat scaleFactor)"
  },
  {
    "label": "glFramebufferFoveationConfigQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferFoveationConfigQCOM(GLuint framebuffer, GLuint numLayers, GLuint focalPointsPerLayer, GLuint requestedFeatures, GLuint *providedFeatures)"
  },
  {
    "label": "glFramebufferFoveationParametersQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferFoveationParametersQCOM(GLuint framebuffer, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea)"
  },
  {
    "label": "glTexEstimateMotionQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexEstimateMotionQCOM(GLuint ref, GLuint target, GLuint output)"
  },
  {
    "label": "glTexEstimateMotionRegionsQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTexEstimateMotionRegionsQCOM(GLuint ref, GLuint target, GLuint output, GLuint mask)"
  },
  {
    "label": "glFramebufferFetchBarrierQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glFramebufferFetchBarrierQCOM(void)"
  },
  {
    "label": "glShadingRateQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glShadingRateQCOM(GLenum rate)"
  },
  {
    "label": "glTextureFoveationParametersQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glTextureFoveationParametersQCOM(GLuint texture, GLuint layer, GLuint focalPoint, GLfloat focalX, GLfloat focalY, GLfloat gainX, GLfloat gainY, GLfloat foveaArea)"
  },
  {
    "label": "glStartTilingQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glStartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask)"
  },
  {
    "label": "glEndTilingQCOM()",
    "kind": "Method",
    "detail": "Function (GL_APIENTRY)",
    "insertText": "glEndTilingQCOM(GLbitfield preserveMask)"
  }
]