[
  {
    "label": "UMovieScenePiecewiseDoubleBlenderSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScenePiecewiseDoubleBlenderSystem"
  },
  {
    "label": "FComponentMaterialKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentMaterialKey"
  },
  {
    "label": "FComponentMaterialAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentMaterialAccessor"
  },
  {
    "label": "FPreAnimatedComponentMaterialSwitcherStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedComponentMaterialSwitcherStorage"
  },
  {
    "label": "FPreAnimatedComponentMaterialParameterStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedComponentMaterialParameterStorage"
  },
  {
    "label": "UMovieSceneComponentMaterialSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneComponentMaterialSystem"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / TypeHash . h \" # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateStorage . h \" # include \" Systems / MovieSceneMaterialSystem . h \" # include \" Tracks / MovieSceneMaterialTrack . h \" # include \" MovieSceneComponentMaterialSystem . generated . h \" class UMovieScenePiecewiseDoubleBlenderSystem ; namespace UE::MovieScene { struct FComponentMaterialKey { FObjectKey Object ; FComponentMaterialInfo MaterialInfo ; uint32)",
    "insertText": "GetTypeHash(const FComponentMaterialKey& In)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FComponentMaterialKey& A, const FComponentMaterialKey& B)"
  },
  {
    "label": "FComponentMaterialAccessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FComponentMaterialAccessor(UObject* InObject, const FComponentMaterialInfo& InMaterialInfo)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "GetMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetMaterial()"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(UMaterialInterface* InMaterial)"
  },
  {
    "label": "CreateDynamicMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInstanceDynamic*)",
    "insertText": "CreateDynamicMaterial(UMaterialInterface* InMaterial)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; using FPreAnimatedComponentMaterialTraits = TPreAnimatedMaterialTraits<FComponentMaterialAccessor,UObject*,FComponentMaterialInfo> ; using FPreAnimatedComponentMaterialParameterTraits = TPreAnimatedMaterialParameterTraits<FComponentMaterialAccessor,UObject*,FComponentMaterialInfo> ; struct FPreAnimatedComponentMaterialSwitcherStorage : public TPreAnimatedStateStorage<TPreAnimatedMaterialTraits<FComponentMaterialAccessor,UObject*,FComponentMaterialInfo>> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedComponentMaterialSwitcherStorage> StorageID ; } ; struct FPreAnimatedComponentMaterialParameterStorage : public TPreAnimatedStateStorage<TPreAnimatedMaterialParameterTraits<FComponentMaterialAccessor,UObject*,FComponentMaterialInfo>> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedComponentMaterialParameterStorage> StorageID ; } ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneComponentMaterialSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnLink()"
  },
  {
    "label": "OnUnlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnlink()"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "SavePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedState(const FPreAnimationParameters& InParameters)"
  }
]