[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FChaosVDContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosVDContext"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "FChaosVDScopedTLSBufferAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosVDScopedTLSBufferAccessor"
  },
  {
    "label": "FChaosVDScopeContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosVDScopeContext"
  },
  {
    "label": "FChaosCVDScopedDataChannelOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosCVDScopedDataChannelOverride"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FChaosVDScopedTLSBufferAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosVDScopedTLSBufferAccessor"
  },
  {
    "label": "FChaosVDContextWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosVDContextWrapper"
  },
  {
    "label": "GetCurrentContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCurrentContext(FChaosVDContext& OutContext)"
  },
  {
    "label": "PushContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushContext(const FChaosVDContext& InContext)"
  },
  {
    "label": "PopContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopContext()"
  },
  {
    "label": "CVDScope()",
    "kind": "Method",
    "detail": "Function (FChaosVDScopeContext)",
    "insertText": "CVDScope(InContext)"
  }
]