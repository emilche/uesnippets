[
  {
    "label": "StringView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StringView"
  },
  {
    "label": "StringBufferBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringBufferBase"
  },
  {
    "label": "StringBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringBuffer"
  },
  {
    "label": "StringView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StringView"
  },
  {
    "label": "LastErrorToText",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LastErrorToText"
  },
  {
    "label": "StartsWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartsWith(const tchar* data, const tchar* str, bool ignoreCase = true)"
  },
  {
    "label": "EndsWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndsWith(const tchar* str, u64 strLen, const tchar* value, bool ignoreCase = true)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(const tchar* str, const tchar* sub, bool ignoreCase = true, const tchar** pos = nullptr)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const tchar* str1, const tchar* str2, bool ignoreCase = true)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const tchar* str1, const tchar* str2, u64 count, bool ignoreCase = true)"
  },
  {
    "label": "Replace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Replace(tchar* str, tchar from, tchar to)"
  },
  {
    "label": "FixPathSeparators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixPathSeparators(tchar* str)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(u64& out, const tchar* str, u64 strLen)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Append(str.data, str.count)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Append(&c, 1)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(u64& out)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(u32& out)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(u16& out)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(float& out)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "Parse(char* out, u64 outCapacity)"
  },
  {
    "label": "ToView()",
    "kind": "Method",
    "detail": "Function (StringView)",
    "insertText": "ToView(const tchar* s)"
  }
]