[
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "FPropertyChangedChainEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedChainEvent"
  },
  {
    "label": "UInputDeviceProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceProperty"
  },
  {
    "label": "UInputDeviceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceSubsystem"
  },
  {
    "label": "TDataLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDataLayout"
  },
  {
    "label": "FDeviceColorData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceColorData"
  },
  {
    "label": "UColorInputDeviceProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UColorInputDeviceProperty"
  },
  {
    "label": "FDeviceColorCurveData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceColorCurveData"
  },
  {
    "label": "UColorInputDeviceCurveProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UColorInputDeviceCurveProperty"
  },
  {
    "label": "FDeviceTriggerBaseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceTriggerBaseData"
  },
  {
    "label": "UInputDeviceTriggerEffect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceTriggerEffect"
  },
  {
    "label": "FDeviceTriggerFeedbackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceTriggerFeedbackData"
  },
  {
    "label": "UInputDeviceTriggerFeedbackProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceTriggerFeedbackProperty"
  },
  {
    "label": "FDeviceTriggerTriggerResistanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceTriggerTriggerResistanceData"
  },
  {
    "label": "UInputDeviceTriggerResistanceProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceTriggerResistanceProperty"
  },
  {
    "label": "FDeviceTriggerTriggerVibrationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeviceTriggerTriggerVibrationData"
  },
  {
    "label": "UInputDeviceTriggerVibrationProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceTriggerVibrationProperty"
  },
  {
    "label": "USoundBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundBase"
  },
  {
    "label": "UEndpointSubmix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEndpointSubmix"
  },
  {
    "label": "FAudioBasedVibrationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioBasedVibrationData"
  },
  {
    "label": "UInputDeviceAudioBasedVibrationProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceAudioBasedVibrationProperty"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" GenericPlatform / IInputInterface . h \" # include \" GameFramework / InputDeviceSubsystem . h \" # include \" InputDeviceProperties . generated . h \" class UCurveLinearColor ; class UCurveFloat ; # if WITH_EDITOR struct FPropertyChangedChainEvent ; # endif)",
    "insertText": "UCLASS(Abstract, Blueprintable, BlueprintType, EditInlineNew, CollapseCategories, meta = (ShowWorldContextPin), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class UInputDeviceSubsystem ;)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UInputDeviceProperty(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "EvaluateDeviceProperty_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluateDeviceProperty_Implementation(const FPlatformUserId PlatformUser, const FInputDeviceId DeviceId, const float DeltaTime, const float Duration)"
  },
  {
    "label": "ResetDeviceProperty_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDeviceProperty_Implementation(const FPlatformUserId PlatformUser, const FInputDeviceId DeviceId, bool bForceReset = false)"
  },
  {
    "label": "GetInternalDeviceProperty()",
    "kind": "Method",
    "detail": "Function (FInputDeviceProperty*)",
    "insertText": "GetInternalDeviceProperty()"
  },
  {
    "label": "RecalculateDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "RecalculateDuration()"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeChainProperty(FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "ApplyDeviceProperty_Internal()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "ApplyDeviceProperty_Internal(const FPlatformUserId UserId, const FInputDeviceId DeviceId, FInputDeviceProperty* RawProperty)"
  },
  {
    "label": "GetDeviceSpecificData()",
    "kind": "Method",
    "detail": "Function (template<class TDataLayout> const TDataLayout*)",
    "insertText": "GetDeviceSpecificData(const FPlatformUserId UserId, const FInputDeviceId DeviceId, const TMap<FName, TDataLayout>& InMap)"
  },
  {
    "label": "GetDeviceSpecificDataMutable()",
    "kind": "Method",
    "detail": "Function (template<class TDataLayout> TDataLayout*)",
    "insertText": "GetDeviceSpecificDataMutable(const FPlatformUserId UserId, const FInputDeviceId DeviceId, TMap<FName, TDataLayout>& InMap)"
  },
  {
    "label": "GetDeviceSpecificData()",
    "kind": "Method",
    "detail": "Function (} ; template<class TDataLayout> const TDataLayout*)",
    "insertText": "GetDeviceSpecificData(const FPlatformUserId UserId, const FInputDeviceId DeviceId, const TMap<FName, TDataLayout>& InDeviceData)"
  },
  {
    "label": "GetMostRecentlyUsedHardwareDevice()",
    "kind": "Method",
    "detail": "Function (const FHardwareDeviceIdentifier Hardware = SubSystem ->)",
    "insertText": "GetMostRecentlyUsedHardwareDevice(UserId)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Color\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Blueprintable, BlueprintType, meta = (DisplayName = \"Device Color (Static)\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual void EvaluateDeviceProperty_Implementation(const FPlatformUserId PlatformUser, const FInputDeviceId DeviceId, const float DeltaTime, const float Duration)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (private : FInputDeviceLightColorProperty InternalProperty ; } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Blueprintable, BlueprintType, meta = (DisplayName = \"Device Color (Curve)\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Triggers\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Abstract, meta = (DisplayName = \"Base Trigger Effect\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API virtual FInputDeviceProperty* GetInternalDeviceProperty()"
  },
  {
    "label": "ApplyDeviceProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDeviceProperty(const FPlatformUserId UserId, const FInputDeviceId DeviceId)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"DeviceProperty\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Blueprintable, meta = (DisplayName = \"Trigger Feedback\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInputDeviceTriggerFeedbackProperty()"
  },
  {
    "label": "GetPositionValue()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "GetPositionValue(const FDeviceTriggerFeedbackData* Data, const float Duration)"
  },
  {
    "label": "GetStrengthValue()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStrengthValue(const FDeviceTriggerFeedbackData* Data, const float Duration)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"DeviceProperty\", meta = (UIMin = \"0\", UIMAX = \"9\"))"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Blueprintable, meta = (DisplayName = \"Trigger Resistance\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInputDeviceTriggerResistanceProperty()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Blueprintable, meta = (DisplayName = \"Trigger Vibration\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UInputDeviceTriggerVibrationProperty()"
  },
  {
    "label": "GetTriggerPositionValue()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "GetTriggerPositionValue(const FDeviceTriggerTriggerVibrationData* Data, const float Duration)"
  },
  {
    "label": "GetVibrationFrequencyValue()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVibrationFrequencyValue(const FDeviceTriggerTriggerVibrationData* Data, const float Duration)"
  },
  {
    "label": "GetVibrationAmplitudeValue()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVibrationAmplitudeValue(const FDeviceTriggerTriggerVibrationData* Data, const float Duration)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAudioBasedVibrationData()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Blueprintable, meta = (DisplayName = \"Audio Based Vibration (Experimental)\"))"
  },
  {
    "label": "GetRelevantData()",
    "kind": "Method",
    "detail": "Function (private : const FAudioBasedVibrationData*)",
    "insertText": "GetRelevantData(const FPlatformUserId UserId, const FInputDeviceId DeviceId)"
  }
]