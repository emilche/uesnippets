[
  {
    "label": "TFilterCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFilterCollection"
  },
  {
    "label": "TFilterCollection()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Templates / SharedPointer . h \" # include \" Delegates / Delegate . h \" # include \" Misc / IFilter . h \" template<ItemType> class TFilterCollection : public TSharedFromThis<TFilterCollection<ItemType>> { public : ~)",
    "insertText": "TFilterCollection()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<IFilter<ItemType>>& Filter =* Iterator ;)",
    "insertText": "if(Filter.IsValid())"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (Filter ->)",
    "insertText": "OnChanged().RemoveAll( this)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} } } int32)",
    "insertText": "Add(const TSharedPtr< IFilter< ItemType > >& Filter)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32 ExistingIdx ;)",
    "insertText": "if(ChildFilters.Find(Filter, ExistingIdx))"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (Filter ->)",
    "insertText": "OnChanged().AddSP( this, &TFilterCollection::OnChildFilterChanged)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} int32 Result = ChildFilters .)",
    "insertText": "Add(Filter)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (ChangedEvent .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (Filter ->)",
    "insertText": "OnChanged().RemoveAll(this)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} int32 Result = ChildFilters .)",
    "insertText": "Remove(Filter)"
  },
  {
    "label": "GetFilterAtIndex()",
    "kind": "Method",
    "detail": "Function (} return Result ; } TSharedPtr<IFilter<ItemType>>)",
    "insertText": "GetFilterAtIndex(int32 Index)"
  },
  {
    "label": "PassesAllFilters()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PassesAllFilters(ItemType InItem)"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (FChangedEvent&)",
    "insertText": "OnChanged()"
  }
]