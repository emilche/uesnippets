[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FOutBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutBunch"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "FURL",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FURL"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetworkProfilerHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkProfilerHeader"
  },
  {
    "label": "FNetworkProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkProfiler"
  },
  {
    "label": "FNetworkProfilerScopedIgnoreReplicateProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkProfilerScopedIgnoreReplicateProperties"
  },
  {
    "label": "FNetworkProfilerCVarHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkProfilerCVarHelper"
  },
  {
    "label": "FSendBunchInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSendBunchInfo"
  },
  {
    "label": "FQueuedRPCInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueuedRPCInfo"
  },
  {
    "label": "CSV_DECLARE_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" IPAddress . h \" # include \" Containers / BitArray . h \" # include \" Serialization / MemoryWriter . h \" # include \" ProfilingDebugging / CsvProfiler . h \" # include \" Misc / ScopeLock . h \" class AActor ; class FOutBunch ; class UNetConnection ; struct FURL ; # if USE_NETWORK_PROFILER)",
    "insertText": "CSV_DECLARE_CATEGORY_EXTERN(NetworkProfiler)"
  },
  {
    "label": "NETWORK_PROFILER()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "NETWORK_PROFILER(x ) \\ if ( GNetworkProfiler.IsTrackingEnabled())"
  },
  {
    "label": "CSV_SCOPED_TIMING_STAT_EXCLUSIVE()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "CSV_SCOPED_TIMING_STAT_EXCLUSIVE(NetworkProfiler)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (\\ x ; \\ })",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNetworkProfileStarted, const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNetworkProfileFinished, const FString&)"
  },
  {
    "label": "FNetworkProfilerHeader()",
    "kind": "Method",
    "detail": "Function (enum class ENetworkProfilerVersionHistory : uint32 ; class FNetworkProfilerHeader { private : uint32 Magic ; ENetworkProfilerVersionHistory Version ; FString Tag ; FString GameName ; FString URL ; public :)",
    "insertText": "FNetworkProfilerHeader()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(const FURL& InURL)"
  },
  {
    "label": "GetURL()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetURL()"
  },
  {
    "label": "FSendBunchInfo()",
    "kind": "Method",
    "detail": "Function (} ; class FNetworkProfiler { private : struct FNetworkProfilerScopedIgnoreReplicateProperties ; struct FNetworkProfilerCVarHelper ; bool bIsComparisonTrackingEnabled ; FArchive* FileWriter ; FCriticalSection CriticalSection ; TMap<FString,int32> NameToNameTableIndexMap ; TArray<FString> NameArray ; TMap<FString,int32> AddressTableIndexMap ; bool bHasNoticeableNetworkTrafficOccured ; bool bIsTrackingEnabled ; bool bShouldTrackingBeEnabled ; FNetworkProfilerHeader CurrentHeader ; TSharedPtr<const FInternetAddr> LastAddress ; FOnNetworkProfileStarted OnNetworkProfileStartedDelegate ; FOnNetworkProfileFinished OnNetworkProfileFinishedDelegate ; FTimerHandle AutoStopTimerHandle ; struct FSendBunchInfo { uint16 ChannelIndex ; uint32 ChannelTypeNameIndex ; uint16 NumHeaderBits ; uint16 NumPayloadBits ;)",
    "insertText": "FSendBunchInfo() : ChannelIndex(0) , ChannelTypeNameIndex(0) , NumHeaderBits(0) , NumPayloadBits(0)"
  },
  {
    "label": "FSendBunchInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSendBunchInfo(uint16 InChannelIndex, uint32 InChannelTypeNameIndex, uint16 InNumHeaderBits, uint16 InNumPayloadBits ) : ChannelIndex(InChannelIndex) , ChannelTypeNameIndex(InChannelTypeNameIndex) , NumHeaderBits(InNumHeaderBits) , NumPayloadBits(InNumPayloadBits)"
  },
  {
    "label": "FQueuedRPCInfo()",
    "kind": "Method",
    "detail": "Function (} } ; TMap<UNetConnection*,TArray<FSendBunchInfo>> OutgoingBunches ; struct FQueuedRPCInfo { UNetConnection* Connection ; UObject* TargetObject ; uint32 ActorNameIndex ; uint32 FunctionNameIndex ; uint32 NumHeaderBits ; uint32 NumParameterBits ; uint32 NumFooterBits ;)",
    "insertText": "FQueuedRPCInfo() : Connection(nullptr) , TargetObject(nullptr) , ActorNameIndex(0) , FunctionNameIndex(0) , NumHeaderBits(0) , NumParameterBits(0) , NumFooterBits(0)"
  },
  {
    "label": "GetNameTableIndex()",
    "kind": "Method",
    "detail": "Function (} } ; TArray<FQueuedRPCInfo> QueuedRPCs ; int32)",
    "insertText": "GetNameTableIndex(const FString& Name)"
  },
  {
    "label": "GetAddressTableIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAddressTableIndex(const FString& Address)"
  },
  {
    "label": "TrackCompareProperties_Unsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackCompareProperties_Unsafe(const FString& ObjectName, uint32 Cycles, TBitArray<>& PropertiesCompared, TBitArray<>& PropertiesThatChanged, TArray<uint8>& PropertyNameExportData)"
  },
  {
    "label": "AutoStopTracking()",
    "kind": "Method",
    "detail": "Function (uint32 IgnorePropertyCount ; TSet<FString> ExportedObjects ; void)",
    "insertText": "AutoStopTracking()"
  },
  {
    "label": "FNetworkProfiler()",
    "kind": "Method",
    "detail": "Function (FString NextFileName ; public :)",
    "insertText": "FNetworkProfiler()"
  },
  {
    "label": "EnableTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableTracking(bool bShouldEnableTracking)"
  },
  {
    "label": "SetNextFileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNextFileName(const FString& FileName)"
  },
  {
    "label": "TrackFrameBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackFrameBegin()"
  },
  {
    "label": "SetCurrentConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentConnection(UNetConnection* Connection)"
  },
  {
    "label": "TrackSendRPC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSendRPC(const AActor* Actor, const UFunction* Function, uint32 NumHeaderBits, uint32 NumParameterBits, uint32 NumFooterBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackQueuedRPC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackQueuedRPC(UNetConnection* Connection, UObject* TargetObject, const AActor* Actor, const UFunction* Function, uint32 NumHeaderBits, uint32 NumParameterBits, uint32 NumFooterBits)"
  },
  {
    "label": "FlushQueuedRPCs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushQueuedRPCs(UNetConnection* Connection, UObject* TargetObject)"
  },
  {
    "label": "TrackSocketSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSocketSend(const FString& SocketDesc, const void* Data, uint16 BytesSent)"
  },
  {
    "label": "TrackSocketSendTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSocketSendTo(const FString& SocketDesc, const void* Data, uint16 BytesSent, uint16 NumPacketIdBits, uint16 NumBunchBits, uint16 NumAckBits, uint16 NumPaddingBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackSocketSendToCore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSocketSendToCore(const FString& SocketDesc, const void* Data, uint16 BytesSent, uint16 NumPacketIdBits, uint16 NumBunchBits, uint16 NumAckBits, uint16 NumPaddingBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackSendBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSendBunch(FOutBunch* OutBunch, uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "PushSendBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushSendBunch(UNetConnection* Connection, FOutBunch* OutBunch, uint16 NumHeaderBits, uint16 NumPayloadBits)"
  },
  {
    "label": "PopSendBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopSendBunch(UNetConnection* Connection)"
  },
  {
    "label": "FlushOutgoingBunches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushOutgoingBunches(UNetConnection* Connection)"
  },
  {
    "label": "TrackReplicateActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackReplicateActor(const AActor* Actor, FReplicationFlags RepFlags, uint32 Cycles, UNetConnection* Connection)"
  },
  {
    "label": "TrackReplicatePropertiesMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackReplicatePropertiesMetadata(const UObject* Object, TBitArray<>& InactiveProperties, bool bSentAllProperties, UNetConnection* Connection)"
  },
  {
    "label": "TrackCompareProperties()",
    "kind": "Method",
    "detail": "Function (template<T,ProjectionType> void)",
    "insertText": "TrackCompareProperties(const UObject* Object, uint32 Cycles, TBitArray<>& PropertiesCompared, TBitArray<>& PropertiesThatChanged, const TArray<T>& PropertyNameContainers, ProjectionType PropertyNameProjection)"
  },
  {
    "label": "ScopeLock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "ScopeLock(&CriticalSection)"
  },
  {
    "label": "GetNameSafe()",
    "kind": "Method",
    "detail": "Function (FString ObjectName =)",
    "insertText": "GetNameSafe(Object)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (TArray<uint8> PropertyNameExportData ;)",
    "insertText": "if(!ExportedObjects.Contains(ObjectName))"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (uint32 NumProperties = PropertyNameContainers .)",
    "insertText": "Num()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (PropertyNameExportData .)",
    "insertText": "Reserve(2 + (NumProperties * 2))"
  },
  {
    "label": "PropertyNameAr()",
    "kind": "Method",
    "detail": "Function (FMemoryWriter)",
    "insertText": "PropertyNameAr(PropertyNameExportData)"
  },
  {
    "label": "SerializeIntPacked()",
    "kind": "Method",
    "detail": "Function (PropertyNameAr .)",
    "insertText": "SerializeIntPacked(NumProperties)"
  },
  {
    "label": "GetNameTableIndex()",
    "kind": "Method",
    "detail": "Function (uint32 PropertyNameIndex =)",
    "insertText": "GetNameTableIndex(PropertyNameProjection(PropertyNameContainer))"
  },
  {
    "label": "SerializeIntPacked()",
    "kind": "Method",
    "detail": "Function (PropertyNameAr .)",
    "insertText": "SerializeIntPacked(PropertyNameIndex)"
  },
  {
    "label": "TrackCompareProperties_Unsafe()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "TrackCompareProperties_Unsafe(ObjectName, Cycles, PropertiesCompared, PropertiesThatChanged, PropertyNameExportData)"
  },
  {
    "label": "TrackReplicateProperty()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "TrackReplicateProperty(const FProperty* Property, uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackWritePropertyHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackWritePropertyHeader(const FProperty* Property, uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackEvent(const FString& EventName, const FString& EventDescription, UNetConnection* Connection)"
  },
  {
    "label": "TrackSessionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSessionChange(bool bShouldContinueTracking, const FURL& InURL)"
  },
  {
    "label": "TrackSendAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackSendAck(uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackExportBunch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackExportBunch(uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackMustBeMappedGuids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackMustBeMappedGuids(uint16 NumGuids, uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackBeginContentBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackBeginContentBlock(UObject* Object, uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackEndContentBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackEndContentBlock(UObject* Object, uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "TrackWritePropertyHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackWritePropertyHandle(uint16 NumBits, UNetConnection* Connection)"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec(UWorld * InWorld, const TCHAR* Cmd, FOutputDevice & Ar)"
  },
  {
    "label": "IsTrackingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrackingEnabled()"
  },
  {
    "label": "OnNetworkProfileStarted()",
    "kind": "Method",
    "detail": "Function (} FOnNetworkProfileStarted&)",
    "insertText": "OnNetworkProfileStarted()"
  },
  {
    "label": "FNetworkProfilerScopedIgnoreReplicateProperties()",
    "kind": "Method",
    "detail": "Function (+ + GNetworkProfiler . IgnorePropertyCount ; } ~)",
    "insertText": "FNetworkProfilerScopedIgnoreReplicateProperties()"
  },
  {
    "label": "FNetworkProfilerScopedIgnoreReplicateProperties()",
    "kind": "Method",
    "detail": "Function (- - GNetworkProfiler . IgnorePropertyCount ; } private :)",
    "insertText": "FNetworkProfilerScopedIgnoreReplicateProperties(const FNetworkProfilerScopedIgnoreReplicateProperties&)"
  },
  {
    "label": "FNetworkProfilerScopedIgnoreReplicateProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNetworkProfilerScopedIgnoreReplicateProperties(FNetworkProfilerScopedIgnoreReplicateProperties&&)"
  }
]