[
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FDeltaTimeRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeltaTimeRecord"
  },
  {
    "label": "FStackAttributeContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStackAttributeContainer"
  },
  {
    "label": "IAnimRootMotionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimRootMotionProvider"
  },
  {
    "label": "IAnimRootMotionProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" CoreMinimal . h \" # include \" Features / IModularFeature . h \" # include \" UObject / ObjectMacros . h \" class UAnimSequence ; struct FDeltaTimeRecord ; namespace UE { namespace Anim { struct FStackAttributeContainer ; class IAnimRootMotionProvider : public IModularFeature { public : const FName ModularFeatureName ; const FName AttributeName ; ~)",
    "insertText": "IAnimRootMotionProvider()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const IAnimRootMotionProvider*)",
    "insertText": "Get()"
  },
  {
    "label": "SampleRootMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SampleRootMotion(const FDeltaTimeRecord& SampleRange, const UAnimSequence& Sequence, bool bLoopingSequence, FStackAttributeContainer& OutAttributes)"
  },
  {
    "label": "SetRootMotion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRootMotion(const FTransform& RootMotionDelta, FStackAttributeContainer& OutAttributes)"
  },
  {
    "label": "ExtractRootMotion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExtractRootMotion(const FStackAttributeContainer& Attributes, FTransform& OutRootMotionDelta)"
  },
  {
    "label": "HasRootMotion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasRootMotion(const FStackAttributeContainer& Attributes)"
  }
]