[
  {
    "label": "TContactPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TContactPoint"
  },
  {
    "label": "GenericConvexConvexContactPointSwept()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" # include \" Chaos / CollisionResolutionTypes . h \" # include \" Chaos / ImplicitFwd . h \" namespace Chaos { template<T> class TContactPoint ; using FContactPoint = TContactPoint<FReal> ; FContactPoint)",
    "insertText": "GenericConvexConvexContactPointSwept(const FImplicitObject& A, const FRigidTransform3& AStartTM, const FRigidTransform3& AEndTM, const FImplicitObject& B, const FRigidTransform3& BStartTM, const FRigidTransform3& BEndTM, const FVec3& Dir, const FReal Length, const FReal IgnorePenetration, const FReal TargetPenetration, FReal& TOI)"
  }
]