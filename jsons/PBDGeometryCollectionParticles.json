[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TPBDGeometryCollectionParticles",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPBDGeometryCollectionParticles"
  },
  {
    "label": "TPBDGeometryCollectionParticles()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / ArrayCollectionArray . h \" # include \" Chaos / PBDRigidClusteredParticles . h \" namespace Chaos { template<class T,int d> class TPBDGeometryCollectionParticles : public TPBDRigidClusteredParticles<T,d> { public :)",
    "insertText": "TPBDGeometryCollectionParticles() : TPBDRigidClusteredParticles<T, d>()"
  },
  {
    "label": "InitHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitHelper()"
  },
  {
    "label": "TPBDGeometryCollectionParticles()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TPBDGeometryCollectionParticles(const TPBDRigidClusteredParticles<T, d>& Other)"
  },
  {
    "label": "TPBDGeometryCollectionParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TPBDGeometryCollectionParticles(TPBDRigidClusteredParticles<T, d>&& Other) : TPBDRigidClusteredParticles<T, d>(MoveTemp(Other))"
  },
  {
    "label": "TPBDGeometryCollectionParticles()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "TPBDGeometryCollectionParticles()"
  },
  {
    "label": "Handle()",
    "kind": "Method",
    "detail": "Function (} typedef TPBDGeometryCollectionParticleHandle<T,d> THandleType ; const THandleType*)",
    "insertText": "Handle(int32 Index)"
  }
]