[
  {
    "label": "IKismetCompilerBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKismetCompilerBackend"
  },
  {
    "label": "FKismetCompilerVMBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerVMBackend"
  },
  {
    "label": "FKismetCompilerVMBackend()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" KismetCompiledFunctionContext . h \" # include \" KismetCompiler . h \" class IKismetCompilerBackend { } ; class FKismetCompilerVMBackend : public IKismetCompilerBackend { public : typedef TMap<FBlueprintCompiledStatement*,CodeSkipSizeType> TStatementToSkipSizeMap ; protected : UBlueprint* Blueprint ; UEdGraphSchema_K2* Schema ; FCompilerResultsLog& MessageLog ; FKismetCompilerContext& CompilerContext ; TStatementToSkipSizeMap UbergraphStatementLabelMap ; public :)",
    "insertText": "FKismetCompilerVMBackend(UBlueprint* InBlueprint, UEdGraphSchema_K2* InSchema, FKismetCompilerContext& InContext) : Blueprint(InBlueprint) , Schema(InSchema) , MessageLog(InContext.MessageLog) , CompilerContext(InContext)"
  },
  {
    "label": "GenerateCodeFromClass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateCodeFromClass(UClass* SourceClass, TIndirectArray<FKismetFunctionContext>& Functions, bool bGenerateStubsOnly=false)"
  },
  {
    "label": "ConstructFunction()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ConstructFunction(FKismetFunctionContext& FunctionContext, bool bIsUbergraph, bool bGenerateStubOnly)"
  }
]