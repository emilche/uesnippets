[
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FMovieSceneBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBinding"
  },
  {
    "label": "FSubSequenceSpace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubSequenceSpace"
  },
  {
    "label": "ISequenceVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ISequenceVisitor"
  },
  {
    "label": "FSequenceVisitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequenceVisitParams"
  },
  {
    "label": "FSubSequenceSpace()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Evaluation / MovieSceneSequenceTransform . h \" # include \" HAL / Platform . h \" # include \" Math / Range . h \" # include \" Misc / FrameNumber . h \" # include \" MovieSceneSequenceID . h \" class UMovieSceneSection ; class UMovieSceneSequence ; class UMovieSceneTrack ; struct FGuid ; struct FMovieSceneBinding ; namespace UE { namespace MovieScene { struct FSubSequenceSpace {)",
    "insertText": "FSubSequenceSpace()"
  },
  {
    "label": "ISequenceVisitor()",
    "kind": "Method",
    "detail": "Function (FMovieSceneSequenceTransform RootToSequenceTransform ; # if WITH_EDITORONLY_DATA FMovieSceneSequenceTransform RootToUnwarpedLocalTransform ; # endif FMovieSceneTransformBreadcrumbs StartBreadcrumbs ; FMovieSceneTransformBreadcrumbs EndBreadcrumbs ; FMovieSceneSequenceID SequenceID ; TRange<FFrameNumber> RootClampRange ; TRange<FFrameNumber> LocalClampRange ; int16 HierarchicalBias ; } ; struct ISequenceVisitor { ~)",
    "insertText": "ISequenceVisitor()"
  },
  {
    "label": "VisitObjectBinding()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VisitObjectBinding(const FMovieSceneBinding&, const FSubSequenceSpace& LocalSpace)"
  },
  {
    "label": "VisitTrack()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VisitTrack(UMovieSceneTrack*, const FGuid&, const FSubSequenceSpace& LocalSpace)"
  },
  {
    "label": "VisitSection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VisitSection(UMovieSceneTrack*, UMovieSceneSection*, const FGuid&, const FSubSequenceSpace& LocalSpace)"
  },
  {
    "label": "VisitSubSequence()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "VisitSubSequence(UMovieSceneSequence*, const FGuid&, const FSubSequenceSpace& LocalSpace)"
  },
  {
    "label": "FSequenceVisitParams()",
    "kind": "Method",
    "detail": "Function (} } ; struct FSequenceVisitParams {)",
    "insertText": "FSequenceVisitParams() : bVisitRootTracks(false) , bVisitObjectBindings(false) , bVisitTracks(false) , bVisitSections(false) , bVisitDisabledSections(false) , bVisitSubSequences(false) , bVisitDisabledSubSequences(false)"
  },
  {
    "label": "CanVisitTracksOrSections()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanVisitTracksOrSections()"
  }
]