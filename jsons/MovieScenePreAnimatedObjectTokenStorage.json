[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FRestoreStateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRestoreStateParams"
  },
  {
    "label": "TAutoRegisterPreAnimatedStorageID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoRegisterPreAnimatedStorageID"
  },
  {
    "label": "FPreAnimatedObjectTokenTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedObjectTokenTraits"
  },
  {
    "label": "FAnimTypePreAnimatedStateObjectStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimTypePreAnimatedStateObjectStorage"
  },
  {
    "label": "RestorePreAnimatedValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" Evaluation / MovieSceneAnimTypeID . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedObjectGroupManager . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedObjectStorage . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateExtension . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStateTypes . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStorageID . h \" # include \" Evaluation / PreAnimatedState / MovieSceneRestoreStateParams . h \" # include \" Misc / InlineValue . h \" # include \" MovieSceneExecutionToken . h \" # include \" Templates / Tuple . h \" # include \" UObject / ObjectKey . h \" class UObject ; namespace UE { namespace MovieScene { struct FRestoreStateParams ; template<StorageType> struct TAutoRegisterPreAnimatedStorageID ; struct FPreAnimatedObjectTokenTraits : FBoundObjectPreAnimatedStateTraits { using KeyType = TTuple<FObjectKey,FMovieSceneAnimTypeID> ; using StorageType = IMovieScenePreAnimatedTokenPtr ; void)",
    "insertText": "RestorePreAnimatedValue(const KeyType& InKey, IMovieScenePreAnimatedTokenPtr& Token, const FRestoreStateParams& Params)"
  },
  {
    "label": "RestoreState()",
    "kind": "Method",
    "detail": "Function (Token ->)",
    "insertText": "RestoreState(*Object, Params)"
  },
  {
    "label": "FindEntry()",
    "kind": "Method",
    "detail": "Function (} } } ; struct FAnimTypePreAnimatedStateObjectStorage : TPreAnimatedStateStorage<FPreAnimatedObjectTokenTraits> { TAutoRegisterPreAnimatedStorageID<FAnimTypePreAnimatedStateObjectStorage> StorageID ; FPreAnimatedStateEntry)",
    "insertText": "FindEntry(UObject* Object, FMovieSceneAnimTypeID AnimTypeID)"
  },
  {
    "label": "MakeEntry()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedStateEntry)",
    "insertText": "MakeEntry(UObject* Object, FMovieSceneAnimTypeID AnimTypeID)"
  }
]