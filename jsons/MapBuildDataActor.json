[
  {
    "label": "UMapBuildDataRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMapBuildDataRegistry"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FMapBuildDataActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMapBuildDataActorDesc"
  },
  {
    "label": "AMapBuildDataActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AMapBuildDataActor"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" WorldPartition / WorldPartitionActorDesc . h \" # include \" GameFramework / Actor . h \" # include \" MapBuildDataActor . generated . h \" class UMapBuildDataRegistry ;)",
    "insertText": "UCLASS(NotPlaceable, HideCategories=(Rendering, Replication, Collision, Physics, Navigation, Networking, Input, Actor, LevelInstance, Cooking))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: void SetCellPackage(FName InCellPackage)"
  },
  {
    "label": "SetBounds()",
    "kind": "Method",
    "detail": "Function (CellPackage = InCellPackage ; } void)",
    "insertText": "SetBounds(FBox& Bounds)"
  },
  {
    "label": "SetActorInstances()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetActorInstances(TArray<FGuid>& InActorInstances)"
  },
  {
    "label": "GetBuildData()",
    "kind": "Method",
    "detail": "Function (ActorInstances = InActorInstances ; } # endif UMapBuildDataRegistry*)",
    "insertText": "GetBuildData(bool bCreateIfNotFound = false)"
  },
  {
    "label": "SetBuildData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBuildData(UMapBuildDataRegistry* MapBuildData)"
  },
  {
    "label": "LinkToActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkToActor(AActor* Actor)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "GetActorBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetActorBounds(bool bOnlyCollidingComponents, FVector& OutOrigin, FVector& OutBoxExtent, bool bIncludeFromChildActors)"
  },
  {
    "label": "PreRegisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRegisterAllComponents()"
  },
  {
    "label": "PostUnregisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUnregisterAllComponents()"
  },
  {
    "label": "CreateClassActorDesc()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TUniquePtr<class FWorldPartitionActorDesc>)",
    "insertText": "CreateClassActorDesc()"
  },
  {
    "label": "PopulatePIEDuplicationSeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulatePIEDuplicationSeed(FDuplicationSeedInterface& DupSeed)"
  },
  {
    "label": "GetStreamingBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStreamingBounds(FBox& OutRuntimeBounds, FBox& OutEditorBounds)"
  },
  {
    "label": "AddToWorldMapBuildData()",
    "kind": "Method",
    "detail": "Function (bool bAddedToWorld ; void)",
    "insertText": "AddToWorldMapBuildData()"
  },
  {
    "label": "RemoveFromWorldMapBuildData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromWorldMapBuildData()"
  },
  {
    "label": "InitializeRenderingResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRenderingResources()"
  },
  {
    "label": "ReleaseRenderingResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRenderingResources()"
  },
  {
    "label": "FMapBuildDataActorDesc()",
    "kind": "Method",
    "detail": "Function (class FMapBuildDataActorDesc ; } ; # if WITH_EDITOR class FMapBuildDataActorDesc : public FWorldPartitionActorDesc { class AMapBuildDataActor ; public : FName CellPackage ; protected :)",
    "insertText": "FMapBuildDataActorDesc()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const AActor* InActor)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const FWorldPartitionActorDesc* Other)"
  },
  {
    "label": "GetSizeOf()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeOf()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsRuntimeRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRuntimeRelevant(const FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "DEFINE_ACTORDESC_TYPE()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DEFINE_ACTORDESC_TYPE(AMapBuildDataActor, FMapBuildDataActorDesc)"
  }
]