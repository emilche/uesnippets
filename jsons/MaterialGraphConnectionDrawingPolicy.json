[
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UMaterialGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraph"
  },
  {
    "label": "UMaterialGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphSchema"
  },
  {
    "label": "FMaterialGraphConnectionDrawingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialGraphConnectionDrawingPolicy"
  },
  {
    "label": "UMaterialGraphNode_Knot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphNode_Knot"
  },
  {
    "label": "ShouldChangeTangentForKnot()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ConnectionDrawingPolicy . h \" # include \" Containers / Map . h \" # include \" EdGraph / EdGraphNode . h \" # include \" HAL / Platform . h \" # include \" Math / Vector2D . h \" class FSlateRect ; class FSlateWindowElementList ; class UEdGraph ; class UEdGraphPin ; class UMaterialGraph ; class UMaterialGraphSchema ; class FMaterialGraphConnectionDrawingPolicy : public FConnectionDrawingPolicy { protected : UMaterialGraph* MaterialGraph ; const UMaterialGraphSchema* MaterialGraphSchema ; TMap<class UMaterialGraphNode_Knot*,bool> KnotToReversedDirectionMap ; bool)",
    "insertText": "ShouldChangeTangentForKnot(class UMaterialGraphNode_Knot* Knot)"
  },
  {
    "label": "GetAverageConnectedPosition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAverageConnectedPosition(class UMaterialGraphNode_Knot* Knot, EEdGraphPinDirection Direction, FVector2D& OutPos)"
  },
  {
    "label": "FindPinCenter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindPinCenter(UEdGraphPin* Pin, FVector2D& OutCenter)"
  },
  {
    "label": "FMaterialGraphConnectionDrawingPolicy()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMaterialGraphConnectionDrawingPolicy(int32 InBackLayerID, int32 InFrontLayerID, float ZoomFactor, const FSlateRect& InClippingRect, FSlateWindowElementList& InDrawElements, UEdGraph* InGraphObj)"
  },
  {
    "label": "GetConnectionToolTip()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IToolTip>)",
    "insertText": "GetConnectionToolTip(const SGraphPanel& GraphPanel, const FGraphSplineOverlapResult& OverlapData)"
  },
  {
    "label": "DetermineWiringStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineWiringStyle(UEdGraphPin* OutputPin, UEdGraphPin* InputPin, FConnectionParams& Params)"
  },
  {
    "label": "GetNodePinInfo()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetNodePinInfo(const TSharedPtr<SGraphPin>& PinWidget)"
  }
]