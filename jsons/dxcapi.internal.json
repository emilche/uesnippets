[
  {
    "label": "ITextFont",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITextFont"
  },
  {
    "label": "IEnumSTATSTG",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IEnumSTATSTG"
  },
  {
    "label": "ID3D10Blob",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10Blob"
  },
  {
    "label": "LEGAL_INTRINSIC_TEMPLATES",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LEGAL_INTRINSIC_TEMPLATES"
  },
  {
    "label": "LEGAL_INTRINSIC_COMPTYPES",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LEGAL_INTRINSIC_COMPTYPES"
  },
  {
    "label": "HLSL_INTRINSIC_ARGUMENT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HLSL_INTRINSIC_ARGUMENT"
  },
  {
    "label": "HLSL_INTRINSIC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HLSL_INTRINSIC"
  },
  {
    "label": "IDxcIntrinsicTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcIntrinsicTable"
  },
  {
    "label": "IDxcSemanticDefineValidator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcSemanticDefineValidator"
  },
  {
    "label": "IDxcLangExtensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcLangExtensions"
  },
  {
    "label": "IDxcLangExtensions2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcLangExtensions2"
  },
  {
    "label": "IDxcLangExtensions3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcLangExtensions3"
  },
  {
    "label": "IDxcSystemAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcSystemAccess"
  },
  {
    "label": "IDxcContainerEventsHandler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcContainerEventsHandler"
  },
  {
    "label": "IDxcContainerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDxcContainerEvent"
  },
  {
    "label": "AR_QUAL_IN_OUT()",
    "kind": "Method",
    "detail": "Function (# ifndef __DXC_API_INTERNAL__ # define __DXC_API_INTERNAL__ # include \" dxcapi . h \" typedef struct ITextFont ITextFont ; typedef struct IEnumSTATSTG IEnumSTATSTG ; typedef struct ID3D10Blob ID3D10Blob ; # define AR_QUAL_IN 0 x0000000000000010ULL # define AR_QUAL_OUT 0 x0000000000000020ULL # define AR_QUAL_REF 0 x0000000000000040ULL # define AR_QUAL_CONST 0 x0000000000000200ULL # define AR_QUAL_ROWMAJOR 0 x0000000000000400ULL # define AR_QUAL_COLMAJOR 0 x0000000000000800ULL # define AR_QUAL_GROUPSHARED 0 x0000000000001000ULL # define)",
    "insertText": "AR_QUAL_IN_OUT(AR_QUAL_IN | AR_QUAL_OUT)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (const BYTE INTRIN_TEMPLATE_VARARGS = 0 xfe ; const BYTE INTRIN_TEMPLATE_FROM_FUNCTION = 0 xfd ; enum LEGAL_INTRINSIC_TEMPLATES { LITEMPLATE_VOID = 0,LITEMPLATE_SCALAR = 1,LITEMPLATE_VECTOR = 2,LITEMPLATE_MATRIX = 3,LITEMPLATE_ANY = 4,LITEMPLATE_OBJECT = 5,LITEMPLATE_ARRAY = 6,LITEMPLATE_COUNT = 7 } ; const BYTE INTRIN_COMPTYPE_FROM_TYPE_ELT0 = 0 xff ; const BYTE INTRIN_COMPTYPE_FROM_NODEOUTPUT = 0 xfe ; enum LEGAL_INTRINSIC_COMPTYPES { LICOMPTYPE_VOID = 0,LICOMPTYPE_BOOL = 1,LICOMPTYPE_INT = 2,LICOMPTYPE_UINT = 3,LICOMPTYPE_ANY_INT = 4,LICOMPTYPE_ANY_INT32 = 5,LICOMPTYPE_UINT_ONLY = 6,LICOMPTYPE_FLOAT = 7,LICOMPTYPE_ANY_FLOAT = 8,LICOMPTYPE_FLOAT_LIKE = 9,LICOMPTYPE_FLOAT_DOUBLE = 1 0,LICOMPTYPE_DOUBLE = 1 1,LICOMPTYPE_DOUBLE_ONLY = 1 2,LICOMPTYPE_NUMERIC = 1 3,LICOMPTYPE_NUMERIC32 = 1 4,LICOMPTYPE_NUMERIC32_ONLY = 1 5,LICOMPTYPE_ANY = 1 6,LICOMPTYPE_SAMPLER1D = 1 7,LICOMPTYPE_SAMPLER2D = 1 8,LICOMPTYPE_SAMPLER3D = 1 9,LICOMPTYPE_SAMPLERCUBE = 2 0,LICOMPTYPE_SAMPLERCMP = 2 1,LICOMPTYPE_SAMPLER = 2 2,LICOMPTYPE_STRING = 2 3,LICOMPTYPE_WAVE = 2 4,LICOMPTYPE_UINT64 = 2 5,LICOMPTYPE_FLOAT16 = 2 6,LICOMPTYPE_INT16 = 2 7,LICOMPTYPE_UINT16 = 2 8,LICOMPTYPE_NUMERIC16_ONLY = 2 9,LICOMPTYPE_RAYDESC = 3 0,LICOMPTYPE_ACCELERATION_STRUCT = 3 1,LICOMPTYPE_USER_DEFINED_TYPE = 3 2,LICOMPTYPE_TEXTURE2D = 3 3,LICOMPTYPE_TEXTURE2DARRAY = 3 4,LICOMPTYPE_RESOURCE = 3 5,LICOMPTYPE_INT32_ONLY = 3 6,LICOMPTYPE_INT64_ONLY = 3 7,LICOMPTYPE_ANY_INT64 = 3 8,LICOMPTYPE_FLOAT32_ONLY = 3 9,LICOMPTYPE_INT8_4PACKED = 4 0,LICOMPTYPE_UINT8_4PACKED = 4 1,LICOMPTYPE_ANY_INT16_OR_32 = 4 2,LICOMPTYPE_SINT16_OR_32_ONLY = 4 3,LICOMPTYPE_ANY_SAMPLER = 4 4,LICOMPTYPE_BYTEADDRESSBUFFER = 4 5,LICOMPTYPE_RWBYTEADDRESSBUFFER = 4 6,LICOMPTYPE_WAVE_MATRIX_LEFT = 4 7,LICOMPTYPE_WAVE_MATRIX_RIGHT = 4 8,LICOMPTYPE_WAVE_MATRIX_LEFT_COL_ACC = 4 9,LICOMPTYPE_WAVE_MATRIX_RIGHT_ROW_ACC = 5 0,LICOMPTYPE_WAVE_MATRIX_ACCUMULATOR = 5 1,LICOMPTYPE_NODE_RECORD_OR_UAV = 5 2,LICOMPTYPE_ANY_NODE_OUTPUT_RECORD = 5 3,LICOMPTYPE_GROUP_NODE_OUTPUT_RECORDS = 5 4,LICOMPTYPE_THREAD_NODE_OUTPUT_RECORDS = 5 5,LICOMPTYPE_COUNT = 5 6 } ; const BYTE IA_SPECIAL_BASE = 0 xf0 ; const BYTE IA_R = 0 xf0 ; const BYTE IA_C = 0 xf1 ; const BYTE IA_R2 = 0 xf2 ; const BYTE IA_C2 = 0 xf3 ; const BYTE IA_SPECIAL_SLOTS = 4 ; struct HLSL_INTRINSIC_ARGUMENT { LPCSTR pName ; UINT64 qwUsage ; BYTE uTemplateId ; BYTE uLegalTemplates ; BYTE uComponentTypeId ; BYTE uLegalComponentTypes ; BYTE uRows ; BYTE uCols ; } ; struct HLSL_INTRINSIC { UINT Op ; BOOL bReadOnly ; BOOL bReadNone ; BOOL bIsWave ; INT iOverloadParamIndex ; UINT uNumArgs ; const HLSL_INTRINSIC_ARGUMENT* pArgs ; } ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcIntrinsicTable, \"f0d4da3f-f863-4660-b8b4-dfd94ded6215\")"
  },
  {
    "label": "GetTableName()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetTableName(LPCSTR *pTableName)"
  },
  {
    "label": "LookupIntrinsic()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "LookupIntrinsic(LPCWSTR typeName, LPCWSTR functionName, const HLSL_INTRINSIC **pIntrinsic, UINT64 *pLookupCookie)"
  },
  {
    "label": "GetLoweringStrategy()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetLoweringStrategy(UINT opcode, LPCSTR *pStrategy)"
  },
  {
    "label": "GetIntrinsicName()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetIntrinsicName(UINT opcode, LPCSTR *pName)"
  },
  {
    "label": "GetDxilOpCode()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDxilOpCode(UINT opcode, UINT *pDxilOpcode)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcSemanticDefineValidator, \"1d063e4f-515a-4d57-a12a-431f6a44cfb9\")"
  },
  {
    "label": "GetSemanticDefineWarningsAndErrors()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetSemanticDefineWarningsAndErrors(LPCSTR pName, LPCSTR pValue, IDxcBlobEncoding **ppWarningBlob, IDxcBlobEncoding **ppErrorBlob)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcLangExtensions, \"282a56b4-3f56-4360-98c7-9ea04a752272\")"
  },
  {
    "label": "RegisterSemanticDefine()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterSemanticDefine(LPCWSTR name)"
  },
  {
    "label": "RegisterSemanticDefineExclusion()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterSemanticDefineExclusion(LPCWSTR name)"
  },
  {
    "label": "RegisterDefine()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterDefine(LPCWSTR name)"
  },
  {
    "label": "RegisterIntrinsicTable()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterIntrinsicTable(IDxcIntrinsicTable *pTable)"
  },
  {
    "label": "SetSemanticDefineValidator()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetSemanticDefineValidator(IDxcSemanticDefineValidator *pValidator)"
  },
  {
    "label": "SetSemanticDefineMetaDataName()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetSemanticDefineMetaDataName(LPCSTR name)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcLangExtensions2, \"2490C368-89EE-4491-A4B2-C6547B6C9381\")"
  },
  {
    "label": "SetTargetTriple()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetTargetTriple(LPCSTR name)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcLangExtensions3, \"A1B19880-FB1F-4920-9BC5-50356483BAC1\")"
  },
  {
    "label": "RegisterNonOptSemanticDefine()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterNonOptSemanticDefine(LPCWSTR name)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcSystemAccess, \"454b764f-3549-475b-958c-a7a6fcd05fbc\")"
  },
  {
    "label": "EnumFiles()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "EnumFiles(LPCWSTR fileName, IEnumSTATSTG **pResult)"
  },
  {
    "label": "OpenStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "OpenStorage(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes, IUnknown **pResult)"
  },
  {
    "label": "SetStorageTime()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetStorageTime(IUnknown *storage, const FILETIME *lpCreationTime, const FILETIME *lpLastAccessTime, const FILETIME *lpLastWriteTime)"
  },
  {
    "label": "GetFileInformationForStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetFileInformationForStorage(IUnknown *storage, LPBY_HANDLE_FILE_INFORMATION lpFileInformation)"
  },
  {
    "label": "GetFileTypeForStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetFileTypeForStorage(IUnknown *storage, DWORD *fileType)"
  },
  {
    "label": "CreateHardLinkInStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateHardLinkInStorage(LPCWSTR lpFileName, LPCWSTR lpExistingFileName)"
  },
  {
    "label": "MoveStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "MoveStorage(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, DWORD dwFlags)"
  },
  {
    "label": "GetFileAttributesForStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetFileAttributesForStorage(LPCWSTR lpFileName, DWORD *pResult)"
  },
  {
    "label": "DeleteStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "DeleteStorage(LPCWSTR lpFileName)"
  },
  {
    "label": "RemoveDirectoryStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "RemoveDirectoryStorage(LPCWSTR lpFileName)"
  },
  {
    "label": "CreateDirectoryStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateDirectoryStorage(LPCWSTR lpPathName)"
  },
  {
    "label": "GetCurrentDirectoryForStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetCurrentDirectoryForStorage(DWORD nBufferLength, LPWSTR lpBuffer, DWORD *written)"
  },
  {
    "label": "GetMainModuleFileNameW()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetMainModuleFileNameW(DWORD nBufferLength, LPWSTR lpBuffer, DWORD *written)"
  },
  {
    "label": "GetTempStoragePath()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetTempStoragePath(DWORD nBufferLength, LPWSTR lpBuffer, DWORD *written)"
  },
  {
    "label": "SupportsCreateSymbolicLink()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SupportsCreateSymbolicLink(BOOL *pResult)"
  },
  {
    "label": "CreateSymbolicLinkInStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateSymbolicLinkInStorage(LPCWSTR lpSymlinkFileName, LPCWSTR lpTargetFileName, DWORD dwFlags)"
  },
  {
    "label": "CreateStorageMapping()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateStorageMapping(IUnknown *hFile, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow, IUnknown **pResult)"
  },
  {
    "label": "MapViewOfFile()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "MapViewOfFile(IUnknown *hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap, ID3D10Blob **pResult)"
  },
  {
    "label": "OpenStdStorage()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "OpenStdStorage(int standardFD, IUnknown **pResult)"
  },
  {
    "label": "GetStreamDisplay()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetStreamDisplay(ITextFont **textFont, unsigned *columnCount)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcContainerEventsHandler, \"e991ca8d-2045-413c-a8b8-788b2c06e14d\")"
  },
  {
    "label": "OnDxilContainerBuilt()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "OnDxilContainerBuilt(IDxcBlob *pSource, IDxcBlob **ppTarget)"
  },
  {
    "label": "CROSS_PLATFORM_UUIDOF()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "CROSS_PLATFORM_UUIDOF(IDxcContainerEvent, \"0cfc5058-342b-4ff2-83f7-04c12aad3d01\")"
  },
  {
    "label": "RegisterDxilContainerEventHandler()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "RegisterDxilContainerEventHandler(IDxcContainerEventsHandler *pHandler, UINT64 *pCookie)"
  },
  {
    "label": "UnRegisterDxilContainerEventHandler()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "UnRegisterDxilContainerEventHandler(UINT64 cookie)"
  }
]