[
  {
    "label": "CompactCasKeyTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompactCasKeyTable"
  },
  {
    "label": "CompactPathTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompactPathTable"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Config"
  },
  {
    "label": "NetworkClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkClient"
  },
  {
    "label": "RootPaths",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootPaths"
  },
  {
    "label": "Session",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Session"
  },
  {
    "label": "StorageImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StorageImpl"
  },
  {
    "label": "CacheStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CacheStats"
  },
  {
    "label": "CasKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CasKey"
  },
  {
    "label": "ProcessStartInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProcessStartInfo"
  },
  {
    "label": "StringView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StringView"
  },
  {
    "label": "CacheClientCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CacheClientCreateInfo"
  },
  {
    "label": "CacheResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CacheResult"
  },
  {
    "label": "CacheClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CacheClient"
  },
  {
    "label": "Bucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Bucket"
  },
  {
    "label": "PreparedDir",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PreparedDir"
  },
  {
    "label": "CacheClientCreateInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaHash . h \" # include \" UbaLogger . h \" # include \" UbaProcessHandle . h \" namespace uba { class CompactCasKeyTable ; class CompactPathTable ; class Config ; class NetworkClient ; class RootPaths ; class Session ; class StorageImpl ; struct CacheStats ; struct CasKey ; struct ProcessStartInfo ; struct StringView ; struct CacheClientCreateInfo {)",
    "insertText": "CacheClientCreateInfo(LogWriter& w, StorageImpl& st, NetworkClient& c, Session& se) : writer(w), storage(st), client(c), session(se)"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} LogWriter& writer ; StorageImpl& storage ; NetworkClient& client ; Session& session ; void)",
    "insertText": "Apply(Config& config)"
  },
  {
    "label": "CacheClient()",
    "kind": "Method",
    "detail": "Function (bool reportMissReason = false ; bool useDirectoryPreparsing = true ; bool validateCacheWritesInput = false ; bool validateCacheWritesOutput = false ; bool useRoots = true ; bool useCacheHit = true ; } ; struct CacheResult { bool hit = false ; Vector<ProcessLogLine> logLines ; } ; class CacheClient { public :)",
    "insertText": "CacheClient(const CacheClientCreateInfo& info)"
  },
  {
    "label": "CacheClient()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CacheClient()"
  },
  {
    "label": "WriteToCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteToCache(const RootPaths& rootPaths, u32 bucketId, const ProcessStartInfo& info, const u8* inputs, u64 inputsSize, const u8* outputs, u64 outputsSize, const u8* logLines, u64 logLinesSize, u32 processId = 0)"
  },
  {
    "label": "FetchFromCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FetchFromCache(CacheResult& outResult, const RootPaths& rootPaths, u32 bucketId, const ProcessStartInfo& info)"
  },
  {
    "label": "RequestServerShutdown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestServerShutdown(const tchar* reason)"
  },
  {
    "label": "ExecuteCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecuteCommand(Logger& logger, const tchar* command, const tchar* destinationFile = nullptr, const tchar* additionalInfo = nullptr)"
  },
  {
    "label": "GetLogger()",
    "kind": "Method",
    "detail": "Function (MutableLogger&)",
    "insertText": "GetLogger()"
  },
  {
    "label": "SendPathTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendPathTable(Bucket& bucket, u32 requiredPathTableSize)"
  },
  {
    "label": "SendCasTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendCasTable(Bucket& bucket, u32 requiredCasTableSize)"
  },
  {
    "label": "SendCacheEntry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendCacheEntry(Bucket& bucket, const RootPaths& rootPaths, const CasKey& cmdKey, const Map<u32, u32>& inputsStringToCasKey, const Map<u32, u32>& outputsStringToCasKey, const u8* logLines, u64 logLinesSize, u64& outBytesSent)"
  },
  {
    "label": "FetchCasTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FetchCasTable(Bucket& bucket, CacheStats& stats, u32 requiredCasTableOffset)"
  },
  {
    "label": "ReportUsedEntry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReportUsedEntry(Vector<ProcessLogLine>& outLogLines, bool ownedLogLines, Bucket& bucket, const CasKey& cmdKey, u32 entryId)"
  },
  {
    "label": "PopulateLogLines()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateLogLines(Vector<ProcessLogLine>& outLogLines, const u8* mem, u64 memLen)"
  },
  {
    "label": "GetCmdKey()",
    "kind": "Method",
    "detail": "Function (CasKey)",
    "insertText": "GetCmdKey(const RootPaths& rootPaths, const ProcessStartInfo& info)"
  },
  {
    "label": "ShouldNormalize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldNormalize(const StringBufferBase& path)"
  },
  {
    "label": "GetLocalPathAndCasKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLocalPathAndCasKey(Bucket& bucket, const RootPaths& rootPaths, StringBufferBase& outPath, CasKey& outKey, CompactCasKeyTable& casKeyTable, CompactPathTable& pathTable, u32 offset)"
  },
  {
    "label": "IsFileCompressed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFileCompressed(const ProcessStartInfo& info, const StringView& filename)"
  },
  {
    "label": "PreparseDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreparseDirectory(const StringKey& fileNameKey, const StringBufferBase& filePath)"
  },
  {
    "label": "CacheClient()",
    "kind": "Method",
    "detail": "Function (MutableLogger m_logger ; StorageImpl& m_storage ; NetworkClient& m_client ; Session& m_session ; bool m_reportMissReason ; bool m_useDirectoryPreParsing ; bool m_validateCacheWritesInput ; bool m_validateCacheWritesOutput ; bool m_useRoots ; bool m_useCacheHit ; Atomic<bool> m_connected ; ReaderWriterLock m_bucketsLock ; UnorderedMap<u32,Bucket> m_buckets ; ReaderWriterLock m_sendOneAtTheTimeLock ; ReaderWriterLock m_directoryPreparserLock ; struct PreparedDir { ReaderWriterLock lock ; bool done = false ; } ; UnorderedMap<StringKey,PreparedDir> m_directoryPreparser ;)",
    "insertText": "CacheClient(const CacheClient&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CacheClient&)",
    "insertText": "operator(const CacheClient&)"
  }
]