[
  {
    "label": "snappy_compress()",
    "kind": "Method",
    "detail": "Function (# ifndef THIRD_PARTY_SNAPPY_OPENSOURCE_SNAPPY_C_H_ # define THIRD_PARTY_SNAPPY_OPENSOURCE_SNAPPY_C_H_ # ifdef __cplusplus \" C \" { # endif # include<stddef . h> typedef enum { SNAPPY_OK = 0,SNAPPY_INVALID_INPUT = 1,SNAPPY_BUFFER_TOO_SMALL = 2 } snappy_status ; snappy_status)",
    "insertText": "snappy_compress(const char* input, size_t input_length, char* compressed, size_t* compressed_length)"
  },
  {
    "label": "snappy_uncompress()",
    "kind": "Method",
    "detail": "Function (snappy_status)",
    "insertText": "snappy_uncompress(const char* compressed, size_t compressed_length, char* uncompressed, size_t* uncompressed_length)"
  },
  {
    "label": "snappy_max_compressed_length()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "snappy_max_compressed_length(size_t source_length)"
  },
  {
    "label": "snappy_uncompressed_length()",
    "kind": "Method",
    "detail": "Function (snappy_status)",
    "insertText": "snappy_uncompressed_length(const char* compressed, size_t compressed_length, size_t* result)"
  },
  {
    "label": "snappy_validate_compressed_buffer()",
    "kind": "Method",
    "detail": "Function (snappy_status)",
    "insertText": "snappy_validate_compressed_buffer(const char* compressed, size_t compressed_length)"
  }
]