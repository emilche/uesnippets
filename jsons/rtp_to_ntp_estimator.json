[
  {
    "label": "RtpToNtpEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpToNtpEstimator"
  },
  {
    "label": "UpdateResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UpdateResult"
  },
  {
    "label": "Parameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Parameters"
  },
  {
    "label": "RtcpMeasurement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtcpMeasurement"
  },
  {
    "label": "RtpToNtpEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef SYSTEM_WRAPPERS_INCLUDE_RTP_TO_NTP_ESTIMATOR_H_ # define SYSTEM_WRAPPERS_INCLUDE_RTP_TO_NTP_ESTIMATOR_H_ # include<stdint . h> # include<list> # include \" absl / types / optional . h \" # include \" modules / include / module_common_types_public . h \" # include \" rtc_base / checks . h \" # include \" system_wrappers / include / ntp_time . h \" namespace webrtc { class RtpToNtpEstimator { public : int kMaxInvalidSamples = 3 ;)",
    "insertText": "RtpToNtpEstimator()"
  },
  {
    "label": "RtpToNtpEstimator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpToNtpEstimator(const RtpToNtpEstimator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtpToNtpEstimator&)",
    "insertText": "operator(const RtpToNtpEstimator&)"
  },
  {
    "label": "UpdateMeasurements()",
    "kind": "Method",
    "detail": "Function (enum UpdateResult { kInvalidMeasurement,kSameMeasurement,kNewMeasurement } ; UpdateResult)",
    "insertText": "UpdateMeasurements(NtpTime ntp, uint32_t rtp_timestamp)"
  },
  {
    "label": "Estimate()",
    "kind": "Method",
    "detail": "Function (NtpTime)",
    "insertText": "Estimate(uint32_t rtp_timestamp)"
  },
  {
    "label": "UpdateParameters()",
    "kind": "Method",
    "detail": "Function (private : struct Parameters { double slope ; double offset ; } ; struct RtcpMeasurement { NtpTime ntp_time ; int64_t unwrapped_rtp_timestamp ; } ; void)",
    "insertText": "UpdateParameters()"
  }
]