[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USoundClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundClass"
  },
  {
    "label": "FAssetTypeActions_SoundClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetTypeActions_SoundClass"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetTypeActions_Base . h \" # include \" AssetTypeCategories . h \" # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Internationalization . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FMenuBuilder ; class IToolkitHost ; class UClass ; class UObject ; class USoundClass ; class FAssetTypeActions_SoundClass : public FAssetTypeActions_Base { public : FText)",
    "insertText": "GetName()"
  },
  {
    "label": "GetTypeColor()",
    "kind": "Method",
    "detail": "Function (} FColor)",
    "insertText": "GetTypeColor()"
  },
  {
    "label": "GetSubMenus()",
    "kind": "Method",
    "detail": "Function (} const TArray<FText>&)",
    "insertText": "GetSubMenus()"
  },
  {
    "label": "GetSupportedClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetSupportedClass()"
  },
  {
    "label": "OpenAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenAssetEditor(const TArray<UObject*>& InObjects, TSharedPtr<class IToolkitHost> EditWithinLevelEditor = TSharedPtr<IToolkitHost>())"
  },
  {
    "label": "GetCategories()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCategories()"
  },
  {
    "label": "ExecuteMute()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExecuteMute(TArray<TWeakObjectPtr<USoundClass>> Objects)"
  },
  {
    "label": "ExecuteSolo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteSolo(TArray<TWeakObjectPtr<USoundClass>> Objects)"
  },
  {
    "label": "IsActionCheckedMute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionCheckedMute(TArray<TWeakObjectPtr<USoundClass>> Objects)"
  },
  {
    "label": "IsActionCheckedSolo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionCheckedSolo(TArray<TWeakObjectPtr<USoundClass>> Objects)"
  },
  {
    "label": "CanExecuteMuteCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteMuteCommand(TArray<TWeakObjectPtr<USoundClass>> Objects)"
  },
  {
    "label": "CanExecuteSoloCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteSoloCommand(TArray<TWeakObjectPtr<USoundClass>> Objects)"
  }
]