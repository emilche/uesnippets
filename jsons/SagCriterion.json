[
  {
    "label": "FSagCriterion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSagCriterion"
  },
  {
    "label": "FEntity",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntity"
  },
  {
    "label": "FSagCriterion()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Mesh / Criteria / Criterion . h \" namespace UE::CADKernel { class FSagCriterion : public FCriterion { class FEntity ; protected : double MaxSag ;)",
    "insertText": "FSagCriterion(double InSag = 0.2) : MaxSag(InSag)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "Serialize(FCADKernelArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (Ar<<MaxSag ; } double)",
    "insertText": "Value()"
  },
  {
    "label": "IsAppliedBetweenBreaks()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAppliedBetweenBreaks()"
  }
]