[
  {
    "label": "FObjectResourceStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectResourceStat"
  },
  {
    "label": "FClassResourceMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassResourceMap"
  },
  {
    "label": "FPackageResourceStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageResourceStat"
  },
  {
    "label": "FKismetResourceStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKismetResourceStat"
  },
  {
    "label": "EReportOutputType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EReportOutputType"
  },
  {
    "label": "FResourceStatReporter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceStatReporter"
  },
  {
    "label": "FResourceStatReporter_TotalMemoryPerAsset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceStatReporter_TotalMemoryPerAsset"
  },
  {
    "label": "FResourceStatReporter_AssetDuplication",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceStatReporter_AssetDuplication"
  },
  {
    "label": "FResourceDiskSize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceDiskSize"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FObjectReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectReference"
  },
  {
    "label": "FObjectComparison",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectComparison"
  },
  {
    "label": "FObjectResourceStat()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" struct FObjectResourceStat { int32 ResourceNameIndex ; FName ClassName ; int32 ResourceSize ;)",
    "insertText": "FObjectResourceStat(FName InClassName, const FString& InResourceName, int32 InResourceSize)"
  },
  {
    "label": "FObjectResourceStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectResourceStat(const FObjectResourceStat& Other)"
  },
  {
    "label": "FPackageResourceStat()",
    "kind": "Method",
    "detail": "Function (ResourceNameIndex = Other . ResourceNameIndex ; ClassName = Other . ClassName ; ResourceSize = Other . ResourceSize ; } } ; class FClassResourceMap : public TMultiMap<FName,FObjectResourceStat> { } ; struct FPackageResourceStat { FName PackageName ; FName PackageFilename ; FClassResourceMap PackageResources ;)",
    "insertText": "FPackageResourceStat(FName InPackageName ) : PackageName(InPackageName)"
  },
  {
    "label": "AddResourceStat()",
    "kind": "Method",
    "detail": "Function (} struct FObjectResourceStat*)",
    "insertText": "AddResourceStat(FName ResourceClassName, const FString& ResourcePathName, int32 ResourceSize)"
  },
  {
    "label": "FKismetResourceStat()",
    "kind": "Method",
    "detail": "Function (} ; struct FKismetResourceStat { FName ObjectName ; int32 ReferenceCount ; TArray<FString> ReferenceSources ;)",
    "insertText": "FKismetResourceStat(FName InObjectName ) : ObjectName(InObjectName), ReferenceCount(0)"
  },
  {
    "label": "FKismetResourceStat()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FKismetResourceStat(FName InObjectName, int32 InRefCount ) : ObjectName(InObjectName), ReferenceCount(InRefCount)"
  },
  {
    "label": "CreateReport()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TMap<FName,FKismetResourceStat> KismetResourceMap ; enum EReportOutputType { OUTPUTTYPE_Log,OUTPUTTYPE_CSV,OUTPUTTYPE_XML,} ; struct FResourceStatReporter { EReportOutputType OutputType ; bool)",
    "insertText": "CreateReport(const TArray<struct FPackageResourceStat>& ResourceStats)"
  },
  {
    "label": "FResourceStatReporter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResourceStatReporter() : OutputType(OUTPUTTYPE_Log)"
  },
  {
    "label": "FResourceStatReporter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FResourceStatReporter()"
  },
  {
    "label": "FResourceDiskSize()",
    "kind": "Method",
    "detail": "Function (} ; struct FResourceDiskSize { FString ClassName ; uint64 TotalSize ;)",
    "insertText": "FResourceDiskSize(FName InClassName ) : ClassName(InClassName.ToString()), TotalSize(0)"
  },
  {
    "label": "FResourceDiskSize()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FResourceDiskSize(const FResourceDiskSize& Other)"
  },
  {
    "label": "FObjectReference()",
    "kind": "Method",
    "detail": "Function (UObject* Object ; FString ObjectPathName ;)",
    "insertText": "FObjectReference(UObject* InObject ) : Object(InObject)"
  },
  {
    "label": "GetPathName()",
    "kind": "Method",
    "detail": "Function (ObjectPathName = Object ->)",
    "insertText": "GetPathName()"
  },
  {
    "label": "FObjectGraph()",
    "kind": "Method",
    "detail": "Function (TArray<struct FObjectReference> Objects ;)",
    "insertText": "FObjectGraph(UObject* RootObject, int32 PackageIndex, TArray<struct FObjectComparison>* ObjectsToIgnore=NULL)"
  },
  {
    "label": "GetRootObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetRootObject()"
  }
]