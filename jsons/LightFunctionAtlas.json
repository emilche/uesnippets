[
  {
    "label": "FViewFamilyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewFamilyInfo"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FScreenPassTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenPassTexture"
  },
  {
    "label": "FSortedLightSetSceneInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortedLightSetSceneInfo"
  },
  {
    "label": "IPooledRenderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPooledRenderTarget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLightFunctionAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightFunctionAtlas"
  },
  {
    "label": "FLightFunctionAtlasSceneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightFunctionAtlasSceneData"
  },
  {
    "label": "FLightFunctionAtlasViewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightFunctionAtlasViewData"
  },
  {
    "label": "FLightFunctionSlotKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightFunctionSlotKey"
  },
  {
    "label": "FLightFunctionSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightFunctionSlot"
  },
  {
    "label": "FAtlasLightInfoData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAtlasLightInfoData"
  },
  {
    "label": "FLightFunctionAtlasSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightFunctionAtlasSetup"
  },
  {
    "label": "EffectiveLightFunctionSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EffectiveLightFunctionSlot"
  },
  {
    "label": "EffectiveLocalLightSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EffectiveLocalLightSlot"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" LightSceneProxy . h \" # include \" RenderGraphFwd . h \" # include \" ShaderParameterMacros . h \" class FViewFamilyInfo ; class FViewInfo ; class FScene ; class FMaterialRenderProxy ; class FRDGBuilder ; class FLightSceneInfo ; class FRDGTexture ; struct FScreenPassTexture ; struct FSortedLightSetSceneInfo ; struct IPooledRenderTarget ; namespace LightFunctionAtlas {)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FLightFunctionAtlasGlobalParameters, ) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<float4>, LightFunctionAtlasTexture) SHADER_PARAMETER_RDG_BUFFER_SRV(StructuredBuffer<float4>, LightInfoDataBuffer) SHADER_PARAMETER_SAMPLER(SamplerState, LightFunctionAtlasSampler) SHADER_PARAMETER(float, Slot_UVSize) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (VolumetricFog,DeferredLighting,MegaLights,Lumen,} ; struct FLightFunctionAtlas ; struct FLightFunctionAtlasSceneData { void)",
    "insertText": "SetData(FLightFunctionAtlas* InLightFunctionAtlas, bool bInLightFunctionAtlasEnabled)"
  },
  {
    "label": "AddSystem()",
    "kind": "Method",
    "detail": "Function (LightFunctionAtlas = InLightFunctionAtlas ; bLightFunctionAtlasEnabled = bInLightFunctionAtlasEnabled ; } void)",
    "insertText": "AddSystem(ELightFunctionAtlasSystem In)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (SystemFlags | = 1 u<<)",
    "insertText": "uint32(In)"
  },
  {
    "label": "ClearSystems()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearSystems()"
  },
  {
    "label": "GetLightFunctionAtlas()",
    "kind": "Method",
    "detail": "Function (SystemFlags = 0 ; } FLightFunctionAtlas*)",
    "insertText": "GetLightFunctionAtlas()"
  },
  {
    "label": "GetLightFunctionAtlasEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetLightFunctionAtlasEnabled()"
  },
  {
    "label": "FLightFunctionAtlasViewData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLightFunctionAtlasViewData(FLightFunctionAtlasSceneData* InSceneData, uint32 InViewIndex) : SceneData(InSceneData), ViewIndex(InViewIndex)"
  },
  {
    "label": "UsesLightFunctionAtlas()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "UsesLightFunctionAtlas(ELightFunctionAtlasSystem In)"
  },
  {
    "label": "GetViewIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetViewIndex()"
  },
  {
    "label": "FLightFunctionSlotKey()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FLightFunctionSlotKey(FLightSceneInfo* InLightSceneInfo)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FLightFunctionSlotKey& Other)"
  },
  {
    "label": "FLightFunctionAtlas()",
    "kind": "Method",
    "detail": "Function (} struct FLightFunctionSlot { const FMaterialRenderProxy* LightFunctionMaterial ; FIntPoint Min ; FIntPoint Max ; } ; # define LIGHT_FUNCTION_ATLAS_MAX_LIGHT_FUNCTION_COUNT 2 5 6 struct FAtlasLightInfoData { FVector4f Parameters ; FMatrix44f Transform ; } ; struct FLightFunctionAtlasSetup { uint32 EdgeSize = 2 ; uint32 SlotResolution = 3 2 ; } ; struct FLightFunctionAtlas {)",
    "insertText": "FLightFunctionAtlas()"
  },
  {
    "label": "IsLightFunctionAtlasEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLightFunctionAtlasEnabled()"
  },
  {
    "label": "BeginSceneFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSceneFrame(const FViewFamilyInfo& ViewFamily, TArray<FViewInfo>& Views, FLightFunctionAtlasSceneData& LightFunctionAtlasSceneData, bool bShouldRenderVolumetricFog)"
  },
  {
    "label": "UpdateRegisterLightSceneInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRegisterLightSceneInfo(FLightSceneInfo* LightSceneInfo)"
  },
  {
    "label": "UpdateLightFunctionAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLightFunctionAtlas(const TArray<FViewInfo>& Views)"
  },
  {
    "label": "RenderLightFunctionAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLightFunctionAtlas(FRDGBuilder& GraphBuilder, TArray<FViewInfo>& Views)"
  },
  {
    "label": "AddDebugVisualizationPasses()",
    "kind": "Method",
    "detail": "Function (FScreenPassTexture)",
    "insertText": "AddDebugVisualizationPasses(FRDGBuilder& GraphBuilder, const FViewInfo& View, FScreenPassTexture& ScreenPassSceneColor)"
  },
  {
    "label": "GetLightFunctionAtlasGlobalParametersStruct()",
    "kind": "Method",
    "detail": "Function (FLightFunctionAtlasGlobalParameters*)",
    "insertText": "GetLightFunctionAtlasGlobalParametersStruct(FRDGBuilder& GraphBuilder, uint32 ViewIndex)"
  },
  {
    "label": "GetLightFunctionAtlasGlobalParameters()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FLightFunctionAtlasGlobalParameters>)",
    "insertText": "GetLightFunctionAtlasGlobalParameters(FRDGBuilder& GraphBuilder, uint32 ViewIndex)"
  },
  {
    "label": "GetDefaultLightFunctionAtlasGlobalParametersStruct()",
    "kind": "Method",
    "detail": "Function (FLightFunctionAtlasGlobalParameters*)",
    "insertText": "GetDefaultLightFunctionAtlasGlobalParametersStruct(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "GetDefaultLightFunctionAtlasGlobalParameters()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FLightFunctionAtlasGlobalParameters>)",
    "insertText": "GetDefaultLightFunctionAtlasGlobalParameters(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "IsOutOfSlots()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOutOfSlots()"
  },
  {
    "label": "GetOutOfSlotWarningMessage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOutOfSlotWarningMessage()"
  },
  {
    "label": "AllocateAtlasSlots()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AllocateAtlasSlots(const TArray<FViewInfo>& Views)"
  },
  {
    "label": "AllocateTexture2DAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateTexture2DAtlas(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "RenderAtlasSlots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderAtlasSlots(FRDGBuilder& GraphBuilder, const TArray<FViewInfo>& Views)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool bLightFunctionAtlasEnabled = false ; FRDGTextureRef RDGAtlasTexture2D = nullptr ; FRDGBufferRef RDGLightInfoDataBuffer = nullptr ; TArray<FLightSceneInfo*> RegisteredLights ; TSet<FLightFunctionSlotKey> LightFunctionsSet ; struct EffectiveLightFunctionSlot { const FMaterialRenderProxy* LightFunctionMaterial = nullptr ; FIntPoint Min ; FIntPoint Max ; float MinU ; float MinV ; } ; TArray<EffectiveLightFunctionSlot> EffectiveLightFunctionSlotArray ; struct EffectiveLocalLightSlot { FLightSceneInfo* LightSceneInfo = nullptr ; uint8 LightFunctionAtlasSlotIndex = 0 ; } ; TArray<EffectiveLocalLightSlot> EffectiveLocalLightSlotArray ; FLightFunctionAtlasGlobalParameters* DefaultLightFunctionAtlasGlobalParameters = nullptr ; TRDGUniformBufferRef<FLightFunctionAtlasGlobalParameters> DefaultLightFunctionAtlasGlobalParametersUB ; TArray<FLightFunctionAtlasGlobalParameters*> ViewLightFunctionAtlasGlobalParametersArray ; TArray<TRDGUniformBufferRef<FLightFunctionAtlasGlobalParameters>> ViewLightFunctionAtlasGlobalParametersUBArray ; # if WITH_EDITOR uint32 LightCountWithLFMaterialsNotSamplingAtlas = 0 ; TMap<uint32,const UMaterialInterface*> NonCompatibleLightFunctionMaterials ; # endif # if ! UE_BUILD_SHIPPING uint32 LightCountSkippedDueToMissingAtlasSlot = 0 ; TSet<FLightFunctionSlotKey> SkippedLightFunctionsSet ; # endif FLightFunctionAtlasSetup AtlasSetup ; } ; bool)",
    "insertText": "IsEnabled(const FViewInfo& InView, ELightFunctionAtlasSystem In)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled(const FScene& InScene, ELightFunctionAtlasSystem In)"
  },
  {
    "label": "OnRenderBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenderBegin(FLightFunctionAtlas& In, FScene& InScene, TArray<FViewInfo>& Views, const FViewFamilyInfo& ViewFamily)"
  },
  {
    "label": "BindGlobalParameters()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FLightFunctionAtlasGlobalParameters>)",
    "insertText": "BindGlobalParameters(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  },
  {
    "label": "GetGlobalParametersStruct()",
    "kind": "Method",
    "detail": "Function (FLightFunctionAtlasGlobalParameters*)",
    "insertText": "GetGlobalParametersStruct(FRDGBuilder& GraphBuilder, const FViewInfo& View)"
  }
]