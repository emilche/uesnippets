[
  {
    "label": "IHeterogeneousVolumeInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHeterogeneousVolumeInterface"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FHeterogeneousVolumeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHeterogeneousVolumeData"
  },
  {
    "label": "IHeterogeneousVolumeInterface()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GameFramework / Actor . h \" # include \" CoreMinimal . h \" # include \" SceneManagement . h \" # include \" PrimitiveSceneProxy . h \" class IHeterogeneousVolumeInterface { public : ~)",
    "insertText": "IHeterogeneousVolumeInterface()"
  },
  {
    "label": "GetPrimitiveSceneProxy()",
    "kind": "Method",
    "detail": "Function (} const FPrimitiveSceneProxy*)",
    "insertText": "GetPrimitiveSceneProxy()"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (const FBoxSphereBounds&)",
    "insertText": "GetBounds()"
  },
  {
    "label": "GetLocalBounds()",
    "kind": "Method",
    "detail": "Function (const FBoxSphereBounds&)",
    "insertText": "GetLocalBounds()"
  },
  {
    "label": "GetLocalToWorld()",
    "kind": "Method",
    "detail": "Function (const FMatrix&)",
    "insertText": "GetLocalToWorld()"
  },
  {
    "label": "GetInstanceToLocal()",
    "kind": "Method",
    "detail": "Function (const FMatrix&)",
    "insertText": "GetInstanceToLocal()"
  },
  {
    "label": "GetInstanceToWorld()",
    "kind": "Method",
    "detail": "Function (const FMatrix)",
    "insertText": "GetInstanceToWorld()"
  },
  {
    "label": "GetVoxelResolution()",
    "kind": "Method",
    "detail": "Function (FIntVector)",
    "insertText": "GetVoxelResolution()"
  },
  {
    "label": "GetMinimumVoxelSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinimumVoxelSize()"
  },
  {
    "label": "IsPivotAtCentroid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPivotAtCentroid()"
  },
  {
    "label": "GetStepFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStepFactor()"
  },
  {
    "label": "GetShadowStepFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetShadowStepFactor()"
  },
  {
    "label": "GetShadowBiasFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetShadowBiasFactor()"
  },
  {
    "label": "GetLightingDownsampleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLightingDownsampleFactor()"
  },
  {
    "label": "GetMipBias()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMipBias()"
  },
  {
    "label": "IsHoldout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHoldout()"
  },
  {
    "label": "GetReadableName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReadableName()"
  },
  {
    "label": "FHeterogeneousVolumeData()",
    "kind": "Method",
    "detail": "Function (} ; class FPrimitiveSceneProxy ; class FHeterogeneousVolumeData : public IHeterogeneousVolumeInterface,FOneFrameResource { public :)",
    "insertText": "FHeterogeneousVolumeData(const FPrimitiveSceneProxy* SceneProxy) : PrimitiveSceneProxy(SceneProxy) , InstanceToLocal(FMatrix::Identity) , VoxelResolution(FIntVector::ZeroValue) , MinimumVoxelSize(0.1) , StepFactor(1.0) , ShadowStepFactor(8.0) , ShadowBiasFactor(0.0) , LightingDownsampleFactor(1.0) , MipBias(0.0) , bPivotAtCentroid(false) , bHoldout(false)"
  },
  {
    "label": "FHeterogeneousVolumeData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FHeterogeneousVolumeData(const FPrimitiveSceneProxy* SceneProxy, FString Name) : PrimitiveSceneProxy(SceneProxy) , InstanceToLocal(FMatrix::Identity) , VoxelResolution(FIntVector::ZeroValue) , MinimumVoxelSize(0.1) , StepFactor(1.0) , ShadowStepFactor(8.0) , ShadowBiasFactor(0.0) , LightingDownsampleFactor(1.0) , MipBias(0.0) , bPivotAtCentroid(false) , bHoldout(false) #if ACTOR_HAS_LABELS , ReadableName(Name)"
  },
  {
    "label": "FHeterogeneousVolumeData()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FHeterogeneousVolumeData()"
  }
]