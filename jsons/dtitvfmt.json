[
  {
    "label": "FormattedDateIntervalData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormattedDateIntervalData"
  },
  {
    "label": "DateIntervalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalFormat"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "containing"
  },
  {
    "label": "are",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "are"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "DateIntervalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalFormat"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "DateInterval",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateInterval"
  },
  {
    "label": "DateIntervalInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalInfo"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "PatternInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PatternInfo"
  },
  {
    "label": "DateInterval()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "DateInterval(1000*3600*24, 1000*3600*24*2)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(\n                                               const UnicodeString& skeleton,\n                                               UErrorCode& status)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(\n                                               const UnicodeString& skeleton,\n                                               const Locale& locale,\n                                               UErrorCode& status)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(\n                                              const UnicodeString& skeleton,\n                                              const DateIntervalInfo& dtitvinf,\n                                              UErrorCode& status)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(\n                                              const UnicodeString& skeleton,\n                                              const Locale& locale,\n                                              const DateIntervalInfo& dtitvinf,\n                                              UErrorCode& status)"
  },
  {
    "label": "setDateIntervalInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDateIntervalInfo(const DateIntervalInfo& newIntervalPatterns,\n                             UErrorCode& status)"
  },
  {
    "label": "adoptTimeZone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptTimeZone(TimeZone* zoneToAdopt)"
  },
  {
    "label": "setTimeZone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeZone(const TimeZone& zone)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "create(const Locale& locale,\n                                                DateIntervalInfo* dtitvinf,\n                                                const UnicodeString* skeleton,\n                                                UErrorCode& status)"
  },
  {
    "label": "initializePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializePattern(UErrorCode& status)"
  },
  {
    "label": "setFallbackPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFallbackPattern(UCalendarDateFields field,\n                            const UnicodeString& skeleton,\n                            UErrorCode& status)"
  },
  {
    "label": "getDateTimeSkeleton()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getDateTimeSkeleton(const UnicodeString& skeleton,\n                                    UnicodeString& date,\n                                    UnicodeString& normalizedDate,\n                                    UnicodeString& time,\n                                    UnicodeString& normalizedTime)"
  },
  {
    "label": "setSeparateDateTimePtn()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "setSeparateDateTimePtn(const UnicodeString& dateSkeleton,\n                                 const UnicodeString& timeSkeleton)"
  },
  {
    "label": "setIntervalPattern()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "setIntervalPattern(UCalendarDateFields field,\n                             const UnicodeString* skeleton,\n                             const UnicodeString* bestSkeleton,\n                             int8_t differenceInfo,\n                             UnicodeString* extendedSkeleton = NULL,\n                             UnicodeString* extendedBestSkeleton = NULL)"
  },
  {
    "label": "adjustFieldWidth()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "adjustFieldWidth(\n                            const UnicodeString& inputSkeleton,\n                            const UnicodeString& bestMatchSkeleton,\n                            const UnicodeString& bestMatchIntervalPattern,\n                            int8_t differenceInfo,\n                            UnicodeString& adjustedIntervalPattern)"
  },
  {
    "label": "concatSingleDate2TimeInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "concatSingleDate2TimeInterval(UnicodeString& format,\n                                       const UnicodeString& datePattern,\n                                       UCalendarDateFields field,\n                                       UErrorCode& status)"
  },
  {
    "label": "fieldExistsInSkeleton()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "fieldExistsInSkeleton(UCalendarDateFields field,\n                                                 const UnicodeString& skeleton)"
  },
  {
    "label": "splitPatternInto2Part()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "splitPatternInto2Part(const UnicodeString& intervalPattern)"
  },
  {
    "label": "setIntervalPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIntervalPattern(UCalendarDateFields field,\n                            const UnicodeString& intervalPattern)"
  },
  {
    "label": "setIntervalPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIntervalPattern(UCalendarDateFields field,\n                            const UnicodeString& intervalPattern,\n                            UBool laterDateFirst)"
  },
  {
    "label": "setPatternInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPatternInfo(UCalendarDateFields field,\n                        const UnicodeString* firstPart,\n                        const UnicodeString* secondPart,\n                        UBool laterDateFirst)"
  }
]