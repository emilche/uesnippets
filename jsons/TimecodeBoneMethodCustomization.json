[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FTimecodeBoneMethodCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimecodeBoneMethodCustomization"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" IPropertyTypeCustomization . h \" class FDetailWidgetRow ; class IPropertyHandle ; class AActor ; class USceneComponent ; class FTimecodeBoneMethodCustomization : public IPropertyTypeCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> PropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "IsBoneNameEnabled()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<IPropertyHandle> BoneModeHandle ; TSharedPtr<IPropertyHandle> BoneNameHandle ; private : bool)",
    "insertText": "IsBoneNameEnabled()"
  },
  {
    "label": "OnGetAllowedClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetAllowedClasses(TArray<const UClass*>& AllowedClasses)"
  },
  {
    "label": "OnShouldFilterActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnShouldFilterActor(const AActor* const InActor)"
  },
  {
    "label": "OnActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelected(AActor* InActor)"
  },
  {
    "label": "ActorComponentPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorComponentPicked(FName ComponentName, AActor* InActor)"
  },
  {
    "label": "ActorSocketPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorSocketPicked(FName SocketName, USceneComponent* InComponent)"
  }
]