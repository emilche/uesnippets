[
  {
    "label": "SSettingsEditorCheckoutNotice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSettingsEditorCheckoutNotice"
  },
  {
    "label": "FBlueprintWarningDeclaration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintWarningDeclaration"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SListView"
  },
  {
    "label": "SBlueprintWarningsConfigurationPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintWarningsConfigurationPanel"
  },
  {
    "label": "SBlueprintWarningRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintWarningRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SSettingsEditorCheckoutNotice ; struct FBlueprintWarningDeclaration ; enum class EBlueprintWarningBehavior : uint8 ; template<ItemType> class SListView ; typedef TSharedPtr<FBlueprintWarningDeclaration> FBlueprintWarningListEntry ; typedef SListView<FBlueprintWarningListEntry> FBlueprintWarningListView ; class SBlueprintWarningsConfigurationPanel : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlueprintWarningsConfigurationPanel)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "UpdateSelectedWarningBehaviors()",
    "kind": "Method",
    "detail": "Function (private : class SBlueprintWarningRow ; void)",
    "insertText": "UpdateSelectedWarningBehaviors(EBlueprintWarningBehavior NewBehavior, const FBlueprintWarningDeclaration& AlteredWarning)"
  }
]