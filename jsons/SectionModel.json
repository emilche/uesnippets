[
  {
    "label": "ISequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerSection"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "ITrackExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITrackExtension"
  },
  {
    "label": "FChannelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelModel"
  },
  {
    "label": "FOverlappingSections",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlappingSections"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "FOverlappingSections",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlappingSections"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FSectionModel, FViewModel\n\t\t, FLinkedOutlinerExtension\n\t\t, ILayerBarExtension\n\t\t, ITrackLaneExtension\n\t\t, ISelectableExtension\n\t\t, ISnappableExtension\n\t\t, IDraggableTrackAreaExtension\n\t\t, IStretchableExtension\n\t\t, IConditionableExtension\n\t)"
  },
  {
    "label": "FSectionModel()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FSectionModel(UMovieSceneSection* InSection, TSharedPtr<ISequencerSection> InSectionInterface)"
  },
  {
    "label": "GetUnderlappingSections()",
    "kind": "Method",
    "detail": "Function (TArray<FOverlappingSections>)",
    "insertText": "GetUnderlappingSections()"
  },
  {
    "label": "GetEasingSegments()",
    "kind": "Method",
    "detail": "Function (TArray<FOverlappingSections>)",
    "insertText": "GetEasingSegments()"
  },
  {
    "label": "UpdateCachedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedData()"
  }
]