[
  {
    "label": "MCContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCContext"
  },
  {
    "label": "MCSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSection"
  },
  {
    "label": "MCStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCStreamer"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Instruction"
  },
  {
    "label": "FrameInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameInfo"
  },
  {
    "label": "UnwindEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnwindEmitter"
  },
  {
    "label": "Instruction()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCWINEH_H # define LLVM_MC_MCWINEH_H # include<vector> namespace llvm { class MCContext ; class MCSection ; class MCStreamer ; class MCSymbol ; class StringRef ; namespace WinEH { struct Instruction { const MCSymbol* Label ; const unsigned Offset ; const unsigned Register ; const unsigned Operation ;)",
    "insertText": "Instruction(unsigned Op, MCSymbol *L, unsigned Reg, unsigned Off) : Label(L), Offset(Off), Register(Reg), Operation(Op)"
  },
  {
    "label": "FrameInfo()",
    "kind": "Method",
    "detail": "Function (} } ; struct FrameInfo { const MCSymbol* Begin ; const MCSymbol* End ; const MCSymbol* ExceptionHandler ; const MCSymbol* Function ; const MCSymbol* PrologEnd ; const MCSymbol* Symbol ; bool HandlesUnwind ; bool HandlesExceptions ; int LastFrameInst ; const FrameInfo* ChainedParent ; std::vector<Instruction> Instructions ;)",
    "insertText": "FrameInfo() : Begin(nullptr), End(nullptr), ExceptionHandler(nullptr), Function(nullptr), PrologEnd(nullptr), Symbol(nullptr), HandlesUnwind(false), HandlesExceptions(false), LastFrameInst(-1), ChainedParent(nullptr), Instructions()"
  },
  {
    "label": "FrameInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FrameInfo(const MCSymbol *Function, const MCSymbol *BeginFuncEHLabel) : Begin(BeginFuncEHLabel), End(nullptr), ExceptionHandler(nullptr), Function(Function), PrologEnd(nullptr), Symbol(nullptr), HandlesUnwind(false), HandlesExceptions(false), LastFrameInst(-1), ChainedParent(nullptr), Instructions()"
  },
  {
    "label": "FrameInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FrameInfo(const MCSymbol *Function, const MCSymbol *BeginFuncEHLabel, const FrameInfo *ChainedParent) : Begin(BeginFuncEHLabel), End(nullptr), ExceptionHandler(nullptr), Function(Function), PrologEnd(nullptr), Symbol(nullptr), HandlesUnwind(false), HandlesExceptions(false), LastFrameInst(-1), ChainedParent(ChainedParent), Instructions()"
  },
  {
    "label": "getPDataSection()",
    "kind": "Method",
    "detail": "Function (} } ; class UnwindEmitter { public : MCSection*)",
    "insertText": "getPDataSection(const MCSymbol *Function, MCContext &Context)"
  },
  {
    "label": "getXDataSection()",
    "kind": "Method",
    "detail": "Function (MCSection*)",
    "insertText": "getXDataSection(const MCSymbol *Function, MCContext &Context)"
  },
  {
    "label": "UnwindEmitter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UnwindEmitter()"
  },
  {
    "label": "Emit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Emit(MCStreamer &Streamer)"
  },
  {
    "label": "EmitUnwindInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitUnwindInfo(MCStreamer &Streamer, FrameInfo *FI)"
  }
]