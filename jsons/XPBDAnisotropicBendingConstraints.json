[
  {
    "label": "FTriangleMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMesh"
  },
  {
    "label": "FXPBDAnisotropicBendingConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXPBDAnisotropicBendingConstraints"
  },
  {
    "label": "IsXPBDAnisoBendingStiffnessWarpEnabled()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsXPBDAnisoBendingStiffnessWarpEnabled(PropertyCollection, false)"
  },
  {
    "label": "FXPBDAnisotropicBendingConstraints()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FXPBDAnisotropicBendingConstraints(const FSolverParticlesRange& InParticles,\n\t\tconst FTriangleMesh& TriangleMesh,\n\t\tconst TArray<TVec3<FVec2f>>& FaceVertexPatternPositions,\n\t\tconst TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps,\n\t\tconst FCollectionPropertyConstFacade& PropertyCollection)"
  },
  {
    "label": "FXPBDAnisotropicBendingConstraints()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FXPBDAnisotropicBendingConstraints(const FSolverParticles& InParticles,\n\t\tint32 InParticleOffset,\n\t\tint32 InParticleCount,\n\t\tconst FTriangleMesh& TriangleMesh,\n\t\tconst TArray<TVec3<FVec2f>>& FaceVertexPatternPositions,\n\t\tconst TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps,\n\t\tconst FCollectionPropertyConstFacade& PropertyCollection)"
  },
  {
    "label": "FXPBDAnisotropicBendingConstraints()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FXPBDAnisotropicBendingConstraints(const FSolverParticles & InParticles,\n\t\tint32 InParticleOffset,\n\t\tint32 InParticleCount,\n\t\tconst FTriangleMesh& TriangleMesh,\n\t\tconst TArray<TVec3<FVec2f>>& FaceVertexPatternPositions,\n\t\tconst TConstArrayView<FRealSingle>& StiffnessWarpMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& StiffnessWeftMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& StiffnessBiasMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& BucklingRatioMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& BucklingStiffnessWarpMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& BucklingStiffnessWeftMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& BucklingStiffnessBiasMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& DampingMultipliers,\n\t\tconst TConstArrayView<FRealSingle>& RestAngleMap,\n\t\tconst FSolverVec2& InStiffnessWarp,\n\t\tconst FSolverVec2& InStiffnessWeft,\n\t\tconst FSolverVec2& InStiffnessBias,\n\t\tconst FSolverVec2& InBucklingRatio,\n\t\tconst FSolverVec2& InBucklingStiffnessWarp,\n\t\tconst FSolverVec2& InBucklingStiffnessWeft,\n\t\tconst FSolverVec2& InBucklingStiffnessBias,\n\t\tconst FSolverVec2& InDampingRatio,\n\t\tconst FSolverVec2& RestAngleValue,\n\t\tERestAngleConstructionType RestAngleConstructionType)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const SolverParticlesOrRange& InParticles)"
  },
  {
    "label": "SetProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProperties(\n\t\tconst FCollectionPropertyConstFacade& PropertyCollection,\n\t\tconst TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps)"
  },
  {
    "label": "AddAnisotropicBendingResidualAndHessian()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAnisotropicBendingResidualAndHessian(const FSolverParticles& Particles, const int32 ConstraintIndex, const int32 ConstraintIndexLocal, const FSolverReal Dt, TVec3<FSolverReal>& ParticleResidual, Chaos::PMatrix<FSolverReal, 3, 3>& ParticleHessian)"
  },
  {
    "label": "AddInternalForceDifferential()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInternalForceDifferential(const FSolverParticles& InParticles, const TArray<TVector<FSolverReal, 3>>& DeltaParticles, TArray<TVector<FSolverReal, 3>>& ndf)"
  },
  {
    "label": "InitColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitColor(const SolverParticlesOrRange& InParticles)"
  },
  {
    "label": "FSolverVec2()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FSolverVec2(0.f)"
  },
  {
    "label": "ComputeGradTheta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeGradTheta(const FSolverVec3& X0, const FSolverVec3& X1, const FSolverVec3& X2, const FSolverVec3& X3, const int32 Index, FSolverVec3& dThetadx, FSolverReal& Theta)"
  }
]