[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "IPropertyTypeCustomizationUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomizationUtils"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "TProxyValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProxyValue"
  },
  {
    "label": "TProxyProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TProxyProperty"
  },
  {
    "label": "DETAILCUSTOMIZATIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DETAILCUSTOMIZATIONS_API"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "FTransformField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformField"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FTransformStructCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransformStructCustomization"
  },
  {
    "label": "TProxyValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Customizations / MathStructCustomizations . h \" # include \" Delegates / Delegate . h \" # include \" IPropertyTypeCustomization . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Math / Rotator . h \" # include \" Math / Vector . h \" # include \" Misc / Optional . h \" # include \" PropertyHandle . h \" # include \" Styling / CoreStyle . h \" # include \" Styling / ISlateStyle . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / SWidget . h \" class FDetailWidgetRow ; class IPropertyHandle ; class IPropertyTypeCustomization ; class IPropertyTypeCustomizationUtils ; class IPropertyUtilities ; class SWidget ; template<ObjectType> class TProxyValue { public :)",
    "insertText": "TProxyValue() : Value() , bIsSet(false)"
  },
  {
    "label": "TProxyValue()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TProxyValue(const ObjectType& InValue) : Value(InValue) , bIsSet(false)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Set(const ObjectType& InValue)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (Value = InValue ; bIsSet = true ; } const ObjectType&)",
    "insertText": "Get()"
  },
  {
    "label": "TProxyProperty()",
    "kind": "Method",
    "detail": "Function (bIsSet = true ; } private : ObjectType Value ; bool bIsSet ; } ; template<ObjectType,PropertyType> class TProxyProperty { public :)",
    "insertText": "TProxyProperty(const TSharedRef< TProxyValue<ObjectType> >& InValue, PropertyType& InPropertyValue) : Value(InValue) , Property(InPropertyValue) , bIsSet(false)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Set(const PropertyType& InPropertyValue)"
  },
  {
    "label": "MarkAsSet()",
    "kind": "Method",
    "detail": "Function (Property = InPropertyValue ; Value ->)",
    "insertText": "MarkAsSet()"
  },
  {
    "label": "MakeHeaderRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeHeaderRow(TSharedRef<class IPropertyHandle>& InStructPropertyHandle, FDetailWidgetRow& Row)"
  },
  {
    "label": "CacheValues()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "CacheValues(TWeakPtr<IPropertyHandle> WeakHandlePtr)"
  },
  {
    "label": "FlushValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushValues(TWeakPtr<IPropertyHandle> WeakHandlePtr)"
  },
  {
    "label": "MakeNumericProxyWidget()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> TSharedRef<SWidget>)",
    "insertText": "MakeNumericProxyWidget(TSharedRef<IPropertyHandle>& StructPropertyHandle, TSharedRef< TProxyProperty<ProxyType, NumericType> >& ProxyValue, const FText& Label, bool bRotationInDegrees = false, const FLinearColor& LabelColor = FCoreStyle::Get().GetColor(\"DefaultForeground\"))"
  },
  {
    "label": "OnGetValueToolTip()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> FText)",
    "insertText": "OnGetValueToolTip(TWeakPtr<IPropertyHandle> WeakHandlePtr, TSharedRef<TProxyProperty<ProxyType, NumericType>> ProxyValue, FText Label)"
  },
  {
    "label": "OnGetValue()",
    "kind": "Method",
    "detail": "Function (private : template<ProxyType,NumericType> TOptional<NumericType>)",
    "insertText": "OnGetValue(TWeakPtr<IPropertyHandle> WeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnValueCommitted()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnValueCommitted(NumericType NewValue, ETextCommit::Type CommitType, TWeakPtr<IPropertyHandle> WeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnValueChanged(NumericType NewValue, TWeakPtr<IPropertyHandle> WeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (template<ProxyType,NumericType> void)",
    "insertText": "OnEndSliderMovement(NumericType NewValue, TWeakPtr<IPropertyHandle> WeakHandlePtr, TSharedRef< TProxyProperty<ProxyType, NumericType> > ProxyValue)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<IPropertyUtilities> PropertyUtilities ; } ; struct FTransformField { enum Type { Location,Rotation,Scale } ; } ; template<T> class FMatrixStructCustomization : public FMathStructProxyCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FMatrixStructCustomization()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMatrixStructCustomization() : CachedRotation(MakeShareable( new TProxyValue<UE::Math::TRotator<T>>(UE::Math::TRotator<T>::ZeroRotator))) , CachedRotationYaw(MakeShareable( new TProxyProperty<UE::Math::TRotator<T>, T>(CachedRotation, CachedRotation->Get().Yaw))) , CachedRotationPitch(MakeShareable( new TProxyProperty<UE::Math::TRotator<T>, T>(CachedRotation, CachedRotation->Get().Pitch))) , CachedRotationRoll(MakeShareable( new TProxyProperty<UE::Math::TRotator<T>, T>(CachedRotation, CachedRotation->Get().Roll))) , CachedTranslation(MakeShareable( new TProxyValue<UE::Math::TVector<T>>(UE::Math::TVector<T>::ZeroVector))) , CachedTranslationX(MakeShareable( new TProxyProperty<UE::Math::TVector<T>, T>(CachedTranslation, CachedTranslation->Get().X))) , CachedTranslationY(MakeShareable( new TProxyProperty<UE::Math::TVector<T>, T>(CachedTranslation, CachedTranslation->Get().Y))) , CachedTranslationZ(MakeShareable( new TProxyProperty<UE::Math::TVector<T>, T>(CachedTranslation, CachedTranslation->Get().Z))) , CachedScale(MakeShareable( new TProxyValue<UE::Math::TVector<T>>(UE::Math::TVector<T>::ZeroVector))) , CachedScaleX(MakeShareable( new TProxyProperty<UE::Math::TVector<T>, T>(CachedScale, CachedScale->Get().X))) , CachedScaleY(MakeShareable( new TProxyProperty<UE::Math::TVector<T>, T>(CachedScale, CachedScale->Get().Y))) , CachedScaleZ(MakeShareable( new TProxyProperty<UE::Math::TVector<T>, T>(CachedScale, CachedScale->Get().Z)))"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CustomizeChildren(TSharedRef<class IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeLocation()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CustomizeLocation(TSharedRef<class IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& Row)"
  },
  {
    "label": "CustomizeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeRotation(TSharedRef<class IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& Row)"
  },
  {
    "label": "CustomizeScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeScale(TSharedRef<class IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& Row)"
  },
  {
    "label": "CacheValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheValues(TWeakPtr<IPropertyHandle> PropertyHandlePtr)"
  },
  {
    "label": "FlushValues()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushValues(TWeakPtr<IPropertyHandle> PropertyHandlePtr)"
  },
  {
    "label": "OnCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopy(FTransformField::Type Type, TWeakPtr<IPropertyHandle> PropertyHandlePtr)"
  },
  {
    "label": "OnPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaste(FTransformField::Type Type, TWeakPtr<IPropertyHandle> PropertyHandlePtr)"
  },
  {
    "label": "PasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteFromText(const FString& InTag, const FString& InText, FTransformField::Type Type, TWeakPtr<IPropertyHandle> PropertyHandlePtr)"
  },
  {
    "label": "OnPasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId, FTransformField::Type Type, TWeakPtr<IPropertyHandle> PropertyHandlePtr)"
  }
]