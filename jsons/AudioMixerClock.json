[
  {
    "label": "FMixerDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerDevice"
  },
  {
    "label": "FQuartzClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuartzClock"
  },
  {
    "label": "FMixerSourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerSourceManager"
  },
  {
    "label": "FQuartzClockManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuartzClockManager"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "AUDIOMIXER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUDIOMIXER_API"
  },
  {
    "label": "FQuartzClockProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuartzClockProxy"
  },
  {
    "label": "receives",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "receives"
  },
  {
    "label": "gets",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "gets"
  },
  {
    "label": "AUDIOMIXER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUDIOMIXER_API"
  },
  {
    "label": "PendingCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PendingCommand"
  },
  {
    "label": "PendingCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PendingCommand"
  },
  {
    "label": "FQuartzClockState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuartzClockState"
  },
  {
    "label": "FQuartzClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuartzClock"
  },
  {
    "label": "FQuartzClockProxy()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "FQuartzClockProxy(TSharedPtr<FQuartzClock, ESPMode::ThreadSafe> InClock)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValid()"
  },
  {
    "label": "FQuartzClock()",
    "kind": "Method",
    "detail": "Function (ctor)",
    "insertText": "FQuartzClock(const FName& InName, const FQuartzClockSettings& InClockSettings, FQuartzClockManager* InOwningClockManagerPtr = nullptr)"
  },
  {
    "label": "ChangeTickRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeTickRate(FQuartzClockTickRate InNewTickRate, int32 NumFramesLeft = 0)"
  },
  {
    "label": "ChangeTimeSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeTimeSignature(const FQuartzTimeSignature& InNewTimeSignature)"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(float InNewSampleRate)"
  },
  {
    "label": "ResetTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTransport(const int32 NumFramesToTickBeforeReset = 0)"
  },
  {
    "label": "AddToTickDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToTickDelay(int32 NumFramesOfDelayToAdd)"
  },
  {
    "label": "SetTickDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTickDelay(int32 NumFramesOfDelay)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetTickRate()",
    "kind": "Method",
    "detail": "Function (FQuartzClockTickRate)",
    "insertText": "GetTickRate()"
  },
  {
    "label": "GetDurationOfQuantizationTypeInSeconds()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDurationOfQuantizationTypeInSeconds(const EQuartzCommandQuantization& QuantizationType, float Multiplier)"
  },
  {
    "label": "GetCurrentTimestamp()",
    "kind": "Method",
    "detail": "Function (FQuartzTransportTimeStamp)",
    "insertText": "GetCurrentTimestamp()"
  },
  {
    "label": "GetEstimatedRunTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEstimatedRunTime()"
  },
  {
    "label": "CancelQuantizedCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CancelQuantizedCommand(TSharedPtr<IQuartzQuantizedCommand> InCommandPtr)"
  },
  {
    "label": "LowResolutionTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LowResolutionTick(float InDeltaTimeSeconds)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(int32 InNumFramesUntilNextTick)"
  },
  {
    "label": "UpdateCachedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedState()"
  },
  {
    "label": "TickInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickInternal(int32 InNumFramesUntilNextTick, TArray<PendingCommand>& CommandsToTick, int32 FramesOfLatency = 0, int32 FramesOfDelay = 0)"
  },
  {
    "label": "CancelQuantizedCommandInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CancelQuantizedCommandInternal(TSharedPtr<IQuartzQuantizedCommand> InCommandPtr, TArray<PendingCommand>& CommandsToTick)"
  }
]