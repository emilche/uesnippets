[
  {
    "label": "TSerializablePtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSerializablePtr"
  },
  {
    "label": "FErrorReporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FErrorReporter"
  },
  {
    "label": "FClusterCreationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterCreationParameters"
  },
  {
    "label": "FDirtyGeometryCollectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirtyGeometryCollectionData"
  },
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FPBDRigidsEvolutionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionBase"
  },
  {
    "label": "FGeometryCollectionItemIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionItemIndex"
  },
  {
    "label": "FStubGeometryCollectionData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStubGeometryCollectionData"
  },
  {
    "label": "FGeometryCollectionPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionPhysicsProxy"
  },
  {
    "label": "manages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "manages"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FParticleCollisionFilterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleCollisionFilterData"
  },
  {
    "label": "FFieldData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFieldData"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "FGTParticleIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGTParticleIndices"
  },
  {
    "label": "FDamageCollector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDamageCollector"
  },
  {
    "label": "FDamageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDamageData"
  },
  {
    "label": "FRuntimeDataCollector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRuntimeDataCollector"
  },
  {
    "label": "FGeometryCollectionItemIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGeometryCollectionItemIndex(ClusterUniqueIdx, true)"
  },
  {
    "label": "FGeometryCollectionItemIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGeometryCollectionItemIndex(TransformIndex, false)"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (FGeometryCollectionItemIndex)",
    "insertText": "Result(INDEX_NONE, false)"
  },
  {
    "label": "FGeometryCollectionItemIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGeometryCollectionItemIndex(INDEX_NONE, false)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(Chaos::FPBDRigidsEvolutionBase* Evolution)"
  },
  {
    "label": "InitializeBodiesPT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeBodiesPT(\n\t\tChaos::FPBDRigidsSolver* RigidsSolver,\n\t\ttypename Chaos::FPBDRigidsSolver::FParticlesType& Particles)"
  },
  {
    "label": "InitializeDynamicCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDynamicCollection(FGeometryDynamicCollection& DynamicCollection, const FGeometryCollection& RestCollection, const FSimulationParameters& Params)"
  },
  {
    "label": "BufferGameState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferGameState()"
  },
  {
    "label": "BufferPhysicsResults_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferPhysicsResults_Internal(Chaos::FPBDRigidsSolver* CurrentSolver, Chaos::FDirtyGeometryCollectionData& BufferData)"
  },
  {
    "label": "BufferPhysicsResults_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferPhysicsResults_External(Chaos::FDirtyGeometryCollectionData& BufferData)"
  },
  {
    "label": "PushStateOnGameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushStateOnGameThread(Chaos::FPBDRigidsSolver* InSolver)"
  },
  {
    "label": "PushToPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushToPhysicsState()"
  },
  {
    "label": "FlipBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlipBuffer()"
  },
  {
    "label": "PullFromPhysicsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PullFromPhysicsState(const Chaos::FDirtyGeometryCollectionData& BufferData, const int32 SolverSyncTimestamp, const Chaos::FDirtyGeometryCollectionData* NextPullData = nullptr, const Chaos::FRealSingle* Alpha = nullptr, const Chaos::FDirtyRigidParticleReplicationErrorData* Error = nullptr, const Chaos::FReal AsyncFixedTimeStep = 0)"
  },
  {
    "label": "SyncBeforeDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncBeforeDestroy()"
  },
  {
    "label": "OnRemoveFromSolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveFromSolver(Chaos::FPBDRigidsSolver *RBDSolver)"
  },
  {
    "label": "OnRemoveFromScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveFromScene()"
  },
  {
    "label": "OnUnregisteredFromSolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnregisteredFromSolver()"
  },
  {
    "label": "BufferFieldCommand_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferFieldCommand_External(FFieldSystemCommand&& Command)"
  },
  {
    "label": "BufferCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferCommand(Chaos::FPBDRigidsSolver* RigidsSolver, const FFieldSystemCommand& Command)"
  },
  {
    "label": "BufferFieldCommand_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferFieldCommand_Internal(Chaos::FPBDRigidsSolver* RigidsSolver, const FFieldSystemCommand& Command)"
  },
  {
    "label": "FieldForcesUpdateCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldForcesUpdateCallback(Chaos::FPBDRigidsSolver* RigidSolver)"
  },
  {
    "label": "FieldParameterUpdateCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FieldParameterUpdateCallback(Chaos::FPBDRigidsSolver* RigidSolver, const bool bUpdateViews = true)"
  },
  {
    "label": "NeedToInitializeSharedCollisionStructures()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedToInitializeSharedCollisionStructures(const FGeometryCollection& RestCollection)"
  },
  {
    "label": "InitializeSharedCollisionStructures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeSharedCollisionStructures(Chaos::FErrorReporter& ErrorReporter, FGeometryCollection& RestCollection, const FSharedSimulationParameters& SharedParams)"
  },
  {
    "label": "SetWorldTransform_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldTransform_External(const FTransform& WorldTransform)"
  },
  {
    "label": "SetUseStaticMeshCollisionForTraces_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseStaticMeshCollisionForTraces_External(bool bInUseStaticMeshCollisionForTraces)"
  },
  {
    "label": "GetParticleByIndex_External()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetParticleByIndex_External(Parameters.InitialRootIndex)"
  },
  {
    "label": "GetParticleByIndex_External()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetParticleByIndex_External(Parameters.InitialRootIndex)"
  },
  {
    "label": "GetParticleByIndex_Internal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetParticleByIndex_Internal(Parameters.InitialRootIndex)"
  },
  {
    "label": "GetParticleByIndex_Internal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetParticleByIndex_Internal(Parameters.InitialRootIndex)"
  },
  {
    "label": "GetRelevantParticleHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRelevantParticleHandles(\n\t\tTArray<Chaos::TGeometryParticleHandle<Chaos::FReal, 3>*>& Handles,\n\t\tconst Chaos::FPBDRigidsSolver* RigidSolver,\n\t\tEFieldResolutionType ResolutionType)"
  },
  {
    "label": "GetFilteredParticleHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredParticleHandles(\n\t\tTArray<Chaos::TGeometryParticleHandle<Chaos::FReal, 3>*>& Handles,\n\t\tconst Chaos::FPBDRigidsSolver* RigidSolver,\n\t\tconst EFieldFilterType FilterType,\n\t\tconst EFieldObjectType ObjectType)"
  },
  {
    "label": "DisableParticles_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableParticles_External(TArray<int32>&& TransformGroupIndices)"
  },
  {
    "label": "ApplyForceAt_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyForceAt_External(FVector Force, FVector WorldLocation)"
  },
  {
    "label": "ApplyImpulseAt_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyImpulseAt_External(FVector Force, FVector WorldLocation)"
  },
  {
    "label": "BreakClusters_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakClusters_External(TArray<FGeometryCollectionItemIndex>&& ItemIndices)"
  },
  {
    "label": "BreakActiveClusters_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakActiveClusters_External()"
  },
  {
    "label": "SetAnchoredByIndex_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnchoredByIndex_External(int32 Index, bool bAnchored)"
  },
  {
    "label": "SetAnchoredByTransformedBox_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnchoredByTransformedBox_External(const FBox& Box, const FTransform& Transform, bool bAnchored, int32 MaxLevel = INDEX_NONE)"
  },
  {
    "label": "RemoveAllAnchors_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnchors_External()"
  },
  {
    "label": "ApplyExternalStrain_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyExternalStrain_External(FGeometryCollectionItemIndex ItemIndex, const FVector& WorldLocation, float Radius, int32 PropagationDepth, float PropagationFactor, float StrainValue)"
  },
  {
    "label": "ApplyInternalStrain_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyInternalStrain_External(FGeometryCollectionItemIndex ItemIndex, const FVector& WorldLocation, float Radius, int32 PropagationDepth, float PropagationFactor, float StrainValue)"
  },
  {
    "label": "ApplyBreakingLinearVelocity_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBreakingLinearVelocity_External(FGeometryCollectionItemIndex ItemIndex, const FVector& LinearVelocity)"
  },
  {
    "label": "ApplyBreakingAngularVelocity_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBreakingAngularVelocity_External(FGeometryCollectionItemIndex ItemIndex, const FVector& AngularVelocity)"
  },
  {
    "label": "ApplyLinearVelocity_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLinearVelocity_External(FGeometryCollectionItemIndex ItemIndex, const FVector& LinearVelocity)"
  },
  {
    "label": "ApplyAngularVelocity_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyAngularVelocity_External(FGeometryCollectionItemIndex ItemIndex, const FVector& AngularVelocity)"
  },
  {
    "label": "SetProxyDirty_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProxyDirty_External()"
  },
  {
    "label": "SetEnableDamageFromCollision_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableDamageFromCollision_External(bool bEnable)"
  },
  {
    "label": "SetNotifyBreakings_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyBreakings_External(bool bNotify)"
  },
  {
    "label": "SetNotifyRemovals_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyRemovals_External(bool bNotify)"
  },
  {
    "label": "SetNotifyCrumblings_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyCrumblings_External(bool bNotify, bool bIncludeChildren)"
  },
  {
    "label": "SetNotifyGlobalBreakings_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalBreakings_External(bool bNotify)"
  },
  {
    "label": "SetNotifyGlobalRemovals_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalRemovals_External(bool bNotify)"
  },
  {
    "label": "SetNotifyGlobalCrumblings_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalCrumblings_External(bool bNotify, bool bIncludeChildren)"
  },
  {
    "label": "UpdateFilterData_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilterData_External(const FCollisionFilterData& NewSimFilter, const FCollisionFilterData& NewQueryFilter)"
  },
  {
    "label": "UpdatePerParticleFilterData_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePerParticleFilterData_External(const TArray<FParticleCollisionFilterData>& Data)"
  },
  {
    "label": "SetDamageThresholds_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamageThresholds_External(const TArray<float>& DamageThresholds)"
  },
  {
    "label": "SetDamagePropagationData_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamagePropagationData_External(bool bEnabled, float BreakDamagePropagationFactor, float ShockDamagePropagationFactor)"
  },
  {
    "label": "SetDamageModel_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamageModel_External(EDamageModelTypeEnum DamageModel)"
  },
  {
    "label": "SetUseMaterialDamageModifiers_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseMaterialDamageModifiers_External(bool bUseMaterialDamageModifiers)"
  },
  {
    "label": "SetMaterialOverrideMassScaleMultiplier_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialOverrideMassScaleMultiplier_External(float InMultiplier)"
  },
  {
    "label": "SetEnableGravity_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableGravity_External(bool EnableGravity_External)"
  },
  {
    "label": "SetGravityGroupIndex_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravityGroupIndex_External(int32 GravityGroupIndex)"
  },
  {
    "label": "SetOneWayInteractionLevel_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOneWayInteractionLevel_External(int32 OneWayInteractionLevel)"
  },
  {
    "label": "SetPhysicsMaterial_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsMaterial_External(const Chaos::FMaterialHandle& MaterialHandle)"
  },
  {
    "label": "CalculateAndSetLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CalculateAndSetLevel(int32 TransformGroupIdx, const TManagedArray<int32>& Parent, TManagedArray<int32>& Levels)"
  },
  {
    "label": "RebaseAllGameThreadCollectionTransformsOnNewWorldTransform_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebaseAllGameThreadCollectionTransformsOnNewWorldTransform_External()"
  },
  {
    "label": "CreateChildrenGeometry_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateChildrenGeometry_Internal()"
  },
  {
    "label": "RebaseParticleGameThreadCollectionTransformOnNewWorldTransform_External()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RebaseParticleGameThreadCollectionTransformOnNewWorldTransform_External(int32 ParticleIndex, const TManagedArray<FTransform>& MassToLocal, bool bIsComponentTransformScaled, const FTransform& ComponentScaleTransform)"
  },
  {
    "label": "SetSleepingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSleepingState(const Chaos::FPBDRigidsSolver& RigidsSolver)"
  },
  {
    "label": "DirtyAllParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DirtyAllParticles(const Chaos::FPBDRigidsSolver& RigidsSolver)"
  },
  {
    "label": "CalculateHierarchyLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CalculateHierarchyLevel(const FGeometryDynamicCollection& DynamicCollection, int32 TransformIndex)"
  },
  {
    "label": "SetClusteredParticleKinematicTarget_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClusteredParticleKinematicTarget_Internal(Chaos::FPBDRigidClusteredParticleHandle* Handle, const FTransform& WorldTransform)"
  },
  {
    "label": "PrepareBufferData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareBufferData(Chaos::FDirtyGeometryCollectionData& BufferData, const FGeometryDynamicCollection& ThreadCollection,  Chaos::FReal SolverLastDt = 0.0)"
  },
  {
    "label": "CreateNonClusteredParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNonClusteredParticles(Chaos::FPBDRigidsSolver* RigidsSolver,\tconst FGeometryCollection& RestCollection, const FGeometryDynamicCollection& DynamicCollection)"
  },
  {
    "label": "UpdateDamageThreshold_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDamageThreshold_Internal()"
  },
  {
    "label": "ScaleClusterGeometry_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScaleClusterGeometry_Internal(const FVector& WorldScale)"
  },
  {
    "label": "SetWorldTransform_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldTransform_Internal(const FTransform& WorldTransform, bool bInSkipChildToParentUpdateWhenInClusterUnion = false)"
  },
  {
    "label": "SetFilterData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterData_Internal(const FCollisionFilterData& NewSimFilter, const FCollisionFilterData& NewQueryFilter)"
  },
  {
    "label": "SetPerParticleFilterData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerParticleFilterData_Internal(const TArray<FParticleCollisionFilterData>& PerParticleData)"
  },
  {
    "label": "SetDamagePropagationData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamagePropagationData_Internal(bool bEnabled, float BreakDamagePropagationFactor, float ShockDamagePropagationFactor)"
  },
  {
    "label": "SetEnableGravity_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableGravity_Internal(bool bEnabled)"
  },
  {
    "label": "SetDamageThresholds_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamageThresholds_Internal(const TArray<float>& DamageThresholds)"
  },
  {
    "label": "SetDamageModel_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamageModel_Internal(EDamageModelTypeEnum DamageModel)"
  },
  {
    "label": "SetUseMaterialDamageModifiers_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseMaterialDamageModifiers_Internal(bool bUseMaterialDamageModifiers)"
  },
  {
    "label": "SetMaterialOverrideMassScaleMultiplier_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialOverrideMassScaleMultiplier_Internal(float InMultiplier)"
  },
  {
    "label": "SetGravityGroupIndex_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravityGroupIndex_Internal(int32 GravityGroupIndex)"
  },
  {
    "label": "SetOneWayInteractionLevel_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOneWayInteractionLevel_Internal(int32 InOneWayInteractionLevel)"
  },
  {
    "label": "SetPhysicsMaterial_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsMaterial_Internal(const Chaos::FMaterialHandle& MaterialHandle)"
  },
  {
    "label": "CalculateClustersToCreateFromChildren()",
    "kind": "Method",
    "detail": "Function (TBitArray<>)",
    "insertText": "CalculateClustersToCreateFromChildren(const FGeometryDynamicCollection& DynamicCollection, int32 NumTransforms)"
  },
  {
    "label": "CalculateEffectiveParticles()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CalculateEffectiveParticles(const FGeometryDynamicCollection& DynamicCollection, int32 NumTransform, int32 MaxSimulatedLevel, bool bEnableClustering, const UObject* Owner, TBitArray<>& EffectiveParticles)"
  },
  {
    "label": "CreateGTParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGTParticles(TManagedArray<Chaos::FImplicitObjectPtr>& Implicits, Chaos::FPBDRigidsEvolutionBase* Evolution, bool bInitializeRootOnly)"
  },
  {
    "label": "CreateChildrenGeometry_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateChildrenGeometry_External()"
  },
  {
    "label": "SyncParticles_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncParticles_External()"
  },
  {
    "label": "PullNonInterpolatableDataFromSinglePhysicsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PullNonInterpolatableDataFromSinglePhysicsState(const Chaos::FDirtyGeometryCollectionData& BufferData, bool bForcePullXRVW, const TBitArray<>* Seen)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(int32 NumTransforms)"
  },
  {
    "label": "SampleDamage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SampleDamage(int32 TransformIndex, float Damage, float DamageThreshold)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "AddCollector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCollector(const FGuid& Guid, int32 TransformNum)"
  },
  {
    "label": "RemoveCollector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCollector(const FGuid& Guid)"
  },
  {
    "label": "CreateTriangleMesh()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<Chaos::FTriangleMesh>)",
    "insertText": "CreateTriangleMesh(const int32 FaceStart,const int32 FaceCount,const TManagedArray<bool>& Visible,const TManagedArray<FIntVector>& Indices, bool bRotateWinding = true)"
  },
  {
    "label": "BuildSimulationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSimulationData(Chaos::FErrorReporter& ErrorReporter, FGeometryCollection& GeometryCollection, const FSharedSimulationParameters& SharedParams)"
  }
]