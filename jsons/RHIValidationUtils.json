[
  {
    "label": "FValidationRHIUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FValidationRHIUtils"
  },
  {
    "label": "ValidateCopyTexture()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / Build . h \" # if ENABLE_RHI_VALIDATION # include \" RHIResources . h \" # include \" RHICommandList . h \" class FValidationRHIUtils { public : void)",
    "insertText": "ValidateCopyTexture(FRHITexture* SourceTexture, FRHITexture* DestTexture, const FRHICopyTextureInfo& CopyInfo)"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (const EPixelFormat SrcFormat = SourceTexture ->)",
    "insertText": "GetFormat()"
  },
  {
    "label": "bValidCopyFormats()",
    "kind": "Method",
    "detail": "Function (const bool bIsSrcBlockCompressed = GPixelFormats [ SrcFormat ] . BlockSizeX> 1 ; const bool bIsDstBlockCompressed = GPixelFormats [ DstFormat ] . BlockSizeX> 1 ; const int32 SrcBlockBytes = GPixelFormats [ SrcFormat ] . BlockBytes ; const int32 DstBlockBytes = GPixelFormats [ DstFormat ] . BlockBytes ; const bool)",
    "insertText": "bValidCopyFormats(SrcFormat == DstFormat) || (!bIsSrcBlockCompressed && bIsDstBlockCompressed && SrcBlockBytes == DstBlockBytes)"
  },
  {
    "label": "GetMipDimensions()",
    "kind": "Method",
    "detail": "Function (FIntVector SrcSize = SourceTexture ->)",
    "insertText": "GetMipDimensions(CopyInfo.SourceMipIndex)"
  },
  {
    "label": "GetMipDimensions()",
    "kind": "Method",
    "detail": "Function (FIntVector DestSize = DestTexture ->)",
    "insertText": "GetMipDimensions(CopyInfo.DestMipIndex)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FIntVector CopySize = CopyInfo . Size ;)",
    "insertText": "if(CopySize == FIntVector::ZeroValue)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (CopySize = SrcSize ; })",
    "insertText": "checkf(CopySize.X <= DestSize.X && CopySize.Y <= DestSize.Y, TEXT(\"Some RHIs can't perform scaling operations [%dx%d to %dx%d] during copies!\"), SrcSize.X, SrcSize.Y, DestSize.X, DestSize.Y)"
  }
]