[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "FDirectoryNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" FileEntry . h \" # include \" DirectoryEntry . h \" # include \" . . / BlobType . h \" # include \" . . / StorageClient . h \" enum class EDirectoryFlags { None = 0,} ; class FDirectoryNode { public : const FBlobType BlobType ; EDirectoryFlags Flags ; TMap<FUtf8String,FFileEntry> NameToFile ; TMap<FUtf8String,FDirectoryEntry> NameToDirectory ;)",
    "insertText": "FDirectoryNode(EDirectoryFlags InFlags = EDirectoryFlags::None)"
  },
  {
    "label": "FDirectoryNode()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDirectoryNode()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (FDirectoryNode)",
    "insertText": "Read(const FBlob& Blob)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (FBlobHandle)",
    "insertText": "Write(FBlobWriter& Writer)"
  }
]