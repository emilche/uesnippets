[
  {
    "label": "FAssetFixUpRedirectors",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetFixUpRedirectors"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "IClassTypeActions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassTypeActions"
  },
  {
    "label": "UAutomatedAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAutomatedAssetImportData"
  },
  {
    "label": "UAssetImportTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportTask"
  },
  {
    "label": "ReportPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReportPackageData"
  },
  {
    "label": "FAssetImportParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetImportParams"
  },
  {
    "label": "UAssetToolsImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetToolsImpl"
  },
  {
    "label": "FRevisionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRevisionInfo"
  },
  {
    "label": "FMigrationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMigrationOptions"
  },
  {
    "label": "UAdvancedCopyCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAdvancedCopyCustomization"
  },
  {
    "label": "FAssetImportParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IAssetTools . h \" # include \" IAssetTypeActions . h \" # include \" AssetRegistry / AssetData . h \" # include \" AssetRenameManager . h \" # include \" Misc / NamePermissionList . h \" # include \" UObject / StrongObjectPtr . h \" # include \" Factories / Factory . h \" # include \" AssetTools . generated . h \" class FAssetFixUpRedirectors ; class UToolMenu ; class IClassTypeActions ; class UAutomatedAssetImportData ; class UAssetImportTask ; struct ReportPackageData ; struct FAssetImportParams {)",
    "insertText": "FAssetImportParams() : SpecifiedFactory(nullptr) , ImportData(nullptr) , AssetImportTask(nullptr) , bSyncToBrowser(true) , bForceOverrideExisting(false) , bAutomated(false) , bAllowAsyncImport(false) , bSceneImport(false)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} TStrongObjectPtr<UFactory> SpecifiedFactory ; const UAutomatedAssetImportData* ImportData ; UAssetImportTask* AssetImportTask ; bool bSyncToBrowser : 1 ; bool bForceOverrideExisting : 1 ; bool bAutomated : 1 ; bool bAllowAsyncImport : 1 ; bool bSceneImport : 1 ; } ; typedef class UAssetToolsImpl FAssetTools ; PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "UCLASS(transient)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UAssetToolsImpl(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "RegisterAssetTypeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAssetTypeActions(const TSharedRef<IAssetTypeActions>& NewActions)"
  },
  {
    "label": "UnregisterAssetTypeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAssetTypeActions(const TSharedRef<IAssetTypeActions>& ActionsToRemove)"
  },
  {
    "label": "GetAssetTypeActionsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetTypeActionsList(TArray<TWeakPtr<IAssetTypeActions>>& OutAssetTypeActionsList)"
  },
  {
    "label": "GetAssetTypeActionsForClass()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<IAssetTypeActions>)",
    "insertText": "GetAssetTypeActionsForClass(const UClass* Class)"
  },
  {
    "label": "GetLocalizedAssetTools()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ILocalizedAssetTools>)",
    "insertText": "GetLocalizedAssetTools()"
  },
  {
    "label": "CanLocalize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanLocalize(const UClass* Class)"
  },
  {
    "label": "GetTypeColor()",
    "kind": "Method",
    "detail": "Function (TOptional<FLinearColor>)",
    "insertText": "GetTypeColor(const UClass* Class)"
  },
  {
    "label": "GetAssetTypeActionsListForClass()",
    "kind": "Method",
    "detail": "Function (TArray<TWeakPtr<IAssetTypeActions>>)",
    "insertText": "GetAssetTypeActionsListForClass(const UClass* Class)"
  },
  {
    "label": "RegisterAdvancedAssetCategory()",
    "kind": "Method",
    "detail": "Function (EAssetTypeCategories::Type)",
    "insertText": "RegisterAdvancedAssetCategory(FName CategoryKey, FText CategoryDisplayName)"
  },
  {
    "label": "FindAdvancedAssetCategory()",
    "kind": "Method",
    "detail": "Function (EAssetTypeCategories::Type)",
    "insertText": "FindAdvancedAssetCategory(FName CategoryKey)"
  },
  {
    "label": "GetAllAdvancedAssetCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllAdvancedAssetCategories(TArray<FAdvancedAssetCategory>& OutCategoryList)"
  },
  {
    "label": "RegisterClassTypeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterClassTypeActions(const TSharedRef<IClassTypeActions>& NewActions)"
  },
  {
    "label": "UnregisterClassTypeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterClassTypeActions(const TSharedRef<IClassTypeActions>& ActionsToRemove)"
  },
  {
    "label": "GetClassTypeActionsList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetClassTypeActionsList(TArray<TWeakPtr<IClassTypeActions>>& OutClassTypeActionsList)"
  },
  {
    "label": "GetClassTypeActionsForClass()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<IClassTypeActions>)",
    "insertText": "GetClassTypeActionsForClass(UClass* Class)"
  },
  {
    "label": "CreateAsset()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "CreateAsset(const FString& AssetName, const FString& PackagePath, UClass* AssetClass, UFactory* Factory, FName CallingContext = NAME_None)"
  },
  {
    "label": "CreateAssetsFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAssetsFrom(TConstArrayView<UObject*> SourceObjects, UClass* CreateAssetType, const FString& DefaultSuffix, TFunctionRef<UFactory*(UObject*)> FactoryConstructor, FName CallingContext = NAME_None)"
  },
  {
    "label": "CreateAssetWithDialog()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "CreateAssetWithDialog(UClass* AssetClass, UFactory* Factory, FName CallingContext = NAME_None)"
  },
  {
    "label": "CreateAssetWithDialog()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "CreateAssetWithDialog(const FString& AssetName, const FString& PackagePath, UClass* AssetClass, UFactory* Factory, FName CallingContext = NAME_None, const bool bCallConfigureProperties = true)"
  },
  {
    "label": "DuplicateAsset()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "DuplicateAsset(const FString& AssetName, const FString& PackagePath, UObject* OriginalObject)"
  },
  {
    "label": "DuplicateAssetWithDialog()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "DuplicateAssetWithDialog(const FString& AssetName, const FString& PackagePath, UObject* OriginalObject)"
  },
  {
    "label": "DuplicateAssetWithDialogAndTitle()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "DuplicateAssetWithDialogAndTitle(const FString& AssetName, const FString& PackagePath, UObject* OriginalObject, FText DialogTitle)"
  },
  {
    "label": "SetCreateAssetsAsExternallyReferenceable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCreateAssetsAsExternallyReferenceable(bool bValue)"
  },
  {
    "label": "GetCreateAssetsAsExternallyReferenceable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCreateAssetsAsExternallyReferenceable()"
  },
  {
    "label": "ShouldCreateAssetsAsExternallyReferenceableForPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCreateAssetsAsExternallyReferenceableForPath(const FStringView AssetPath)"
  },
  {
    "label": "GetOnShouldCreateAssetsAsExternallyReferenceableForPath()",
    "kind": "Method",
    "detail": "Function (UE::AssetTools::FShouldCreateAssetsAsExternallyReferenceableForPath&)",
    "insertText": "GetOnShouldCreateAssetsAsExternallyReferenceableForPath()"
  },
  {
    "label": "IsDiscoveringAssetsInProgress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDiscoveringAssetsInProgress()"
  },
  {
    "label": "OpenDiscoveringAssetsDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenDiscoveringAssetsDialog(const FOnAssetsDiscovered& InOnAssetsDiscovered)"
  },
  {
    "label": "RenameAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameAssets(const TArray<FAssetRenameData>& AssetsAndNames)"
  },
  {
    "label": "RenameAssetsWithDialog()",
    "kind": "Method",
    "detail": "Function (EAssetRenameResult)",
    "insertText": "RenameAssetsWithDialog(const TArray<FAssetRenameData>& AssetsAndNames, bool bAutoCheckout = false)"
  },
  {
    "label": "FindSoftReferencesToObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSoftReferencesToObject(FSoftObjectPath TargetObject, TArray<UObject*>& ReferencingObjects)"
  },
  {
    "label": "FindSoftReferencesToObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSoftReferencesToObjects(const TArray<FSoftObjectPath>& TargetObjects, TMap<FSoftObjectPath, TArray<UObject*>>& ReferencingObjects)"
  },
  {
    "label": "RenameReferencingSoftObjectPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameReferencingSoftObjectPaths(const TArray<UPackage *> PackagesToCheck, const TMap<FSoftObjectPath, FSoftObjectPath>& AssetRedirectorMap)"
  },
  {
    "label": "ImportAssetsWithDialog()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "ImportAssetsWithDialog(const FString& DestinationPath)"
  },
  {
    "label": "ImportAssetsWithDialogAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportAssetsWithDialogAsync(const FString& DestinationPath)"
  },
  {
    "label": "ImportAssets()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "ImportAssets(const TArray<FString>& Files, const FString& DestinationPath, UFactory* ChosenFactory, bool bSyncToBrowser = true, TArray<TPair<FString, FString>>* FilesAndDestinations = nullptr, bool bAllowAsyncImport = false, bool bSceneImport = false)"
  },
  {
    "label": "ImportAssetsAutomated()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "ImportAssetsAutomated(const UAutomatedAssetImportData* ImportData)"
  },
  {
    "label": "ImportAssetTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportAssetTasks(const TArray<UAssetImportTask*>& ImportTasks)"
  },
  {
    "label": "ExportAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAssets(const TArray<FString>& AssetsToExport, const FString& ExportPath)"
  },
  {
    "label": "ExportAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAssets(const TArray<UObject*>& AssetsToExport, const FString& ExportPath)"
  },
  {
    "label": "ExportAssetsWithCleanFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAssetsWithCleanFilename(const TArray<UObject*>& AssetsToExport, const FString& ExportPath)"
  },
  {
    "label": "ExportAssetsWithDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAssetsWithDialog(const TArray<UObject*>& AssetsToExport, bool bPromptForIndividualFilenames)"
  },
  {
    "label": "ExportAssetsWithDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAssetsWithDialog(const TArray<FString>& AssetsToExport, bool bPromptForIndividualFilenames)"
  },
  {
    "label": "CanExportAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExportAssets(const TArray<FAssetData>& AssetsToExport)"
  },
  {
    "label": "CreateUniqueAssetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUniqueAssetName(const FString& InBasePackageName, const FString& InSuffix, FString& OutPackageName, FString& OutAssetName)"
  },
  {
    "label": "AssetUsesGenericThumbnail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AssetUsesGenericThumbnail(const FAssetData& AssetData)"
  },
  {
    "label": "DiffAgainstDepot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffAgainstDepot(UObject* InObject, const FString& InPackagePath, const FString& InPackageName)"
  },
  {
    "label": "DiffAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffAssets(UObject* OldAsset1, UObject* NewAsset, const struct FRevisionInfo& OldRevision, const struct FRevisionInfo& NewRevision)"
  },
  {
    "label": "DumpAssetToTempFile()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DumpAssetToTempFile(UObject* Asset)"
  },
  {
    "label": "CreateDiffProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateDiffProcess(const FString& DiffCommand, const FString& OldTextFilename, const FString& NewTextFilename, const FString& DiffArgs = FString(\"\"))"
  },
  {
    "label": "MigratePackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigratePackages(const TArray<FName>& PackageNamesToMigrate)"
  },
  {
    "label": "MigratePackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigratePackages(const TArray<FName>& PackageNamesToMigrate, const FString& TargetPath, const struct FMigrationOptions& Options = FMigrationOptions())"
  },
  {
    "label": "GetOnPackageMigration()",
    "kind": "Method",
    "detail": "Function (UE::AssetTools::FOnPackageMigration&)",
    "insertText": "GetOnPackageMigration()"
  },
  {
    "label": "BeginAdvancedCopyPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAdvancedCopyPackages(const TArray<FName>& InputNamesToCopy, const FString& TargetPath)"
  },
  {
    "label": "BeginAdvancedCopyPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAdvancedCopyPackages(const TArray<FName>& InputNamesToCopy, const FString& TargetPath, const FAdvancedCopyCompletedEvent& OnCopyComplete)"
  },
  {
    "label": "FixupReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupReferencers(const TArray<UObjectRedirector*>& Objects, bool bCheckoutDialogPrompt = true, ERedirectFixupMode FixupMode = ERedirectFixupMode::DeleteFixedUpRedirectors)"
  },
  {
    "label": "IsFixupReferencersInProgress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFixupReferencersInProgress()"
  },
  {
    "label": "OnAssetPostRename()",
    "kind": "Method",
    "detail": "Function (FAssetPostRenameEvent&)",
    "insertText": "OnAssetPostRename()"
  },
  {
    "label": "ExpandDirectories()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ExpandDirectories(const TArray<FString>& Files, const FString& DestinationPath, TArray<TPair<FString, FString>>& FilesAndDestinations)"
  },
  {
    "label": "AdvancedCopyPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AdvancedCopyPackages(const FAdvancedCopyParams& CopyParams, const TArray<TMap<FString, FString>>& PackagesAndDestinations)"
  },
  {
    "label": "AdvancedCopyPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AdvancedCopyPackages(const TMap<FString, FString>& SourceAndDestPackages, const bool bForceAutosave, const bool bCopyOverAllDestinationOverlaps, FDuplicatedObjects* OutDuplicatedObjects, EMessageSeverity::Type NotificationSeverityFilter)"
  },
  {
    "label": "GenerateAdvancedCopyDestinations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateAdvancedCopyDestinations(FAdvancedCopyParams& InParams, const TArray<FName>& InPackageNamesToCopy, const class UAdvancedCopyCustomization* CopyCustomization, TMap<FString, FString>& OutPackagesAndDestinations)"
  },
  {
    "label": "FlattenAdvancedCopyDestinations()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlattenAdvancedCopyDestinations(const TArray<TMap<FString, FString>>& PackagesAndDestinations, TMap<FString, FString>& FlattenedPackagesAndDestinations)"
  },
  {
    "label": "ValidateFlattenedAdvancedCopyDestinations()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateFlattenedAdvancedCopyDestinations(const TMap<FString, FString>& FlattenedPackagesAndDestinations)"
  },
  {
    "label": "GetAllAdvancedCopySources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllAdvancedCopySources(FName SelectedPackage, FAdvancedCopyParams& CopyParams, TArray<FName>& OutPackageNamesToCopy, TMap<FName, FName>& DependencyMap, const class UAdvancedCopyCustomization* CopyCustomization)"
  },
  {
    "label": "InitAdvancedCopyFromCopyParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAdvancedCopyFromCopyParams(FAdvancedCopyParams CopyParams)"
  },
  {
    "label": "OpenEditorForAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenEditorForAssets(const TArray<UObject*>& Assets)"
  },
  {
    "label": "ConvertVirtualTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertVirtualTextures(const TArray<UTexture2D*>& Textures, bool bConvertBackToNonVirtual, const TArray<UMaterial*>* RelatedMaterials = nullptr)"
  },
  {
    "label": "IsAssetClassSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetClassSupported(const UClass* AssetClass)"
  },
  {
    "label": "GetNewAssetFactories()",
    "kind": "Method",
    "detail": "Function (TArray<UFactory*>)",
    "insertText": "GetNewAssetFactories()"
  },
  {
    "label": "GetAssetClassPathPermissionList()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FPathPermissionList>&)",
    "insertText": "GetAssetClassPathPermissionList(EAssetClassAction AssetClassAction)"
  },
  {
    "label": "GetImportExtensionPermissionList()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FNamePermissionList>&)",
    "insertText": "GetImportExtensionPermissionList()"
  },
  {
    "label": "IsImportExtensionAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImportExtensionAllowed(const FStringView& Extension)"
  },
  {
    "label": "GetAllowedBlueprintTypes()",
    "kind": "Method",
    "detail": "Function (TSet<EBlueprintType>&)",
    "insertText": "GetAllowedBlueprintTypes()"
  },
  {
    "label": "GetFolderPermissionList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPathPermissionList>&)",
    "insertText": "GetFolderPermissionList()"
  },
  {
    "label": "GetWritableFolderPermissionList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPathPermissionList>&)",
    "insertText": "GetWritableFolderPermissionList()"
  },
  {
    "label": "IsAssetVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetVisible(const FAssetData& AssetData, bool bCheckAliases = true)"
  },
  {
    "label": "AllPassWritableFolderFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllPassWritableFolderFilter(const TArray<FString>& InPaths)"
  },
  {
    "label": "NotifyBlockedByWritableFolderFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBlockedByWritableFolderFilter()"
  },
  {
    "label": "IsNameAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNameAllowed(const FString& Name, FText* OutErrorMessage = nullptr)"
  },
  {
    "label": "RegisterIsNameAllowedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterIsNameAllowedDelegate(const FName OwnerName, FIsNameAllowed Delegate)"
  },
  {
    "label": "UnregisterIsNameAllowedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterIsNameAllowedDelegate(const FName OwnerName)"
  },
  {
    "label": "SanitizeName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SanitizeName(FString& NameToSanitize)"
  },
  {
    "label": "RegisterSanitizeNameDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSanitizeNameDelegate(const FName OwnerName, FSanitizeName Delegate)"
  },
  {
    "label": "UnregisterSanitizeNameDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSanitizeNameDelegate(const FName OwnerName)"
  },
  {
    "label": "RegisterCanMigrateAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCanMigrateAsset(const FName OwnerName, UE::AssetTools::FCanMigrateAsset Delegate)"
  },
  {
    "label": "UnregisterCanMigrateAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCanMigrateAsset(const FName OwnerName)"
  },
  {
    "label": "CanAssetBePublic()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAssetBePublic(FStringView AssetPath)"
  },
  {
    "label": "RegisterCanAssetBePublic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCanAssetBePublic(const FName OwnerName, UE::AssetTools::FCanAssetBePublic Delegate)"
  },
  {
    "label": "UnregisterCanAssetBePublic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCanAssetBePublic(const FName OwnerName)"
  },
  {
    "label": "SyncBrowserToAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncBrowserToAssets(const TArray<UObject*>& AssetsToSync)"
  },
  {
    "label": "SyncBrowserToAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncBrowserToAssets(const TArray<FAssetData>& AssetsToSync)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (public : UAssetToolsImpl&)",
    "insertText": "Get()"
  },
  {
    "label": "GenerateAdvancedCopyDestinationPackageName()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAssetRenameManager> AssetRenameManager ; TSharedPtr<ILocalizedAssetTools> LocalizedAssetTools ; TSharedPtr<FAssetFixUpRedirectors> AssetFixUpRedirectors ; private : FString)",
    "insertText": "GenerateAdvancedCopyDestinationPackageName(const FString& SourcePackage, const FString& SourcePath, const FString& DestinationFolder)"
  },
  {
    "label": "CheckForDeletedPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckForDeletedPackage(const UPackage* Package)"
  },
  {
    "label": "CanCreateAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateAsset(const FString& AssetName, const FString& PackageName, const FText& OperationText)"
  },
  {
    "label": "PerformMigratePackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformMigratePackages(TArray<FName> PackageNamesToMigrate, const FString DestinationPath, const FMigrationOptions Options)"
  },
  {
    "label": "CanMigratePackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMigratePackage(FName PackageName)"
  },
  {
    "label": "ExpandAssetsAndFoldersToJustAssets()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "ExpandAssetsAndFoldersToJustAssets(TArray<FName> SelectedAssetAndFolderNames)"
  },
  {
    "label": "PerformAdvancedCopyPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformAdvancedCopyPackages(TArray<FName> SelectedPackageNames, FString TargetPath, FAdvancedCopyCompletedEvent OnCopyComplete)"
  },
  {
    "label": "MigratePackages_ReportConfirmed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MigratePackages_ReportConfirmed(TSharedPtr<TArray<ReportPackageData>> PackageDataToMigrate, const FString DestinationPath, TSet<FName> ExcludedDependencies, TMap<FName, TSet<FName>> PackageToExternalObjectPackages, const FMigrationOptions Options)"
  },
  {
    "label": "AdvancedCopyPackages_ReportConfirmed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvancedCopyPackages_ReportConfirmed(const FAdvancedCopyParams& CopyParam, const TArray<TMap<FString, FString>>& DestinationMap)"
  },
  {
    "label": "RecursiveGetDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursiveGetDependencies(const FName& PackageName, TSet<FName>& AllDependencies, TSet<FString>& ExternalObjectsPaths, TSet<FName>& ExcludedDependencies, const TFunction<bool(FName)>& ShouldExcludeFromDependenciesSearch)"
  },
  {
    "label": "RecursiveGetDependenciesAdvanced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursiveGetDependenciesAdvanced(const FName& PackageName, FAdvancedCopyParams& CopyParams, TArray<FName>& AllDependencies, TMap<FName, FName>& DependencyMap, const FARCompiledFilter& CompiledExclusionFilter, TArray<FAssetData>& OptionalAssetData)"
  },
  {
    "label": "OnNewImportRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewImportRecord(UClass* AssetType, const FString& FileExtension, bool bSucceeded, bool bWasCancelled, const FDateTime& StartTime)"
  },
  {
    "label": "OnNewCreateRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewCreateRecord(UClass* AssetType, bool bDuplicated)"
  },
  {
    "label": "ImportAssetsInternal()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "ImportAssetsInternal(const TArray<FString>& Files, const FString& RootDestinationPath, TArray<TPair<FString, FString>> *FilesAndDestinationsPtr, const FAssetImportParams& ImportParams)"
  },
  {
    "label": "ExportAssetsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportAssetsInternal(const TArray<UObject*>& ObjectsToExport, bool bPromptIndividualFilenames, bool bSaveAsCleanFilename, const FString& ExportPath)"
  },
  {
    "label": "PerformDuplicateAsset()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "PerformDuplicateAsset(const FString& AssetName, const FString& PackagePath, UObject* OriginalObject, bool bWithDialog)"
  },
  {
    "label": "AddSubContentDenyList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubContentDenyList(const FString& InMount)"
  },
  {
    "label": "OnContentPathMounted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContentPathMounted(const FString& InAssetPath, const FString& FileSystemPath)"
  },
  {
    "label": "ImportAssetsWithDialogImplementation()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "ImportAssetsWithDialogImplementation(const FString& DestinationPath, bool bAllowAsyncImport)"
  },
  {
    "label": "SyncAssetTypesToAssetDefinitions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncAssetTypesToAssetDefinitions()"
  },
  {
    "label": "RemoveAssetTypeActionBySupportedClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAssetTypeActionBySupportedClass(const UClass* SupportedClass)"
  }
]