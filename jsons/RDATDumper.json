[
  {
    "label": "RecordDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RecordDumper"
  },
  {
    "label": "RecordRefDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RecordRefDumper"
  },
  {
    "label": "DumpRuntimeData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DumpContext . h \" # include \" dxc / Support / WinIncludes . h \" namespace hlsl { using namespace RDAT ; namespace dump { void)",
    "insertText": "DumpRuntimeData(const RDAT::DxilRuntimeData &RDAT, DumpContext &d)"
  },
  {
    "label": "DumpRecordTable()",
    "kind": "Method",
    "detail": "Function (template<RecordType> void)",
    "insertText": "DumpRecordTable(const RDAT::RDATContext &ctx, DumpContext &d, const char *tableName, const RDAT::TableReader &table)"
  },
  {
    "label": "DumpRecordTableEntry()",
    "kind": "Method",
    "detail": "Function (template<RecordType> void)",
    "insertText": "DumpRecordTableEntry(const RDAT::RDATContext &ctx, DumpContext &d, uint32_t i)"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (template<_RecordType> class RecordDumper : public _RecordType { public : void)",
    "insertText": "Dump(const hlsl::RDAT::RDATContext &ctx, DumpContext &d)"
  },
  {
    "label": "DumpWithBase()",
    "kind": "Method",
    "detail": "Function (} ; template<_RecordType> void)",
    "insertText": "DumpWithBase(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const _RecordType *pRecord)"
  },
  {
    "label": "_RecordType()",
    "kind": "Method",
    "detail": "Function (static_cast<const RecordDumper<)",
    "insertText": "_RecordType(pRecord)->Dump(ctx, d)"
  },
  {
    "label": "RecordRefDumper()",
    "kind": "Method",
    "detail": "Function (} template<_RecordType> class RecordRefDumper : public hlsl::RDAT::RecordRef<_RecordType> { public :)",
    "insertText": "RecordRefDumper(uint32_t index)"
  },
  {
    "label": "TypeName()",
    "kind": "Method",
    "detail": "Function (this -> Index = index ; } template<_DumpTy = _RecordType> const char*)",
    "insertText": "TypeName(const hlsl::RDAT::RDATContext &ctx)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (RecordRef<_DumpTy> rr = { this -> Index } ;)",
    "insertText": "if(rr.Get(ctx)) return RecordTraits<_DumpTy>::TypeName()"
  },
  {
    "label": "rrDumper()",
    "kind": "Method",
    "detail": "Function (RecordRefDumper<_DumpTy>)",
    "insertText": "rrDumper(this->Index)"
  },
  {
    "label": "_DumpTy()",
    "kind": "Method",
    "detail": "Function (static_cast<const RecordDumper<)",
    "insertText": "_DumpTy(ptr)->Dump(ctx, d)"
  },
  {
    "label": "DumpDerived()",
    "kind": "Method",
    "detail": "Function (rrDumper .)",
    "insertText": "DumpDerived(ctx, d)"
  },
  {
    "label": "TypeNameDerived()",
    "kind": "Method",
    "detail": "Function (} } const char*)",
    "insertText": "TypeNameDerived(const hlsl::RDAT::RDATContext &ctx)"
  },
  {
    "label": "DumpRecordValue()",
    "kind": "Method",
    "detail": "Function (} } ; template<_T> void)",
    "insertText": "DumpRecordValue(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const char *tyName, const char *memberName, const _T *memberPtr)"
  },
  {
    "label": "DumpRecordRef()",
    "kind": "Method",
    "detail": "Function (template<_T> void)",
    "insertText": "DumpRecordRef(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const char *tyName, const char *memberName, hlsl::RDAT::RecordRef<_T> rr)"
  },
  {
    "label": "DumpRecordArrayRef()",
    "kind": "Method",
    "detail": "Function (template<_T> void)",
    "insertText": "DumpRecordArrayRef(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const char *tyName, const char *memberName, hlsl::RDAT::RecordArrayRef<_T> rar)"
  },
  {
    "label": "DumpStringArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpStringArray(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const char *memberName, hlsl::RDAT::RDATStringArray sa)"
  },
  {
    "label": "DumpIndexArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpIndexArray(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const char *memberName, uint32_t index)"
  },
  {
    "label": "DumpBytesRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpBytesRef(const hlsl::RDAT::RDATContext &ctx, DumpContext &d, const char *memberName, hlsl::RDAT::BytesRef bytesRef)"
  },
  {
    "label": "DumpValueArray()",
    "kind": "Method",
    "detail": "Function (template<_T> void)",
    "insertText": "DumpValueArray(DumpContext &d, const char *memberName, const char *typeName, const void *valueArray, unsigned arraySize)"
  }
]