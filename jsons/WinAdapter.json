[
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "GUID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GUID"
  },
  {
    "label": "_GUID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_GUID"
  },
  {
    "label": "_FILETIME",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_FILETIME"
  },
  {
    "label": "_BY_HANDLE_FILE_INFORMATION",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_BY_HANDLE_FILE_INFORMATION"
  },
  {
    "label": "_WIN32_FIND_DATAW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_WIN32_FIND_DATAW"
  },
  {
    "label": "tagSTATSTG",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagSTATSTG"
  },
  {
    "label": "tagSTATFLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "tagSTATFLAG"
  },
  {
    "label": "interface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "interface"
  },
  {
    "label": "__declspec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__declspec"
  },
  {
    "label": "DECLSPEC_UUID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DECLSPEC_UUID"
  },
  {
    "label": "iface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "iface"
  },
  {
    "label": "IUnknown",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IUnknown"
  },
  {
    "label": "Q",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Q"
  },
  {
    "label": "INoMarshal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INoMarshal"
  },
  {
    "label": "IMalloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMalloc"
  },
  {
    "label": "ISequentialStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ISequentialStream"
  },
  {
    "label": "IStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IStream"
  },
  {
    "label": "CAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CAllocator"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "CComPtrBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CComPtrBase"
  },
  {
    "label": "Q",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Q"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "CComPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CComPtr"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "CSimpleArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSimpleArray"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "CHeapPtrBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHeapPtrBase"
  },
  {
    "label": "Allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Allocator"
  },
  {
    "label": "CHeapPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHeapPtr"
  },
  {
    "label": "CW2AEX",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CW2AEX"
  },
  {
    "label": "CA2WEX",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CA2WEX"
  },
  {
    "label": "CHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHandle"
  },
  {
    "label": "DECLARE_HANDLE()",
    "kind": "Method",
    "detail": "Function (name)",
    "insertText": "DECLARE_HANDLE(HINSTANCE)"
  },
  {
    "label": "IsEqualGUID()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsEqualGUID(riid1, riid2)"
  },
  {
    "label": "IsEqualGUID()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsEqualGUID(rclsid1, rclsid2)"
  },
  {
    "label": "__emulated_uuidof()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "__emulated_uuidof()"
  },
  {
    "label": "SysFreeString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SysFreeString(BSTR bstrString)"
  },
  {
    "label": "SysAllocStringLen()",
    "kind": "Method",
    "detail": "Function (BSTR)",
    "insertText": "SysAllocStringLen(const OLECHAR *strIn, UINT ui)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (CP_ACP)",
    "insertText": "assert(false && \"CW2AEX implementation for Linux only handles \"\n                      \"UTF8 and ACP code pages\")"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (CP_ACP)",
    "insertText": "assert(false && \"CA2WEX implementation for Linux only handles \"\n                      \"UTF8 and ACP code pages\")"
  },
  {
    "label": "CHandle()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CHandle(HANDLE h)"
  },
  {
    "label": "throw()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "throw()"
  }
]