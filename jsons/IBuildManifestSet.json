[
  {
    "label": "FPreReqInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreReqInfo"
  },
  {
    "label": "FBuildPatchInstallerAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildPatchInstallerAction"
  },
  {
    "label": "IBuildManifestSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildManifestSet"
  },
  {
    "label": "FBuildManifestSetFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildManifestSetFactory"
  },
  {
    "label": "FBuildPatchInstallerAction()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BuildPatchSettings . h \" # include \" BuildPatchManifest . h \" namespace BuildPatchServices { struct FPreReqInfo { TSet<FString> IdSet ; FString Name ; FString Path ; FString Args ; FString AppName ; FString VersionString ; bool bIsRepair ; } ; struct FBuildPatchInstallerAction { public :)",
    "insertText": "FBuildPatchInstallerAction(const FInstallerAction& InInstallerAction) : InstallerAction(InInstallerAction) , CurrentManifest(StaticCastSharedPtr<FBuildPatchAppManifest>(InstallerAction.TryGetCurrentManifest())) , InstallManifest(StaticCastSharedPtr<FBuildPatchAppManifest>(InstallerAction.TryGetInstallManifest()))"
  },
  {
    "label": "GetInstallTags()",
    "kind": "Method",
    "detail": "Function (InstallTags = InstallerAction .)",
    "insertText": "GetInstallTags()"
  },
  {
    "label": "GetInstallOrCurrentManifest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstallOrCurrentManifest().GetFileTagList(InstallTags)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} InstallTags .)",
    "insertText": "Add(TEXT(\"\"))"
  },
  {
    "label": "GetInstallManifest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstallManifest().GetTaggedFileList(InstallTags, TaggedFiles)"
  },
  {
    "label": "IsInstall()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsInstall()"
  },
  {
    "label": "IsUpdate()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsUpdate()"
  },
  {
    "label": "IsRepair()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRepair()"
  },
  {
    "label": "IsUninstall()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsUninstall()"
  },
  {
    "label": "GetCloudSubdirectory()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetCloudSubdirectory()"
  },
  {
    "label": "GetCurrentManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifest&)",
    "insertText": "GetCurrentManifest()"
  },
  {
    "label": "TryGetInstallManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifest*)",
    "insertText": "TryGetInstallManifest()"
  },
  {
    "label": "GetCurrentOrInstallManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifest&)",
    "insertText": "GetCurrentOrInstallManifest()"
  },
  {
    "label": "GetInstallOrCurrentManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifest&)",
    "insertText": "GetInstallOrCurrentManifest()"
  },
  {
    "label": "GetSharedCurrentManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifestRef)",
    "insertText": "GetSharedCurrentManifest()"
  },
  {
    "label": "GetSharedInstallManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifestRef)",
    "insertText": "GetSharedInstallManifest()"
  },
  {
    "label": "TryGetSharedCurrentManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifestPtr)",
    "insertText": "TryGetSharedCurrentManifest()"
  },
  {
    "label": "GetSharedInstallOrCurrentManifest()",
    "kind": "Method",
    "detail": "Function (} const FBuildPatchAppManifestRef)",
    "insertText": "GetSharedInstallOrCurrentManifest()"
  },
  {
    "label": "SetDeltaManifest()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDeltaManifest(const FBuildPatchAppManifestRef& DeltaManifest)"
  },
  {
    "label": "SetTaggedFiles()",
    "kind": "Method",
    "detail": "Function (InstallManifest = DeltaManifest ; } } void)",
    "insertText": "SetTaggedFiles(TSet<FString> OverrideTaggedFiles)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (TaggedFiles =)",
    "insertText": "MoveTemp(OverrideTaggedFiles)"
  },
  {
    "label": "IBuildManifestSet()",
    "kind": "Method",
    "detail": "Function (} private : const FInstallerAction InstallerAction ; FBuildPatchAppManifestPtr CurrentManifest ; FBuildPatchAppManifestPtr InstallManifest ; TSet<FString> InstallTags ; TSet<FString> TaggedFiles ; } ; class IBuildManifestSet { public : ~)",
    "insertText": "IBuildManifestSet()"
  },
  {
    "label": "GetInstallResumeIds()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetInstallResumeIds(TSet<FString>& ResumeIds, bool bIncludeLegacy)"
  },
  {
    "label": "GetInstallResumeIdsForFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstallResumeIdsForFile(const FString& BuildFile, TSet<FString>& ResumeIds, bool bIncludeLegacy)"
  },
  {
    "label": "GetReferencedChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencedChunks(TSet<FGuid>& DataGuids)"
  },
  {
    "label": "GetDownloadSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetDownloadSize(const FGuid& DataGuid)"
  },
  {
    "label": "GetDownloadSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetDownloadSize(const TSet<FGuid>& DataGuids)"
  },
  {
    "label": "GetChunkShaHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetChunkShaHash(const FGuid& ChunkGuid, FSHAHash& OutHash)"
  },
  {
    "label": "GetDataFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDataFilename(const FGuid& DataGuid)"
  },
  {
    "label": "GetNumExpectedFiles()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumExpectedFiles()"
  },
  {
    "label": "GetExpectedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExpectedFiles(TSet<FString>& Filenames)"
  },
  {
    "label": "GetOutdatedFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOutdatedFiles(const FString& InstallDirectory, TSet<FString>& OutdatedFiles)"
  },
  {
    "label": "GetRemovableFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRemovableFiles(TSet<FString>& FilesToRemove)"
  },
  {
    "label": "GetCurrentFileManifest()",
    "kind": "Method",
    "detail": "Function (const FFileManifest*)",
    "insertText": "GetCurrentFileManifest(const FString& BuildFile)"
  },
  {
    "label": "GetNewFileManifest()",
    "kind": "Method",
    "detail": "Function (const FFileManifest*)",
    "insertText": "GetNewFileManifest(const FString& BuildFile)"
  },
  {
    "label": "GetTotalNewFileSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTotalNewFileSize(const TArray<FString>& Filenames)"
  },
  {
    "label": "GetTotalNewFileSize()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTotalNewFileSize(const TSet<FString>& Filenames)"
  },
  {
    "label": "GetPreReqInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPreReqInfo(TArray<FPreReqInfo>& PreReqInfo)"
  },
  {
    "label": "GetFilesTaggedForRepair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilesTaggedForRepair(TSet<FString>& Filenames)"
  },
  {
    "label": "IsFileRepairAction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFileRepairAction(const FString& Filename)"
  },
  {
    "label": "ContainsUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsUpdate()"
  },
  {
    "label": "IsRepairOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRepairOnly()"
  },
  {
    "label": "HasFileAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFileAttributes()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FBuildManifestSetFactory { public : IBuildManifestSet*)",
    "insertText": "Create(TArray<FBuildPatchInstallerAction> InstallerActions)"
  }
]