[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "STreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeView"
  },
  {
    "label": "TreeFilterHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeFilterHandler"
  },
  {
    "label": "TTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TTextFilter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UMGEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMGEDITOR_API"
  },
  {
    "label": "FItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FItem"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / Widget . h \" # include \" Framework / Views / TreeFilterHandler . h \" # include \" Misc / TextFilter . h \" # include \" Framework / SlateDelegates . h \" # include \" UObject / ObjectPtr . h \" # include \" WidgetBlueprint . h \" # include \" Widgets / SCompoundWidget . h \" # include \" SReadOnlyHierarchyView . generated . h \" class ITableRow ; class SSearchBox ; class STableViewBase ; template<ItemType> class STreeView ; template<ItemType> class TreeFilterHandler ; template<ItemType> class TTextFilter ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "FItem()",
    "kind": "Method",
    "detail": "Function (Disabled,Enabled,Self } ; class SReadOnlyHierarchyView : public SCompoundWidget { private : struct FItem {)",
    "insertText": "FItem(const UWidget* InWidget) : Widget(InWidget)"
  },
  {
    "label": "FItem()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FItem(const UWidgetBlueprint* InWidgetBlueprint) : WidgetBlueprint(InWidgetBlueprint)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} TWeakObjectPtr<const UWidget> Widget ; TWeakObjectPtr<const UWidgetBlueprint> WidgetBlueprint ; TArray<TSharedPtr<FItem>> Children ; } ; public : using FOnSelectionChanged = TSlateDelegates<FName>::FOnSelectionChanged ;)",
    "insertText": "SLATE_BEGIN_ARGS(SReadOnlyHierarchyView)"
  },
  {
    "label": "SLATE_ARGUMENT_DEFAULT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT_DEFAULT(bool, ShowSearch)"
  },
  {
    "label": "SLATE_ARGUMENT_DEFAULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_ARGUMENT_DEFAULT(ERootSelectionMode, RootSelectionMode)"
  },
  {
    "label": "SLATE_ARGUMENT_DEFAULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_ARGUMENT_DEFAULT(ESelectionMode::Type, SelectionMode)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_EVENT(FOnSelectionChanged, OnSelectionChanged) SLATE_ARGUMENT(TArray<FName>, ShowOnly) SLATE_ARGUMENT_DEFAULT(bool, ExpandAll)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_END_ARGS() virtual ~SReadOnlyHierarchyView()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const UWidgetBlueprint* WidgetBlueprint)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "SetSelectedWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedWidget(FName WidgetName)"
  },
  {
    "label": "SetRawFilterText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRawFilterText(const FText& Text)"
  },
  {
    "label": "GetSelectedWidgets()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetSelectedWidgets()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "GenerateRow()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "GenerateRow(TSharedPtr<FItem> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GetItemChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetItemChildren(TSharedPtr<FItem> Item, TArray<TSharedPtr<FItem>>& OutChildren)"
  },
  {
    "label": "GetItemText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetItemText(TSharedPtr<FItem> Item)"
  },
  {
    "label": "GetIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIconBrush(TSharedPtr<FItem> Item)"
  },
  {
    "label": "GetIconToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetIconToolTipText(TSharedPtr<FItem> Item)"
  },
  {
    "label": "GetWidgetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWidgetToolTipText(TSharedPtr<FItem> Item)"
  },
  {
    "label": "GetFilterStringsForItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilterStringsForItem(TSharedPtr<FItem> Item, TArray<FString>& OutStrings)"
  },
  {
    "label": "FindItem()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FItem>)",
    "insertText": "FindItem(const TArray<TSharedPtr<FItem>>& RootItems, FName Name)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<FItem> Selected, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "RebuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildTree()"
  },
  {
    "label": "BuildWidgetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildWidgetChildren(const UWidget* Widget, TSharedPtr<FItem> Parent)"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(TSharedPtr<FItem> Item, bool bShouldBeExpanded)"
  },
  {
    "label": "ExpandAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandAll()"
  },
  {
    "label": "GetItemName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetItemName(const TSharedPtr<FItem>& Item)"
  }
]