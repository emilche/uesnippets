[
  {
    "label": "addMaterialAssignment()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcMaterial_MaterialAssignment_h # define Alembic_AbcMaterial_MaterialAssignment_h # include<Alembic / Util / Export . h> # include<Alembic / AbcMaterial / IMaterial . h> # include<Alembic / AbcMaterial / OMaterial . h> namespace Alembic { namespace AbcMaterial { namespace ALEMBIC_VERSION_NS { # define MATERIALASSIGN_PROPNAME \" . material . assign \" # define MATERIAL_PROPNAME \" . material \" ALEMBIC_EXPORT void)",
    "insertText": "addMaterialAssignment(Abc::OObject iObject, const std::string & iValue, const std::string & iPropName = MATERIALASSIGN_PROPNAME)"
  },
  {
    "label": "addMaterialAssignment()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT void)",
    "insertText": "addMaterialAssignment(Abc::OCompoundProperty iProp, const std::string & iValue, const std::string & iPropName = MATERIALASSIGN_PROPNAME)"
  },
  {
    "label": "addMaterial()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT OMaterialSchema)",
    "insertText": "addMaterial(Abc::OObject iObject, const std::string & iPropName = MATERIAL_PROPNAME)"
  },
  {
    "label": "addMaterial()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT OMaterialSchema)",
    "insertText": "addMaterial(Abc::OCompoundProperty iProp, const std::string & iPropName = MATERIAL_PROPNAME)"
  },
  {
    "label": "getMaterialAssignmentPath()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT bool)",
    "insertText": "getMaterialAssignmentPath(Abc::IObject iObject, std::string & oResult, const std::string & iPropName = MATERIALASSIGN_PROPNAME)"
  },
  {
    "label": "getMaterialAssignmentPath()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT bool)",
    "insertText": "getMaterialAssignmentPath(Abc::ICompoundProperty iProp, std::string & oResult, const std::string & iPropName = MATERIALASSIGN_PROPNAME)"
  },
  {
    "label": "hasMaterial()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT bool)",
    "insertText": "hasMaterial(Abc::IObject iObject, IMaterialSchema & oResult, const std::string & iPropName = MATERIAL_PROPNAME)"
  },
  {
    "label": "hasMaterial()",
    "kind": "Method",
    "detail": "Function (ALEMBIC_EXPORT bool)",
    "insertText": "hasMaterial(Abc::ICompoundProperty iCompound, IMaterialSchema & oResult, const std::string & iPropName = MATERIAL_PROPNAME)"
  }
]