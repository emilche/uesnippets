[
  {
    "label": "__GLXFBConfigRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__GLXFBConfigRec"
  },
  {
    "label": "GLXFBConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef __glxext_h_ # define __glxext_h_ 1 # ifdef __cplusplus \" C \" { # endif # define GLX_GLXEXT_VERSION 2 0 1 6 0 9 1 4 # ifndef GLX_VERSION_1_3 # define GLX_VERSION_1_3 1 typedef XID GLXContextID ; typedef struct __GLXFBConfigRec* GLXFBConfig ; typedef XID GLXWindow ; typedef XID GLXPbuffer ; # define GLX_WINDOW_BIT 0 x00000001 # define GLX_PIXMAP_BIT 0 x00000002 # define GLX_PBUFFER_BIT 0 x00000004 # define GLX_RGBA_BIT 0 x00000001 # define GLX_COLOR_INDEX_BIT 0 x00000002 # define GLX_PBUFFER_CLOBBER_MASK 0 x08000000 # define GLX_FRONT_LEFT_BUFFER_BIT 0 x00000001 # define GLX_FRONT_RIGHT_BUFFER_BIT 0 x00000002 # define GLX_BACK_LEFT_BUFFER_BIT 0 x00000004 # define GLX_BACK_RIGHT_BUFFER_BIT 0 x00000008 # define GLX_AUX_BUFFERS_BIT 0 x00000010 # define GLX_DEPTH_BUFFER_BIT 0 x00000020 # define GLX_STENCIL_BUFFER_BIT 0 x00000040 # define GLX_ACCUM_BUFFER_BIT 0 x00000080 # define GLX_CONFIG_CAVEAT 0 x20 # define GLX_X_VISUAL_TYPE 0 x22 # define GLX_TRANSPARENT_TYPE 0 x23 # define GLX_TRANSPARENT_INDEX_VALUE 0 x24 # define GLX_TRANSPARENT_RED_VALUE 0 x25 # define GLX_TRANSPARENT_GREEN_VALUE 0 x26 # define GLX_TRANSPARENT_BLUE_VALUE 0 x27 # define GLX_TRANSPARENT_ALPHA_VALUE 0 x28 # define GLX_DONT_CARE 0 xFFFFFFFF # define GLX_NONE 0 x8000 # define GLX_SLOW_CONFIG 0 x8001 # define GLX_TRUE_COLOR 0 x8002 # define GLX_DIRECT_COLOR 0 x8003 # define GLX_PSEUDO_COLOR 0 x8004 # define GLX_STATIC_COLOR 0 x8005 # define GLX_GRAY_SCALE 0 x8006 # define GLX_STATIC_GRAY 0 x8007 # define GLX_TRANSPARENT_RGB 0 x8008 # define GLX_TRANSPARENT_INDEX 0 x8009 # define GLX_VISUAL_ID 0 x800B # define GLX_SCREEN 0 x800C # define GLX_NON_CONFORMANT_CONFIG 0 x800D # define GLX_DRAWABLE_TYPE 0 x8010 # define GLX_RENDER_TYPE 0 x8011 # define GLX_X_RENDERABLE 0 x8012 # define GLX_FBCONFIG_ID 0 x8013 # define GLX_RGBA_TYPE 0 x8014 # define GLX_COLOR_INDEX_TYPE 0 x8015 # define GLX_MAX_PBUFFER_WIDTH 0 x8016 # define GLX_MAX_PBUFFER_HEIGHT 0 x8017 # define GLX_MAX_PBUFFER_PIXELS 0 x8018 # define GLX_PRESERVED_CONTENTS 0 x801B # define GLX_LARGEST_PBUFFER 0 x801C # define GLX_WIDTH 0 x801D # define GLX_HEIGHT 0 x801E # define GLX_EVENT_MASK 0 x801F # define GLX_DAMAGED 0 x8020 # define GLX_SAVED 0 x8021 # define GLX_WINDOW 0 x8022 # define GLX_PBUFFER 0 x8023 # define GLX_PBUFFER_HEIGHT 0 x8040 # define GLX_PBUFFER_WIDTH 0 x8041 typedef)",
    "insertText": "GLXFBConfig(*PFNGLXGETFBCONFIGSPROC) (Display *dpy, int screen, int *nelements)"
  },
  {
    "label": "GLXFBConfig()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXFBConfig(*PFNGLXCHOOSEFBCONFIGPROC) (Display *dpy, int screen, const int *attrib_list, int *nelements)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXGETFBCONFIGATTRIBPROC) (Display *dpy, GLXFBConfig config, int attribute, int *value)"
  },
  {
    "label": "XVisualInfo()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "XVisualInfo(*PFNGLXGETVISUALFROMFBCONFIGPROC) (Display *dpy, GLXFBConfig config)"
  },
  {
    "label": "GLXWindow()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXWindow(*PFNGLXCREATEWINDOWPROC) (Display *dpy, GLXFBConfig config, Window win, const int *attrib_list)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXDESTROYWINDOWPROC) (Display *dpy, GLXWindow win)"
  },
  {
    "label": "GLXPixmap()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXPixmap(*PFNGLXCREATEPIXMAPPROC) (Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXDESTROYPIXMAPPROC) (Display *dpy, GLXPixmap pixmap)"
  },
  {
    "label": "GLXPbuffer()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXPbuffer(*PFNGLXCREATEPBUFFERPROC) (Display *dpy, GLXFBConfig config, const int *attrib_list)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXDESTROYPBUFFERPROC) (Display *dpy, GLXPbuffer pbuf)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXQUERYDRAWABLEPROC) (Display *dpy, GLXDrawable draw, int attribute, unsigned int *value)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContext(*PFNGLXCREATENEWCONTEXTPROC) (Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXMAKECONTEXTCURRENTPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"
  },
  {
    "label": "GLXDrawable()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXDrawable(*PFNGLXGETCURRENTREADDRAWABLEPROC) (void)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYCONTEXTPROC) (Display *dpy, GLXContext ctx, int attribute, int *value)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXSELECTEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long event_mask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXGETSELECTEDEVENTPROC) (Display *dpy, GLXDrawable draw, unsigned long *event_mask)"
  },
  {
    "label": "glXGetFBConfigs()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES GLXFBConfig*)",
    "insertText": "glXGetFBConfigs(Display *dpy, int screen, int *nelements)"
  },
  {
    "label": "glXChooseFBConfig()",
    "kind": "Method",
    "detail": "Function (GLXFBConfig*)",
    "insertText": "glXChooseFBConfig(Display *dpy, int screen, const int *attrib_list, int *nelements)"
  },
  {
    "label": "glXGetFBConfigAttrib()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXGetFBConfigAttrib(Display *dpy, GLXFBConfig config, int attribute, int *value)"
  },
  {
    "label": "glXGetVisualFromFBConfig()",
    "kind": "Method",
    "detail": "Function (XVisualInfo*)",
    "insertText": "glXGetVisualFromFBConfig(Display *dpy, GLXFBConfig config)"
  },
  {
    "label": "glXCreateWindow()",
    "kind": "Method",
    "detail": "Function (GLXWindow)",
    "insertText": "glXCreateWindow(Display *dpy, GLXFBConfig config, Window win, const int *attrib_list)"
  },
  {
    "label": "glXDestroyWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXDestroyWindow(Display *dpy, GLXWindow win)"
  },
  {
    "label": "glXCreatePixmap()",
    "kind": "Method",
    "detail": "Function (GLXPixmap)",
    "insertText": "glXCreatePixmap(Display *dpy, GLXFBConfig config, Pixmap pixmap, const int *attrib_list)"
  },
  {
    "label": "glXDestroyPixmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXDestroyPixmap(Display *dpy, GLXPixmap pixmap)"
  },
  {
    "label": "glXCreatePbuffer()",
    "kind": "Method",
    "detail": "Function (GLXPbuffer)",
    "insertText": "glXCreatePbuffer(Display *dpy, GLXFBConfig config, const int *attrib_list)"
  },
  {
    "label": "glXDestroyPbuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXDestroyPbuffer(Display *dpy, GLXPbuffer pbuf)"
  },
  {
    "label": "glXQueryDrawable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXQueryDrawable(Display *dpy, GLXDrawable draw, int attribute, unsigned int *value)"
  },
  {
    "label": "glXCreateNewContext()",
    "kind": "Method",
    "detail": "Function (GLXContext)",
    "insertText": "glXCreateNewContext(Display *dpy, GLXFBConfig config, int render_type, GLXContext share_list, Bool direct)"
  },
  {
    "label": "glXMakeContextCurrent()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXMakeContextCurrent(Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"
  },
  {
    "label": "glXGetCurrentReadDrawable()",
    "kind": "Method",
    "detail": "Function (GLXDrawable)",
    "insertText": "glXGetCurrentReadDrawable(void)"
  },
  {
    "label": "glXQueryContext()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryContext(Display *dpy, GLXContext ctx, int attribute, int *value)"
  },
  {
    "label": "glXSelectEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXSelectEvent(Display *dpy, GLXDrawable draw, unsigned long event_mask)"
  },
  {
    "label": "glXGetSelectedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXGetSelectedEvent(Display *dpy, GLXDrawable draw, unsigned long *event_mask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_VERSION_1_4 # define GLX_VERSION_1_4 1 typedef)",
    "insertText": "void(*__GLXextFuncPtr)(void)"
  },
  {
    "label": "__GLXextFuncPtr()",
    "kind": "Method",
    "detail": "Function (# define GLX_SAMPLE_BUFFERS 1 0 0 0 0 0 # define GLX_SAMPLES 1 0 0 0 0 1 typedef)",
    "insertText": "__GLXextFuncPtr(*PFNGLXGETPROCADDRESSPROC) (const GLubyte *procName)"
  },
  {
    "label": "glXGetProcAddress()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES __GLXextFuncPtr)",
    "insertText": "glXGetProcAddress(const GLubyte *procName)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_ARB_context_flush_control # define GLX_ARB_context_flush_control 1 # define GLX_CONTEXT_RELEASE_BEHAVIOR_ARB 0 x2097 # define GLX_CONTEXT_RELEASE_BEHAVIOR_NONE_ARB 0 # define GLX_CONTEXT_RELEASE_BEHAVIOR_FLUSH_ARB 0 x2098 # endif # ifndef GLX_ARB_create_context # define GLX_ARB_create_context 1 # define GLX_CONTEXT_DEBUG_BIT_ARB 0 x00000001 # define GLX_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0 x00000002 # define GLX_CONTEXT_MAJOR_VERSION_ARB 0 x2091 # define GLX_CONTEXT_MINOR_VERSION_ARB 0 x2092 # define GLX_CONTEXT_FLAGS_ARB 0 x2094 typedef)",
    "insertText": "GLXContext(*PFNGLXCREATECONTEXTATTRIBSARBPROC) (Display *dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list)"
  },
  {
    "label": "glXCreateContextAttribsARB()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES GLXContext)",
    "insertText": "glXCreateContextAttribsARB(Display *dpy, GLXFBConfig config, GLXContext share_context, Bool direct, const int *attrib_list)"
  },
  {
    "label": "__GLXextFuncPtr()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_ARB_create_context_profile # define GLX_ARB_create_context_profile 1 # define GLX_CONTEXT_CORE_PROFILE_BIT_ARB 0 x00000001 # define GLX_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB 0 x00000002 # define GLX_CONTEXT_PROFILE_MASK_ARB 0 x9126 # endif # ifndef GLX_ARB_create_context_robustness # define GLX_ARB_create_context_robustness 1 # define GLX_CONTEXT_ROBUST_ACCESS_BIT_ARB 0 x00000004 # define GLX_LOSE_CONTEXT_ON_RESET_ARB 0 x8252 # define GLX_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB 0 x8256 # define GLX_NO_RESET_NOTIFICATION_ARB 0 x8261 # endif # ifndef GLX_ARB_fbconfig_float # define GLX_ARB_fbconfig_float 1 # define GLX_RGBA_FLOAT_TYPE_ARB 0 x20B9 # define GLX_RGBA_FLOAT_BIT_ARB 0 x00000004 # endif # ifndef GLX_ARB_framebuffer_sRGB # define GLX_ARB_framebuffer_sRGB 1 # define GLX_FRAMEBUFFER_SRGB_CAPABLE_ARB 0 x20B2 # endif # ifndef GLX_ARB_get_proc_address # define GLX_ARB_get_proc_address 1 typedef)",
    "insertText": "__GLXextFuncPtr(*PFNGLXGETPROCADDRESSARBPROC) (const GLubyte *procName)"
  },
  {
    "label": "glXGetProcAddressARB()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES __GLXextFuncPtr)",
    "insertText": "glXGetProcAddressARB(const GLubyte *procName)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_ARB_multisample # define GLX_ARB_multisample 1 # define GLX_SAMPLE_BUFFERS_ARB 1 0 0 0 0 0 # define GLX_SAMPLES_ARB 1 0 0 0 0 1 # endif # ifndef GLX_ARB_robustness_application_isolation # define GLX_ARB_robustness_application_isolation 1 # define GLX_CONTEXT_RESET_ISOLATION_BIT_ARB 0 x00000008 # endif # ifndef GLX_ARB_robustness_share_group_isolation # define GLX_ARB_robustness_share_group_isolation 1 # endif # ifndef GLX_ARB_vertex_buffer_object # define GLX_ARB_vertex_buffer_object 1 # define GLX_CONTEXT_ALLOW_BUFFER_BYTE_ORDER_MISMATCH_ARB 0 x2095 # endif # ifndef GLX_3DFX_multisample # define GLX_3DFX_multisample 1 # define GLX_SAMPLE_BUFFERS_3DFX 0 x8050 # define GLX_SAMPLES_3DFX 0 x8051 # endif # ifndef GLX_AMD_gpu_association # define GLX_AMD_gpu_association 1 # define GLX_GPU_VENDOR_AMD 0 x1F00 # define GLX_GPU_RENDERER_STRING_AMD 0 x1F01 # define GLX_GPU_OPENGL_VERSION_STRING_AMD 0 x1F02 # define GLX_GPU_FASTEST_TARGET_GPUS_AMD 0 x21A2 # define GLX_GPU_RAM_AMD 0 x21A3 # define GLX_GPU_CLOCK_AMD 0 x21A4 # define GLX_GPU_NUM_PIPES_AMD 0 x21A5 # define GLX_GPU_NUM_SIMD_AMD 0 x21A6 # define GLX_GPU_NUM_RB_AMD 0 x21A7 # define GLX_GPU_NUM_SPI_AMD 0 x21A8 typedef unsigned)",
    "insertText": "int(*PFNGLXGETGPUIDSAMDPROC) (unsigned int maxCount, unsigned int *ids)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXGETGPUINFOAMDPROC) (unsigned int id, int property, GLenum dataType, unsigned int size, void *data)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef unsigned)",
    "insertText": "int(*PFNGLXGETCONTEXTGPUIDAMDPROC) (GLXContext ctx)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContext(*PFNGLXCREATEASSOCIATEDCONTEXTAMDPROC) (unsigned int id, GLXContext share_list)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContext(*PFNGLXCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC) (unsigned int id, GLXContext share_context, const int *attribList)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXDELETEASSOCIATEDCONTEXTAMDPROC) (GLXContext ctx)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXMAKEASSOCIATEDCONTEXTCURRENTAMDPROC) (GLXContext ctx)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContext(*PFNGLXGETCURRENTASSOCIATEDCONTEXTAMDPROC) (void)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXBLITCONTEXTFRAMEBUFFERAMDPROC) (GLXContext dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"
  },
  {
    "label": "glXGetGPUIDsAMD()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES unsigned int)",
    "insertText": "glXGetGPUIDsAMD(unsigned int maxCount, unsigned int *ids)"
  },
  {
    "label": "glXGetGPUInfoAMD()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXGetGPUInfoAMD(unsigned int id, int property, GLenum dataType, unsigned int size, void *data)"
  },
  {
    "label": "glXGetContextGPUIDAMD()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "glXGetContextGPUIDAMD(GLXContext ctx)"
  },
  {
    "label": "glXCreateAssociatedContextAMD()",
    "kind": "Method",
    "detail": "Function (GLXContext)",
    "insertText": "glXCreateAssociatedContextAMD(unsigned int id, GLXContext share_list)"
  },
  {
    "label": "glXCreateAssociatedContextAttribsAMD()",
    "kind": "Method",
    "detail": "Function (GLXContext)",
    "insertText": "glXCreateAssociatedContextAttribsAMD(unsigned int id, GLXContext share_context, const int *attribList)"
  },
  {
    "label": "glXDeleteAssociatedContextAMD()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXDeleteAssociatedContextAMD(GLXContext ctx)"
  },
  {
    "label": "glXMakeAssociatedContextCurrentAMD()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXMakeAssociatedContextCurrentAMD(GLXContext ctx)"
  },
  {
    "label": "glXGetCurrentAssociatedContextAMD()",
    "kind": "Method",
    "detail": "Function (GLXContext)",
    "insertText": "glXGetCurrentAssociatedContextAMD(void)"
  },
  {
    "label": "glXBlitContextFramebufferAMD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXBlitContextFramebufferAMD(GLXContext dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)"
  },
  {
    "label": "Display()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_EXT_buffer_age # define GLX_EXT_buffer_age 1 # define GLX_BACK_BUFFER_AGE_EXT 0 x20F4 # endif # ifndef GLX_EXT_create_context_es2_profile # define GLX_EXT_create_context_es2_profile 1 # define GLX_CONTEXT_ES2_PROFILE_BIT_EXT 0 x00000004 # endif # ifndef GLX_EXT_create_context_es_profile # define GLX_EXT_create_context_es_profile 1 # define GLX_CONTEXT_ES_PROFILE_BIT_EXT 0 x00000004 # endif # ifndef GLX_EXT_fbconfig_packed_float # define GLX_EXT_fbconfig_packed_float 1 # define GLX_RGBA_UNSIGNED_FLOAT_TYPE_EXT 0 x20B1 # define GLX_RGBA_UNSIGNED_FLOAT_BIT_EXT 0 x00000008 # endif # ifndef GLX_EXT_framebuffer_sRGB # define GLX_EXT_framebuffer_sRGB 1 # define GLX_FRAMEBUFFER_SRGB_CAPABLE_EXT 0 x20B2 # endif # ifndef GLX_EXT_import_context # define GLX_EXT_import_context 1 # define GLX_SHARE_CONTEXT_EXT 0 x800A # define GLX_VISUAL_ID_EXT 0 x800B # define GLX_SCREEN_EXT 0 x800C typedef)",
    "insertText": "Display(*PFNGLXGETCURRENTDISPLAYEXTPROC) (void)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYCONTEXTINFOEXTPROC) (Display *dpy, GLXContext context, int attribute, int *value)"
  },
  {
    "label": "GLXContextID()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContextID(*PFNGLXGETCONTEXTIDEXTPROC) (const GLXContext context)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContext(*PFNGLXIMPORTCONTEXTEXTPROC) (Display *dpy, GLXContextID contextID)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXFREECONTEXTEXTPROC) (Display *dpy, GLXContext context)"
  },
  {
    "label": "glXGetCurrentDisplayEXT()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Display*)",
    "insertText": "glXGetCurrentDisplayEXT(void)"
  },
  {
    "label": "glXQueryContextInfoEXT()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryContextInfoEXT(Display *dpy, GLXContext context, int attribute, int *value)"
  },
  {
    "label": "glXGetContextIDEXT()",
    "kind": "Method",
    "detail": "Function (GLXContextID)",
    "insertText": "glXGetContextIDEXT(const GLXContext context)"
  },
  {
    "label": "glXImportContextEXT()",
    "kind": "Method",
    "detail": "Function (GLXContext)",
    "insertText": "glXImportContextEXT(Display *dpy, GLXContextID contextID)"
  },
  {
    "label": "glXFreeContextEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXFreeContextEXT(Display *dpy, GLXContext context)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_EXT_libglvnd # define GLX_EXT_libglvnd 1 # define GLX_VENDOR_NAMES_EXT 0 x20F6 # endif # ifndef GLX_EXT_stereo_tree # define GLX_EXT_stereo_tree 1 typedef struct { int type ; unsigned long serial ; Bool send_event ; Display* display ; int extension ; int evtype ; GLXDrawable window ; Bool stereo_tree ; } GLXStereoNotifyEventEXT ; # define GLX_STEREO_TREE_EXT 0 x20F5 # define GLX_STEREO_NOTIFY_MASK_EXT 0 x00000001 # define GLX_STEREO_NOTIFY_EXT 0 x00000000 # endif # ifndef GLX_EXT_swap_control # define GLX_EXT_swap_control 1 # define GLX_SWAP_INTERVAL_EXT 0 x20F1 # define GLX_MAX_SWAP_INTERVAL_EXT 0 x20F2 typedef)",
    "insertText": "void(*PFNGLXSWAPINTERVALEXTPROC) (Display *dpy, GLXDrawable drawable, int interval)"
  },
  {
    "label": "glXSwapIntervalEXT()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXSwapIntervalEXT(Display *dpy, GLXDrawable drawable, int interval)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_EXT_swap_control_tear # define GLX_EXT_swap_control_tear 1 # define GLX_LATE_SWAPS_TEAR_EXT 0 x20F3 # endif # ifndef GLX_EXT_texture_from_pixmap # define GLX_EXT_texture_from_pixmap 1 # define GLX_TEXTURE_1D_BIT_EXT 0 x00000001 # define GLX_TEXTURE_2D_BIT_EXT 0 x00000002 # define GLX_TEXTURE_RECTANGLE_BIT_EXT 0 x00000004 # define GLX_BIND_TO_TEXTURE_RGB_EXT 0 x20D0 # define GLX_BIND_TO_TEXTURE_RGBA_EXT 0 x20D1 # define GLX_BIND_TO_MIPMAP_TEXTURE_EXT 0 x20D2 # define GLX_BIND_TO_TEXTURE_TARGETS_EXT 0 x20D3 # define GLX_Y_INVERTED_EXT 0 x20D4 # define GLX_TEXTURE_FORMAT_EXT 0 x20D5 # define GLX_TEXTURE_TARGET_EXT 0 x20D6 # define GLX_MIPMAP_TEXTURE_EXT 0 x20D7 # define GLX_TEXTURE_FORMAT_NONE_EXT 0 x20D8 # define GLX_TEXTURE_FORMAT_RGB_EXT 0 x20D9 # define GLX_TEXTURE_FORMAT_RGBA_EXT 0 x20DA # define GLX_TEXTURE_1D_EXT 0 x20DB # define GLX_TEXTURE_2D_EXT 0 x20DC # define GLX_TEXTURE_RECTANGLE_EXT 0 x20DD # define GLX_FRONT_LEFT_EXT 0 x20DE # define GLX_FRONT_RIGHT_EXT 0 x20DF # define GLX_BACK_LEFT_EXT 0 x20E0 # define GLX_BACK_RIGHT_EXT 0 x20E1 # define GLX_FRONT_EXT 0 x20DE # define GLX_BACK_EXT 0 x20E0 # define GLX_AUX0_EXT 0 x20E2 # define GLX_AUX1_EXT 0 x20E3 # define GLX_AUX2_EXT 0 x20E4 # define GLX_AUX3_EXT 0 x20E5 # define GLX_AUX4_EXT 0 x20E6 # define GLX_AUX5_EXT 0 x20E7 # define GLX_AUX6_EXT 0 x20E8 # define GLX_AUX7_EXT 0 x20E9 # define GLX_AUX8_EXT 0 x20EA # define GLX_AUX9_EXT 0 x20EB typedef)",
    "insertText": "void(*PFNGLXBINDTEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXRELEASETEXIMAGEEXTPROC) (Display *dpy, GLXDrawable drawable, int buffer)"
  },
  {
    "label": "glXBindTexImageEXT()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXBindTexImageEXT(Display *dpy, GLXDrawable drawable, int buffer, const int *attrib_list)"
  },
  {
    "label": "glXReleaseTexImageEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXReleaseTexImageEXT(Display *dpy, GLXDrawable drawable, int buffer)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_EXT_visual_info # define GLX_EXT_visual_info 1 # define GLX_X_VISUAL_TYPE_EXT 0 x22 # define GLX_TRANSPARENT_TYPE_EXT 0 x23 # define GLX_TRANSPARENT_INDEX_VALUE_EXT 0 x24 # define GLX_TRANSPARENT_RED_VALUE_EXT 0 x25 # define GLX_TRANSPARENT_GREEN_VALUE_EXT 0 x26 # define GLX_TRANSPARENT_BLUE_VALUE_EXT 0 x27 # define GLX_TRANSPARENT_ALPHA_VALUE_EXT 0 x28 # define GLX_NONE_EXT 0 x8000 # define GLX_TRUE_COLOR_EXT 0 x8002 # define GLX_DIRECT_COLOR_EXT 0 x8003 # define GLX_PSEUDO_COLOR_EXT 0 x8004 # define GLX_STATIC_COLOR_EXT 0 x8005 # define GLX_GRAY_SCALE_EXT 0 x8006 # define GLX_STATIC_GRAY_EXT 0 x8007 # define GLX_TRANSPARENT_RGB_EXT 0 x8008 # define GLX_TRANSPARENT_INDEX_EXT 0 x8009 # endif # ifndef GLX_EXT_visual_rating # define GLX_EXT_visual_rating 1 # define GLX_VISUAL_CAVEAT_EXT 0 x20 # define GLX_SLOW_VISUAL_EXT 0 x8001 # define GLX_NON_CONFORMANT_VISUAL_EXT 0 x800D # endif # ifndef GLX_INTEL_swap_event # define GLX_INTEL_swap_event 1 # define GLX_BUFFER_SWAP_COMPLETE_INTEL_MASK 0 x04000000 # define GLX_EXCHANGE_COMPLETE_INTEL 0 x8180 # define GLX_COPY_COMPLETE_INTEL 0 x8181 # define GLX_FLIP_COMPLETE_INTEL 0 x8182 # endif # ifndef GLX_MESA_agp_offset # define GLX_MESA_agp_offset 1 typedef unsigned)",
    "insertText": "int(*PFNGLXGETAGPOFFSETMESAPROC) (const void *pointer)"
  },
  {
    "label": "glXGetAGPOffsetMESA()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES unsigned int)",
    "insertText": "glXGetAGPOffsetMESA(const void *pointer)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_MESA_copy_sub_buffer # define GLX_MESA_copy_sub_buffer 1 typedef)",
    "insertText": "void(*PFNGLXCOPYSUBBUFFERMESAPROC) (Display *dpy, GLXDrawable drawable, int x, int y, int width, int height)"
  },
  {
    "label": "glXCopySubBufferMESA()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXCopySubBufferMESA(Display *dpy, GLXDrawable drawable, int x, int y, int width, int height)"
  },
  {
    "label": "GLXPixmap()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_MESA_pixmap_colormap # define GLX_MESA_pixmap_colormap 1 typedef)",
    "insertText": "GLXPixmap(*PFNGLXCREATEGLXPIXMAPMESAPROC) (Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap)"
  },
  {
    "label": "glXCreateGLXPixmapMESA()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES GLXPixmap)",
    "insertText": "glXCreateGLXPixmapMESA(Display *dpy, XVisualInfo *visual, Pixmap pixmap, Colormap cmap)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_MESA_query_renderer # define GLX_MESA_query_renderer 1 # define GLX_RENDERER_VENDOR_ID_MESA 0 x8183 # define GLX_RENDERER_DEVICE_ID_MESA 0 x8184 # define GLX_RENDERER_VERSION_MESA 0 x8185 # define GLX_RENDERER_ACCELERATED_MESA 0 x8186 # define GLX_RENDERER_VIDEO_MEMORY_MESA 0 x8187 # define GLX_RENDERER_UNIFIED_MEMORY_ARCHITECTURE_MESA 0 x8188 # define GLX_RENDERER_PREFERRED_PROFILE_MESA 0 x8189 # define GLX_RENDERER_OPENGL_CORE_PROFILE_VERSION_MESA 0 x818A # define GLX_RENDERER_OPENGL_COMPATIBILITY_PROFILE_VERSION_MESA 0 x818B # define GLX_RENDERER_OPENGL_ES_PROFILE_VERSION_MESA 0 x818C # define GLX_RENDERER_OPENGL_ES2_PROFILE_VERSION_MESA 0 x818D # define GLX_RENDERER_ID_MESA 0 x818E typedef)",
    "insertText": "Bool(*PFNGLXQUERYCURRENTRENDERERINTEGERMESAPROC) (int attribute, unsigned int *value)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(*PFNGLXQUERYCURRENTRENDERERSTRINGMESAPROC) (int attribute)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXQUERYRENDERERINTEGERMESAPROC) (Display *dpy, int screen, int renderer, int attribute, unsigned int *value)"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "char(*PFNGLXQUERYRENDERERSTRINGMESAPROC) (Display *dpy, int screen, int renderer, int attribute)"
  },
  {
    "label": "glXQueryCurrentRendererIntegerMESA()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXQueryCurrentRendererIntegerMESA(int attribute, unsigned int *value)"
  },
  {
    "label": "glXQueryCurrentRendererStringMESA()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "glXQueryCurrentRendererStringMESA(int attribute)"
  },
  {
    "label": "glXQueryRendererIntegerMESA()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXQueryRendererIntegerMESA(Display *dpy, int screen, int renderer, int attribute, unsigned int *value)"
  },
  {
    "label": "glXQueryRendererStringMESA()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "glXQueryRendererStringMESA(Display *dpy, int screen, int renderer, int attribute)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_MESA_release_buffers # define GLX_MESA_release_buffers 1 typedef)",
    "insertText": "Bool(*PFNGLXRELEASEBUFFERSMESAPROC) (Display *dpy, GLXDrawable drawable)"
  },
  {
    "label": "glXReleaseBuffersMESA()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXReleaseBuffersMESA(Display *dpy, GLXDrawable drawable)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_MESA_set_3dfx_mode # define GLX_MESA_set_3dfx_mode 1 # define GLX_3DFX_WINDOW_MODE_MESA 0 x1 # define GLX_3DFX_FULLSCREEN_MODE_MESA 0 x2 typedef)",
    "insertText": "Bool(*PFNGLXSET3DFXMODEMESAPROC) (int mode)"
  },
  {
    "label": "glXSet3DfxModeMESA()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXSet3DfxModeMESA(int mode)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_copy_buffer # define GLX_NV_copy_buffer 1 typedef)",
    "insertText": "void(*PFNGLXCOPYBUFFERSUBDATANVPROC) (Display *dpy, GLXContext readCtx, GLXContext writeCtx, GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXNAMEDCOPYBUFFERSUBDATANVPROC) (Display *dpy, GLXContext readCtx, GLXContext writeCtx, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"
  },
  {
    "label": "glXCopyBufferSubDataNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXCopyBufferSubDataNV(Display *dpy, GLXContext readCtx, GLXContext writeCtx, GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"
  },
  {
    "label": "glXNamedCopyBufferSubDataNV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXNamedCopyBufferSubDataNV(Display *dpy, GLXContext readCtx, GLXContext writeCtx, GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_copy_image # define GLX_NV_copy_image 1 typedef)",
    "insertText": "void(*PFNGLXCOPYIMAGESUBDATANVPROC) (Display *dpy, GLXContext srcCtx, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLXContext dstCtx, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)"
  },
  {
    "label": "glXCopyImageSubDataNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXCopyImageSubDataNV(Display *dpy, GLXContext srcCtx, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLXContext dstCtx, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_delay_before_swap # define GLX_NV_delay_before_swap 1 typedef)",
    "insertText": "Bool(*PFNGLXDELAYBEFORESWAPNVPROC) (Display *dpy, GLXDrawable drawable, GLfloat seconds)"
  },
  {
    "label": "glXDelayBeforeSwapNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXDelayBeforeSwapNV(Display *dpy, GLXDrawable drawable, GLfloat seconds)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_float_buffer # define GLX_NV_float_buffer 1 # define GLX_FLOAT_COMPONENTS_NV 0 x20B0 # endif # ifndef GLX_NV_multisample_coverage # define GLX_NV_multisample_coverage 1 # define GLX_COVERAGE_SAMPLES_NV 1 0 0 0 0 1 # define GLX_COLOR_SAMPLES_NV 0 x20B3 # endif # ifndef GLX_NV_present_video # define GLX_NV_present_video 1 # define GLX_NUM_VIDEO_SLOTS_NV 0 x20F0 typedef unsigned)",
    "insertText": "int(*PFNGLXENUMERATEVIDEODEVICESNVPROC) (Display *dpy, int screen, int *nelements)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXBINDVIDEODEVICENVPROC) (Display *dpy, unsigned int video_slot, unsigned int video_device, const int *attrib_list)"
  },
  {
    "label": "glXEnumerateVideoDevicesNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES unsigned int*)",
    "insertText": "glXEnumerateVideoDevicesNV(Display *dpy, int screen, int *nelements)"
  },
  {
    "label": "glXBindVideoDeviceNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXBindVideoDeviceNV(Display *dpy, unsigned int video_slot, unsigned int video_device, const int *attrib_list)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_robustness_video_memory_purge # define GLX_NV_robustness_video_memory_purge 1 # define GLX_GENERATE_RESET_ON_VIDEO_MEMORY_PURGE_NV 0 x20F7 # endif # ifndef GLX_NV_swap_group # define GLX_NV_swap_group 1 typedef)",
    "insertText": "Bool(*PFNGLXJOINSWAPGROUPNVPROC) (Display *dpy, GLXDrawable drawable, GLuint group)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXBINDSWAPBARRIERNVPROC) (Display *dpy, GLuint group, GLuint barrier)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXQUERYSWAPGROUPNVPROC) (Display *dpy, GLXDrawable drawable, GLuint *group, GLuint *barrier)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXQUERYMAXSWAPGROUPSNVPROC) (Display *dpy, int screen, GLuint *maxGroups, GLuint *maxBarriers)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXQUERYFRAMECOUNTNVPROC) (Display *dpy, int screen, GLuint *count)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXRESETFRAMECOUNTNVPROC) (Display *dpy, int screen)"
  },
  {
    "label": "glXJoinSwapGroupNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXJoinSwapGroupNV(Display *dpy, GLXDrawable drawable, GLuint group)"
  },
  {
    "label": "glXBindSwapBarrierNV()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXBindSwapBarrierNV(Display *dpy, GLuint group, GLuint barrier)"
  },
  {
    "label": "glXQuerySwapGroupNV()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXQuerySwapGroupNV(Display *dpy, GLXDrawable drawable, GLuint *group, GLuint *barrier)"
  },
  {
    "label": "glXQueryMaxSwapGroupsNV()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXQueryMaxSwapGroupsNV(Display *dpy, int screen, GLuint *maxGroups, GLuint *maxBarriers)"
  },
  {
    "label": "glXQueryFrameCountNV()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXQueryFrameCountNV(Display *dpy, int screen, GLuint *count)"
  },
  {
    "label": "glXResetFrameCountNV()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXResetFrameCountNV(Display *dpy, int screen)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_video_capture # define GLX_NV_video_capture 1 typedef XID GLXVideoCaptureDeviceNV ; # define GLX_DEVICE_ID_NV 0 x20CD # define GLX_UNIQUE_ID_NV 0 x20CE # define GLX_NUM_VIDEO_CAPTURE_SLOTS_NV 0 x20CF typedef)",
    "insertText": "int(*PFNGLXBINDVIDEOCAPTUREDEVICENVPROC) (Display *dpy, unsigned int video_capture_slot, GLXVideoCaptureDeviceNV device)"
  },
  {
    "label": "GLXVideoCaptureDeviceNV()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXVideoCaptureDeviceNV(*PFNGLXENUMERATEVIDEOCAPTUREDEVICESNVPROC) (Display *dpy, int screen, int *nelements)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXLOCKVIDEOCAPTUREDEVICENVPROC) (Display *dpy, GLXVideoCaptureDeviceNV device)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYVIDEOCAPTUREDEVICENVPROC) (Display *dpy, GLXVideoCaptureDeviceNV device, int attribute, int *value)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXRELEASEVIDEOCAPTUREDEVICENVPROC) (Display *dpy, GLXVideoCaptureDeviceNV device)"
  },
  {
    "label": "glXBindVideoCaptureDeviceNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES int)",
    "insertText": "glXBindVideoCaptureDeviceNV(Display *dpy, unsigned int video_capture_slot, GLXVideoCaptureDeviceNV device)"
  },
  {
    "label": "glXEnumerateVideoCaptureDevicesNV()",
    "kind": "Method",
    "detail": "Function (GLXVideoCaptureDeviceNV*)",
    "insertText": "glXEnumerateVideoCaptureDevicesNV(Display *dpy, int screen, int *nelements)"
  },
  {
    "label": "glXLockVideoCaptureDeviceNV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXLockVideoCaptureDeviceNV(Display *dpy, GLXVideoCaptureDeviceNV device)"
  },
  {
    "label": "glXQueryVideoCaptureDeviceNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryVideoCaptureDeviceNV(Display *dpy, GLXVideoCaptureDeviceNV device, int attribute, int *value)"
  },
  {
    "label": "glXReleaseVideoCaptureDeviceNV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXReleaseVideoCaptureDeviceNV(Display *dpy, GLXVideoCaptureDeviceNV device)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_NV_video_out # define GLX_NV_video_out 1 typedef unsigned int GLXVideoDeviceNV ; # define GLX_VIDEO_OUT_COLOR_NV 0 x20C3 # define GLX_VIDEO_OUT_ALPHA_NV 0 x20C4 # define GLX_VIDEO_OUT_DEPTH_NV 0 x20C5 # define GLX_VIDEO_OUT_COLOR_AND_ALPHA_NV 0 x20C6 # define GLX_VIDEO_OUT_COLOR_AND_DEPTH_NV 0 x20C7 # define GLX_VIDEO_OUT_FRAME_NV 0 x20C8 # define GLX_VIDEO_OUT_FIELD_1_NV 0 x20C9 # define GLX_VIDEO_OUT_FIELD_2_NV 0 x20CA # define GLX_VIDEO_OUT_STACKED_FIELDS_1_2_NV 0 x20CB # define GLX_VIDEO_OUT_STACKED_FIELDS_2_1_NV 0 x20CC typedef)",
    "insertText": "int(*PFNGLXGETVIDEODEVICENVPROC) (Display *dpy, int screen, int numVideoDevices, GLXVideoDeviceNV *pVideoDevice)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXRELEASEVIDEODEVICENVPROC) (Display *dpy, int screen, GLXVideoDeviceNV VideoDevice)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXBINDVIDEOIMAGENVPROC) (Display *dpy, GLXVideoDeviceNV VideoDevice, GLXPbuffer pbuf, int iVideoBuffer)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXRELEASEVIDEOIMAGENVPROC) (Display *dpy, GLXPbuffer pbuf)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXSENDPBUFFERTOVIDEONVPROC) (Display *dpy, GLXPbuffer pbuf, int iBufferType, unsigned long *pulCounterPbuffer, GLboolean bBlock)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXGETVIDEOINFONVPROC) (Display *dpy, int screen, GLXVideoDeviceNV VideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo)"
  },
  {
    "label": "glXGetVideoDeviceNV()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES int)",
    "insertText": "glXGetVideoDeviceNV(Display *dpy, int screen, int numVideoDevices, GLXVideoDeviceNV *pVideoDevice)"
  },
  {
    "label": "glXReleaseVideoDeviceNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXReleaseVideoDeviceNV(Display *dpy, int screen, GLXVideoDeviceNV VideoDevice)"
  },
  {
    "label": "glXBindVideoImageNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXBindVideoImageNV(Display *dpy, GLXVideoDeviceNV VideoDevice, GLXPbuffer pbuf, int iVideoBuffer)"
  },
  {
    "label": "glXReleaseVideoImageNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXReleaseVideoImageNV(Display *dpy, GLXPbuffer pbuf)"
  },
  {
    "label": "glXSendPbufferToVideoNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXSendPbufferToVideoNV(Display *dpy, GLXPbuffer pbuf, int iBufferType, unsigned long *pulCounterPbuffer, GLboolean bBlock)"
  },
  {
    "label": "glXGetVideoInfoNV()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXGetVideoInfoNV(Display *dpy, int screen, GLXVideoDeviceNV VideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_OML_swap_method # define GLX_OML_swap_method 1 # define GLX_SWAP_METHOD_OML 0 x8060 # define GLX_SWAP_EXCHANGE_OML 0 x8061 # define GLX_SWAP_COPY_OML 0 x8062 # define GLX_SWAP_UNDEFINED_OML 0 x8063 # endif # ifndef GLX_OML_sync_control # define GLX_OML_sync_control 1 # ifndef GLEXT_64_TYPES_DEFINED # define GLEXT_64_TYPES_DEFINED # if)",
    "insertText": "defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199901L #include <inttypes.h> #elif defined(__sun__) || defined(__digital__) #include <inttypes.h> #if defined(__STDC__) #if defined(__arch64__) || defined(_LP64)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef unsigned long int uint64_t ; # else typedef long long int int64_t ; typedef unsigned long long int uint64_t ; # endif # endif # elif)",
    "insertText": "defined(__VMS ) || defined(__sgi) #include <inttypes.h> #elif defined(__SCO__) || defined(__USLC__) #include <stdint.h> #elif defined(__UNIXOS2__) || defined(__SOL64__)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef long long int int64_t ; typedef unsigned long long int uint64_t ; # elif)",
    "insertText": "defined(_WIN32) && defined(__GNUC__) #include <stdint.h> #elif defined(_WIN32)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef __int64 int64_t ; typedef unsigned __int64 uint64_t ; # else # include<inttypes . h> # endif # endif typedef)",
    "insertText": "Bool(*PFNGLXGETSYNCVALUESOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXGETMSCRATEOMLPROC) (Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator)"
  },
  {
    "label": "int64_t()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int64_t(*PFNGLXSWAPBUFFERSMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXWAITFORMSCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXWAITFORSBCOMLPROC) (Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc)"
  },
  {
    "label": "glXGetSyncValuesOML()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXGetSyncValuesOML(Display *dpy, GLXDrawable drawable, int64_t *ust, int64_t *msc, int64_t *sbc)"
  },
  {
    "label": "glXGetMscRateOML()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXGetMscRateOML(Display *dpy, GLXDrawable drawable, int32_t *numerator, int32_t *denominator)"
  },
  {
    "label": "glXSwapBuffersMscOML()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "glXSwapBuffersMscOML(Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder)"
  },
  {
    "label": "glXWaitForMscOML()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXWaitForMscOML(Display *dpy, GLXDrawable drawable, int64_t target_msc, int64_t divisor, int64_t remainder, int64_t *ust, int64_t *msc, int64_t *sbc)"
  },
  {
    "label": "glXWaitForSbcOML()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXWaitForSbcOML(Display *dpy, GLXDrawable drawable, int64_t target_sbc, int64_t *ust, int64_t *msc, int64_t *sbc)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIS_blended_overlay # define GLX_SGIS_blended_overlay 1 # define GLX_BLENDED_RGBA_SGIS 0 x8025 # endif # ifndef GLX_SGIS_multisample # define GLX_SGIS_multisample 1 # define GLX_SAMPLE_BUFFERS_SGIS 1 0 0 0 0 0 # define GLX_SAMPLES_SGIS 1 0 0 0 0 1 # endif # ifndef GLX_SGIS_shared_multisample # define GLX_SGIS_shared_multisample 1 # define GLX_MULTISAMPLE_SUB_RECT_WIDTH_SGIS 0 x8026 # define GLX_MULTISAMPLE_SUB_RECT_HEIGHT_SGIS 0 x8027 # endif # ifndef GLX_SGIX_dmbuffer # define GLX_SGIX_dmbuffer 1 typedef XID GLXPbufferSGIX ; # ifdef _DM_BUFFER_H_ # define GLX_DIGITAL_MEDIA_PBUFFER_SGIX 0 x8024 typedef)",
    "insertText": "Bool(*PFNGLXASSOCIATEDMPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuffer, DMparams *params, DMbuffer dmbuffer)"
  },
  {
    "label": "glXAssociateDMPbufferSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXAssociateDMPbufferSGIX(Display *dpy, GLXPbufferSGIX pbuffer, DMparams *params, DMbuffer dmbuffer)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # endif # ifndef GLX_SGIX_fbconfig # define GLX_SGIX_fbconfig 1 typedef struct __GLXFBConfigRec* GLXFBConfigSGIX ; # define GLX_WINDOW_BIT_SGIX 0 x00000001 # define GLX_PIXMAP_BIT_SGIX 0 x00000002 # define GLX_RGBA_BIT_SGIX 0 x00000001 # define GLX_COLOR_INDEX_BIT_SGIX 0 x00000002 # define GLX_DRAWABLE_TYPE_SGIX 0 x8010 # define GLX_RENDER_TYPE_SGIX 0 x8011 # define GLX_X_RENDERABLE_SGIX 0 x8012 # define GLX_FBCONFIG_ID_SGIX 0 x8013 # define GLX_RGBA_TYPE_SGIX 0 x8014 # define GLX_COLOR_INDEX_TYPE_SGIX 0 x8015 typedef)",
    "insertText": "int(*PFNGLXGETFBCONFIGATTRIBSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int attribute, int *value)"
  },
  {
    "label": "GLXFBConfigSGIX()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXFBConfigSGIX(*PFNGLXCHOOSEFBCONFIGSGIXPROC) (Display *dpy, int screen, int *attrib_list, int *nelements)"
  },
  {
    "label": "GLXPixmap()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXPixmap(*PFNGLXCREATEGLXPIXMAPWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, Pixmap pixmap)"
  },
  {
    "label": "GLXContext()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXContext(*PFNGLXCREATECONTEXTWITHCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct)"
  },
  {
    "label": "XVisualInfo()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "XVisualInfo(*PFNGLXGETVISUALFROMFBCONFIGSGIXPROC) (Display *dpy, GLXFBConfigSGIX config)"
  },
  {
    "label": "GLXFBConfigSGIX()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXFBConfigSGIX(*PFNGLXGETFBCONFIGFROMVISUALSGIXPROC) (Display *dpy, XVisualInfo *vis)"
  },
  {
    "label": "glXGetFBConfigAttribSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES int)",
    "insertText": "glXGetFBConfigAttribSGIX(Display *dpy, GLXFBConfigSGIX config, int attribute, int *value)"
  },
  {
    "label": "glXChooseFBConfigSGIX()",
    "kind": "Method",
    "detail": "Function (GLXFBConfigSGIX*)",
    "insertText": "glXChooseFBConfigSGIX(Display *dpy, int screen, int *attrib_list, int *nelements)"
  },
  {
    "label": "glXCreateGLXPixmapWithConfigSGIX()",
    "kind": "Method",
    "detail": "Function (GLXPixmap)",
    "insertText": "glXCreateGLXPixmapWithConfigSGIX(Display *dpy, GLXFBConfigSGIX config, Pixmap pixmap)"
  },
  {
    "label": "glXCreateContextWithConfigSGIX()",
    "kind": "Method",
    "detail": "Function (GLXContext)",
    "insertText": "glXCreateContextWithConfigSGIX(Display *dpy, GLXFBConfigSGIX config, int render_type, GLXContext share_list, Bool direct)"
  },
  {
    "label": "glXGetVisualFromFBConfigSGIX()",
    "kind": "Method",
    "detail": "Function (XVisualInfo*)",
    "insertText": "glXGetVisualFromFBConfigSGIX(Display *dpy, GLXFBConfigSGIX config)"
  },
  {
    "label": "glXGetFBConfigFromVisualSGIX()",
    "kind": "Method",
    "detail": "Function (GLXFBConfigSGIX)",
    "insertText": "glXGetFBConfigFromVisualSGIX(Display *dpy, XVisualInfo *vis)"
  },
  {
    "label": "GLXHyperpipeNetworkSGIX()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIX_hyperpipe # define GLX_SGIX_hyperpipe 1 typedef struct { char pipeName [ 8 0 ] ; int networkId ; } GLXHyperpipeNetworkSGIX ; typedef struct { char pipeName [ 8 0 ] ; int channel ; unsigned int participationType ; int timeSlice ; } GLXHyperpipeConfigSGIX ; typedef struct { char pipeName [ 8 0 ] ; int srcXOrigin,srcYOrigin,srcWidth,srcHeight ; int destXOrigin,destYOrigin,destWidth,destHeight ; } GLXPipeRect ; typedef struct { char pipeName [ 8 0 ] ; int XOrigin,YOrigin,maxHeight,maxWidth ; } GLXPipeRectLimits ; # define GLX_HYPERPIPE_PIPE_NAME_LENGTH_SGIX 8 0 # define GLX_BAD_HYPERPIPE_CONFIG_SGIX 9 1 # define GLX_BAD_HYPERPIPE_SGIX 9 2 # define GLX_HYPERPIPE_DISPLAY_PIPE_SGIX 0 x00000001 # define GLX_HYPERPIPE_RENDER_PIPE_SGIX 0 x00000002 # define GLX_PIPE_RECT_SGIX 0 x00000001 # define GLX_PIPE_RECT_LIMITS_SGIX 0 x00000002 # define GLX_HYPERPIPE_STEREO_SGIX 0 x00000003 # define GLX_HYPERPIPE_PIXEL_AVERAGE_SGIX 0 x00000004 # define GLX_HYPERPIPE_ID_SGIX 0 x8030 typedef)",
    "insertText": "GLXHyperpipeNetworkSGIX(*PFNGLXQUERYHYPERPIPENETWORKSGIXPROC) (Display *dpy, int *npipes)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXHYPERPIPECONFIGSGIXPROC) (Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId)"
  },
  {
    "label": "GLXHyperpipeConfigSGIX()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXHyperpipeConfigSGIX(*PFNGLXQUERYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId, int *npipes)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXDESTROYHYPERPIPECONFIGSGIXPROC) (Display *dpy, int hpId)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXBINDHYPERPIPESGIXPROC) (Display *dpy, int hpId)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYHYPERPIPEBESTATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *attribList)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYHYPERPIPEATTRIBSGIXPROC) (Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList)"
  },
  {
    "label": "glXQueryHyperpipeNetworkSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES GLXHyperpipeNetworkSGIX*)",
    "insertText": "glXQueryHyperpipeNetworkSGIX(Display *dpy, int *npipes)"
  },
  {
    "label": "glXHyperpipeConfigSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXHyperpipeConfigSGIX(Display *dpy, int networkId, int npipes, GLXHyperpipeConfigSGIX *cfg, int *hpId)"
  },
  {
    "label": "glXQueryHyperpipeConfigSGIX()",
    "kind": "Method",
    "detail": "Function (GLXHyperpipeConfigSGIX*)",
    "insertText": "glXQueryHyperpipeConfigSGIX(Display *dpy, int hpId, int *npipes)"
  },
  {
    "label": "glXDestroyHyperpipeConfigSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXDestroyHyperpipeConfigSGIX(Display *dpy, int hpId)"
  },
  {
    "label": "glXBindHyperpipeSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXBindHyperpipeSGIX(Display *dpy, int hpId)"
  },
  {
    "label": "glXQueryHyperpipeBestAttribSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryHyperpipeBestAttribSGIX(Display *dpy, int timeSlice, int attrib, int size, void *attribList, void *returnAttribList)"
  },
  {
    "label": "glXHyperpipeAttribSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXHyperpipeAttribSGIX(Display *dpy, int timeSlice, int attrib, int size, void *attribList)"
  },
  {
    "label": "glXQueryHyperpipeAttribSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryHyperpipeAttribSGIX(Display *dpy, int timeSlice, int attrib, int size, void *returnAttribList)"
  },
  {
    "label": "GLXPbufferSGIX()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIX_pbuffer # define GLX_SGIX_pbuffer 1 # define GLX_PBUFFER_BIT_SGIX 0 x00000004 # define GLX_BUFFER_CLOBBER_MASK_SGIX 0 x08000000 # define GLX_FRONT_LEFT_BUFFER_BIT_SGIX 0 x00000001 # define GLX_FRONT_RIGHT_BUFFER_BIT_SGIX 0 x00000002 # define GLX_BACK_LEFT_BUFFER_BIT_SGIX 0 x00000004 # define GLX_BACK_RIGHT_BUFFER_BIT_SGIX 0 x00000008 # define GLX_AUX_BUFFERS_BIT_SGIX 0 x00000010 # define GLX_DEPTH_BUFFER_BIT_SGIX 0 x00000020 # define GLX_STENCIL_BUFFER_BIT_SGIX 0 x00000040 # define GLX_ACCUM_BUFFER_BIT_SGIX 0 x00000080 # define GLX_SAMPLE_BUFFERS_BIT_SGIX 0 x00000100 # define GLX_MAX_PBUFFER_WIDTH_SGIX 0 x8016 # define GLX_MAX_PBUFFER_HEIGHT_SGIX 0 x8017 # define GLX_MAX_PBUFFER_PIXELS_SGIX 0 x8018 # define GLX_OPTIMAL_PBUFFER_WIDTH_SGIX 0 x8019 # define GLX_OPTIMAL_PBUFFER_HEIGHT_SGIX 0 x801A # define GLX_PRESERVED_CONTENTS_SGIX 0 x801B # define GLX_LARGEST_PBUFFER_SGIX 0 x801C # define GLX_WIDTH_SGIX 0 x801D # define GLX_HEIGHT_SGIX 0 x801E # define GLX_EVENT_MASK_SGIX 0 x801F # define GLX_DAMAGED_SGIX 0 x8020 # define GLX_SAVED_SGIX 0 x8021 # define GLX_WINDOW_SGIX 0 x8022 # define GLX_PBUFFER_SGIX 0 x8023 typedef)",
    "insertText": "GLXPbufferSGIX(*PFNGLXCREATEGLXPBUFFERSGIXPROC) (Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXDESTROYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYGLXPBUFFERSGIXPROC) (Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXSELECTEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long mask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXGETSELECTEDEVENTSGIXPROC) (Display *dpy, GLXDrawable drawable, unsigned long *mask)"
  },
  {
    "label": "glXCreateGLXPbufferSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES GLXPbufferSGIX)",
    "insertText": "glXCreateGLXPbufferSGIX(Display *dpy, GLXFBConfigSGIX config, unsigned int width, unsigned int height, int *attrib_list)"
  },
  {
    "label": "glXDestroyGLXPbufferSGIX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXDestroyGLXPbufferSGIX(Display *dpy, GLXPbufferSGIX pbuf)"
  },
  {
    "label": "glXQueryGLXPbufferSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryGLXPbufferSGIX(Display *dpy, GLXPbufferSGIX pbuf, int attribute, unsigned int *value)"
  },
  {
    "label": "glXSelectEventSGIX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXSelectEventSGIX(Display *dpy, GLXDrawable drawable, unsigned long mask)"
  },
  {
    "label": "glXGetSelectedEventSGIX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXGetSelectedEventSGIX(Display *dpy, GLXDrawable drawable, unsigned long *mask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIX_swap_barrier # define GLX_SGIX_swap_barrier 1 typedef)",
    "insertText": "void(*PFNGLXBINDSWAPBARRIERSGIXPROC) (Display *dpy, GLXDrawable drawable, int barrier)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "Bool(*PFNGLXQUERYMAXSWAPBARRIERSSGIXPROC) (Display *dpy, int screen, int *max)"
  },
  {
    "label": "glXBindSwapBarrierSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXBindSwapBarrierSGIX(Display *dpy, GLXDrawable drawable, int barrier)"
  },
  {
    "label": "glXQueryMaxSwapBarriersSGIX()",
    "kind": "Method",
    "detail": "Function (Bool)",
    "insertText": "glXQueryMaxSwapBarriersSGIX(Display *dpy, int screen, int *max)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIX_swap_group # define GLX_SGIX_swap_group 1 typedef)",
    "insertText": "void(*PFNGLXJOINSWAPGROUPSGIXPROC) (Display *dpy, GLXDrawable drawable, GLXDrawable member)"
  },
  {
    "label": "glXJoinSwapGroupSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXJoinSwapGroupSGIX(Display *dpy, GLXDrawable drawable, GLXDrawable member)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIX_video_resize # define GLX_SGIX_video_resize 1 # define GLX_SYNC_FRAME_SGIX 0 x00000000 # define GLX_SYNC_SWAP_SGIX 0 x00000001 typedef)",
    "insertText": "int(*PFNGLXBINDCHANNELTOWINDOWSGIXPROC) (Display *display, int screen, int channel, Window window)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int x, int y, int w, int h)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYCHANNELRECTSGIXPROC) (Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXQUERYCHANNELDELTASSGIXPROC) (Display *display, int screen, int channel, int *x, int *y, int *w, int *h)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXCHANNELRECTSYNCSGIXPROC) (Display *display, int screen, int channel, GLenum synctype)"
  },
  {
    "label": "glXBindChannelToWindowSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES int)",
    "insertText": "glXBindChannelToWindowSGIX(Display *display, int screen, int channel, Window window)"
  },
  {
    "label": "glXChannelRectSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXChannelRectSGIX(Display *display, int screen, int channel, int x, int y, int w, int h)"
  },
  {
    "label": "glXQueryChannelRectSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryChannelRectSGIX(Display *display, int screen, int channel, int *dx, int *dy, int *dw, int *dh)"
  },
  {
    "label": "glXQueryChannelDeltasSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXQueryChannelDeltasSGIX(Display *display, int screen, int channel, int *x, int *y, int *w, int *h)"
  },
  {
    "label": "glXChannelRectSyncSGIX()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXChannelRectSyncSGIX(Display *display, int screen, int channel, GLenum synctype)"
  },
  {
    "label": "GLXVideoSourceSGIX()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGIX_video_source # define GLX_SGIX_video_source 1 typedef XID GLXVideoSourceSGIX ; # ifdef _VL_H typedef)",
    "insertText": "GLXVideoSourceSGIX(*PFNGLXCREATEGLXVIDEOSOURCESGIXPROC) (Display *display, int screen, VLServer server, VLPath path, int nodeClass, VLNode drainNode)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*PFNGLXDESTROYGLXVIDEOSOURCESGIXPROC) (Display *dpy, GLXVideoSourceSGIX glxvideosource)"
  },
  {
    "label": "glXCreateGLXVideoSourceSGIX()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES GLXVideoSourceSGIX)",
    "insertText": "glXCreateGLXVideoSourceSGIX(Display *display, int screen, VLServer server, VLPath path, int nodeClass, VLNode drainNode)"
  },
  {
    "label": "glXDestroyGLXVideoSourceSGIX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glXDestroyGLXVideoSourceSGIX(Display *dpy, GLXVideoSourceSGIX glxvideosource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif # endif # endif # ifndef GLX_SGIX_visual_select_group # define GLX_SGIX_visual_select_group 1 # define GLX_VISUAL_SELECT_GROUP_SGIX 0 x8028 # endif # ifndef GLX_SGI_cushion # define GLX_SGI_cushion 1 typedef)",
    "insertText": "void(*PFNGLXCUSHIONSGIPROC) (Display *dpy, Window window, float cushion)"
  },
  {
    "label": "glXCushionSGI()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES void)",
    "insertText": "glXCushionSGI(Display *dpy, Window window, float cushion)"
  },
  {
    "label": "Bool()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGI_make_current_read # define GLX_SGI_make_current_read 1 typedef)",
    "insertText": "Bool(*PFNGLXMAKECURRENTREADSGIPROC) (Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"
  },
  {
    "label": "GLXDrawable()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLXDrawable(*PFNGLXGETCURRENTREADDRAWABLESGIPROC) (void)"
  },
  {
    "label": "glXMakeCurrentReadSGI()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Bool)",
    "insertText": "glXMakeCurrentReadSGI(Display *dpy, GLXDrawable draw, GLXDrawable read, GLXContext ctx)"
  },
  {
    "label": "glXGetCurrentReadDrawableSGI()",
    "kind": "Method",
    "detail": "Function (GLXDrawable)",
    "insertText": "glXGetCurrentReadDrawableSGI(void)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGI_swap_control # define GLX_SGI_swap_control 1 typedef)",
    "insertText": "int(*PFNGLXSWAPINTERVALSGIPROC) (int interval)"
  },
  {
    "label": "glXSwapIntervalSGI()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES int)",
    "insertText": "glXSwapIntervalSGI(int interval)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SGI_video_sync # define GLX_SGI_video_sync 1 typedef)",
    "insertText": "int(*PFNGLXGETVIDEOSYNCSGIPROC) (unsigned int *count)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*PFNGLXWAITVIDEOSYNCSGIPROC) (int divisor, int remainder, unsigned int *count)"
  },
  {
    "label": "glXGetVideoSyncSGI()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES int)",
    "insertText": "glXGetVideoSyncSGI(unsigned int *count)"
  },
  {
    "label": "glXWaitVideoSyncSGI()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glXWaitVideoSyncSGI(int divisor, int remainder, unsigned int *count)"
  },
  {
    "label": "Status()",
    "kind": "Method",
    "detail": "Function (# endif # endif # ifndef GLX_SUN_get_transparent_index # define GLX_SUN_get_transparent_index 1 typedef)",
    "insertText": "Status(*PFNGLXGETTRANSPARENTINDEXSUNPROC) (Display *dpy, Window overlay, Window underlay, long *pTransparentIndex)"
  },
  {
    "label": "glXGetTransparentIndexSUN()",
    "kind": "Method",
    "detail": "Function (# ifdef GLX_GLXEXT_PROTOTYPES Status)",
    "insertText": "glXGetTransparentIndexSUN(Display *dpy, Window overlay, Window underlay, long *pTransparentIndex)"
  }
]