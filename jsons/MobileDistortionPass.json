[
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FMobileDistortionAccumulateInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobileDistortionAccumulateInputs"
  },
  {
    "label": "FMobileDistortionAccumulateOutputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobileDistortionAccumulateOutputs"
  },
  {
    "label": "FMobileDistortionMergeInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMobileDistortionMergeInputs"
  },
  {
    "label": "AddMobileDistortionAccumulatePass()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ScreenPass . h \" class FScene ; struct FMobileDistortionAccumulateInputs { FScreenPassTexture SceneColor ; } ; struct FMobileDistortionAccumulateOutputs { FScreenPassTexture DistortionAccumulate ; } ; FMobileDistortionAccumulateOutputs)",
    "insertText": "AddMobileDistortionAccumulatePass(FRDGBuilder& GraphBuilder, FScene* Scene, const FViewInfo& View, const FMobileDistortionAccumulateInputs& Inputs)"
  },
  {
    "label": "AddMobileDistortionMergePass()",
    "kind": "Method",
    "detail": "Function (struct FMobileDistortionMergeInputs { FScreenPassTexture SceneColor ; FScreenPassTexture DistortionAccumulate ; } ; FScreenPassTexture)",
    "insertText": "AddMobileDistortionMergePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FMobileDistortionMergeInputs& Inputs)"
  },
  {
    "label": "IsMobileDistortionActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMobileDistortionActive(const FViewInfo& View)"
  }
]