[
  {
    "label": "FUniversalObjectLocatorCustomization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniversalObjectLocatorCustomization"
  },
  {
    "label": "FFragmentItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFragmentItem"
  },
  {
    "label": "FUniversalObjectLocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniversalObjectLocator"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UniversalObjectLocatorFwd . h \" # include \" UniversalObjectLocatorFragment . h \" # include \" UniversalObjectLocatorResolveParams . h \" # include \" UniversalObjectLocatorFragmentType . h \" # include \" UniversalObjectLocator . generated . h \" namespace UE::UniversalObjectLocator { struct FUniversalObjectLocatorCustomization ; struct FFragmentItem ; })",
    "insertText": "USTRUCT(BlueprintType, Category=GameFramework, meta=(HasNativeMake=\"/Script/Engine.UniversalObjectLocatorScriptingExtensions.MakeUniversalObjectLocator\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "FUniversalObjectLocator()",
    "kind": "Method",
    "detail": "Function (using FResolveResult = UE::UniversalObjectLocator::FResolveResult ; using FResolveResultData = UE::UniversalObjectLocator::FResolveResultData ; using FParseStringParams = UE::UniversalObjectLocator::FParseStringParams ; using FParseStringResult = UE::UniversalObjectLocator::FParseStringResult ;)",
    "insertText": "FUniversalObjectLocator()"
  },
  {
    "label": "FUniversalObjectLocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FUniversalObjectLocator(UObject* Object, UObject* Context = nullptr, UObject* StopAtContext = nullptr)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Resolve()",
    "kind": "Method",
    "detail": "Function (} FResolveResult)",
    "insertText": "Resolve(const FResolveParams& Params)"
  },
  {
    "label": "AsyncFind()",
    "kind": "Method",
    "detail": "Function (FResolveResult)",
    "insertText": "AsyncFind(UObject* Context = nullptr)"
  },
  {
    "label": "AsyncLoad()",
    "kind": "Method",
    "detail": "Function (FResolveResult)",
    "insertText": "AsyncLoad(UObject* Context = nullptr)"
  },
  {
    "label": "AsyncUnload()",
    "kind": "Method",
    "detail": "Function (FResolveResult)",
    "insertText": "AsyncUnload(UObject* Context = nullptr)"
  },
  {
    "label": "SyncFind()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "SyncFind(UObject* Context = nullptr)"
  },
  {
    "label": "SyncLoad()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "SyncLoad(UObject* Context = nullptr)"
  },
  {
    "label": "SyncUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncUnload(UObject* Context = nullptr)"
  },
  {
    "label": "GetLastFragmentType()",
    "kind": "Method",
    "detail": "Function (const UE::UniversalObjectLocator::FFragmentType*)",
    "insertText": "GetLastFragmentType()"
  },
  {
    "label": "GetLastFragmentTypeHandle()",
    "kind": "Method",
    "detail": "Function (UE::UniversalObjectLocator::FFragmentTypeHandle)",
    "insertText": "GetLastFragmentTypeHandle()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToString(FStringBuilderBase& OutString)"
  },
  {
    "label": "TryParseString()",
    "kind": "Method",
    "detail": "Function (FParseStringResult)",
    "insertText": "TryParseString(FStringView InString, const FParseStringParams& InParams)"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (FUniversalObjectLocator)",
    "insertText": "FromString(FStringView InString, const FParseStringParams& InParams)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Reset()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(UObject* Object, UObject* Context = nullptr, UObject* StopAtContext = nullptr)"
  },
  {
    "label": "AddFragment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFragment(FUniversalObjectLocatorFragment&& InFragment)"
  },
  {
    "label": "AddFragment()",
    "kind": "Method",
    "detail": "Function (template<FragmentType,. . . ArgTypes> void)",
    "insertText": "AddFragment(ArgTypes&&... FragmentArgs)"
  },
  {
    "label": "GetLastFragment()",
    "kind": "Method",
    "detail": "Function (FUniversalObjectLocatorFragment*)",
    "insertText": "GetLastFragment()"
  },
  {
    "label": "ForEachFragment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ForEachFragment(TFunctionRef<bool(int32, int32, const FUniversalObjectLocatorFragment&)> InFunction)"
  },
  {
    "label": "GetDefaultFlags()",
    "kind": "Method",
    "detail": "Function (UE::UniversalObjectLocator::EFragmentTypeFlags)",
    "insertText": "GetDefaultFlags()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FUniversalObjectLocator& A, const FUniversalObjectLocator& B)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FUniversalObjectLocator& Locator)"
  },
  {
    "label": "ExportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportTextItem(FString& ValueStr, const FUniversalObjectLocator& DefaultValue, UObject* Parent, int32 PortFlags, UObject* ExportRootScope)"
  },
  {
    "label": "ImportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTextItem(const TCHAR*& Buffer, int32 PortFlags, UObject* Parent, FOutputDevice* ErrorText, FArchive* InSerializingArchive = nullptr)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromMismatchedTag(const FPropertyTag& Tag, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "AddFragment()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "AddFragment(const UObject* Object, UObject* Context, UObject* StopAtContext)"
  },
  {
    "label": "ResolveSyncImpl()",
    "kind": "Method",
    "detail": "Function (FResolveResult)",
    "insertText": "ResolveSyncImpl(const FResolveParams& Params)"
  },
  {
    "label": "ResolveAsyncImpl()",
    "kind": "Method",
    "detail": "Function (FResolveResult)",
    "insertText": "ResolveAsyncImpl(const FResolveParams& Params)"
  },
  {
    "label": "NewFragment()",
    "kind": "Method",
    "detail": "Function (TUniversalObjectLocatorFragment<FragmentType>)",
    "insertText": "NewFragment(Forward<ArgTypes>(FragmentArgs)...)"
  },
  {
    "label": "AddFragment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFragment(MoveTemp(NewFragment))"
  }
]