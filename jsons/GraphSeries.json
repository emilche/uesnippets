[
  {
    "label": "FTimingTrackViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimingTrackViewport"
  },
  {
    "label": "FGraphSeriesEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphSeriesEvent"
  },
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "FGraphTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphTrack"
  },
  {
    "label": "FGraphTrackBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphTrackBuilder"
  },
  {
    "label": "FBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBox"
  },
  {
    "label": "baseline()",
    "kind": "Method",
    "detail": "Function (the)",
    "insertText": "baseline(with Value == 0)"
  },
  {
    "label": "position()",
    "kind": "Method",
    "detail": "Function (Y)",
    "insertText": "position(in viewport local space)"
  },
  {
    "label": "baseline()",
    "kind": "Method",
    "detail": "Function (the)",
    "insertText": "baseline(with Value == 0)"
  },
  {
    "label": "FGraphSeries()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FGraphSeries()"
  },
  {
    "label": "baseline()",
    "kind": "Method",
    "detail": "Function (the)",
    "insertText": "baseline(with Value == 0)"
  },
  {
    "label": "position()",
    "kind": "Method",
    "detail": "Function (Y)",
    "insertText": "position(in viewport local space)"
  },
  {
    "label": "UpdateAutoZoom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAutoZoom(const float InTopY, const float InBottomY, const double InMinEventValue, const double InMaxEventValue, const bool bIsAutoZoomAnimated = true)"
  },
  {
    "label": "UpdateAutoZoomEx()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAutoZoomEx(const float InTopY, const float InBottomY, const double InMinEventValue, const double InMaxEventValue, const bool bIsAutoZoomAnimated)"
  }
]