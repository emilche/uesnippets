[
  {
    "label": "variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "variant_size",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "variant_size"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "variant_alternative",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "variant_alternative"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "VariantAlternativeSfinae",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAlternativeSfinae"
  },
  {
    "label": "T0",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T0"
  },
  {
    "label": "VariantAlternativeSfinae",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAlternativeSfinae"
  },
  {
    "label": "T0",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T0"
  },
  {
    "label": "VariantAlternativeSfinae",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAlternativeSfinae"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "GiveQualsTo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GiveQualsTo"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IndexOfConstructedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfConstructedType"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "VariantAccessResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAccessResultImpl"
  },
  {
    "label": "Variantemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variantemplate"
  },
  {
    "label": "VariantAccessResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAccessResultImpl"
  },
  {
    "label": "Variantemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variantemplate"
  },
  {
    "label": "VariantAccessResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAccessResultImpl"
  },
  {
    "label": "Variantemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variantemplate"
  },
  {
    "label": "VariantAccessResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAccessResultImpl"
  },
  {
    "label": "Variantemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variantemplate"
  },
  {
    "label": "VariantAccessResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantAccessResultImpl"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "SimpleArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SimpleArray"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "AccessedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AccessedType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "AccessedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AccessedType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "VisitIndicesResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndicesResultImpl"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "FunctionObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionObject"
  },
  {
    "label": "EndIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EndIndices"
  },
  {
    "label": "BoundIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BoundIndices"
  },
  {
    "label": "MakeVisitationMatrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeVisitationMatrix"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "FunctionObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionObject"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "FunctionObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionObject"
  },
  {
    "label": "MakeVisitationMatrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeVisitationMatrix"
  },
  {
    "label": "AppendToIndexSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AppendToIndexSequence"
  },
  {
    "label": "AppendToIndexSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AppendToIndexSequence"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "FunctionObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionObject"
  },
  {
    "label": "EndIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EndIndices"
  },
  {
    "label": "CurrIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CurrIndices"
  },
  {
    "label": "BoundIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BoundIndices"
  },
  {
    "label": "MakeVisitationMatrixImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeVisitationMatrixImpl"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "FunctionObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionObject"
  },
  {
    "label": "EndIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EndIndices"
  },
  {
    "label": "BoundIndices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BoundIndices"
  },
  {
    "label": "MakeVisitationMatrixImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeVisitationMatrixImpl"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "FunctionObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FunctionObject"
  },
  {
    "label": "MakeVisitationMatrix",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MakeVisitationMatrix"
  },
  {
    "label": "UnreachableSwitchCase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnreachableSwitchCase"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "ReachableSwitchCase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReachableSwitchCase"
  },
  {
    "label": "PickCaseImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PickCaseImpl"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "PickCaseImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PickCaseImpl"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "ReturnType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnType"
  },
  {
    "label": "NumCasesOfSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NumCasesOfSwitch"
  },
  {
    "label": "NumCasesOfSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NumCasesOfSwitch"
  },
  {
    "label": "NumCasesOfSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NumCasesOfSwitch"
  },
  {
    "label": "VisitIndicesSwitch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndicesSwitch"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "VisitIndicesFallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndicesFallback"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "FlattenIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FlattenIndices"
  },
  {
    "label": "FlattenIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FlattenIndices"
  },
  {
    "label": "FlattenIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FlattenIndices"
  },
  {
    "label": "UnflattenIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnflattenIndex"
  },
  {
    "label": "UnflattenIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnflattenIndex"
  },
  {
    "label": "IndexSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IndexSequence"
  },
  {
    "label": "VisitIndicesVariadicImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndicesVariadicImpl"
  },
  {
    "label": "VisitIndicesVariadicImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndicesVariadicImpl"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "FlattenedOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FlattenedOp"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "VisitIndicesVariadic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndicesVariadic"
  },
  {
    "label": "VisitIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndices"
  },
  {
    "label": "VisitIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitIndices"
  },
  {
    "label": "Self",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Self"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "VariantCoreAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantCoreAccess"
  },
  {
    "label": "VariantType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantType"
  },
  {
    "label": "VariantType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantType"
  },
  {
    "label": "VariantType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantType"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "VType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VType"
  },
  {
    "label": "MoveAssignVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MoveAssignVisitor"
  },
  {
    "label": "VType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VType"
  },
  {
    "label": "VType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VType"
  },
  {
    "label": "CopyAssignVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CopyAssignVisitor"
  },
  {
    "label": "VType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VType"
  },
  {
    "label": "Left",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Left"
  },
  {
    "label": "QualifiedNew",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QualifiedNew"
  },
  {
    "label": "ConversionAssignVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConversionAssignVisitor"
  },
  {
    "label": "Left",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Left"
  },
  {
    "label": "QualifiedNew",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QualifiedNew"
  },
  {
    "label": "Self",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Self"
  },
  {
    "label": "LeftVariant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LeftVariant"
  },
  {
    "label": "QualifiedRightVariant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QualifiedRightVariant"
  },
  {
    "label": "InitFromVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitFromVisitor"
  },
  {
    "label": "Expected",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expected"
  },
  {
    "label": "IndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfImpl"
  },
  {
    "label": "Expected",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expected"
  },
  {
    "label": "IndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfImpl"
  },
  {
    "label": "Expected",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expected"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "IndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfImpl"
  },
  {
    "label": "Expected",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expected"
  },
  {
    "label": "IndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfImpl"
  },
  {
    "label": "Expected",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expected"
  },
  {
    "label": "IndexOfMeta",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfMeta"
  },
  {
    "label": "Expected",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Expected"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UnambiguousIndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnambiguousIndexOfImpl"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UnambiguousIndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnambiguousIndexOfImpl"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UnambiguousIndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnambiguousIndexOfImpl"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "UnambiguousIndexOfImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnambiguousIndexOfImpl"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UnambiguousIndexOf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnambiguousIndexOf"
  },
  {
    "label": "NoMatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NoMatch"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UnambiguousIndexOf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UnambiguousIndexOf"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "H",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "H"
  },
  {
    "label": "VariantStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantStateBase"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "ImaginaryFun",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImaginaryFun"
  },
  {
    "label": "ImaginaryFun",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImaginaryFun"
  },
  {
    "label": "H",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "H"
  },
  {
    "label": "ImaginaryFun",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImaginaryFun"
  },
  {
    "label": "Self",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Self"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IsNeitherSelfNorInPlace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNeitherSelfNorInPlace"
  },
  {
    "label": "Self",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Self"
  },
  {
    "label": "IsNeitherSelfNorInPlace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNeitherSelfNorInPlace"
  },
  {
    "label": "Self",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Self"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IsNeitherSelfNorInPlace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNeitherSelfNorInPlace"
  },
  {
    "label": "Self",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Self"
  },
  {
    "label": "IsNeitherSelfNorInPlace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsNeitherSelfNorInPlace"
  },
  {
    "label": "Variant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Variant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "IndexOfConstructedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexOfConstructedType"
  },
  {
    "label": "ContainsVariantNPos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ContainsVariantNPos"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "VisitResultImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VisitResultImpl"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "Op",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Op"
  },
  {
    "label": "PerformVisitation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PerformVisitation"
  },
  {
    "label": "NoopConstructorTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NoopConstructorTag"
  },
  {
    "label": "EmplaceTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EmplaceTag"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "Head",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Head"
  },
  {
    "label": "H",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "H"
  },
  {
    "label": "VariantStateBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantStateBase"
  },
  {
    "label": "LazyH",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LazyH"
  },
  {
    "label": "ConstructibleH",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstructibleH"
  },
  {
    "label": "OverloadSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OverloadSet"
  },
  {
    "label": "OverloadSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OverloadSet"
  },
  {
    "label": "OverloadSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OverloadSet"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "VariantHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantHelper"
  },
  {
    "label": "VariantHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantHelper"
  },
  {
    "label": "CanAccept",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CanAccept"
  },
  {
    "label": "CanConvertFrom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CanConvertFrom"
  },
  {
    "label": "CanConvertFrom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CanConvertFrom"
  },
  {
    "label": "TrivialMoveOnly",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TrivialMoveOnly"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IsTriviallyMoveConstructible",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsTriviallyMoveConstructible"
  },
  {
    "label": "VariantStateBaseDestructorNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantStateBaseDestructorNontrivial"
  },
  {
    "label": "VariantMoveBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantMoveBaseNontrivial"
  },
  {
    "label": "VariantCopyBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantCopyBaseNontrivial"
  },
  {
    "label": "VariantMoveAssignBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantMoveAssignBaseNontrivial"
  },
  {
    "label": "VariantCopyAssignBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantCopyAssignBaseNontrivial"
  },
  {
    "label": "VariantStateBaseDestructorNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantStateBaseDestructorNontrivial"
  },
  {
    "label": "Destroyer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Destroyer"
  },
  {
    "label": "VariantMoveBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantMoveBaseNontrivial"
  },
  {
    "label": "Construct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Construct"
  },
  {
    "label": "VariantCopyBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantCopyBaseNontrivial"
  },
  {
    "label": "Construct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Construct"
  },
  {
    "label": "VariantMoveAssignBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantMoveAssignBaseNontrivial"
  },
  {
    "label": "VariantCoreAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantCoreAccess"
  },
  {
    "label": "VariantCopyAssignBaseNontrivial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VariantCopyAssignBaseNontrivial"
  },
  {
    "label": "VariantCoreAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantCoreAccess"
  },
  {
    "label": "EqualsOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EqualsOp"
  },
  {
    "label": "NotEqualsOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NotEqualsOp"
  },
  {
    "label": "LessThanOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LessThanOp"
  },
  {
    "label": "GreaterThanOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GreaterThanOp"
  },
  {
    "label": "LessThanOrEqualsOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LessThanOrEqualsOp"
  },
  {
    "label": "GreaterThanOrEqualsOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GreaterThanOrEqualsOp"
  },
  {
    "label": "SwapSameIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SwapSameIndex"
  },
  {
    "label": "Swap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Swap"
  },
  {
    "label": "VariantHashBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantHashBase"
  },
  {
    "label": "VariantHashVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantHashVisitor"
  },
  {
    "label": "VariantHashBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VariantHashBase"
  },
  {
    "label": "AccessSimpleArray()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AccessSimpleArray(table.value[head_index], tail_indices...)"
  },
  {
    "label": "ABSL_ASSERT()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "ABSL_ASSERT(i == variant_npos)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (SizeT<I>)",
    "insertText": "Run(const H&, SizeT<I>)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (SizeT<I>)",
    "insertText": "Run(H&&, SizeT<I>)"
  },
  {
    "label": "Overload()",
    "kind": "Method",
    "detail": "Function (identity<T>)",
    "insertText": "Overload(const T&)"
  },
  {
    "label": "Overload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Overload(...)"
  }
]