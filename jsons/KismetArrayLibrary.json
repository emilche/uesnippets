[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UKismetArrayLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UKismetArrayLibrary"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Script . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / UnrealType . h \" # include \" UObject / ScriptMacros . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Net / Core / PushModel / PushModel . h \" # include \" KismetArrayLibrary . generated . h \" class AActor ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Ascending,Descending } ;)",
    "insertText": "UCLASS(meta=(BlueprintThreadSafe), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UFUNCTION(BlueprintCallable, CustomThunk, meta=(DisplayName = \"Add\", CompactNodeTitle = \"ADD\", ArrayParm = \"TargetArray\", ArrayTypeDependentParams = \"NewItem\", AutoCreateRefTerm = \"NewItem\"), Category=\"Utilities|Array\") static ENGINE_API int32 Array_Add(const TArray<int32>& TargetArray, const int32& NewItem)"
  },
  {
    "label": "GenericArray_Add()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenericArray_Add(void* TargetArray, const FArrayProperty* ArrayProp, const void* NewItem)"
  },
  {
    "label": "GenericArray_AddUnique()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenericArray_AddUnique(void* TargetArray, const FArrayProperty* ArrayProp, const void* NewItem)"
  },
  {
    "label": "GenericArray_Shuffle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Shuffle(void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_ShuffleFromStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_ShuffleFromStream(void* TargetArray, const FArrayProperty* ArrayProp, FRandomStream* RandomStream)"
  },
  {
    "label": "GenericArray_Identical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenericArray_Identical(void* ArrayA, const FArrayProperty* ArrayAProp, void* ArrayB, const FArrayProperty* ArrayBProperty)"
  },
  {
    "label": "GenericArray_Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Append(void* TargetArray, const FArrayProperty* TargetArrayProp, void* SourceArray, const FArrayProperty* SourceArrayProperty)"
  },
  {
    "label": "GenericArray_Insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Insert(void* TargetArray, const FArrayProperty* ArrayProp, const void* NewItem, int32 Index)"
  },
  {
    "label": "GenericArray_Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Remove(void* TargetArray, const FArrayProperty* ArrayProp, int32 IndexToRemove)"
  },
  {
    "label": "GenericArray_RemoveItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenericArray_RemoveItem(void* TargetArray, const FArrayProperty* ArrayProp, const void* Item)"
  },
  {
    "label": "GenericArray_Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Clear(void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Resize(void* TargetArray, const FArrayProperty* ArrayProp, int32 Size)"
  },
  {
    "label": "GenericArray_Reverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Reverse(void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_Length()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenericArray_Length(const void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenericArray_IsEmpty(const void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_IsNotEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenericArray_IsNotEmpty(const void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_LastIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenericArray_LastIndex(const void* TargetArray, const FArrayProperty* ArrayProp)"
  },
  {
    "label": "GenericArray_Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Get(void* TargetArray, const FArrayProperty* ArrayProp, int32 Index, void* Item)"
  },
  {
    "label": "GenericArray_Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Set(void* TargetArray, const FArrayProperty* ArrayProp, int32 Index, const void* NewItem, bool bSizeToFit)"
  },
  {
    "label": "GenericArray_Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Swap(const void* TargetArray, const FArrayProperty* ArrayProp, int32 First, int32 Second)"
  },
  {
    "label": "GenericArray_Find()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenericArray_Find(const void* TargetArray, const FArrayProperty* ArrayProperty, const void* ItemToFind)"
  },
  {
    "label": "GenericArray_SetArrayPropertyByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_SetArrayPropertyByName(UObject* OwnerObject, FName ArrayPropertyName, const void* SrcArrayAddr)"
  },
  {
    "label": "GenericArray_Random()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Random(void* TargetArray, const FArrayProperty* ArrayProp, void* OutItem, int32* OutIndex)"
  },
  {
    "label": "GenericArray_RandomFromStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_RandomFromStream(void* TargetArray, const FArrayProperty* ArrayProp, FRandomStream* RandomStream, void* OutItem, int32* OutIndex)"
  },
  {
    "label": "GenericArray_IsValidIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenericArray_IsValidIndex(const void* TargetArray, const FArrayProperty* ArrayProp, int32 IndexToTest)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (private : int32 MaxSupportedArraySize = TNumericLimits<int32)",
    "insertText": "Max()"
  },
  {
    "label": "GenericArray_HandleBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_HandleBool(const FProperty* Property, void* ItemPtr)"
  },
  {
    "label": "GetLastIndex()",
    "kind": "Method",
    "detail": "Function (public : const FName ReachedMaximumContainerSizeWarning ; int32)",
    "insertText": "GetLastIndex(const FScriptArrayHelper& ArrayHelper)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (const int32 ArraySize = ArrayHelper .)",
    "insertText": "Num()"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Add)"
  },
  {
    "label": "FArrayProperty()",
    "kind": "Method",
    "detail": "Function (Stack . MostRecentProperty = nullptr ; Stack . StepCompiledIn<)",
    "insertText": "FArrayProperty(NULL)"
  },
  {
    "label": "FArrayProperty()",
    "kind": "Method",
    "detail": "Function (void* ArrayAddr = Stack . MostRecentPropertyAddress ; FArrayProperty* ArrayProperty = CastField<)",
    "insertText": "FArrayProperty(Stack.MostRecentProperty)"
  },
  {
    "label": "GetElementSize()",
    "kind": "Method",
    "detail": "Function (ArrayDim)",
    "insertText": "GetElementSize()"
  },
  {
    "label": "FMemory_Alloca()",
    "kind": "Method",
    "detail": "Function (void* StorageSpace =)",
    "insertText": "FMemory_Alloca(PropertySize)"
  },
  {
    "label": "InitializeValue()",
    "kind": "Method",
    "detail": "Function (InnerProp ->)",
    "insertText": "InitializeValue(StorageSpace)"
  },
  {
    "label": "FProperty()",
    "kind": "Method",
    "detail": "Function (Stack . MostRecentPropertyAddress = nullptr ; Stack . MostRecentPropertyContainer = nullptr ; Stack . StepCompiledIn<)",
    "insertText": "FProperty(StorageSpace)"
  },
  {
    "label": "MARK_PROPERTY_DIRTY()",
    "kind": "Method",
    "detail": "Function (P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "MARK_PROPERTY_DIRTY(Stack.Object, ArrayProperty)"
  },
  {
    "label": "DestroyValue()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; InnerProp ->)",
    "insertText": "DestroyValue(StorageSpace)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_AddUnique)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Shuffle)"
  },
  {
    "label": "GenericArray_Shuffle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Shuffle(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_ShuffleFromStream)"
  },
  {
    "label": "FProperty()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } Stack . MostRecentProperty = nullptr ; Stack . StepCompiledIn<)",
    "insertText": "FProperty(nullptr)"
  },
  {
    "label": "RandomStream()",
    "kind": "Method",
    "detail": "Function (FRandomStream*)",
    "insertText": "RandomStream(FRandomStream*)"
  },
  {
    "label": "GenericArray_ShuffleFromStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_ShuffleFromStream(ArrayAddr, ArrayProperty, RandomStream)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Identical)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ;)",
    "insertText": "P_NATIVE_BEGIN(bool*)RESULT_PARAM = GenericArray_Identical(ArrayAAddr, ArrayAProperty, ArrayBAddr, ArrayBProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Append)"
  },
  {
    "label": "MARK_PROPERTY_DIRTY()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "MARK_PROPERTY_DIRTY(Stack.Object, TargetArrayProperty)"
  },
  {
    "label": "GenericArray_Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Append(TargetArrayAddr, TargetArrayProperty, SourceArrayAddr, SourceArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Insert)"
  },
  {
    "label": "P_GET_PROPERTY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_GET_PROPERTY(FIntProperty, Index)"
  },
  {
    "label": "GenericArray_Insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Insert(ArrayAddr, ArrayProperty, StorageSpace, Index)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Remove)"
  },
  {
    "label": "GenericArray_Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Remove(ArrayAddr, ArrayProperty, Index)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_RemoveItem)"
  },
  {
    "label": "GenericArray_HandleBool()",
    "kind": "Method",
    "detail": "Function (void* ItemPtr = StorageSpace ; P_FINISH ;)",
    "insertText": "GenericArray_HandleBool(InnerProp, ItemPtr)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Clear)"
  },
  {
    "label": "GenericArray_Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Clear(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Resize)"
  },
  {
    "label": "P_GET_PROPERTY()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; })",
    "insertText": "P_GET_PROPERTY(FIntProperty, Size)"
  },
  {
    "label": "GenericArray_Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Resize(ArrayAddr, ArrayProperty, Size)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Reverse)"
  },
  {
    "label": "GenericArray_Reverse()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "GenericArray_Reverse(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Length)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ;)",
    "insertText": "P_NATIVE_BEGIN(int32*)RESULT_PARAM = GenericArray_Length(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_IsEmpty)"
  },
  {
    "label": "FArrayProperty()",
    "kind": "Method",
    "detail": "Function (Stack . MostRecentProperty = nullptr ; Stack . StepCompiledIn<)",
    "insertText": "FArrayProperty(nullptr)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ;)",
    "insertText": "P_NATIVE_BEGIN(bool*)RESULT_PARAM = GenericArray_IsEmpty(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_IsNotEmpty)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ;)",
    "insertText": "P_NATIVE_BEGIN(bool*)RESULT_PARAM = GenericArray_IsNotEmpty(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_LastIndex)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ;)",
    "insertText": "P_NATIVE_BEGIN(int32*)RESULT_PARAM = GenericArray_LastIndex(ArrayAddr, ArrayProperty)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Get)"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (const FFieldClass* InnerPropClass = InnerProp ->)",
    "insertText": "GetClass()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (void* ItemPtr ;)",
    "insertText": "if(Stack.MostRecentPropertyAddress != NULL && (PropertySize == Stack.MostRecentProperty->GetElementSize()*Stack.MostRecentProperty->ArrayDim) && (MostRecentPropClass->IsChildOf(InnerPropClass) || InnerPropClass->IsChildOf(MostRecentPropClass)))"
  },
  {
    "label": "GenericArray_Get()",
    "kind": "Method",
    "detail": "Function (ItemPtr = Stack . MostRecentPropertyAddress ; } else { ItemPtr = StorageSpace ; } P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "GenericArray_Get(ArrayAddr, ArrayProperty, Index, ItemPtr)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Set)"
  },
  {
    "label": "P_GET_UBOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_GET_UBOOL(bSizeToFit)"
  },
  {
    "label": "GenericArray_Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Set(ArrayAddr, ArrayProperty, Index, StorageSpace, bSizeToFit)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Swap)"
  },
  {
    "label": "P_GET_PROPERTY()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; })",
    "insertText": "P_GET_PROPERTY(FIntProperty, First)"
  },
  {
    "label": "P_GET_PROPERTY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_GET_PROPERTY(FIntProperty, Second)"
  },
  {
    "label": "GenericArray_Swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_Swap(ArrayAddr, ArrayProperty, First, Second)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Find)"
  },
  {
    "label": "GenericArray_HandleBool()",
    "kind": "Method",
    "detail": "Function (void* ItemToFindPtr = StorageSpace ; P_FINISH ;)",
    "insertText": "GenericArray_HandleBool(InnerProp, ItemToFindPtr)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_NATIVE_BEGIN(int32*)RESULT_PARAM = GenericArray_Find(ArrayAddr, ArrayProperty, ItemToFindPtr)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execArray_Contains)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_NATIVE_BEGIN(bool*)RESULT_PARAM = GenericArray_Find(ArrayAddr, ArrayProperty, ItemToFindPtr)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_FUNCTION(execSetArrayPropertyByName)"
  },
  {
    "label": "P_GET_OBJECT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_GET_OBJECT(UObject, OwnerObject)"
  },
  {
    "label": "P_GET_PROPERTY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "P_GET_PROPERTY(FNameProperty, ArrayPropertyName)"
  },
  {
    "label": "MARK_PROPERTY_DIRTY()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; } P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "MARK_PROPERTY_DIRTY(Stack.Object, Stack.MostRecentProperty)"
  },
  {
    "label": "GenericArray_SetArrayPropertyByName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenericArray_SetArrayPropertyByName(OwnerObject, ArrayPropertyName, SrcArrayAddr)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_IsValidIndex)"
  },
  {
    "label": "P_GET_PROPERTY()",
    "kind": "Method",
    "detail": "Function (Stack . bArrayContextFailed = true ; return ; })",
    "insertText": "P_GET_PROPERTY(FIntProperty, IndexToTest)"
  },
  {
    "label": "P_NATIVE_BEGIN()",
    "kind": "Method",
    "detail": "Function (P_FINISH ;)",
    "insertText": "P_NATIVE_BEGIN(bool*)RESULT_PARAM = GenericArray_IsValidIndex(ArrayAddr, ArrayProperty, IndexToTest)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_Random)"
  },
  {
    "label": "OutIndex()",
    "kind": "Method",
    "detail": "Function (int32*)",
    "insertText": "OutIndex(int32*)"
  },
  {
    "label": "GenericArray_Random()",
    "kind": "Method",
    "detail": "Function (P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "GenericArray_Random(ArrayAddr, ArrayProperty, Result, OutIndex)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (P_NATIVE_END ; })",
    "insertText": "DECLARE_FUNCTION(execArray_RandomFromStream)"
  },
  {
    "label": "GenericArray_RandomFromStream()",
    "kind": "Method",
    "detail": "Function (P_FINISH ; P_NATIVE_BEGIN ;)",
    "insertText": "GenericArray_RandomFromStream(ArrayAddr, ArrayProperty, RandomStream, Result, OutIndex)"
  }
]