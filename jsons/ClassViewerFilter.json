[
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "FClassViewerInitializationOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerInitializationOptions"
  },
  {
    "label": "FClassViewerNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerNode"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FTextFilterExpressionEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFilterExpressionEvaluator"
  },
  {
    "label": "IAssetReferenceFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetReferenceFilter"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "viewer"
  },
  {
    "label": "FClassViewerFilterOption",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterOption"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "viewer"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "viewer"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "IClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassViewerFilter"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "filter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "filter"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilter"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "CLASSVIEWER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CLASSVIEWER_API"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "IUnloadedBlueprintData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IUnloadedBlueprintData"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "FClassViewerFilter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FClassViewerFilter(const FClassViewerInitializationOptions& InInitOptions)"
  },
  {
    "label": "IsNodeAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeAllowed(const FClassViewerInitializationOptions& InInitOptions, const TSharedRef<FClassViewerNode>& Node, const bool bCheckTextFilter)"
  },
  {
    "label": "IsClassAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassAllowed(const FClassViewerInitializationOptions& InInitOptions, const UClass* InClass, TSharedRef< class FClassViewerFilterFuncs > InFilterFuncs, const bool bCheckTextFilter)"
  },
  {
    "label": "IsUnloadedClassAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnloadedClassAllowed(const FClassViewerInitializationOptions& InInitOptions, const TSharedRef< const class IUnloadedBlueprintData > InUnloadedClassData, TSharedRef< class FClassViewerFilterFuncs > InFilterFuncs, const bool bCheckTextFilter)"
  },
  {
    "label": "IfInChildOfClassesSet()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfInChildOfClassesSet(TSet< const UClass* >& InSet, const UClass* InClass)"
  },
  {
    "label": "IfInChildOfClassesSet()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfInChildOfClassesSet(TSet< const UClass* >& InSet, const TSharedPtr< const class IUnloadedBlueprintData > InClass)"
  },
  {
    "label": "IfMatchesAllInChildOfClassesSet()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatchesAllInChildOfClassesSet(TSet< const UClass* >& InSet, const UClass* InClass)"
  },
  {
    "label": "IfMatchesAllInChildOfClassesSet()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatchesAllInChildOfClassesSet(TSet< const UClass* >& InSet, const TSharedPtr< const class IUnloadedBlueprintData > InClass)"
  },
  {
    "label": "IfMatchesAll_ObjectsSetIsAClass()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatchesAll_ObjectsSetIsAClass(TSet< const UObject* >& InSet, const UClass* InClass)"
  },
  {
    "label": "IfMatchesAll_ObjectsSetIsAClass()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatchesAll_ObjectsSetIsAClass(TSet< const UObject* >& InSet, const TSharedPtr< const class IUnloadedBlueprintData > InClass)"
  },
  {
    "label": "IfMatchesAll_ClassesSetIsAClass()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatchesAll_ClassesSetIsAClass(TSet< const UClass* >& InSet, const UClass* InClass)"
  },
  {
    "label": "IfMatchesAll_ClassesSetIsAClass()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatchesAll_ClassesSetIsAClass(TSet< const UClass* >& InSet, const TSharedPtr< const class IUnloadedBlueprintData > InClass)"
  },
  {
    "label": "IfMatches_ClassesSetIsAClass()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatches_ClassesSetIsAClass(TSet< const UClass* >& InSet, const UClass* InClass)"
  },
  {
    "label": "IfMatches_ClassesSetIsAClass()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfMatches_ClassesSetIsAClass(TSet< const UClass* >& InSet, const TSharedPtr< const class IUnloadedBlueprintData > InClass)"
  },
  {
    "label": "IfInClassesSet()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfInClassesSet(TSet< const UClass* >& InSet, const UClass* InClass)"
  },
  {
    "label": "IfInClassesSet()",
    "kind": "Method",
    "detail": "Function (EFilterReturn::Type)",
    "insertText": "IfInClassesSet(TSet< const UClass* >& InSet, const TSharedPtr< const class IUnloadedBlueprintData > InClass)"
  }
]