[
  {
    "label": "APInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APInt"
  },
  {
    "label": "ArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayRef"
  },
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "ConstantAsMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantAsMetadata"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "MDString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDString"
  },
  {
    "label": "MDBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDBuilder"
  },
  {
    "label": "TBAAStructField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBAAStructField"
  },
  {
    "label": "MDBuilder()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_MDBUILDER_H # define LLVM_IR_MDBUILDER_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / Support / DataTypes . h \" # include<utility> namespace llvm { class APInt ; template<T> class ArrayRef ; class LLVMContext ; class Constant ; class ConstantAsMetadata ; class MDNode ; class MDString ; class MDBuilder { LLVMContext& Context ; public :)",
    "insertText": "MDBuilder(LLVMContext &context) : Context(context)"
  },
  {
    "label": "createString()",
    "kind": "Method",
    "detail": "Function (} MDString*)",
    "insertText": "createString(StringRef Str)"
  },
  {
    "label": "createConstant()",
    "kind": "Method",
    "detail": "Function (ConstantAsMetadata*)",
    "insertText": "createConstant(Constant *C)"
  },
  {
    "label": "createFPMath()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createFPMath(float Accuracy)"
  },
  {
    "label": "createBranchWeights()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createBranchWeights(uint32_t TrueWeight, uint32_t FalseWeight)"
  },
  {
    "label": "createBranchWeights()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createBranchWeights(ArrayRef<uint32_t> Weights)"
  },
  {
    "label": "createFunctionEntryCount()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createFunctionEntryCount(uint64_t Count)"
  },
  {
    "label": "createRange()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createRange(const APInt &Lo, const APInt &Hi)"
  },
  {
    "label": "createRange()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createRange(Constant *Lo, Constant *Hi)"
  },
  {
    "label": "createAnonymousAARoot()",
    "kind": "Method",
    "detail": "Function (protected : MDNode*)",
    "insertText": "createAnonymousAARoot(StringRef Name = StringRef(), MDNode *Extra = nullptr)"
  },
  {
    "label": "createAnonymousTBAARoot()",
    "kind": "Method",
    "detail": "Function (public : MDNode*)",
    "insertText": "createAnonymousTBAARoot()"
  },
  {
    "label": "createAnonymousAliasScopeDomain()",
    "kind": "Method",
    "detail": "Function (} MDNode*)",
    "insertText": "createAnonymousAliasScopeDomain(StringRef Name = StringRef())"
  },
  {
    "label": "createAnonymousAliasScope()",
    "kind": "Method",
    "detail": "Function (} MDNode*)",
    "insertText": "createAnonymousAliasScope(MDNode *Domain, StringRef Name = StringRef())"
  },
  {
    "label": "createTBAARoot()",
    "kind": "Method",
    "detail": "Function (} MDNode*)",
    "insertText": "createTBAARoot(StringRef Name)"
  },
  {
    "label": "createAliasScopeDomain()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createAliasScopeDomain(StringRef Name)"
  },
  {
    "label": "createAliasScope()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createAliasScope(StringRef Name, MDNode *Domain)"
  },
  {
    "label": "createTBAANode()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createTBAANode(StringRef Name, MDNode *Parent, bool isConstant = false)"
  },
  {
    "label": "TBAAStructField()",
    "kind": "Method",
    "detail": "Function (struct TBAAStructField { uint64_t Offset ; uint64_t Size ; MDNode* TBAA ;)",
    "insertText": "TBAAStructField(uint64_t Offset, uint64_t Size, MDNode *TBAA) : Offset(Offset), Size(Size), TBAA(TBAA)"
  },
  {
    "label": "createTBAAStructNode()",
    "kind": "Method",
    "detail": "Function (} } ; MDNode*)",
    "insertText": "createTBAAStructNode(ArrayRef<TBAAStructField> Fields)"
  },
  {
    "label": "createTBAAStructTypeNode()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createTBAAStructTypeNode(StringRef Name, ArrayRef<std::pair<MDNode *, uint64_t>> Fields)"
  },
  {
    "label": "createTBAAScalarTypeNode()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createTBAAScalarTypeNode(StringRef Name, MDNode *Parent, uint64_t Offset = 0)"
  },
  {
    "label": "createTBAAStructTagNode()",
    "kind": "Method",
    "detail": "Function (MDNode*)",
    "insertText": "createTBAAStructTagNode(MDNode *BaseType, MDNode *AccessType, uint64_t Offset, bool IsConstant = false)"
  }
]