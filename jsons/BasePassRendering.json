[
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "TUniformBufferRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniformBufferRef"
  },
  {
    "label": "FSceneWithoutWaterTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneWithoutWaterTextures"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "UMaterialExpressionSingleLayerWaterMaterialOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionSingleLayerWaterMaterialOutput"
  },
  {
    "label": "FForwardLocalLightData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FForwardLocalLightData"
  },
  {
    "label": "FForwardBasePassTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForwardBasePassTextures"
  },
  {
    "label": "FForwardLightingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FForwardLightingParameters"
  },
  {
    "label": "TBasePassShaderElementData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassShaderElementData"
  },
  {
    "label": "TBasePassVertexShaderPolicyParamType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassVertexShaderPolicyParamType"
  },
  {
    "label": "TBasePassVertexShaderBaseType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassVertexShaderBaseType"
  },
  {
    "label": "TBasePassVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassVS"
  },
  {
    "label": "TBasePassComputeShaderPolicyParamType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassComputeShaderPolicyParamType"
  },
  {
    "label": "TBasePassComputeShaderBaseType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassComputeShaderBaseType"
  },
  {
    "label": "TBasePassCS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassCS"
  },
  {
    "label": "TBasePassPixelShaderPolicyParamType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassPixelShaderPolicyParamType"
  },
  {
    "label": "TBasePassPixelShaderBaseType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassPixelShaderBaseType"
  },
  {
    "label": "TBasePassPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBasePassPS"
  },
  {
    "label": "FSupportOITDim",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSupportOITDim"
  },
  {
    "label": "F128BitRTBasePassPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "F128BitRTBasePassPS"
  },
  {
    "label": "FBasePassMeshProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBasePassMeshProcessor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNaniteBasePassData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteBasePassData"
  },
  {
    "label": "IsSortedPixelsEnabledForProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSortedPixelsEnabledForProject(EShaderPlatform InPlatform)"
  },
  {
    "label": "SetupSharedBasePassParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSharedBasePassParameters(\n\tFRDGBuilder& GraphBuilder,\n\tconst FViewInfo& View,\n\tconst int32 ViewIndex,\n\tbool bLumenGIEnabled,\n\tFSharedBasePassUniformParameters& BasePassParameters)"
  },
  {
    "label": "CreateOpaqueBasePassUniformBuffer()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FOpaqueBasePassUniformParameters>)",
    "insertText": "CreateOpaqueBasePassUniformBuffer(\n\tFRDGBuilder& GraphBuilder,\n\tconst FViewInfo& View,\n\tconst int32 ViewIndex = 0,\n\tconst FForwardBasePassTextures& ForwardBasePassTextures = {},\n\tconst FDBufferTextures& DBufferTextures = {},\n\tbool bLumenGIEnabled = false)"
  },
  {
    "label": "CreateTranslucentBasePassUniformBuffer()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FTranslucentBasePassUniformParameters>)",
    "insertText": "CreateTranslucentBasePassUniformBuffer(\n\tFRDGBuilder& GraphBuilder,\n\tconst FScene* Scene,\n\tconst FViewInfo& View,\n\tconst int32 ViewIndex = 0,\n\tconst FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures = {},\n\tFRDGTextureRef SceneColorCopyTexture = nullptr,\n\tconst ESceneTextureSetupMode SceneTextureSetupMode = ESceneTextureSetupMode::None,\n\tbool bLumenGIEnabled = false,\n\tETranslucencyPass::Type TranslucencyPass = ETranslucencyPass::TPT_MAX)"
  },
  {
    "label": "IsGBufferLayoutSupportedForMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGBufferLayoutSupportedForMaterial(EGBufferLayout Layout, const FMeshMaterialShaderPermutationParameters& Params)"
  },
  {
    "label": "ModifyBasePassCSPSCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyBasePassCSPSCompilationEnvironment(const FMeshMaterialShaderPermutationParameters& Params, EGBufferLayout GBufferLayout, bool bEnableSkyLight, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "SetPassParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPassParameters(\n\t\tFRHIBatchedShaderParameters& BatchedParameters,\n\t\tconst FUintVector4& ViewRect,\n\t\tconst FUintVector4& PassData,\n\t\tFRHIUniformBuffer* ShadingOutputs\n\t)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "LAYOUT_FIELD(FShaderUniformBufferParameter,       ReflectionCaptureBuffer)"
  },
  {
    "label": "LAYOUT_FIELD()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "LAYOUT_FIELD(FShaderUniformBufferParameter, ReflectionCaptureBuffer)"
  },
  {
    "label": "F128BitRTBasePassPS()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "F128BitRTBasePassPS()"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FMeshMaterialShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "check(false)"
  },
  {
    "label": "GetUniformLightMapPolicyType()",
    "kind": "Method",
    "detail": "Function (ELightMapPolicyType)",
    "insertText": "GetUniformLightMapPolicyType(ERHIFeatureLevel::Type FeatureLevelconst, const FScene* Scene, const FLightCacheInterface* LCI, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, const FMaterial& Material)"
  },
  {
    "label": "GetUniformLightMapPolicyTypeForPSOCollection()",
    "kind": "Method",
    "detail": "Function (TInlineAllocator<2>>)",
    "insertText": "GetUniformLightMapPolicyTypeForPSOCollection(ERHIFeatureLevel::Type FeatureLevel, const FMaterial& Material)"
  },
  {
    "label": "TryAddMeshBatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAddMeshBatch(const FMeshBatch& RESTRICT MeshBatch, uint64 BatchElementMask, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, int32 StaticMeshId, const FMaterialRenderProxy& MaterialRenderProxy, const FMaterial& Material)"
  },
  {
    "label": "ShouldDraw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDraw(const FMaterial& Material)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Process(\n\t\tconst FMeshBatch& RESTRICT MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tint32 StaticMeshId,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tconst FMaterialRenderProxy& RESTRICT MaterialRenderProxy,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tconst bool bIsMasked,\n\t\tconst bool bIsTranslucent,\n\t\tFMaterialShadingModelField ShadingModels,\n\t\tconst LightMapPolicyType& RESTRICT LightMapPolicy,\n\t\tconst typename LightMapPolicyType::ElementDataType& RESTRICT LightMapElementData,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode)"
  },
  {
    "label": "CollectPSOInitializersForSkyLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPSOInitializersForSkyLight(\n\t\tconst FSceneTexturesConfig& SceneTexturesConfig,\n\t\tconst FPSOPrecacheVertexFactoryData& VertexFactoryData,\n\t\tconst FPSOPrecacheParams& PreCacheParams,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tconst bool bRenderSkylight,\n\t\tconst bool bDitheredLODTransition,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode,\n\t\tEPrimitiveType PrimitiveType, \n\t\tTArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "CollectPSOInitializersForLMPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPSOInitializersForLMPolicy(\n\t\tconst FSceneTexturesConfig& SceneTexturesConfig,\n\t\tconst FPSOPrecacheVertexFactoryData& VertexFactoryData,\n\t\tconst FPSOPrecacheParams& PreCacheParams,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tFMaterialShadingModelField ShadingModels,\n\t\tconst bool bRenderSkylight,\n\t\tconst bool bDitheredLODTransition,\n\t\tconst LightMapPolicyType& RESTRICT LightMapPolicy,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode, \n\t\tEPrimitiveType PrimitiveType, \n\t\tTArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "SetupBasePassState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupBasePassState(FExclusiveDepthStencil::Type BasePassDepthStencilAccess, const bool bShaderComplexity, FMeshPassProcessorRenderState& DrawRenderState)"
  },
  {
    "label": "CalculateTranslucentMeshStaticSortKey()",
    "kind": "Method",
    "detail": "Function (FMeshDrawCommandSortKey)",
    "insertText": "CalculateTranslucentMeshStaticSortKey(const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, uint16 MeshIdInPrimitive)"
  }
]