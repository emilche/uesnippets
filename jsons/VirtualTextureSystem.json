[
  {
    "label": "FAdaptiveVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAdaptiveVirtualTexture"
  },
  {
    "label": "FAllocatedVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAllocatedVirtualTexture"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FUniquePageList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniquePageList"
  },
  {
    "label": "FUniqueRequestList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniqueRequestList"
  },
  {
    "label": "FVirtualTexturePhysicalSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTexturePhysicalSpace"
  },
  {
    "label": "FVirtualTextureProducer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureProducer"
  },
  {
    "label": "FVirtualTextureSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureSpace"
  },
  {
    "label": "FVirtualTextureSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureSystem"
  },
  {
    "label": "FVTSpaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTSpaceDescription"
  },
  {
    "label": "FVTPhysicalSpaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTPhysicalSpaceDescription"
  },
  {
    "label": "FFeedbackAnalysisParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFeedbackAnalysisParameters"
  },
  {
    "label": "FAddRequestedTilesParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddRequestedTilesParameters"
  },
  {
    "label": "FGatherRequestsParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatherRequestsParameters"
  },
  {
    "label": "FPageUpdateBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPageUpdateBuffer"
  },
  {
    "label": "FVirtualTextureUpdateSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureUpdateSettings"
  },
  {
    "label": "FVirtualTextureUpdater",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureUpdater"
  },
  {
    "label": "FFeedbackAnalysisTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeedbackAnalysisTask"
  },
  {
    "label": "FAddRequestedTilesTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAddRequestedTilesTask"
  },
  {
    "label": "FGatherRequestsTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGatherRequestsTask"
  },
  {
    "label": "FVirtualTextureProducerCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureProducerCollection"
  },
  {
    "label": "FTexturePageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexturePageMap"
  },
  {
    "label": "FTexturePagePool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexturePagePool"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if ! UE_BUILD_SHIPPING # include \" Misc / CoreDelegates . h \" # endif # include \" RHI . h \" # include \" RendererInterface . h \" # include \" Templates / UniquePtr . h \" # include \" VT / VirtualTextureProducer . h \" # include \" VT / TexturePageLocks . h \" # include \" VirtualTexturing . h \" # include \" VT / VirtualTextureFeedback . h \" # include \" Tasks / Task . h \" # include \" Async / RecursiveMutex . h \" class FAdaptiveVirtualTexture ; class FAllocatedVirtualTexture ; class FScene ; class FUniquePageList ; class FUniqueRequestList ; class FVirtualTexturePhysicalSpace ; class FVirtualTextureProducer ; class FVirtualTextureSpace ; class FVirtualTextureSystem ; struct FVTSpaceDescription ; struct FVTPhysicalSpaceDescription ; union FPhysicalSpaceIDAndAddress ; struct FFeedbackAnalysisParameters ; struct FAddRequestedTilesParameters ; struct FGatherRequestsParameters ; struct FPageUpdateBuffer ; uint32)",
    "insertText": "GetTypeHash(const FAllocatedVTDescription& Description)"
  },
  {
    "label": "FVirtualTextureUpdateSettings()",
    "kind": "Method",
    "detail": "Function (struct FVirtualTextureUpdateSettings {)",
    "insertText": "FVirtualTextureUpdateSettings()"
  },
  {
    "label": "EnableThrottling()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureUpdateSettings&)",
    "insertText": "EnableThrottling(bool bEnable)"
  },
  {
    "label": "EnableAsyncTasks()",
    "kind": "Method",
    "detail": "Function (MaxRVTPageUploads = 9 9 9 9 9 ; MaxSVTPageUploads = 9 9 9 9 9 ; MaxPagesProduced = 9 9 9 9 9 ; } return* this ; } FVirtualTextureUpdateSettings&)",
    "insertText": "EnableAsyncTasks(bool bEnable = true)"
  },
  {
    "label": "EnablePageRequests()",
    "kind": "Method",
    "detail": "Function (bEnableAsyncTasks = bEnable ; return* this ; } FVirtualTextureUpdateSettings&)",
    "insertText": "EnablePageRequests(bool bEnable = true)"
  },
  {
    "label": "GetTask()",
    "kind": "Method",
    "detail": "Function (bEnablePageRequests = bEnable ; return* this ; } bool bEnableAsyncTasks = true ; bool bEnablePageRequests = true ; bool bEnableFeedback ; bool bEnablePlayback ; bool bForceContinuousUpdate ; bool bParallelFeedbackTasks ; int32 NumFeedbackTasks ; int32 NumGatherTasks ; int32 MaxGatherPagesBeforeFlush ; int32 MaxRVTPageUploads ; int32 MaxSVTPageUploads ; int32 MaxPagesProduced ; int32 MaxContinuousUpdates ; } ; class FVirtualTextureUpdater { public : UE::Tasks::FTask)",
    "insertText": "GetTask()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureSystem&)",
    "insertText": "Get()"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetFrame()"
  },
  {
    "label": "CallPendingCallbacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPendingCallbacks()"
  },
  {
    "label": "BeginUpdate()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FVirtualTextureUpdater>)",
    "insertText": "BeginUpdate(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel, FScene* Scene, const FVirtualTextureUpdateSettings& Settings)"
  },
  {
    "label": "WaitForTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForTasks(FVirtualTextureUpdater* Updater)"
  },
  {
    "label": "EndUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndUpdate(FRDGBuilder& GraphBuilder, TUniquePtr<FVirtualTextureUpdater>&& Updater, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "ReleasePendingResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePendingResources()"
  },
  {
    "label": "AllocateVirtualTexture()",
    "kind": "Method",
    "detail": "Function (IAllocatedVirtualTexture*)",
    "insertText": "AllocateVirtualTexture(FRHICommandListBase& RHICmdList, const FAllocatedVTDescription& Desc)"
  },
  {
    "label": "DestroyVirtualTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyVirtualTexture(IAllocatedVirtualTexture* AllocatedVT)"
  },
  {
    "label": "RegisterProducer()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureProducerHandle)",
    "insertText": "RegisterProducer(FRHICommandListBase& RHICmdList, const FVTProducerDescription& InDesc, IVirtualTexture* InProducer)"
  },
  {
    "label": "ReleaseProducer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseProducer(const FVirtualTextureProducerHandle& Handle)"
  },
  {
    "label": "TryReleaseProducer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryReleaseProducer(const FVirtualTextureProducerHandle& Handle)"
  },
  {
    "label": "AddProducerDestroyedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProducerDestroyedCallback(const FVirtualTextureProducerHandle& Handle, FVTProducerDestroyedFunction* Function, void* Baton)"
  },
  {
    "label": "RemoveAllProducerDestroyedCallbacks()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RemoveAllProducerDestroyedCallbacks(const void* Baton)"
  },
  {
    "label": "AllocateAdaptiveVirtualTexture()",
    "kind": "Method",
    "detail": "Function (IAdaptiveVirtualTexture*)",
    "insertText": "AllocateAdaptiveVirtualTexture(FRHICommandListBase& RHICmdList, const FAdaptiveVTDescription& AdaptiveVTDesc, const FAllocatedVTDescription& AllocatedVTDesc)"
  },
  {
    "label": "DestroyAdaptiveVirtualTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAdaptiveVirtualTexture(IAdaptiveVirtualTexture* AdaptiveVT)"
  },
  {
    "label": "RequestTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTiles(const FVector2D& InScreenSpaceSize, int32 InMipLevel = -1)"
  },
  {
    "label": "RequestTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTiles(const FMaterialRenderProxy* InMaterialRenderProxy, const FVector2D& InScreenSpaceSize, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "RequestTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTiles(IAllocatedVirtualTexture* AllocatedVT, const FVector2D& InScreenSpaceSize, const FVector2D& InViewportPosition, const FVector2D& InViewportSize, const FVector2D& InUV0, const FVector2D& InUV1, int32 InMipLevel = -1)"
  },
  {
    "label": "LoadPendingTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadPendingTiles(FRDGBuilder& GraphBuilder, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "SetVirtualTextureRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetVirtualTextureRequestRecordBuffer(uint64 Handle)"
  },
  {
    "label": "GetVirtualTextureRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetVirtualTextureRequestRecordBuffer(TSet<uint64>& OutPageRequests)"
  },
  {
    "label": "RequestRecordedTiles()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "RequestRecordedTiles(TArray<uint64>&& InPageRequests)"
  },
  {
    "label": "FlushCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCache()"
  },
  {
    "label": "FlushCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCache(FVirtualTextureProducerHandle const& ProducerHandle, int32 SpaceID, FIntRect const& TextureRegion, uint32 MaxLevelToEvict, uint32 MaxAgeToKeepMapped)"
  },
  {
    "label": "GetGlobalMipBias()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetGlobalMipBias()"
  },
  {
    "label": "IsPendingRootPageMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPendingRootPageMap(IAllocatedVirtualTexture* AllocatedVT)"
  },
  {
    "label": "FVirtualTextureSystem()",
    "kind": "Method",
    "detail": "Function (private : class FFeedbackAnalysisTask ; class FAddRequestedTilesTask ; class FGatherRequestsTask ; class FAllocatedVirtualTexture ; class FAdaptiveVirtualTexture ; class FVirtualTextureProducer ; class FVirtualTextureProducerCollection ; class FTexturePageMap ; class FTexturePagePool ;)",
    "insertText": "FVirtualTextureSystem()"
  },
  {
    "label": "AcquireSpace()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureSpace*)",
    "insertText": "AcquireSpace(FRHICommandListBase& RHICmdList, const FVTSpaceDescription& InDesc, uint8 InForceSpaceID, FAllocatedVirtualTexture* AllocatedVT)"
  },
  {
    "label": "ReleaseSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSpace(FVirtualTextureSpace* Space)"
  },
  {
    "label": "FindProducer()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureProducer*)",
    "insertText": "FindProducer(const FVirtualTextureProducerHandle& Handle)"
  },
  {
    "label": "AcquirePhysicalSpace()",
    "kind": "Method",
    "detail": "Function (FVirtualTexturePhysicalSpace*)",
    "insertText": "AcquirePhysicalSpace(FRHICommandListBase& RHICmdList, const FVTPhysicalSpaceDescription& InDesc)"
  },
  {
    "label": "GetSpace()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureSpace*)",
    "insertText": "GetSpace(uint8 ID)"
  },
  {
    "label": "GetAdaptiveVirtualTexture()",
    "kind": "Method",
    "detail": "Function (} FAdaptiveVirtualTexture*)",
    "insertText": "GetAdaptiveVirtualTexture(uint8 ID)"
  },
  {
    "label": "UnlockTile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockTile(const FVirtualTextureLocalTile& Tile, const FVirtualTextureProducer* Producer)"
  },
  {
    "label": "ForceUnlockAllTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceUnlockAllTiles(const FVirtualTextureProducerHandle& ProducerHandle, const FVirtualTextureProducer* Producer)"
  },
  {
    "label": "BeginUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUpdate(FRDGBuilder& GraphBuilder, FVirtualTextureUpdater* Updater)"
  },
  {
    "label": "AllocateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateResources(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "DestroyPendingVirtualTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPendingVirtualTextures(bool bForceDestroyAll)"
  },
  {
    "label": "ReleasePendingSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleasePendingSpaces()"
  },
  {
    "label": "RequestTilesForRegionInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTilesForRegionInternal(const IAllocatedVirtualTexture* AllocatedVT, const FVector2D& InScreenSpaceSize, const FVector2D& InViewportPosition, const FVector2D& InViewportSize, const FVector2D& InUV0, const FVector2D& InUV1, int32 InMipLevel)"
  },
  {
    "label": "RequestTilesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTilesInternal(const IAllocatedVirtualTexture* AllocatedVT, int32 InMipLevel)"
  },
  {
    "label": "RequestTilesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestTilesInternal(const IAllocatedVirtualTexture* AllocatedVT, const FVector2D& InScreenSpaceSize, int32 InMipLevel)"
  },
  {
    "label": "SubmitRequestsFromLocalTileList()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SubmitRequestsFromLocalTileList(FRHICommandList& RHICmdList, TArray<FVirtualTextureLocalTile>& OutDeferredTiles, const TSet<FVirtualTextureLocalTile>& LocalTileList, EVTProducePageFlags Flags, ERHIFeatureLevel::Type FeatureLevel, uint32 MaxRequestsToProduce)"
  },
  {
    "label": "GatherFeedbackRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherFeedbackRequests(FConcurrentLinearBulkObjectAllocator& Allocator, const FVirtualTextureUpdateSettings& Settings, const FVirtualTextureFeedback::FMapResult& FeedbackResult, FUniqueRequestList* MergedRequestList)"
  },
  {
    "label": "GatherLockedTileRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherLockedTileRequests(FUniqueRequestList* MergedRequestList)"
  },
  {
    "label": "GatherPackedTileRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherPackedTileRequests(FConcurrentLinearBulkObjectAllocator& Allocator, const FVirtualTextureUpdateSettings& Settings, FUniqueRequestList* MergedRequestList)"
  },
  {
    "label": "SubmitThrottledRequests()",
    "kind": "Method",
    "detail": "Function (enum class EUpdatePhase { Begin,End } ; void)",
    "insertText": "SubmitThrottledRequests(FRHICommandList& RHICmdList, FVirtualTextureUpdater* Updater, EUpdatePhase UpdatePhase)"
  },
  {
    "label": "SubmitRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitRequests(FRHICommandList& RHICmdList, ERHIFeatureLevel::Type FeatureLevel, FConcurrentLinearBulkObjectAllocator& Allocator, FVirtualTextureUpdateSettings const& Settings, FUniqueRequestList* RequestList, bool bAsync)"
  },
  {
    "label": "FinalizeRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeRequests(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "GatherRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherRequests(FUniqueRequestList* MergedRequestList, const FUniquePageList* UniquePageList, uint32 FrameRequested, FConcurrentLinearBulkObjectAllocator& Allocator, FVirtualTextureUpdateSettings const& Settings)"
  },
  {
    "label": "AddPageUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPageUpdate(FPageUpdateBuffer* Buffers, uint32 FlushCount, uint32 PhysicalSpaceID, uint16 pAddress)"
  },
  {
    "label": "FeedbackAnalysisTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FeedbackAnalysisTask(const FFeedbackAnalysisParameters& Parameters)"
  },
  {
    "label": "AddRequestedTilesTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRequestedTilesTask(const FAddRequestedTilesParameters& Parameters)"
  },
  {
    "label": "GatherRequestsTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherRequestsTask(const FGatherRequestsParameters& Parameters)"
  },
  {
    "label": "GetContinuousUpdatesToProduce()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetContinuousUpdatesToProduce(FUniqueRequestList const* RequestList, int32 MaxTilesToProduce, int32 MaxContinuousUpdates)"
  },
  {
    "label": "UpdateResidencyTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResidencyTracking()"
  },
  {
    "label": "GrowPhysicalPools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GrowPhysicalPools()"
  },
  {
    "label": "RecordPageRequests()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "RecordPageRequests(FUniquePageList const* UniquePageList, TSet<uint64>& OutPages)"
  },
  {
    "label": "FlushCachesFromConsole()",
    "kind": "Method",
    "detail": "Function (# endif uint32 Frame ; UE::FRecursiveMutex Mutex ; const uint32 MaxNumTasks = 1 6 ; const uint32 MaxSpaces = 1 6 ; uint32 NumAllocatedSpaces = 0 ; TUniquePtr<FVirtualTextureSpace> Spaces [ MaxSpaces ] ; TArray<FVirtualTexturePhysicalSpace*> PhysicalSpaces ; FVirtualTextureProducerCollection Producers ; TArray<IAllocatedVirtualTexture*> PendingDeleteAllocatedVTs ; TMap<FAllocatedVTDescription,FAllocatedVirtualTexture*> AllocatedVTs ; TArray<IAllocatedVirtualTexture*> AllocatedVTsToMap ; TMap<uint32,IAllocatedVirtualTexture*> PersistentVTMap ; FAdaptiveVirtualTexture* AdaptiveVTs [ MaxSpaces ] = { nullptr } ; bool bUpdating = false ; bool bFlushCaches ; void)",
    "insertText": "FlushCachesFromConsole()"
  },
  {
    "label": "DumpFromConsole()",
    "kind": "Method",
    "detail": "Function (FAutoConsoleCommand FlushCachesCommand ; void)",
    "insertText": "DumpFromConsole()"
  },
  {
    "label": "ListPhysicalPoolsFromConsole()",
    "kind": "Method",
    "detail": "Function (FAutoConsoleCommand DumpCommand ; void)",
    "insertText": "ListPhysicalPoolsFromConsole()"
  },
  {
    "label": "DumpPoolUsageFromConsole()",
    "kind": "Method",
    "detail": "Function (FAutoConsoleCommand ListPhysicalPools ; void)",
    "insertText": "DumpPoolUsageFromConsole()"
  },
  {
    "label": "SaveAllocatorImagesFromConsole()",
    "kind": "Method",
    "detail": "Function (FAutoConsoleCommand DumpPoolUsageCommand ; # if WITH_EDITOR void)",
    "insertText": "SaveAllocatorImagesFromConsole()"
  },
  {
    "label": "GetOnScreenMessages()",
    "kind": "Method",
    "detail": "Function (FAutoConsoleCommand SaveAllocatorImages ; # endif TArray<uint32> RequestedPackedTiles ; TArray<FVirtualTextureLocalTile> TilesToLock ; TArray<FVirtualTextureLocalTile> TilesToLockForNextFrame ; FTexturePageLocks TileLocks ; TSet<FVirtualTextureLocalTile> ContinuousUpdateTilesToProduce ; TSet<FVirtualTextureLocalTile> MappedTilesToProduce ; TArray<FVirtualTextureLocalTile> TransientCollectedPages ; TArray<IVirtualTextureFinalizer*> Finalizers ; # if WITH_EDITOR uint64 PageRequestRecordHandle ; TSet<uint64> PageRequestRecordBuffer ; # endif TArray<uint64> PageRequestPlaybackBuffer ; # if ! UE_BUILD_SHIPPING void)",
    "insertText": "GetOnScreenMessages(FCoreDelegates::FSeverityMessageMap& OutMessages)"
  },
  {
    "label": "DrawResidencyHud()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle OnScreenMessageDelegateHandle ; void)",
    "insertText": "DrawResidencyHud(class UCanvas*, class APlayerController*)"
  },
  {
    "label": "UpdateCsvStats()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle DrawResidencyHudDelegateHandle ; void)",
    "insertText": "UpdateCsvStats()"
  }
]