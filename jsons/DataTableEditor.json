[
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarBuilder"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SRowEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRowEditor"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataTable"
  },
  {
    "label": "FDataTableEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataTableEditor"
  },
  {
    "label": "SDataTableListViewRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDataTableListViewRow"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "FColumnWidth",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FColumnWidth"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" DataTableEditorUtils . h \" # include \" Delegates / Delegate . h \" # include \" EditorUndoClient . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" IDataTableEditor . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Kismet2 / StructureEditorUtils . h \" # include \" Math / Color . h \" # include \" Misc / Optional . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" Toolkits / IToolkit . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" Widgets / Views / SListView . h \" class FExtender ; class FJsonObject ; class FSpawnTabArgs ; class FToolBarBuilder ; class ITableRow ; class SDockTab ; class SRowEditor ; class SSearchBox ; class STableViewBase ; class SVerticalBox ; class SWidget ; class UDataTable ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRowHighlighted, FName)"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (class FDataTableEditor : public IDataTableEditor,public FEditorUndoClient,public FStructureEditorUtils::INotifyOnStructChanged,public FDataTableEditorUtils::INotifyOnDataTableChanged { class SDataTableListViewRow ; public : void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitDataTableEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDataTableEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, UDataTable* Table)"
  },
  {
    "label": "CanEditRows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditRows()"
  },
  {
    "label": "FDataTableEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDataTableEditor()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "HandleUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUndoRedo()"
  },
  {
    "label": "PreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreChange(const class UUserDefinedStruct* Struct, FStructureEditorUtils::EStructureEditorChangeInfo Info)"
  },
  {
    "label": "PostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostChange(const class UUserDefinedStruct* Struct, FStructureEditorUtils::EStructureEditorChangeInfo Info)"
  },
  {
    "label": "PreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreChange(const UDataTable* Changed, FDataTableEditorUtils::EDataTableChangeInfo Info)"
  },
  {
    "label": "PostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostChange(const UDataTable* Changed, FDataTableEditorUtils::EDataTableChangeInfo Info)"
  },
  {
    "label": "SelectionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectionChange(const UDataTable* Changed, FName RowName)"
  },
  {
    "label": "GetDataTable()",
    "kind": "Method",
    "detail": "Function (const UDataTable*)",
    "insertText": "GetDataTable()"
  },
  {
    "label": "HandlePostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePostChange()"
  },
  {
    "label": "SetHighlightedRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHighlightedRow(FName Name)"
  },
  {
    "label": "GetFilterText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterText()"
  },
  {
    "label": "GetRowTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetRowTextColor(FName RowName)"
  },
  {
    "label": "RefreshCachedDataTable()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RefreshCachedDataTable(const FName InCachedSelection = NAME_None, const bool bUpdateEvenIfValid = false)"
  },
  {
    "label": "UpdateVisibleRows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibleRows(const FName InCachedSelection = NAME_None, const bool bUpdateEvenIfValid = false)"
  },
  {
    "label": "RestoreCachedSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreCachedSelection(const FName InCachedSelection, const bool bUpdateEvenIfValid = false)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& NewText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "PostRegenerateMenusAndToolbars()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRegenerateMenusAndToolbars()"
  },
  {
    "label": "OnFindRowInContentBrowserClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFindRowInContentBrowserClicked()"
  },
  {
    "label": "GetCellText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCellText(FDataTableEditorRowListViewDataPtr InRowDataPointer, int32 ColumnIndex)"
  },
  {
    "label": "GetCellToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCellToolTipText(FDataTableEditorRowListViewDataPtr InRowDataPointer, int32 ColumnIndex)"
  },
  {
    "label": "CreateContentBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SVerticalBox>)",
    "insertText": "CreateContentBox()"
  },
  {
    "label": "CreateRowEditorBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateRowEditorBox()"
  },
  {
    "label": "CreateRowEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SRowEditor>)",
    "insertText": "CreateRowEditor(UDataTable* Table)"
  },
  {
    "label": "SpawnTab_DataTable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_DataTable(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_DataTableDetails()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_DataTableDetails(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_RowEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_RowEditor(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetRowNameColumnWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRowNameColumnWidth()"
  },
  {
    "label": "RefreshRowNameColumnWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRowNameColumnWidth()"
  },
  {
    "label": "GetRowNumberColumnWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRowNumberColumnWidth()"
  },
  {
    "label": "RefreshRowNumberColumnWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRowNumberColumnWidth()"
  },
  {
    "label": "GetColumnWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetColumnWidth(const int32 ColumnIndex)"
  },
  {
    "label": "OnColumnResized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnResized(const float NewWidth, const int32 ColumnIndex)"
  },
  {
    "label": "OnRowNameColumnResized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRowNameColumnResized(const float NewWidth)"
  },
  {
    "label": "OnRowNumberColumnResized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRowNumberColumnResized(const float NewWidth)"
  },
  {
    "label": "LoadLayoutData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadLayoutData()"
  },
  {
    "label": "SaveLayoutData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveLayoutData()"
  },
  {
    "label": "MakeRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeRowWidget(FDataTableEditorRowListViewDataPtr InRowDataPtr, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "MakeCellWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeCellWidget(FDataTableEditorRowListViewDataPtr InRowDataPtr, const int32 InRowIndex, const FName& InColumnId)"
  },
  {
    "label": "OnRowSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRowSelectionChanged(FDataTableEditorRowListViewDataPtr InNewSelection, ESelectInfo::Type InSelectInfo)"
  },
  {
    "label": "CopySelectedRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedRow()"
  },
  {
    "label": "PasteOnSelectedRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteOnSelectedRow()"
  },
  {
    "label": "DuplicateSelectedRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateSelectedRow()"
  },
  {
    "label": "RenameSelectedRowCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameSelectedRowCommand()"
  },
  {
    "label": "DeleteSelectedRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedRow()"
  },
  {
    "label": "CreateAndRegisterDataTableTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndRegisterDataTableTab(const TSharedRef<class FTabManager>& InTabManager)"
  },
  {
    "label": "CreateAndRegisterDataTableDetailsTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndRegisterDataTableDetailsTab(const TSharedRef<class FTabManager>& InTabManager)"
  },
  {
    "label": "CreateAndRegisterRowEditorTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndRegisterRowEditorTab(const TSharedRef<class FTabManager>& InTabManager)"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "OnAddClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddClicked()"
  },
  {
    "label": "OnRemoveClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveClicked()"
  },
  {
    "label": "OnMoveRowClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMoveRowClicked(FDataTableEditorUtils::ERowMoveDirection MoveDirection)"
  },
  {
    "label": "OnMoveToExtentClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMoveToExtentClicked(FDataTableEditorUtils::ERowMoveDirection MoveDirection)"
  },
  {
    "label": "OnCopyClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyClicked()"
  },
  {
    "label": "OnPasteClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteClicked()"
  },
  {
    "label": "OnDuplicateClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateClicked()"
  },
  {
    "label": "CanEditTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditTable()"
  },
  {
    "label": "SetDefaultSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultSort()"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode(const FName ColumnId)"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "OnColumnNumberSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnNumberSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "OnColumnNameSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnNameSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "OnEditDataTableStructClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditDataTableStructClicked()"
  },
  {
    "label": "ExtendToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolbar(TSharedPtr<FExtender> Extender)"
  },
  {
    "label": "FillToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillToolbar(FToolBarBuilder& ToolbarBuilder)"
  },
  {
    "label": "GetEditableDataTable()",
    "kind": "Method",
    "detail": "Function (private : UDataTable*)",
    "insertText": "GetEditableDataTable()"
  },
  {
    "label": "FColumnWidth()",
    "kind": "Method",
    "detail": "Function (protected : struct FColumnWidth {)",
    "insertText": "FColumnWidth() : bIsAutoSized(true) , CurrentWidth(0.0f)"
  }
]