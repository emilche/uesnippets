[
  {
    "label": "LoggedGenericAckReceived",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LoggedGenericAckReceived"
  },
  {
    "label": "AckedPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AckedPacket"
  },
  {
    "label": "RtcEventGenericAckReceived",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventGenericAckReceived"
  },
  {
    "label": "LoggedGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_GENERIC_ACK_RECEIVED_H_ # define LOGGING_RTC_EVENT_LOG_EVENTS_RTC_EVENT_GENERIC_ACK_RECEIVED_H_ # include<memory> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / rtc_event_log / rtc_event . h \" # include \" api / units / timestamp . h \" # include \" logging / rtc_event_log / events / rtc_event_field_encoding_parser . h \" namespace webrtc { struct LoggedGenericAckReceived {)",
    "insertText": "LoggedGenericAckReceived()"
  },
  {
    "label": "LoggedGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoggedGenericAckReceived(Timestamp timestamp, int64_t packet_number, int64_t acked_packet_number, absl::optional<int64_t> receive_acked_packet_time_ms) : timestamp(timestamp), packet_number(packet_number), acked_packet_number(acked_packet_number), receive_acked_packet_time_ms(receive_acked_packet_time_ms)"
  },
  {
    "label": "log_time_us()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "log_time_us()"
  },
  {
    "label": "log_time_ms()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "log_time_ms()"
  },
  {
    "label": "log_time()",
    "kind": "Method",
    "detail": "Function (} Timestamp)",
    "insertText": "log_time()"
  },
  {
    "label": "CreateLogs()",
    "kind": "Method",
    "detail": "Function (int64_t packet_number ; int64_t acked_packet_number ; absl::optional<int64_t> receive_acked_packet_time_ms ; } ; struct AckedPacket { int64_t packet_number ; absl::optional<int64_t> receive_acked_packet_time_ms ; } ; class RtcEventGenericAckReceived final : public RtcEvent { public : Type kType = Type::GenericAckReceived ; std::vector<std::unique_ptr<RtcEventGenericAckReceived>>)",
    "insertText": "CreateLogs(int64_t packet_number, const std::vector<AckedPacket>& acked_packets)"
  },
  {
    "label": "RtcEventGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtcEventGenericAckReceived()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<RtcEventGenericAckReceived>)",
    "insertText": "Copy()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "GetType()"
  },
  {
    "label": "RtcEventGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "RtcEventGenericAckReceived(const RtcEventGenericAckReceived& packet)"
  },
  {
    "label": "RtcEventGenericAckReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtcEventGenericAckReceived(int64_t timestamp_us, int64_t packet_number, int64_t acked_packet_number, absl::optional<int64_t> receive_acked_packet_time_ms)"
  }
]