[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "TimeIndexType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TimeIndexType"
  },
  {
    "label": "ISampleSelector()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_Abc_ISampleSelector_h # define Alembic_Abc_ISampleSelector_h # include<Alembic / Util / Export . h> # include<Alembic / Abc / Foundation . h> namespace Alembic { namespace Abc { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT ISampleSelector { public : enum TimeIndexType { kFloorIndex,kCeilIndex,kNearIndex } ;)",
    "insertText": "ISampleSelector() : m_requestedIndex( 0 ), m_requestedTime( 0.0 ), m_requestedTimeIndexType( kNearIndex)"
  },
  {
    "label": "ISampleSelector()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ISampleSelector(index_t iReqIdx ) : m_requestedIndex( iReqIdx ), m_requestedTime( 0.0 ), m_requestedTimeIndexType( kNearIndex)"
  },
  {
    "label": "ISampleSelector()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ISampleSelector(chrono_t iReqTime, TimeIndexType iReqIdxType = kNearIndex ) : m_requestedIndex( -1 ), m_requestedTime( iReqTime ), m_requestedTimeIndexType( iReqIdxType)"
  },
  {
    "label": "getRequestedIndex()",
    "kind": "Method",
    "detail": "Function (} index_t)",
    "insertText": "getRequestedIndex()"
  }
]