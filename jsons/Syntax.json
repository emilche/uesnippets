[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "Syntax",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Syntax"
  },
  {
    "label": "TypeSyntax",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypeSyntax"
  },
  {
    "label": "TypeDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypeDesc"
  },
  {
    "label": "ShaderPort",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderPort"
  },
  {
    "label": "Syntax",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Syntax"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "Punctuation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Punctuation"
  },
  {
    "label": "TypeSyntax",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TypeSyntax"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "registerTypeSyntax()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerTypeSyntax(const TypeDesc* type, TypeSyntaxPtr syntax)"
  },
  {
    "label": "registerReservedWords()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerReservedWords(const StringSet& names)"
  },
  {
    "label": "registerInvalidTokens()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerInvalidTokens(const StringMap& tokens)"
  },
  {
    "label": "Syntax()",
    "kind": "Method",
    "detail": "Function (constructor)",
    "insertText": "Syntax()"
  },
  {
    "label": "TypeSyntax()",
    "kind": "Method",
    "detail": "Function (constructor)",
    "insertText": "TypeSyntax(const string& name, const string& defaultValue, const string& uniformDefaultValue, \n               const string& typeAlias, const string& typeDefinition, const StringVec& members)"
  },
  {
    "label": "ScalarTypeSyntax()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScalarTypeSyntax(const string& name, const string& defaultValue, const string& uniformDefaultValue, \n                     const string& typeAlias = EMPTY_STRING, const string& typeDefinition = EMPTY_STRING)"
  },
  {
    "label": "StringTypeSyntax()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "StringTypeSyntax(const string& name, const string& defaultValue, const string& uniformDefaultValue,\n                     const string& typeAlias = EMPTY_STRING, const string& typeDefinition = EMPTY_STRING)"
  },
  {
    "label": "AggregateTypeSyntax()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AggregateTypeSyntax(const string& name, const string& defaultValue, const string& uniformDefaultValue,\n                        const string& typeAlias = EMPTY_STRING, const string& typeDefinition = EMPTY_STRING, \n                        const StringVec& members = EMPTY_MEMBERS)"
  }
]