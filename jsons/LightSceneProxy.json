[
  {
    "label": "ULightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULightComponent"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FViewMatrices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewMatrices"
  },
  {
    "label": "FLightRenderParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightRenderParameters"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FWholeSceneProjectedShadowInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWholeSceneProjectedShadowInitializer"
  },
  {
    "label": "FPerObjectProjectedShadowInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerObjectProjectedShadowInitializer"
  },
  {
    "label": "FShadowCascadeSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShadowCascadeSettings"
  },
  {
    "label": "FRHICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandList"
  },
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "UTextureLightProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureLightProfile"
  },
  {
    "label": "FTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture"
  },
  {
    "label": "ELightShaderParameterFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELightShaderParameterFlags"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FLightSceneProxyFixLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxyFixLayout"
  },
  {
    "label": "FLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxy"
  },
  {
    "label": "FStaticShadowDepthMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticShadowDepthMap"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "FStaticShadowDepthMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticShadowDepthMap"
  },
  {
    "label": "FLightSceneProxy()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FLightSceneProxy(const ULightComponent* InLightComponent)"
  },
  {
    "label": "FVector2D()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector2D(0, 0)"
  },
  {
    "label": "GetPosition()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPosition()"
  },
  {
    "label": "FSphere()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FSphere(FVector::ZeroVector, 0)"
  },
  {
    "label": "FSphere()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FSphere(FVector::ZeroVector, 0)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector(WorldToLight.M[0][0], WorldToLight.M[1][0], WorldToLight.M[2][0])"
  },
  {
    "label": "ApplyWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldOffset(FVector InOffset)"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetColor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetColor()"
  },
  {
    "label": "GetSunOnEarthHalfApexAngleRadian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetSunOnEarthHalfApexAngleRadian()"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransform(const FMatrix& InLightToWorld, const FVector4& InPosition)"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor(const FLinearColor& InColor)"
  }
]