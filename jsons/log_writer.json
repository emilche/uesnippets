[
  {
    "label": "LogWriterFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogWriterFactoryInterface"
  },
  {
    "label": "LogWriterFactoryAddPrefix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LogWriterFactoryAddPrefix"
  },
  {
    "label": "LogWriteFormat()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_LOGGING_LOG_WRITER_H_ # define TEST_LOGGING_LOG_WRITER_H_ # include<stdarg . h> # include<memory> # include<string> # include<utility> # include \" absl / strings / string_view . h \" # include \" api / rtc_event_log_output . h \" # include \" rtc_base / strings / string_builder . h \" namespace webrtc { template<class . . . Args> void)",
    "insertText": "LogWriteFormat(RtcEventLogOutput* out_, const char* fmt, ...)"
  },
  {
    "label": "va_start()",
    "kind": "Method",
    "detail": "Function (va_list args,copy ;)",
    "insertText": "va_start(args, fmt)"
  },
  {
    "label": "va_copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "va_copy(copy, args)"
  },
  {
    "label": "vsnprintf()",
    "kind": "Method",
    "detail": "Function (const int predicted_length =)",
    "insertText": "vsnprintf(nullptr, 0, fmt, copy)"
  },
  {
    "label": "va_end()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "va_end(copy)"
  },
  {
    "label": "RTC_DCHECK_GE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_GE(predicted_length, 0)"
  },
  {
    "label": "out_str()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "out_str(predicted_length, '\\0')"
  },
  {
    "label": "vsnprintf()",
    "kind": "Method",
    "detail": "Function (const int actual_length =)",
    "insertText": "vsnprintf(&out_str.front(), predicted_length + 1, fmt, args)"
  },
  {
    "label": "RTC_DCHECK_GE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK_GE(actual_length, 0)"
  },
  {
    "label": "va_end()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "va_end(args)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (out_ ->)",
    "insertText": "Write(out_str)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} class LogWriterFactoryInterface { public : std::unique_ptr<RtcEventLogOutput>)",
    "insertText": "Create(absl::string_view filename)"
  },
  {
    "label": "LogWriterFactoryInterface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "LogWriterFactoryInterface()"
  },
  {
    "label": "LogWriterFactoryAddPrefix()",
    "kind": "Method",
    "detail": "Function (} ; class LogWriterFactoryAddPrefix : public LogWriterFactoryInterface { public :)",
    "insertText": "LogWriterFactoryAddPrefix(LogWriterFactoryInterface* base, absl::string_view prefix)"
  }
]