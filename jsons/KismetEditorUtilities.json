[
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "IBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBlueprintEditor"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FKismetEditorUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetEditorUtilities"
  },
  {
    "label": "FDefaultEventNodeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDefaultEventNodeData"
  },
  {
    "label": "FOnBlueprintCreatedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnBlueprintCreatedData"
  },
  {
    "label": "EBlueprintType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlueprintType"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "FAddComponentsToBlueprintParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddComponentsToBlueprintParams"
  },
  {
    "label": "FAddActorsToBlueprintParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddActorsToBlueprintParams"
  },
  {
    "label": "FCreateBlueprintFromActorParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateBlueprintFromActorParams"
  },
  {
    "label": "FCreateBlueprintFromActorsParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateBlueprintFromActorsParams"
  },
  {
    "label": "FHarvestBlueprintFromActorsParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHarvestBlueprintFromActorsParams"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "UK2Node_ActorBoundEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_ActorBoundEvent"
  },
  {
    "label": "UK2Node_ComponentBoundEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_ComponentBoundEvent"
  },
  {
    "label": "UK2Node_Tunnel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Tunnel"
  },
  {
    "label": "UK2Node_Event",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_Event"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" UObject / Class . h \" # include \" Templates / SubclassOf . h \" # include \" GameFramework / Actor . h \" # include \" Engine / Blueprint . h \" # include \" Engine / BlueprintGeneratedClass . h \" class UToolMenu ; class IBlueprintEditor ; class UEdGraph ; class USCS_Node ; struct Rect ; enum class EBlueprintBytecodeRecompileOptions { None = 0 x0,BatchCompile = 0 x1,SkipReinstancing = 0 x2 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EBlueprintBytecodeRecompileOptions)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (None = 0 x0,IsRegeneratingOnLoad = 0 x1,SkipGarbageCollection = 0 x2,SaveIntermediateProducts = 0 x4,SkeletonUpToDate = 0 x8,BatchCompile = 0 x10,SkipSave = 0 x20,SkipReinstancing = 0 x40,RegenerateSkeletonOnly = 0 x80,SkipDefaultObjectValidation = 0 x100,SkipFiBSearchMetaUpdate = 0 x200,UseDeltaSerializationDuringReinstancing = 0 x400,SkipNewVariableDefaultsDetection = 0 x800,IncludeCDOInReferenceReplacement = 0 x1000,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EBlueprintCompileOptions)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnBlueprintCreated, UBlueprint*)"
  },
  {
    "label": "CreateBlueprint()",
    "kind": "Method",
    "detail": "Function (struct FDefaultEventNodeData { UClass* TargetClass ; FName EventName ; } ; struct FOnBlueprintCreatedData { UClass* TargetClass ; FOnBlueprintCreated OnBlueprintCreated ; } ; UBlueprint*)",
    "insertText": "CreateBlueprint(UClass* ParentClass, UObject* Outer, const FName NewBPName, enum EBlueprintType BlueprintType, FName CallingContext = NAME_None)"
  },
  {
    "label": "CreateBlueprint()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "CreateBlueprint(UClass* ParentClass, UObject* Outer, const FName NewBPName, enum EBlueprintType BlueprintType, TSubclassOf<UBlueprint> BlueprintClassType, TSubclassOf<UBlueprintGeneratedClass> BlueprintGeneratedClassType, FName CallingContext = NAME_None)"
  },
  {
    "label": "CreateUserConstructionScript()",
    "kind": "Method",
    "detail": "Function (UEdGraph*)",
    "insertText": "CreateUserConstructionScript(UBlueprint* Blueprint)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnBlueprintUnloaded, UBlueprint*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnBlueprintUnloaded OnBlueprintUnloaded ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnBlueprintGeneratedClassUnloaded, UBlueprintGeneratedClass*)"
  },
  {
    "label": "ReplaceBlueprint()",
    "kind": "Method",
    "detail": "Function (FOnBlueprintGeneratedClassUnloaded OnBlueprintGeneratedClassUnloaded ; UBlueprint*)",
    "insertText": "ReplaceBlueprint(UBlueprint* Target, UBlueprint const* Replacement)"
  },
  {
    "label": "IsReferencedByUndoBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReferencedByUndoBuffer(UBlueprint* Blueprint)"
  },
  {
    "label": "CreateDefaultEventGraphs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultEventGraphs(UBlueprint* Blueprint)"
  },
  {
    "label": "CompileBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileBlueprint(UBlueprint* BlueprintObj, EBlueprintCompileOptions CompileFlags = EBlueprintCompileOptions::None, class FCompilerResultsLog* pResults = nullptr)"
  },
  {
    "label": "GenerateBlueprintSkeleton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateBlueprintSkeleton(UBlueprint* BlueprintObj, bool bForceRegeneration = false)"
  },
  {
    "label": "ConformBlueprintFlagsAndComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformBlueprintFlagsAndComponents(UBlueprint* BlueprintObj)"
  },
  {
    "label": "CanCreateBlueprintOfClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateBlueprintOfClass(const UClass* Class)"
  },
  {
    "label": "IdentifyRootActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IdentifyRootActors(const TArray<AActor*>& Actors, TArray<AActor*>& RootActors, TMap<AActor*, TArray<AActor*>>* AttachmentMap = nullptr)"
  },
  {
    "label": "FAddComponentsToBlueprintParams()",
    "kind": "Method",
    "detail": "Function (enum class EAddComponentToBPHarvestMode : uint8 { None,Harvest_UseComponentName,Havest_AppendOwnerName } ; struct FAddComponentsToBlueprintParams {)",
    "insertText": "FAddComponentsToBlueprintParams() : HarvestMode(EAddComponentToBPHarvestMode::None) , bKeepMobility(false) , OptionalNewRootNode(nullptr) , OutNodes(nullptr)"
  },
  {
    "label": "AddComponentsToBlueprint()",
    "kind": "Method",
    "detail": "Function (} EAddComponentToBPHarvestMode HarvestMode ; bool bKeepMobility ; USCS_Node* OptionalNewRootNode ; TArray<USCS_Node*>* OutNodes ; } ; void)",
    "insertText": "AddComponentsToBlueprint(UBlueprint* Blueprint, const TArray<UActorComponent*>& Components, const FAddComponentsToBlueprintParams& Params = FAddComponentsToBlueprintParams())"
  },
  {
    "label": "FAddActorsToBlueprintParams()",
    "kind": "Method",
    "detail": "Function (struct FAddActorsToBlueprintParams {)",
    "insertText": "FAddActorsToBlueprintParams() : bReplaceActors(true) , bDeferCompilation(false) , AttachNode(nullptr) , RelativeToInstance(nullptr)"
  },
  {
    "label": "AddActorsToBlueprint()",
    "kind": "Method",
    "detail": "Function (} bool bReplaceActors ; bool bDeferCompilation ; USCS_Node* AttachNode ; AActor* RelativeToInstance ; FTransform RelativeToTransform ; } ; void)",
    "insertText": "AddActorsToBlueprint(UBlueprint* Blueprint, const TArray<AActor*>& Actors, const FAddActorsToBlueprintParams& Params = FAddActorsToBlueprintParams())"
  },
  {
    "label": "FCreateBlueprintFromActorParams()",
    "kind": "Method",
    "detail": "Function (struct FCreateBlueprintFromActorParams {)",
    "insertText": "FCreateBlueprintFromActorParams() : bReplaceActor(true) , bKeepMobility(false) , bDeferCompilation(false) , bOpenBlueprint(true) , ParentClassOverride(nullptr)"
  },
  {
    "label": "CreateBlueprintFromActor()",
    "kind": "Method",
    "detail": "Function (} bool bReplaceActor ; bool bKeepMobility ; bool bDeferCompilation ; bool bOpenBlueprint ; UClass* ParentClassOverride ; } ; UBlueprint*)",
    "insertText": "CreateBlueprintFromActor(const FString& Path, AActor* Actor, const FCreateBlueprintFromActorParams& Params = FCreateBlueprintFromActorParams())"
  },
  {
    "label": "CreateBlueprintFromActor()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "CreateBlueprintFromActor(const FName BlueprintName, UObject* Outer, AActor* Actor, const FCreateBlueprintFromActorParams& Params = FCreateBlueprintFromActorParams())"
  },
  {
    "label": "FCreateBlueprintFromActorsParams()",
    "kind": "Method",
    "detail": "Function (struct FCreateBlueprintFromActorsParams {)",
    "insertText": "FCreateBlueprintFromActorsParams(const TArray<AActor*>& Actors) : RootActor(nullptr) , AdditionalActors(Actors) , bReplaceActors(true) , bDeferCompilation(false) , bOpenBlueprint(true) , ParentClass(AActor::StaticClass())"
  },
  {
    "label": "FCreateBlueprintFromActorsParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCreateBlueprintFromActorsParams(AActor* RootActor, const TArray<AActor*>& ChildActors) : RootActor(RootActor) , AdditionalActors(ChildActors) , bReplaceActors(true) , bDeferCompilation(false) , bOpenBlueprint(true) , ParentClass(RootActor->GetClass())"
  },
  {
    "label": "CreateBlueprintFromActors()",
    "kind": "Method",
    "detail": "Function (} AActor* RootActor ; const TArray<AActor*>& AdditionalActors ; bool bReplaceActors ; bool bDeferCompilation ; bool bOpenBlueprint ; UClass* ParentClass ; } ; UBlueprint*)",
    "insertText": "CreateBlueprintFromActors(const FString& Path, const FCreateBlueprintFromActorsParams& Params)"
  },
  {
    "label": "CreateBlueprintFromActors()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "CreateBlueprintFromActors(const FName BlueprintName, UPackage* Package, const FCreateBlueprintFromActorsParams& Params)"
  },
  {
    "label": "FHarvestBlueprintFromActorsParams()",
    "kind": "Method",
    "detail": "Function (struct FHarvestBlueprintFromActorsParams {)",
    "insertText": "FHarvestBlueprintFromActorsParams() : bReplaceActors(true) , bOpenBlueprint(true) , ParentClass(AActor::StaticClass())"
  },
  {
    "label": "HarvestBlueprintFromActors()",
    "kind": "Method",
    "detail": "Function (} bool bReplaceActors ; bool bOpenBlueprint ; UClass* ParentClass ; } ; UBlueprint*)",
    "insertText": "HarvestBlueprintFromActors(const FString& Path, const TArray<AActor*>& Actors, const FHarvestBlueprintFromActorsParams& Params = FHarvestBlueprintFromActorsParams())"
  },
  {
    "label": "HarvestBlueprintFromActors()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "HarvestBlueprintFromActors(const FName BlueprintName, UPackage* Package, const TArray<AActor*>& Actors, const FHarvestBlueprintFromActorsParams& Params = FHarvestBlueprintFromActorsParams())"
  },
  {
    "label": "UpdateExistingBlueprintFromActors()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "UpdateExistingBlueprintFromActors(const FString& Path, const TArray<AActor*>& Actors)"
  },
  {
    "label": "ApplyInstanceChangesToBlueprint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ApplyInstanceChangesToBlueprint(AActor* Actor)"
  },
  {
    "label": "CreateBlueprintInstanceFromSelection()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "CreateBlueprintInstanceFromSelection(class UBlueprint* Blueprint, const TArray<AActor*>& SelectedActors, const FVector& Location, const FRotator& Rotator, AActor* AttachParent = nullptr)"
  },
  {
    "label": "CreateBlueprintFromClass()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "CreateBlueprintFromClass(FText InWindowTitle, UClass* InParentClass, FString NewNameSuggestion = TEXT(\"\"))"
  },
  {
    "label": "CreateBlueprintUsingAsset()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "CreateBlueprintUsingAsset(UObject* Asset, bool bOpenInEditor)"
  },
  {
    "label": "BringKismetToFocusAttentionOnObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringKismetToFocusAttentionOnObject(const UObject* ObjectToFocusOn, bool bRequestRename=false)"
  },
  {
    "label": "BringKismetToFocusAttentionOnPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringKismetToFocusAttentionOnPin(const UEdGraphPin* PinToFocusOn)"
  },
  {
    "label": "ShowActorReferencesInLevelScript()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowActorReferencesInLevelScript(const AActor* Actor)"
  },
  {
    "label": "UpgradeCosmeticallyStaleBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpgradeCosmeticallyStaleBlueprint(UBlueprint* Blueprint)"
  },
  {
    "label": "CreateNewBoundEventForActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewBoundEventForActor(AActor* Actor, FName EventName)"
  },
  {
    "label": "CreateNewBoundEventForComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewBoundEventForComponent(UObject* Component, FName EventName, UBlueprint* Blueprint, FObjectProperty* ComponentProperty)"
  },
  {
    "label": "CreateNewBoundEventForClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewBoundEventForClass(UClass* Class, FName EventName, UBlueprint* Blueprint, FObjectProperty* ComponentProperty)"
  },
  {
    "label": "CanPasteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteNodes(const class UEdGraph* Graph)"
  },
  {
    "label": "PasteNodesHere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodesHere(class UEdGraph* Graph, const FVector2D& Location)"
  },
  {
    "label": "GetBoundsForSelectedNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBoundsForSelectedNodes(const class UBlueprint* Blueprint, class FSlateRect& Rect, float Padding = 0.0f)"
  },
  {
    "label": "GetNumberOfSelectedNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfSelectedNodes(const class UBlueprint* Blueprint)"
  },
  {
    "label": "FindBoundEventForActor()",
    "kind": "Method",
    "detail": "Function (const class UK2Node_ActorBoundEvent*)",
    "insertText": "FindBoundEventForActor(AActor const* Actor, FName EventName)"
  },
  {
    "label": "FindBoundEventForComponent()",
    "kind": "Method",
    "detail": "Function (const class UK2Node_ComponentBoundEvent*)",
    "insertText": "FindBoundEventForComponent(const UBlueprint* Blueprint, FName EventName, FName PropertyName)"
  },
  {
    "label": "FindAllBoundEventsForComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAllBoundEventsForComponent(const UBlueprint* Blueprint, FName PropertyName, TArray<UK2Node_ComponentBoundEvent*>& OutNodes)"
  },
  {
    "label": "PropertyHasBoundEvents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PropertyHasBoundEvents(const UBlueprint* Blueprint, FName PropertyName)"
  },
  {
    "label": "IsClassABlueprintInterface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassABlueprintInterface(const UClass* Class)"
  },
  {
    "label": "IsClassABlueprintImplementableInterface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassABlueprintImplementableInterface(const UClass* Class)"
  },
  {
    "label": "CanBlueprintImplementInterface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBlueprintImplementInterface(UBlueprint const* Blueprint, UClass const* Class)"
  },
  {
    "label": "IsClassABlueprintSkeleton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassABlueprintSkeleton(const UClass* Class)"
  },
  {
    "label": "IsClassABlueprintSpawnableComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassABlueprintSpawnableComponent(const UClass* Class)"
  },
  {
    "label": "IsClassABlueprintMacroLibrary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassABlueprintMacroLibrary(const UClass* Class)"
  },
  {
    "label": "StripExternalComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripExternalComponents(class UBlueprint* Blueprint)"
  },
  {
    "label": "IsActorValidForLevelScript()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorValidForLevelScript(const AActor* Actor)"
  },
  {
    "label": "AnyBoundLevelScriptEventForActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyBoundLevelScriptEventForActor(AActor* Actor, bool bCouldAddAny)"
  },
  {
    "label": "AddLevelScriptEventOptionsForActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLevelScriptEventOptionsForActor(UToolMenu* Menu, TWeakObjectPtr<AActor> ActorPtr, bool bExistingEvents, bool bNewEvents, bool bOnlyEventName)"
  },
  {
    "label": "GetInformationOnMacro()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInformationOnMacro(UEdGraph* MacroGraph, class UK2Node_Tunnel*& EntryNode, class UK2Node_Tunnel*& ExitNode, bool& bIsPure)"
  },
  {
    "label": "AddInterfaceTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInterfaceTags(const UBlueprint* Blueprint, TArray<UObject::FAssetRegistryTag>& OutTags)"
  },
  {
    "label": "AddDefaultEventNode()",
    "kind": "Method",
    "detail": "Function (class UK2Node_Event*)",
    "insertText": "AddDefaultEventNode(UBlueprint* InBlueprint, UEdGraph* InGraph, FName InEventName, UClass* InEventClass, int32& InOutNodePosY)"
  },
  {
    "label": "RegisterAutoGeneratedDefaultEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAutoGeneratedDefaultEvent(void* InOwner, UClass* InTargetClass, FName InEventName)"
  },
  {
    "label": "RegisterOnBlueprintCreatedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterOnBlueprintCreatedCallback(void* InOwner, UClass* InTargetClass, FOnBlueprintCreated InOnBlueprintCreatedCallback)"
  },
  {
    "label": "UnregisterAutoBlueprintNodeCreation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAutoBlueprintNodeCreation(void* InOwner)"
  },
  {
    "label": "AddToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToSelection(const class UEdGraph* Graph, UEdGraphNode* InNode)"
  },
  {
    "label": "GetIBlueprintEditorForObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IBlueprintEditor>)",
    "insertText": "GetIBlueprintEditorForObject(const UObject* ObjectToFocusOn, bool bOpenEditor)"
  },
  {
    "label": "IsTrackedBlueprintParent()",
    "kind": "Method",
    "detail": "Function (private : bool bIsListeningForClicksOnKismetLog ; TArray<FString> TrackedBlueprintParentList ; TMultiMap<void*,FDefaultEventNodeData> AutoGeneratedDefaultEventsMap ; TMultiMap<void*,FOnBlueprintCreatedData> OnBlueprintCreatedCallbacks ; private : bool)",
    "insertText": "IsTrackedBlueprintParent(const UClass* ParentClass)"
  },
  {
    "label": "FKismetEditorUtilities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FKismetEditorUtilities()"
  }
]