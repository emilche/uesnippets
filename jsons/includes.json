[
  {
    "label": "_Iter1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Iter1"
  },
  {
    "label": "_Sent1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Sent1"
  },
  {
    "label": "_Iter2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Iter2"
  },
  {
    "label": "_Sent2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Sent2"
  },
  {
    "label": "_Comp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Comp"
  },
  {
    "label": "_Proj1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Proj1"
  },
  {
    "label": "_Proj2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Proj2"
  },
  {
    "label": "_InputIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator1"
  },
  {
    "label": "_InputIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator2"
  },
  {
    "label": "_Compare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Compare"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_INCLUDES_H # define _LIBCPP___ALGORITHM_INCLUDES_H # include<__algorithm / comp . h> # include<__algorithm / comp_ref_type . h> # include<__config> # include<__functional / identity . h> # include<__functional / invoke . h> # include<__iterator / iterator_traits . h> # include<__type_traits / is_callable . h> # include<__utility / move . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _Iter1, class _Sent1, class _Iter2, class _Sent2, class _Comp, class _Proj1, class _Proj2> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 bool __includes(_Iter1 __first1, _Sent1 __last1, _Iter2 __first2, _Sent2 __last2, _Comp&& __comp, _Proj1&& __proj1, _Proj2&& __proj2)"
  },
  {
    "label": "includes()",
    "kind": "Method",
    "detail": "Function (} return true ; } template<class _InputIterator1,class _InputIterator2,class _Compare> _LIBCPP_NODISCARD_EXT _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "includes(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _Compare __comp)"
  },
  {
    "label": "__includes()",
    "kind": "Method",
    "detail": "Function (typedef __comp_ref_type<_Compare>::type _Comp_ref ; return)",
    "insertText": "__includes(std::move(__first1), std::move(__last1), std::move(__first2), std::move(__last2), static_cast<_Comp_ref>(__comp), __identity(), __identity())"
  },
  {
    "label": "includes()",
    "kind": "Method",
    "detail": "Function (} template<class _InputIterator1,class _InputIterator2> _LIBCPP_NODISCARD_EXT _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "includes(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)"
  }
]