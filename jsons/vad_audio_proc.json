[
  {
    "label": "PoleZeroFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PoleZeroFilter"
  },
  {
    "label": "VadAudioProc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VadAudioProc"
  },
  {
    "label": "PitchAnalysisStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PitchAnalysisStruct"
  },
  {
    "label": "PreFiltBankstr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PreFiltBankstr"
  },
  {
    "label": "VadAudioProc()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_VAD_VAD_AUDIO_PROC_H_ # define MODULES_AUDIO_PROCESSING_VAD_VAD_AUDIO_PROC_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" modules / audio_processing / vad / common . h \" namespace webrtc { class PoleZeroFilter ; class VadAudioProc { public : struct PitchAnalysisStruct ; struct PreFiltBankstr ;)",
    "insertText": "VadAudioProc()"
  },
  {
    "label": "ExtractFeatures()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ExtractFeatures(const int16_t* audio_frame, size_t length, AudioFeatures* audio_features)"
  },
  {
    "label": "PitchAnalysis()",
    "kind": "Method",
    "detail": "Function (size_t kDftSize = 5 1 2 ; private : void)",
    "insertText": "PitchAnalysis(double* pitch_gains, double* pitch_lags_hz, size_t length)"
  },
  {
    "label": "SubframeCorrelation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubframeCorrelation(double* corr, size_t length_corr, size_t subframe_index)"
  },
  {
    "label": "GetLpcPolynomials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLpcPolynomials(double* lpc, size_t length_lpc)"
  },
  {
    "label": "FindFirstSpectralPeaks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindFirstSpectralPeaks(double* f_peak, size_t length_f_peak)"
  },
  {
    "label": "Rms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rms(double* rms, size_t length_rms)"
  },
  {
    "label": "ResetBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBuffer()"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (size_t kNumPastSignalSamples = static_cast<)",
    "insertText": "size_t(kSampleRateHz / 200)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (int kNoError = 0 ; size_t kNum10msSubframes = 3 ; size_t kNumSubframeSamples = static_cast<)",
    "insertText": "size_t(kSampleRateHz / 100)"
  }
]