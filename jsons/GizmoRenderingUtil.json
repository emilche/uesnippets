[
  {
    "label": "IToolsContextRenderAPI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolsContextRenderAPI"
  },
  {
    "label": "UGizmoViewContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoViewContext"
  },
  {
    "label": "UInteractiveGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveGizmo"
  },
  {
    "label": "UInteractiveGizmoManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveGizmoManager"
  },
  {
    "label": "UInteractiveToolManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveToolManager"
  },
  {
    "label": "UViewAdjustedStaticMeshGizmoComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewAdjustedStaticMeshGizmoComponent"
  },
  {
    "label": "ISceneViewInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneViewInterface"
  },
  {
    "label": "FSceneViewWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewWrapper"
  },
  {
    "label": "GetUnscaledViewRect()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Components / PrimitiveComponent . h \" # include \" SceneView . h \" class IToolsContextRenderAPI ; class UGizmoViewContext ; class UInteractiveGizmo ; class UInteractiveGizmoManager ; class UInteractiveToolManager ; class UViewAdjustedStaticMeshGizmoComponent ; namespace UE::GizmoRenderingUtil { class ISceneViewInterface { public : const FIntRect&)",
    "insertText": "GetUnscaledViewRect()"
  },
  {
    "label": "WorldToScreen()",
    "kind": "Method",
    "detail": "Function (FVector4)",
    "insertText": "WorldToScreen(const FVector&)"
  },
  {
    "label": "GetViewLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetViewLocation()"
  },
  {
    "label": "GetViewDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetViewDirection()"
  },
  {
    "label": "GetViewRight()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetViewRight()"
  },
  {
    "label": "GetViewUp()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetViewUp()"
  },
  {
    "label": "GetViewMatrix()",
    "kind": "Method",
    "detail": "Function (const FMatrix&)",
    "insertText": "GetViewMatrix()"
  },
  {
    "label": "IsPerspectiveProjection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPerspectiveProjection()"
  },
  {
    "label": "FSceneViewWrapper()",
    "kind": "Method",
    "detail": "Function (} ; class FSceneViewWrapper : public ISceneViewInterface { public :)",
    "insertText": "FSceneViewWrapper(const FSceneView& SceneView)"
  },
  {
    "label": "GetDefaultGizmoComponentMaterial()",
    "kind": "Method",
    "detail": "Function (} private : const FSceneView* View ; } ; const int32 GIZMO_TRANSLUCENCY_SORT_PRIORITY = 5 0 0 0 ; UMaterialInterface*)",
    "insertText": "GetDefaultGizmoComponentMaterial(const FLinearColor& Color, UObject* Outer = nullptr)"
  },
  {
    "label": "CreateDefaultMaterialGizmoMeshComponent()",
    "kind": "Method",
    "detail": "Function (UViewAdjustedStaticMeshGizmoComponent*)",
    "insertText": "CreateDefaultMaterialGizmoMeshComponent(UStaticMesh* Mesh, UGizmoViewContext* GizmoViewContext, UObject* OwnerComponentOrActor, const FLinearColor& Color, bool bAddHoverMaterial = true)"
  },
  {
    "label": "CreateDefaultMaterialGizmoMeshComponent()",
    "kind": "Method",
    "detail": "Function (UViewAdjustedStaticMeshGizmoComponent*)",
    "insertText": "CreateDefaultMaterialGizmoMeshComponent(UStaticMesh* Mesh, UInteractiveGizmoManager* GizmoManager, UObject* OwnerComponentOrActor, const FLinearColor& Color, bool bAddHoverMaterial = true)"
  },
  {
    "label": "GetDefaultAxisColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetDefaultAxisColor(EAxis::Type Axis)"
  },
  {
    "label": "CalculateLocalPixelToWorldScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateLocalPixelToWorldScale(const FSceneView* View, const FVector& Location)"
  },
  {
    "label": "CalculateLocalPixelToWorldScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateLocalPixelToWorldScale(const UE::GizmoRenderingUtil::ISceneViewInterface* View, const FVector& Location)"
  },
  {
    "label": "CalculateViewDependentScaleAndFlatten()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateViewDependentScaleAndFlatten(const FSceneView* View, const FVector& Location, const float Scale, FVector& OutWorldFlattenScale)"
  }
]