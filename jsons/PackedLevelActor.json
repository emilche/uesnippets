[
  {
    "label": "UInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedStaticMeshComponent"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "APackedLevelActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APackedLevelActor"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" LevelInstance / LevelInstanceActor . h \" # if WITH_EDITOR # include \" Kismet2 / ComponentEditorUtils . h \" # endif # include \" PackedLevelActor . generated . h \" class UInstancedStaticMeshComponent ; class UBlueprint ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API APackedLevelActor()"
  },
  {
    "label": "IsLoadingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoadingEnabled()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetDetailsFilterTypes()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR EWorldPartitionActorFilterType)",
    "insertText": "GetDetailsFilterTypes()"
  },
  {
    "label": "GetLoadingFilterTypes()",
    "kind": "Method",
    "detail": "Function (EWorldPartitionActorFilterType)",
    "insertText": "GetLoadingFilterTypes()"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "SetShouldLoadForPacking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldLoadForPacking(bool bInLoadForPacking)"
  },
  {
    "label": "ShouldLoadForPacking()",
    "kind": "Method",
    "detail": "Function (bLoadForPacking = bInLoadForPacking ; } bool)",
    "insertText": "ShouldLoadForPacking()"
  },
  {
    "label": "SupportsPartialEditorLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsPartialEditorLoading()"
  },
  {
    "label": "GetPackedComponentTag()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetPackedComponentTag()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "UpdateLevelInstanceFromWorldAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLevelInstanceFromWorldAsset()"
  },
  {
    "label": "OnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommit(bool bChanged)"
  },
  {
    "label": "OnCommitChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitChild(bool bChanged)"
  },
  {
    "label": "OnEdit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEdit()"
  },
  {
    "label": "OnEditChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditChild()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "SetPackedVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPackedVersion(const FGuid& InVersion)"
  },
  {
    "label": "GetPackedHash()",
    "kind": "Method",
    "detail": "Function (PackedVersion = InVersion ; } uint32)",
    "insertText": "GetPackedHash()"
  },
  {
    "label": "IsHiddenEd()",
    "kind": "Method",
    "detail": "Function (PackedHash = InHash ; } bool)",
    "insertText": "IsHiddenEd()"
  },
  {
    "label": "IsHLODRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHLODRelevant()"
  },
  {
    "label": "DestroyPackedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPackedComponents()"
  },
  {
    "label": "GetPackedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPackedComponents(TArray<UActorComponent*>& OutPackedComponents)"
  },
  {
    "label": "GetDefaultRuntimeBehavior()",
    "kind": "Method",
    "detail": "Function (ELevelInstanceRuntimeBehavior)",
    "insertText": "GetDefaultRuntimeBehavior()"
  },
  {
    "label": "IsRootBlueprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRootBlueprint(UClass* InClass)"
  },
  {
    "label": "IsRootBlueprintTemplate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRootBlueprintTemplate()"
  },
  {
    "label": "GetRootBlueprint()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "GetRootBlueprint()"
  },
  {
    "label": "AddPackedComponent()",
    "kind": "Method",
    "detail": "Function (template<class T> T*)",
    "insertText": "AddPackedComponent(TSubclassOf<T> ComponentClass)"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Modify()"
  },
  {
    "label": "GenerateValidVariableName()",
    "kind": "Method",
    "detail": "Function (FName NewComponentName =*)",
    "insertText": "GenerateValidVariableName(ComponentClass, this)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* NewComponent = NewObject<)",
    "insertText": "T(this, ComponentClass, NewComponentName, RF_Transactional)"
  },
  {
    "label": "AddInstanceComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstanceComponent(NewComponent)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (NewComponent -> ComponentTags .)",
    "insertText": "Add(GetPackedComponentTag())"
  },
  {
    "label": "ShouldCookWorldAsset()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR bool)",
    "insertText": "ShouldCookWorldAsset()"
  }
]