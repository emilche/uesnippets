[
  {
    "label": "FEyeAdaptationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEyeAdaptationParameters"
  },
  {
    "label": "FLocalExposureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalExposureParameters"
  },
  {
    "label": "FRDGBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuffer"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FRDGTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGTexture"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FFFTBloomOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFFTBloomOutput"
  },
  {
    "label": "IsFFTBloomEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / MathFwd . h \" # include \" ScreenPass . h \" class FEyeAdaptationParameters ; class FLocalExposureParameters ; class FRDGBuffer ; class FRDGBuilder ; class FRDGTexture ; class FViewInfo ; using FRDGBufferRef = FRDGBuffer* ; using FRDGTextureRef = FRDGTexture* ; bool)",
    "insertText": "IsFFTBloomEnabled(const FViewInfo& View)"
  },
  {
    "label": "GetFFTBloomResolutionFraction()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFFTBloomResolutionFraction(const FIntPoint& ViewSize)"
  },
  {
    "label": "AddFFTBloomPass()",
    "kind": "Method",
    "detail": "Function (struct FFFTBloomOutput { FScreenPassTexture BloomTexture ; FRDGBufferRef SceneColorApplyParameters = nullptr ; } ; FFFTBloomOutput)",
    "insertText": "AddFFTBloomPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FScreenPassTextureSlice& InputSceneColor, float InputResolutionFraction, const FEyeAdaptationParameters& EyeAdaptationParameters, FRDGBufferRef EyeAdaptationBuffer, const FLocalExposureParameters& LocalExposureParameters, FRDGTextureRef LocalExposureTexture, FRDGTextureRef BlurredLogLuminanceTexture)"
  }
]