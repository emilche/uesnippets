[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ISequenceAudioRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequenceAudioRecorder"
  },
  {
    "label": "ISequenceRecorderExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequenceRecorderExtender"
  },
  {
    "label": "USequenceRecordingBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequenceRecordingBase"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "ISequenceRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequenceRecorder"
  },
  {
    "label": "FSequenceRecorderActorFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequenceRecorderActorFilter"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" Modules / ModuleInterface . h \" # include \" Containers / ArrayView . h \" # include \" Misc / QualifiedFrameTime . h \" # include \" SequenceRecorderActorGroup . h \" class AActor ; class ISequenceAudioRecorder ; class ISequenceRecorderExtender ; class USequenceRecordingBase ; class UAnimSequence ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnRecordingStarted, class UMovieSceneSequence*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnRecordingFinished, class UMovieSceneSequence*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnRecordingGroupAdded, TWeakObjectPtr<USequenceRecorderActorGroup>)"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (class ISequenceRecorder : public IModuleInterface { public : bool)",
    "insertText": "StartRecording(UWorld* World, const struct FSequenceRecorderActorFilter& ActorFilter)"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRecording()"
  },
  {
    "label": "IsRecording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRecording()"
  },
  {
    "label": "GetCurrentRecordingLength()",
    "kind": "Method",
    "detail": "Function (FQualifiedFrameTime)",
    "insertText": "GetCurrentRecordingLength()"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRecording(TArrayView<AActor* const> ActorsToRecord, const FString& PathToRecordTo = FString(), const FString& SequenceName = FString())"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRecording(AActor* ActorToRecord, const FString& PathToRecordTo = FString(), const FString& SequenceName = FString())"
  },
  {
    "label": "NotifyActorStartRecording()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyActorStartRecording(AActor* Actor)"
  },
  {
    "label": "NotifyActorStopRecording()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorStopRecording(AActor* Actor)"
  },
  {
    "label": "GetRecordingGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetRecordingGuid(AActor* Actor)"
  },
  {
    "label": "RegisterAudioRecorder()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterAudioRecorder(const TFunction<TUniquePtr<ISequenceAudioRecorder>()>& FactoryFunction)"
  },
  {
    "label": "UnregisterAudioRecorder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAudioRecorder(FDelegateHandle RegisteredHandle)"
  },
  {
    "label": "HasAudioRecorder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAudioRecorder()"
  },
  {
    "label": "QueueActorToRecord()",
    "kind": "Method",
    "detail": "Function (UActorRecording*)",
    "insertText": "QueueActorToRecord(AActor* ActorToRecord)"
  },
  {
    "label": "QueueObjectToRecord()",
    "kind": "Method",
    "detail": "Function (USequenceRecordingBase*)",
    "insertText": "QueueObjectToRecord(UObject* ObjectToRecord)"
  },
  {
    "label": "GetTakeNumberForActor()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTakeNumberForActor(AActor* InActor)"
  },
  {
    "label": "CreateAudioRecorder()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<ISequenceAudioRecorder>)",
    "insertText": "CreateAudioRecorder()"
  },
  {
    "label": "OnRecordingStarted()",
    "kind": "Method",
    "detail": "Function (FOnRecordingStarted&)",
    "insertText": "OnRecordingStarted()"
  },
  {
    "label": "OnRecordingFinished()",
    "kind": "Method",
    "detail": "Function (FOnRecordingFinished&)",
    "insertText": "OnRecordingFinished()"
  },
  {
    "label": "GetSequenceRecordingName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSequenceRecordingName()"
  },
  {
    "label": "GetSequenceRecordingBasePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSequenceRecordingBasePath()"
  },
  {
    "label": "GetCurrentRecordingGroup()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<USequenceRecorderActorGroup>)",
    "insertText": "GetCurrentRecordingGroup()"
  },
  {
    "label": "AddRecordingGroup()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<USequenceRecorderActorGroup>)",
    "insertText": "AddRecordingGroup()"
  },
  {
    "label": "RemoveCurrentRecordingGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCurrentRecordingGroup()"
  },
  {
    "label": "DuplicateRecordingGroup()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<USequenceRecorderActorGroup>)",
    "insertText": "DuplicateRecordingGroup()"
  },
  {
    "label": "LoadRecordingGroup()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<USequenceRecorderActorGroup>)",
    "insertText": "LoadRecordingGroup(const FName Name)"
  },
  {
    "label": "GetRecordingGroupNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetRecordingGroupNames()"
  },
  {
    "label": "OnRecordingGroupAdded()",
    "kind": "Method",
    "detail": "Function (FOnRecordingGroupAdded&)",
    "insertText": "OnRecordingGroupAdded()"
  },
  {
    "label": "AddSequenceRecorderExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSequenceRecorderExtender(TSharedPtr<ISequenceRecorderExtender> SequenceRecorderExternder)"
  },
  {
    "label": "RemoveSequenceRecorderExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSequenceRecorderExtender(TSharedPtr<ISequenceRecorderExtender> SequenceRecorderExternder)"
  },
  {
    "label": "RecordSingleNodeInstanceToAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RecordSingleNodeInstanceToAnimation(USkeletalMeshComponent* PreviewComponent, UAnimSequence* NewAsset, bool bShowMessage = true)"
  }
]