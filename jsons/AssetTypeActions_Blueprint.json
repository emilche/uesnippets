[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "IClassTypeActions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassTypeActions"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "ASSETTOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASSETTOOLS_API"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FRevisionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRevisionInfo"
  },
  {
    "label": "UThumbnailInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UThumbnailInfo"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / Blueprint . h \" # include \" Toolkits / IToolkitHost . h \" # include \" AssetTypeActions / AssetTypeActions_ClassTypeBase . h \" struct FAssetData ; class IClassTypeActions ; class UFactory ; class FAssetTypeActions_Blueprint : public FAssetTypeActions_ClassTypeBase { public : FText)",
    "insertText": "GetName()"
  },
  {
    "label": "GetTypeColor()",
    "kind": "Method",
    "detail": "Function (} FColor)",
    "insertText": "GetTypeColor()"
  },
  {
    "label": "GetSupportedClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetSupportedClass()"
  },
  {
    "label": "ShouldCallGetActions()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldCallGetActions()"
  },
  {
    "label": "GetActions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetActions(const TArray<UObject*>& InObjects, FToolMenuSection& Section)"
  },
  {
    "label": "OpenAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenAssetEditor(const TArray<UObject*>& InObjects, TSharedPtr<class IToolkitHost> EditWithinLevelEditor = TSharedPtr<IToolkitHost>())"
  },
  {
    "label": "CanMerge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMerge()"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(UObject* InObject)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(UObject* BaseAsset, UObject* RemoteAsset, UObject* LocalAsset, const FOnMergeResolved& ResolutionCallback)"
  },
  {
    "label": "GetCategories()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCategories()"
  },
  {
    "label": "GetThumbnailInfo()",
    "kind": "Method",
    "detail": "Function (class UThumbnailInfo*)",
    "insertText": "GetThumbnailInfo(UObject* Asset)"
  },
  {
    "label": "GetAssetDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetDescription(const FAssetData& AssetData)"
  },
  {
    "label": "GetClassTypeActions()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<IClassTypeActions>)",
    "insertText": "GetClassTypeActions(const FAssetData& AssetData)"
  },
  {
    "label": "CanCreateNewDerivedBlueprint()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "CanCreateNewDerivedBlueprint()"
  },
  {
    "label": "GetFactoryForBlueprintType()",
    "kind": "Method",
    "detail": "Function (UFactory*)",
    "insertText": "GetFactoryForBlueprintType(UBlueprint* InBlueprint)"
  },
  {
    "label": "GetNewDerivedBlueprintTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNewDerivedBlueprintTooltip(TWeakObjectPtr<UBlueprint> InObject)"
  },
  {
    "label": "CanExecuteNewDerivedBlueprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteNewDerivedBlueprint(TWeakObjectPtr<UBlueprint> InObject)"
  },
  {
    "label": "ExecuteEditDefaults()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ExecuteEditDefaults(TArray<TWeakObjectPtr<UBlueprint>> Objects)"
  },
  {
    "label": "ExecuteNewDerivedBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteNewDerivedBlueprint(TWeakObjectPtr<UBlueprint> InObject)"
  },
  {
    "label": "ShouldUseDataOnlyEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUseDataOnlyEditor(const UBlueprint* Blueprint)"
  }
]