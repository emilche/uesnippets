[
  {
    "label": "WebRtcIsac_InitPitchFilter()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ISAC_VAD_H_ # define MODULES_AUDIO_CODING_CODECS_ISAC_MAIN_SOURCE_ISAC_VAD_H_ # include<stddef . h> # include \" modules / audio_coding / codecs / isac / main / source / structs . h \" void)",
    "insertText": "WebRtcIsac_InitPitchFilter(PitchFiltstr* pitchfiltdata)"
  },
  {
    "label": "WebRtcIsac_InitPitchAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_InitPitchAnalysis(PitchAnalysisStruct* state)"
  },
  {
    "label": "WebRtcIsac_InitPreFilterbank()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_InitPreFilterbank(PreFiltBankstr* prefiltdata)"
  },
  {
    "label": "WebRtcIsac_AllPassFilter2Float()",
    "kind": "Method",
    "detail": "Function (# define NUMBEROFCHANNELAPSECTIONS 2 const float WebRtcIsac_kUpperApFactorsFloat [ 2 ] ; const float WebRtcIsac_kLowerApFactorsFloat [ 2 ] ; void)",
    "insertText": "WebRtcIsac_AllPassFilter2Float(float* InOut, const float* APSectionFactors, int lengthInOut, int NumberOfSections, float* FilterState)"
  },
  {
    "label": "WebRtcIsac_SplitAndFilterFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WebRtcIsac_SplitAndFilterFloat(float* in, float* LP, float* HP, double* LP_la, double* HP_la, PreFiltBankstr* prefiltdata)"
  }
]