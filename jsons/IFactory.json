[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "CoreType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CoreType"
  },
  {
    "label": "OgawaReadStrategy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OgawaReadStrategy"
  },
  {
    "label": "IFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcCoreFactory_IFactory_h # define Alembic_AbcCoreFactory_IFactory_h # include<Alembic / AbcCoreAbstract / ReadArraySampleCache . h> # include<Alembic / Abc / IArchive . h> # include<Alembic / Util / Export . h> namespace Alembic { namespace AbcCoreFactory { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT IFactory { public :)",
    "insertText": "IFactory()"
  },
  {
    "label": "getArchive()",
    "kind": "Method",
    "detail": "Function (enum CoreType { kHDF5,kOgawa,kLayer,kUnknown } ; Alembic::Abc::IArchive)",
    "insertText": "getArchive(const std::string & iFileName, CoreType & oType)"
  },
  {
    "label": "getArchive()",
    "kind": "Method",
    "detail": "Function (Alembic::Abc::IArchive)",
    "insertText": "getArchive(const std::string & iFileName)"
  },
  {
    "label": "getArchive()",
    "kind": "Method",
    "detail": "Function (Alembic::Abc::IArchive)",
    "insertText": "getArchive(const std::vector< std::string > & iFileNames)"
  },
  {
    "label": "getArchive()",
    "kind": "Method",
    "detail": "Function (Alembic::Abc::IArchive)",
    "insertText": "getArchive(const std::vector< std::string > & iFileNames, CoreType & oType)"
  },
  {
    "label": "getArchive()",
    "kind": "Method",
    "detail": "Function (Alembic::Abc::IArchive)",
    "insertText": "getArchive(const std::vector< std::istream * > & iStreams, CoreType & oType)"
  },
  {
    "label": "setHDF5CacheHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setHDF5CacheHierarchy(bool iCacheHierarchy)"
  },
  {
    "label": "getHDF5CacheHierarchy()",
    "kind": "Method",
    "detail": "Function (m_cacheHierarchy = iCacheHierarchy ; } bool)",
    "insertText": "getHDF5CacheHierarchy()"
  },
  {
    "label": "getSampleCache()",
    "kind": "Method",
    "detail": "Function (m_cachePtr = iCachePtr ; } Alembic::AbcCoreAbstract::ReadArraySampleCachePtr)",
    "insertText": "getSampleCache()"
  },
  {
    "label": "getOgawaReadStrategy()",
    "kind": "Method",
    "detail": "Function (m_numStreams = iNumStreams ; } enum OgawaReadStrategy { kFileStreams,kMemoryMappedFiles } ; OgawaReadStrategy)",
    "insertText": "getOgawaReadStrategy()"
  },
  {
    "label": "getPolicy()",
    "kind": "Method",
    "detail": "Function (m_readStrategy = iStrategy ; } Alembic::Abc::ErrorHandler::Policy)",
    "insertText": "getPolicy()"
  }
]