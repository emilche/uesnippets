[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "EInId",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInId"
  },
  {
    "label": "TSceneUpdateCommandQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSceneUpdateCommandQueue"
  },
  {
    "label": "FBasePayloadArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBasePayloadArray"
  },
  {
    "label": "TPayloadArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPayloadArray"
  },
  {
    "label": "FUpdateCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateCommand"
  },
  {
    "label": "TConstPayloadIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TConstPayloadIterator"
  },
  {
    "label": "FItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FItem"
  },
  {
    "label": "TPayloadRangeView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPayloadRangeView"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "TPayloadBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPayloadBase"
  },
  {
    "label": "FReadAccessScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReadAccessScope"
  },
  {
    "label": "FBasePayloadArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBasePayloadArray"
  },
  {
    "label": "TPayloadArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPayloadArray"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (happen)",
    "insertText": "check(!Command.bAdded)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (check)",
    "insertText": "check(Payloads->CommandSlots[PayloadOffset] != INDEX_NONE)"
  },
  {
    "label": "ForEachCommand()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ForEachCommand(ESceneUpdateCommandFilter::All, CallbackFunc)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(CommandFilter, ESceneUpdateCommandFilter::Deleted)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(CommandFilter, ESceneUpdateCommandFilter::Added)"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(CommandFilter, ESceneUpdateCommandFilter::Updated)"
  }
]