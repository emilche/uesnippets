[
  {
    "label": "rtp_sender_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rtp_sender_ctx_t"
  },
  {
    "label": "sockaddr_in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "sockaddr_in"
  },
  {
    "label": "rtp_receiver_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rtp_receiver_ctx_t"
  },
  {
    "label": "rtp_sendto()",
    "kind": "Method",
    "detail": "Function (# ifndef SRTP_RTP_H # define SRTP_RTP_H # ifdef HAVE_NETINET_IN_H # include<netinet / in . h> # elif defined HAVE_WINSOCK2_H # include<winsock2 . h> # endif # include \" srtp_priv . h \" # ifdef __cplusplus \" C \" { # endif # define RTP_HEADER_LEN 1 2 # define RTP_MAX_BUF_LEN 1 6 3 8 4 typedef srtp_hdr_t rtp_hdr_t ; typedef struct { srtp_hdr_t header ; char body [ RTP_MAX_BUF_LEN ] ; } rtp_msg_t ; typedef struct rtp_sender_ctx_t { rtp_msg_t message ; int socket ; srtp_ctx_t* srtp_ctx ; struct sockaddr_in addr ; } rtp_sender_ctx_t ; typedef struct rtp_receiver_ctx_t { rtp_msg_t message ; int socket ; srtp_ctx_t* srtp_ctx ; struct sockaddr_in addr ; } rtp_receiver_ctx_t ; typedef struct rtp_sender_ctx_t* rtp_sender_t ; typedef struct rtp_receiver_ctx_t* rtp_receiver_t ; int)",
    "insertText": "rtp_sendto(rtp_sender_t sender, const void *msg, int len)"
  },
  {
    "label": "rtp_recvfrom()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_recvfrom(rtp_receiver_t receiver, void *msg, int *len)"
  },
  {
    "label": "rtp_receiver_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_receiver_init(rtp_receiver_t rcvr, int sock, struct sockaddr_in addr, unsigned int ssrc)"
  },
  {
    "label": "rtp_sender_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_sender_init(rtp_sender_t sender, int sock, struct sockaddr_in addr, unsigned int ssrc)"
  },
  {
    "label": "srtp_sender_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "srtp_sender_init(rtp_sender_t rtp_ctx, struct sockaddr_in name, srtp_sec_serv_t security_services, unsigned char *input_key)"
  },
  {
    "label": "srtp_receiver_init()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "srtp_receiver_init(rtp_receiver_t rtp_ctx, struct sockaddr_in name, srtp_sec_serv_t security_services, unsigned char *input_key)"
  },
  {
    "label": "rtp_sender_init_srtp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_sender_init_srtp(rtp_sender_t sender, const srtp_policy_t *policy)"
  },
  {
    "label": "rtp_sender_deinit_srtp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_sender_deinit_srtp(rtp_sender_t sender)"
  },
  {
    "label": "rtp_receiver_init_srtp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_receiver_init_srtp(rtp_receiver_t sender, const srtp_policy_t *policy)"
  },
  {
    "label": "rtp_receiver_deinit_srtp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtp_receiver_deinit_srtp(rtp_receiver_t sender)"
  },
  {
    "label": "rtp_sender_alloc()",
    "kind": "Method",
    "detail": "Function (rtp_sender_t)",
    "insertText": "rtp_sender_alloc(void)"
  },
  {
    "label": "rtp_sender_dealloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtp_sender_dealloc(rtp_sender_t rtp_ctx)"
  },
  {
    "label": "rtp_receiver_alloc()",
    "kind": "Method",
    "detail": "Function (rtp_receiver_t)",
    "insertText": "rtp_receiver_alloc(void)"
  },
  {
    "label": "rtp_receiver_dealloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtp_receiver_dealloc(rtp_receiver_t rtp_ctx)"
  }
]