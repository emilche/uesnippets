[
  {
    "label": "_cef_browser_process_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_process_handler_t"
  },
  {
    "label": "_cef_command_line_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_command_line_t"
  },
  {
    "label": "_cef_client_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_client_t"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_BROWSER_PROCESS_HANDLER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_BROWSER_PROCESS_HANDLER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_client_capi . h \" # include \" include / capi / cef_command_line_capi . h \" # include \" include / capi / cef_values_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_browser_process_handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_context_initialized)( struct _cef_browser_process_handler_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_before_child_process_launch)( struct _cef_browser_process_handler_t* self, struct _cef_command_line_t* command_line)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_schedule_message_pump_work)( struct _cef_browser_process_handler_t* self, int64 delay_ms)"
  },
  {
    "label": "_cef_client_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_client_t(CEF_CALLBACK* get_default_client)( struct _cef_browser_process_handler_t* self)"
  }
]