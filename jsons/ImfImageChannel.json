[
  {
    "label": "ImageLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ImageLevel"
  },
  {
    "label": "IMFUTIL_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMFUTIL_EXPORT_TYPE"
  },
  {
    "label": "pixelType()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_IMAGE_CHANNEL_H # define INCLUDED_IMF_IMAGE_CHANNEL_H # include \" ImfUtilExport . h \" # include \" IexBaseExc . h \" # include \" ImfChannelList . h \" # include \" ImfFrameBuffer . h \" # include \" ImfPixelType . h \" # include<ImathBox . h> # include<half . h> # include<cstring> # include<typeinfo> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER class ImageLevel ; class ImageLevel ; class IMFUTIL_EXPORT_TYPE ImageChannel { public : PixelType)",
    "insertText": "pixelType()"
  },
  {
    "label": "channel()",
    "kind": "Method",
    "detail": "Function (IMFUTIL_EXPORT Channel)",
    "insertText": "channel()"
  },
  {
    "label": "xSampling()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xSampling()"
  },
  {
    "label": "ImageChannel()",
    "kind": "Method",
    "detail": "Function (IMFUTIL_EXPORT ~)",
    "insertText": "ImageChannel()"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (IMFUTIL_EXPORT void)",
    "insertText": "resize()"
  },
  {
    "label": "boundsCheck()",
    "kind": "Method",
    "detail": "Function (IMFUTIL_EXPORT void)",
    "insertText": "boundsCheck(int x, int y)"
  },
  {
    "label": "ImageChannel()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "ImageChannel(const ImageChannel&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ImageChannel&)",
    "insertText": "operator(const ImageChannel&)"
  },
  {
    "label": "ImageChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImageChannel(ImageChannel&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ImageChannel&)",
    "insertText": "operator(ImageChannel&&)"
  }
]