[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKey"
  },
  {
    "label": "DETAILCUSTOMIZATIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DETAILCUSTOMIZATIONS_API"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "FKeyStructCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IPropertyTypeCustomization . h \" # include \" InputCoreTypes . h \" # include \" Misc / Optional . h \" # include \" PropertyHandle . h \" # include \" SKeySelector . h \" # include \" Templates / SharedPointer . h \" class IPropertyHandle ; class SWidget ; struct FKey ; class FKeyStructCustomization : public IPropertyTypeCustomization { public :)",
    "insertText": "FKeyStructCustomization()"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_NONCOPYABLE(FKeyStructCustomization) virtual void CustomizeHeader(TSharedRef<class IPropertyHandle> StructPropertyHandle, class FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, class IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "ShouldInlineKey()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "ShouldInlineKey()"
  },
  {
    "label": "GetEnableKeySelector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnableKeySelector()"
  },
  {
    "label": "GetDefaultKeyName()",
    "kind": "Method",
    "detail": "Function (DefaultKeyName = KeyName ; } FString)",
    "insertText": "GetDefaultKeyName()"
  },
  {
    "label": "GetDisabledKeySelectorToolTip()",
    "kind": "Method",
    "detail": "Function (DisabledKeySelectorToolTip = InToolTip ; } FText)",
    "insertText": "GetDisabledKeySelectorToolTip()"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (bool bEnableKeySelector = true ; FText DisabledKeySelectorToolTip =)",
    "insertText": "FromString(TEXT(\"Key Selector Disabled\"))"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (FString DefaultKeyName =)",
    "insertText": "TEXT(\"None\")"
  },
  {
    "label": "GetCurrentKey()",
    "kind": "Method",
    "detail": "Function (TOptional<FKey>)",
    "insertText": "GetCurrentKey()"
  },
  {
    "label": "OnKeyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnKeyChanged(TSharedPtr<FKey> SelectedKey)"
  }
]