[
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "FStackEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStackEntry"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (FChunkNode)",
    "insertText": "Read(FBlob Blob)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (FBlobHandleWithHash)",
    "insertText": "Write(FBlobWriter& Writer, const TArrayView<const FBlobHandleWithHash>& Children, FMemoryView Data)"
  },
  {
    "label": "FChunkNodeReader()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FChunkNodeReader(FBlob Blob)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(int32 Length)"
  },
  {
    "label": "FChunkNodeWriter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FChunkNodeWriter(FBlobWriter& InWriter, const FChunkingOptions& InOptions = FChunkingOptions::Default)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(FMemoryView Data)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (FBlobHandleWithHash)",
    "insertText": "Flush(FIoHash& OutStreamHash)"
  },
  {
    "label": "WriteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNode()"
  }
]