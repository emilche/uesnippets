[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FAssetDataTagMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetDataTagMap"
  },
  {
    "label": "FAssetDataTagMapSharedView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetDataTagMapSharedView"
  },
  {
    "label": "FAssetRegistryGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryGenerator"
  },
  {
    "label": "FDependsNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDependsNode"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FAssetRegistryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryImpl"
  },
  {
    "label": "FARCompiledFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARCompiledFilter"
  },
  {
    "label": "FAssetRegistryHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetRegistryHeader"
  },
  {
    "label": "FPrimaryAssetId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimaryAssetId"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FAssetRegistrySerializationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetRegistrySerializationOptions"
  },
  {
    "label": "pathname",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "pathname"
  },
  {
    "label": "FAssetRegistryLoadOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetRegistryLoadOptions"
  },
  {
    "label": "FAssetRegistryPruneOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetRegistryPruneOptions"
  },
  {
    "label": "FAssetRegistryAppendResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetRegistryAppendResult"
  },
  {
    "label": "FAssetRegistryState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "Archive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Archive"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "FAssetRegistryGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryGenerator"
  },
  {
    "label": "UAssetRegistryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetRegistryImpl"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "DisableFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableFilters()"
  },
  {
    "label": "InitForDevelopment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitForDevelopment()"
  },
  {
    "label": "FAssetRegistryLoadOptions()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FAssetRegistryLoadOptions(const FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "FAssetRegistryState()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "FAssetRegistryState()"
  },
  {
    "label": "RemovePackageData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemovePackageData(FName PackageName)"
  },
  {
    "label": "AddAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAssetData(FAssetData* AssetData)"
  },
  {
    "label": "AddTagsToAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTagsToAssetData(const FSoftObjectPath& InObjectPath, FAssetDataTagMap&& InTagsAndValues)"
  },
  {
    "label": "UpdateAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetData(const FAssetData& NewAssetData, bool bCreateIfNotExists=false)"
  },
  {
    "label": "UpdateAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetData(FAssetData&& NewAssetData, bool bCreateIfNotExists = false)"
  },
  {
    "label": "UpdateAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetData(FAssetData* AssetData, const FAssetData& NewAssetData,\n\t\tbool* bOutModified = nullptr)"
  },
  {
    "label": "UpdateAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetData(FAssetData* AssetData, FAssetData&& NewAssetData,\n\t\tbool* bOutModified = nullptr)"
  },
  {
    "label": "UpdateAssetDataPackageFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAssetDataPackageFlags(FName PackageName, uint32 PackageFlags)"
  },
  {
    "label": "RemoveAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAssetData(FAssetData* AssetData, bool bRemoveDependencyData,\n\t\tbool& bOutRemovedAssetData, bool& bOutRemovedPackageData)"
  },
  {
    "label": "RemoveAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAssetData(const FSoftObjectPath& SoftObjectPath, bool bRemoveDependencyData,\n\t\tbool& bOutRemovedAssetData, bool& bOutRemovedPackageData)"
  },
  {
    "label": "ClearDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDependencies(const FAssetIdentifier& AssetIdentifier,\n\t\tUE::AssetRegistry::EDependencyCategory Category)"
  },
  {
    "label": "AddDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDependencies(const FAssetIdentifier& AssetIdentifier,\n\t\tTConstArrayView<FAssetDependency> Dependencies)"
  },
  {
    "label": "SetDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDependencies(const FAssetIdentifier& AssetIdentifier,\n\t\tTConstArrayView<FAssetDependency> Dependencies,\n\t\tUE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All)"
  },
  {
    "label": "ClearReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearReferencers(const FAssetIdentifier& AssetIdentifier,\n\t\tUE::AssetRegistry::EDependencyCategory Category)"
  },
  {
    "label": "AddReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencers(const FAssetIdentifier& AssetIdentifier,\n\t\tTConstArrayView<FAssetDependency> Referencers)"
  },
  {
    "label": "SetReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReferencers(const FAssetIdentifier& AssetIdentifier,\n\t\tTConstArrayView<FAssetDependency> Referencers,\n\t\tUE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::All)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "InitializeFromExisting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromExisting(const FAssetRegistryState& Existing, const FAssetRegistrySerializationOptions& Options,\n\t\tEInitializationMode InitializationMode = EInitializationMode::Rebuild, FAssetRegistryAppendResult* OutAppendResult = nullptr)"
  },
  {
    "label": "PruneAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneAssetData(const TSet<FName>& RequiredPackages, const TSet<FName>& RemovePackages,\n\t\tconst TSet<int32> ChunksToKeep, const FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "PruneAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneAssetData(const TSet<FName>& RequiredPackages, const TSet<FName>& RemovePackages,\n\t\tconst FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "Prune()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Prune(const FAssetRegistryPruneOptions& PruneOptions)"
  },
  {
    "label": "InitializeFromExistingAndPrune()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromExistingAndPrune(const FAssetRegistryState& ExistingState,\n\t\tconst TSet<FName>& RequiredPackages, const TSet<FName>& RemovePackages, const TSet<int32> ChunksToKeep,\n\t\tconst FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "FilterTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterTags(const FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar, const FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "Save()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Save(FArchive& Ar, const FAssetRegistrySerializationOptions& Options)"
  },
  {
    "label": "LoadFromDisk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromDisk(const TCHAR* InPath, const FAssetRegistryLoadOptions& InOptions,\n\t\tFAssetRegistryState& OutState, FAssetRegistryVersion::Type* OutVersion = nullptr)"
  },
  {
    "label": "IsFilterValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFilterValid(const FARCompiledFilter& Filter)"
  },
  {
    "label": "InitializeFromExisting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromExisting(const FAssetDataMap& AssetDataMap,\n\t\tconst TMap<FAssetIdentifier, FDependsNode*>& DependsNodeMap,\n\t\tconst TMap<FName, FAssetPackageData*>& AssetPackageDataMap,\n\t\tconst FAssetRegistrySerializationOptions& Options,\n\t\tEInitializationMode InitializationMode = EInitializationMode::Rebuild,\n\t\tFAssetRegistryAppendResult* OutAppendResult = nullptr)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Load(Archive&& Ar, const FAssetRegistryHeader& Header, const FAssetRegistryLoadOptions& Options)"
  },
  {
    "label": "SetAssetDatas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAssetDatas(TArrayView<FAssetData> AssetDatas, const FAssetRegistryLoadOptions& Options)"
  },
  {
    "label": "RemoveDependsNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDependsNode(const FAssetIdentifier& Identifier)"
  },
  {
    "label": "FilterTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterTags(const FAssetDataTagMapSharedView& InTagsAndValues, FAssetDataTagMap& OutTagsAndValues,\n\t\tconst TSet<FName>* ClassSpecificFilterList, const FAssetRegistrySerializationOptions & Options)"
  },
  {
    "label": "LoadDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDependencies(FArchive& Ar)"
  },
  {
    "label": "LoadDependencies_BeforeFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDependencies_BeforeFlags(FArchive& Ar, bool bSerializeDependencies, FAssetRegistryVersion::Type Version)"
  },
  {
    "label": "SetTagsOnExistingAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTagsOnExistingAsset(FAssetData* AssetData, FAssetDataTagMap&& NewTags)"
  },
  {
    "label": "SetDependencyNodeSorting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDependencyNodeSorting(bool bSortDependencies, bool bSortReferencers)"
  },
  {
    "label": "RemoveAssetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAssetData(FAssetData* AssetData, const FCachedAssetKey& Key, bool bRemoveDependencyData,\n#if UE_ASSETREGISTRY_INDIRECT_ASSETDATA_POINTERS\n\t\tUE::AssetRegistry::Private::FAssetDataPtrIndex AssetIndex,\n#endif\n\t\tbool& bOutRemovedAssetData, bool& bOutRemovedPackageData\n\t)"
  },
  {
    "label": "GetMutableAssetByObjectPath()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetMutableAssetByObjectPath(Key)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(*FoundAssetArray)"
  },
  {
    "label": "Callback()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Callback(AssetData)"
  },
  {
    "label": "Callback()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Callback(AssetData)"
  }
]