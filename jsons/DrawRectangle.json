[
  {
    "label": "FRHICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandList"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FShaderMapPointerTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderMapPointerTable"
  },
  {
    "label": "TShaderRefBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TShaderRefBase"
  },
  {
    "label": "SetDrawRectangleParameters()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / MathFwd . h \" # include \" RendererInterface . h \" class FRHICommandList ; class FSceneView ; class FShaderMapPointerTable ; template<ShaderType,PointerTableType> class TShaderRefBase ; template<ShaderType> using TShaderRef = TShaderRefBase<ShaderType,FShaderMapPointerTable> ; namespace UE::Renderer::PostProcess { void)",
    "insertText": "SetDrawRectangleParameters(FRHIBatchedShaderParameters& BatchedParameters, const FShader* VertexShader, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize)"
  },
  {
    "label": "SetDrawRectangleParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawRectangleParameters(FRHIBatchedShaderParameters& BatchedParameters, const FShader* VertexShader, const FIntPoint& ViewSize)"
  },
  {
    "label": "SetDrawRectangleParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawRectangleParameters(FRHIBatchedShaderParameters& BatchedParameters, const FShader* VertexShader, const FSceneView& View)"
  },
  {
    "label": "DrawRectangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawRectangle(FRHICommandList& RHICmdList, const TShaderRef<FShader>& VertexShader, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize, EDrawRectangleFlags Flags = EDRF_Default, uint32 InstanceCount = 1)"
  },
  {
    "label": "DrawRectangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawRectangle(FRHICommandList& RHICmdList, const TShaderRef<FShader>& VertexShader, const FSceneView& View, EDrawRectangleFlags Flags = EDRF_Default, uint32 InstanceCount = 1)"
  },
  {
    "label": "DrawPostProcessPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPostProcessPass(FRHICommandList& RHICmdList, const TShaderRef<FShader>& VertexShader, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize, int32 StereoViewIndex, bool bHasCustomMesh, EDrawRectangleFlags Flags = EDRF_Default)"
  }
]