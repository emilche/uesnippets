[
  {
    "label": "FShaderCompilerDefinitions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompilerDefinitions"
  },
  {
    "label": "SHADERCOMPILERCOMMON_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SHADERCOMPILERCOMMON_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FShaderConductorIntermediates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderConductorIntermediates"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / StringFwd . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CrossCompilerDefinitions . h \" # include \" HAL / Platform . h \" # include \" RHIDefinitions . h \" # include \" ShaderCompilerCore . h \" # include \" ShaderCore . h \" # include \" Templates / Function . h \" class FShaderCompilerDefinitions ; namespace CrossCompiler { struct FHlslShaderModel { uint16 Major ; uint16 Minor ; bool)",
    "insertText": "operator(const FHlslShaderModel& Rhs)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (EShaderConductorLanguage Language = EShaderConductorLanguage::Glsl ; int32 Version = 0 ; PRAGMA_DISABLE_DEPRECATION_WARNINGS TPimplPtr<FShaderCompilerDefinitions> CompileFlags ; PRAGMA_ENABLE_DEPRECATION_WARNINGS TFunction<)",
    "insertText": "bool(const FAnsiStringView& VariableName, const FAnsiStringView& TypeName, FString& OutRenamedTypeName)"
  },
  {
    "label": "FShaderConductorContext()",
    "kind": "Method",
    "detail": "Function (} ; struct FShaderConductorIdentifierTable { const ANSICHAR* InputAttribute ; const ANSICHAR* GlobalsUniformBuffer ; const ANSICHAR* IntermediateTessControlOutput ; const ANSICHAR* DummySampler ; } ; class FShaderConductorContext { public :)",
    "insertText": "FShaderConductorContext()"
  },
  {
    "label": "FShaderConductorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FShaderConductorContext(FShaderConductorContext&& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FShaderConductorContext&)",
    "insertText": "operator(FShaderConductorContext&& Rhs)"
  },
  {
    "label": "FShaderConductorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FShaderConductorContext(const FShaderConductorContext&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FShaderConductorContext&)",
    "insertText": "operator(const FShaderConductorContext&)"
  },
  {
    "label": "LoadSource()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS bool)",
    "insertText": "LoadSource(const FString& ShaderSource, const FString& Filename, const FString& EntryPoint, EShaderFrequency ShaderStage, const FShaderCompilerDefinitions* Definitions = nullptr, const TArray<FString>* ExtraDxcArgs = nullptr)"
  },
  {
    "label": "LoadSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadSource(FStringView ShaderSource, const FString& Filename, const FString& EntryPoint, EShaderFrequency ShaderStage, const FShaderCompilerDefinitions* Definitions = nullptr, const TArray<FString>* ExtraDxcArgs = nullptr)"
  },
  {
    "label": "LoadSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadSource(FAnsiStringView ShaderSource, const FString& Filename, const FString& EntryPoint, EShaderFrequency ShaderStage, const FShaderCompilerDefinitions* Definitions = nullptr, const TArray<FString>* ExtraDxcArgs = nullptr)"
  },
  {
    "label": "LoadSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadSource(const ANSICHAR* ShaderSource, const ANSICHAR* Filename, const ANSICHAR* EntryPoint, EShaderFrequency ShaderStage, const FShaderCompilerDefinitions* Definitions = nullptr, const TArray<FString>* ExtraDxcArgs = nullptr)"
  },
  {
    "label": "CompileHlslToDxil()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileHlslToDxil(const FShaderConductorOptions& Options, TArray<uint32>& OutDxil)"
  },
  {
    "label": "CompileHlslToSpirv()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileHlslToSpirv(const FShaderConductorOptions& Options, TArray<uint32>& OutSpirv)"
  },
  {
    "label": "OptimizeSpirv()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OptimizeSpirv(TArray<uint32>& Spirv, const ANSICHAR* const * OptConfigs, int32 OptConfigCount)"
  },
  {
    "label": "CompileSpirvToSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileSpirvToSource(const FShaderConductorOptions& Options, const FShaderConductorTarget& Target, const void* InSpirv, uint32 InSpirvByteSize, FString& OutSource)"
  },
  {
    "label": "CompileSpirvToSourceAnsi()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileSpirvToSourceAnsi(const FShaderConductorOptions& Options, const FShaderConductorTarget& Target, const void* InSpirv, uint32 InSpirvByteSize, TArray<ANSICHAR>& OutSource)"
  },
  {
    "label": "CompileSpirvToSourceBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileSpirvToSourceBuffer(const FShaderConductorOptions& Options, const FShaderConductorTarget& Target, const void* InSpirv, uint32 InSpirvByteSize, const TFunction<void(const void* Data, uint32 Size)>& OutputCallback)"
  },
  {
    "label": "FlushErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushErrors(TArray<FShaderCompilerError>& OutErrors)"
  },
  {
    "label": "GetSourceString()",
    "kind": "Method",
    "detail": "Function (const ANSICHAR*)",
    "insertText": "GetSourceString()"
  },
  {
    "label": "GetSourceLength()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSourceLength()"
  },
  {
    "label": "GenerateDxcArguments()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateDxcArguments(const FShaderConductorOptions& Options)"
  },
  {
    "label": "GetErrors()",
    "kind": "Method",
    "detail": "Function (const TArray<FShaderCompilerError>&)",
    "insertText": "GetErrors()"
  },
  {
    "label": "IsIntermediateSpirvOutputVariable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIntermediateSpirvOutputVariable(const ANSICHAR* SpirvVariableName)"
  },
  {
    "label": "GetIdentifierTable()",
    "kind": "Method",
    "detail": "Function (const FShaderConductorIdentifierTable&)",
    "insertText": "GetIdentifierTable()"
  },
  {
    "label": "Disassemble()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Disassemble(EShaderConductorIR Language, const void* Binary, uint32 BinaryByteSize, TArray<ANSICHAR>& OutAssemblyText)"
  },
  {
    "label": "GetShaderFileExt()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetShaderFileExt(EShaderConductorLanguage Language, EShaderFrequency ShaderStage = SF_NumFrequencies)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  }
]