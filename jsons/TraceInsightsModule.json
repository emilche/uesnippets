[
  {
    "label": "IInsightsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInsightsManager"
  },
  {
    "label": "IAnalysisService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisService"
  },
  {
    "label": "IModuleService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModuleService"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FTraceInsightsModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceInsightsModule"
  },
  {
    "label": "GetDefaultStoreDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultStoreDir()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners()"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners()"
  },
  {
    "label": "AddAreaForSessionViewer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAreaForSessionViewer(TSharedRef<FTabManager::FLayout> Layout)"
  },
  {
    "label": "AddAreaForWidgetReflector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAreaForWidgetReflector(TSharedRef<FTabManager::FLayout> Layout, bool bAllowDebugTools)"
  },
  {
    "label": "SpawnSessionInfoTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnSessionInfoTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnWindowClosedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowClosedEvent(const TSharedRef<SWindow>&)"
  },
  {
    "label": "UpdateAppTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAppTitle()"
  },
  {
    "label": "HandleCodeAccessorOpenFileFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCodeAccessorOpenFileFailed(const FString& Filename)"
  }
]