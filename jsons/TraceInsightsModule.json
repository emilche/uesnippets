[
  {
    "label": "IInsightsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInsightsManager"
  },
  {
    "label": "IAnalysisService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisService"
  },
  {
    "label": "IModuleService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModuleService"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FTraceInsightsModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceInsightsModule"
  },
  {
    "label": "FTraceInsightsModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Insights / IUnrealInsightsModule . h \" # include \" Framework / Docking / TabManager . h \" # include \" Trace / StoreService . h \" namespace Insights { class IInsightsManager ; } namespace TraceServices { class IAnalysisService ; class IModuleService ; } class SDockTab ; class FSpawnTabArgs ; class SWindow ; namespace UE::Insights { class FTraceInsightsModule : public IUnrealInsightsModule { public : ~)",
    "insertText": "FTraceInsightsModule()"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "SupportsDynamicReloading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDynamicReloading()"
  },
  {
    "label": "GetDefaultStoreDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultStoreDir()"
  },
  {
    "label": "GetStoreClient()",
    "kind": "Method",
    "detail": "Function (UE::Trace::FStoreClient*)",
    "insertText": "GetStoreClient()"
  },
  {
    "label": "ConnectToStore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectToStore(const TCHAR* InStoreHost, uint32 InStorePort=0)"
  },
  {
    "label": "CreateSessionViewer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSessionViewer(bool bAllowDebugTools = false)"
  },
  {
    "label": "GetAnalysisSession()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const TraceServices::IAnalysisSession>)",
    "insertText": "GetAnalysisSession()"
  },
  {
    "label": "StartAnalysisForTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalysisForTrace(uint32 InTraceId, bool InAutoQuit = false)"
  },
  {
    "label": "StartAnalysisForLastLiveSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalysisForLastLiveSession(float InRetryTime = 1.0f)"
  },
  {
    "label": "StartAnalysisForTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartAnalysisForTraceFile(const TCHAR* InTraceFile, bool InAutoQuit = false)"
  },
  {
    "label": "ShutdownUserInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownUserInterface()"
  },
  {
    "label": "RegisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterComponent(TSharedPtr<IInsightsComponent> Component)"
  },
  {
    "label": "UnregisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterComponent(TSharedPtr<IInsightsComponent> Component)"
  },
  {
    "label": "GetInsightsManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<::Insights::IInsightsManager>)",
    "insertText": "GetInsightsManager()"
  },
  {
    "label": "RegisterMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabConfig(const FName& InMajorTabId, const FInsightsMajorTabConfig& InConfig)"
  },
  {
    "label": "UnregisterMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabConfig(const FName& InMajorTabId)"
  },
  {
    "label": "OnMajorTabCreated()",
    "kind": "Method",
    "detail": "Function (FOnInsightsMajorTabCreated&)",
    "insertText": "OnMajorTabCreated()"
  },
  {
    "label": "FindMajorTabConfig()",
    "kind": "Method",
    "detail": "Function (const FInsightsMajorTabConfig&)",
    "insertText": "FindMajorTabConfig(const FName& InMajorTabId)"
  },
  {
    "label": "FindMajorTabLayoutExtension()",
    "kind": "Method",
    "detail": "Function (FOnRegisterMajorTabExtensions*)",
    "insertText": "FindMajorTabLayoutExtension(const FName& InMajorTabId)"
  },
  {
    "label": "GetUnrealInsightsLayoutIni()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetUnrealInsightsLayoutIni()"
  },
  {
    "label": "SetUnrealInsightsLayoutIni()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUnrealInsightsLayoutIni(const FString& InIniPath)"
  },
  {
    "label": "InitializeTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTesting(bool InInitAutomationModules, bool InAutoQuit)"
  },
  {
    "label": "ScheduleCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleCommand(const FString& InCmd)"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterTabSpawners()"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners()"
  },
  {
    "label": "AddAreaForSessionViewer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAreaForSessionViewer(TSharedRef<FTabManager::FLayout> Layout)"
  },
  {
    "label": "AddAreaForWidgetReflector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAreaForWidgetReflector(TSharedRef<FTabManager::FLayout> Layout, bool bAllowDebugTools)"
  },
  {
    "label": "SpawnSessionInfoTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnSessionInfoTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnWindowClosedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowClosedEvent(const TSharedRef<SWindow>&)"
  },
  {
    "label": "UpdateAppTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAppTitle()"
  },
  {
    "label": "HandleCodeAccessorOpenFileFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCodeAccessorOpenFileFailed(const FString& Filename)"
  }
]