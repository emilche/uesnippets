[
  {
    "label": "FMovieSceneTimeWarpChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTimeWarpChannel"
  },
  {
    "label": "FMovieSceneSequenceTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceTransform"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FSubSectionPainterParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubSectionPainterParams"
  },
  {
    "label": "FSubSectionPainterResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FSubSectionPainterResult"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "TSubSectionMixin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSubSectionMixin"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "PaintSection()",
    "kind": "Method",
    "detail": "Function (FSubSectionPainterResult)",
    "insertText": "PaintSection(TSharedPtr<const ISequencer> Sequencer, const UMovieSceneSubSection& SectionObject, FSequencerSectionPainter& InPainter, FSubSectionPainterParams Params)"
  },
  {
    "label": "PaintSectionBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PaintSectionBounds(const UMovieSceneSubSection& SectionObject, const UMovieSceneSequence& InnerSequence, FSequencerSectionPainter& InPainter, ESlateDrawEffect DrawEffects)"
  },
  {
    "label": "FSubSectionEditorUtil()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSubSectionEditorUtil(UMovieSceneSubSection& InSection)"
  },
  {
    "label": "BeginResizeSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginResizeSection()"
  },
  {
    "label": "ResizeSection()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "ResizeSection(ESequencerSectionResizeMode ResizeMode, FFrameNumber ResizeTime)"
  },
  {
    "label": "BeginSlipSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSlipSection()"
  },
  {
    "label": "SlipSection()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "SlipSection(FFrameNumber SlipTime)"
  },
  {
    "label": "BeginDilateSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDilateSection()"
  },
  {
    "label": "DilateSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DilateSection(const TRange<FFrameNumber>& NewRange, float DilationFactor)"
  },
  {
    "label": "CanAddSubSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddSubSequence(const UMovieSceneSequence* CurrentSequence, const UMovieSceneSequence& SubSequence)"
  },
  {
    "label": "GetMetaDataText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMetaDataText(const UMovieSceneSequence* Sequence)"
  },
  {
    "label": "TSubSectionMixin()",
    "kind": "Method",
    "detail": "Function (ParentCtorParams>)",
    "insertText": "TSubSectionMixin(TSharedPtr<ISequencer> InSequencer, UMovieSceneSubSection& InSection, ParentCtorParams&&... Params)"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "LOCTEXT(\"NoSequenceSelected\", \"No Sequence Selected\")"
  }
]