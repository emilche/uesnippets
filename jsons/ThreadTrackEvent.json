[
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Insights / ViewModels / TimingEvent . h \" class FThreadTrackEvent : public FTimingEvent {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FThreadTrackEvent, FTimingEvent) public: FThreadTrackEvent(const TSharedRef<const FBaseTimingTrack> InTrack, double InStartTime, double InEndTime, uint32 InDepth)"
  },
  {
    "label": "FThreadTrackEvent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FThreadTrackEvent()"
  },
  {
    "label": "GetTimerIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTimerIndex()"
  },
  {
    "label": "SetTimerIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimerIndex(uint32 InTimerIndex)"
  },
  {
    "label": "GetTimerId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTimerId()"
  },
  {
    "label": "SetTimerId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimerId(uint32 InTimerId)"
  }
]