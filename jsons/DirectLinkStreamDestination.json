[
  {
    "label": "IConnectionRequestHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IConnectionRequestHandler"
  },
  {
    "label": "FStreamDestination",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamDestination"
  },
  {
    "label": "FStreamDestination()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DirectLinkStreamConnectionPoint . h \" # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" namespace DirectLink { class IConnectionRequestHandler ; class FStreamDestination : public FStreamConnectionPoint { public :)",
    "insertText": "FStreamDestination(const FString& Name, EVisibility Visibility, const TSharedPtr<IConnectionRequestHandler>& Provider) : FStreamConnectionPoint(Name, Visibility) , Provider(Provider)"
  },
  {
    "label": "GetProvider()",
    "kind": "Method",
    "detail": "Function (} const TSharedPtr<IConnectionRequestHandler>&)",
    "insertText": "GetProvider()"
  }
]