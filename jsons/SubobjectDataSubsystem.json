[
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "FScopedTransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedTransaction"
  },
  {
    "label": "FAddNewSubobjectParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddNewSubobjectParams"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FReparentSubobjectParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReparentSubobjectParams"
  },
  {
    "label": "SUBOBJECTDATAINTERFACE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SUBOBJECTDATAINTERFACE_API"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "change",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "change"
  },
  {
    "label": "GatherSubobjectData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherSubobjectData(UObject* Context, TArray<FSubobjectDataHandle>& OutArray)"
  },
  {
    "label": "K2_GatherSubobjectDataForBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_GatherSubobjectDataForBlueprint(UBlueprint* Context, TArray<FSubobjectDataHandle>& OutArray)"
  },
  {
    "label": "K2_GatherSubobjectDataForInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_GatherSubobjectDataForInstance(AActor* Context, TArray<FSubobjectDataHandle>& OutArray)"
  },
  {
    "label": "AddNewSubobject()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "AddNewSubobject(const FAddNewSubobjectParams& Params, FText& FailReason)"
  },
  {
    "label": "DeleteSubobjects()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteSubobjects(const FSubobjectDataHandle& ContextHandle, const TArray<FSubobjectDataHandle>& SubobjectsToDelete, UBlueprint* BPContext = nullptr)"
  },
  {
    "label": "K2_DeleteSubobjectsFromInstance()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "K2_DeleteSubobjectsFromInstance(const FSubobjectDataHandle& ContextHandle, const TArray<FSubobjectDataHandle>& SubobjectsToDelete)"
  },
  {
    "label": "DeleteSubobjects()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteSubobjects(const FSubobjectDataHandle& ContextHandle, const TArray<FSubobjectDataHandle>& SubobjectsToDelete, FSubobjectDataHandle& OutComponentToSelect, UBlueprint* BPContext = nullptr, bool bForce = false)"
  },
  {
    "label": "DeleteSubobject()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DeleteSubobject(const FSubobjectDataHandle& ContextHandle, const FSubobjectDataHandle& SubobjectToDelete, UBlueprint* BPContext = nullptr)"
  },
  {
    "label": "K2_DeleteSubobjectFromInstance()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "K2_DeleteSubobjectFromInstance(const FSubobjectDataHandle& ContextHandle, const FSubobjectDataHandle& SubobjectToDelete)"
  },
  {
    "label": "RenameSubobject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameSubobject(const FSubobjectDataHandle& Handle, const FText& InNewName)"
  },
  {
    "label": "ChangeSubobjectClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ChangeSubobjectClass(const FSubobjectDataHandle& Handle, const UClass* NewClass)"
  },
  {
    "label": "ReparentSubobject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReparentSubobject(const FReparentSubobjectParams& Params, const FSubobjectDataHandle& ToReparentHandle)"
  },
  {
    "label": "MakeNewSceneRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MakeNewSceneRoot(const FSubobjectDataHandle& Context, const FSubobjectDataHandle& NewSceneRoot, UBlueprint* BPContext)"
  },
  {
    "label": "ReparentSubobjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReparentSubobjects(const FReparentSubobjectParams& Params, const TArray<FSubobjectDataHandle>& HandlesToMove)"
  },
  {
    "label": "DetachSubobject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DetachSubobject(const FSubobjectDataHandle& OwnerHandle, const FSubobjectDataHandle& ChildToRemove)"
  },
  {
    "label": "AttachSubobject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AttachSubobject(const FSubobjectDataHandle& OwnerHandle, const FSubobjectDataHandle& ChildToAddHandle)"
  },
  {
    "label": "CopySubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySubobjects(const TArray<FSubobjectDataHandle>& Handles, UBlueprint* BpContext)"
  },
  {
    "label": "PasteSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteSubobjects(const FSubobjectDataHandle& PasteToContext, const TArray<FSubobjectDataHandle>& NewParentHandles, UBlueprint* BpContext, TArray<FSubobjectDataHandle>& OutPastedHandles)"
  },
  {
    "label": "DuplicateSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateSubobjects(const FSubobjectDataHandle& Context, const TArray<FSubobjectDataHandle>& SubobjectsToDup, UBlueprint* BpContext, TArray<FSubobjectDataHandle>& OutNewSubobjects)"
  },
  {
    "label": "RenameSubobjectMemberVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameSubobjectMemberVariable(UBlueprint* BPContext, const FSubobjectDataHandle& InHandle, const FName NewName)"
  },
  {
    "label": "GetActorRootHandle()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "GetActorRootHandle(const FSubobjectDataHandle& StartingHandle)"
  },
  {
    "label": "FindOrCreateAttachParentForComponent()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FindOrCreateAttachParentForComponent(UActorComponent* InActorComponent, const FSubobjectDataHandle& ActorRootHandle, TArray<FSubobjectDataHandle>& ExistingHandles)"
  },
  {
    "label": "FindAttachParentForInheritedComponent()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FindAttachParentForInheritedComponent(UActorComponent* InActorComponent, const FSubobjectDataHandle& ActorRootHandle, UBlueprint* BP)"
  },
  {
    "label": "CreateSubobjectData()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "CreateSubobjectData(UObject* Context, const FSubobjectDataHandle& ParentHandle = FSubobjectDataHandle::InvalidHandle, bool bIsInheritedSCS = false)"
  },
  {
    "label": "FactoryCreateSubobjectDataWithParent()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FactoryCreateSubobjectDataWithParent(UObject* Context, const FSubobjectDataHandle& ParentHandle, bool bIsInheritedSCS = false)"
  },
  {
    "label": "FactoryCreateInheritedBpSubobject()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FactoryCreateInheritedBpSubobject(UObject* Context, const FSubobjectDataHandle& ParentHandle, bool bIsInherited, TArray<FSubobjectDataHandle>& OutArray)"
  },
  {
    "label": "FindParentForNewSubobject()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FindParentForNewSubobject(const UObject* NewSubobject, const FSubobjectDataHandle& SelectedParent)"
  }
]