[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FShaderCommonCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCommonCompileJob"
  },
  {
    "label": "FShaderCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompileJob"
  },
  {
    "label": "FShaderParametersMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderParametersMetadata"
  },
  {
    "label": "FShaderUniformBufferParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderUniformBufferParameter"
  },
  {
    "label": "FVertexFactoryType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactoryType"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FShaderCompilerEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCompilerEnvironment"
  },
  {
    "label": "FShaderCacheLoadContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCacheLoadContext"
  },
  {
    "label": "FGlobalShaderMapId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMapId"
  },
  {
    "label": "FGlobalShaderPermutationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGlobalShaderPermutationParameters"
  },
  {
    "label": "FGlobalShaderType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderType"
  },
  {
    "label": "FGlobalShaderTypeCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderTypeCompiler"
  },
  {
    "label": "FGlobalShaderMapContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMapContent"
  },
  {
    "label": "FGlobalShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMap"
  },
  {
    "label": "FGlobalShaderMapSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMapSection"
  },
  {
    "label": "FGlobalShaderMapSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMapSection"
  },
  {
    "label": "FGlobalShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMap"
  },
  {
    "label": "FGlobalShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMap"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FGlobalShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShader"
  },
  {
    "label": "FNULLPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNULLPS"
  },
  {
    "label": "FMyGlobalShaderPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMyGlobalShaderPS"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "declaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "declaration"
  },
  {
    "label": "FMyGlobalShaderPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMyGlobalShaderPS"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGlobalShaderMapId()",
    "kind": "Method",
    "detail": "Function (RENDERCORE_API)",
    "insertText": "FGlobalShaderMapId(EShaderPlatform Platform, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "ShouldCompilePipeline()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePipeline(const FShaderPipelineType* ShaderPipelineType, EShaderPlatform Platform, EShaderPermutationFlags Flags)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FShaderSerializeContext& Ctx)"
  },
  {
    "label": "FGlobalShaderMap()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FGlobalShaderMap(EShaderPlatform InPlatform)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "ReleaseAllSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAllSections()"
  },
  {
    "label": "RemoveShaderTypePermutaion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShaderTypePermutaion(const FShaderType* Type, int32 PermutationId)"
  },
  {
    "label": "RemoveShaderPipelineType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShaderPipelineType(const FShaderPipelineType* ShaderPipelineType)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSection(FGlobalShaderMapSection* InSection)"
  },
  {
    "label": "LoadFromGlobalArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFromGlobalArchive(FArchive& Ar)"
  },
  {
    "label": "SaveToGlobalArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveToGlobalArchive(FArchive& Ar)"
  },
  {
    "label": "BeginCreateAllShaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCreateAllShaders()"
  },
  {
    "label": "SaveShaderStableKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveShaderStableKeys(EShaderPlatform TargetShaderPlatform)"
  },
  {
    "label": "FGlobalShader()",
    "kind": "Method",
    "detail": "Function (RENDERCORE_API)",
    "insertText": "FGlobalShader(const ShaderMetaType::CompiledShaderInitializerType& Initializer)"
  },
  {
    "label": "GetGlobalShaderMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetGlobalShaderMap(GShaderPlatformForFeatureLevel[FeatureLevel])"
  },
  {
    "label": "ShaderClass()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "ShaderClass()"
  },
  {
    "label": "ShaderClass()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "ShaderClass(Initializer)"
  },
  {
    "label": "PermutationVector()",
    "kind": "Method",
    "detail": "Function (FPermutationDomain)",
    "insertText": "PermutationVector(Parameters.PermutationId)"
  },
  {
    "label": "CreateRecursiveShaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRecursiveShaders()"
  },
  {
    "label": "ForceInitGlobalShaderType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceInitGlobalShaderType(FShaderType& ShaderType)"
  }
]