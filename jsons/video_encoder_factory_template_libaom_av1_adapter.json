[
  {
    "label": "LibaomAv1EncoderTemplateAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LibaomAv1EncoderTemplateAdapter"
  },
  {
    "label": "SupportedFormats()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VIDEO_CODECS_VIDEO_ENCODER_FACTORY_TEMPLATE_LIBAOM_AV1_ADAPTER_H_ # define API_VIDEO_CODECS_VIDEO_ENCODER_FACTORY_TEMPLATE_LIBAOM_AV1_ADAPTER_H_ # include<memory> # include<vector> # include \" absl / container / inlined_vector . h \" # include \" api / video_codecs / sdp_video_format . h \" # include \" modules / video_coding / codecs / av1 / av1_svc_config . h \" # include \" modules / video_coding / codecs / av1 / libaom_av1_encoder . h \" namespace webrtc { struct LibaomAv1EncoderTemplateAdapter { std::vector<SdpVideoFormat>)",
    "insertText": "SupportedFormats()"
  },
  {
    "label": "LibaomAv1EncoderSupportedScalabilityModes()",
    "kind": "Method",
    "detail": "Function (absl::InlinedVector<ScalabilityMode,kScalabilityModeCount> scalability_modes =)",
    "insertText": "LibaomAv1EncoderSupportedScalabilityModes()"
  },
  {
    "label": "CreateEncoder()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<VideoEncoder>)",
    "insertText": "CreateEncoder(const SdpVideoFormat& format)"
  },
  {
    "label": "IsScalabilityModeSupported()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsScalabilityModeSupported(ScalabilityMode scalability_mode)"
  }
]