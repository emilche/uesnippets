[
  {
    "label": "FShaderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderTarget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3DShaderCompileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3DShaderCompileData"
  },
  {
    "label": "FD3DSM6ShaderDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3DSM6ShaderDebugData"
  },
  {
    "label": "PreprocessD3DShader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PreprocessD3DShader(\n\tconst FShaderCompilerInput& Input,\n\tconst FShaderCompilerEnvironment& MergedEnvironment,\n\tFShaderPreprocessOutput& PreprocessOutput)"
  },
  {
    "label": "CompileD3DShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileD3DShader(\n\tconst FShaderCompilerInput& Input,\n\tconst FShaderPreprocessOutput& InPreprocessOutput,\n\tFShaderCompilerOutput& Output,\n\tconst FString& WorkingDirectory,\n\tED3DShaderModel ShaderModel)"
  },
  {
    "label": "CompileAndProcessD3DShaderFXC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileAndProcessD3DShaderFXC(\n\tconst FShaderCompilerInput& Input,\n\tconst FString& InPreprocessedSource,\n\tconst FString& InEntryPointName,\n\tconst FShaderParameterParser& ShaderParameterParser,\n\tconst TCHAR* ShaderProfile,\n\tbool bSecondPassAferUnusedInputRemoval,\n\tFShaderCompilerOutput& Output)"
  },
  {
    "label": "CompileAndProcessD3DShaderDXC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileAndProcessD3DShaderDXC(\n\tconst FShaderCompilerInput& Input,\n\tconst FString& InPreprocessedSource,\n\tconst FString& InEntryPointName,\n\tconst FShaderParameterParser& ShaderParameterParser,\n\tconst TCHAR* ShaderProfile,\n\tED3DShaderModel ShaderModel,\n\tbool bProcessingSecondTime,\n\tFShaderCompilerOutput& Output)"
  },
  {
    "label": "ValidateResourceCounts()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateResourceCounts(const FD3DShaderCompileData& CompiledData, TArray<FString>& OutFilteredErrors)"
  }
]