[
  {
    "label": "FShaderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderTarget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3DShaderCompileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3DShaderCompileData"
  },
  {
    "label": "FD3DSM6ShaderDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3DSM6ShaderDebugData"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Windows / WindowsHWrapper . h \" # include \" ShaderCompilerCommon . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogD3DShaderCompiler, Log, All)"
  },
  {
    "label": "DoesShaderModelRequireDXC()",
    "kind": "Method",
    "detail": "Function (enum class ED3DShaderModel { Invalid,SM5_0,SM6_0,SM6_6,SM6_8,} ; bool)",
    "insertText": "DoesShaderModelRequireDXC(ED3DShaderModel ShaderModel)"
  },
  {
    "label": "CompileD3DShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileD3DShader(const FShaderCompilerInput& Input, const FShaderPreprocessOutput& InPreprocessOutput, FShaderCompilerOutput& Output, const FString& WorkingDirectory, ED3DShaderModel ShaderModel)"
  },
  {
    "label": "CompileAndProcessD3DShaderFXC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileAndProcessD3DShaderFXC(const FShaderCompilerInput& Input, const FString& InPreprocessedSource, const FString& InEntryPointName, const FShaderParameterParser& ShaderParameterParser, const TCHAR* ShaderProfile, bool bSecondPassAferUnusedInputRemoval, FShaderCompilerOutput& Output)"
  },
  {
    "label": "CompileAndProcessD3DShaderDXC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileAndProcessD3DShaderDXC(const FShaderCompilerInput& Input, const FString& InPreprocessedSource, const FString& InEntryPointName, const FShaderParameterParser& ShaderParameterParser, const TCHAR* ShaderProfile, ED3DShaderModel ShaderModel, bool bProcessingSecondTime, FShaderCompilerOutput& Output)"
  },
  {
    "label": "ValidateResourceCounts()",
    "kind": "Method",
    "detail": "Function (struct FD3DShaderCompileData ; bool)",
    "insertText": "ValidateResourceCounts(const FD3DShaderCompileData& CompiledData, TArray<FString>& OutFilteredErrors)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FD3DSM6ShaderDebugData { FString Name ; FString DebugInfo ; TArray<uint8> Contents ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FD3DSM6ShaderDebugData& DebugData)"
  },
  {
    "label": "GetContents()",
    "kind": "Method",
    "detail": "Function (Ar<<DebugData . Name ; Ar<<DebugData . Contents ; return Ar ; } TConstArrayView<uint8>)",
    "insertText": "GetContents()"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetFilename()"
  }
]