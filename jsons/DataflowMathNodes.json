[
  {
    "label": "FDataflowMathOneInputOperatorNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathOneInputOperatorNode"
  },
  {
    "label": "FDataflowMathTwoInputsOperatorNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathTwoInputsOperatorNode"
  },
  {
    "label": "FDataflowMathAddNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathAddNode"
  },
  {
    "label": "FDataflowMathSubtractNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathSubtractNode"
  },
  {
    "label": "FDataflowMathMultiplyNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathMultiplyNode"
  },
  {
    "label": "FDataflowMathDivideNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathDivideNode"
  },
  {
    "label": "FDataflowMathMinimumNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathMinimumNode"
  },
  {
    "label": "FDataflowMathMaximumNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathMaximumNode"
  },
  {
    "label": "FDataflowMathReciprocalNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathReciprocalNode"
  },
  {
    "label": "FDataflowMathSquareNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathSquareNode"
  },
  {
    "label": "FDataflowMathCubeNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathCubeNode"
  },
  {
    "label": "FDataflowMathSquareRootNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathSquareRootNode"
  },
  {
    "label": "FDataflowMathInverseSquareRootNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathInverseSquareRootNode"
  },
  {
    "label": "FDataflowMathNegateNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathNegateNode"
  },
  {
    "label": "FDataflowMathAbsNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathAbsNode"
  },
  {
    "label": "FDataflowMathFloorNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathFloorNode"
  },
  {
    "label": "FDataflowMathCeilNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathCeilNode"
  },
  {
    "label": "FDataflowMathRoundNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathRoundNode"
  },
  {
    "label": "FDataflowMathTruncNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathTruncNode"
  },
  {
    "label": "FDataflowMathFracNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathFracNode"
  },
  {
    "label": "FDataflowMathPowNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathPowNode"
  },
  {
    "label": "FDataflowMathLogXNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathLogXNode"
  },
  {
    "label": "FDataflowMathLogNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathLogNode"
  },
  {
    "label": "FDataflowMathExpNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathExpNode"
  },
  {
    "label": "FDataflowMathSignNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathSignNode"
  },
  {
    "label": "FDataflowMathOneMinusNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathOneMinusNode"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDataflowMathConstantNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathConstantNode"
  },
  {
    "label": "FDataflowMathSinNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathSinNode"
  },
  {
    "label": "FDataflowMathCosNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathCosNode"
  },
  {
    "label": "FDataflowMathTanNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathTanNode"
  },
  {
    "label": "FDataflowMathArcSinNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathArcSinNode"
  },
  {
    "label": "FDataflowMathArcCosNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathArcCosNode"
  },
  {
    "label": "FDataflowMathArcTanNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathArcTanNode"
  },
  {
    "label": "FDataflowMathArcTan2Node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathArcTan2Node"
  },
  {
    "label": "FDataflowMathDegToRadNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathDegToRadNode"
  },
  {
    "label": "FDataflowMathRadToDegNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowMathRadToDegNode"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ChaosLog . h \" # include \" CoreMinimal . h \" # include \" Dataflow / DataflowConnection . h \" # include \" Dataflow / DataflowNodeParameters . h \" # include \" Dataflow / DataflowNode . h \" # include \" DataflowMathNodes . generated . h \" # define DATAFLOW_MATH_NODES_CATEGORY \" Math | Scalar \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = Operands, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathOneInputOperatorNode()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FDataflowMathOneInputOperatorNode()"
  },
  {
    "label": "FDataflowMathOneInputOperatorNode()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FDataflowMathOneInputOperatorNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate(UE::Dataflow::FContext& Context, const FDataflowOutput* Out)"
  },
  {
    "label": "RegisterInputsAndOutputs()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RegisterInputsAndOutputs()"
  },
  {
    "label": "ComputeResult()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ComputeResult(UE::Dataflow::FContext& Context, double InA)"
  },
  {
    "label": "FDataflowMathTwoInputsOperatorNode()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FDataflowMathTwoInputsOperatorNode()"
  },
  {
    "label": "FDataflowMathTwoInputsOperatorNode()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FDataflowMathTwoInputsOperatorNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "ComputeResult()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ComputeResult(UE::Dataflow::FContext& Context, double InA, double InB)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathAddNode, \"Add\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathAddNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathSubtractNode, \"Subtract\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathSubtractNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathMultiplyNode, \"Multiply\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathMultiplyNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathDivideNode, \"Divide\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = SafeDivide, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathDivideNode()",
    "kind": "Method",
    "detail": "Function (FDataflowNumericTypes Fallback ; public :)",
    "insertText": "FDataflowMathDivideNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathMinimumNode, \"Minimum\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathMinimumNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathMaximumNode, \"Maximum\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathMaximumNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathReciprocalNode, \"Reciprocal\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = SafeDivide, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathReciprocalNode()",
    "kind": "Method",
    "detail": "Function (FDataflowNumericTypes Fallback ; public :)",
    "insertText": "FDataflowMathReciprocalNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathSquareNode, \"Square\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathSquareNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathCubeNode, \"Cube\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathCubeNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathSquareRootNode, \"SquareRoot\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathSquareRootNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathInverseSquareRootNode, \"InverseSquareRoot\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = SafeDivide, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathInverseSquareRootNode()",
    "kind": "Method",
    "detail": "Function (FDataflowNumericTypes Fallback ; public :)",
    "insertText": "FDataflowMathInverseSquareRootNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathNegateNode, \"Negate\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = SafeDivide, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathNegateNode()",
    "kind": "Method",
    "detail": "Function (FDataflowNumericTypes Fallback ; public :)",
    "insertText": "FDataflowMathNegateNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathAbsNode, \"Abs\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = SafeDivide, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathAbsNode()",
    "kind": "Method",
    "detail": "Function (FDataflowNumericTypes Fallback ; public :)",
    "insertText": "FDataflowMathAbsNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathFloorNode, \"Floor\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathFloorNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathCeilNode, \"Ceil\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathCeilNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathRoundNode, \"Round\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathRoundNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathTruncNode, \"Trunc\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathTruncNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathFracNode, \"Frac\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathFracNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathPowNode, \"Pow\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathPowNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathLogXNode, \"LogX\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = SafeDivide, meta = (DataflowInput))"
  },
  {
    "label": "FDataflowMathLogXNode()",
    "kind": "Method",
    "detail": "Function (FDataflowNumericTypes Base ; public :)",
    "insertText": "FDataflowMathLogXNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathLogNode, \"Log\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathLogNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathExpNode, \"Exp\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathExpNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathSignNode, \"Sign\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathSignNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathOneMinusNode, \"OneMinus\", DATAFLOW_MATH_NODES_CATEGORY, \"\") public: FDataflowMathOneMinusNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Dataflow_Math_Constants_Pi)",
    "insertText": "UMETA(DisplayName = \"Pi\"), Dataflow_Math_Constants_HalfPi UMETA(DisplayName = \"HalfPi\"), Dataflow_Math_Constants_TwoPi UMETA(DisplayName = \"TwoPi\"), Dataflow_Math_Constants_FourPi UMETA(DisplayName = \"FourPi\"), Dataflow_Math_Constants_InvPi UMETA(DisplayName = \"InvPi\"), Dataflow_Math_Constants_InvTwoPi UMETA(DisplayName = \"InvTwoPi\"), Dataflow_Math_Constants_Sqrt2 UMETA(DisplayName = \"Sqrt2\"), Dataflow_Math_Constants_InvSqrt2 UMETA(DisplayName = \"InvSqrt2\"), Dataflow_Math_Constants_Sqrt3 UMETA(DisplayName = \"Sqrt3\"), Dataflow_Math_Constants_InvSqrt3 UMETA(DisplayName = \"InvSqrt3\"), Dataflow_Math_Constants_E UMETA(DisplayName = \"e\"), Dataflow_Math_Constants_Gamma UMETA(DisplayName = \"Gamma\"), Dataflow_Math_Constants_GoldenRatio UMETA(DisplayName = \"GoldenRatio\"), Dataflow_Math_Constants_Max UMETA(Hidden)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathConstantNode, \"Constants\", DATAFLOW_MATH_NODES_CATEGORY, \"\") UPROPERTY(EditAnywhere, Category = \"Constants\")"
  },
  {
    "label": "FDataflowMathConstantNode()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FDataflowMathConstantNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GetConstant()",
    "kind": "Method",
    "detail": "Function (private : double)",
    "insertText": "GetConstant()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathSinNode, \"Sin\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathSinNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathCosNode, \"Cos\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathCosNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathTanNode, \"Tan\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathTanNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathArcSinNode, \"ArcSin\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathArcSinNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathArcCosNode, \"ArcCos\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathArcCosNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathArcTanNode, \"ArcTan\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathArcTanNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathArcTan2Node, \"ArcTan2\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathArcTan2Node(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathDegToRadNode, \"DegToRad\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathDegToRadNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() DATAFLOW_NODE_DEFINE_INTERNAL(FDataflowMathRadToDegNode, \"RadToDeg\", DATAFLOW_MATH_TRIG_NODES_CATEGORY, \"\") public: FDataflowMathRadToDegNode(const UE::Dataflow::FNodeParameters& InParam, FGuid InGuid = FGuid::NewGuid())"
  },
  {
    "label": "RegisterDataflowMathNodes()",
    "kind": "Method",
    "detail": "Function (} ; namespace UE::Dataflow { void)",
    "insertText": "RegisterDataflowMathNodes()"
  }
]