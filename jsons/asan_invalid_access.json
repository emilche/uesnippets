[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_DEBUG_ASAN_INVALID_ACCESS_H_ # define BASE_DEBUG_ASAN_INVALID_ACCESS_H_ # include \" base / base_export . h \" # include \" base / compiler_specific . h \" # include \" base / sanitizer_buildflags . h \" # include \" build / build_config . h \" namespace base { namespace debug { # if)",
    "insertText": "defined(ADDRESS_SANITIZER) || BUILDFLAG(IS_HWASAN) BASE_EXPORT NOINLINE void AsanHeapOverflow()"
  },
  {
    "label": "AsanHeapUnderflow()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT NOINLINE void)",
    "insertText": "AsanHeapUnderflow()"
  },
  {
    "label": "AsanHeapUseAfterFree()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT NOINLINE void)",
    "insertText": "AsanHeapUseAfterFree()"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_WIN) BASE_EXPORT NOINLINE void AsanCorruptHeapBlock()"
  },
  {
    "label": "AsanCorruptHeap()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT NOINLINE void)",
    "insertText": "AsanCorruptHeap()"
  }
]