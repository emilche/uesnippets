[
  {
    "label": "PushSincResampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PushSincResampler"
  },
  {
    "label": "SplittingFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SplittingFilter"
  },
  {
    "label": "Band",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Band"
  },
  {
    "label": "AudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioBuffer"
  },
  {
    "label": "set_downmixing_to_specific_channel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_downmixing_to_specific_channel(size_t channel)"
  },
  {
    "label": "set_downmixing_by_averaging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_downmixing_by_averaging()"
  },
  {
    "label": "set_num_channels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_num_channels(size_t num_channels)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(const int16_t* const interleaved_data,\n                const StreamConfig& stream_config)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(const float* const* stacked_data,\n                const StreamConfig& stream_config)"
  },
  {
    "label": "CopyTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyTo(const StreamConfig& stream_config,\n              int16_t* const interleaved_data)"
  },
  {
    "label": "CopyTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyTo(const StreamConfig& stream_config, float* const* stacked_data)"
  },
  {
    "label": "SplitIntoFrequencyBands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitIntoFrequencyBands()"
  },
  {
    "label": "MergeFrequencyBands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeFrequencyBands()"
  },
  {
    "label": "ImportSplitChannelData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportSplitChannelData(size_t channel,\n                              const int16_t* const* split_band_data)"
  },
  {
    "label": "channels()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "channels()"
  },
  {
    "label": "channels_const()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "channels_const()"
  },
  {
    "label": "split_bands_const()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "split_bands_const(channel)"
  },
  {
    "label": "split_bands()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "split_bands(channel)"
  },
  {
    "label": "split_channels_const()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "split_channels_const(band)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(AudioBufferTest,\n                           SetNumChannelsSetsChannelBuffersNumChannels)"
  },
  {
    "label": "RestoreNumChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreNumChannels()"
  }
]