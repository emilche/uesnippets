[
  {
    "label": "IWorldPartitionCookPackageGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCookPackageGenerator"
  },
  {
    "label": "IWorldPartitionCookPackageObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCookPackageObject"
  },
  {
    "label": "FWorldPartitionCookPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionCookPackage"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FWorldPartitionCookPackageContextParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionCookPackageContextParams"
  },
  {
    "label": "IWorldPartitionCookPackageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionCookPackageContext"
  },
  {
    "label": "IWorldPartitionCookPackageContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" Templates / SubclassOf . h \" class IWorldPartitionCookPackageGenerator ; class IWorldPartitionCookPackageObject ; struct FWorldPartitionCookPackage ; class AActor ; struct FWorldPartitionCookPackageContextParams { TArray<TSubclassOf<AActor>> FilteredClasses ; } ; class IWorldPartitionCookPackageContext { public : ~)",
    "insertText": "IWorldPartitionCookPackageContext()"
  },
  {
    "label": "RegisterPackageCookPackageGenerator()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "RegisterPackageCookPackageGenerator(IWorldPartitionCookPackageGenerator* Generator)"
  },
  {
    "label": "UnregisterPackageCookPackageGenerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPackageCookPackageGenerator(IWorldPartitionCookPackageGenerator* Generator)"
  },
  {
    "label": "GetGeneratedPackagePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGeneratedPackagePath(IWorldPartitionCookPackageObject* InCookPackageObject)"
  },
  {
    "label": "GatherPackagesToCook()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GatherPackagesToCook(const FWorldPartitionCookPackageContextParams& Params = FWorldPartitionCookPackageContextParams())"
  },
  {
    "label": "GetParams()",
    "kind": "Method",
    "detail": "Function (const FWorldPartitionCookPackageContextParams&)",
    "insertText": "GetParams()"
  }
]