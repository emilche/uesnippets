[
  {
    "label": "FGenericPlatformBackgroundHttpRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericPlatformBackgroundHttpRequest"
  },
  {
    "label": "FGenericPlatformBackgroundHttpWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericPlatformBackgroundHttpWrapper"
  },
  {
    "label": "IBackgroundHttpRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBackgroundHttpRequest"
  },
  {
    "label": "FGenericPlatformBackgroundHttpRequest()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BackgroundHttpRequestImpl . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" Interfaces / IBackgroundHttpRequest . h \" # include \" Interfaces / IHttpRequest . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" class FGenericPlatformBackgroundHttpRequest : public FBackgroundHttpRequestImpl { public :)",
    "insertText": "FGenericPlatformBackgroundHttpRequest()"
  },
  {
    "label": "HandleDelayedProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDelayedProcess()"
  },
  {
    "label": "CompleteWithExistingResponseData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteWithExistingResponseData(FBackgroundHttpResponsePtr BackgroundResponse)"
  },
  {
    "label": "CancelRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelRequest()"
  },
  {
    "label": "FGenericPlatformBackgroundHttpWrapper()",
    "kind": "Method",
    "detail": "Function (protected : class FGenericPlatformBackgroundHttpWrapper { public :)",
    "insertText": "FGenericPlatformBackgroundHttpWrapper(FBackgroundHttpRequestPtr Request, int MaxRetriesToAttempt)"
  },
  {
    "label": "FGenericPlatformBackgroundHttpWrapper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FGenericPlatformBackgroundHttpWrapper()"
  },
  {
    "label": "MakeRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeRequest()"
  },
  {
    "label": "HttpRequestComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HttpRequestComplete(FHttpRequestPtr HttpRequestIn, FHttpResponsePtr HttpResponse, bool bSuccess)"
  },
  {
    "label": "HasRetriesRemaining()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "HasRetriesRemaining()"
  },
  {
    "label": "UpdateHttpProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHttpProgress(FHttpRequestPtr UnderlyingHttpRequest, uint64 BytesSent, uint64 BytesReceived)"
  },
  {
    "label": "CleanUpHttpRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpHttpRequest()"
  },
  {
    "label": "GetURLForCurrentRetryNumber()",
    "kind": "Method",
    "detail": "Function (const FString)",
    "insertText": "GetURLForCurrentRetryNumber()"
  }
]