[
  {
    "label": "RtcEventLogEncoderV3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLogEncoderV3"
  },
  {
    "label": "RtcEventLogEncoderV3()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_ENCODER_RTC_EVENT_LOG_ENCODER_V3_H_ # define LOGGING_RTC_EVENT_LOG_ENCODER_RTC_EVENT_LOG_ENCODER_V3_H_ # include<deque> # include<map> # include<memory> # include<string> # include \" api / array_view . h \" # include \" logging / rtc_event_log / encoder / rtc_event_log_encoder . h \" # include \" logging / rtc_event_log / events / rtc_event_definition . h \" namespace webrtc { class RtcEventLogEncoderV3 final : public RtcEventLogEncoder { public :)",
    "insertText": "RtcEventLogEncoderV3()"
  },
  {
    "label": "EncodeBatch()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EncodeBatch(std::deque<std::unique_ptr<RtcEvent>>::const_iterator begin, std::deque<std::unique_ptr<RtcEvent>>::const_iterator end)"
  },
  {
    "label": "EncodeLogStart()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EncodeLogStart(int64_t timestamp_us, int64_t utc_time_us)"
  },
  {
    "label": "EncodeLogEnd()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EncodeLogEnd(int64_t timestamp_us)"
  },
  {
    "label": "string()",
    "kind": "Method",
    "detail": "Function (private : std::map<RtcEvent::Type,std::function<)",
    "insertText": "string(rtc::ArrayView<const RtcEvent*>)"
  }
]