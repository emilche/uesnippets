[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "SBlueprintContextTargetMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintContextTargetMenu"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SGraphActionMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphActionMenu"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "FBlueprintActionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintActionContext"
  },
  {
    "label": "FCustomExpanderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCustomExpanderData"
  },
  {
    "label": "FEdGraphSchemaAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphSchemaAction"
  },
  {
    "label": "FGraphActionListBuilderBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionListBuilderBase"
  },
  {
    "label": "FBlueprintActionMenuBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintActionMenuBuilder"
  },
  {
    "label": "SBlueprintActionMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintActionMenu"
  },
  {
    "label": "FCreateWidgetForActionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateWidgetForActionData"
  },
  {
    "label": "SBlueprintActionMenuExpander",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintActionMenuExpander"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, TSharedPtr<FBlueprintEditor> InEditor )"
  },
  {
    "label": "GetFilterTextBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SEditableTextBox>)",
    "insertText": "GetFilterTextBox()"
  },
  {
    "label": "OnContextToggleChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContextToggleChanged(ECheckBoxState CheckState)"
  },
  {
    "label": "OnContextTargetsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContextTargetsChanged(uint32 ContextTargetMask)"
  },
  {
    "label": "OnActionSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActionSelected( const TArray< TSharedPtr<FEdGraphSchemaAction> >& SelectedAction, ESelectInfo::Type InSelectionType )"
  },
  {
    "label": "OnCreateWidgetForAction()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnCreateWidgetForAction(struct FCreateWidgetForActionData* const InCreateData)"
  },
  {
    "label": "OnGetActionList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGraphActionListBuilderBase>)",
    "insertText": "OnGetActionList()"
  },
  {
    "label": "ConstructActionContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructActionContext(FBlueprintActionContext& ContextDescOut)"
  },
  {
    "label": "TryInsertPromoteToVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryInsertPromoteToVariable(FBlueprintActionContext const& Context, FGraphActionListBuilderBase& OutAllActions)"
  },
  {
    "label": "OnNamespaceSelectedForImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceSelectedForImport(const FString& InNamespace)"
  },
  {
    "label": "OnGetNamespacesToExcludeFromImportMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetNamespacesToExcludeFromImportMenu(TSet<FString>& OutNamespacesToExclude)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FCustomExpanderData& ActionMenuData)"
  }
]