[
  {
    "label": "FAutomationTestBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationTestBase"
  },
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "FCheckValues",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCheckValues"
  },
  {
    "label": "FEnumerateTestParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnumerateTestParams"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Logging / LogMacros . h \" # include \" TraceServices / Model / TimingProfiler . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(TimingProfilerTests, Log, All)"
  },
  {
    "label": "RunEnumerateBenchmark()",
    "kind": "Method",
    "detail": "Function (class FAutomationTestBase ; class FTimingProfilerTests { public : struct FCheckValues { double TotalEventDuration = 0 . 0 ; uint64 EventCount = 0 ; uint32 SumDepth = 0 ; uint32 SumTimerIndex = 0 ; double SessionDuration = 0 . 0 ; double EnumerationDuration = 0 . 0 ; } ; struct FEnumerateTestParams { double Interval = 0 . 0 1 ; int32 NumEnumerations = 1 0 0 0 0 ; TraceServices::EEventSortOrder SortOrder = TraceServices::EEventSortOrder::ByEndTime ; } ; void)",
    "insertText": "RunEnumerateBenchmark(const FEnumerateTestParams& InParams, FCheckValues& OutCheckValues)"
  },
  {
    "label": "RunEnumerateAsyncBenchmark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunEnumerateAsyncBenchmark(const FEnumerateTestParams& InParams, FCheckValues& OutCheckValues)"
  },
  {
    "label": "RunEnumerateAllTracksBenchmark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunEnumerateAllTracksBenchmark(const FEnumerateTestParams& InParams, FCheckValues& OutCheckValues)"
  },
  {
    "label": "RunEnumerateAsyncAllTracksBenchmark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunEnumerateAsyncAllTracksBenchmark(const FEnumerateTestParams& InParams, FCheckValues& OutCheckValues)"
  },
  {
    "label": "RunEnumerateSyncAsyncComparisonTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunEnumerateSyncAsyncComparisonTest(FAutomationTestBase& Test, const FEnumerateTestParams& InParam, bool bGameThreadOnly)"
  },
  {
    "label": "GetTimelineIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTimelineIndex(const TCHAR* InName)"
  },
  {
    "label": "VerifyCheckValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyCheckValues(FAutomationTestBase& Test, FCheckValues First, FCheckValues Second)"
  }
]