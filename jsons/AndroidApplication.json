[
  {
    "label": "FPlatformOpenGLContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlatformOpenGLContext"
  },
  {
    "label": "FAndroidApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidApplication"
  },
  {
    "label": "IInputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInputDevice"
  },
  {
    "label": "FAndroidInputInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidInputInterface"
  },
  {
    "label": "PlatformInit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericApplication . h \" # include \" HAL / IConsoleManager . h \" # include \" AndroidWindow . h \" # if USE_ANDROID_JNI # include \" Android / AndroidJavaEnv . h \" # endif namespace FAndroidAppEntry { void)",
    "insertText": "PlatformInit()"
  },
  {
    "label": "ReInitWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReInitWindow(void* NewNativeWindowHandle = nullptr)"
  },
  {
    "label": "ReleaseEGL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseEGL()"
  },
  {
    "label": "OnPauseEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPauseEvent()"
  },
  {
    "label": "GetRenderingContext()",
    "kind": "Method",
    "detail": "Function (} struct FPlatformOpenGLContext ; namespace FAndroidEGL { FPlatformOpenGLContext*)",
    "insertText": "GetRenderingContext()"
  },
  {
    "label": "CreateContext()",
    "kind": "Method",
    "detail": "Function (FPlatformOpenGLContext*)",
    "insertText": "CreateContext()"
  },
  {
    "label": "MakeCurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeCurrent(FPlatformOpenGLContext*)"
  },
  {
    "label": "ReleaseContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseContext(FPlatformOpenGLContext*)"
  },
  {
    "label": "SwapBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapBuffers(FPlatformOpenGLContext*)"
  },
  {
    "label": "SetFlipsEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlipsEnabled(bool Enabled)"
  },
  {
    "label": "BindDisplayToContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindDisplayToContext(FPlatformOpenGLContext*)"
  },
  {
    "label": "CreateAndroidApplication()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_DISABLE_DEPRECATION_WARNINGS class FAndroidApplication : public GenericApplication { public : FAndroidApplication*)",
    "insertText": "CreateAndroidApplication()"
  },
  {
    "label": "InitializeJavaEnv()",
    "kind": "Method",
    "detail": "Function (# if USE_ANDROID_JNI void)",
    "insertText": "InitializeJavaEnv(JavaVM* VM, jint Version, jobject GlobalThis)"
  },
  {
    "label": "InitializeJavaEnv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeJavaEnv(VM, Version, GlobalThis)"
  },
  {
    "label": "GetGameActivityThis()",
    "kind": "Method",
    "detail": "Function (} jobject)",
    "insertText": "GetGameActivityThis()"
  },
  {
    "label": "GetClassLoader()",
    "kind": "Method",
    "detail": "Function (} jobject)",
    "insertText": "GetClassLoader()"
  },
  {
    "label": "GetJavaEnv()",
    "kind": "Method",
    "detail": "Function (} JNIEnv*)",
    "insertText": "GetJavaEnv(bool bRequireGlobalThis = true)"
  },
  {
    "label": "FindJavaClass()",
    "kind": "Method",
    "detail": "Function (} jclass)",
    "insertText": "FindJavaClass(const char* name)"
  },
  {
    "label": "FindJavaClassGlobalRef()",
    "kind": "Method",
    "detail": "Function (} jclass)",
    "insertText": "FindJavaClassGlobalRef(const char* name)"
  },
  {
    "label": "DetachJavaEnv()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DetachJavaEnv()"
  },
  {
    "label": "CheckJavaException()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CheckJavaException()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} # endif FAndroidApplication*)",
    "insertText": "Get()"
  },
  {
    "label": "SetMessageHandler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMessageHandler(const TSharedRef< FGenericApplicationMessageHandler >& InMessageHandler)"
  },
  {
    "label": "PollGameDeviceState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PollGameDeviceState(const float TimeDelta)"
  },
  {
    "label": "GetWorkArea()",
    "kind": "Method",
    "detail": "Function (FPlatformRect)",
    "insertText": "GetWorkArea(const FPlatformRect& CurrentWindow)"
  },
  {
    "label": "GetInputInterface()",
    "kind": "Method",
    "detail": "Function (IInputInterface*)",
    "insertText": "GetInputInterface()"
  },
  {
    "label": "MakeWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FGenericWindow>)",
    "insertText": "MakeWindow()"
  },
  {
    "label": "AddExternalInputDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExternalInputDevice(TSharedPtr<class IInputDevice> InputDevice)"
  },
  {
    "label": "InitializeWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeWindow(const TSharedRef< FGenericWindow >& InWindow, const TSharedRef< FGenericWindowDefinition >& InDefinition, const TSharedPtr< FGenericWindow >& InParent, const bool bShowImmediately)"
  },
  {
    "label": "OnWindowSizeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowSizeChanged()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const float TimeDelta)"
  },
  {
    "label": "IsGamepadAttached()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGamepadAttached()"
  },
  {
    "label": "GetNativeWindowResolution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNativeWindowResolution(int32_t& OutWidth, int32_t& OutHeight)"
  },
  {
    "label": "FAndroidApplication()",
    "kind": "Method",
    "detail": "Function (TAutoConsoleVariable<bool> CVarAndroidSupportsTimestampQueries ; TAutoConsoleVariable<bool> CVarAndroidSupportsDynamicResolution ; protected :)",
    "insertText": "FAndroidApplication()"
  },
  {
    "label": "FAndroidApplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAndroidApplication(TSharedPtr<class FAndroidInputInterface> InInputInterface)"
  },
  {
    "label": "HandleDeviceOrientation()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<class FAndroidInputInterface> InputInterface ; bool bHasLoadedInputPlugins ; TArray<TSharedRef<FAndroidWindow>> Windows ; bool bWindowSizeChanged ; FAndroidApplication* _application ; EDeviceScreenOrientation DeviceOrientation ; void)",
    "insertText": "HandleDeviceOrientation()"
  }
]