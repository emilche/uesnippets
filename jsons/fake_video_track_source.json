[
  {
    "label": "FakeVideoTrackSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeVideoTrackSource"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_TEST_FAKE_VIDEO_TRACK_SOURCE_H_ # define PC_TEST_FAKE_VIDEO_TRACK_SOURCE_H_ # include \" api / media_stream_interface . h \" # include \" media / base / video_broadcaster . h \" # include \" pc / video_track_source . h \" namespace webrtc { class FakeVideoTrackSource : public VideoTrackSource { public : rtc::scoped_refptr<FakeVideoTrackSource>)",
    "insertText": "Create(bool is_screencast)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} rtc::scoped_refptr<FakeVideoTrackSource>)",
    "insertText": "Create()"
  },
  {
    "label": "is_screencast()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "is_screencast()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (video_broadcaster_ .)",
    "insertText": "OnFrame(frame)"
  },
  {
    "label": "FakeVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "FakeVideoTrackSource(bool is_screencast) : VideoTrackSource(false ), is_screencast_(is_screencast)"
  },
  {
    "label": "FakeVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FakeVideoTrackSource()"
  },
  {
    "label": "source()",
    "kind": "Method",
    "detail": "Function (rtc::VideoSourceInterface<VideoFrame>*)",
    "insertText": "source()"
  }
]