[
  {
    "label": "FVulkanDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanDevice"
  },
  {
    "label": "FVulkanQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueue"
  },
  {
    "label": "FVulkanCmdBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCmdBuffer"
  },
  {
    "label": "FVulkanTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTexture"
  },
  {
    "label": "FVulkanResourceMultiBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanResourceMultiBuffer"
  },
  {
    "label": "FVulkanLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanLayout"
  },
  {
    "label": "FVulkanOcclusionQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanOcclusionQuery"
  },
  {
    "label": "FVulkanCommandBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandBufferManager"
  },
  {
    "label": "FRHITransientHeapAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHITransientHeapAllocation"
  },
  {
    "label": "FVulkanPendingBufferLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanPendingBufferLock"
  },
  {
    "label": "FVulkanView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanView"
  },
  {
    "label": "FVulkanViewableResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanViewableResource"
  },
  {
    "label": "FVulkanShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderResourceView"
  },
  {
    "label": "FVulkanUnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanUnorderedAccessView"
  },
  {
    "label": "FDeviceMemoryAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeviceMemoryAllocation"
  },
  {
    "label": "FVulkanVertexDeclaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanVertexDeclaration"
  },
  {
    "label": "FGfxPipelineDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGfxPipelineDesc"
  },
  {
    "label": "FVulkanShaderModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderModule"
  },
  {
    "label": "FVulkanShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShader"
  },
  {
    "label": "FSpirvCode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpirvCode"
  },
  {
    "label": "FVulkanShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShader"
  },
  {
    "label": "FSpirvContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpirvContainer"
  },
  {
    "label": "FVulkanShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShader"
  },
  {
    "label": "FVulkanShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShader"
  },
  {
    "label": "FVulkanShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShader"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "FVulkanPipelineStateCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPipelineStateCacheManager"
  },
  {
    "label": "FVulkanComputeShaderState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanComputeShaderState"
  },
  {
    "label": "FVulkanComputePipeline",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanComputePipeline"
  },
  {
    "label": "FVulkanShaderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderFactory"
  },
  {
    "label": "TVulkanBaseShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TVulkanBaseShader"
  },
  {
    "label": "FVulkanShaderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderFactory"
  },
  {
    "label": "FVulkanRayTracingShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRayTracingShader"
  },
  {
    "label": "FVulkanShaderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderFactory"
  },
  {
    "label": "FVulkanShaderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderFactory"
  },
  {
    "label": "FVulkanBoundShaderState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanBoundShaderState"
  },
  {
    "label": "FVulkanCpuReadbackBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVulkanCpuReadbackBuffer"
  },
  {
    "label": "FVulkanView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanView"
  },
  {
    "label": "FInvalidatedState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInvalidatedState"
  },
  {
    "label": "FTypedBufferView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedBufferView"
  },
  {
    "label": "FStructuredBufferView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructuredBufferView"
  },
  {
    "label": "FAccelerationStructureView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAccelerationStructureView"
  },
  {
    "label": "FTextureView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureView"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "FVulkanLinkedView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanLinkedView"
  },
  {
    "label": "FVulkanViewableResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanViewableResource"
  },
  {
    "label": "virtual",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "virtual"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVulkanTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTexture"
  },
  {
    "label": "FImageCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImageCreateInfo"
  },
  {
    "label": "FRHICommandSetInitialImageState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHICommandSetInitialImageState"
  },
  {
    "label": "FVulkanQueryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanQueryPool"
  },
  {
    "label": "FVulkanOcclusionQueryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanOcclusionQueryPool"
  },
  {
    "label": "EState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EState"
  },
  {
    "label": "FVulkanTimingQueryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTimingQueryPool"
  },
  {
    "label": "FCmdBufferFence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCmdBufferFence"
  },
  {
    "label": "FVulkanRenderQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRenderQuery"
  },
  {
    "label": "FVulkanOcclusionQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanOcclusionQuery"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVulkanTimingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTimingQuery"
  },
  {
    "label": "FVulkanResourceMultiBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanResourceMultiBuffer"
  },
  {
    "label": "FRHICommandListBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListBase"
  },
  {
    "label": "FBufferAlloc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBufferAlloc"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "FRHICommandMultiBufferUnlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHICommandMultiBufferUnlock"
  },
  {
    "label": "FVulkanUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanUniformBuffer"
  },
  {
    "label": "FVulkanUnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanUnorderedAccessView"
  },
  {
    "label": "FVulkanShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanShaderResourceView"
  },
  {
    "label": "FVulkanVertexInputStateInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanVertexInputStateInfo"
  },
  {
    "label": "FVulkanPendingGfxState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPendingGfxState"
  },
  {
    "label": "FVulkanPipelineStateCacheManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanPipelineStateCacheManager"
  },
  {
    "label": "holds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "holds"
  },
  {
    "label": "FPackedUniformBuffers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackedUniformBuffers"
  },
  {
    "label": "FVulkanStagingBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanStagingBuffer"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "FVulkanGPUFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanGPUFence"
  },
  {
    "label": "FVulkanCommandListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanCommandListContext"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "FVulkanRayTracingScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRayTracingScene"
  },
  {
    "label": "FVulkanRayTracingGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRayTracingGeometry"
  },
  {
    "label": "FVulkanRayTracingShaderTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRayTracingShaderTable"
  },
  {
    "label": "FVulkanRayTracingPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanRayTracingPipelineState"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "TVulkanResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TVulkanResourceTraits"
  },
  {
    "label": "checkNoEntry()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "checkNoEntry()"
  },
  {
    "label": "EmptyCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyCache()"
  },
  {
    "label": "PurgeShaderModules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PurgeShaderModules()"
  },
  {
    "label": "GetOrCreateHandle()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FVulkanShaderModule>)",
    "insertText": "GetOrCreateHandle()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&VulkanShaderModulesMapCS)"
  },
  {
    "label": "CreateHandle()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateHandle(Layout, LayoutHash)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&VulkanShaderModulesMapCS)"
  },
  {
    "label": "CreateHandle()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateHandle(Desc, Layout, LayoutHash)"
  },
  {
    "label": "GetSpirvCode()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetSpirvCode(SpirvContainer)"
  },
  {
    "label": "GetPatchedSpirvCode()",
    "kind": "Method",
    "detail": "Function (FSpirvCode)",
    "insertText": "GetPatchedSpirvCode(const FGfxPipelineDesc& Desc, const FVulkanLayout* Layout)"
  },
  {
    "label": "PatchSpirvInputAttachments()",
    "kind": "Method",
    "detail": "Function (FSpirvCode)",
    "insertText": "PatchSpirvInputAttachments(FSpirvCode& SpirvCode)"
  },
  {
    "label": "GetSpirvCode()",
    "kind": "Method",
    "detail": "Function (FSpirvCode)",
    "insertText": "GetSpirvCode(const FSpirvContainer& Container)"
  },
  {
    "label": "CreateHandle()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FVulkanShaderModule>)",
    "insertText": "CreateHandle(const FVulkanLayout* Layout, uint32 LayoutHash)"
  },
  {
    "label": "CreateHandle()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FVulkanShaderModule>)",
    "insertText": "CreateHandle(const FGfxPipelineDesc& Desc, const FVulkanLayout* Layout, uint32 LayoutHash)"
  },
  {
    "label": "GetOrCreateHandle()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FVulkanShaderModule>)",
    "insertText": "GetOrCreateHandle(uint32 ModuleIdentifier)"
  },
  {
    "label": "ScopedLock()",
    "kind": "Method",
    "detail": "Function (FRWScopeLock)",
    "insertText": "ScopedLock(RWLock[ShaderType::StaticFrequency], SLT_ReadOnly)"
  },
  {
    "label": "OnDeleteShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteShader(const FVulkanShader& Shader)"
  },
  {
    "label": "FVulkanBoundShaderState()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanBoundShaderState(\n\t\tFRHIVertexDeclaration* InVertexDeclarationRHI,\n\t\tFRHIVertexShader* InVertexShaderRHI,\n\t\tFRHIPixelShader* InPixelShaderRHI,\n\t\tFRHIGeometryShader* InGeometryShaderRHI\n\t)"
  },
  {
    "label": "GetVertexShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetVertexShader()"
  },
  {
    "label": "GetPixelShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPixelShader()"
  },
  {
    "label": "GetMeshShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetMeshShader()"
  },
  {
    "label": "GetTaskShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTaskShader()"
  },
  {
    "label": "GetGeometryShader()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetGeometryShader()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "UpdateLinkedViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLinkedViews()"
  },
  {
    "label": "FVulkanTexture()",
    "kind": "Method",
    "detail": "Function (unambigious)",
    "insertText": "FVulkanTexture(FVulkanDevice& InDevice, const FRHITextureCreateDesc& InCreateDesc, const AHardwareBuffer_Desc& HardwareBufferDesc, AHardwareBuffer* HardwareBuffer)"
  },
  {
    "label": "AliasTextureResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AliasTextureResources(FTextureRHIRef& SrcTextureRHI)"
  },
  {
    "label": "GenerateImageCreateInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateImageCreateInfo(\n\t\tFImageCreateInfo& OutImageCreateInfo,\n\t\tFVulkanDevice& InDevice,\n\t\tconst FRHITextureDesc& InDesc,\n\t\tVkFormat* OutStorageFormat = nullptr,\n\t\tVkFormat* OutViewFormat = nullptr,\n\t\tbool bForceLinearTexture = false)"
  },
  {
    "label": "DestroySurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySurface()"
  },
  {
    "label": "InvalidateMappedMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateMappedMemory()"
  },
  {
    "label": "GetMipStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMipStride(uint32 MipIndex, uint32& Stride)"
  },
  {
    "label": "GetMipOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMipOffset(uint32 MipIndex, uint32& Offset)"
  },
  {
    "label": "GetMipSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMipSize(uint32 MipIndex, uint32& MipBytes)"
  },
  {
    "label": "ErrorInvalidViewType()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "ErrorInvalidViewType()"
  },
  {
    "label": "InternalLockWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalLockWrite(FVulkanCommandListContext& Context, FVulkanTexture* Surface, const VkBufferImageCopy& Region, VulkanRHI::FStagingBuffer* StagingBuffer)"
  },
  {
    "label": "SetInitialImageState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialImageState(FVulkanCommandListContext& Context, VkImageLayout InitialLayout, bool bClear, const FClearValueBinding& ClearValueBinding, bool bIsTransientResource)"
  },
  {
    "label": "InternalMoveSurface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalMoveSurface(FVulkanDevice& InDevice, FVulkanCommandListContext& Context, VulkanRHI::FVulkanAllocation& DestAllocation, VkImageLayout OriginalLayout)"
  },
  {
    "label": "FVulkanQueryPool()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanQueryPool(FVulkanDevice* InDevice, FVulkanCommandBufferManager* CommandBufferManager, uint32 InMaxQueries, VkQueryType InQueryType, bool bInShouldAddReset = true)"
  },
  {
    "label": "CanBeReused()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeReused()"
  },
  {
    "label": "InternalTryGetResults()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InternalTryGetResults(bWait)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(FVulkanCmdBuffer* InCmdBuffer, uint32 InFrameNumber)"
  },
  {
    "label": "FlushAllocatedQueries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAllocatedQueries()"
  },
  {
    "label": "InternalTryGetResults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalTryGetResults(bool bWait)"
  },
  {
    "label": "SetFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFence(FVulkanCmdBuffer* InCmdBuffer)"
  },
  {
    "label": "FVulkanOcclusionQuery()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanOcclusionQuery()"
  },
  {
    "label": "ReleaseFromPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseFromPool()"
  },
  {
    "label": "FVulkanTimingQuery()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanTimingQuery()"
  },
  {
    "label": "FVulkanResourceMultiBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanResourceMultiBuffer(FVulkanDevice* InDevice, FRHIBufferDesc const& InBufferDesc, FRHIResourceCreateInfo& CreateInfo, class FRHICommandListBase* InRHICmdList = nullptr, const FRHITransientHeapAllocation* InTransientHeapAllocation = nullptr)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "TakeOwnership()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TakeOwnership(FVulkanResourceMultiBuffer& Other)"
  },
  {
    "label": "ReleaseOwnership()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseOwnership()"
  },
  {
    "label": "UEToVKBufferUsageFlags()",
    "kind": "Method",
    "detail": "Function (VkBufferUsageFlags)",
    "insertText": "UEToVKBufferUsageFlags(FVulkanDevice* InDevice, EBufferUsageFlags InUEUsage, bool bZeroSize)"
  },
  {
    "label": "AllocateMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateMemory(FBufferAlloc& OutAlloc)"
  },
  {
    "label": "FVulkanUniformBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanUniformBuffer(FVulkanDevice& Device, const FRHIUniformBufferLayout* InLayout, const void* Contents, EUniformBufferUsage InUsage, EUniformBufferValidation Validation)"
  },
  {
    "label": "UpdateResourceTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResourceTable(const FRHIUniformBufferLayout& InLayout, const void* Contents, int32 ResourceNum)"
  },
  {
    "label": "UpdateResourceTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResourceTable(FRHIResource** Resources, int32 ResourceNum)"
  },
  {
    "label": "GetBindlessHandle()",
    "kind": "Method",
    "detail": "Function (FRHIDescriptorHandle)",
    "insertText": "GetBindlessHandle()"
  },
  {
    "label": "SetupUniformBufferView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupUniformBufferView()"
  },
  {
    "label": "FVulkanUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanUnorderedAccessView(FRHICommandListBase& RHICmdList, FVulkanDevice& InDevice, FRHIViewableResource* InResource, FRHIViewDesc const& InViewDesc)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear(TRHICommandList_RecursiveHazardous<FVulkanCommandListContext>& RHICmdList, const void* ClearValue, bool bFloat)"
  },
  {
    "label": "FVulkanShaderResourceView()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanShaderResourceView(FRHICommandListBase& RHICmdList, FVulkanDevice& InDevice, FRHIViewableResource* InResource, FRHIViewDesc const& InViewDesc)"
  },
  {
    "label": "FVulkanVertexInputStateInfo()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FVulkanVertexInputStateInfo()"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Generate(FVulkanVertexDeclaration* VertexDeclaration, uint32 VertexHeaderInOutAttributeMask)"
  }
]