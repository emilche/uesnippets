[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IStructDeserializerBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructDeserializerBackend"
  },
  {
    "label": "GetCurrentPropertyName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class Error ; enum class EStructDeserializerBackendTokens { ArrayEnd,ArrayStart,Comment,Error,None,Property,StructureEnd,StructureStart,} ; class IStructDeserializerBackend { public : const FString&)",
    "insertText": "GetCurrentPropertyName()"
  },
  {
    "label": "GetDebugString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugString()"
  },
  {
    "label": "GetLastErrorMessage()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetLastErrorMessage()"
  },
  {
    "label": "GetNextToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNextToken(EStructDeserializerBackendTokens& OutToken)"
  },
  {
    "label": "ReadProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadProperty(FProperty* Property, FProperty* Outer, void* Data, int32 ArrayIndex)"
  },
  {
    "label": "ReadPODArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadPODArray(FArrayProperty* ArrayProperty, void* Data)"
  },
  {
    "label": "SkipStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SkipStructure()"
  },
  {
    "label": "IStructDeserializerBackend()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "IStructDeserializerBackend()"
  }
]