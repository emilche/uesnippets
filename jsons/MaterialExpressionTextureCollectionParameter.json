[
  {
    "label": "UMaterialExpressionTextureCollectionParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionTextureCollectionParameter"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Materials / MaterialExpressionTextureCollection . h \" # include \" MaterialExpressionTextureCollectionParameter . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category= MaterialExpressionTextureCollectionParameter)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GenerateHLSLExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateHLSLExpression(FMaterialHLSLGenerator& Generator, UE::HLSLTree::FScope& Scope, int32 OutputIndex, UE::HLSLTree::FExpression const*& OutExpression)"
  },
  {
    "label": "CanRenameNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameNode()"
  },
  {
    "label": "GetEditableName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEditableName()"
  },
  {
    "label": "SetEditableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableName(const FString& NewName)"
  },
  {
    "label": "HasAParameterName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAParameterName()"
  },
  {
    "label": "GetParameterName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetParameterName()"
  },
  {
    "label": "SetParameterName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParameterName(const FName& Name)"
  },
  {
    "label": "ValidateParameterName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateParameterName(const bool bAllowDuplicateName)"
  },
  {
    "label": "GetParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetParameterValue(FMaterialParameterMetadata& OutMeta)"
  },
  {
    "label": "SetParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParameterValue(const FName& Name, const FMaterialParameterMetadata& Meta, EMaterialExpressionSetParameterValueFlags Flags)"
  },
  {
    "label": "GetParameterExpressionId()",
    "kind": "Method",
    "detail": "Function (# endif FGuid&)",
    "insertText": "GetParameterExpressionId()"
  },
  {
    "label": "TextureCollectionIsValid()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "TextureCollectionIsValid(UTextureCollection* InTextureCollection, FString& OutMessage)"
  },
  {
    "label": "SetParameterValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParameterValue(const FName& InParameterName, UTextureCollection* InValue, EMaterialExpressionSetParameterValueFlags Flags = EMaterialExpressionSetParameterValueFlags::None)"
  }
]