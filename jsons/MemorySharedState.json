[
  {
    "label": "FTimingEventSearchParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimingEventSearchParameters"
  },
  {
    "label": "FTimingGraphSeries",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimingGraphSeries"
  },
  {
    "label": "FTimingGraphTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimingGraphTrack"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FReportConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReportConfig"
  },
  {
    "label": "FReportTypeConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReportTypeConfig"
  },
  {
    "label": "FReportTypeGraphConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReportTypeGraphConfig"
  },
  {
    "label": "FMemoryTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryTracker"
  },
  {
    "label": "FMemoryRuleSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryRuleSpec"
  },
  {
    "label": "FQueryTargetWindowSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueryTargetWindowSpec"
  },
  {
    "label": "FMemoryTimingViewCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryTimingViewCommands"
  },
  {
    "label": "FMemorySharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemorySharedState"
  },
  {
    "label": "FMemoryRuleSpec()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Framework / Commands / Commands . h \" # include \" TraceServices / Model / AllocationsProvider . h \" # include \" Insights / ITimingViewExtender . h \" # include \" Insights / MemoryProfiler / ViewModels / MemoryGraphTrack . h \" # include \" Insights / MemoryProfiler / ViewModels / MemoryTag . h \" class FTimingEventSearchParameters ; class FTimingGraphSeries ; class FTimingGraphTrack ; namespace UE::Insights::TimingProfiler { class STimingView ; } namespace UE::Insights::MemoryProfiler { struct FReportConfig ; struct FReportTypeConfig ; struct FReportTypeGraphConfig ; class FMemoryTracker ; class FMemoryRuleSpec { public : typedef TraceServices::IAllocationsProvider::EQueryRule ERule ; public :)",
    "insertText": "FMemoryRuleSpec(ERule InValue, uint32 InNumTimeMarkers, const FText& InShortName, const FText& InVerboseName, const FText& InDescription) : Value(InValue) , NumTimeMarkers(InNumTimeMarkers) , ShortName(InShortName) , VerboseName(InVerboseName) , Description(InDescription)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} ERule)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetText()"
  },
  {
    "label": "FMemoryTimingViewCommands()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMemoryTimingViewCommands()"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "FMemorySharedState()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<FUICommandInfo> ShowHideAllMemoryTracks ; } ; class FMemorySharedState : public Timing::ITimingViewExtender,public TSharedFromThis<FMemorySharedState> { public :)",
    "insertText": "FMemorySharedState()"
  },
  {
    "label": "GetTimingView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<TimingProfiler::STimingView>)",
    "insertText": "GetTimingView()"
  },
  {
    "label": "GetTagList()",
    "kind": "Method",
    "detail": "Function (TimingView = InTimingView ; } const FMemoryTagList&)",
    "insertText": "GetTagList()"
  },
  {
    "label": "GetTrackerById()",
    "kind": "Method",
    "detail": "Function (const FMemoryTracker*)",
    "insertText": "GetTrackerById(FMemoryTrackerId InMemTrackerId)"
  },
  {
    "label": "GetMainGraphTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryGraphTrack>)",
    "insertText": "GetMainGraphTrack()"
  },
  {
    "label": "OnBeginSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSession(Timing::ITimingViewSession& InSession)"
  },
  {
    "label": "OnEndSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSession(Timing::ITimingViewSession& InSession)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(Timing::ITimingViewSession& InSession, const TraceServices::IAnalysisSession& InAnalysisSession)"
  },
  {
    "label": "ExtendOtherTracksFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendOtherTracksFilterMenu(Timing::ITimingViewSession& InSession, FMenuBuilder& InOutMenuBuilder)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "IsAllMemoryTracksToggleOn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllMemoryTracksToggleOn()"
  },
  {
    "label": "ShowAllMemoryTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowAllMemoryTracks()"
  },
  {
    "label": "SetAllMemoryTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllMemoryTracksToggle(true)"
  },
  {
    "label": "HideAllMemoryTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HideAllMemoryTracks()"
  },
  {
    "label": "SetAllMemoryTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllMemoryTracksToggle(false)"
  },
  {
    "label": "ShowHideAllMemoryTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ShowHideAllMemoryTracks()"
  },
  {
    "label": "SetAllMemoryTracksToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllMemoryTracksToggle(!IsAllMemoryTracksToggleOn())"
  },
  {
    "label": "CreateDefaultTracks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateDefaultTracks()"
  },
  {
    "label": "CreateMemoryGraphTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryGraphTrack>)",
    "insertText": "CreateMemoryGraphTrack()"
  },
  {
    "label": "RemoveMemoryGraphTrack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveMemoryGraphTrack(TSharedPtr<FMemoryGraphTrack> GraphTrack)"
  },
  {
    "label": "GetMemTagGraphTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryGraphTrack>)",
    "insertText": "GetMemTagGraphTrack(FMemoryTrackerId InMemTrackerId, FMemoryTagId InMemTagId)"
  },
  {
    "label": "CreateMemTagGraphTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryGraphTrack>)",
    "insertText": "CreateMemTagGraphTrack(FMemoryTrackerId InMemTrackerId, FMemoryTagId InMemTagId)"
  },
  {
    "label": "RemoveTrackFromMemTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTrackFromMemTags(TSharedPtr<FMemoryGraphTrack>& GraphTrack)"
  },
  {
    "label": "RemoveMemTagGraphTrack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveMemTagGraphTrack(FMemoryTrackerId InMemTrackerId, FMemoryTagId InMemTagId)"
  },
  {
    "label": "RemoveAllMemTagGraphTracks()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveAllMemTagGraphTracks()"
  },
  {
    "label": "ToggleMemTagGraphSeries()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryGraphSeries>)",
    "insertText": "ToggleMemTagGraphSeries(TSharedPtr<FMemoryGraphTrack> InGraphTrack, FMemoryTrackerId InMemTrackerId, FMemoryTagId InMemTagId)"
  },
  {
    "label": "CreateTracksFromReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTracksFromReport(const FString& Filename)"
  },
  {
    "label": "CreateTracksFromReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTracksFromReport(const FReportConfig& ReportConfig)"
  },
  {
    "label": "CreateTracksFromReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateTracksFromReport(const FReportTypeConfig& ReportTypeConfig)"
  },
  {
    "label": "GetMemoryRules()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FMemoryRuleSpec>>&)",
    "insertText": "GetMemoryRules()"
  },
  {
    "label": "OnMemoryRuleChanged()",
    "kind": "Method",
    "detail": "Function (CurrentMemoryRule = InRule ;)",
    "insertText": "OnMemoryRuleChanged()"
  },
  {
    "label": "GetQueryTargets()",
    "kind": "Method",
    "detail": "Function (} const TArray<TSharedPtr<FQueryTargetWindowSpec>>&)",
    "insertText": "GetQueryTargets()"
  },
  {
    "label": "AddQueryTarget()",
    "kind": "Method",
    "detail": "Function (CurrentQueryTarget = InTarget ; } void)",
    "insertText": "AddQueryTarget(TSharedPtr<FQueryTargetWindowSpec> InPtr)"
  },
  {
    "label": "RemoveQueryTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveQueryTarget(TSharedPtr<FQueryTargetWindowSpec> InPtr)"
  },
  {
    "label": "SyncTrackers()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SyncTrackers()"
  },
  {
    "label": "GetNextMemoryGraphTrackOrder()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNextMemoryGraphTrackOrder()"
  },
  {
    "label": "CreateGraphTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMemoryGraphTrack>)",
    "insertText": "CreateGraphTrack(const FReportTypeGraphConfig& ReportTypeGraphConfig, bool bIsPlatformTracker)"
  },
  {
    "label": "InitMemoryRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMemoryRules()"
  }
]