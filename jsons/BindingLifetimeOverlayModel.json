[
  {
    "label": "TAutoRegisterViewModelTypeID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoRegisterViewModelTypeID"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MVVM / Extensions / ITrackLaneExtension . h \" # include \" MVVM / Extensions / IBindingLifetimeExtension . h \" # include \" MVVM / Extensions / LinkedOutlinerExtension . h \" # include \" MVVM / Extensions / ViewModelExtensionCollection . h \" # include \" MVVM / ICastable . h \" # include \" MVVM / ViewModels / ViewModel . h \" # include \" Math / Range . h \" # include \" Templates / SharedPointer . h \" # include \" SequencerEditorViewModel . h \" namespace UE::Sequencer { template<T> struct TAutoRegisterViewModelTypeID ; } struct FFrameNumber ; namespace UE { namespace Sequencer { class FBindingLifetimeOverlayModel : public FViewModel,public FLinkedOutlinerExtension,public ITrackLaneExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FBindingLifetimeOverlayModel, FViewModel , FLinkedOutlinerExtension , ITrackLaneExtension)"
  },
  {
    "label": "FBindingLifetimeOverlayModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBindingLifetimeOverlayModel(TWeakPtr<FViewModel> LayerRoot, TWeakPtr<FSequencerEditorViewModel> InEditorViewModel, TViewModelPtr<IBindingLifetimeExtension> InBindingLifetimeTrack)"
  },
  {
    "label": "FBindingLifetimeOverlayModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FBindingLifetimeOverlayModel()"
  },
  {
    "label": "CreateTrackLaneView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITrackLaneWidget>)",
    "insertText": "CreateTrackLaneView(const FCreateTrackLaneViewParams& InParams)"
  },
  {
    "label": "ArrangeVirtualTrackLaneView()",
    "kind": "Method",
    "detail": "Function (FTrackLaneVirtualAlignment)",
    "insertText": "ArrangeVirtualTrackLaneView()"
  },
  {
    "label": "GetInverseLifetimeRange()",
    "kind": "Method",
    "detail": "Function (const TArray<FFrameNumberRange>&)",
    "insertText": "GetInverseLifetimeRange()"
  }
]