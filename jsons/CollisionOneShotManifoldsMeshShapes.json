[
  {
    "label": "FHeightField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHeightField"
  },
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "ConstructQuadraticConvexTriMeshOneShotManifold()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" # include \" Chaos / CollisionResolutionTypes . h \" # include \" Chaos / ImplicitFwd . h \" namespace Chaos { class FHeightField ; class FPBDCollisionConstraint ; namespace Collisions { void)",
    "insertText": "ConstructQuadraticConvexTriMeshOneShotManifold(const FImplicitObject& Quadratic, const FRigidTransform3& Quadraticransform, const FImplicitObject& TriangleMesh, const FRigidTransform3& TriMeshTransform, const FReal Dt, FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "ConstructQuadraticConvexHeightFieldOneShotManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructQuadraticConvexHeightFieldOneShotManifold(const FImplicitObject& Quadratic, const FRigidTransform3& QuadraticTransform, const FHeightField& HeightField, const FRigidTransform3& HeightFieldTransform, const FReal Dt, FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "ConstructPlanarConvexTriMeshOneShotManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructPlanarConvexTriMeshOneShotManifold(const FImplicitObject& Convex, const FRigidTransform3& ConvexTransform, const FImplicitObject& TriangleMesh, const FRigidTransform3& TriangleMeshTransform, FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "ConstructPlanarConvexHeightFieldOneShotManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructPlanarConvexHeightFieldOneShotManifold(const FImplicitObject& Convex, const FRigidTransform3& ConvexTransform, const FHeightField& HeightField, const FRigidTransform3& TriangleMeshTransform, FPBDCollisionConstraint& Constraint)"
  }
]