[
  {
    "label": "GLSLPatchShaderSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLSLPatchShaderSource"
  },
  {
    "label": "GetPatchBasisShaderSource()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_OSD_GLSL_PATCH_SHADER_SOURCE_H # define OPENSUBDIV3_OSD_GLSL_PATCH_SHADER_SOURCE_H # include \" . . / version . h \" # include \" . . / far / patchDescriptor . h \" # include<string> namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Osd { class GLSLPatchShaderSource { public : std::string)",
    "insertText": "GetPatchBasisShaderSource()"
  },
  {
    "label": "GetPatchDrawingShaderSource()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetPatchDrawingShaderSource()"
  },
  {
    "label": "GetCommonShaderSource()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetCommonShaderSource()"
  },
  {
    "label": "GetVertexShaderSource()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetVertexShaderSource(Far::PatchDescriptor::Type type)"
  },
  {
    "label": "GetTessControlShaderSource()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetTessControlShaderSource(Far::PatchDescriptor::Type type)"
  },
  {
    "label": "GetTessEvalShaderSource()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetTessEvalShaderSource(Far::PatchDescriptor::Type type)"
  }
]