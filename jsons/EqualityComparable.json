[
  {
    "label": "CEqualityComparableWith",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CEqualityComparableWith"
  },
  {
    "label": "CEqualityComparable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CEqualityComparable"
  },
  {
    "label": "Requires()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / Models . h \" struct CEqualityComparableWith { template<T,U> auto)",
    "insertText": "Requires(bool& Result, const T& A, const U& B) -> decltype( Result = A == B, Result = B == A, Result = A != B, Result = B != A)"
  },
  {
    "label": "Requires()",
    "kind": "Method",
    "detail": "Function (} ; struct CEqualityComparable { template<T> auto)",
    "insertText": "Requires() -> decltype( Refines<CEqualityComparableWith, T, T>())"
  }
]