[
  {
    "label": "IErrorReportingWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IErrorReportingWidget"
  },
  {
    "label": "SErrorText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SErrorText"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Styling / SlateColor . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Styling / CoreStyle . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Animation / CurveSequence . h \" # include \" Widgets / Text / STextBlock . h \" class IErrorReportingWidget { public : void)",
    "insertText": "SetError(const FString& InErrorText)"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(const FText& InErrorText)"
  },
  {
    "label": "HasError()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasError()"
  },
  {
    "label": "AsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "AsWidget()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SErrorText : public SBorder,public IErrorReportingWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SErrorText ) : _ErrorText() , _BackgroundColor(FCoreStyle::Get().GetColor(\"ErrorReporting.BackgroundColor\")) , _Font() , _AutoWrapText(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FText, ErrorText) SLATE_ATTRIBUTE(FSlateColor, BackgroundColor) SLATE_ATTRIBUTE(FSlateFontInfo, Font) SLATE_ATTRIBUTE(bool, AutoWrapText) SLATE_END_ARGS() SLATE_API void Construct(const FArguments& InArgs)"
  },
  {
    "label": "MyVisibility()",
    "kind": "Method",
    "detail": "Function (private : TAttribute<FSlateFontInfo> Font ; TAttribute<EVisibility> CustomVisibility ; EVisibility)",
    "insertText": "MyVisibility()"
  },
  {
    "label": "GetDesiredSizeScale()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class STextBlock> TextBlock ; FVector2D)",
    "insertText": "GetDesiredSizeScale()"
  }
]