[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FIbmLiveStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIbmLiveStreaming"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRtmpUrl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRtmpUrl"
  },
  {
    "label": "FIngest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIngest"
  },
  {
    "label": "FFormData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFormData"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start(const FString& ClientId, const FString& ClientSecret, const FString& Channel, uint32 AudioSampleRate, uint32 AudioNumChannels, uint32 AudioBitrate)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "FFormData()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FFormData()"
  },
  {
    "label": "AddField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddField(const FString& Name, const FString& Value)"
  },
  {
    "label": "FStringToUint8()",
    "kind": "Method",
    "detail": "Function (TArray<uint8>)",
    "insertText": "FStringToUint8(const FString& InString)"
  },
  {
    "label": "CreateHttpPostRequestImpl()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IHttpRequest>)",
    "insertText": "CreateHttpPostRequestImpl(const FString& URL)"
  },
  {
    "label": "OnProcessRequestComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProcessRequestComplete(FHttpRequestPtr SourceHttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded)"
  },
  {
    "label": "GetJsonField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetJsonField(const TSharedPtr<FJsonObject>& JsonObject, const FString& FieldName, FString& DestStr)"
  },
  {
    "label": "GetJsonField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetJsonField(const TSharedPtr<FJsonObject>& JsonObject, const FString& FieldName, const TSharedPtr<FJsonObject>*& DestObj)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Connect()"
  },
  {
    "label": "FinishStopOnGameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishStopOnGameThread()"
  },
  {
    "label": "StopFromSocketThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopFromSocketThread()"
  },
  {
    "label": "OnConnectionError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConnectionError(RTMPModuleConnect* Module, RTMPEvent Evt, void* RejectInfoObj)"
  },
  {
    "label": "OnConnectionSuccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConnectionSuccess(RTMPModuleConnect* Module)"
  },
  {
    "label": "OnStreamPublished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamPublished(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStreamDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamDeleted(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStreamError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamError(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStopPublish()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStopPublish(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStreamBandwidthChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamBandwidthChanged(RTMPModuleBroadcaster* Module, unsigned long Bandwidth, int32 QueueWasEmpty)"
  },
  {
    "label": "OnConnectionErrorImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConnectionErrorImpl(RTMPModuleConnect* Module, RTMPEvent Evt, void* RejectInfoObj)"
  },
  {
    "label": "OnConnectionSuccessImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConnectionSuccessImpl(RTMPModuleConnect* Module)"
  },
  {
    "label": "OnStreamPublishedImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamPublishedImpl(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStreamDeletedImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamDeletedImpl(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStreamErrorImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamErrorImpl(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStopPublishImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStopPublishImpl(RTMPModuleBroadcaster* Module)"
  },
  {
    "label": "OnStreamBandwidthChangedImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStreamBandwidthChangedImpl(RTMPModuleBroadcaster* Module, uint32 Bandwidth, bool bQueueWasEmpty)"
  },
  {
    "label": "InjectVideo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectVideo(uint32 TimestampMs, const TArrayView<uint8>& DataView, bool bIsKeyFrame)"
  },
  {
    "label": "InjectAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectAudio(uint32 TimestampMs, const TArrayView<uint8>& DataView)"
  },
  {
    "label": "CustomLogMsg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomLogMsg(const char* Msg)"
  },
  {
    "label": "CheckState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckState(const wchar_t* FuncName, EState ExpectedState)"
  },
  {
    "label": "CheckState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckState(const wchar_t* FuncName, EState ExpectedStateMin, EState ExpectedStateMax)"
  },
  {
    "label": "QueueFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueFrame(RTMPContentType FrameType, RawData* Pkt, uint32 TimestampMs)"
  }
]