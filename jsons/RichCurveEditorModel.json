[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "IBufferedCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBufferedCurveModel"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FCurveAttributes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveAttributes"
  },
  {
    "label": "FCurveEditorScreenSpace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorScreenSpace"
  },
  {
    "label": "FKeyAttributes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyAttributes"
  },
  {
    "label": "FKeyDrawInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyDrawInfo"
  },
  {
    "label": "FKeyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandle"
  },
  {
    "label": "FKeyPosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyPosition"
  },
  {
    "label": "FRichCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRichCurve"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "FRichCurveEditorModel()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" CoreTypes . h \" # include \" CurveEditorTypes . h \" # include \" CurveModel . h \" # include \" IBufferedCurveModel . h \" # include \" Math / Range . h \" # include \" Misc / Attribute . h \" # include \" Misc / OptionalFwd . h \" # include \" Templates / Tuple . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / UnrealType . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FCurveEditor ; class IBufferedCurveModel ; class UObject ; struct FCurveAttributes ; struct FCurveEditorScreenSpace ; struct FKeyAttributes ; struct FKeyDrawInfo ; struct FKeyHandle ; struct FKeyPosition ; struct FRichCurve ; class FRichCurveEditorModel : public FCurveModel { public :)",
    "insertText": "FRichCurveEditorModel(UObject* InOwner)"
  },
  {
    "label": "GetCurve()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "GetCurve()"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Modify()"
  },
  {
    "label": "DrawCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawCurve(const FCurveEditor& CurveEditor, const FCurveEditorScreenSpace& ScreenSpace, TArray<TTuple<double, double>>& InterpolatingPoints)"
  },
  {
    "label": "GetKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeys(double MinTime, double MaxTime, double MinValue, double MaxValue, TArray<FKeyHandle>& OutKeyHandles)"
  },
  {
    "label": "GetKeyDrawInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyDrawInfo(ECurvePointType PointType, const FKeyHandle InKeyHandle, FKeyDrawInfo& OutDrawInfo)"
  },
  {
    "label": "GetKeyPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyPositions(TArrayView<const FKeyHandle> InKeys, TArrayView<FKeyPosition> OutKeyPositions)"
  },
  {
    "label": "SetKeyPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyPositions(TArrayView<const FKeyHandle> InKeys, TArrayView<const FKeyPosition> InKeyPositions, EPropertyChangeType::Type ChangeType)"
  },
  {
    "label": "GetKeyAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyAttributes(TArrayView<const FKeyHandle> InKeys, TArrayView<FKeyAttributes> OutAttributes)"
  },
  {
    "label": "SetKeyAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAttributes(TArrayView<const FKeyHandle> InKeys, TArrayView<const FKeyAttributes> InAttributes, EPropertyChangeType::Type ChangeType = EPropertyChangeType::Unspecified)"
  },
  {
    "label": "GetCurveAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurveAttributes(FCurveAttributes& OutCurveAttributes)"
  },
  {
    "label": "SetCurveAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveAttributes(const FCurveAttributes& InCurveAttributes)"
  },
  {
    "label": "GetTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTimeRange(double& MinTime, double& MaxTime)"
  },
  {
    "label": "GetValueRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValueRange(double& MinValue, double& MaxValue)"
  },
  {
    "label": "GetNumKeys()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumKeys()"
  },
  {
    "label": "GetNeighboringKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNeighboringKeys(const FKeyHandle InKeyHandle, TOptional<FKeyHandle>& OutPreviousKeyHandle, TOptional<FKeyHandle>& OutNextKeyHandle)"
  },
  {
    "label": "GetInterpolationMode()",
    "kind": "Method",
    "detail": "Function (TPair<ERichCurveInterpMode,ERichCurveTangentMode>)",
    "insertText": "GetInterpolationMode(const double& InTime, ERichCurveInterpMode DefaultInterpolationMode, ERichCurveTangentMode DefaultTangentMode)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Evaluate(double ProspectiveTime, double& OutValue)"
  },
  {
    "label": "AddKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeys(TArrayView<const FKeyPosition> InKeyPositions, TArrayView<const FKeyAttributes> InAttributes, TArrayView<TOptional<FKeyHandle>>* OutKeyHandles)"
  },
  {
    "label": "RemoveKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveKeys(TArrayView<const FKeyHandle> InKeys)"
  },
  {
    "label": "CreateKeyProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateKeyProxies(TArrayView<const FKeyHandle> InKeyHandles, TArrayView<UObject*> OutObjects)"
  },
  {
    "label": "CreateBufferedCurveCopy()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IBufferedCurveModel>)",
    "insertText": "CreateBufferedCurveCopy()"
  },
  {
    "label": "SetClampInputRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClampInputRange(TAttribute<TRange<double>> InClampInputRange)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (ClampInputRange = InClampInputRange ; } bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetRichCurve()",
    "kind": "Method",
    "detail": "Function (FRichCurve&)",
    "insertText": "GetRichCurve()"
  },
  {
    "label": "GetReadOnlyRichCurve()",
    "kind": "Method",
    "detail": "Function (const FRichCurve&)",
    "insertText": "GetReadOnlyRichCurve()"
  },
  {
    "label": "FRichCurveEditorModelRaw()",
    "kind": "Method",
    "detail": "Function (private : TWeakObjectPtr<> WeakOwner ; TAttribute<TRange<double>> ClampInputRange ; } ; class FRichCurveEditorModelRaw : public FRichCurveEditorModel { public :)",
    "insertText": "FRichCurveEditorModelRaw(FRichCurve* InRichCurve, UObject* InOwner)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "SetIsReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReadOnly(TAttribute<bool> InReadOnlyAttribute)"
  }
]