[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FInternetAddr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternetAddr"
  },
  {
    "label": "FSocketSubsystemUnix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketSubsystemUnix"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FSocketBSD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketBSD"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BSDSockets / SocketSubsystemBSD . h \" # include \" SocketSubsystemPackage . h \" class Error ; class FInternetAddr ; class FSocketSubsystemUnix : public FSocketSubsystemBSD { protected : FSocketSubsystemUnix* SocketSingleton ; bool bTriedToInit ; PACKAGE_SCOPE : FSocketSubsystemUnix*)",
    "insertText": "Create()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "FSocketSubsystemUnix()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSocketSubsystemUnix() : bTriedToInit(false)"
  },
  {
    "label": "FSocketSubsystemUnix()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSocketSubsystemUnix()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init(FString& Error)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "HasNetworkDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNetworkDevice()"
  },
  {
    "label": "CreateSocket()",
    "kind": "Method",
    "detail": "Function (class FSocket*)",
    "insertText": "CreateSocket(const FName& SocketType, const FString& SocketDescription, const FName& ProtocolType)"
  },
  {
    "label": "GetLocalAdapterAddresses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLocalAdapterAddresses(TArray<TSharedPtr<FInternetAddr> >& OutAddresses)"
  },
  {
    "label": "InternalBSDSocketFactory()",
    "kind": "Method",
    "detail": "Function (class FSocketBSD*)",
    "insertText": "InternalBSDSocketFactory(SOCKET Socket, ESocketType SocketType, const FString& SocketDescription, const FName& SocketProtocol)"
  },
  {
    "label": "CreateRecvMulti()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FRecvMulti>)",
    "insertText": "CreateRecvMulti(int32 MaxNumPackets, int32 MaxPacketSize, ERecvMultiFlags Flags)"
  },
  {
    "label": "IsSocketRecvMultiSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSocketRecvMultiSupported()"
  },
  {
    "label": "TranslatePacketTimestamp()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "TranslatePacketTimestamp(const FPacketTimestamp& Timestamp, ETimestampTranslation Translation)"
  }
]