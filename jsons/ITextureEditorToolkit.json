[
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "ITextureEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextureEditorToolkit"
  },
  {
    "label": "GetTexture()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneTypes . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" TextureEditorSettings . h \" class UTexture ; class ITextureEditorToolkit : public FAssetEditorToolkit { public : UTexture*)",
    "insertText": "GetTexture()"
  },
  {
    "label": "HasValidTextureResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidTextureResource()"
  },
  {
    "label": "PopulateQuickInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateQuickInfo()"
  },
  {
    "label": "CalculateTextureDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateTextureDimensions(int32& OutWidth, int32& OutHeight, int32& OutDepth, int32& OutArraySize, bool bInIncludeBorderSize)"
  },
  {
    "label": "GetMipLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMipLevel()"
  },
  {
    "label": "GetLayer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLayer()"
  },
  {
    "label": "GetSlice()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSlice()"
  },
  {
    "label": "GetFace()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFace()"
  },
  {
    "label": "GetColourChannelBlendMode()",
    "kind": "Method",
    "detail": "Function (ESimpleElementBlendMode)",
    "insertText": "GetColourChannelBlendMode()"
  },
  {
    "label": "GetUseSpecifiedMip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseSpecifiedMip()"
  },
  {
    "label": "GetUseSpecifiedSlice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseSpecifiedSlice()"
  },
  {
    "label": "GetUseSpecifiedFace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseSpecifiedFace()"
  },
  {
    "label": "GetCustomZoomLevel()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetCustomZoomLevel()"
  },
  {
    "label": "SetCustomZoomLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomZoomLevel(double ZoomValue)"
  },
  {
    "label": "ZoomIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomIn()"
  },
  {
    "label": "ZoomOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomOut()"
  },
  {
    "label": "GetZoomMode()",
    "kind": "Method",
    "detail": "Function (ETextureEditorZoomMode)",
    "insertText": "GetZoomMode()"
  },
  {
    "label": "SetZoomMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomMode(const ETextureEditorZoomMode ZoomMode)"
  },
  {
    "label": "CalculateDisplayedZoomLevel()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "CalculateDisplayedZoomLevel()"
  },
  {
    "label": "GetVolumeOpacity()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetVolumeOpacity()"
  },
  {
    "label": "SetVolumeOpacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolumeOpacity(float VolumeOpacity)"
  },
  {
    "label": "GetVolumeViewMode()",
    "kind": "Method",
    "detail": "Function (ETextureEditorVolumeViewMode)",
    "insertText": "GetVolumeViewMode()"
  },
  {
    "label": "SetVolumeViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolumeViewMode(const ETextureEditorVolumeViewMode VolumeViewMode)"
  },
  {
    "label": "GetCubemapViewMode()",
    "kind": "Method",
    "detail": "Function (ETextureEditorCubemapViewMode)",
    "insertText": "GetCubemapViewMode()"
  },
  {
    "label": "SetCubemapViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCubemapViewMode(const ETextureEditorCubemapViewMode CubemapViewMode)"
  },
  {
    "label": "IsUsingOrientation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingOrientation()"
  },
  {
    "label": "GetOrientation()",
    "kind": "Method",
    "detail": "Function (const FRotator&)",
    "insertText": "GetOrientation()"
  },
  {
    "label": "SetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOrientation(const FRotator& InOrientation)"
  },
  {
    "label": "ResetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetOrientation()"
  },
  {
    "label": "GetSampling()",
    "kind": "Method",
    "detail": "Function (ETextureEditorSampling)",
    "insertText": "GetSampling()"
  },
  {
    "label": "GetExposureBias()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetExposureBias()"
  },
  {
    "label": "IsVolumeTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVolumeTexture()"
  },
  {
    "label": "SetZoomMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomMode(ETextureEditorZoomMode::Custom)"
  },
  {
    "label": "SetZoomMode()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "SetZoomMode(ETextureEditorZoomMode::Fit)"
  },
  {
    "label": "IsCurrentZoomMode()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsCurrentZoomMode(ETextureEditorZoomMode ZoomMode)"
  }
]