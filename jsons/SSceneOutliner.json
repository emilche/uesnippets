[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "ISceneOutlinerColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutlinerColumn"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "SFilterBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterBar"
  },
  {
    "label": "STreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeView"
  },
  {
    "label": "SFilterSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterSearchBox"
  },
  {
    "label": "FPendingTreeOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingTreeOperation"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FSceneOutlinerItemSelection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerItemSelection"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "FSceneOutlinerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerConfig"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (SCENEOUTLINER_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogSceneOutliner, Log, All)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FSceneOutlinerInitializationOptions& InitOptions)"
  },
  {
    "label": "RefreshSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSelection()"
  },
  {
    "label": "SetColumnVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnVisibility(FName ColumnId, bool bIsVisible)"
  },
  {
    "label": "RequestSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSort()"
  },
  {
    "label": "Delete_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Delete_CanExecute()"
  },
  {
    "label": "Rename_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Rename_CanExecute()"
  },
  {
    "label": "Rename_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rename_Execute()"
  },
  {
    "label": "Cut_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Cut_CanExecute()"
  },
  {
    "label": "Copy_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Copy_CanExecute()"
  },
  {
    "label": "Paste_CanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Paste_CanExecute()"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const TArray<FSceneOutlinerTreeItemPtr>& InItems, bool bSelected, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const FSceneOutlinerTreeItemPtr& InItem, bool bSelected, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "AddToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToSelection(const TArray<FSceneOutlinerTreeItemPtr>& InItems, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "RemoveFromSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromSelection(const TArray<FSceneOutlinerTreeItemPtr>& InItems, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "FSceneOutlinerItemSelection()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FSceneOutlinerItemSelection(*OutlinerTreeView)"
  },
  {
    "label": "AddFolderToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFolderToSelection(const FName& FolderName)"
  },
  {
    "label": "RemoveFolderFromSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFolderFromSelection(const FName& FolderName)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "EmptyTreeItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyTreeItems()"
  },
  {
    "label": "Populate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Populate()"
  },
  {
    "label": "RepopulateEntireTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepopulateEntireTree()"
  },
  {
    "label": "AddPendingItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingItem(FSceneOutlinerTreeItemPtr Item)"
  },
  {
    "label": "AddPendingItemAndChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingItemAndChildren(FSceneOutlinerTreeItemPtr Item)"
  },
  {
    "label": "AddItemToTree()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemToTree(FSceneOutlinerTreeItemRef InItem)"
  },
  {
    "label": "AddUnfilteredItemToTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnfilteredItemToTree(FSceneOutlinerTreeItemRef Item)"
  },
  {
    "label": "EnsureParentForItem()",
    "kind": "Method",
    "detail": "Function (FSceneOutlinerTreeItemPtr)",
    "insertText": "EnsureParentForItem(FSceneOutlinerTreeItemRef Item)"
  },
  {
    "label": "RemoveItemFromTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveItemFromTree(FSceneOutlinerTreeItemRef InItem)"
  },
  {
    "label": "OnChildRemovedFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildRemovedFromParent(ISceneOutlinerTreeItem& Parent)"
  },
  {
    "label": "OnItemMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemMoved(const FSceneOutlinerTreeItemRef& Item)"
  },
  {
    "label": "Temporary()",
    "kind": "Method",
    "detail": "Function (TreeItemType)",
    "insertText": "Temporary(Data)"
  },
  {
    "label": "OnItemAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemAdded(const FSceneOutlinerTreeItemID& ItemID, uint8 ActionMask)"
  },
  {
    "label": "PassesAllFilters()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PassesAllFilters(Item)"
  },
  {
    "label": "OnItemLabelChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemLabelChanged(FSceneOutlinerTreeItemPtr ChangedItem)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "SetupColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupColumns()"
  },
  {
    "label": "HandleHiddenColumnsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHiddenColumnsChanged()"
  },
  {
    "label": "RefreshColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshColumns()"
  },
  {
    "label": "AddColumn_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColumn_Internal(const FName& ColumnId, const FSceneOutlinerColumnInfo& ColumnInfo, const TMap<FName, bool>& ColumnVisibilities, int32 InsertPosition = INDEX_NONE)"
  },
  {
    "label": "RemoveColumn_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveColumn_Internal(const FName& ColumnId)"
  },
  {
    "label": "OnFilterBarFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterBarFilterChanged()"
  },
  {
    "label": "CreateFilterBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFilterBar(const FSceneOutlinerFilterBarOptions& FilterBarOptions)"
  },
  {
    "label": "ScrollItemIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollItemIntoView(const FSceneOutlinerTreeItemPtr& Item)"
  },
  {
    "label": "SetItemExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansion(const FSceneOutlinerTreeItemPtr& Item, bool bIsExpanded)"
  },
  {
    "label": "ExpandAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandAll()"
  },
  {
    "label": "CollapseAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollapseAll()"
  },
  {
    "label": "OnGetChildrenForOutlinerTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForOutlinerTree( FSceneOutlinerTreeItemPtr InParent, TArray< FSceneOutlinerTreeItemPtr >& OutChildren )"
  },
  {
    "label": "OnOutlinerTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOutlinerTreeSelectionChanged( FSceneOutlinerTreeItemPtr TreeItem, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "OnOutlinerTreeDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOutlinerTreeDoubleClick( FSceneOutlinerTreeItemPtr TreeItem )"
  },
  {
    "label": "OnOutlinerTreeItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOutlinerTreeItemScrolledIntoView( FSceneOutlinerTreeItemPtr TreeItem, const TSharedPtr<ITableRow>& Widget )"
  },
  {
    "label": "OnHierarchyChangedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHierarchyChangedEvent(FSceneOutlinerHierarchyChangedData Event)"
  },
  {
    "label": "OnAssetReloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetReloaded(const EPackageReloadPhase InPackageReloadPhase, FPackageReloadedEvent* InPackageReloadedEvent)"
  },
  {
    "label": "CopyFoldersToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFoldersToClipboard(const TArray<FName>& InFolders, const FString& InPrevClipboardContents)"
  },
  {
    "label": "CopyFoldersBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFoldersBegin()"
  },
  {
    "label": "CopyFoldersEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFoldersEnd()"
  },
  {
    "label": "PasteFoldersBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteFoldersBegin(TArray<FName> InFolders)"
  },
  {
    "label": "PasteFoldersEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteFoldersEnd()"
  },
  {
    "label": "DeleteFoldersBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteFoldersBegin()"
  },
  {
    "label": "DeleteFoldersEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteFoldersEnd()"
  },
  {
    "label": "DuplicateFoldersHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateFoldersHierarchy()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& InFilterText )"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted( const FText& InFilterText, ETextCommit::Type CommitInfo )"
  },
  {
    "label": "GetViewButtonContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetViewButtonContent(bool bShowFilters)"
  },
  {
    "label": "OnOpenContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnOpenContextMenu()"
  },
  {
    "label": "SelectFoldersDescendants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectFoldersDescendants(bool bSelectImmediateChildrenOnly = false)"
  },
  {
    "label": "MoveSelectionTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveSelectionTo(const FFolder& NewParent)"
  },
  {
    "label": "CreateFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFolder()"
  },
  {
    "label": "OnCreateFolderClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCreateFolderClicked()"
  },
  {
    "label": "OnColumnPermissionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnPermissionListChanged()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SceneOutliner::SSceneOutliner\")"
  },
  {
    "label": "ToggleStackHierarchyHeaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleStackHierarchyHeaders()"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged( const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode )"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(FSceneOutlinerTreeItemPtr Model, bool bInExpansionState)"
  },
  {
    "label": "SaveConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveConfig()"
  },
  {
    "label": "AddSourceControlMenuOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSourceControlMenuOptions(UToolMenu* Menu)"
  },
  {
    "label": "AddMenuEntryCreateFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMenuEntryCreateFolder(FToolMenuSection& InSection, SSceneOutliner& InOutliner)"
  },
  {
    "label": "AddMenuEntryCleanupFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMenuEntryCleanupFolders(FToolMenuSection& InSection, ULevel* InLevel)"
  }
]