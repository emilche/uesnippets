[
  {
    "label": "TaskQueueFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueueFactory"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TaskQueueFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TASK_QUEUE_TASK_QUEUE_FACTORY_H_ # define API_TASK_QUEUE_TASK_QUEUE_FACTORY_H_ # include<memory> # include \" absl / strings / string_view . h \" # include \" api / task_queue / task_queue_base . h \" namespace webrtc { class TaskQueueFactory { public : enum class Priority { NORMAL = 0,HIGH,LOW } ; ~)",
    "insertText": "TaskQueueFactory()"
  },
  {
    "label": "CreateTaskQueue()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<TaskQueueBase,TaskQueueDeleter>)",
    "insertText": "CreateTaskQueue(absl::string_view name, Priority priority)"
  }
]