[
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "UFbxExportOption",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFbxExportOption"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SFbxExportOptionsWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFbxExportOptionsWindow"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Input / Events . h \" # include \" Input / Reply . h \" # include \" InputCoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWindow . h \" class SButton ; class UFbxExportOption ; struct FGeometry ; class SFbxExportOptionsWindow : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFbxExportOptionsWindow) : _ExportOptions(nullptr) , _WidgetWindow() , _FullPath() , _BatchMode()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UFbxExportOption*, ExportOptions ) SLATE_ARGUMENT( TSharedPtr<SWindow>, WidgetWindow ) SLATE_ARGUMENT( FText, FullPath ) SLATE_ARGUMENT( bool, BatchMode ) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bShouldExport = true ;)",
    "insertText": "if(WidgetWindow.IsValid())"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (WidgetWindow .)",
    "insertText": "Pin()->RequestDestroyWindow()"
  },
  {
    "label": "Handled()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Handled()"
  },
  {
    "label": "OnExportAll()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnExportAll()"
  },
  {
    "label": "OnExport()",
    "kind": "Method",
    "detail": "Function (bShouldExportAll = true ; return)",
    "insertText": "OnExport()"
  },
  {
    "label": "OnCancel()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnCancel()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "Unhandled()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "Unhandled()"
  },
  {
    "label": "ShouldExport()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldExport()"
  },
  {
    "label": "OnResetToDefaultClick()",
    "kind": "Method",
    "detail": "Function (} private : FReply)",
    "insertText": "OnResetToDefaultClick()"
  }
]