[
  {
    "label": "EigenBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EigenBase"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_EIGENBASE_H # define EIGEN_EIGENBASE_H namespace Eigen { template<Derived> struct EigenBase { typedef Eigen::Index Index ; typedef internal::traits<Derived>::StorageKind StorageKind ; EIGEN_DEVICE_FUNC Derived&)",
    "insertText": "derived()"
  },
  {
    "label": "const_cast_derived()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC Derived&)",
    "insertText": "const_cast_derived()"
  },
  {
    "label": "const_derived()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC const Derived&)",
    "insertText": "const_derived()"
  },
  {
    "label": "rows()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_CONSTEXPR Index)",
    "insertText": "rows()"
  },
  {
    "label": "cols()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_CONSTEXPR Index)",
    "insertText": "cols()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_CONSTEXPR Index)",
    "insertText": "size()"
  },
  {
    "label": "evalTo()",
    "kind": "Method",
    "detail": "Function (} template<Dest> EIGEN_DEVICE_FUNC void)",
    "insertText": "evalTo(Dest& dst)"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "derived().evalTo(dst)"
  },
  {
    "label": "addTo()",
    "kind": "Method",
    "detail": "Function (} template<Dest> EIGEN_DEVICE_FUNC void)",
    "insertText": "addTo(Dest& dst)"
  },
  {
    "label": "res()",
    "kind": "Method",
    "detail": "Function (Dest::PlainObject)",
    "insertText": "res(rows(),cols())"
  },
  {
    "label": "evalTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "evalTo(res)"
  },
  {
    "label": "subTo()",
    "kind": "Method",
    "detail": "Function (dst + = res ; } template<Dest> EIGEN_DEVICE_FUNC void)",
    "insertText": "subTo(Dest& dst)"
  },
  {
    "label": "applyThisOnTheRight()",
    "kind": "Method",
    "detail": "Function (dst - = res ; } template<Dest> EIGEN_DEVICE_FUNC void)",
    "insertText": "applyThisOnTheRight(Dest& dst)"
  },
  {
    "label": "applyThisOnTheLeft()",
    "kind": "Method",
    "detail": "Function (} template<Dest> EIGEN_DEVICE_FUNC void)",
    "insertText": "applyThisOnTheLeft(Dest& dst)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; template<Derived> template<OtherDerived> EIGEN_DEVICE_FUNC Derived& DenseBase<Derived)",
    "insertText": "operator(const EigenBase<OtherDerived> &other)"
  },
  {
    "label": "call_assignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment(derived(), other.derived())"
  },
  {
    "label": "call_assignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment(derived(), other.derived(), internal::add_assign_op<Scalar,typename OtherDerived::Scalar>())"
  },
  {
    "label": "call_assignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "call_assignment(derived(), other.derived(), internal::sub_assign_op<Scalar,typename OtherDerived::Scalar>())"
  }
]