[
  {
    "label": "RefCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefCounter"
  },
  {
    "label": "RefCounter()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_REF_COUNTER_H_ # define RTC_BASE_REF_COUNTER_H_ # include<atomic> # include \" rtc_base / ref_count . h \" namespace webrtc { namespace webrtc_impl { class RefCounter { public :)",
    "insertText": "RefCounter(int ref_count) : ref_count_(ref_count)"
  },
  {
    "label": "RefCounter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RefCounter()"
  },
  {
    "label": "IncRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncRef()"
  },
  {
    "label": "fetch_add()",
    "kind": "Method",
    "detail": "Function (ref_count_ .)",
    "insertText": "fetch_add(1, std::memory_order_relaxed)"
  },
  {
    "label": "DecRef()",
    "kind": "Method",
    "detail": "Function (} rtc::RefCountReleaseStatus)",
    "insertText": "DecRef()"
  },
  {
    "label": "fetch_sub()",
    "kind": "Method",
    "detail": "Function (int ref_count_after_subtract = ref_count_ .)",
    "insertText": "fetch_sub(1, std::memory_order_acq_rel)"
  }
]