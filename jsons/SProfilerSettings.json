[
  {
    "label": "FProfilerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerSettings"
  },
  {
    "label": "SGridPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGridPanel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SProfilerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProfilerSettings"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if STATS # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SCompoundWidget . h \" class FProfilerSettings ; class SGridPanel ; enum class ECheckBoxState : uint8 ; class SProfilerSettings : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProfilerSettings)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FSimpleDelegate, OnClose ) SLATE_ARGUMENT( FProfilerSettings*, SettingPtr ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "AddTitle()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddTitle(const FText& TitleText, const TSharedRef<SGridPanel>& Grid, int32& RowPos)"
  },
  {
    "label": "AddSeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSeparator(const TSharedRef<SGridPanel>& Grid, int32& RowPos)"
  },
  {
    "label": "AddHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHeader(const FText& HeaderText, const TSharedRef<SGridPanel>& Grid, int32& RowPos)"
  },
  {
    "label": "AddOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOption(const FText& OptionName, const FText& OptionDesc, bool& Value, const bool& Default, const TSharedRef<SGridPanel>& Grid, int32& RowPos)"
  },
  {
    "label": "AddFooter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFooter(const TSharedRef<SGridPanel>& Grid, int32& RowPos)"
  },
  {
    "label": "SaveAndClose_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "SaveAndClose_OnClicked()"
  },
  {
    "label": "ResetToDefaults_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ResetToDefaults_OnClicked()"
  },
  {
    "label": "OptionDefault_GetDiffersFromDefaultAsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OptionDefault_GetDiffersFromDefaultAsVisibility(const bool* ValuePtr, const bool* DefaultPtr)"
  },
  {
    "label": "OptionDefault_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OptionDefault_OnClicked(bool* ValuePtr, const bool* DefaultPtr)"
  },
  {
    "label": "OptionValue_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OptionValue_OnCheckStateChanged(ECheckBoxState CheckBoxState, bool* ValuePtr)"
  },
  {
    "label": "OptionValue_IsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OptionValue_IsChecked(const bool* ValuePtr)"
  }
]