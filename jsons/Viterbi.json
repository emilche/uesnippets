[
  {
    "label": "IViterbiObservations",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IViterbiObservations"
  },
  {
    "label": "IViterbiInitialProbability",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IViterbiInitialProbability"
  },
  {
    "label": "IViterbiTransitionProbability",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IViterbiTransitionProbability"
  },
  {
    "label": "FViterbi",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViterbi"
  },
  {
    "label": "IViterbiObservations()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace Audio { class IViterbiObservations { public : ~)",
    "insertText": "IViterbiObservations()"
  },
  {
    "label": "GetNumStates()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumStates()"
  },
  {
    "label": "GetNumTimeSteps()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumTimeSteps()"
  },
  {
    "label": "GetEmissionLogProbability()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEmissionLogProbability(int32 InTimeStep, int32 InState)"
  },
  {
    "label": "IViterbiInitialProbability()",
    "kind": "Method",
    "detail": "Function (} ; class IViterbiInitialProbability { public : ~)",
    "insertText": "IViterbiInitialProbability()"
  },
  {
    "label": "GetInitialLogProbability()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetInitialLogProbability(int32 InState)"
  },
  {
    "label": "IViterbiTransitionProbability()",
    "kind": "Method",
    "detail": "Function (} ; class IViterbiTransitionProbability { public : ~)",
    "insertText": "IViterbiTransitionProbability()"
  },
  {
    "label": "GetTransitionLogProbability()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetTransitionLogProbability(int32 InTimeStep, int32 InPreviousState, int32 InCurrentState)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (} ; struct FViterbi { TArray<int32>)",
    "insertText": "Decode(const IViterbiObservations& InObservations, const IViterbiInitialProbability& InInitialProbability, const IViterbiTransitionProbability& InTransitionProbability)"
  }
]