[
  {
    "label": "dtSharedBoundaryEdge",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtSharedBoundaryEdge"
  },
  {
    "label": "dtSharedBoundaryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtSharedBoundaryData"
  },
  {
    "label": "dtSharedBoundary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtSharedBoundary"
  },
  {
    "label": "dtSharedBoundaryData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" CoreMinimal . h \" # include \" Detour / DetourLargeWorldCoordinates . h \" # include \" Detour / DetourNavMesh . h \" # include \" Detour / DetourNavMeshQuery . h \" # include \" HAL / Platform . h \" struct dtSharedBoundaryEdge { dtReal v0 [ 3 ] ; dtReal v1 [ 3 ] ; dtPolyRef p0 ; dtPolyRef p1 ; } ; struct dtSharedBoundaryData { dtReal Center [ 3 ] ; dtReal Radius ; dtReal AccessTime ; dtQueryFilter* Filter ; uint8 SingleAreaId ; TArray<dtSharedBoundaryEdge> Edges ; TSet<dtPolyRef> Polys ;)",
    "insertText": "dtSharedBoundaryData() : Filter(nullptr)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} } ; class dtSharedBoundary { public : TSparseArray<dtSharedBoundaryData> Data ; dtQueryFilter SingleAreaFilter ; dtReal CurrentTime ; dtReal NextClearTime ; void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(dtReal DeltaTime)"
  },
  {
    "label": "FindData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindData(dtReal* Center, dtReal Radius, dtPolyRef ReqPoly, dtQueryFilter* NavFilter)"
  },
  {
    "label": "FindData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindData(dtReal* Center, dtReal Radius, dtPolyRef ReqPoly, uint8 SingleAreaId)"
  },
  {
    "label": "CacheData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CacheData(dtReal* Center, dtReal Radius, dtPolyRef CenterPoly, dtNavMeshQuery* NavQuery, dtQueryFilter* NavFilter)"
  },
  {
    "label": "CacheData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CacheData(dtReal* Center, dtReal Radius, dtPolyRef CenterPoly, dtNavMeshQuery* NavQuery, uint8 SingleAreaId)"
  },
  {
    "label": "FindEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindEdges(dtSharedBoundaryData& Data, dtPolyRef CenterPoly, dtNavMeshQuery* NavQuery, dtQueryFilter* NavFilter)"
  },
  {
    "label": "HasSample()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSample(int32 Idx)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsValid(int32 Idx, dtNavMeshQuery* NavQuery, dtQueryFilter* NavFilter)"
  }
]