[
  {
    "label": "FAnalyticsSpan",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalyticsSpan"
  },
  {
    "label": "FAnalyticsTracer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalyticsTracer"
  },
  {
    "label": "FAnalyticsSpan()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Interfaces / IAnalyticsTracer . h \" using FThreadId = uint32 ; class FAnalyticsSpan : public IAnalyticsSpan { public :)",
    "insertText": "FAnalyticsSpan(FName SpanName): IAnalyticsSpan(SpanName), Name(SpanName)"
  },
  {
    "label": "FAnalyticsSpan()",
    "kind": "Method",
    "detail": "Function (} ; ~)",
    "insertText": "FAnalyticsSpan()"
  },
  {
    "label": "SetProvider()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "SetProvider(TSharedPtr<IAnalyticsProvider> AnalyticsProvider)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const TArray<FAnalyticsEventAttribute>& AdditionalAttributes = {})"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "End(const TArray<FAnalyticsEventAttribute>& AdditionalAttributes = {})"
  },
  {
    "label": "AddAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttributes(const TArray<FAnalyticsEventAttribute>& AdditionalAttributes)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(const FString& EventName, const TArray<FAnalyticsEventAttribute>& AdditionalAttributes = {})"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetName()"
  },
  {
    "label": "GetAttributes()",
    "kind": "Method",
    "detail": "Function (const TArray<FAnalyticsEventAttribute>&)",
    "insertText": "GetAttributes()"
  },
  {
    "label": "SetStackDepth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStackDepth(uint32 Depth)"
  },
  {
    "label": "GetStackDepth()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStackDepth()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetDuration()"
  },
  {
    "label": "GetIsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsActive()"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetId()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (private : FName Name =)",
    "insertText": "TEXT(\"None\")"
  },
  {
    "label": "FGuid()",
    "kind": "Method",
    "detail": "Function (FGuid Guid =)",
    "insertText": "FGuid()"
  },
  {
    "label": "FAnalyticsTracer()",
    "kind": "Method",
    "detail": "Function (FDateTime StartTime = 0 ; FDateTime EndTime = 0 ; FThreadId ThreadId = 0 ; uint32 StackDepth = 0 ; double Duration = 0 ; bool IsActive = false ; TSharedPtr<IAnalyticsProvider> AnalyticsProvider ; TArray<FAnalyticsEventAttribute> Attributes ; ; } ; class FAnalyticsTracer : public IAnalyticsTracer { public :)",
    "insertText": "FAnalyticsTracer()"
  },
  {
    "label": "StartSession()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "StartSession()"
  },
  {
    "label": "EndSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSession()"
  },
  {
    "label": "StartSpan()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsSpan>)",
    "insertText": "StartSpan(const FName Name, TSharedPtr<IAnalyticsSpan> ParentSpan, const TArray<FAnalyticsEventAttribute>& AdditionalAttributes = {})"
  },
  {
    "label": "EndSpan()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndSpan(TSharedPtr<IAnalyticsSpan> Span, const TArray<FAnalyticsEventAttribute>& AdditionalAttributes = {})"
  },
  {
    "label": "GetCurrentSpan()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsSpan>)",
    "insertText": "GetCurrentSpan()"
  },
  {
    "label": "GetSessionSpan()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsSpan>)",
    "insertText": "GetSessionSpan()"
  },
  {
    "label": "GetSpan()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsSpan>)",
    "insertText": "GetSpan(const FName Name)"
  },
  {
    "label": "StartSpanInternal()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "StartSpanInternal(TSharedPtr<IAnalyticsSpan> Span, const TArray<FAnalyticsEventAttribute>& AdditionalAttributes)"
  },
  {
    "label": "EndSpanInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndSpanInternal(TSharedPtr<IAnalyticsSpan> Span, const TArray<FAnalyticsEventAttribute>& AdditionalAttributes)"
  },
  {
    "label": "GetSpanInternal()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAnalyticsSpan>)",
    "insertText": "GetSpanInternal(const FName Name)"
  },
  {
    "label": "BeginRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRegion(TSharedPtr<IAnalyticsSpan> Span)"
  },
  {
    "label": "EndRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRegion(TSharedPtr<IAnalyticsSpan> Span)"
  }
]