[
  {
    "label": "FAnalysisSessionLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnalysisSessionLock"
  },
  {
    "label": "FStringStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringStore"
  },
  {
    "label": "FLogMessageSpec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogMessageSpec"
  },
  {
    "label": "FLogMessageInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogMessageInternal"
  },
  {
    "label": "FLogProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogProvider"
  },
  {
    "label": "FLogProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" TraceServices / Model / Log . h \" # include \" Templates / SharedPointer . h \" # include \" Common / PagedArray . h \" # include \" Model / Tables . h \" # include \" Misc / OutputDeviceHelper . h \" namespace TraceServices { class FAnalysisSessionLock ; class FStringStore ; struct FLogMessageSpec { FLogCategoryInfo* Category = nullptr ; const TCHAR* File = nullptr ; const TCHAR* FormatString = nullptr ; int32 Line ; ELogVerbosity::Type Verbosity ; } ; struct FLogMessageInternal { FLogMessageSpec* Spec = nullptr ; double Time ; const TCHAR* Message = nullptr ; } ; class FLogProvider : public ILogProvider,public IEditableLogProvider { public :)",
    "insertText": "FLogProvider(IAnalysisSession& Session)"
  },
  {
    "label": "FLogProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLogProvider()"
  },
  {
    "label": "GetMessageCount()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetMessageCount()"
  },
  {
    "label": "ReadAccessCheck()",
    "kind": "Method",
    "detail": "Function (Session .)",
    "insertText": "ReadAccessCheck()"
  },
  {
    "label": "ReadMessage()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ReadMessage(uint64 Index, TFunctionRef<void(const FLogMessageInfo&)> Callback)"
  },
  {
    "label": "EnumerateMessagesByIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateMessagesByIndex(uint64 StartIndex, uint64 EndIndex, TFunctionRef<void(const FLogMessageInfo&)> Callback)"
  },
  {
    "label": "EnumerateMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateMessages(double StartTime, double EndTime, TFunctionRef<void(const FLogMessageInfo&)> Callback)"
  },
  {
    "label": "LowerBoundByTime()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "LowerBoundByTime(double Time)"
  },
  {
    "label": "UpperBoundByTime()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "UpperBoundByTime(double Time)"
  },
  {
    "label": "BinarySearchClosestByTime()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "BinarySearchClosestByTime(double Time)"
  },
  {
    "label": "GetCategoryCount()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetCategoryCount()"
  },
  {
    "label": "EnumerateCategories()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnumerateCategories(TFunctionRef<void(const FLogCategoryInfo&)> Callback)"
  },
  {
    "label": "GetMessagesTable()",
    "kind": "Method",
    "detail": "Function (const IUntypedTable&)",
    "insertText": "GetMessagesTable()"
  },
  {
    "label": "GetCategory()",
    "kind": "Method",
    "detail": "Function (FLogCategoryInfo&)",
    "insertText": "GetCategory(uint64 CategoryPointer)"
  },
  {
    "label": "GetMessageSpec()",
    "kind": "Method",
    "detail": "Function (FLogMessageSpec&)",
    "insertText": "GetMessageSpec(uint64 LogPoint)"
  },
  {
    "label": "UpdateMessageCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMessageCategory(uint64 LogPoint, uint64 InCategoryPointer)"
  },
  {
    "label": "UpdateMessageFormatString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMessageFormatString(uint64 LogPoint, const TCHAR* InFormatString)"
  },
  {
    "label": "UpdateMessageFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMessageFile(uint64 LogPoint, const TCHAR* InFile, int32 InLine)"
  },
  {
    "label": "UpdateMessageVerbosity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMessageVerbosity(uint64 LogPoint, ELogVerbosity::Type InVerbosity)"
  },
  {
    "label": "UpdateMessageSpec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMessageSpec(uint64 LogPoint, uint64 InCategoryPointer, const TCHAR* InFormatString, const TCHAR* InFile, int32 InLine, ELogVerbosity::Type InVerbosity)"
  },
  {
    "label": "AppendMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendMessage(uint64 LogPoint, double Time, const uint8* FormatArgs)"
  },
  {
    "label": "AppendMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendMessage(uint64 LogPoint, double Time, const TCHAR* Text)"
  },
  {
    "label": "AppendMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendMessage(uint64 LogPoint, double Time, const FStringView Message)"
  },
  {
    "label": "AppendMessageInternal()",
    "kind": "Method",
    "detail": "Function (private : FLogMessageInternal&)",
    "insertText": "AppendMessageInternal(double Time)"
  },
  {
    "label": "ConstructMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructMessage(const FLogMessageInternal& InternalMessage, uint64 Index, TFunctionRef<void(const FLogMessageInfo&)> Callback)"
  }
]