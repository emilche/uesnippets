[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFTDescription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFTDescription"
  },
  {
    "label": "ComplexFFTImage1D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ComplexFFTImage1D"
  },
  {
    "label": "TwoForOneRealFFTImage1D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TwoForOneRealFFTImage1D"
  },
  {
    "label": "ConvolutionWithTextureImage1D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConvolutionWithTextureImage1D"
  },
  {
    "label": "IsHorizontal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHorizontal(const FFT_XFORM_TYPE& XFormType)"
  },
  {
    "label": "IsForward()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsForward(const FFT_XFORM_TYPE& XFormType)"
  },
  {
    "label": "FFTDescription()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FFTDescription(const FFT_XFORM_TYPE& XForm, const FIntPoint& XFormExtent)"
  },
  {
    "label": "MaxScanLineLength()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "MaxScanLineLength()"
  },
  {
    "label": "MultiPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MultiPass(\n\t\t\tFRDGBuilder& GraphBuilder,\n\t\t\tconst FGlobalShaderMap* ShaderMap,\n\t\t\tconst FFTDescription& FFTDesc,\n\t\t\tFRDGTextureSRVRef SrcTexture, const FIntRect& SrcWindow,\n\t\t\tFRDGTextureRef DstTexture,\n\t\t\tFRDGBufferRef PostFilterParameters = nullptr,\n\t\t\tconst bool bScrubNaNs = false)"
  },
  {
    "label": "MultiPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MultiPass(\n\t\t\tFRDGBuilder& GraphBuilder,\n\t\t\tconst FGlobalShaderMap* ShaderMap,\n\t\t\tconst FFTDescription& FFTDesc,\n\t\t\tFRDGTextureSRVRef SrcTexture, const FIntRect& SrcWindow,\n\t\t\tFRDGTextureRef TransformedKernel,\n\t\t\tFRDGTextureRef DstTexture)"
  },
  {
    "label": "FFTImage2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFTImage2D(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FGlobalShaderMap* ShaderMap,\n\t\tconst FIntPoint& FrequencySize, bool bHorizontalFirst,\n\t\tFRDGTextureSRVRef SrcTexture, const FIntRect& ROIRect,\n\t\tFRDGTextureRef ResultTexture)"
  },
  {
    "label": "ConvolutionWithTextureImage2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvolutionWithTextureImage2D(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tERDGPassFlags ComputePassFlags,\n\t\tconst FGlobalShaderMap* ShaderMap,\n\t\tconst FIntPoint& FrequencySize,\n\t\tbool bHorizontalFirst,\n\t\tFRDGTextureRef TransformedKernel,\n\t\tFRDGTextureSRVRef SrcTexture, const FIntRect& ROIRect,\n\t\tFRDGTextureRef DstTexture, const FIntRect& DstRect,\n\t\tconst FPreFilter& PreFilter,\n\t\tFRDGBufferRef PostFilterParameters,\n\t\tETextureCreateFlags AdditionalTextureCreateFlags)"
  },
  {
    "label": "Convolution2DBufferSize()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "Convolution2DBufferSize(const FIntPoint& FrequencySize, const bool bHorizontalFirst, const FIntPoint& SrcExtent)"
  }
]