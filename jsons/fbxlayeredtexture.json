[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendMode"
  },
  {
    "label": "InputData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InputData"
  },
  {
    "label": "FBXSDK_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_SHADING_LAYERED_TEXTURE_H_ # define _FBXSDK_SCENE_SHADING_LAYERED_TEXTURE_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / scene / shading / fbxtexture . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxLayeredTexture : public FbxTexture {)",
    "insertText": "FBXSDK_OBJECT_DECLARE(FbxLayeredTexture, FbxTexture)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (public : enum EBlendMode { eTranslucent,eAdditive,eModulate,eModulate2,eOver,eNormal,eDissolve,eDarken,eColorBurn,eLinearBurn,eDarkerColor,eLighten,eScreen,eColorDodge,eLinearDodge,eLighterColor,eSoftLight,eHardLight,eVividLight,eLinearLight,ePinLight,eHardMix,eDifference,eExclusion,eSubtract,eDivide,eHue,eSaturation,eColor,eLuminosity,eOverlay,eBlendModeCount } ; bool)",
    "insertText": "operator(const FbxLayeredTexture& pOther)"
  },
  {
    "label": "SetTextureBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTextureBlendMode(int pIndex, EBlendMode pMode)"
  },
  {
    "label": "GetTextureBlendMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextureBlendMode(int pIndex, EBlendMode& pMode)"
  },
  {
    "label": "SetTextureAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTextureAlpha(int pIndex, double pAlpha)"
  },
  {
    "label": "GetTextureAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextureAlpha(int pIndex, double& pAlpha)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS FbxObject&)",
    "insertText": "Copy(const FbxObject& pObject)"
  },
  {
    "label": "ConnectNotify()",
    "kind": "Method",
    "detail": "Function (protected : struct InputData { EBlendMode mBlendMode ; double mAlpha ; } ; public : FbxArray<InputData> mInputData ; protected : bool)",
    "insertText": "ConnectNotify(FbxConnectEvent const &pEvent)"
  },
  {
    "label": "RemoveInputData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInputData(int pIndex)"
  },
  {
    "label": "FbxTypeOf()",
    "kind": "Method",
    "detail": "Function (# endif } ; EFbxType)",
    "insertText": "FbxTypeOf(const FbxLayeredTexture::EBlendMode&)"
  }
]