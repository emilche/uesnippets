[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FFilterConfigurator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfigurator"
  },
  {
    "label": "ITimingViewSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimingViewSession"
  },
  {
    "label": "ITimingViewExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimingViewExtender"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "was",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "was"
  },
  {
    "label": "ITimingViewExtender()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Features / IModularFeature . h \" # include \" Templates / SharedPointer . h \" # include \" Insights / Config . h \" # if UE_INSIGHTS_BACKWARD_COMPATIBILITY_UE54 # include \" Insights / ITimingViewSession . h \" # endif class FMenuBuilder ; namespace TraceServices { class IAnalysisSession ; } namespace UE::Insights { class FFilterConfigurator ; } namespace UE::Insights::Timing { class ITimingViewSession ; const FName TimingViewExtenderFeatureName ; class ITimingViewExtender : public IModularFeature { public : ~)",
    "insertText": "ITimingViewExtender()"
  },
  {
    "label": "OnBeginSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSession(ITimingViewSession& InSession)"
  },
  {
    "label": "OnEndSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSession(ITimingViewSession& InSession)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(ITimingViewSession& InSession, const TraceServices::IAnalysisSession& InAnalysisSession)"
  },
  {
    "label": "ExtendCpuTracksFilterMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendCpuTracksFilterMenu(ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "ExtendGpuTracksFilterMenu()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ExtendGpuTracksFilterMenu(ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "ExtendOtherTracksFilterMenu()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ExtendOtherTracksFilterMenu(ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "ExtendFilterMenu()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ExtendFilterMenu(ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "ExtendGlobalContextMenu()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ExtendGlobalContextMenu(ITimingViewSession& InSession, FMenuBuilder& InMenuBuilder)"
  }
]