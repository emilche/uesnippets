[
  {
    "label": "FRHIBreadcrumbEvent_GameThread",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIBreadcrumbEvent_GameThread"
  },
  {
    "label": "FRealtimeGPUProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRealtimeGPUProfiler"
  },
  {
    "label": "FRealtimeGPUProfilerEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRealtimeGPUProfilerEvent"
  },
  {
    "label": "FRealtimeGPUProfilerFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRealtimeGPUProfilerFrame"
  },
  {
    "label": "FRealtimeGPUProfilerQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRealtimeGPUProfilerQuery"
  },
  {
    "label": "FRealtimeGPUProfilerHistoryItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRealtimeGPUProfilerHistoryItem"
  },
  {
    "label": "FRealtimeGPUProfilerHistoryByDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRealtimeGPUProfilerHistoryByDescription"
  },
  {
    "label": "FRealtimeGPUProfilerDescriptionResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRealtimeGPUProfilerDescriptionResult"
  },
  {
    "label": "FScopedGPUStatEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedGPUStatEvent"
  },
  {
    "label": "FScopedDrawStatCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedDrawStatCategory"
  },
  {
    "label": "WANTS_DRAW_MESH_EVENTS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / StaticArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" GpuProfilerTrace . h \" # include \" HAL / CriticalSection . h \" # include \" MultiGPU . h \" # include \" ProfilingDebugging / CsvProfiler . h \" # include \" ProfilingDebugging / CsvProfilerConfig . h \" # include \" RHI . h \" # include \" RHICommandList . h \" # include \" RHIBreadcrumbs . h \" # include \" RenderingThread . h \" # include \" Stats / Stats . h \" # include \" Stats / Stats2 . h \" # include \" UObject / NameTypes . h \" # include<tuple> # define)",
    "insertText": "WANTS_DRAW_MESH_EVENTS(WITH_PROFILEGPU && WITH_RHI_BREADCRUMBS)"
  },
  {
    "label": "FRHIBreadcrumbEvent_GameThread()",
    "kind": "Method",
    "detail": "Function (private : TOptional<FRHIBreadcrumbEventScope>* Event ; public : template<size_t N,. . . TArgs>)",
    "insertText": "FRHIBreadcrumbEvent_GameThread(bool bCondition, FRHIBreadcrumbData&& Data, TCHAR const(&FormatString)[N], TArgs&&... Args) : Event(bCondition ? new TOptional<FRHIBreadcrumbEventScope> : nullptr)"
  },
  {
    "label": "ENQUEUE_RENDER_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENQUEUE_RENDER_COMMAND(FRHIBreadcrumbEvent_GameThread_Begin)( [ Event = Event, Data = MoveTemp(Data), Values = std::make_tuple(std::forward<TArgs>(Args)...), &FormatString ](FRHICommandListImmediate& RHICmdList) mutable { std::apply([Event, &RHICmdList, &Data, &FormatString](auto&&... InnerArgs) { Event->Emplace(RHICmdList, MoveTemp(Data), true, FormatString, std::forward<TArgs>(InnerArgs)...); }, Values); })"
  },
  {
    "label": "FRHIBreadcrumbEvent_GameThread()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FRHIBreadcrumbEvent_GameThread()"
  },
  {
    "label": "ENQUEUE_RENDER_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENQUEUE_RENDER_COMMAND(FRHIBreadcrumbEvent_GameThread_End)([Event = Event](FRHICommandListImmediate& RHICmdList) { delete Event; })"
  },
  {
    "label": "RHI_BREADCRUMB_EVENT_GAMETHREAD()",
    "kind": "Method",
    "detail": "Function (} } } ; # define)",
    "insertText": "RHI_BREADCRUMB_EVENT_GAMETHREAD(Format, ...) FRHIBreadcrumbEvent_GameThread ANONYMOUS_VARIABLE(BreadcrumbEvent_GameThread)(true , FRHIBreadcrumbData(__FILE__, __LINE__, TStatId(), NAME_None), TEXT(Format), ##__VA_ARGS__) #define RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD(Condition, Format, ...) FRHIBreadcrumbEvent_GameThread ANONYMOUS_VARIABLE(BreadcrumbEvent_GameThread)(Condition, FRHIBreadcrumbData(__FILE__, __LINE__, TStatId(), NAME_None), TEXT(Format), ##__VA_ARGS__) #define RHI_BREADCRUMB_EVENT_GAMETHREAD_STR_DEPRECATED(Format, ...) FRHIBreadcrumbEvent_GameThread ANONYMOUS_VARIABLE(BreadcrumbEvent_GameThread)(true, FRHIBreadcrumbData(__FILE__, __LINE__, TStatId(), NAME_None), Format, ##__VA_ARGS__) #else #define RHI_BREADCRUMB_EVENT_GAMETHREAD(...)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "while(0) #define RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD(...)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "while(0) #define RHI_BREADCRUMB_EVENT_GAMETHREAD_STR_DEPRECATED(...)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "while(0) #endif #define SCOPED_DRAW_EVENT(RHICmdList, Name) RHI_BREADCRUMB_EVENT(RHICmdList, #Name)"
  },
  {
    "label": "SCOPED_DRAW_EVENTF()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_DRAW_EVENTF(RHICmdList, Name, Format, ...) RHI_BREADCRUMB_EVENT_STR_DEPRECATED(RHICmdList, Format, ##__VA_ARGS__)"
  },
  {
    "label": "SCOPED_CONDITIONAL_DRAW_EVENT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_CONDITIONAL_DRAW_EVENT(RHICmdList, Name, Condition) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, #Name)"
  },
  {
    "label": "SCOPED_CONDITIONAL_DRAW_EVENTF()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_CONDITIONAL_DRAW_EVENTF(RHICmdList, Name, Condition, Format, ...) RHI_BREADCRUMB_EVENT_CONDITIONAL_STR_DEPRECATED(RHICmdList, Condition, Format, ##__VA_ARGS__)"
  },
  {
    "label": "SCOPED_DRAW_EVENT_GAMETHREAD()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_DRAW_EVENT_GAMETHREAD(Name) RHI_BREADCRUMB_EVENT_GAMETHREAD(#Name)"
  },
  {
    "label": "SCOPED_DRAW_EVENTF_GAMETHREAD()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_DRAW_EVENTF_GAMETHREAD(Name, Format, ...) RHI_BREADCRUMB_EVENT_GAMETHREAD_STR_DEPRECATED(Format, ##__VA_ARGS__)"
  },
  {
    "label": "SCOPED_CONDITIONAL_DRAW_EVENT_GAMETHREAD()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_CONDITIONAL_DRAW_EVENT_GAMETHREAD(Name, Condition) RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD(Condition, #Name)"
  },
  {
    "label": "SCOPED_CONDITIONAL_DRAW_EVENTF_GAMETHREAD()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_CONDITIONAL_DRAW_EVENTF_GAMETHREAD(Name, Condition, Format, ...) RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD(Condition, Format, ##__VA_ARGS__)"
  },
  {
    "label": "BEGIN_DRAW_EVENTF()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "BEGIN_DRAW_EVENTF(RHICmdList, Name, Event, Format, ...) UE_DEPRECATED_MACRO(5.5, \"BEGIN_DRAW_EVENTF has been deprecated. Equivalent functionality can be implemented by constructing / destructing an instance of FRHIBreadcrumbEventManual.\" ) #define STOP_DRAW_EVENT(Event) UE_DEPRECATED_MACRO(5.5, \"STOP_DRAW_EVENT has been deprecated. Equivalent functionality can be implemented by constructing / destructing an instance of FRHIBreadcrumbEventManual.\" ) #define STOP_DRAW_EVENT_GAMETHREAD(...) UE_DEPRECATED_MACRO(5.5, \"STOP_DRAW_EVENT_GAMETHREAD has been deprecated. Equivalent functionality can be implemented by constructing / destructing an instance of FRHIBreadcrumbEvent_GameThread.\" ) #define BEGIN_DRAW_EVENTF_GAMETHREAD(...) UE_DEPRECATED_MACRO(5.5, \"BEGIN_DRAW_EVENTF_GAMETHREAD has been deprecated. Equivalent functionality can be implemented by constructing / destructing an instance of FRHIBreadcrumbEvent_GameThread.\" ) #define BEGIN_DRAW_EVENTF_COLOR_GAMETHREAD(...) UE_DEPRECATED_MACRO(5.5, \"BEGIN_DRAW_EVENTF_COLOR_GAMETHREAD has been deprecated. Equivalent functionality can be implemented by constructing / destructing an instance of FRHIBreadcrumbEvent_GameThread.\") #define SCOPED_DRAW_EVENT_COLOR(RHICmdList, Color, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_DRAW_EVENT_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, #Name) #define SCOPED_GPU_EVENT(RHICmdList, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_GPU_EVENT has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, #Name) #define SCOPED_GPU_EVENT_COLOR(RHICmdList, Color, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_GPU_EVENT_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, #Name) #define SCOPED_COMPUTE_EVENT(RHICmdList, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_COMPUTE_EVENT has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, #Name) #define SCOPED_COMPUTE_EVENT_COLOR(RHICmdList, Color, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_COMPUTE_EVENT_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, #Name) #define SCOPED_DRAW_EVENTF_COLOR(RHICmdList, Color, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_DRAW_EVENTF_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, Format, ##__VA_ARGS__) #define SCOPED_GPU_EVENTF(RHICmdList, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_GPU_EVENTF has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, Format, ##__VA_ARGS__) #define SCOPED_GPU_EVENTF_COLOR(RHICmdList, Color, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_GPU_EVENTF_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, Format, ##__VA_ARGS__) #define SCOPED_COMPUTE_EVENTF(RHICmdList, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_COMPUTE_EVENTF has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, Format, ##__VA_ARGS__) #define SCOPED_COMPUTE_EVENTF_COLOR(RHICmdList, Color, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_COMPUTE_EVENTF_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT instead.\" ) RHI_BREADCRUMB_EVENT(RHICmdList, Format, ##__VA_ARGS__) #define SCOPED_CONDITIONAL_DRAW_EVENT_COLOR(RHICmdList, Name, Color, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_DRAW_EVENT_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, #Name) #define SCOPED_CONDITIONAL_GPU_EVENT(RHICmdList, Name, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_GPU_EVENT has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, #Name) #define SCOPED_CONDITIONAL_GPU_EVENT_COLOR(RHICmdList, Name, Color, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_GPU_EVENT_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, #Name) #define SCOPED_CONDITIONAL_COMPUTE_EVENT(RHICmdList, Name, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_COMPUTE_EVENT has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, #Name) #define SCOPED_CONDITIONAL_COMPUTE_EVENT_COLOR(RHICmdList, Name, Color, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_COMPUTE_EVENT_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, #Name) #define SCOPED_CONDITIONAL_DRAW_EVENTF_COLOR(RHICmdList, Color, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_DRAW_EVENTF_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, Format, ##__VA_ARGS__) #define SCOPED_CONDITIONAL_GPU_EVENTF(RHICmdList, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_GPU_EVENTF has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, Format, ##__VA_ARGS__) #define SCOPED_CONDITIONAL_GPU_EVENTF_COLOR(RHICmdList, Color, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_GPU_EVENTF_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, Format, ##__VA_ARGS__) #define SCOPED_CONDITIONAL_COMPUTE_EVENTF(RHICmdList, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_COMPUTE_EVENTF has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, Format, ##__VA_ARGS__) #define SCOPED_CONDITIONAL_COMPUTE_EVENTF_COLOR(RHICmdList, Color, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_COMPUTE_EVENTF_COLOR has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL(RHICmdList, Condition, Format, ##__VA_ARGS__) #define BEGIN_DRAW_EVENTF_COLOR(RHICmdList, Color, Name, Event, Format, ...) UE_DEPRECATED_MACRO(5.5, \"BEGIN_DRAW_EVENTF_COLOR has been deprecated. Use BEGIN_DRAW_EVENTF instead.\" ) BEGIN_DRAW_EVENTF(RHICmdList, Name, Event, Format, ##__VA_ARGS__) #define BEGIN_GPU_EVENTF(RHICmdList, Name, Event, Format, ...) UE_DEPRECATED_MACRO(5.5, \"BEGIN_GPU_EVENTF has been deprecated. Use BEGIN_DRAW_EVENTF instead.\" ) BEGIN_DRAW_EVENTF(RHICmdList, Name, Event, Format, ##__VA_ARGS__) #define BEGIN_GPU_EVENTF_COLOR(RHICmdList, Color, Name, Event, Format, ...) UE_DEPRECATED_MACRO(5.5, \"BEGIN_GPU_EVENTF_COLOR has been deprecated. Use BEGIN_DRAW_EVENTF instead.\" ) BEGIN_DRAW_EVENTF(RHICmdList, Name, Event, Format, ##__VA_ARGS__) #define STOP_GPU_EVENT(Event) UE_DEPRECATED_MACRO(5.5, \"STOP_GPU_EVENT has been deprecated. Use STOP_DRAW_EVENT instead.\" ) STOP_DRAW_EVENT(Event) #define SCOPED_DRAW_EVENT_COLOR_GAMETHREAD(Color, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_DRAW_EVENT_COLOR_GAMETHREAD has been deprecated. Use RHI_BREADCRUMB_EVENT_GAMETHREAD instead.\" ) RHI_BREADCRUMB_EVENT_GAMETHREAD(#Name) #define SCOPED_DRAW_EVENTF_COLOR_GAMETHREAD(Color, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_DRAW_EVENTF_COLOR_GAMETHREAD has been deprecated. Use RHI_BREADCRUMB_EVENT_GAMETHREAD instead.\" ) RHI_BREADCRUMB_EVENT_GAMETHREAD(Format, ##__VA_ARGS__) #define SCOPED_CONDITIONAL_DRAW_EVENT_COLOR_GAMETHREAD(Name, Color, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_DRAW_EVENT_COLOR_GAMETHREAD has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD instead.\" ) RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD(Condition, #Name) #define SCOPED_CONDITIONAL_DRAW_EVENTF_COLOR_GAMETHREAD(Color, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_CONDITIONAL_DRAW_EVENTF_COLOR_GAMETHREAD has been deprecated. Use RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD instead.\") RHI_BREADCRUMB_EVENT_CONDITIONAL_GAMETHREAD(Condition, Format, ##__VA_ARGS__) #define SCOPED_RHI_DRAW_EVENT(RHICmdContext, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_DRAW_EVENT has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_DRAW_EVENTF(RHICmdContext, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_DRAW_EVENTF has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_CONDITIONAL_DRAW_EVENT(RHICmdContext, Name, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_CONDITIONAL_DRAW_EVENT has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_CONDITIONAL_DRAW_EVENTF(RHICmdContext, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_CONDITIONAL_DRAW_EVENTF has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_DRAW_EVENT_COLOR(RHICmdContext, Color, Name) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_DRAW_EVENT_COLOR has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_DRAW_EVENTF_COLOR(RHICmdContext, Color, Name, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_DRAW_EVENTF_COLOR has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_CONDITIONAL_DRAW_EVENT_COLOR(RHICmdContext, Color, Name, Condition) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_CONDITIONAL_DRAW_EVENT_COLOR has been deprecated. Use standard RHI breadcrumb events instead.\" ) #define SCOPED_RHI_CONDITIONAL_DRAW_EVENTF_COLOR(RHICmdContext, Color, Name, Condition, Format, ...) UE_DEPRECATED_MACRO(5.5, \"SCOPED_RHI_CONDITIONAL_DRAW_EVENTF_COLOR has been deprecated. Use standard RHI breadcrumb events instead.\") #if RHI_NEW_GPU_PROFILER #if HAS_GPU_STATS #define DECLARE_GPU_STAT( StatName ) DECLARE_FLOAT_COUNTER_STAT(TEXT(#StatName) , Stat_GPU_##StatName, STATGROUP_GPU)"
  },
  {
    "label": "CSV_DEFINE_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CSV_DEFINE_STAT(GPU,StatName)"
  },
  {
    "label": "DECLARE_GPU_STAT_NAMED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_GPU_STAT_NAMED(StatName, NameString) DECLARE_FLOAT_COUNTER_STAT(NameString , Stat_GPU_##StatName, STATGROUP_GPU)"
  },
  {
    "label": "DECLARE_GPU_DRAWCALL_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_GPU_DRAWCALL_STAT(StatName ) DECLARE_FLOAT_COUNTER_STAT(TEXT(#StatName) , Stat_GPU_##StatName, STATGROUP_GPU)"
  },
  {
    "label": "DECLARE_GPU_DRAWCALL_STAT_NAMED()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_GPU_DRAWCALL_STAT_NAMED(StatName, NameString) DECLARE_FLOAT_COUNTER_STAT(NameString , Stat_GPU_##StatName, STATGROUP_GPU)"
  },
  {
    "label": "DECLARE_GPU_DRAWCALL_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_GPU_DRAWCALL_STAT_EXTERN(StatName ) DECLARE_FLOAT_COUNTER_STAT_EXTERN(TEXT(#StatName), Stat_GPU_##StatName, STATGROUP_GPU,)"
  },
  {
    "label": "CSV_DECLARE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CSV_DECLARE_STAT_EXTERN(GPU,StatName)"
  },
  {
    "label": "DECLARE_GPU_STAT_NAMED_EXTERN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_GPU_STAT_NAMED_EXTERN(StatName, NameString) DECLARE_FLOAT_COUNTER_STAT_EXTERN(NameString, Stat_GPU_##StatName, STATGROUP_GPU,)"
  },
  {
    "label": "DEFINE_GPU_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DEFINE_GPU_STAT(StatName ) DEFINE_STAT(Stat_GPU_##StatName)"
  },
  {
    "label": "DEFINE_GPU_DRAWCALL_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DEFINE_GPU_DRAWCALL_STAT(StatName ) DEFINE_STAT(Stat_GPU_##StatName)"
  },
  {
    "label": "DECLARE_GPU_STAT()",
    "kind": "Method",
    "detail": "Function (# else # define)",
    "insertText": "DECLARE_GPU_STAT(...) #define DECLARE_GPU_STAT_NAMED(...) #define DECLARE_GPU_DRAWCALL_STAT(...) #define DECLARE_GPU_DRAWCALL_STAT_NAMED(...) #define DECLARE_GPU_DRAWCALL_STAT_EXTERN(...) #define DECLARE_GPU_STAT_NAMED_EXTERN(...) #define DEFINE_GPU_STAT(...) #define DEFINE_GPU_DRAWCALL_STAT(...) #endif #define SCOPED_GPU_STAT_VERBOSE(...) #define SCOPED_GPU_STAT(...) #define GPU_STATS_BEGINFRAME(...) #define GPU_STATS_ENDFRAME(...) #define GPU_STATS_SUSPENDFRAME(...)"
  },
  {
    "label": "DECLARE_GPU_STAT()",
    "kind": "Method",
    "detail": "Function (class FRealtimeGPUProfilerEvent ; class FRealtimeGPUProfilerFrame ; # if HAS_GPU_STATS # define)",
    "insertText": "DECLARE_GPU_STAT(StatName) DECLARE_FLOAT_COUNTER_STAT(TEXT(#StatName) , Stat_GPU_##StatName, STATGROUP_GPU)"
  },
  {
    "label": "DECLARE_GPU_DRAWCALL_STAT()",
    "kind": "Method",
    "detail": "Function (FRHIDrawStatsCategory DrawcallCountCategory_ # # StatName ; # define)",
    "insertText": "DECLARE_GPU_DRAWCALL_STAT(StatName) DECLARE_FLOAT_COUNTER_STAT(TEXT(#StatName) , Stat_GPU_##StatName, STATGROUP_GPU)"
  },
  {
    "label": "StatName()",
    "kind": "Method",
    "detail": "Function (FRHIDrawStatsCategory DrawcallCountCategory_ # #)",
    "insertText": "StatName((TCHAR*)TEXT(#StatName))"
  },
  {
    "label": "DECLARE_GPU_DRAWCALL_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "DECLARE_GPU_DRAWCALL_STAT_EXTERN(StatName) DECLARE_FLOAT_COUNTER_STAT_EXTERN(TEXT(#StatName), Stat_GPU_##StatName, STATGROUP_GPU,)"
  },
  {
    "label": "DEFINE_GPU_STAT()",
    "kind": "Method",
    "detail": "Function (FRHIDrawStatsCategory DrawcallCountCategory_ # # StatName ; # define)",
    "insertText": "DEFINE_GPU_STAT(StatName) DEFINE_STAT(Stat_GPU_##StatName)"
  },
  {
    "label": "DEFINE_GPU_DRAWCALL_STAT()",
    "kind": "Method",
    "detail": "Function (FRHIDrawStatsCategory DrawcallCountCategory_ # # StatName ; # define)",
    "insertText": "DEFINE_GPU_DRAWCALL_STAT(StatName) DEFINE_STAT(Stat_GPU_##StatName)"
  },
  {
    "label": "SCOPED_GPU_STAT_VERBOSE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_GPU_STAT_VERBOSE(RHICmdList, StatName, Description) \\ FScopedGPUStatEvent PREPROCESSOR_JOIN(GPUStatEvent_##StatName,__LINE__)( \\ RHICmdList \\ , CSV_STAT_FNAME(StatName) \\ , GET_STATID(Stat_GPU_##StatName) \\ , Description \\)"
  },
  {
    "label": "PREPROCESSOR_JOIN()",
    "kind": "Method",
    "detail": "Function (\\ FScopedDrawStatCategory)",
    "insertText": "PREPROCESSOR_JOIN(DrawCallScope_##StatName, __LINE__)( \\ RHICmdList, DrawcallCountCategory_##StatName \\)"
  },
  {
    "label": "SCOPED_GPU_STAT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "SCOPED_GPU_STAT(RHICmdList, StatName) SCOPED_GPU_STAT_VERBOSE(RHICmdList, StatName, nullptr) #define GPU_STATS_BEGINFRAME(RHICmdList) FRealtimeGPUProfiler::Get()->BeginFrame(RHICmdList)"
  },
  {
    "label": "GPU_STATS_ENDFRAME()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "GPU_STATS_ENDFRAME(RHICmdList) FRealtimeGPUProfiler::Get()->EndFrame(RHICmdList)"
  },
  {
    "label": "GPU_STATS_SUSPENDFRAME()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "GPU_STATS_SUSPENDFRAME() FRealtimeGPUProfiler::Get()->SuspendFrame()"
  },
  {
    "label": "DECLARE_GPU_STAT()",
    "kind": "Method",
    "detail": "Function (# else # define)",
    "insertText": "DECLARE_GPU_STAT(StatName) #define DECLARE_GPU_STAT_NAMED(StatName, NameString) #define DECLARE_GPU_DRAWCALL_STAT(StatName) #define DECLARE_GPU_DRAWCALL_STAT_NAMED(StatName, NameString) #define DECLARE_GPU_DRAWCALL_STAT_EXTERN(StatName) #define DECLARE_GPU_STAT_NAMED_EXTERN(StatName, NameString) #define DEFINE_GPU_STAT(StatName) #define DEFINE_GPU_DRAWCALL_STAT(StatName) #define SCOPED_GPU_STAT_VERBOSE(RHICmdList, StatName, Description) #define SCOPED_GPU_STAT(RHICmdList, StatName) #define GPU_STATS_BEGINFRAME(RHICmdList) #define GPU_STATS_ENDFRAME(RHICmdList) #define GPU_STATS_SUSPENDFRAME() #endif RENDERCORE_API bool AreGPUStatsEnabled()"
  },
  {
    "label": "FRealtimeGPUProfilerQuery()",
    "kind": "Method",
    "detail": "Function (# if HAS_GPU_STATS class FRealtimeGPUProfilerQuery { public :)",
    "insertText": "FRealtimeGPUProfilerQuery()"
  },
  {
    "label": "FRealtimeGPUProfilerQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRealtimeGPUProfilerQuery(FRHIGPUMask InGPUMask, FRHIRenderQuery* InQuery, FRealtimeGPUProfilerEvent* Parent) : GPUMask(InGPUMask) , Query(InQuery) , Parent(Parent)"
  },
  {
    "label": "Submit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Submit(FRHICommandList& RHICmdList, bool bBegin)"
  },
  {
    "label": "Discard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Discard(bool bBegin)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const uint64 HistoryCount = 6 4 ; bool UpdatedThisFrame ; FRHIGPUMask LastGPUMask ; uint64 NextWriteIndex ; uint64 AccumulatedTime ; TStaticArray<uint64,HistoryCount> Times ; } ; struct FRealtimeGPUProfilerHistoryByDescription { TMap<FString,FRealtimeGPUProfilerHistoryItem> History ; FRWLock Mutex ; } ; struct FRealtimeGPUProfilerDescriptionResult { FString Description ; FRHIGPUMask GPUMask ; uint64 AverageTime ; uint64 MinTime ; uint64 MaxTime ; } ; # endif class FRealtimeGPUProfiler { FRealtimeGPUProfiler* Instance ; public : FRealtimeGPUProfiler*)",
    "insertText": "Get()"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "BeginFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFrame(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "SuspendFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendFrame()"
  },
  {
    "label": "PushEvent()",
    "kind": "Method",
    "detail": "Function (FRealtimeGPUProfilerQuery)",
    "insertText": "PushEvent(FRHIGPUMask GPUMask, const FName& Name, const TStatId& Stat, const TCHAR* Description)"
  },
  {
    "label": "PopEvent()",
    "kind": "Method",
    "detail": "Function (FRealtimeGPUProfilerQuery)",
    "insertText": "PopEvent()"
  },
  {
    "label": "PushStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushStat(FRHICommandListImmediate& RHICmdList, const FName& Name, const TStatId& Stat, const TCHAR* Description)"
  },
  {
    "label": "PopStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopStat(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "FetchPerfByDescription()",
    "kind": "Method",
    "detail": "Function (# if GPUPROFILERTRACE_ENABLED void)",
    "insertText": "FetchPerfByDescription(TArray<FRealtimeGPUProfilerDescriptionResult> & OutResults)"
  },
  {
    "label": "FRealtimeGPUProfiler()",
    "kind": "Method",
    "detail": "Function (# endif private :)",
    "insertText": "FRealtimeGPUProfiler()"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "FScopedGPUStatEvent()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FRealtimeGPUProfilerFrame> ActiveFrame ; TQueue<TUniquePtr<FRealtimeGPUProfilerFrame>> PendingFrames ; FRenderQueryPoolRHIRef RenderQueryPool ; bool bLocked = false ; # if GPUPROFILERTRACE_ENABLED FRealtimeGPUProfilerHistoryByDescription HistoryByDescription ; # endif } ; class FScopedGPUStatEvent { FRHICommandListBase* RHICmdList = nullptr ; public :)",
    "insertText": "FScopedGPUStatEvent(FRHICommandListBase& InRHICmdList, const FName& Name, const TStatId& StatId, const TCHAR* Description)"
  },
  {
    "label": "FScopedGPUStatEvent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedGPUStatEvent()"
  },
  {
    "label": "FScopedDrawStatCategory()",
    "kind": "Method",
    "detail": "Function (} ; class FScopedDrawStatCategory { FRHICommandListBase* const RHICmdList = nullptr ; TOptional<FRHIDrawStatsCategory const*> Previous { } ; public :)",
    "insertText": "FScopedDrawStatCategory(FRHICommandListBase& RHICmdList, FRHIDrawStatsCategory const& Category)"
  },
  {
    "label": "FScopedDrawStatCategory()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopedDrawStatCategory()"
  }
]