[
  {
    "label": "triangular_solve_retval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "triangular_solve_retval"
  },
  {
    "label": "TriangularBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularBase"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "TriangularBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularBase"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "represents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "represents"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "TriangularViewImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularViewImpl"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "TriangularViewImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularViewImpl"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "evaluator_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_traits"
  },
  {
    "label": "unary_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unary_evaluator"
  },
  {
    "label": "Triangular2Triangular",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Triangular2Triangular"
  },
  {
    "label": "Triangular2Dense",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Triangular2Dense"
  },
  {
    "label": "Dense2Triangular",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Dense2Triangular"
  },
  {
    "label": "triangular_assignment_loop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "triangular_assignment_loop"
  },
  {
    "label": "triangular_dense_assignment_kernel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "triangular_dense_assignment_kernel"
  },
  {
    "label": "AssignmentKind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AssignmentKind"
  },
  {
    "label": "AssignmentKind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AssignmentKind"
  },
  {
    "label": "AssignmentKind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AssignmentKind"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "triangular_assignment_loop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "triangular_assignment_loop"
  },
  {
    "label": "triangular_assignment_loop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "triangular_assignment_loop"
  },
  {
    "label": "triangular_assignment_loop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "triangular_assignment_loop"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "coeff()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "coeff(row,col)"
  },
  {
    "label": "coeffRef()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "coeffRef(row,col)"
  },
  {
    "label": "tmp()",
    "kind": "Method",
    "detail": "Function (MatrixType::TransposeReturnType)",
    "insertText": "tmp(m_matrix)"
  },
  {
    "label": "TransposeReturnType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TransposeReturnType(tmp)"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "lazyAssign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lazyAssign(const TriangularBase<OtherDerived>& other)"
  },
  {
    "label": "lazyAssign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lazyAssign(const MatrixBase<OtherDerived>& other)"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "derived()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "derived()"
  },
  {
    "label": "srcEvaluator()",
    "kind": "Method",
    "detail": "Function (SrcEvaluatorType)",
    "insertText": "srcEvaluator(src)"
  },
  {
    "label": "dstEvaluator()",
    "kind": "Method",
    "detail": "Function (DstEvaluatorType)",
    "insertText": "dstEvaluator(dst)"
  }
]