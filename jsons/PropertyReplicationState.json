[
  {
    "label": "FReplicationStateDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationStateDescriptor"
  },
  {
    "label": "FPropertyReplicationState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyReplicationState"
  },
  {
    "label": "FCallRepNotifiesParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallRepNotifiesParameters"
  },
  {
    "label": "FPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Templates / RefCounting . h \" namespace UE::Net { struct FReplicationStateDescriptor ; } namespace UE::Net { class FPropertyReplicationState { public :)",
    "insertText": "FPropertyReplicationState(const FReplicationStateDescriptor* Descriptor)"
  },
  {
    "label": "FPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyReplicationState(const FReplicationStateDescriptor* Descriptor, uint8* InStateBuffer)"
  },
  {
    "label": "FPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPropertyReplicationState()"
  },
  {
    "label": "FPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyReplicationState(const FPropertyReplicationState& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPropertyReplicationState&)",
    "insertText": "operator(const FPropertyReplicationState& Other)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const FPropertyReplicationState& Other)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "SetPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertyValue(uint32 Index, const void* SrcValue)"
  },
  {
    "label": "GetPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPropertyValue(uint32 Index, void* DstValue)"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDirty(uint32 Index)"
  },
  {
    "label": "MarkDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDirty(uint32 Index)"
  },
  {
    "label": "PollPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollPropertyReplicationState(const void* RESTRICT SrcData)"
  },
  {
    "label": "StoreCurrentPropertyReplicationStateForRepNotifies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StoreCurrentPropertyReplicationStateForRepNotifies(const void* RESTRICT SrcData, const FPropertyReplicationState* NewStateToBeApplied)"
  },
  {
    "label": "PushPropertyReplicationState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushPropertyReplicationState(const UObject* Owner, void* RESTRICT DstData, bool bPushAll = false)"
  },
  {
    "label": "PollObjectReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollObjectReferences(const void* RESTRICT SrcData)"
  },
  {
    "label": "CopyDirtyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDirtyProperties(const FPropertyReplicationState& Other)"
  },
  {
    "label": "CallRepNotifies()",
    "kind": "Method",
    "detail": "Function (struct FCallRepNotifiesParameters { const FPropertyReplicationState* PreviousState = nullptr ; bool bIsInit = false ; bool bOnlyCallIfDiffersFromLocal = false ; } ; void)",
    "insertText": "CallRepNotifies(void* RESTRICT DstData, const FCallRepNotifiesParameters& Params)"
  },
  {
    "label": "CallRepNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallRepNotifies(void* RESTRICT DstData, const FPropertyReplicationState* PreviousState, bool bIsInit)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString(bool bIncludeAll = true)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ToString(FStringBuilderBase& StringBuilder, bool bIncludeAll = true)"
  },
  {
    "label": "GetReplicationStateDescriptor()",
    "kind": "Method",
    "detail": "Function (const FReplicationStateDescriptor*)",
    "insertText": "GetReplicationStateDescriptor()"
  },
  {
    "label": "IsCustomConditionEnabled()",
    "kind": "Method",
    "detail": "Function (public : enum : unsigned { TArrayElementChangeMaskBits = 6 3 U,TArrayPropertyChangeMaskBitIndex = 0 U,TArrayElementChangeMaskBitOffset = 1 U,} ; bool)",
    "insertText": "IsCustomConditionEnabled(uint32 Index)"
  },
  {
    "label": "IsInitState()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsInitState()"
  },
  {
    "label": "IsDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDirty()"
  },
  {
    "label": "ConstructStateInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructStateInternal()"
  },
  {
    "label": "DestructStateInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestructStateInternal()"
  },
  {
    "label": "InjectState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectState(const FReplicationStateDescriptor* Descriptor, uint8* InStateBuffer)"
  },
  {
    "label": "PollPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PollPropertyValue(uint32 Index, const void* SrcValue)"
  },
  {
    "label": "PushPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushPropertyValue(uint32 Index, void* DstValue)"
  },
  {
    "label": "CallRepNotifies()",
    "kind": "Method",
    "detail": "Function (FCallRepNotifiesParameters Params ; Params . PreviousState = PreviousState ; Params . bIsInit = bIsInit ;)",
    "insertText": "CallRepNotifies(DstData, Params)"
  }
]