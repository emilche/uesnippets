[
  {
    "label": "U16_IS_SINGLE()",
    "kind": "Method",
    "detail": "Function (# ifndef __UTF16_H__ # define __UTF16_H__ # include \" unicode / umachine . h \" # ifndef __UTF_H__ # include \" unicode / utf . h \" # endif # define)",
    "insertText": "U16_IS_SINGLE(c) !U_IS_SURROGATE(c) #define U16_IS_LEAD(c) (((c)&0xfffffc00)==0xd800) #define U16_IS_TRAIL(c) (((c)&0xfffffc00)==0xdc00) #define U16_IS_SURROGATE(c) U_IS_SURROGATE(c) #define U16_IS_SURROGATE_LEAD(c) (((c)&0x400)==0) #define U16_IS_SURROGATE_TRAIL(c) (((c)&0x400)!=0) #define U16_SURROGATE_OFFSET ((0xd800<<10UL)+0xdc00-0x10000) #define U16_GET_SUPPLEMENTARY(lead, trail) \\ (((UChar32)(lead)<<10UL)+(UChar32)(trail)-U16_SURROGATE_OFFSET) #define U16_LEAD(supplementary) (UChar)(((supplementary)>>10)+0xd7c0) #define U16_TRAIL(supplementary) (UChar)(((supplementary)&0x3ff)|0xdc00) #define U16_LENGTH(c) ((uint32_t)(c)<=0xffff ? 1 : 2) #define U16_MAX_LENGTH 2 #define U16_GET_UNSAFE(s, i, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_SURROGATE(c))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_SURROGATE_LEAD(c))"
  },
  {
    "label": "else()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "else(c)=U16_GET_SUPPLEMENTARY((s)[(i)-1], (c))"
  },
  {
    "label": "U16_GET()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } # define)",
    "insertText": "U16_GET(s, start, i, length, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if((i)+1!=(length) && U16_IS_TRAIL(__c2=(s)[(i)+1]))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } else { \\)",
    "insertText": "if((i)>(start) && U16_IS_LEAD(__c2=(s)[(i)-1]))"
  },
  {
    "label": "U16_GET_OR_FFFD()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } \\ } # define)",
    "insertText": "U16_GET_OR_FFFD(s, start, i, length, c)"
  },
  {
    "label": "else()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "else(c)"
  },
  {
    "label": "U16_NEXT_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } \\ } # define)",
    "insertText": "U16_NEXT_UNSAFE(s, i, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_LEAD(c))"
  },
  {
    "label": "U16_NEXT()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_NEXT(s, i, length, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ uint16_t __c2 ; \\)",
    "insertText": "if((i)!=(length) && U16_IS_TRAIL(__c2=(s)[(i)]))"
  },
  {
    "label": "U16_NEXT_OR_FFFD()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } # define)",
    "insertText": "U16_NEXT_OR_FFFD(s, i, length, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ uint16_t __c2 ; \\)",
    "insertText": "if(U16_IS_SURROGATE_LEAD(c) && (i)!=(length) && U16_IS_TRAIL(__c2=(s)[(i)]))"
  },
  {
    "label": "U16_APPEND_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } # define)",
    "insertText": "U16_APPEND_UNSAFE(s, i, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if((uint32_t)(c)<=0xffff)"
  },
  {
    "label": "else()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "else(s)[(i)++]=(uint16_t)(((c)>>10)+0xd7c0)"
  },
  {
    "label": "U16_APPEND()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_APPEND(s, i, capacity, c, isError)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ } else)",
    "insertText": "if((uint32_t)(c)<=0x10ffff && (i)+1<(capacity))"
  },
  {
    "label": "else()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "else(isError)"
  },
  {
    "label": "U16_FWD_1_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_FWD_1_UNSAFE(s, i)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_LEAD((s)[(i)++]))"
  },
  {
    "label": "U16_FWD_1()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_FWD_1(s, i, length)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_LEAD((s)[(i)++]) && (i)!=(length) && U16_IS_TRAIL((s)[i]))"
  },
  {
    "label": "U16_FWD_N_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_FWD_N_UNSAFE(s, i, n)"
  },
  {
    "label": "__N()",
    "kind": "Method",
    "detail": "Function (\\ int32_t)",
    "insertText": "__N(n)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "while(__N>0)"
  },
  {
    "label": "U16_FWD_N()",
    "kind": "Method",
    "detail": "Function (\\ - - __N ; \\ } \\ } # define)",
    "insertText": "U16_FWD_N(s, i, length, n)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "while(__N>0 && ((i)<(length) || ((length)<0 && (s)[i]!=0)))"
  },
  {
    "label": "U16_SET_CP_START_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ - - __N ; \\ } \\ } # define)",
    "insertText": "U16_SET_CP_START_UNSAFE(s, i)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_TRAIL((s)[i]))"
  },
  {
    "label": "U16_SET_CP_START()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_SET_CP_START(s, start, i)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_TRAIL((s)[i]) && (i)>(start) && U16_IS_LEAD((s)[(i)-1]))"
  },
  {
    "label": "U16_PREV_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_PREV_UNSAFE(s, i, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_TRAIL(c))"
  },
  {
    "label": "U16_PREV()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_PREV(s, start, i, c)"
  },
  {
    "label": "U16_PREV_OR_FFFD()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } # define)",
    "insertText": "U16_PREV_OR_FFFD(s, start, i, c)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ uint16_t __c2 ; \\)",
    "insertText": "if(U16_IS_SURROGATE_TRAIL(c) && (i)>(start) && U16_IS_LEAD(__c2=(s)[(i)-1]))"
  },
  {
    "label": "U16_BACK_1_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } \\ } # define)",
    "insertText": "U16_BACK_1_UNSAFE(s, i)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_TRAIL((s)[--(i)]))"
  },
  {
    "label": "U16_BACK_1()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_BACK_1(s, start, i)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_TRAIL((s)[--(i)]) && (i)>(start) && U16_IS_LEAD((s)[(i)-1]))"
  },
  {
    "label": "U16_BACK_N_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_BACK_N_UNSAFE(s, i, n)"
  },
  {
    "label": "U16_BACK_N()",
    "kind": "Method",
    "detail": "Function (\\ - - __N ; \\ } \\ } # define)",
    "insertText": "U16_BACK_N(s, start, i, n)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "while(__N>0 && (i)>(start))"
  },
  {
    "label": "U16_SET_CP_LIMIT_UNSAFE()",
    "kind": "Method",
    "detail": "Function (\\ - - __N ; \\ } \\ } # define)",
    "insertText": "U16_SET_CP_LIMIT_UNSAFE(s, i)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(U16_IS_LEAD((s)[(i)-1]))"
  },
  {
    "label": "U16_SET_CP_LIMIT()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } # define)",
    "insertText": "U16_SET_CP_LIMIT(s, start, i, length)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if((start)<(i) && ((i)<(length) || (length)<0) && U16_IS_LEAD((s)[(i)-1]) && U16_IS_TRAIL((s)[i]))"
  }
]