[
  {
    "label": "MockCustomProcessing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockCustomProcessing"
  },
  {
    "label": "MockCustomAudioAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockCustomAudioAnalyzer"
  },
  {
    "label": "MockEchoControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockEchoControl"
  },
  {
    "label": "MockEchoDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockEchoDetector"
  },
  {
    "label": "MockAudioProcessing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockAudioProcessing"
  },
  {
    "label": "MockCustomProcessing()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_INCLUDE_MOCK_AUDIO_PROCESSING_H_ # define MODULES_AUDIO_PROCESSING_INCLUDE_MOCK_AUDIO_PROCESSING_H_ # include<memory> # include \" absl / strings / string_view . h \" # include \" modules / audio_processing / include / aec_dump . h \" # include \" modules / audio_processing / include / audio_processing . h \" # include \" modules / audio_processing / include / audio_processing_statistics . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockCustomProcessing : public CustomProcessing { public : ~)",
    "insertText": "MockCustomProcessing()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, Initialize, (int sample_rate_hz, int num_channels), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Process, (AudioBuffer * audio), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetRuntimeSetting, (AudioProcessing::RuntimeSetting setting), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::string, ToString, (), (const, override))"
  },
  {
    "label": "MockCustomAudioAnalyzer()",
    "kind": "Method",
    "detail": "Function (} ; class MockCustomAudioAnalyzer : public CustomAudioAnalyzer { public : ~)",
    "insertText": "MockCustomAudioAnalyzer()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Analyze, (const AudioBuffer* audio), (override))"
  },
  {
    "label": "MockEchoControl()",
    "kind": "Method",
    "detail": "Function (} ; class MockEchoControl : public EchoControl { public : ~)",
    "insertText": "MockEchoControl()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, AnalyzeRender, (AudioBuffer * render), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AnalyzeCapture, (AudioBuffer * capture), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ProcessCapture, (AudioBuffer * capture, bool echo_path_change), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ProcessCapture, (AudioBuffer * capture, AudioBuffer* linear_output, bool echo_path_change), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(Metrics, GetMetrics, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetAudioBufferDelay, (int delay_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, ActiveProcessing, (), (const, override))"
  },
  {
    "label": "MockEchoDetector()",
    "kind": "Method",
    "detail": "Function (} ; class MockEchoDetector : public EchoDetector { public : ~)",
    "insertText": "MockEchoDetector()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(void, Initialize, (int capture_sample_rate_hz, int num_capture_channels, int render_sample_rate_hz, int num_render_channels), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AnalyzeRenderAudio, (rtc::ArrayView<const float> render_audio), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AnalyzeCaptureAudio, (rtc::ArrayView<const float> capture_audio), (override))"
  },
  {
    "label": "MockAudioProcessing()",
    "kind": "Method",
    "detail": "Function (} ; class MockAudioProcessing : public AudioProcessing { public :)",
    "insertText": "MockAudioProcessing()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(int, Initialize, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, Initialize, (const ProcessingConfig& processing_config), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ApplyConfig, (const Config& config), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, proc_sample_rate_hz, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, proc_split_sample_rate_hz, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, num_input_channels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, num_proc_channels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, num_output_channels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, num_reverse_channels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, set_output_will_be_muted, (bool muted), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetRuntimeSetting, (RuntimeSetting setting), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, PostRuntimeSetting, (RuntimeSetting setting), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, ProcessStream, (const int16_t* const src, const StreamConfig& input_config, const StreamConfig& output_config, int16_t* const dest), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, ProcessStream, (const float* const* src, const StreamConfig& input_config, const StreamConfig& output_config, float* const* dest), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, ProcessReverseStream, (const int16_t* const src, const StreamConfig& input_config, const StreamConfig& output_config, int16_t* const dest), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, AnalyzeReverseStream, (const float* const* data, const StreamConfig& reverse_config), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, ProcessReverseStream, (const float* const* src, const StreamConfig& input_config, const StreamConfig& output_config, float* const* dest), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, GetLinearAecOutput, ((rtc::ArrayView<std::array<float, 160>> linear_output)), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, set_stream_delay_ms, (int delay), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, stream_delay_ms, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, set_stream_key_pressed, (bool key_pressed), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, set_stream_analog_level, (int), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, recommended_stream_analog_level, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, CreateAndAttachAecDump, (absl::string_view file_name, int64_t max_log_size_bytes, rtc::TaskQueue* worker_queue), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, CreateAndAttachAecDump, (FILE * handle, int64_t max_log_size_bytes, rtc::TaskQueue* worker_queue), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, AttachAecDump, (std::unique_ptr<AecDump>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, DetachAecDump, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(AudioProcessingStats, GetStatistics, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(AudioProcessingStats, GetStatistics, (bool), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(AudioProcessing::Config, GetConfig, (), (const, override))"
  }
]