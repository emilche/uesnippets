[
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "IAnimBlueprintCompilationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimBlueprintCompilationContext"
  },
  {
    "label": "UAnimBlueprintExtension_Tag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintExtension_Tag"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimBlueprintExtension . h \" # include \" Animation / AnimSubsystem_Tag . h \" # include \" AnimBlueprintExtension_Tag . generated . h \" class UAnimGraphNode_Base ; class IAnimBlueprintCompilationContext ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: void AddTaggedNode(UAnimGraphNode_Base* InNode, IAnimBlueprintCompilationContext& InCompilationContext)"
  },
  {
    "label": "FindTaggedNode()",
    "kind": "Method",
    "detail": "Function (UAnimGraphNode_Base*)",
    "insertText": "FindTaggedNode(FName InTag)"
  },
  {
    "label": "HandleStartCompilingClass()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleStartCompilingClass(const UClass* InClass, IAnimBlueprintCompilationBracketContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "HandleFinishCompilingClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFinishCompilingClass(const UClass* InClass, IAnimBlueprintCompilationBracketContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  }
]