[
  {
    "label": "FHazardPointerCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHazardPointerCollection"
  },
  {
    "label": "so",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "so"
  },
  {
    "label": "FHazardDeleter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHazardDeleter"
  },
  {
    "label": "FHazardPointerCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHazardPointerCollection"
  },
  {
    "label": "THazardPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THazardPointer"
  },
  {
    "label": "FTlsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTlsData"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "alignas"
  },
  {
    "label": "FHazardPointerCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHazardPointerCollection"
  },
  {
    "label": "THazardPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THazardPointer"
  },
  {
    "label": "THazardDeleter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THazardDeleter"
  },
  {
    "label": "FHazardRecordChunk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHazardRecordChunk"
  },
  {
    "label": "FPseudo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPseudo"
  },
  {
    "label": "THazardPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THazardPointer"
  },
  {
    "label": "Collect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Collect(TArray<HazardPointer_Impl::FHazardDeleter>& Collectables)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delete(const HazardPointer_Impl::FHazardDeleter& Deleter, int32 CollectLimit)"
  }
]