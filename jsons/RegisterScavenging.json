[
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "TargetRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetRegisterInfo"
  },
  {
    "label": "TargetInstrInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetInstrInfo"
  },
  {
    "label": "TargetRegisterClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetRegisterClass"
  },
  {
    "label": "RegScavenger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegScavenger"
  },
  {
    "label": "ScavengedInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScavengedInfo"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "enterBasicBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "enterBasicBlock(MachineBasicBlock *mbb)"
  },
  {
    "label": "initRegState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initRegState()"
  },
  {
    "label": "forward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "forward()"
  },
  {
    "label": "unprocess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unprocess()"
  },
  {
    "label": "getRegsAvailable()",
    "kind": "Method",
    "detail": "Function (BitVector)",
    "insertText": "getRegsAvailable(const TargetRegisterClass *RC)"
  },
  {
    "label": "scavengeRegister()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "scavengeRegister(const TargetRegisterClass *RegClass,\n                            MachineBasicBlock::iterator I, int SPAdj)"
  },
  {
    "label": "scavengeRegister()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "scavengeRegister(RegClass, MBBI, SPAdj)"
  },
  {
    "label": "setRegUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setRegUsed(unsigned Reg)"
  },
  {
    "label": "determineKillsAndDefs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "determineKillsAndDefs()"
  },
  {
    "label": "addRegUnits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addRegUnits(BitVector &BV, unsigned Reg)"
  },
  {
    "label": "findSurvivorReg()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "findSurvivorReg(MachineBasicBlock::iterator StartMI,\n                           BitVector &Candidates,\n                           unsigned InstrLimit,\n                           MachineBasicBlock::iterator &UseMI)"
  }
]