[
  {
    "label": "FAnchorData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnchorData"
  },
  {
    "label": "UCanvasPanelSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvasPanelSlot"
  },
  {
    "label": "FPropertyChangedChainEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedChainEvent"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ScriptMacros . h \" # include \" Layout / Margin . h \" # include \" Layout / Geometry . h \" # include \" Widgets / Layout / Anchors . h \" # include \" Widgets / Layout / SConstraintCanvas . h \" # include \" Components / PanelSlot . h \" # include \" CanvasPanelSlot . generated . h \")",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_USTRUCT_BODY() public: UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=AnchorData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FAnchorData& Other)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UE_DEPRECATED(5.1, \"Direct access to LayoutData is deprecated. Please use the getter or setter.\") UPROPERTY(EditAnywhere, BlueprintReadWrite, Getter=\"GetLayout\", Setter=\"SetLayout\", BlueprintGetter =\"GetLayout\", BlueprintSetter=\"SetLayout\", Category = \"Layout|Canvas Slot\")"
  },
  {
    "label": "NudgeByDesigner()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITOR bool)",
    "insertText": "NudgeByDesigner(const FVector2D& NudgeDirection, const TOptional<int32>& GridSnapSize)"
  },
  {
    "label": "DragDropPreviewByDesigner()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DragDropPreviewByDesigner(const FVector2D& LocalCursorPosition, const TOptional<int32>& XGridSnapSize, const TOptional<int32>& YGridSnapSize)"
  },
  {
    "label": "SynchronizeFromTemplate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeFromTemplate(const UPanelSlot* const TemplateSlot)"
  },
  {
    "label": "BuildSlot()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "BuildSlot(TSharedRef<SConstraintCanvas> Canvas)"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR using Super::PreEditChange ; void)",
    "insertText": "PreEditChange(FProperty* PropertyThatWillChange)"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeChainProperty(struct FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "SaveBaseLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveBaseLayout()"
  },
  {
    "label": "SetDesiredPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDesiredPosition(FVector2D InPosition)"
  },
  {
    "label": "RebaseLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebaseLayout(bool PreserveSize = true)"
  }
]