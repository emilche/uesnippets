[
  {
    "label": "StringCchPrintfA()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "StringCchPrintfA(char *dst, size_t dstSize, const char *format, ...)"
  },
  {
    "label": "UIntAdd()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "UIntAdd(UINT uAugend, UINT uAddend, UINT *puResult)"
  },
  {
    "label": "IntToUInt()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "IntToUInt(int in, UINT *out)"
  },
  {
    "label": "SizeTToInt()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "SizeTToInt(size_t in, INT *out)"
  },
  {
    "label": "UInt32Mult()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "UInt32Mult(UINT a, UINT b, UINT *out)"
  },
  {
    "label": "strnicmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "strnicmp(const char *str1, const char *str2, size_t count)"
  },
  {
    "label": "_stricmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_stricmp(const char *str1, const char *str2)"
  },
  {
    "label": "_wcsicmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_wcsicmp(const wchar_t *str1, const wchar_t *str2)"
  },
  {
    "label": "_wcsnicmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_wcsnicmp(const wchar_t *str1, const wchar_t *str2, size_t n)"
  },
  {
    "label": "wsprintf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "wsprintf(wchar_t *wcs, const wchar_t *fmt, ...)"
  },
  {
    "label": "_BitScanForward()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "_BitScanForward(unsigned long *Index, unsigned long Mask)"
  },
  {
    "label": "CreateFile2()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "CreateFile2(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode,\n                   DWORD dwCreationDisposition, void *pCreateExParams)"
  },
  {
    "label": "CreateFileW()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode,\n                   void *lpSecurityAttributes, DWORD dwCreationDisposition,\n                   DWORD dwFlagsAndAttributes, HANDLE hTemplateFile)"
  },
  {
    "label": "GetFileSizeEx()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "GetFileSizeEx(HANDLE hFile, PLARGE_INTEGER lpFileSize)"
  },
  {
    "label": "ReadFile()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead,\n              LPDWORD lpNumberOfBytesRead, void *lpOverlapped)"
  },
  {
    "label": "WriteFile()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "WriteFile(HANDLE hFile, LPCVOID lpBuffer, DWORD nNumberOfBytesToWrite,\n               LPDWORD lpNumberOfBytesWritten, void *lpOverlapped)"
  },
  {
    "label": "CloseHandle()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CloseHandle(HANDLE hObject)"
  },
  {
    "label": "HeapCreate()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "HeapCreate(DWORD flOptions, SIZE_T dwInitialSize, SIZE_T dwMaximumSize)"
  },
  {
    "label": "HeapDestroy()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "HeapDestroy(HANDLE heap)"
  },
  {
    "label": "HeapAlloc()",
    "kind": "Method",
    "detail": "Function (LPVOID)",
    "insertText": "HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T nBytes)"
  },
  {
    "label": "HeapReAlloc()",
    "kind": "Method",
    "detail": "Function (LPVOID)",
    "insertText": "HeapReAlloc(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem, SIZE_T dwBytes)"
  },
  {
    "label": "HeapFree()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "HeapFree(HANDLE hHeap, DWORD dwFlags, LPVOID lpMem)"
  },
  {
    "label": "HeapSize()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "HeapSize(HANDLE hHeap, DWORD dwFlags, LPCVOID lpMem)"
  },
  {
    "label": "GetProcessHeap()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "GetProcessHeap()"
  }
]