[
  {
    "label": "FTraceControlCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTraceControlCommands"
  },
  {
    "label": "FTraceControlCommands()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Framework / Commands / InputChord . h \" # include \" Framework / Commands / Commands . h \" # include \" TraceToolsStyle . h \" # include \" Styling / AppStyle . h \" # define LOCTEXT_NAMESPACE \" SessionConsoleCommands \" namespace UE::TraceTools { class FTraceControlCommands : public TCommands<FTraceControlCommands> { public :)",
    "insertText": "FTraceControlCommands() : TCommands<FTraceControlCommands>( \"TraceControl\", NSLOCTEXT(\"Contexts\", \"TraceControl\", \"Trace Control\"), NAME_None, FTraceToolsStyle::GetStyleSetName())"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(SetTraceTargetServer, \"Trace Server\", \"Set the trace server as the trace target.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(SetTraceTargetFile, \"File\", \"Set file as the trace target.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(StartTrace, \"Start Trace\", \"Start trace on the selected session.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(StopTrace, \"Stop Trace\", \"Stop trace on the selected session.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(TraceSnapshot, \"Snapshot\", \"Save a trace snapshot on the selected session.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(TraceBookmark, \"Bookmark\", \"Trace a bookmark with a predefined name.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(TraceScreenshot, \"Screenshot\", \"Trace a screenshot with a predefined name.\", EUserInterfaceActionType::Button, FInputChord())"
  },
  {
    "label": "UI_COMMAND()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UI_COMMAND(ToggleStatNamedEvents, \"Stat Named Events\", \"Enables/Disables the tracing of stat named events.\", EUserInterfaceActionType::ToggleButton, FInputChord())"
  }
]