[
  {
    "label": "GROWABLE_LOGF()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / VarArgs . h \" # include \" HAL / UnrealMemory . h \" # include \" Templates / UnrealTemplate . h \" # define)",
    "insertText": "GROWABLE_LOGF(SerializeFunc)"
  },
  {
    "label": "GET_TYPED_VARARGS_RESULT()",
    "kind": "Method",
    "detail": "Function (\\ TCHAR* Buffer = NULL ; \\ int32 Result = - 1 ; \\ \\ TCHAR StackBuffer [ 5 1 2 ] ; \\ TCHAR* AllocatedBuffer = NULL ; \\ \\ \\ Buffer = StackBuffer ; \\)",
    "insertText": "GET_TYPED_VARARGS_RESULT(TCHAR, Buffer, UE_ARRAY_COUNT(StackBuffer), UE_ARRAY_COUNT(StackBuffer) - 1, Fmt, Fmt, Result)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ \\ \\)",
    "insertText": "while(Result == -1)"
  },
  {
    "label": "SystemFree()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "SystemFree(AllocatedBuffer)"
  },
  {
    "label": "AllocatedBuffer()",
    "kind": "Method",
    "detail": "Function (\\ \\ Buffer =)",
    "insertText": "AllocatedBuffer(TCHAR*) FMemory::SystemMalloc( BufferSize * sizeof(TCHAR))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(Buffer == NULL)"
  },
  {
    "label": "GET_TYPED_VARARGS_RESULT()",
    "kind": "Method",
    "detail": "Function (\\ return ; \\ } \\)",
    "insertText": "GET_TYPED_VARARGS_RESULT(TCHAR, Buffer, BufferSize, BufferSize-1, Fmt, Fmt, Result)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (\\ BufferSize* = 2 ; \\ } ; \\ Buffer [ Result ] =)",
    "insertText": "TEXT('\\0')"
  }
]