[
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "MDTuple",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDTuple"
  },
  {
    "label": "MDOperand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDOperand"
  },
  {
    "label": "DebugInfoFinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DebugInfoFinder"
  },
  {
    "label": "ShaderModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderModel"
  },
  {
    "label": "OP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OP"
  },
  {
    "label": "DxilFunctionProps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilFunctionProps"
  },
  {
    "label": "DxilEntryProps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilEntryProps"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "DxilModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilModule"
  },
  {
    "label": "IntermediateFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IntermediateFlags"
  },
  {
    "label": "ShaderCompatInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ShaderCompatInfo"
  },
  {
    "label": "DxilModule()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DxilModule(llvm::Module *pModule)"
  },
  {
    "label": "SetShaderModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderModel(const ShaderModel *pSM, bool bUseMinPrecision = true)"
  },
  {
    "label": "SetValidatorVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValidatorVersion(unsigned ValMajor, unsigned ValMinor)"
  },
  {
    "label": "UpgradeValidatorVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpgradeValidatorVersion(unsigned ValMajor, unsigned ValMinor)"
  },
  {
    "label": "SetForceZeroStoreLifetimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForceZeroStoreLifetimes(bool ForceZeroStoreLifetimes)"
  },
  {
    "label": "UpgradeToMinValidatorVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpgradeToMinValidatorVersion()"
  },
  {
    "label": "SetEntryFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEntryFunction(llvm::Function *pEntryFunc)"
  },
  {
    "label": "SetEntryFunctionName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEntryFunctionName(const std::string &name)"
  },
  {
    "label": "SetPatchConstantFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPatchConstantFunction(llvm::Function *pFunc)"
  },
  {
    "label": "CollectShaderFlagsForModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectShaderFlagsForModule()"
  },
  {
    "label": "AddCBuffer()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "AddCBuffer(std::unique_ptr<DxilCBuffer> pCB)"
  },
  {
    "label": "AddSampler()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "AddSampler(std::unique_ptr<DxilSampler> pSampler)"
  },
  {
    "label": "AddSRV()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "AddSRV(std::unique_ptr<DxilResource> pSRV)"
  },
  {
    "label": "AddUAV()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "AddUAV(std::unique_ptr<DxilResource> pUAV)"
  },
  {
    "label": "RemoveUnusedResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedResources()"
  },
  {
    "label": "RemoveResourcesWithUnusedSymbols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveResourcesWithUnusedSymbols()"
  },
  {
    "label": "RemoveFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFunction(llvm::Function *F)"
  },
  {
    "label": "RenameResourcesWithPrefix()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameResourcesWithPrefix(const std::string &prefix)"
  },
  {
    "label": "RenameResourceGlobalsWithBinding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameResourceGlobalsWithBinding(bool bKeepName = true)"
  },
  {
    "label": "ReplaceDxilEntryProps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceDxilEntryProps(llvm::Function *F, llvm::Function *NewF)"
  },
  {
    "label": "CloneDxilEntryProps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloneDxilEntryProps(llvm::Function *F, llvm::Function *NewF)"
  },
  {
    "label": "SetPatchConstantFunctionForHS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPatchConstantFunctionForHS(llvm::Function *hullShaderFunc,\n                                     llvm::Function *patchConstantFunc)"
  },
  {
    "label": "StripRootSignatureFromMetadata()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StripRootSignatureFromMetadata()"
  },
  {
    "label": "StripSubobjectsFromMetadata()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StripSubobjectsFromMetadata()"
  },
  {
    "label": "UpdateValidatorVersionMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateValidatorVersionMetadata()"
  },
  {
    "label": "EmitLLVMUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLLVMUsed()"
  },
  {
    "label": "ClearLLVMUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLLVMUsed()"
  },
  {
    "label": "ClearDxilMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDxilMetadata(llvm::Module &M)"
  },
  {
    "label": "EmitDxilMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilMetadata()"
  },
  {
    "label": "ReEmitDxilResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReEmitDxilResources()"
  },
  {
    "label": "LoadDxilMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilMetadata()"
  },
  {
    "label": "HasMetadataErrors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMetadataErrors()"
  },
  {
    "label": "EmitDxilCounters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitDxilCounters()"
  },
  {
    "label": "IsKnownNamedMetaData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKnownNamedMetaData(llvm::NamedMDNode &Node)"
  },
  {
    "label": "ResetEntrySignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEntrySignature(DxilEntrySignature *pValue)"
  },
  {
    "label": "ResetSerializedRootSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSerializedRootSignature(std::vector<uint8_t> &Value)"
  },
  {
    "label": "ResetTypeSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTypeSystem(DxilTypeSystem *pValue)"
  },
  {
    "label": "ResetOP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetOP(hlsl::OP *hlslOP)"
  },
  {
    "label": "ResetEntryPropsMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEntryPropsMap(DxilEntryPropsMap &&PropMap)"
  },
  {
    "label": "StripReflection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StripReflection()"
  },
  {
    "label": "StripDebugRelatedCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripDebugRelatedCode()"
  },
  {
    "label": "RemoveUnusedTypeAnnotations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedTypeAnnotations()"
  },
  {
    "label": "RestoreResourceReflection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreResourceReflection(const DxilModule &SourceDM)"
  },
  {
    "label": "StripShaderSourcesAndCompileOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StripShaderSourcesAndCompileOptions(bool bReplaceWithDummyData = false)"
  },
  {
    "label": "HasPreciseFastMathFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPreciseFastMathFlags(const llvm::Instruction *inst)"
  },
  {
    "label": "SetPreciseFastMathFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreciseFastMathFlags(llvm::Instruction *inst)"
  },
  {
    "label": "PreservesFastMathFlags()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PreservesFastMathFlags(const llvm::Instruction *inst)"
  },
  {
    "label": "CollectShaderFlagsForModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectShaderFlagsForModule(ShaderFlags &Flags)"
  },
  {
    "label": "ModuleHasMulticomponentUAVLoads()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModuleHasMulticomponentUAVLoads()"
  },
  {
    "label": "SetNumThreads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumThreads(unsigned x, unsigned y, unsigned z)"
  },
  {
    "label": "SetInputPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInputPrimitive(DXIL::InputPrimitive IP)"
  },
  {
    "label": "SetMaxVertexCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxVertexCount(unsigned Count)"
  },
  {
    "label": "SetStreamPrimitiveTopology()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStreamPrimitiveTopology(DXIL::PrimitiveTopology Topology)"
  },
  {
    "label": "SetGSInstanceCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGSInstanceCount(unsigned Count)"
  },
  {
    "label": "SetStreamActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStreamActive(unsigned Stream, bool bActive)"
  },
  {
    "label": "SetActiveStreamMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveStreamMask(unsigned Mask)"
  },
  {
    "label": "SetDisableOptimization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisableOptimization(bool disableOptimization)"
  },
  {
    "label": "SetAllResourcesBound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllResourcesBound(bool resourcesBound)"
  },
  {
    "label": "SetResMayAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResMayAlias(bool resMayAlias)"
  },
  {
    "label": "SetLegacyResourceReservation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLegacyResourceReservation(bool legacyResourceReservation)"
  },
  {
    "label": "ClearIntermediateOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearIntermediateOptions()"
  },
  {
    "label": "SetInputControlPointCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInputControlPointCount(unsigned NumICPs)"
  },
  {
    "label": "SetTessellatorDomain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTessellatorDomain(DXIL::TessellatorDomain TessDomain)"
  },
  {
    "label": "SetOutputControlPointCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutputControlPointCount(unsigned NumOCPs)"
  },
  {
    "label": "SetTessellatorPartitioning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTessellatorPartitioning(DXIL::TessellatorPartitioning TessPartitioning)"
  },
  {
    "label": "SetTessellatorOutputPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTessellatorOutputPrimitive(\n      DXIL::TessellatorOutputPrimitive TessOutputPrimitive)"
  },
  {
    "label": "SetMaxTessellationFactor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxTessellationFactor(float MaxTessellationFactor)"
  },
  {
    "label": "SetMaxOutputVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxOutputVertices(unsigned NumOVs)"
  },
  {
    "label": "SetMaxOutputPrimitives()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxOutputPrimitives(unsigned NumOPs)"
  },
  {
    "label": "SetMeshOutputTopology()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshOutputTopology(DXIL::MeshOutputTopology MeshOutputTopology)"
  },
  {
    "label": "SetPayloadSizeInBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPayloadSizeInBytes(unsigned Size)"
  },
  {
    "label": "SetAutoBindingSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoBindingSpace(uint32_t Space)"
  },
  {
    "label": "SetShaderProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderProperties(DxilFunctionProps *props)"
  },
  {
    "label": "ResetSubobjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSubobjects(DxilSubobjects *subobjects)"
  },
  {
    "label": "LoadDxilResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilResources(const llvm::MDOperand &MDO)"
  },
  {
    "label": "AddResource()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "AddResource(std::vector<std::unique_ptr<T>> &Vec,\n                       std::unique_ptr<T> pRes)"
  },
  {
    "label": "LoadDxilSignature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadDxilSignature(const llvm::MDTuple *pSigTuple, DxilSignature &Sig,\n                         bool bInput)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Merge(ShaderCompatInfo &other)"
  },
  {
    "label": "ComputeShaderCompatInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeShaderCompatInfo()"
  },
  {
    "label": "UpdateFunctionToShaderCompat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFunctionToShaderCompat(const llvm::Function *dxilFunc)"
  }
]