[
  {
    "label": "TMathUtilConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMathUtilConstants"
  },
  {
    "label": "TMathUtilConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMathUtilConstants"
  },
  {
    "label": "TMathUtilConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMathUtilConstants"
  },
  {
    "label": "TMathUtilConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMathUtilConstants"
  },
  {
    "label": "TMathUtilConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMathUtilConstants"
  },
  {
    "label": "TMathUtil",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMathUtil"
  },
  {
    "label": "IsNaN()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNaN(const RealType Value)"
  },
  {
    "label": "IsFinite()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFinite(const RealType Value)"
  },
  {
    "label": "Abs()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Abs(const RealType Value)"
  },
  {
    "label": "Clamp()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Clamp(const RealType Value, const RealType ClampMin, const RealType ClampMax)"
  },
  {
    "label": "Sign()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Sign(const RealType Value)"
  },
  {
    "label": "SignAsInt()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SignAsInt(const RealType Value)"
  },
  {
    "label": "SignNonZero()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "SignNonZero(const RealType Value)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Max(const RealType A, const RealType B)"
  },
  {
    "label": "Max3()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Max3(const RealType A, const RealType B, const RealType C)"
  },
  {
    "label": "Max3Index()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Max3Index(const RealType A, const RealType B, const RealType C)"
  },
  {
    "label": "Min()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Min(const RealType A, const RealType B)"
  },
  {
    "label": "Min3()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Min3(const RealType A, const RealType B, const RealType C)"
  },
  {
    "label": "Min3Index()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Min3Index(const RealType A, const RealType B, const RealType C)"
  },
  {
    "label": "MinMax()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MinMax(RealType A, RealType B, RealType C, RealType& MinOut, RealType& MaxOut)"
  },
  {
    "label": "Sqrt()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Sqrt(const RealType Value)"
  },
  {
    "label": "Cbrt()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Cbrt(const RealType Value)"
  },
  {
    "label": "Tan()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Tan(const RealType Value)"
  },
  {
    "label": "Atan2()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Atan2(const RealType ValueY, const RealType ValueX)"
  },
  {
    "label": "Sin()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Sin(const RealType Value)"
  },
  {
    "label": "Cos()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Cos(const RealType Value)"
  },
  {
    "label": "ACos()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "ACos(const RealType Value)"
  },
  {
    "label": "Floor()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Floor(const RealType Value)"
  },
  {
    "label": "Ceil()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Ceil(const RealType Value)"
  },
  {
    "label": "Round()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Round(const RealType Value)"
  },
  {
    "label": "Pow()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Pow(const RealType Value, const RealType Power)"
  },
  {
    "label": "Exp()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Exp(const RealType Power)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Log(const RealType Value)"
  },
  {
    "label": "Lerp()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Lerp(const RealType A, const RealType B, RealType Alpha)"
  },
  {
    "label": "Atan2Positive()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "Atan2Positive(const RealType Y, const RealType X)"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sqrt(Value)"
  },
  {
    "label": "cbrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cbrt(Value)"
  },
  {
    "label": "tan()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "tan(Value)"
  },
  {
    "label": "atan2()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "atan2(ValueY, ValueX)"
  },
  {
    "label": "sin()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sin(Value)"
  },
  {
    "label": "cos()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cos(Value)"
  },
  {
    "label": "acos()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "acos(Value)"
  },
  {
    "label": "floor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "floor(Value)"
  },
  {
    "label": "ceil()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ceil(Value)"
  },
  {
    "label": "round()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "round(Value)"
  },
  {
    "label": "pow()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "pow(Value, Power)"
  },
  {
    "label": "exp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "exp(Power)"
  },
  {
    "label": "log()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "log(Power)"
  }
]