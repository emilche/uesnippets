[
  {
    "label": "SingleThreadTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SingleThreadTaskRunner"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Controller",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Controller"
  },
  {
    "label": "FileDescriptorWatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileDescriptorWatcher"
  },
  {
    "label": "Watcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Watcher"
  },
  {
    "label": "StartWatching()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartWatching()"
  },
  {
    "label": "RunCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunCallback()"
  },
  {
    "label": "FileDescriptorWatcher()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FileDescriptorWatcher(\n      scoped_refptr<SingleThreadTaskRunner> io_thread_task_runner)"
  },
  {
    "label": "WatchReadable()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Controller>)",
    "insertText": "WatchReadable(\n      int fd,\n      const RepeatingClosure& callback)"
  },
  {
    "label": "WatchWritable()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Controller>)",
    "insertText": "WatchWritable(\n      int fd,\n      const RepeatingClosure& callback)"
  },
  {
    "label": "DCHECK_IS_ON()",
    "kind": "Method",
    "detail": "Function (if)",
    "insertText": "DCHECK_IS_ON()"
  }
]