[
  {
    "label": "MOVIESCENETOOLS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENETOOLS_API"
  },
  {
    "label": "FMovieSceneExportSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportSectionData"
  },
  {
    "label": "FMovieSceneExportCinematicSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportCinematicSectionData"
  },
  {
    "label": "FMovieSceneExportAudioSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportAudioSectionData"
  },
  {
    "label": "FMovieSceneExportCinematicTrackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportCinematicTrackData"
  },
  {
    "label": "FMovieSceneExportAudioTrackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportAudioTrackData"
  },
  {
    "label": "FMovieSceneExportTrackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportTrackData"
  },
  {
    "label": "FMovieSceneExportAudioData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportAudioData"
  },
  {
    "label": "FMovieSceneExportCinematicData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportCinematicData"
  },
  {
    "label": "FMovieSceneExportMovieSceneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneExportMovieSceneData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneImportCinematicSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportCinematicSectionData"
  },
  {
    "label": "FMovieSceneImportAudioSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportAudioSectionData"
  },
  {
    "label": "FMovieSceneImportCinematicTrackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportCinematicTrackData"
  },
  {
    "label": "FMovieSceneImportAudioTrackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportAudioTrackData"
  },
  {
    "label": "FMovieSceneImportTrackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportTrackData"
  },
  {
    "label": "FMovieSceneImportAudioData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportAudioData"
  },
  {
    "label": "FMovieSceneImportCinematicData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportCinematicData"
  },
  {
    "label": "FMovieSceneImportMovieSceneData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneImportMovieSceneData"
  },
  {
    "label": "FMovieSceneImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneImportData"
  },
  {
    "label": "FMovieSceneTranslatorContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Misc / FileHelper . h \" # include \" Misc / Paths . h \" # include \" Modules / ModuleManager . h \" # include \" MovieScene . h \" # include \" Tracks / MovieSceneAudioTrack . h \" # include \" Sections / MovieSceneAudioSection . h \" # include \" Tracks / MovieSceneCinematicShotTrack . h \" # include \" Sections / MovieSceneCinematicShotSection . h \" # include \" Logging / TokenizedMessage . h \" # include \" UObject / MetaData . h \" # include \" Sound / SoundBase . h \" # include \" MovieSceneExportMetadata . h \" class FMovieSceneTranslatorContext : public TSharedFromThis<FMovieSceneTranslatorContext> { public :)",
    "insertText": "FMovieSceneTranslatorContext()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init()"
  },
  {
    "label": "AddMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMessage(EMessageSeverity::Type MessageSeverity, FText ErrorMessage)"
  },
  {
    "label": "ClearMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMessages()"
  },
  {
    "label": "ContainsMessageType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsMessageType(EMessageSeverity::Type InSeverity)"
  },
  {
    "label": "GetMessages()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<FTokenizedMessage>>&)",
    "insertText": "GetMessages()"
  },
  {
    "label": "FMovieSceneExportData()",
    "kind": "Method",
    "detail": "Function (private : TArray<TSharedRef<FTokenizedMessage>> Messages ; } ; struct FMovieSceneExportSectionData { const UMovieSceneSection* MovieSceneSection ; int32 RowIndex ; FString DisplayName ; FString SourceFilename ; FString SourceFilePath ; FFrameNumber StartFrame ; FFrameNumber EndFrame ; bool bWithinPlaybackRange ; bool bEnabled ; } ; struct FMovieSceneExportCinematicSectionData : public FMovieSceneExportSectionData { } ; struct FMovieSceneExportAudioSectionData : public FMovieSceneExportSectionData { int32 NumChannels ; int32 Depth ; int32 SampleRate ; } ; struct FMovieSceneExportCinematicTrackData { int32 RowIndex ; TArray<TSharedPtr<FMovieSceneExportCinematicSectionData>> CinematicSections ; } ; struct FMovieSceneExportAudioTrackData { int32 SampleRate ; int32 RowIndex ; TArray<TSharedPtr<FMovieSceneExportAudioSectionData>> AudioSections ; } ; struct FMovieSceneExportTrackData { const UMovieSceneTrack* MovieSceneTrack ; } ; struct FMovieSceneExportAudioData : public FMovieSceneExportTrackData { int32 SampleRate ; TArray<TSharedPtr<FMovieSceneExportAudioSectionData>> AudioSections ; TArray<TSharedPtr<FMovieSceneExportAudioTrackData>> AudioTracks ; } ; struct FMovieSceneExportCinematicData : public FMovieSceneExportTrackData { TArray<TSharedPtr<FMovieSceneExportCinematicSectionData>> CinematicSections ; TArray<TSharedPtr<FMovieSceneExportCinematicTrackData>> CinematicTracks ; } ; struct FMovieSceneExportMovieSceneData { FString Name ; FString Path ; FFrameRate TickResolution ; int32 Duration ; FFrameNumber PlaybackRangeStartFrame ; FFrameNumber PlaybackRangeEndFrame ; TSharedPtr<FMovieSceneExportCinematicData> CinematicData ; TArray<TSharedPtr<FMovieSceneExportAudioData>> AudioData ; FString MovieExtension ; } ; enum class EMovieSceneTranslatorSectionType : int32 { Cinematic = 0,Audio = 1 } ; class FMovieSceneExportData : public TSharedFromThis<FMovieSceneExportData> { public :)",
    "insertText": "FMovieSceneExportData(const UMovieScene* InMovieScene, FFrameRate InFrameRate, uint32 InResX, uint32 InResY, int32 InHandleFrames, FString InSaveFilename, TSharedPtr<FMovieSceneTranslatorContext> InContext, FString InMovieExtension)"
  },
  {
    "label": "FMovieSceneExportData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneExportData()"
  },
  {
    "label": "GetFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilename()"
  },
  {
    "label": "GetFilenamePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilenamePath()"
  },
  {
    "label": "GetMovieExtension()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMovieExtension()"
  },
  {
    "label": "GetFrameRate()",
    "kind": "Method",
    "detail": "Function (FFrameRate)",
    "insertText": "GetFrameRate()"
  },
  {
    "label": "GetResX()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetResX()"
  },
  {
    "label": "GetResY()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetResY()"
  },
  {
    "label": "GetFrameRateIsNTSC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFrameRateIsNTSC()"
  },
  {
    "label": "GetNearestWholeFrameRate()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNearestWholeFrameRate()"
  },
  {
    "label": "GetHandleFrames()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetHandleFrames()"
  },
  {
    "label": "GetDefaultAudioSampleRate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDefaultAudioSampleRate()"
  },
  {
    "label": "GetDefaultAudioDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDefaultAudioDepth()"
  },
  {
    "label": "IsExportDataValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExportDataValid()"
  },
  {
    "label": "FindAudioSections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindAudioSections(const FString& InSoundPathName, TArray<TSharedPtr<FMovieSceneExportAudioSectionData>>& OutFoundSections)"
  },
  {
    "label": "ConstructData()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ConstructData(const UMovieScene* InMovieScene)"
  },
  {
    "label": "ConstructMovieSceneData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructMovieSceneData(const UMovieScene* InMovieScene)"
  },
  {
    "label": "ConstructCinematicData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructCinematicData(const UMovieScene* InMovieScene, const UMovieSceneCinematicShotTrack* InCinematicTrack)"
  },
  {
    "label": "ConstructCinematicTrackData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructCinematicTrackData(const UMovieScene* InMovieScene, TSharedPtr<FMovieSceneExportCinematicData> InCinematicData, int32 InRowIndex)"
  },
  {
    "label": "ConstructAudioData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructAudioData(const UMovieScene* InMovieScene, const UMovieSceneAudioTrack* InAudioTrack, TMap<int32, TSharedPtr<FMovieSceneExportAudioData>>& InAudioDataMap)"
  },
  {
    "label": "ConstructAudioData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructAudioData(const UMovieScene* InMovieScene, TSharedPtr<FMovieSceneExportAudioData> InAudioData, int32 InRowIndex)"
  },
  {
    "label": "ConstructCinematicSectionData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructCinematicSectionData(const UMovieScene* InMovieScene, TSharedPtr<FMovieSceneExportCinematicData> InCinematicData, const UMovieSceneCinematicShotSection* InCinematicSection)"
  },
  {
    "label": "ConstructAudioSectionData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructAudioSectionData(const UMovieScene* InMovieScene, TSharedPtr<FMovieSceneExportAudioData> InAudioData, const UMovieSceneAudioSection* InAudioSection)"
  },
  {
    "label": "ConstructSectionData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructSectionData(const UMovieScene* InMovieScene, TSharedPtr<FMovieSceneExportSectionData> InSectionData, const UMovieSceneSection* InSection, EMovieSceneTranslatorSectionType InSectionType, const FString& InSectionDisplayName)"
  },
  {
    "label": "FMovieSceneImportData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneTranslatorContext> ExportContext ; public : TSharedPtr<FMovieSceneExportMovieSceneData> MovieSceneData ; private : FFrameRate FrameRate ; uint32 ResX ; uint32 ResY ; int32 HandleFrames ; FString SaveFilename ; FString SaveFilenamePath ; bool bExportDataIsValid ; int32 DefaultAudioSampleRate ; int32 DefaultAudioDepth ; FString MovieExtension ; TMap<FString,int32> DuplicateShotNameCounts ; } ; struct FMovieSceneImportCinematicSectionData { UMovieSceneCinematicShotSection* CinematicSection ; } ; struct FMovieSceneImportAudioSectionData { UMovieSceneAudioSection* AudioSection ; FString SourceFilename ; FString SourceFilePath ; } ; struct FMovieSceneImportCinematicTrackData { int32 RowIndex ; TArray<TSharedPtr<FMovieSceneImportCinematicSectionData>> CinematicSections ; } ; struct FMovieSceneImportAudioTrackData { int32 RowIndex ; TArray<TSharedPtr<FMovieSceneImportAudioSectionData>> AudioSections ; } ; struct FMovieSceneImportTrackData { UMovieSceneTrack* MovieSceneTrack ; } ; struct FMovieSceneImportAudioData : public FMovieSceneImportTrackData { TArray<TSharedPtr<FMovieSceneImportAudioSectionData>> AudioSections ; TArray<TSharedPtr<FMovieSceneImportAudioTrackData>> AudioTracks ; int32 MaxRowIndex ; } ; struct FMovieSceneImportCinematicData : public FMovieSceneImportTrackData { TArray<TSharedPtr<FMovieSceneImportCinematicSectionData>> CinematicSections ; TArray<TSharedPtr<FMovieSceneImportCinematicTrackData>> CinematicTracks ; } ; struct FMovieSceneImportMovieSceneData { UMovieScene* MovieScene ; TSharedPtr<FMovieSceneImportCinematicData> CinematicData ; TArray<TSharedPtr<FMovieSceneImportAudioData>> AudioData ; } ; class FMovieSceneImportData : public TSharedFromThis<FMovieSceneImportData> { public :)",
    "insertText": "FMovieSceneImportData(UMovieScene* InMovieScene, TSharedPtr<FMovieSceneTranslatorContext> InContext)"
  },
  {
    "label": "FMovieSceneImportData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneImportData()"
  },
  {
    "label": "IsImportDataValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImportDataValid()"
  },
  {
    "label": "GetCinematicData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportCinematicData>)",
    "insertText": "GetCinematicData(bool CreateTrackIfNull)"
  },
  {
    "label": "FindCinematicSection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportCinematicSectionData>)",
    "insertText": "FindCinematicSection(const FString& InSectionPathName)"
  },
  {
    "label": "CreateCinematicSection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportCinematicSectionData>)",
    "insertText": "CreateCinematicSection(FString InName, int32 InRow, FFrameRate InFrameRate, FFrameNumber InStartFrame, FFrameNumber InEndFrame, FFrameNumber InStartOffsetFrame)"
  },
  {
    "label": "SetCinematicSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCinematicSection(TSharedPtr<FMovieSceneImportCinematicSectionData> InSection, int32 InRow, FFrameRate InFrameRate, FFrameNumber InStartFrame, FFrameNumber InEndFrame, TOptional<FFrameNumber> InStartOffsetFrame)"
  },
  {
    "label": "GetAudioData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportAudioData>)",
    "insertText": "GetAudioData()"
  },
  {
    "label": "FindAudioSection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportAudioSectionData>)",
    "insertText": "FindAudioSection(const FString& InSectionPathName, TSharedPtr<FMovieSceneImportAudioData>& OutAudioData)"
  },
  {
    "label": "CreateAudioSection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportAudioSectionData>)",
    "insertText": "CreateAudioSection(FString InFilenameOrAssetPathName, bool bIsPathName, TSharedPtr<FMovieSceneImportAudioData> InAudioData, int32 InRow, FFrameRate InFrameRate, FFrameNumber InStartFrame, FFrameNumber InEndFrame, FFrameNumber InStartOffsetFrame)"
  },
  {
    "label": "SetAudioSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAudioSection(TSharedPtr<FMovieSceneImportAudioSectionData> InSection, int32 InRow, FFrameRate InFrameRate, FFrameNumber InStartFrame, FFrameNumber InEndFrame, FFrameNumber InStartOffsetFrame)"
  },
  {
    "label": "MoveAudioSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveAudioSection(TSharedPtr<FMovieSceneImportAudioSectionData> InAudioSectionData, TSharedPtr<FMovieSceneImportAudioData> InFromAudioData, TSharedPtr<FMovieSceneImportAudioData> InToAudioData, int32 InToRowIndex)"
  },
  {
    "label": "ConstructMovieSceneData()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FMovieSceneImportMovieSceneData>)",
    "insertText": "ConstructMovieSceneData(UMovieScene* InMovieScene)"
  },
  {
    "label": "ConstructCinematicData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportCinematicData>)",
    "insertText": "ConstructCinematicData(UMovieSceneCinematicShotTrack* InCinematicTrack)"
  },
  {
    "label": "ConstructCinematicTrackData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportCinematicTrackData>)",
    "insertText": "ConstructCinematicTrackData(UMovieSceneCinematicShotTrack* InCinematicTrack, int32 InRowIndex)"
  },
  {
    "label": "ConstructAudioData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportAudioData>)",
    "insertText": "ConstructAudioData(UMovieSceneAudioTrack* InAudioTrack)"
  },
  {
    "label": "ConstructAudioTrackData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportAudioTrackData>)",
    "insertText": "ConstructAudioTrackData(UMovieSceneAudioTrack* InAudioTrack, int32 InRowIndex)"
  },
  {
    "label": "ConstructCinematicSectionData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportCinematicSectionData>)",
    "insertText": "ConstructCinematicSectionData(UMovieSceneCinematicShotSection* InCinematicSection)"
  },
  {
    "label": "ConstructAudioSectionData()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneImportAudioSectionData>)",
    "insertText": "ConstructAudioSectionData(UMovieSceneAudioSection* InAudioSection)"
  },
  {
    "label": "FMovieSceneTranslator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FMovieSceneTranslatorContext> ImportContext ; public : TSharedPtr<FMovieSceneImportMovieSceneData> MovieSceneData ; } ; class FMovieSceneTranslator { public :)",
    "insertText": "FMovieSceneTranslator()"
  },
  {
    "label": "GetMessageLogWindowTitle()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetMessageLogWindowTitle()"
  },
  {
    "label": "GetMessageLogLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMessageLogLabel()"
  },
  {
    "label": "FMovieSceneImporter()",
    "kind": "Method",
    "detail": "Function (} ; class FMovieSceneImporter : public FMovieSceneTranslator { public :)",
    "insertText": "FMovieSceneImporter() : FMovieSceneTranslator()"
  },
  {
    "label": "FMovieSceneImporter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMovieSceneImporter()"
  },
  {
    "label": "GetFileTypeDescription()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetFileTypeDescription()"
  },
  {
    "label": "GetDialogTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDialogTitle()"
  },
  {
    "label": "GetTransactionDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTransactionDescription()"
  },
  {
    "label": "Import()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Import(UMovieScene* InMovieScene, FFrameRate InFrameRate, FString InFilename, TSharedRef<FMovieSceneTranslatorContext> InContext)"
  },
  {
    "label": "FMovieSceneExporter()",
    "kind": "Method",
    "detail": "Function (} ; class FMovieSceneExporter : public FMovieSceneTranslator { public :)",
    "insertText": "FMovieSceneExporter() : FMovieSceneTranslator()"
  },
  {
    "label": "FMovieSceneExporter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMovieSceneExporter()"
  },
  {
    "label": "GetDefaultFileExtension()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultFileExtension()"
  },
  {
    "label": "GetNotificationExportFinished()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNotificationExportFinished()"
  },
  {
    "label": "GetNotificationHyperlinkText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNotificationHyperlinkText()"
  },
  {
    "label": "Export()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Export(const UMovieScene* InMovieScene, FString InFilenameFormat, FFrameRate InFrameRate, uint32 InResX, uint32 InResY, int32 InHandleFrames, FString InSaveFilename, TSharedRef<FMovieSceneTranslatorContext> InContext, FString InMovieExtension, const FMovieSceneExportMetadata* InMetadata=nullptr)"
  }
]