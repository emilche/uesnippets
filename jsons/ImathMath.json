[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Math",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Math"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMATHMATH_H # define INCLUDED_IMATHMATH_H # include \" ImathNamespace . h \" # include \" ImathPlatform . h \" # include<cmath> # include<limits> IMATH_INTERNAL_NAMESPACE_HEADER_ENTER template<class T> struct Math {)",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T acos (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T asin (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T atan (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T atan2 (T x, T y)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T cos (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T sin (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T tan (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T cosh (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T sinh (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T tanh (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T exp (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T log (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T log10 (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T modf (T x, T* iptr)"
  },
  {
    "label": "rval()",
    "kind": "Method",
    "detail": "Function (T ival ; T)",
    "insertText": "rval(std::modf (T (x), &ival))"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (* iptr = ival ; return rval ; })",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T pow (T x, T y)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T sqrt (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T ceil (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T fabs (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T floor (T x)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T fmod (T x, T y)"
  },
  {
    "label": "IMATH_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMATH_DEPRECATED(\"use std::math functions\") IMATH_HOSTDEVICE static T hypot (T x, T y)"
  },
  {
    "label": "sinx_over_x()",
    "kind": "Method",
    "detail": "Function (} } ; template<class T> IMATH_HOSTDEVICE T)",
    "insertText": "sinx_over_x(T x)"
  },
  {
    "label": "equalWithAbsError()",
    "kind": "Method",
    "detail": "Function (} template<class T> IMATH_HOSTDEVICE IMATH_CONSTEXPR14 bool)",
    "insertText": "equalWithAbsError(T x1, T x2, T e)"
  },
  {
    "label": "equalWithRelError()",
    "kind": "Method",
    "detail": "Function (} template<class T> IMATH_HOSTDEVICE IMATH_CONSTEXPR14 bool)",
    "insertText": "equalWithRelError(T x1, T x2, T e)"
  }
]