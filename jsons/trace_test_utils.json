[
  {
    "label": "PerfettoPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PerfettoPlatform"
  },
  {
    "label": "TracingEnvironment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TracingEnvironment"
  },
  {
    "label": "TracingEnvironment()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_TRACE_TEST_UTILS_H_ # define BASE_TEST_TRACE_TEST_UTILS_H_ # include \" base / memory / raw_ptr . h \" # include \" base / task / thread_pool . h \" # include \" base / test / task_environment . h \" # include \" base / trace_event / trace_log . h \" # include \" third_party / perfetto / protos / perfetto / config / trace_config . gen . h \" namespace base { namespace tracing { class PerfettoPlatform ; } namespace test { class TracingEnvironment { public :)",
    "insertText": "TracingEnvironment()"
  },
  {
    "label": "TracingEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TracingEnvironment(TaskEnvironment&, scoped_refptr<SequencedTaskRunner> = ThreadPool::CreateSequencedTaskRunner({}), base::tracing::PerfettoPlatform* = nullptr)"
  },
  {
    "label": "GetDefaultTraceConfig()",
    "kind": "Method",
    "detail": "Function (perfetto::protos::gen::TraceConfig)",
    "insertText": "GetDefaultTraceConfig()"
  }
]