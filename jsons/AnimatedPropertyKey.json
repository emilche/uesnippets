[
  {
    "label": "FAnimatedPropertyKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimatedPropertyKey"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / UnrealType . h \" # include \" Templates / SubclassOfField . h \" struct FAnimatedPropertyKey { FName PropertyTypeName ; FName ObjectTypeName ; uint32)",
    "insertText": "GetTypeHash(FAnimatedPropertyKey InKey)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FAnimatedPropertyKey A, FAnimatedPropertyKey B)"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (FAnimatedPropertyKey Definition ; Definition . PropertyTypeName = Property ->)",
    "insertText": "GetClass()->GetFName()"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (Definition . ObjectTypeName = StructProperty -> Struct ->)",
    "insertText": "GetFName()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(const FObjectPropertyBase* ObjectProperty = CastField<const FObjectPropertyBase>(Property))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } else)",
    "insertText": "if(const FArrayProperty* ArrayProperty = CastField<const FArrayProperty>(Property))"
  },
  {
    "label": "FromObjectType()",
    "kind": "Method",
    "detail": "Function (} } return Definition ; } FAnimatedPropertyKey)",
    "insertText": "FromObjectType(const UClass* Class)"
  },
  {
    "label": "FromStructType()",
    "kind": "Method",
    "detail": "Function (} FAnimatedPropertyKey)",
    "insertText": "FromStructType(FName StructName)"
  },
  {
    "label": "FromPropertyTypeName()",
    "kind": "Method",
    "detail": "Function (FAnimatedPropertyKey Definition ; Definition . PropertyTypeName = NAME_StructProperty ; Definition . ObjectTypeName = StructName ; return Definition ; } FAnimatedPropertyKey)",
    "insertText": "FromPropertyTypeName(FName PropertyTypeName)"
  },
  {
    "label": "FromPropertyType()",
    "kind": "Method",
    "detail": "Function (FAnimatedPropertyKey Definition ; Definition . PropertyTypeName = PropertyTypeName ; return Definition ; } FAnimatedPropertyKey)",
    "insertText": "FromPropertyType(TSubclassOfField<FProperty> PropertyType)"
  }
]