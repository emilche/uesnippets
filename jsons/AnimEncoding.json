[
  {
    "label": "FMemoryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryWriter"
  },
  {
    "label": "BoneTrackPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BoneTrackPair"
  },
  {
    "label": "FMemoryWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryWriter"
  },
  {
    "label": "FMemoryReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryReader"
  },
  {
    "label": "AnimEncoding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnimEncoding"
  },
  {
    "label": "serves",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "serves"
  },
  {
    "label": "AnimEncodingLegacyBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnimEncodingLegacyBase"
  },
  {
    "label": "AnimationFormat_GetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnimationFormat_GetStats(const FUECompressedAnimData& CompressedData, \n  \t\t\t\t\t\t\t\tint32& NumTransTracks,\n\t\t\t\t\t\t\t\tint32& NumRotTracks,\n\t\t\t\t\t\t\t\tint32& NumScaleTracks,\n  \t\t\t\t\t\t\t\tint32& TotalNumTransKeys,\n\t\t\t\t\t\t\t\tint32& TotalNumRotKeys,\n\t\t\t\t\t\t\t\tint32& TotalNumScaleKeys,\n\t\t\t\t\t\t\t\tfloat& TranslationKeySize,\n\t\t\t\t\t\t\t\tfloat& RotationKeySize,\n\t\t\t\t\t\t\t\tfloat& ScaleKeySize,\n\t\t\t\t\t\t\t\tint32& OverheadSize,\n\t\t\t\t\t\t\t\tint32& NumTransTracksWithOneKey,\n\t\t\t\t\t\t\t\tint32& NumRotTracksWithOneKey,\n\t\t\t\t\t\t\t\tint32& NumScaleTracksWithOneKey)"
  },
  {
    "label": "AnimationFormat_SetInterfaceLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnimationFormat_SetInterfaceLinks(CompressedDataType& CompressedData)"
  },
  {
    "label": "PadMemoryWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PadMemoryWriter(FMemoryWriter* MemoryWriter, uint8*& TrackData, const int32 Alignment)"
  },
  {
    "label": "PadMemoryReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PadMemoryReader(FMemoryReader* MemoryReader, uint8*& TrackData, const int32 Alignment)"
  },
  {
    "label": "TimeToIndex()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "TimeToIndex(\n\t\tfloat SequenceLength,\n\t\tfloat RelativePos,\n\t\tint32 NumKeys,\n\t\tEAnimInterpolationType Interpolation,\n\t\tint32 &PosIndex0Out,\n\t\tint32 &PosIndex1Out)"
  },
  {
    "label": "TimeToIndex()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "TimeToIndex(\n\t\tEAnimInterpolationType Interpolation,\n\t\tint32 NumberOfFrames,\n\t\tconst uint8* FrameTable,\n\t\tfloat RelativePos,\n\t\tint32 NumKeys,\n\t\tint32 &PosIndex0Out,\n\t\tint32 &PosIndex1Out)"
  }
]