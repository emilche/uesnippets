[
  {
    "label": "FRDGExternalAccessQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGExternalAccessQueue"
  },
  {
    "label": "FVTPhysicalSpaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTPhysicalSpaceDescription"
  },
  {
    "label": "FVTPhysicalSpaceDescriptionExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTPhysicalSpaceDescriptionExt"
  },
  {
    "label": "FVirtualTexturePhysicalSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTexturePhysicalSpace"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / CircularBuffer . h \" # include \" RendererInterface . h \" # include \" TexturePagePool . h \" # include \" VirtualTextureShared . h \" # include \" VirtualTexturing . h \" class FRDGExternalAccessQueue ; struct FVTPhysicalSpaceDescription { uint32 TileSize ; uint8 Dimensions ; uint8 NumLayers ; TEnumAsByte<EPixelFormat> Format [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] ; bool bHasLayerSrgbView [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] ; bool bContinuousUpdate ; } ; bool)",
    "insertText": "operator(const FVTPhysicalSpaceDescription& Lhs, const FVTPhysicalSpaceDescription& Rhs)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FVTPhysicalSpaceDescription& Desc)"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (uint32 Hash = Desc . TileSize ; Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Desc.Dimensions))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Desc.NumLayers))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Desc.bContinuousUpdate))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Desc.Format[Layer]))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Desc.bHasLayerSrgbView[Layer]))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return Hash ; } struct FVTPhysicalSpaceDescriptionExt { int32 TileWidthHeight = 0 ; int32 PoolCount = 1 ; bool bEnableResidencyMipMapBias = false ; } ; bool)",
    "insertText": "operator(const FVTPhysicalSpaceDescriptionExt& Lhs, const FVTPhysicalSpaceDescriptionExt& Rhs)"
  },
  {
    "label": "FVirtualTexturePhysicalSpace()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVirtualTexturePhysicalSpace()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (const FVTPhysicalSpaceDescription&)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetTextureSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTextureSize()"
  },
  {
    "label": "GetPhysicalLocation()",
    "kind": "Method",
    "detail": "Function (} FIntVector)",
    "insertText": "GetPhysicalLocation(uint16 pAddress)"
  },
  {
    "label": "DoesSupport16BitPageTable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "DoesSupport16BitPageTable()"
  },
  {
    "label": "GetTileSizeInBytes()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTileSizeInBytes()"
  },
  {
    "label": "GetSizeInBytes()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeInBytes()"
  },
  {
    "label": "GetPagePool()",
    "kind": "Method",
    "detail": "Function (const FTexturePagePool&)",
    "insertText": "GetPagePool()"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddRef()"
  },
  {
    "label": "GetPhysicalTextureSRV()",
    "kind": "Method",
    "detail": "Function (} FRHIShaderResourceView*)",
    "insertText": "GetPhysicalTextureSRV(int32 Layer, bool bSRGB)"
  },
  {
    "label": "UpdateResidencyTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResidencyTracking(uint32 Frame)"
  },
  {
    "label": "GetResidencyMipMapBias()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetResidencyMipMapBias()"
  },
  {
    "label": "UpdateCsvStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCsvStats()"
  }
]