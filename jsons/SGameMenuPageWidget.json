[
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "FGameMenuPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuPage"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FFocusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFocusEvent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FMenuPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuPanel"
  },
  {
    "label": "FGameMenuPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuPage"
  },
  {
    "label": "class",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "class"
  },
  {
    "label": "FGameMenuItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuItem"
  },
  {
    "label": "FGameMenuItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuItem"
  },
  {
    "label": "FGameMenuItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuItem"
  },
  {
    "label": "FGameMenuItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuItem"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FMenuPanel()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMenuPanel()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float Delta)"
  },
  {
    "label": "ClosePanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClosePanel(TSharedRef<SWidget> OwnerWidget)"
  },
  {
    "label": "OpenPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenPanel(TSharedRef<SWidget> OwnerWidget)"
  },
  {
    "label": "ForcePanelOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePanelOpen()"
  },
  {
    "label": "ForcePanelClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePanelClosed()"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle(const FGameMenuStyle* InStyle)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnMainPanelStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMainPanelStateChange(bool bWasOpened)"
  },
  {
    "label": "OnSubPanelStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubPanelStateChange(bool bWasOpened)"
  },
  {
    "label": "SetupAnimations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAnimations()"
  },
  {
    "label": "EnterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterSubMenu(TSharedPtr<FGameMenuPage> InSubMenu)"
  },
  {
    "label": "MenuGoBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MenuGoBack(bool bIsCancel=false)"
  },
  {
    "label": "ConfirmMenuItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfirmMenuItem()"
  },
  {
    "label": "BuildAndShowMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAndShowMenu(TSharedPtr< FGameMenuPage > InMenu)"
  },
  {
    "label": "HideMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideMenu()"
  },
  {
    "label": "UpdateArrows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateArrows(TSharedPtr<class FGameMenuItem> InMenuItem)"
  },
  {
    "label": "ChangeOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeOption(int32 InMoveBy)"
  },
  {
    "label": "LockControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockControls(bool bEnable)"
  },
  {
    "label": "OpenMainPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenMainPanel(TSharedPtr< FGameMenuPage > InMenu)"
  },
  {
    "label": "SelectItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectItem(int32 InSelection)"
  },
  {
    "label": "ResetMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMenu()"
  },
  {
    "label": "SetCurrentMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentMenu(TSharedPtr< FGameMenuPage > InMenu)"
  },
  {
    "label": "BuildPanelButtons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPanelButtons(TSharedPtr< FGameMenuPage > InPanel, TSharedPtr<SVerticalBox> InBox, int32 InPreviousIndex)"
  },
  {
    "label": "SelectionChanged()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "SelectionChanged(int32 SelectionIndex)"
  },
  {
    "label": "MouseButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "MouseButtonClicked(int32 SelectionIndex)"
  },
  {
    "label": "FadeIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FadeIn()"
  },
  {
    "label": "SetTitleAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTitleAnimation(bool bShowTitle)"
  },
  {
    "label": "OpenPendingSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenPendingSubMenu()"
  }
]