[
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "FGameMenuPage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuPage"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FFocusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFocusEvent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FMenuPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuPanel"
  },
  {
    "label": "GAMEMENUBUILDER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GAMEMENUBUILDER_API"
  },
  {
    "label": "FGameMenuItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameMenuItem"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Math / IntPoint . h \" # include \" Delegates / Delegate . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Layout / Visibility . h \" # include \" Layout / Margin . h \" # include \" Animation / CurveHandle . h \" # include \" Animation / CurveSequence . h \" # include \" Styling / ISlateStyle . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateWidgetStyleAsset . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Engine / GameViewportClient . h \" # include \" GameFramework / PlayerController . h \" # include \" GameMenuWidgetStyle . h \" class UGameViewportClient ; class FGameMenuPage ; class SVerticalBox ; class SWidget ; struct FFocusEvent ; struct FGeometry ; struct FKeyEvent ; struct FPointerEvent ; namespace EPanelState { enum Type { Opening,Open,Closing,Closed } ; } ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FPanelStateChanged, bool)"
  },
  {
    "label": "FMenuPanel()",
    "kind": "Method",
    "detail": "Function (class FMenuPanel { public :)",
    "insertText": "FMenuPanel()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float Delta)"
  },
  {
    "label": "ClosePanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClosePanel(TSharedRef<SWidget> OwnerWidget)"
  },
  {
    "label": "OpenPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenPanel(TSharedRef<SWidget> OwnerWidget)"
  },
  {
    "label": "ForcePanelOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePanelOpen()"
  },
  {
    "label": "ForcePanelClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePanelClosed()"
  },
  {
    "label": "SetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStyle(const FGameMenuStyle* InStyle)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (FPanelStateChanged OnStateChanged ; FCurveHandle AnimationHandle ; EPanelState::Type CurrentState ; private : FCurveSequence AnimationSequence ; } ; class FGameMenuPage ; class SGameMenuPageWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGameMenuPageWidget) : _PCOwner()"
  },
  {
    "label": "SLATE_STYLE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_STYLE_ARGUMENT(FGameMenuStyle, MenuStyle) SLATE_ARGUMENT(TWeakObjectPtr<APlayerController>, PCOwner) SLATE_ARGUMENT(bool, GameMenu) SLATE_END_ARGS() DECLARE_DELEGATE(FOnToggleMenu)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnSelectionChanged, TSharedPtr<class FGameMenuItem>, TSharedPtr<class FGameMenuItem>)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnMainPanelStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMainPanelStateChange(bool bWasOpened)"
  },
  {
    "label": "OnSubPanelStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubPanelStateChange(bool bWasOpened)"
  },
  {
    "label": "SetupAnimations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAnimations()"
  },
  {
    "label": "EnterSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterSubMenu(TSharedPtr<FGameMenuPage> InSubMenu)"
  },
  {
    "label": "MenuGoBack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MenuGoBack(bool bIsCancel=false)"
  },
  {
    "label": "ConfirmMenuItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfirmMenuItem()"
  },
  {
    "label": "BuildAndShowMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAndShowMenu(TSharedPtr< FGameMenuPage > InMenu)"
  },
  {
    "label": "HideMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideMenu()"
  },
  {
    "label": "UpdateArrows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateArrows(TSharedPtr<class FGameMenuItem> InMenuItem)"
  },
  {
    "label": "ChangeOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeOption(int32 InMoveBy)"
  },
  {
    "label": "LockControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockControls(bool bEnable)"
  },
  {
    "label": "OpenMainPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenMainPanel(TSharedPtr< FGameMenuPage > InMenu)"
  },
  {
    "label": "SelectItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectItem(int32 InSelection)"
  },
  {
    "label": "ResetMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMenu()"
  },
  {
    "label": "GetCurrentMenu()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<UGameViewportClient> MyGameViewport ; TSharedPtr<FGameMenuPage>)",
    "insertText": "GetCurrentMenu()"
  },
  {
    "label": "SetCurrentMenu()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetCurrentMenu(TSharedPtr< FGameMenuPage > InMenu)"
  },
  {
    "label": "GetSlateVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSlateVisibility()"
  },
  {
    "label": "GetSubMenuVisiblity()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSubMenuVisiblity()"
  },
  {
    "label": "GetUIScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetUIScale()"
  },
  {
    "label": "BuildPanelButtons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildPanelButtons(TSharedPtr< FGameMenuPage > InPanel, TSharedPtr<SVerticalBox> InBox, int32 InPreviousIndex)"
  },
  {
    "label": "GetPanelsColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetPanelsColor()"
  },
  {
    "label": "GetPanelsBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetPanelsBackgroundColor()"
  },
  {
    "label": "GetMainMenuOffset()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetMainMenuOffset()"
  },
  {
    "label": "GetSubMenuOffset()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetSubMenuOffset()"
  },
  {
    "label": "GetMenuTitleOffset()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetMenuTitleOffset()"
  },
  {
    "label": "GetMenuOffset()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetMenuOffset()"
  },
  {
    "label": "GetMenuItemPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetMenuItemPadding()"
  },
  {
    "label": "GetSubMenuItemPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetSubMenuItemPadding()"
  },
  {
    "label": "GetTitleColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTitleColor()"
  },
  {
    "label": "GetTextColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTextColor()"
  },
  {
    "label": "SelectionChanged()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "SelectionChanged(int32 SelectionIndex)"
  },
  {
    "label": "MouseButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "MouseButtonClicked(int32 SelectionIndex)"
  },
  {
    "label": "GetOptionText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetOptionText(TSharedPtr<class FGameMenuItem> MenuItem)"
  },
  {
    "label": "GetMenuTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMenuTitle()"
  },
  {
    "label": "GetMenuTitleVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetMenuTitleVisibility()"
  },
  {
    "label": "FadeIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FadeIn()"
  },
  {
    "label": "SetTitleAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTitleAnimation(bool bShowTitle)"
  },
  {
    "label": "OpenPendingSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenPendingSubMenu()"
  }
]