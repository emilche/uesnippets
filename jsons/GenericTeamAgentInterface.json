[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FGenericTeamId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericTeamId"
  },
  {
    "label": "EPredefinedId",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPredefinedId"
  },
  {
    "label": "UGenericTeamAgentInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGenericTeamAgentInterface"
  },
  {
    "label": "IGenericTeamAgentInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGenericTeamAgentInterface"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Interface . h \" # include \" GameFramework / Actor . h \" # include \" GenericTeamAgentInterface . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Friendly,Neutral,Hostile,} ; })",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FGenericTeamId()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FGenericTeamId(uint8 InTeamID = NoTeamId) : TeamID(InTeamID)"
  },
  {
    "label": "uint8()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "uint8()"
  },
  {
    "label": "GetAttitude()",
    "kind": "Method",
    "detail": "Function (ETeamAttitude::Type)",
    "insertText": "GetAttitude(const AActor* A, const AActor* B)"
  },
  {
    "label": "GetAttitude()",
    "kind": "Method",
    "detail": "Function (ETeamAttitude::Type)",
    "insertText": "GetAttitude(FGenericTeamId TeamA, FGenericTeamId TeamB)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (} typedef TFunction<)",
    "insertText": "Type(FGenericTeamId, FGenericTeamId)"
  },
  {
    "label": "SetAttitudeSolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAttitudeSolver(const FAttitudeSolverFunction& Solver)"
  },
  {
    "label": "ResetAttitudeSolver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAttitudeSolver()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (protected : FAttitudeSolverFunction AttitudeSolverImpl ; public : const FGenericTeamId NoTeam ; uint32)",
    "insertText": "GetTypeHash(const FGenericTeamId Value)"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_UINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UINTERFACE_BODY()"
  },
  {
    "label": "GENERATED_IINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (class IGenericTeamAgentInterface {)",
    "insertText": "GENERATED_IINTERFACE_BODY() virtual void SetGenericTeamId(const FGenericTeamId& TeamID)"
  },
  {
    "label": "GetGenericTeamId()",
    "kind": "Method",
    "detail": "Function (} FGenericTeamId)",
    "insertText": "GetGenericTeamId()"
  },
  {
    "label": "IGenericTeamAgentInterface()",
    "kind": "Method",
    "detail": "Function (const IGenericTeamAgentInterface* OtherTeamAgent = Cast<const)",
    "insertText": "IGenericTeamAgentInterface(&Other)"
  }
]