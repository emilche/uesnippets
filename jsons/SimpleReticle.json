[
  {
    "label": "FSimpleReticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleReticle"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "FSimpleReticle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FSimpleReticle { public :)",
    "insertText": "FSimpleReticle()"
  },
  {
    "label": "SetupReticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupReticle(8.0f, 20.0f)"
  },
  {
    "label": "SetupReticle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetupReticle(const float Length, const float InnerSize)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (HorizontalOffsetMin .)",
    "insertText": "Set(InnerSize, 0.0f)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (HorizontalOffsetMax .)",
    "insertText": "Set(InnerSize + Length, 0.0f)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (VerticalOffsetMin .)",
    "insertText": "Set(0.0f, InnerSize)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (VerticalOffsetMax .)",
    "insertText": "Set(0.0f, InnerSize + Length)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Draw(class UCanvas* InCanvas, FLinearColor InColor)"
  }
]