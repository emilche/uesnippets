[
  {
    "label": "FD3D12MinimalAdapterDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12MinimalAdapterDesc"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ID3D12DynamicRHI",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12DynamicRHI"
  },
  {
    "label": "GetInterfaceType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" D3D12ThirdParty . h \" # include \" RHI . h \" # include \" Templates / Function . h \" struct FD3D12MinimalAdapterDesc { DXGI_ADAPTER_DESC Desc { } ; uint32 NumDeviceNodes { } ; } ; enum class ED3D12RHIRunOnQueueType { Graphics = 0,Copy,} ; struct ID3D12DynamicRHI : public FDynamicRHI { ERHIInterfaceType)",
    "insertText": "GetInterfaceType()"
  },
  {
    "label": "RHIIsPixEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIIsPixEnabled()"
  },
  {
    "label": "RHIGetCommandQueue()",
    "kind": "Method",
    "detail": "Function (ID3D12CommandQueue*)",
    "insertText": "RHIGetCommandQueue()"
  },
  {
    "label": "RHIGetDevice()",
    "kind": "Method",
    "detail": "Function (ID3D12Device*)",
    "insertText": "RHIGetDevice(uint32 InIndex)"
  },
  {
    "label": "RHIGetDeviceNodeMask()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetDeviceNodeMask(uint32 InIndex)"
  },
  {
    "label": "RHIGetGraphicsCommandList()",
    "kind": "Method",
    "detail": "Function (ID3D12GraphicsCommandList*)",
    "insertText": "RHIGetGraphicsCommandList(FRHICommandListBase& ExecutingCmdList, uint32 InDeviceIndex)"
  },
  {
    "label": "RHIGetSwapChainFormat()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT)",
    "insertText": "RHIGetSwapChainFormat(EPixelFormat InFormat)"
  },
  {
    "label": "RHICreateTexture2DFromResource()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateTexture2DFromResource(EPixelFormat Format, ETextureCreateFlags TexCreateFlags, const FClearValueBinding& ClearValueBinding, ID3D12Resource* Resource)"
  },
  {
    "label": "RHICreateTexture2DArrayFromResource()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateTexture2DArrayFromResource(EPixelFormat Format, ETextureCreateFlags TexCreateFlags, const FClearValueBinding& ClearValueBinding, ID3D12Resource* Resource)"
  },
  {
    "label": "RHICreateTextureCubeFromResource()",
    "kind": "Method",
    "detail": "Function (FTextureRHIRef)",
    "insertText": "RHICreateTextureCubeFromResource(EPixelFormat Format, ETextureCreateFlags TexCreateFlags, const FClearValueBinding& ClearValueBinding, ID3D12Resource* Resource)"
  },
  {
    "label": "RHIGetResource()",
    "kind": "Method",
    "detail": "Function (ID3D12Resource*)",
    "insertText": "RHIGetResource(FRHIBuffer* InBuffer)"
  },
  {
    "label": "RHIGetResourceDeviceIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetResourceDeviceIndex(FRHIBuffer* InBuffer)"
  },
  {
    "label": "RHIGetResourceMemorySize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "RHIGetResourceMemorySize(FRHIBuffer* InBuffer)"
  },
  {
    "label": "RHIIsResourcePlaced()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIIsResourcePlaced(FRHIBuffer* InBuffer)"
  },
  {
    "label": "RHIGetResource()",
    "kind": "Method",
    "detail": "Function (ID3D12Resource*)",
    "insertText": "RHIGetResource(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetResourceDeviceIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RHIGetResourceDeviceIndex(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetResourceMemorySize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "RHIGetResourceMemorySize(FRHITexture* InTexture)"
  },
  {
    "label": "RHIIsResourcePlaced()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RHIIsResourcePlaced(FRHITexture* InTexture)"
  },
  {
    "label": "RHIGetRenderTargetView()",
    "kind": "Method",
    "detail": "Function (D3D12_CPU_DESCRIPTOR_HANDLE)",
    "insertText": "RHIGetRenderTargetView(FRHITexture* InTexture, int32 InMipIndex = 0, int32 InArraySliceIndex = 0)"
  },
  {
    "label": "RHIFinishExternalComputeWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIFinishExternalComputeWork(FRHICommandListBase& ExecutingCmdList, uint32 InDeviceIndex, ID3D12GraphicsCommandList* InCommandList)"
  },
  {
    "label": "RHITransitionResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHITransitionResource(FRHICommandList& RHICmdList, FRHITexture* InTexture, D3D12_RESOURCE_STATES InState, uint32 InSubResource)"
  },
  {
    "label": "RHISignalManualFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHISignalManualFence(FRHICommandList& RHICmdList, ID3D12Fence* Fence, uint64 Value)"
  },
  {
    "label": "RHIWaitManualFence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIWaitManualFence(FRHICommandList& RHICmdList, ID3D12Fence* Fence, uint64 Value)"
  },
  {
    "label": "RHIVerifyResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIVerifyResult(ID3D12Device* Device, HRESULT Result, const ANSICHAR* Code, const ANSICHAR* Filename, uint32 Line, FString Message = FString())"
  },
  {
    "label": "RHIRunOnQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RHIRunOnQueue(ED3D12RHIRunOnQueueType QueueType, TFunction<void(ID3D12CommandQueue*)>&& CodeToRun, bool bWaitForSubmission)"
  },
  {
    "label": "IsRHID3D12()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "IsRHID3D12()"
  },
  {
    "label": "GetID3D12DynamicRHI()",
    "kind": "Method",
    "detail": "Function (} ID3D12DynamicRHI*)",
    "insertText": "GetID3D12DynamicRHI()"
  },
  {
    "label": "GetID3D12PlatformDynamicRHI()",
    "kind": "Method",
    "detail": "Function (} # if D3D12RHI_PLATFORM_HAS_CUSTOM_INTERFACE # include \" ID3D12PlatformDynamicRHI . h \" # else using ID3D12PlatformDynamicRHI = ID3D12DynamicRHI ; ID3D12PlatformDynamicRHI*)",
    "insertText": "GetID3D12PlatformDynamicRHI()"
  }
]