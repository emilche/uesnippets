[
  {
    "label": "FAckSample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAckSample"
  },
  {
    "label": "FSeqSample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSeqSample"
  },
  {
    "label": "FNetworkTrafficAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkTrafficAnalyzer"
  },
  {
    "label": "FNetworkCongestionControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkCongestionControl"
  },
  {
    "label": "FSeqSample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSeqSample"
  },
  {
    "label": "FAckSample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAckSample"
  },
  {
    "label": "FNetworkTrafficAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkTrafficAnalyzer"
  },
  {
    "label": "FNetworkCongestionControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkCongestionControl"
  },
  {
    "label": "FNetworkTrafficAnalyzer()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FNetworkTrafficAnalyzer(FNetworkCongestionControl* InTrafficControlModule)"
  },
  {
    "label": "OnAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAck(const FAckSample& AckSample)"
  },
  {
    "label": "OnSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSend(const FSeqSample& SeqSample)"
  },
  {
    "label": "FNetworkCongestionControl()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FNetworkCongestionControl(double ConfiguredNetSpeed, uint32 MaxPackets)"
  },
  {
    "label": "OnAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAck(const FAckSample& AckSample)"
  },
  {
    "label": "IsReadyToSend()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyToSend(double Timestamp)"
  },
  {
    "label": "OnSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSend(const FSeqSample& SeqSample)"
  },
  {
    "label": "UpdateMinRTT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMinRTT(double Timestamp)"
  }
]