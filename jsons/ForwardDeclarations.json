[
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "has_direct_access",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_direct_access"
  },
  {
    "label": "accessors_level",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "accessors_level"
  },
  {
    "label": "evaluator_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator_traits"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "NumTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NumTraits"
  },
  {
    "label": "EigenBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EigenBase"
  },
  {
    "label": "DenseBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DenseBase"
  },
  {
    "label": "PlainObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PlainObjectBase"
  },
  {
    "label": "DenseCoeffsBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DenseCoeffsBase"
  },
  {
    "label": "Matrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Matrix"
  },
  {
    "label": "MatrixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixBase"
  },
  {
    "label": "ArrayBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayBase"
  },
  {
    "label": "Flagged",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Flagged"
  },
  {
    "label": "StorageBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StorageBase"
  },
  {
    "label": "NoAlias",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoAlias"
  },
  {
    "label": "NestByValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NestByValue"
  },
  {
    "label": "ForceAlignedAccess",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForceAlignedAccess"
  },
  {
    "label": "SwapWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SwapWrapper"
  },
  {
    "label": "Block",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Block"
  },
  {
    "label": "IndexedView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IndexedView"
  },
  {
    "label": "Reshaped",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Reshaped"
  },
  {
    "label": "VectorBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VectorBlock"
  },
  {
    "label": "Transpose",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Transpose"
  },
  {
    "label": "Conjugate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Conjugate"
  },
  {
    "label": "CwiseNullaryOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseNullaryOp"
  },
  {
    "label": "CwiseUnaryOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseUnaryOp"
  },
  {
    "label": "CwiseUnaryView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseUnaryView"
  },
  {
    "label": "CwiseBinaryOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseBinaryOp"
  },
  {
    "label": "CwiseTernaryOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CwiseTernaryOp"
  },
  {
    "label": "Solve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Solve"
  },
  {
    "label": "Inverse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Inverse"
  },
  {
    "label": "Product",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Product"
  },
  {
    "label": "DiagonalBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagonalBase"
  },
  {
    "label": "DiagonalWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagonalWrapper"
  },
  {
    "label": "DiagonalMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagonalMatrix"
  },
  {
    "label": "DiagonalProduct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagonalProduct"
  },
  {
    "label": "Diagonal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Diagonal"
  },
  {
    "label": "PermutationMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PermutationMatrix"
  },
  {
    "label": "Transpositions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Transpositions"
  },
  {
    "label": "PermutationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PermutationBase"
  },
  {
    "label": "TranspositionsBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TranspositionsBase"
  },
  {
    "label": "PermutationWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PermutationWrapper"
  },
  {
    "label": "TranspositionsWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TranspositionsWrapper"
  },
  {
    "label": "MapBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MapBase"
  },
  {
    "label": "Stride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Stride"
  },
  {
    "label": "InnerStride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InnerStride"
  },
  {
    "label": "OuterStride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OuterStride"
  },
  {
    "label": "Map",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Map"
  },
  {
    "label": "RefBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RefBase"
  },
  {
    "label": "Ref",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Ref"
  },
  {
    "label": "TriangularBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularBase"
  },
  {
    "label": "TriangularView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangularView"
  },
  {
    "label": "SelfAdjointView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SelfAdjointView"
  },
  {
    "label": "SparseView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseView"
  },
  {
    "label": "WithFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WithFormat"
  },
  {
    "label": "CommaInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CommaInitializer"
  },
  {
    "label": "ReturnByValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReturnByValue"
  },
  {
    "label": "ArrayWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayWrapper"
  },
  {
    "label": "MatrixWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixWrapper"
  },
  {
    "label": "SolverBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SolverBase"
  },
  {
    "label": "InnerIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InnerIterator"
  },
  {
    "label": "generic_randaccess_stl_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "generic_randaccess_stl_iterator"
  },
  {
    "label": "pointer_based_stl_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "pointer_based_stl_iterator"
  },
  {
    "label": "subvector_stl_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "subvector_stl_iterator"
  },
  {
    "label": "subvector_stl_reverse_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "subvector_stl_reverse_iterator"
  },
  {
    "label": "kernel_retval_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "kernel_retval_base"
  },
  {
    "label": "kernel_retval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "kernel_retval"
  },
  {
    "label": "image_retval_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "image_retval_base"
  },
  {
    "label": "image_retval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "image_retval"
  },
  {
    "label": "BandMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BandMatrix"
  },
  {
    "label": "product_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "product_type"
  },
  {
    "label": "EnableIf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EnableIf"
  },
  {
    "label": "product_evaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "product_evaluator"
  },
  {
    "label": "product_evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "product_evaluator"
  },
  {
    "label": "ProductReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProductReturnType"
  },
  {
    "label": "LazyProductReturnType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LazyProductReturnType"
  },
  {
    "label": "conj_helper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "conj_helper"
  },
  {
    "label": "scalar_sum_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_sum_op"
  },
  {
    "label": "scalar_difference_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_difference_op"
  },
  {
    "label": "scalar_conj_product_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_conj_product_op"
  },
  {
    "label": "scalar_min_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_min_op"
  },
  {
    "label": "scalar_max_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_max_op"
  },
  {
    "label": "scalar_opposite_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_opposite_op"
  },
  {
    "label": "scalar_conjugate_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_conjugate_op"
  },
  {
    "label": "scalar_real_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_real_op"
  },
  {
    "label": "scalar_imag_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_imag_op"
  },
  {
    "label": "scalar_abs_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_abs_op"
  },
  {
    "label": "scalar_abs2_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_abs2_op"
  },
  {
    "label": "scalar_absolute_difference_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_absolute_difference_op"
  },
  {
    "label": "scalar_sqrt_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_sqrt_op"
  },
  {
    "label": "scalar_rsqrt_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_rsqrt_op"
  },
  {
    "label": "scalar_exp_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_exp_op"
  },
  {
    "label": "scalar_log_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_log_op"
  },
  {
    "label": "scalar_cos_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_cos_op"
  },
  {
    "label": "scalar_sin_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_sin_op"
  },
  {
    "label": "scalar_acos_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_acos_op"
  },
  {
    "label": "scalar_asin_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_asin_op"
  },
  {
    "label": "scalar_tan_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_tan_op"
  },
  {
    "label": "scalar_inverse_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_inverse_op"
  },
  {
    "label": "scalar_square_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_square_op"
  },
  {
    "label": "scalar_cube_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_cube_op"
  },
  {
    "label": "scalar_cast_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_cast_op"
  },
  {
    "label": "scalar_random_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_random_op"
  },
  {
    "label": "scalar_constant_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_constant_op"
  },
  {
    "label": "scalar_identity_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_identity_op"
  },
  {
    "label": "scalar_sign_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_sign_op"
  },
  {
    "label": "scalar_pow_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_pow_op"
  },
  {
    "label": "scalar_hypot_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_hypot_op"
  },
  {
    "label": "scalar_product_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_product_op"
  },
  {
    "label": "scalar_quotient_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_quotient_op"
  },
  {
    "label": "scalar_lgamma_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_lgamma_op"
  },
  {
    "label": "scalar_digamma_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_digamma_op"
  },
  {
    "label": "scalar_erf_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_erf_op"
  },
  {
    "label": "scalar_erfc_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_erfc_op"
  },
  {
    "label": "scalar_ndtri_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_ndtri_op"
  },
  {
    "label": "scalar_igamma_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_igamma_op"
  },
  {
    "label": "scalar_igammac_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_igammac_op"
  },
  {
    "label": "scalar_zeta_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_zeta_op"
  },
  {
    "label": "scalar_betainc_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_betainc_op"
  },
  {
    "label": "scalar_bessel_i0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i0_op"
  },
  {
    "label": "scalar_bessel_i0e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i0e_op"
  },
  {
    "label": "scalar_bessel_i1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i1_op"
  },
  {
    "label": "scalar_bessel_i1e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_i1e_op"
  },
  {
    "label": "scalar_bessel_j0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_j0_op"
  },
  {
    "label": "scalar_bessel_y0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_y0_op"
  },
  {
    "label": "scalar_bessel_j1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_j1_op"
  },
  {
    "label": "scalar_bessel_y1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_y1_op"
  },
  {
    "label": "scalar_bessel_k0_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k0_op"
  },
  {
    "label": "scalar_bessel_k0e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k0e_op"
  },
  {
    "label": "scalar_bessel_k1_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k1_op"
  },
  {
    "label": "scalar_bessel_k1e_op",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scalar_bessel_k1e_op"
  },
  {
    "label": "IOFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IOFormat"
  },
  {
    "label": "Array",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Array"
  },
  {
    "label": "Select",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Select"
  },
  {
    "label": "PartialReduxExpr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PartialReduxExpr"
  },
  {
    "label": "VectorwiseOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VectorwiseOp"
  },
  {
    "label": "Replicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Replicate"
  },
  {
    "label": "Reverse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Reverse"
  },
  {
    "label": "FullPivLU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FullPivLU"
  },
  {
    "label": "PartialPivLU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PartialPivLU"
  },
  {
    "label": "inverse_impl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "inverse_impl"
  },
  {
    "label": "HouseholderQR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HouseholderQR"
  },
  {
    "label": "ColPivHouseholderQR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ColPivHouseholderQR"
  },
  {
    "label": "FullPivHouseholderQR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FullPivHouseholderQR"
  },
  {
    "label": "CompleteOrthogonalDecomposition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompleteOrthogonalDecomposition"
  },
  {
    "label": "SVDBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVDBase"
  },
  {
    "label": "JacobiSVD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JacobiSVD"
  },
  {
    "label": "BDCSVD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BDCSVD"
  },
  {
    "label": "LLT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLT"
  },
  {
    "label": "LDLT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LDLT"
  },
  {
    "label": "HouseholderSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HouseholderSequence"
  },
  {
    "label": "JacobiRotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JacobiRotation"
  },
  {
    "label": "RotationBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RotationBase"
  },
  {
    "label": "Cross",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Cross"
  },
  {
    "label": "QuaternionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QuaternionBase"
  },
  {
    "label": "Rotation2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Rotation2D"
  },
  {
    "label": "AngleAxis",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AngleAxis"
  },
  {
    "label": "Translation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Translation"
  },
  {
    "label": "AlignedBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AlignedBox"
  },
  {
    "label": "Quaternion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Quaternion"
  },
  {
    "label": "Transform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Transform"
  },
  {
    "label": "ParametrizedLine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ParametrizedLine"
  },
  {
    "label": "Hyperplane",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Hyperplane"
  },
  {
    "label": "UniformScaling",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UniformScaling"
  },
  {
    "label": "Homogeneous",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Homogeneous"
  },
  {
    "label": "SparseMatrixBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseMatrixBase"
  },
  {
    "label": "MatrixExponentialReturnValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MatrixExponentialReturnValue"
  },
  {
    "label": "MatrixFunctionReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixFunctionReturnValue"
  },
  {
    "label": "MatrixSquareRootReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixSquareRootReturnValue"
  },
  {
    "label": "MatrixLogarithmReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixLogarithmReturnValue"
  },
  {
    "label": "MatrixPowerReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixPowerReturnValue"
  },
  {
    "label": "MatrixComplexPowerReturnValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MatrixComplexPowerReturnValue"
  },
  {
    "label": "stem_function",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stem_function"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (ComplexScalar)",
    "insertText": "type(ComplexScalar, int)"
  }
]