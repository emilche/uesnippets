[
  {
    "label": "FD3D12TransientHeapCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12TransientHeapCache"
  },
  {
    "label": "IRHITransientMemoryCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRHITransientMemoryCache"
  },
  {
    "label": "FD3D12DeviceBasicInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DeviceBasicInfo"
  },
  {
    "label": "FD3D12AdapterDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12AdapterDesc"
  },
  {
    "label": "FD3D12MemoryInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12MemoryInfo"
  },
  {
    "label": "FTransientUniformBufferAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransientUniformBufferAllocator"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "FD3D12Adapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Adapter"
  },
  {
    "label": "FD3D12ComputeShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ComputeShader"
  },
  {
    "label": "FD3D12WorkGraphShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12WorkGraphShader"
  },
  {
    "label": "FD3D12RayTracingShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RayTracingShader"
  },
  {
    "label": "FAllocatedResourceResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocatedResourceResult"
  },
  {
    "label": "FReleasedAllocationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReleasedAllocationData"
  },
  {
    "label": "FTrackedAllocationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackedAllocationData"
  },
  {
    "label": "EnumAdapters()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "EnumAdapters(int32 AdapterIndex, DXGI_GPU_PREFERENCE GpuPreference, IDXGIFactory2* DxgiFactory2, IDXGIFactory6* DxgiFactory6, IDXGIAdapter** TempAdapter)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "FD3D12Adapter()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12Adapter(FD3D12AdapterDesc& DescIn)"
  },
  {
    "label": "CleanupResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupResources()"
  },
  {
    "label": "InitializeDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDevices()"
  },
  {
    "label": "InitializeExplicitDescriptorHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeExplicitDescriptorHeap()"
  },
  {
    "label": "InitializeRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRayTracing()"
  },
  {
    "label": "SetDrawingViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawingViewport(FD3D12Viewport* InViewport)"
  },
  {
    "label": "CreateDXGIFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDXGIFactory(bool bWithDebug)"
  },
  {
    "label": "CreateDXGIFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDXGIFactory(TRefCountPtr<IDXGIFactory2>& DxgiFactory2, bool bWithDebug, HMODULE DxgiDllHandle)"
  },
  {
    "label": "InitDXGIFactoryVariants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDXGIFactoryVariants(IDXGIFactory2* InDxgiFactory2)"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame()"
  },
  {
    "label": "CreateCommittedResource()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateCommittedResource(InDesc, CreationNode, HeapProps, InInitialState, ED3D12ResourceStateMode::Default, D3D12_RESOURCE_STATE_TBD, ClearValue, ppOutResource, Name, bVerifyHResult)"
  },
  {
    "label": "CreateCommittedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreateCommittedResource(const FD3D12ResourceDesc& Desc,\n\t\tFRHIGPUMask CreationNode,\n\t\tconst D3D12_HEAP_PROPERTIES& HeapProps,\n\t\tD3D12_RESOURCE_STATES InInitialState,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InDefaultState,\n\t\tconst D3D12_CLEAR_VALUE* ClearValue,\n\t\tFD3D12Resource** ppOutResource,\n\t\tconst TCHAR* Name,\n\t\tbool bVerifyHResult = true)"
  },
  {
    "label": "CreatePlacedResource()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreatePlacedResource(InDesc, BackingHeap, HeapOffset, InInitialState, ED3D12ResourceStateMode::Default, D3D12_RESOURCE_STATE_TBD, ClearValue, ppOutResource, Name, bVerifyHResult)"
  },
  {
    "label": "CreatePlacedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreatePlacedResource(const FD3D12ResourceDesc& Desc,\n\t\tFD3D12Heap* BackingHeap,\n\t\tuint64 HeapOffset,\n\t\tD3D12_RESOURCE_STATES InInitialState,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InDefaultState,\n\t\tconst D3D12_CLEAR_VALUE* ClearValue,\n\t\tFD3D12Resource** ppOutResource,\n\t\tconst TCHAR* Name,\n\t\tbool bVerifyHResult = true)"
  },
  {
    "label": "CreateReservedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreateReservedResource(const FD3D12ResourceDesc& Desc,\n\t\tFRHIGPUMask CreationNode,\n\t\tD3D12_RESOURCE_STATES InInitialState,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InDefaultState,\n\t\tconst D3D12_CLEAR_VALUE* ClearValue,\n\t\tFD3D12Resource** ppOutResource,\n\t\tconst TCHAR* Name,\n\t\tbool bVerifyHResult = true)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreateBuffer(D3D12_HEAP_TYPE HeapType,\n\t\tFRHIGPUMask CreationNode,\n\t\tFRHIGPUMask VisibleNodes,\n\t\tuint64 HeapSize,\n\t\tFD3D12Resource** ppOutResource,\n\t\tconst TCHAR* Name,\n\t\tD3D12_RESOURCE_FLAGS Flags = D3D12_RESOURCE_FLAG_NONE)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreateBuffer(D3D12_HEAP_TYPE HeapType,\n\t\tFRHIGPUMask CreationNode,\n\t\tFRHIGPUMask VisibleNodes,\n\t\tD3D12_RESOURCE_STATES InitialState,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tuint64 HeapSize,\n\t\tFD3D12Resource** ppOutResource,\n\t\tconst TCHAR* Name,\n\t\tD3D12_RESOURCE_FLAGS Flags = D3D12_RESOURCE_FLAG_NONE)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CreateBuffer(const D3D12_HEAP_PROPERTIES& HeapProps,\n\t\tFRHIGPUMask CreationNode,\n\t\tD3D12_RESOURCE_STATES InInitialState,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InDefaultState,\n\t\tuint64 HeapSize,\n\t\tFD3D12Resource** ppOutResource,\n\t\tconst TCHAR* Name,\n\t\tD3D12_RESOURCE_FLAGS Flags = D3D12_RESOURCE_FLAG_NONE)"
  },
  {
    "label": "CreateUAVAliasResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUAVAliasResource(\n\t\tD3D12_CLEAR_VALUE* ClearValuePtr,\n\t\tconst TCHAR* DebugName,\n\t\tFD3D12ResourceLocation& Location)"
  },
  {
    "label": "GetDevice()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetDevice(GPUIndex)"
  },
  {
    "label": "ReleaseTransientUniformBufferAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseTransientUniformBufferAllocator(FTransientUniformBufferAllocator* InAllocator)"
  },
  {
    "label": "BlockUntilIdle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUntilIdle()"
  },
  {
    "label": "TrackAllocationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackAllocationData(FD3D12ResourceLocation* InAllocation, uint64 InAllocationSize, bool bCollectCallstack)"
  },
  {
    "label": "ReleaseTrackedAllocationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseTrackedAllocationData(FD3D12ResourceLocation* InAllocation, bool bDefragFree)"
  },
  {
    "label": "TrackHeapAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackHeapAllocation(FD3D12Heap* InHeap)"
  },
  {
    "label": "ReleaseTrackedHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseTrackedHeap(FD3D12Heap* InHeap)"
  },
  {
    "label": "DumpTrackedAllocationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpTrackedAllocationData(FOutputDevice& OutputDevice, bool bResidentOnly, bool bWithCallstack)"
  },
  {
    "label": "FindResourcesNearGPUAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindResourcesNearGPUAddress(D3D12_GPU_VIRTUAL_ADDRESS InGPUVirtualAddress, uint64 InRange, TArray<FAllocatedResourceResult>& OutResources)"
  },
  {
    "label": "FindHeapsContainingGPUAddress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindHeapsContainingGPUAddress(D3D12_GPU_VIRTUAL_ADDRESS InGPUVirtualAddress, TArray<FD3D12Heap*>& OutHeaps)"
  },
  {
    "label": "FindReleasedAllocationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindReleasedAllocationData(D3D12_GPU_VIRTUAL_ADDRESS InGPUVirtualAddress, TArray<FReleasedAllocationData>& OutAllocationData)"
  },
  {
    "label": "SetResidencyPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResidencyPriority(ID3D12Pageable* Pageable, D3D12_RESIDENCY_PRIORITY HeapPriority, uint32 GPUIndex)"
  },
  {
    "label": "CreateRootDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRootDevice(bool bWithDebug)"
  },
  {
    "label": "AllocateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateBuffer(FD3D12Device* Device,\n\t\tconst D3D12_RESOURCE_DESC& Desc,\n\t\tuint32 Size,\n\t\tEBufferUsageFlags InUsage,\n\t\tED3D12ResourceStateMode InResourceStateMode,\n\t\tD3D12_RESOURCE_STATES InCreateState,\n\t\tuint32 Alignment,\n\t\tFD3D12Buffer* Buffer,\n\t\tFD3D12ResourceLocation& ResourceLocation,\n\t\tID3D12ResourceAllocator* ResourceAllocator,\n\t\tconst TCHAR* InDebugName)"
  },
  {
    "label": "CreateCommandSignatures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCommandSignatures()"
  },
  {
    "label": "TraceMemoryAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceMemoryAllocation(FD3D12Resource* Resource)"
  }
]