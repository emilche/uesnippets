[
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "NumberingSystem()",
    "kind": "Method",
    "detail": "Function (# ifndef NUMSYS # define NUMSYS # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / format . h \" # include \" unicode / uobject . h \" U_NAMESPACE_BEGIN const size_t kInternalNumSysNameCapacity = 8 ; class U_I18N_API NumberingSystem : public UObject { public :)",
    "insertText": "NumberingSystem()"
  },
  {
    "label": "NumberingSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NumberingSystem(const NumberingSystem& other)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (NumberingSystem* U_EXPORT2)",
    "insertText": "createInstance(const Locale & inLocale, UErrorCode& status)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (NumberingSystem* U_EXPORT2)",
    "insertText": "createInstance(UErrorCode& status)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (NumberingSystem* U_EXPORT2)",
    "insertText": "createInstance(int32_t radix, UBool isAlgorithmic, const UnicodeString& description, UErrorCode& status)"
  },
  {
    "label": "getAvailableNames()",
    "kind": "Method",
    "detail": "Function (StringEnumeration* U_EXPORT2)",
    "insertText": "getAvailableNames(UErrorCode& status)"
  },
  {
    "label": "createInstanceByName()",
    "kind": "Method",
    "detail": "Function (NumberingSystem* U_EXPORT2)",
    "insertText": "createInstanceByName(const char* name, UErrorCode& status)"
  },
  {
    "label": "getRadix()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getRadix()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getName()"
  },
  {
    "label": "getDescription()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getDescription()"
  },
  {
    "label": "isAlgorithmic()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isAlgorithmic()"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (UClassID U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID()"
  },
  {
    "label": "setRadix()",
    "kind": "Method",
    "detail": "Function (private : UnicodeString desc ; int32_t radix ; UBool algorithmic ; char name [ kInternalNumSysNameCapacity + 1 ] ; void)",
    "insertText": "setRadix(int32_t radix)"
  },
  {
    "label": "setAlgorithmic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setAlgorithmic(UBool algorithmic)"
  },
  {
    "label": "setDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDesc(const UnicodeString &desc)"
  },
  {
    "label": "setName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setName(const char* name)"
  },
  {
    "label": "isValidDigitString()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isValidDigitString(const UnicodeString &str)"
  },
  {
    "label": "hasContiguousDecimalDigits()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "hasContiguousDecimalDigits()"
  }
]