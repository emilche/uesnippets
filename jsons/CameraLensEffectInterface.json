[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "APlayerCameraManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerCameraManager"
  },
  {
    "label": "UFXSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFXSystemComponent"
  },
  {
    "label": "UCameraLensEffectInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraLensEffectInterface"
  },
  {
    "label": "ICameraLensEffectInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICameraLensEffectInterface"
  },
  {
    "label": "FCameraLensInterfaceClassSupport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraLensInterfaceClassSupport"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TScriptInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TScriptInterface"
  },
  {
    "label": "UCameraLensEffectInterfaceClassSupportLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraLensEffectInterfaceClassSupportLibrary"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Interface . h \" # include \" Math / Transform . h \" # include \" Templates / SubclassOf . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" CameraLensEffectInterface . generated . h \" class AActor ; class APlayerCameraManager ; class UFXSystemComponent ;)",
    "insertText": "UINTERFACE(meta=(CannotImplementInterfaceInBlueprint), MinimalAPI, BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class ICameraLensEffectInterface {)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category = \"CameraLensEffect\") ENGINE_API virtual TArray<UFXSystemComponent*> GetParticleComponents()"
  },
  {
    "label": "GetRelativeTransform()",
    "kind": "Method",
    "detail": "Function (const FTransform&)",
    "insertText": "GetRelativeTransform()"
  },
  {
    "label": "GetBaseFOV()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetBaseFOV()"
  },
  {
    "label": "ShouldAllowMultipleInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAllowMultipleInstances()"
  },
  {
    "label": "ResetWhenTriggered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResetWhenTriggered()"
  },
  {
    "label": "NotifyWillBePooled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyWillBePooled()"
  },
  {
    "label": "ShouldTreatEmitterAsSame()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "ShouldTreatEmitterAsSame(TSubclassOf<AActor> OtherEmitter)"
  },
  {
    "label": "RegisterCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCamera(APlayerCameraManager* CameraManager)"
  },
  {
    "label": "NotifyRetriggered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRetriggered()"
  },
  {
    "label": "ActivateLensEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateLensEffect()"
  },
  {
    "label": "DeactivateLensEffect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateLensEffect()"
  },
  {
    "label": "UpdateLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLocation(const FVector& CamLoc, const FRotator& CamRot, float CamFOVDeg)"
  },
  {
    "label": "AdjustBaseFOV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustBaseFOV(float NewFOV)"
  },
  {
    "label": "GetAttachedEmitterTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetAttachedEmitterTransform(const AActor* Emitter, const FVector& CamLoc, const FRotator& CamRot, float CamFOVDeg)"
  },
  {
    "label": "IsLooping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLooping()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category=\"Lens Effect\", meta=(MustImplement= \"/Script/Engine.CameraLensEffectInterface\"))"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Valid,Invalid,} ; template<T> class TScriptInterface ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintPure, Category=\"Lens Effect\", meta=(BlueprintAutocast, CompactNodeTitle=\".\", Keywords=\"class, get, toclass, getclass, spawn, object\")) static TSubclassOf<AActor> GetInterfaceClass(const FCameraLensInterfaceClassSupport& CameraLens)"
  }
]