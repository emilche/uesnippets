[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FTrackedGeometryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackedGeometryManager"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Serializable . h \" # include \" Chaos / ImplicitObject . h \" # include \" Serialization / MemoryWriter . h \" class FOutputDevice ; namespace Chaos { class FTrackedGeometryManager { public : FTrackedGeometryManager&)",
    "insertText": "Get()"
  },
  {
    "label": "DumpMemoryUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpMemoryUsage(FOutputDevice* Ar)"
  },
  {
    "label": "AddGeometry()",
    "kind": "Method",
    "detail": "Function (private : TMap<TSerializablePtr<FImplicitObject>,FString> SharedGeometry ; FCriticalSection CriticalSection ; FImplicitObject ; void)",
    "insertText": "AddGeometry(TSerializablePtr<FImplicitObject> Geometry, const FString& DebugInfo)"
  },
  {
    "label": "RemoveGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGeometry(const FImplicitObject* Geometry)"
  }
]