[
  {
    "label": "TriangleMeshType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TriangleMeshType"
  },
  {
    "label": "TSparseNarrowBandMeshSDF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSparseNarrowBandMeshSDF"
  },
  {
    "label": "EComputeModes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EComputeModes"
  },
  {
    "label": "EInsideModes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInsideModes"
  },
  {
    "label": "FScatterCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScatterCounter"
  },
  {
    "label": "FTriIDBlockGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTriIDBlockGrid"
  },
  {
    "label": "FTriBBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTriBBox"
  },
  {
    "label": "FAtomicGrid3i",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAtomicGrid3i"
  },
  {
    "label": "failed()",
    "kind": "Method",
    "detail": "Function (or)",
    "insertText": "failed(e.g. due to invalid arguments)"
  },
  {
    "label": "in()",
    "kind": "Method",
    "detail": "Function (intersections)",
    "insertText": "in(I-1,I]x{J}x{K}\n\t\t\t\n\t\t\tcompute_intersections(Origin, DX, NI, NJ, NK, Distances, IntersectionCountGrid)"
  },
  {
    "label": "compute_signs()",
    "kind": "Method",
    "detail": "Function (counts)",
    "insertText": "compute_signs(NI, NJ, NK, IntersectionCountGrid, Distances)"
  },
  {
    "label": "box_min()",
    "kind": "Method",
    "detail": "Function (FVector3i)",
    "insertText": "box_min(TriBBox.BoxMin[0] / BlockSize, TriBBox.BoxMin[1] / BlockSize, TriBBox.BoxMin[2] / BlockSize)"
  },
  {
    "label": "box_max()",
    "kind": "Method",
    "detail": "Function (FVector3i)",
    "insertText": "box_max(TriBBox.BoxMax[0] / BlockSize, TriBBox.BoxMax[1] / BlockSize, TriBBox.BoxMax[2] / BlockSize)"
  },
  {
    "label": "TriIDBlockGrid()",
    "kind": "Method",
    "detail": "Function (FTriIDBlockGrid)",
    "insertText": "TriIDBlockGrid(TriCounter, this->bUseParallel)"
  },
  {
    "label": "box_min()",
    "kind": "Method",
    "detail": "Function (FVector3i)",
    "insertText": "box_min(TriBBox.BoxMin[0] / BlockSize, TriBBox.BoxMin[1] / BlockSize, TriBBox.BoxMin[2] / BlockSize)"
  },
  {
    "label": "box_max()",
    "kind": "Method",
    "detail": "Function (FVector3i)",
    "insertText": "box_max(TriBBox.BoxMax[0] / BlockSize, TriBBox.BoxMax[1] / BlockSize, TriBBox.BoxMax[2] / BlockSize)"
  },
  {
    "label": "BitBlock()",
    "kind": "Method",
    "detail": "Function (FBlockedGrid3b::BlockData3Type)",
    "insertText": "BitBlock(false, -1)"
  },
  {
    "label": "VisitedGrid()",
    "kind": "Method",
    "detail": "Function (FBlockedGrid3b)",
    "insertText": "VisitedGrid(NI, NJ, NK, false)"
  },
  {
    "label": "CIter()",
    "kind": "Method",
    "detail": "Function (BitArrayConstIter)",
    "insertText": "CIter(Mask)"
  },
  {
    "label": "BlockIJK()",
    "kind": "Method",
    "detail": "Function (FVector3i)",
    "insertText": "BlockIJK(0, BlockJ, BlockK)"
  }
]