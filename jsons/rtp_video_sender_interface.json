[
  {
    "label": "VideoBitrateAllocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoBitrateAllocation"
  },
  {
    "label": "FecProtectionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FecProtectionParams"
  },
  {
    "label": "RtpVideoSenderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpVideoSenderInterface"
  },
  {
    "label": "SetActive()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_RTP_VIDEO_SENDER_INTERFACE_H_ # define CALL_RTP_VIDEO_SENDER_INTERFACE_H_ # include<map> # include<vector> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / call / bitrate_allocation . h \" # include \" api / fec_controller_override . h \" # include \" api / video / video_layers_allocation . h \" # include \" call / rtp_config . h \" # include \" modules / rtp_rtcp / include / rtp_rtcp_defines . h \" # include \" modules / rtp_rtcp / source / rtp_sequence_number_map . h \" # include \" modules / video_coding / include / video_codec_interface . h \" namespace webrtc { class VideoBitrateAllocation ; struct FecProtectionParams ; class RtpVideoSenderInterface : public EncodedImageCallback,public FecControllerOverride { public : void)",
    "insertText": "SetActive(bool active)"
  },
  {
    "label": "SetActiveModules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveModules(std::vector<bool> active_modules)"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "OnNetworkAvailability()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNetworkAvailability(bool network_available)"
  },
  {
    "label": "GetRtpStates()",
    "kind": "Method",
    "detail": "Function (std::map<uint32_t,RtpState>)",
    "insertText": "GetRtpStates()"
  },
  {
    "label": "GetRtpPayloadStates()",
    "kind": "Method",
    "detail": "Function (std::map<uint32_t,RtpPayloadState>)",
    "insertText": "GetRtpPayloadStates()"
  },
  {
    "label": "DeliverRtcp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeliverRtcp(const uint8_t* packet, size_t length)"
  },
  {
    "label": "OnBitrateAllocationUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBitrateAllocationUpdated(const VideoBitrateAllocation& bitrate)"
  },
  {
    "label": "OnVideoLayersAllocationUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVideoLayersAllocationUpdated(const VideoLayersAllocation& allocation)"
  },
  {
    "label": "OnBitrateUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBitrateUpdated(BitrateAllocationUpdate update, int framerate)"
  },
  {
    "label": "OnTransportOverheadChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransportOverheadChanged(size_t transport_overhead_bytes_per_packet)"
  },
  {
    "label": "GetPayloadBitrateBps()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetPayloadBitrateBps()"
  },
  {
    "label": "GetProtectionBitrateBps()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "GetProtectionBitrateBps()"
  },
  {
    "label": "SetEncodingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncodingData(size_t width, size_t height, size_t num_temporal_layers)"
  },
  {
    "label": "GetSentRtpPacketInfos()",
    "kind": "Method",
    "detail": "Function (std::vector<RtpSequenceNumberMap::Info>)",
    "insertText": "GetSentRtpPacketInfos(uint32_t ssrc, rtc::ArrayView<const uint16_t> sequence_numbers)"
  },
  {
    "label": "SetFecAllowed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFecAllowed(bool fec_allowed)"
  }
]