[
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "MemoryBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryBuffer"
  },
  {
    "label": "Regex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Regex"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "SpecialCaseList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecialCaseList"
  },
  {
    "label": "Entry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Entry"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SpecialCaseList>)",
    "insertText": "create(const std::vector<std::string> &Paths, std::string &Error)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SpecialCaseList>)",
    "insertText": "create(const MemoryBuffer *MB,\n                                                 std::string &Error)"
  },
  {
    "label": "createOrDie()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SpecialCaseList>)",
    "insertText": "createOrDie(const std::vector<std::string> &Paths)"
  },
  {
    "label": "parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "parse(const MemoryBuffer *MB, std::string &Error)"
  },
  {
    "label": "compile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "compile()"
  }
]