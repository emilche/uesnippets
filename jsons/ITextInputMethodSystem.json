[
  {
    "label": "ITextInputMethodContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextInputMethodContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ITextInputMethodChangeNotifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextInputMethodChangeNotifier"
  },
  {
    "label": "ITextInputMethodSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextInputMethodSystem"
  },
  {
    "label": "ITextInputMethodContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" GenericPlatform / GenericWindow . h \" class ITextInputMethodContext { public : enum class ECaretPosition { Beginning,Ending } ; public : ~)",
    "insertText": "ITextInputMethodContext()"
  },
  {
    "label": "IsComposing()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsComposing()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "GetTextLength()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTextLength()"
  },
  {
    "label": "GetSelectionRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectionRange(uint32& OutBeginIndex, uint32& OutLength, ECaretPosition& OutCaretPosition)"
  },
  {
    "label": "SetSelectionRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionRange(const uint32 InBeginIndex, const uint32 InLength, const ECaretPosition InCaretPosition)"
  },
  {
    "label": "GetTextInRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTextInRange(const uint32 InBeginIndex, const uint32 InLength, FString& OutString)"
  },
  {
    "label": "SetTextInRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextInRange(const uint32 InBeginIndex, const uint32 InLength, const FString& InString)"
  },
  {
    "label": "GetCharacterIndexFromPoint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCharacterIndexFromPoint(const FVector2D& InPoint)"
  },
  {
    "label": "GetTextBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTextBounds(const uint32 InBeginIndex, const uint32 InLength, FVector2D& OutPosition, FVector2D& OutSize)"
  },
  {
    "label": "GetScreenBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetScreenBounds(FVector2D& OutPosition, FVector2D& OutSize)"
  },
  {
    "label": "GetWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGenericWindow>)",
    "insertText": "GetWindow()"
  },
  {
    "label": "BeginComposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginComposition()"
  },
  {
    "label": "UpdateCompositionRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCompositionRange(const int32 InBeginIndex, const uint32 InLength)"
  },
  {
    "label": "EndComposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndComposition()"
  },
  {
    "label": "ITextInputMethodChangeNotifier()",
    "kind": "Method",
    "detail": "Function (} ; class ITextInputMethodChangeNotifier { public : enum class ELayoutChangeType { Created,Changed,Destroyed } ; public : ~)",
    "insertText": "ITextInputMethodChangeNotifier()"
  },
  {
    "label": "NotifyLayoutChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyLayoutChanged(const ELayoutChangeType ChangeType)"
  },
  {
    "label": "NotifySelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySelectionChanged()"
  },
  {
    "label": "NotifyTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTextChanged(const uint32 BeginIndex, const uint32 OldLength, const uint32 NewLength)"
  },
  {
    "label": "CancelComposition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelComposition()"
  },
  {
    "label": "ITextInputMethodSystem()",
    "kind": "Method",
    "detail": "Function (} ; class ITextInputMethodSystem { public : ~)",
    "insertText": "ITextInputMethodSystem()"
  },
  {
    "label": "ApplyDefaults()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplyDefaults(const TSharedRef<FGenericWindow>& InWindow)"
  },
  {
    "label": "RegisterContext()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITextInputMethodChangeNotifier>)",
    "insertText": "RegisterContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "UnregisterContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "ActivateContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "DeactivateContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateContext(const TSharedRef<ITextInputMethodContext>& Context)"
  },
  {
    "label": "IsActiveContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActiveContext(const TSharedRef<ITextInputMethodContext>& Context)"
  }
]