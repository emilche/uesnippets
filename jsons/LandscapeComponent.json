[
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "ALandscapeProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeProxy"
  },
  {
    "label": "FLightingBuildOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightingBuildOptions"
  },
  {
    "label": "FMaterialUpdateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialUpdateContext"
  },
  {
    "label": "FMeshMapBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMapBuildData"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeGrassType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeGrassType"
  },
  {
    "label": "ULandscapeHeightfieldCollisionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeHeightfieldCollisionComponent"
  },
  {
    "label": "ULandscapeInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeInfo"
  },
  {
    "label": "ULandscapeLayerInfoObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLayerInfoObject"
  },
  {
    "label": "ULightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULightComponent"
  },
  {
    "label": "UMaterialInstanceConstant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceConstant"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "FConvexVolume",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConvexVolume"
  },
  {
    "label": "FEngineShowFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEngineShowFlags"
  },
  {
    "label": "FLandscapeTextureDataInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeTextureDataInfo"
  },
  {
    "label": "FStaticLightingPrimitiveInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticLightingPrimitiveInfo"
  },
  {
    "label": "FLandscapeEditDataInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeEditDataInterface"
  },
  {
    "label": "FLandscapeMobileRenderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeMobileRenderData"
  },
  {
    "label": "FLandscapeEditToolRenderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeEditToolRenderData"
  },
  {
    "label": "SelectionType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SelectionType"
  },
  {
    "label": "FLandscapeVertexRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeVertexRef"
  },
  {
    "label": "FWeightmapLayerAllocationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeightmapLayerAllocationInfo"
  },
  {
    "label": "IBuffer2DView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IBuffer2DView"
  },
  {
    "label": "FLandscapeComponentGrassData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeComponentGrassData"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "FLandscapePerLODMaterialOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapePerLODMaterialOverride"
  },
  {
    "label": "FWeightmapData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeightmapData"
  },
  {
    "label": "FHeightmapData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeightmapData"
  },
  {
    "label": "FLandscapeLayerComponentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayerComponentData"
  },
  {
    "label": "ELandscapeComponentUpdateFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeComponentUpdateFlag"
  },
  {
    "label": "ELandscapeLayerUpdateMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeLayerUpdateMode"
  },
  {
    "label": "ELandscapeClearMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELandscapeClearMode"
  },
  {
    "label": "ULandscapeLODStreamingProxy_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLODStreamingProxy_DEPRECATED"
  },
  {
    "label": "FGrassTypeSummary",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGrassTypeSummary"
  },
  {
    "label": "FExcludeBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExcludeBox"
  },
  {
    "label": "UHLODBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODBuilder"
  },
  {
    "label": "UMaterialInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstance"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "FComponentRecreateRenderStateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentRecreateRenderStateContext"
  },
  {
    "label": "FLandscapeComponentSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeComponentSceneProxy"
  },
  {
    "label": "FLandscapeComponentDataInterface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeComponentDataInterface"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StaticArray . h \" # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" Engine / TextureStreamingTypes . h \" # include \" Components / PrimitiveComponent . h \" # include \" UObject / PerPlatformProperties . h \" # include \" Serialization / BulkData . h \" # include \" LandscapePhysicalMaterial . h \" # include \" LandscapeInfo . h \" # include \" LandscapeWeightmapUsage . h \" # include \" Containers / ArrayView . h \" # include \" Engine / StreamableRenderAsset . h \" # include \" Engine / Texture2DArray . h \" # include \" LandscapeComponent . generated . h \" class ALandscape ; class ALandscapeProxy ; class FLightingBuildOptions ; class FMaterialUpdateContext ; class FMeshMapBuildData ; class FPrimitiveSceneProxy ; class ITargetPlatform ; class ULandscapeComponent ; class ULandscapeGrassType ; class ULandscapeHeightfieldCollisionComponent ; class ULandscapeInfo ; class ULandscapeLayerInfoObject ; class ULightComponent ; class UMaterialInstanceConstant ; class UMaterialInterface ; class UTexture2D ; struct FConvexVolume ; struct FEngineShowFlags ; struct FLandscapeTextureDataInfo ; struct FStaticLightingPrimitiveInfo ; struct FLandscapeEditDataInterface ; struct FLandscapeMobileRenderData ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FLandscapeEditToolRenderData()",
    "kind": "Method",
    "detail": "Function (ST_NONE = 0,ST_COMPONENT = 1,ST_REGION = 2,} ;)",
    "insertText": "FLandscapeEditToolRenderData() : ToolMaterial(NULL), GizmoMaterial(NULL), SelectedType(ST_NONE), DebugChannelR(INDEX_NONE), DebugChannelG(INDEX_NONE), DebugChannelB(INDEX_NONE), DataTexture(NULL), LayerContributionTexture(NULL), DirtyTexture(NULL)"
  },
  {
    "label": "UpdateDebugColorMaterial()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "UpdateDebugColorMaterial(const ULandscapeComponent* const Component)"
  },
  {
    "label": "UpdateSelectionMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSelectionMaterial(int32 InSelectedType, const ULandscapeComponent* const Component)"
  },
  {
    "label": "FLandscapeVertexRef()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct FLandscapeVertexRef {)",
    "insertText": "FLandscapeVertexRef(int16 InX, int16 InY, int8 InSubX, int8 InSubY) : X(InX) , Y(InY) , SubX(InSubX) , SubY(InSubY)"
  },
  {
    "label": "GetVertexIndex()",
    "kind": "Method",
    "detail": "Function (} uint32 X : 8 ; uint32 Y : 8 ; uint32 SubX : 8 ; uint32 SubY : 8 ; int32)",
    "insertText": "GetVertexIndex(FLandscapeVertexRef Vert, int32 SubsectionCount, int32 SubsectionVerts)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FWeightmapLayerAllocationInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWeightmapLayerAllocationInfo() : LayerInfo(nullptr) , WeightmapTextureIndex(0) , WeightmapTextureChannel(0)"
  },
  {
    "label": "FWeightmapLayerAllocationInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FWeightmapLayerAllocationInfo(ULandscapeLayerInfoObject* InLayerInfo) : LayerInfo(InLayerInfo) , WeightmapTextureIndex(255) , WeightmapTextureChannel(255)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FWeightmapLayerAllocationInfo& RHS)"
  },
  {
    "label": "GetLayerName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetLayerName()"
  },
  {
    "label": "GetHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetHash()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free()"
  },
  {
    "label": "IsAllocated()",
    "kind": "Method",
    "detail": "Function (WeightmapTextureChannel = 2 5 5 ; WeightmapTextureIndex = 2 5 5 ; } bool)",
    "insertText": "IsAllocated()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} } ; uint32)",
    "insertText": "GetTypeHash(const FWeightmapLayerAllocationInfo& InAllocInfo)"
  },
  {
    "label": "CopyTo()",
    "kind": "Method",
    "detail": "Function (} template<T> struct IBuffer2DView { void)",
    "insertText": "CopyTo(T* Dest, int32 Count)"
  },
  {
    "label": "CopyToAndCalcIsAllZero()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyToAndCalcIsAllZero(T* Dest, int32 Count)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Num()"
  },
  {
    "label": "FLandscapeComponentGrassData()",
    "kind": "Method",
    "detail": "Function (uint32 GenerationHash = 0 ; # endif # if WITH_EDITORONLY_DATA TMap<int32,TArray<uint16>> HeightMipData ; # endif int32 UnknownNumElements = - 1 ; int32 NumElements = UnknownNumElements ; TMap<TObjectPtr<ULandscapeGrassType>,int32> WeightOffsets ; TArray<uint8> HeightWeightData ; PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FLandscapeComponentGrassData()"
  },
  {
    "label": "FLandscapeComponentGrassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLandscapeComponentGrassData(ULandscapeComponent* Component)"
  },
  {
    "label": "FLandscapeComponentGrassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLandscapeComponentGrassData(const FLandscapeComponentGrassData&)"
  },
  {
    "label": "FLandscapeComponentGrassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLandscapeComponentGrassData(FLandscapeComponentGrassData&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FLandscapeComponentGrassData&)",
    "insertText": "operator(const FLandscapeComponentGrassData&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FLandscapeComponentGrassData&)",
    "insertText": "operator(FLandscapeComponentGrassData&&)"
  },
  {
    "label": "HasValidData()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS bool)",
    "insertText": "HasValidData()"
  },
  {
    "label": "HasData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasData()"
  },
  {
    "label": "InitializeFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFrom(const TArray<uint16>& HeightData, const TMap<ULandscapeGrassType*, TArray<uint8>>& WeightData)"
  },
  {
    "label": "InitializeFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFrom(IBuffer2DView<uint16>* HeightData, TMap<ULandscapeGrassType*, IBuffer2DView<uint8>*>& WeightData, bool bStripEmptyWeights)"
  },
  {
    "label": "HasWeightData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasWeightData()"
  },
  {
    "label": "GetWeightData()",
    "kind": "Method",
    "detail": "Function (TArrayView<uint8>)",
    "insertText": "GetWeightData(const ULandscapeGrassType* GrassType)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Contains(ULandscapeGrassType* GrassType)"
  },
  {
    "label": "GetHeightData()",
    "kind": "Method",
    "detail": "Function (TArrayView<uint16>)",
    "insertText": "GetHeightData()"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "ConditionalDiscardDataOnLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalDiscardDataOnLoad()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FLandscapeComponentGrassData& Data)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(NotBlueprintable, meta = (Deprecated = \"5.1\")) struct UE_DEPRECATED(all, \"FLandscapeComponentMaterialOverride is deprecated; please use FLandscapePerLODMaterialOverride instead\")"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = LandscapeComponent, meta=(UIMin=0, UIMax=8, ClampMin=0, ClampMax=8))"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT(NotBlueprintable)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category = Material, meta = (UIMin = 0, UIMax = 8, ClampMin = 0, ClampMax = 8))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FLandscapePerLODMaterialOverride & InOther)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FLandscapeLayerComponentData()"
  },
  {
    "label": "FLandscapeLayerComponentData()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR)",
    "insertText": "FLandscapeLayerComponentData(const FName& InDebugName) : DebugName(InDebugName)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} } ; # if WITH_EDITOR enum ELandscapeComponentUpdateFlag : uint32 { Component_Update_Heightmap_Collision = 1<<0,Component_Update_Weightmap_Collision = 1<<1,Component_Update_Recreate_Collision = 1<<2,Component_Update_Client = 1<<3,Component_Update_Client_Editing = 1<<4,Component_Update_Approximated_Bounds = 1<<5 } ; enum ELandscapeLayerUpdateMode : uint32 { Update_None = 0,Update_Heightmap_All = 1<<0,Update_Heightmap_Editing = 1<<1,Update_Heightmap_Editing_NoCollision = 1<<2,Update_Weightmap_All = 1<<3,Update_Weightmap_Editing = 1<<4,Update_Weightmap_Editing_NoCollision = 1<<5,Update_All = Update_Weightmap_All | Update_Heightmap_All,Update_All_Editing = Update_Weightmap_Editing | Update_Heightmap_Editing,Update_All_Editing_NoCollision = Update_Weightmap_Editing_NoCollision | Update_Heightmap_Editing_NoCollision,Update_Heightmap_Types = Update_Heightmap_All | Update_Heightmap_Editing | Update_Heightmap_Editing_NoCollision,Update_Weightmap_Types = Update_Weightmap_All | Update_Weightmap_Editing | Update_Weightmap_Editing_NoCollision,Update_Client_Deferred = 1<<6,Update_Client_Editing = 1<<7 } ; const uint32 DefaultSplineHash = 0 xFFFFFFFF ; # endif)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Clear_Weightmap = 1<<0)",
    "insertText": "UMETA(DisplayName = \"Paint\"), Clear_Heightmap = 1 << 1 UMETA(DisplayName = \"Sculpt\"), Clear_All = Clear_Weightmap | Clear_Heightmap UMETA(DisplayName = \"All\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(hidecategories=(Display, Attachment, Physics, Debug, Collision, Movement, Rendering, PrimitiveComponent, Object, Transform, Mobility, VirtualTexture), showcategories=(\"Rendering|Material\"), MinimalAPI, Within=LandscapeProxy)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=LandscapeComponent)"
  },
  {
    "label": "IsGrassTypeSummaryValid()",
    "kind": "Method",
    "detail": "Function (public : struct FGrassTypeSummary { bool bInvalid = true ; double MaxInstanceDiscardDistance = DBL_MAX ; } ; FGrassTypeSummary GrassTypeSummary ; bool)",
    "insertText": "IsGrassTypeSummaryValid()"
  },
  {
    "label": "FExcludeBox()",
    "kind": "Method",
    "detail": "Function (# endif public : TSharedRef<FLandscapeComponentGrassData,ESPMode::ThreadSafe> GrassData ; struct FExcludeBox { FBox Box ;)",
    "insertText": "FExcludeBox()"
  },
  {
    "label": "FExcludeBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FExcludeBox(const FBox& InBox) : Box(InBox)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FExcludeBox& Other)"
  },
  {
    "label": "CalculatePhysicalMaterialTaskHash()",
    "kind": "Method",
    "detail": "Function (} } ; TArray<FExcludeBox> ActiveExcludedBoxes ; uint32 ChangeTag ; # if WITH_EDITOR FLandscapePhysicalMaterialRenderTask PhysicalMaterialTask ; uint32)",
    "insertText": "CalculatePhysicalMaterialTaskHash()"
  },
  {
    "label": "GetRenderPhysicalMaterials()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRenderPhysicalMaterials(TArray<UPhysicalMaterial*>& OutPhysicalMaterials)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "BeginCacheForCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "BeginCacheForCookedPlatformData(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditChange(FProperty* PropertyThatWillChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "UpdateEditToolRenderData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEditToolRenderData()"
  },
  {
    "label": "FixupWeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupWeightmaps()"
  },
  {
    "label": "FixupWeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupWeightmaps(const FGuid& InEditLayerGuid)"
  },
  {
    "label": "RepairInvalidTextures()",
    "kind": "Method",
    "detail": "Function (TArray<UTexture*>)",
    "insertText": "RepairInvalidTextures()"
  },
  {
    "label": "UpdateLayerAllowListFromPaintedLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayerAllowListFromPaintedLayers()"
  },
  {
    "label": "GetLightMapResolution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLightMapResolution(int32& Width, int32& Height)"
  },
  {
    "label": "GetStaticLightMapResolution()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStaticLightMapResolution()"
  },
  {
    "label": "GetLightAndShadowMapMemoryUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLightAndShadowMapMemoryUsage(int32& LightMapMemoryUsage, int32& ShadowMapMemoryUsage)"
  },
  {
    "label": "GetStaticLightingInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStaticLightingInfo(FStaticLightingPrimitiveInfo& OutPrimitiveInfo,const TArray<ULightComponent*>& InRelevantLights,const FLightingBuildOptions& Options)"
  },
  {
    "label": "AddMapBuildDataGUIDs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMapBuildDataGUIDs(TSet<FGuid>& InGUIDs)"
  },
  {
    "label": "GetUsedMaterials()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetUsedMaterials(TArray<UMaterialInterface*>& OutMaterials, bool bGetDebugMaterials = false)"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (FPrimitiveSceneProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "GetStaticLightingType()",
    "kind": "Method",
    "detail": "Function (ELightMapInteractionType)",
    "insertText": "GetStaticLightingType()"
  },
  {
    "label": "GetStreamingRenderAssetInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStreamingRenderAssetInfo(FStreamingTextureLevelContext& LevelContext, TArray<FStreamingRenderAssetPrimitiveInfo>& OutStreamingRenderAssets)"
  },
  {
    "label": "IsPrecomputedLightingValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrecomputedLightingValid()"
  },
  {
    "label": "GetRuntimeVirtualTextures()",
    "kind": "Method",
    "detail": "Function (TArray<URuntimeVirtualTexture*> const&)",
    "insertText": "GetRuntimeVirtualTextures()"
  },
  {
    "label": "GetVirtualTextureRenderPassType()",
    "kind": "Method",
    "detail": "Function (ERuntimeVirtualTextureMainPassType)",
    "insertText": "GetVirtualTextureRenderPassType()"
  },
  {
    "label": "GetHeightmap()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "GetHeightmap(bool InReturnEditingHeightmap = false)"
  },
  {
    "label": "GetHeightmap()",
    "kind": "Method",
    "detail": "Function (UTexture2D*)",
    "insertText": "GetHeightmap(const FGuid& InLayerGuid)"
  },
  {
    "label": "GetWeightmapTextures()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<UTexture2D>>&)",
    "insertText": "GetWeightmapTextures(bool InReturnEditingWeightmap = false)"
  },
  {
    "label": "GetWeightmapTextures()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<UTexture2D>>&)",
    "insertText": "GetWeightmapTextures(const FGuid& InLayerGuid)"
  },
  {
    "label": "GetRenderedWeightmapTexturesForFeatureLevel()",
    "kind": "Method",
    "detail": "Function (const TArray<UTexture2D*>&)",
    "insertText": "GetRenderedWeightmapTexturesForFeatureLevel(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "GetWeightmapLayerAllocations()",
    "kind": "Method",
    "detail": "Function (TArray<FWeightmapLayerAllocationInfo>&)",
    "insertText": "GetWeightmapLayerAllocations(bool InReturnEditingWeightmap = false)"
  },
  {
    "label": "GetWeightmapLayerAllocations()",
    "kind": "Method",
    "detail": "Function (TArray<FWeightmapLayerAllocationInfo>&)",
    "insertText": "GetWeightmapLayerAllocations(const FGuid& InLayerGuid)"
  },
  {
    "label": "GetCurrentRuntimeWeightmapLayerAllocations()",
    "kind": "Method",
    "detail": "Function (TArray<FWeightmapLayerAllocationInfo>&)",
    "insertText": "GetCurrentRuntimeWeightmapLayerAllocations()"
  },
  {
    "label": "GetPerLODOverrideMaterials()",
    "kind": "Method",
    "detail": "Function (const TArray<FLandscapePerLODMaterialOverride>&)",
    "insertText": "GetPerLODOverrideMaterials()"
  },
  {
    "label": "SetHeightmap()",
    "kind": "Method",
    "detail": "Function (PerLODOverrideMaterials = InValue ; } void)",
    "insertText": "SetHeightmap(UTexture2D* NewHeightmap)"
  },
  {
    "label": "SetWeightmapTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeightmapTextures(const TArray<UTexture2D*>& InNewWeightmapTextures, bool InApplyToEditingWeightmap = false)"
  },
  {
    "label": "SetWeightmapTexturesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeightmapTexturesInternal(const TArray<UTexture2D*>& InNewWeightmapTextures, const FGuid& InEditLayerGuid)"
  },
  {
    "label": "SetWeightmapLayerAllocations()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetWeightmapLayerAllocations(const TArray<FWeightmapLayerAllocationInfo>& InNewWeightmapLayerAllocations)"
  },
  {
    "label": "ComputeLayerHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ComputeLayerHash(bool InReturnEditingHash = true)"
  },
  {
    "label": "SetWeightmapTexturesUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeightmapTexturesUsage(const TArray<ULandscapeWeightmapUsage*>& InNewWeightmapTexturesUsage, bool InApplyToEditingWeightmap = false)"
  },
  {
    "label": "SetWeightmapTexturesUsageInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeightmapTexturesUsageInternal(const TArray<ULandscapeWeightmapUsage*>& InNewWeightmapTexturesUsage, const FGuid& InEditLayerGuid)"
  },
  {
    "label": "GetWeightmapTexturesUsage()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<ULandscapeWeightmapUsage>>&)",
    "insertText": "GetWeightmapTexturesUsage(bool InReturnEditingWeightmap = false)"
  },
  {
    "label": "GetWeightmapTexturesUsage()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<ULandscapeWeightmapUsage>>&)",
    "insertText": "GetWeightmapTexturesUsage(const FGuid& InLayerGuid)"
  },
  {
    "label": "InitializeLayersWeightmapUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLayersWeightmapUsage(const FGuid& InLayerGuid)"
  },
  {
    "label": "HasLayersData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLayersData()"
  },
  {
    "label": "GetLayerData()",
    "kind": "Method",
    "detail": "Function (const FLandscapeLayerComponentData*)",
    "insertText": "GetLayerData(const FGuid& InLayerGuid)"
  },
  {
    "label": "AddLayerData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLayerData(const FGuid& InLayerGuid, const FLandscapeLayerComponentData& InData)"
  },
  {
    "label": "AddDefaultLayerData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDefaultLayerData(const FGuid& InLayerGuid, const TArray<ULandscapeComponent*>& InComponentsUsingHeightmap, TMap<UTexture2D*, UTexture2D*>& InOutCreatedHeightmapTextures)"
  },
  {
    "label": "RemoveLayerData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLayerData(const FGuid& InLayerGuid)"
  },
  {
    "label": "ForEachLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLayer(TFunctionRef<void(const FGuid&, struct FLandscapeLayerComponentData&)> Fn)"
  },
  {
    "label": "GetEditingLayer()",
    "kind": "Method",
    "detail": "Function (FLandscapeLayerComponentData*)",
    "insertText": "GetEditingLayer()"
  },
  {
    "label": "GetEditingLayerGUID()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetEditingLayerGUID()"
  },
  {
    "label": "CopyFinalLayerIntoEditingLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFinalLayerIntoEditingLayer(FLandscapeEditDataInterface& DataInterface, TSet<UTexture2D*>& ProcessedHeightmaps)"
  },
  {
    "label": "SetPendingCollisionDataUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPendingCollisionDataUpdate(bool bInPendingCollisionDataUpdate)"
  },
  {
    "label": "GetPendingCollisionDataUpdate()",
    "kind": "Method",
    "detail": "Function (bPendingCollisionDataUpdate = bInPendingCollisionDataUpdate ; } bool)",
    "insertText": "GetPendingCollisionDataUpdate()"
  },
  {
    "label": "GetPendingLayerCollisionDataUpdate()",
    "kind": "Method",
    "detail": "Function (bPendingLayerCollisionDataUpdate = bInPendingLayerCollisionDataUpdate ; } bool)",
    "insertText": "GetPendingLayerCollisionDataUpdate()"
  },
  {
    "label": "GetNumMaterials()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR int32)",
    "insertText": "GetNumMaterials()"
  },
  {
    "label": "GetMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetMaterial(int32 ElementIndex)"
  },
  {
    "label": "SetMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterial(int32 ElementIndex, UMaterialInterface* Material)"
  },
  {
    "label": "PreFeatureLevelChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreFeatureLevelChange(ERHIFeatureLevel::Type PendingFeatureLevel)"
  },
  {
    "label": "GetMaterialPropertyPath()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR bool)",
    "insertText": "GetMaterialPropertyPath(int32 ElementIndex, UObject*& OutOwner, FString& OutPropertyPath, FProperty*& OutProperty)"
  },
  {
    "label": "DestroyComponent()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DestroyComponent(bool bPromoteChildren = false)"
  },
  {
    "label": "CalcBounds()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds)",
    "insertText": "CalcBounds(const FTransform& LocalToWorld)"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "OnUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnregister()"
  },
  {
    "label": "InvalidateLightingCacheDetailed()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "InvalidateLightingCacheDetailed(bool bInvalidateBuildEnqueuedLighting, bool bTranslationOnly)"
  },
  {
    "label": "PropagateLightingScenarioChange()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PropagateLightingScenarioChange()"
  },
  {
    "label": "IsHLODRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHLODRelevant()"
  },
  {
    "label": "GetLandscapeInfo()",
    "kind": "Method",
    "detail": "Function (ULandscapeInfo*)",
    "insertText": "GetLandscapeInfo()"
  },
  {
    "label": "GetGrassTypes()",
    "kind": "Method",
    "detail": "Function (const TArray<TObjectPtr<ULandscapeGrassType>>&)",
    "insertText": "GetGrassTypes()"
  },
  {
    "label": "InvalidateGrassTypeSummary()",
    "kind": "Method",
    "detail": "Function (GrassTypes = InGrassTypes ;)",
    "insertText": "InvalidateGrassTypeSummary()"
  },
  {
    "label": "MaterialHasGrass()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "MaterialHasGrass()"
  },
  {
    "label": "GetGrassTypesMaxDiscardDistance()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "GetGrassTypesMaxDiscardDistance()"
  },
  {
    "label": "UpdateGrassTypes()",
    "kind": "Method",
    "detail": "Function (GrassTypeSummary . MaxInstanceDiscardDistance = InGrassTypesMaxDiscardDistance ; GrassTypeSummary . bInvalid = false ; } bool)",
    "insertText": "UpdateGrassTypes(bool bForceUpdate = false)"
  },
  {
    "label": "DeleteLayerIfAllZero()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "DeleteLayerIfAllZero(const FGuid& InEditLayerGuid, const uint8* const TexDataPtr, int32 TexSize, int32 LayerIdx, bool bShouldDirtyPackage)"
  },
  {
    "label": "DeleteLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLayer(ULandscapeLayerInfoObject* LayerInfo, FLandscapeEditDataInterface& LandscapeEdit)"
  },
  {
    "label": "DeleteLayerInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLayerInternal(ULandscapeLayerInfoObject* LayerInfo, FLandscapeEditDataInterface& LandscapeEdit, const FGuid& InEditLayerGuid)"
  },
  {
    "label": "DeleteLayerAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLayerAllocation(const FGuid& InEditLayerGuid, int32 InLayerAllocationIdx, bool bInShouldDirtyPackage)"
  },
  {
    "label": "FillLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillLayer(ULandscapeLayerInfoObject* LayerInfo, FLandscapeEditDataInterface& LandscapeEdit)"
  },
  {
    "label": "ReplaceLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceLayer(ULandscapeLayerInfoObject* FromLayerInfo, ULandscapeLayerInfoObject* ToLayerInfo, FLandscapeEditDataInterface& LandscapeEdit)"
  },
  {
    "label": "ReplaceLayerInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceLayerInternal(ULandscapeLayerInfoObject* FromLayerInfo, ULandscapeLayerInfoObject* ToLayerInfo, FLandscapeEditDataInterface& LandscapeEdit, const FGuid& InEditLayerGUID)"
  },
  {
    "label": "RemoveGrassMap()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "RemoveGrassMap()"
  },
  {
    "label": "CanRenderGrassMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenderGrassMap()"
  },
  {
    "label": "ComputeGrassMapGenerationHash()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR uint32)",
    "insertText": "ComputeGrassMapGenerationHash()"
  },
  {
    "label": "IsGrassMapOutdated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGrassMapOutdated()"
  },
  {
    "label": "RenderWPOHeightmap()",
    "kind": "Method",
    "detail": "Function (TArray<uint16>)",
    "insertText": "RenderWPOHeightmap(int32 LOD)"
  },
  {
    "label": "SerializeStateHashes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeStateHashes(FArchive& Ar)"
  },
  {
    "label": "GenerateMobileWeightmapLayerAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateMobileWeightmapLayerAllocations()"
  },
  {
    "label": "GenerateMobilePlatformPixelData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateMobilePlatformPixelData(bool bIsCooking, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "CheckGenerateMobilePlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckGenerateMobilePlatformData(bool bIsCooking, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "GetCustomHLODBuilderClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<class UHLODBuilder>)",
    "insertText": "GetCustomHLODBuilderClass()"
  },
  {
    "label": "GetCurrentRuntimeMaterialInstanceCount()",
    "kind": "Method",
    "detail": "Function (# endif int32)",
    "insertText": "GetCurrentRuntimeMaterialInstanceCount()"
  },
  {
    "label": "GetCurrentRuntimeMaterialInterface()",
    "kind": "Method",
    "detail": "Function (class UMaterialInterface*)",
    "insertText": "GetCurrentRuntimeMaterialInterface(int32 InIndex)"
  },
  {
    "label": "GetMaterialInstanceCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaterialInstanceCount(bool InDynamic = true)"
  },
  {
    "label": "GetMaterialInstance()",
    "kind": "Method",
    "detail": "Function (class UMaterialInstance*)",
    "insertText": "GetMaterialInstance(int32 InIndex, bool InDynamic = true)"
  },
  {
    "label": "GetLandscapeActor()",
    "kind": "Method",
    "detail": "Function (ALandscape*)",
    "insertText": "GetLandscapeActor()"
  },
  {
    "label": "GetLevel()",
    "kind": "Method",
    "detail": "Function (ULevel*)",
    "insertText": "GetLevel()"
  },
  {
    "label": "GetGeneratedTexturesAndMaterialInstances()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "GetGeneratedTexturesAndMaterialInstances(TArray<UObject*>& OutTexturesAndMaterials)"
  },
  {
    "label": "GetGeneratedTextures()",
    "kind": "Method",
    "detail": "Function (TArray<UTexture*>)",
    "insertText": "GetGeneratedTextures()"
  },
  {
    "label": "GetGeneratedMaterialInstances()",
    "kind": "Method",
    "detail": "Function (TArray<UMaterialInstance*>)",
    "insertText": "GetGeneratedMaterialInstances()"
  },
  {
    "label": "GetLandscapeProxy()",
    "kind": "Method",
    "detail": "Function (# endif ALandscapeProxy*)",
    "insertText": "GetLandscapeProxy()"
  },
  {
    "label": "GetSectionBase()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetSectionBase()"
  },
  {
    "label": "GetComponentKey()",
    "kind": "Method",
    "detail": "Function (} FIntPoint)",
    "insertText": "GetComponentKey()"
  },
  {
    "label": "SetSectionBase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSectionBase(FIntPoint InSectionBase)"
  },
  {
    "label": "GetNumRelevantMips()",
    "kind": "Method",
    "detail": "Function (SectionBaseX = InSectionBase . X ; SectionBaseY = InSectionBase . Y ; } int32)",
    "insertText": "GetNumRelevantMips()"
  },
  {
    "label": "GetLightingGuid()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetLightingGuid()"
  },
  {
    "label": "NullGuid()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA return LightingGuid ; # else const FGuid)",
    "insertText": "NullGuid(0, 0, 0, 0)"
  },
  {
    "label": "NewGuid()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA LightingGuid =)",
    "insertText": "NewGuid()"
  },
  {
    "label": "GetMapBuildDataId()",
    "kind": "Method",
    "detail": "Function (# endif } FGuid)",
    "insertText": "GetMapBuildDataId()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(int32 InBaseX, int32 InBaseY, int32 InComponentSizeQuads, int32 InNumSubsections, int32 InSubsectionSizeQuads)"
  },
  {
    "label": "GetLandscapeMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetLandscapeMaterial(int8 InLODIndex = INDEX_NONE)"
  },
  {
    "label": "GetLandscapeHoleMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetLandscapeHoleMaterial()"
  },
  {
    "label": "UpdateCachedBounds()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "UpdateCachedBounds(bool bInApproximateBounds = false)"
  },
  {
    "label": "UpdateMaterialInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialInstances()"
  },
  {
    "label": "UpdateMaterialInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialInstances(FMaterialUpdateContext& InOutMaterialContext, TArray<class FComponentRecreateRenderStateContext>& InOutRecreateRenderStateContext)"
  },
  {
    "label": "UpdateMaterialInstances_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialInstances_Internal(FMaterialUpdateContext& Context)"
  },
  {
    "label": "GetCombinationMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInstanceConstant*)",
    "insertText": "GetCombinationMaterial(FMaterialUpdateContext* InMaterialUpdateContext, const TArray<FWeightmapLayerAllocationInfo>& Allocations, int8 InLODIndex, bool bMobile = false)"
  },
  {
    "label": "GenerateHeightmapMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHeightmapMips(TArray<FColor*>& HeightmapTextureMipData, int32 ComponentX1=0, int32 ComponentY1=0, int32 ComponentX2=MAX_int32, int32 ComponentY2=MAX_int32, FLandscapeTextureDataInfo* TextureDataInfo=nullptr)"
  },
  {
    "label": "CreateEmptyTextureMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEmptyTextureMips(UTexture2D* Texture, bool bClear = false)"
  },
  {
    "label": "GenerateMipsTempl()",
    "kind": "Method",
    "detail": "Function (template<DataType> void)",
    "insertText": "GenerateMipsTempl(int32 InNumSubsections, int32 InSubsectionSizeQuads, UTexture2D* WeightmapTexture, DataType* BaseMipData)"
  },
  {
    "label": "GenerateWeightmapMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateWeightmapMips(int32 InNumSubsections, int32 InSubsectionSizeQuads, UTexture2D* WeightmapTexture, FColor* BaseMipData)"
  },
  {
    "label": "UpdateMipsTempl()",
    "kind": "Method",
    "detail": "Function (template<DataType> void)",
    "insertText": "UpdateMipsTempl(int32 InNumSubsections, int32 InSubsectionSizeQuads, UTexture2D* WeightmapTexture, TArray<DataType*>& WeightmapTextureMipData, int32 ComponentX1=0, int32 ComponentY1=0, int32 ComponentX2=MAX_int32, int32 ComponentY2=MAX_int32, FLandscapeTextureDataInfo* TextureDataInfo=nullptr)"
  },
  {
    "label": "UpdateWeightmapMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWeightmapMips(int32 InNumSubsections, int32 InSubsectionSizeQuads, UTexture2D* WeightmapTexture, TArray<FColor*>& WeightmapTextureMipData, int32 ComponentX1=0, int32 ComponentY1=0, int32 ComponentX2=MAX_int32, int32 ComponentY2=MAX_int32, FLandscapeTextureDataInfo* TextureDataInfo=nullptr)"
  },
  {
    "label": "UpdateDataMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDataMips(int32 InNumSubsections, int32 InSubsectionSizeQuads, UTexture2D* Texture, TArray<uint8*>& TextureMipData, int32 ComponentX1=0, int32 ComponentY1=0, int32 ComponentX2=MAX_int32, int32 ComponentY2=MAX_int32, FLandscapeTextureDataInfo* TextureDataInfo=nullptr)"
  },
  {
    "label": "UpdateCollisionHeightData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionHeightData(const FColor* HeightmapTextureMipData, const FColor* SimpleCollisionHeightmapTextureData, int32 ComponentX1=0, int32 ComponentY1=0, int32 ComponentX2=MAX_int32, int32 ComponentY2=MAX_int32, bool bUpdateBounds=false, const FColor* XYOffsetTextureMipData=nullptr, bool bInUpdateHeightfieldRegion=true)"
  },
  {
    "label": "DestroyCollisionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCollisionData()"
  },
  {
    "label": "UpdateCollisionData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionData(bool bInUpdateHeightfieldRegion = true)"
  },
  {
    "label": "UpdateDirtyCollisionHeightData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDirtyCollisionHeightData(FIntRect Region)"
  },
  {
    "label": "ClearDirtyCollisionHeightData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDirtyCollisionHeightData()"
  },
  {
    "label": "UpdateCollisionLayerData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionLayerData(const FColor* const* WeightmapTextureMipData, const FColor* const* const SimpleCollisionWeightmapTextureMipData, int32 ComponentX1=0, int32 ComponentY1=0, int32 ComponentX2=MAX_int32, int32 ComponentY2=MAX_int32)"
  },
  {
    "label": "UpdateCollisionLayerData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionLayerData()"
  },
  {
    "label": "CanUpdatePhysicalMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUpdatePhysicalMaterial()"
  },
  {
    "label": "UpdatePhysicalMaterialTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicalMaterialTasks()"
  },
  {
    "label": "FinalizePhysicalMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizePhysicalMaterial(bool bInImmediatePhysicsRebuild)"
  },
  {
    "label": "UpdateCollisionPhysicalMaterialData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionPhysicalMaterialData(TArray<UPhysicalMaterial*> const& InPhysicalMaterials, TArray<uint8> const& InMaterialIds)"
  },
  {
    "label": "ReallocateWeightmaps()",
    "kind": "Method",
    "detail": "Function (TArray<UTexture*>)",
    "insertText": "ReallocateWeightmaps(FLandscapeEditDataInterface* DataInterface, const FGuid& InEditLayerGuid, bool bInSaveToTransactionBuffer, bool bInForceReallocate, ALandscapeProxy* InTargetProxy, TSet<ULandscapeComponent*>* InRestrictSharingToComponents)"
  },
  {
    "label": "IsLandscapeHoleMaterialValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLandscapeHoleMaterialValid()"
  },
  {
    "label": "ComponentHasVisibilityPainted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentHasVisibilityPainted()"
  },
  {
    "label": "GetVisibilityLayer()",
    "kind": "Method",
    "detail": "Function (ULandscapeLayerInfoObject*)",
    "insertText": "GetVisibilityLayer()"
  },
  {
    "label": "GetLayerAllocationKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLayerAllocationKey(const TArray<FWeightmapLayerAllocationInfo>& Allocations, UMaterialInterface* LandscapeMaterial, bool bMobile = false)"
  },
  {
    "label": "ValidateCombinationMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateCombinationMaterial(UMaterialInstanceConstant* InCombinationMaterial)"
  },
  {
    "label": "GetLayerDebugColorKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLayerDebugColorKey(int32& R, int32& G, int32& B)"
  },
  {
    "label": "RemoveInvalidWeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidWeightmaps()"
  },
  {
    "label": "RemoveInvalidWeightmaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidWeightmaps(const FGuid& InEditLayerGuid)"
  },
  {
    "label": "InitHeightmapData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitHeightmapData(TArray<FColor>& Heights, bool bUpdateCollision)"
  },
  {
    "label": "InitWeightmapData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWeightmapData(TArray<ULandscapeLayerInfoObject*>& LayerInfos, TArray<TArray<uint8> >& Weights)"
  },
  {
    "label": "GetLayerWeightAtLocation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLayerWeightAtLocation(const FVector& InLocation, ULandscapeLayerInfoObject* LayerInfo, TArray<uint8>* LayerCache = NULL, bool bUseEditingWeightmap = false)"
  },
  {
    "label": "GetComponentExtent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComponentExtent(int32& MinX, int32& MinY, int32& MaxX, int32& MaxY)"
  },
  {
    "label": "GetComponentExtent()",
    "kind": "Method",
    "detail": "Function (FIntRect)",
    "insertText": "GetComponentExtent()"
  },
  {
    "label": "ClearUpdateFlagsForModes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUpdateFlagsForModes(uint32 InModeMask)"
  },
  {
    "label": "RequestWeightmapUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestWeightmapUpdate(bool bUpdateAll = false, bool bUpdateCollision = true, bool bInUserTriggered = false)"
  },
  {
    "label": "RequestHeightmapUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestHeightmapUpdate(bool bUpdateAll = false, bool bUpdateCollision = true, bool bInUserTriggered = false)"
  },
  {
    "label": "RequestEditingClientUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestEditingClientUpdate(bool bInUserTriggered = false)"
  },
  {
    "label": "RequestDeferredClientUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestDeferredClientUpdate()"
  },
  {
    "label": "GetLayerUpdateFlagPerMode()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetLayerUpdateFlagPerMode()"
  },
  {
    "label": "GetUsedPaintLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedPaintLayers(const FGuid& InLayerGuid, TArray<ULandscapeLayerInfoObject*>& OutUsedLayerInfos)"
  },
  {
    "label": "GetLandscapeComponentNeighborsToRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLandscapeComponentNeighborsToRender(TSet<ULandscapeComponent*>& NeighborComponents)"
  },
  {
    "label": "GetLandscapeComponentWeightmapsToRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLandscapeComponentWeightmapsToRender(TSet<ULandscapeComponent*>& WeightmapComponents)"
  },
  {
    "label": "GetLandscapeComponentNeighbors3x3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLandscapeComponentNeighbors3x3(TStaticArray<ULandscapeComponent*, 9>& OutNeighborComponents)"
  },
  {
    "label": "UpdateNavigationRelevance()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "UpdateNavigationRelevance()"
  },
  {
    "label": "UpdateRejectNavmeshUnderneath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRejectNavmeshUnderneath()"
  },
  {
    "label": "UpdatedSharedPropertiesFromActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatedSharedPropertiesFromActor()"
  },
  {
    "label": "SetLOD()",
    "kind": "Method",
    "detail": "Function (class FLandscapeComponentSceneProxy ; struct FLandscapeComponentDataInterface ; void)",
    "insertText": "SetLOD(bool bForced, int32 InLODValue)"
  },
  {
    "label": "SetNaniteActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNaniteActive(bool bValue)"
  },
  {
    "label": "IsNaniteActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNaniteActive()"
  },
  {
    "label": "SetCollisionComponent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCollisionComponent(ULandscapeHeightfieldCollisionComponent* InCollisionComponent)"
  },
  {
    "label": "SetUserTriggeredChangeRequested()",
    "kind": "Method",
    "detail": "Function (CollisionComponentRef = InCollisionComponent ; } void)",
    "insertText": "SetUserTriggeredChangeRequested(bool bInUserTriggeredChangeRequested)"
  },
  {
    "label": "GetUserTriggeredChangeRequested()",
    "kind": "Method",
    "detail": "Function (bUserTriggeredChangeRequested = bInUserTriggeredChangeRequested ; } bool)",
    "insertText": "GetUserTriggeredChangeRequested()"
  },
  {
    "label": "UpdateCollisionHeightBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisionHeightBuffer(int32 InComponentX1, int32 InComponentY1, int32 InComponentX2, int32 InComponentY2, int32 InCollisionMipLevel, int32 InHeightmapSizeU, int32 InHeightmapSizeV, const FColor* const InHeightmapTextureMipData, uint16* CollisionHeightData, uint16* GrassHeightData, const FColor* const InXYOffsetTextureMipData, uint16* CollisionXYOffsetData)"
  },
  {
    "label": "UpdateDominantLayerBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDominantLayerBuffer(int32 InComponentX1, int32 InComponentY1, int32 InComponentX2, int32 InComponentY2, int32 InCollisionMipLevel, int32 InWeightmapSizeU, int32 InDataLayerIdx, const TArray<uint8*>& InCollisionDataPtrs, const TArray<ULandscapeLayerInfoObject*>& InLayerInfos, uint8* DominantLayerData)"
  },
  {
    "label": "SupportsStaticLighting()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "SupportsStaticLighting()"
  }
]