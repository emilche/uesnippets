[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FComponentTransformDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentTransformDetails"
  },
  {
    "label": "FOptionalVector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalVector"
  },
  {
    "label": "FComponentTransformDetails()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetSelection . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Delegates / Delegate . h \" # include \" Framework / Commands / UIAction . h \" # include \" HAL / PlatformCrt . h \" # include \" IDetailCustomNodeBuilder . h \" # include \" Internationalization / Text . h \" # include \" Math / Axis . h \" # include \" Math / Rotator . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector . h \" # include \" Misc / Optional . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Widgets / Input / NumericTypeInterface . h \" class FDetailWidgetRow ; class FMenuBuilder ; class FNotifyHook ; class IDetailChildrenBuilder ; class IDetailLayoutBuilder ; class IPropertyHandle ; class SWidget ; class UObject ; struct FSlateBrush ; namespace ETransformField { enum Type { Location,Rotation,Scale } ; } class FComponentTransformDetails : public TSharedFromThis<FComponentTransformDetails>,public IDetailCustomNodeBuilder,public TNumericUnitTypeInterface<FVector::FReal> { public :)",
    "insertText": "FComponentTransformDetails(const TArray< TWeakObjectPtr<UObject> >& InSelectedObjects, const FSelectedActorInfo& InSelectedActorInfo, IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "FComponentTransformDetails()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FComponentTransformDetails()"
  },
  {
    "label": "GenerateHeaderRowContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHeaderRowContent(FDetailWidgetRow& NodeRow)"
  },
  {
    "label": "GenerateChildContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateChildContent(IDetailChildrenBuilder& ChildrenBuilder)"
  },
  {
    "label": "RequiresTick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresTick()"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnRebuildChildren(FSimpleDelegate OnRebuildChildren)"
  },
  {
    "label": "HideTransformField()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HideTransformField(const ETransformField::Type InTransformField)"
  },
  {
    "label": "HiddenFieldMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HiddenFieldMask(1 << InTransformField)"
  },
  {
    "label": "CacheDetails()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "CacheDetails()"
  },
  {
    "label": "GetIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsEnabled()"
  },
  {
    "label": "GetIsLocationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsLocationEnabled()"
  },
  {
    "label": "GetIsRotationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsRotationEnabled()"
  },
  {
    "label": "GetIsScaleEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsScaleEnabled()"
  },
  {
    "label": "GetIsTransformComponentEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsTransformComponentEnabled(FName ComponentName)"
  },
  {
    "label": "GetAxisFilteredVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAxisFilteredVector(EAxisList::Type Axis, const FVector& NewValue, const FVector& OldValue)"
  },
  {
    "label": "OnSetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetTransform(ETransformField::Type TransformField, EAxisList::Type Axis, FVector NewValue, bool bMirror, bool bCommitted)"
  },
  {
    "label": "OnSetTransformAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetTransformAxis(FVector::FReal NewValue, ETextCommit::Type CommitInfo, ETransformField::Type TransformField, EAxisList::Type Axis, bool bCommitted)"
  },
  {
    "label": "BeginSliderTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSliderTransaction(FText ActorTransaction, FText ComponentTransaction)"
  },
  {
    "label": "OnBeginRotationSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginRotationSlider()"
  },
  {
    "label": "OnEndRotationSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndRotationSlider(FRotator::FReal NewValue)"
  },
  {
    "label": "OnBeginLocationSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginLocationSlider()"
  },
  {
    "label": "OnEndLocationSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndLocationSlider(FVector::FReal NewValue)"
  },
  {
    "label": "OnBeginScaleSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginScaleSlider()"
  },
  {
    "label": "OnEndScaleSlider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndScaleSlider(FVector::FReal NewValue)"
  },
  {
    "label": "GetPreserveScaleRatioImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetPreserveScaleRatioImage()"
  },
  {
    "label": "IsPreserveScaleRatioChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsPreserveScaleRatioChecked()"
  },
  {
    "label": "OnPreserveScaleRatioToggled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreserveScaleRatioToggled(ECheckBoxState NewState)"
  },
  {
    "label": "BuildTransformFieldLabel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildTransformFieldLabel(ETransformField::Type TransformField)"
  },
  {
    "label": "GetTransformFieldText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTransformFieldText(ETransformField::Type TransformField)"
  },
  {
    "label": "GetLocationText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocationText()"
  },
  {
    "label": "GetRotationText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRotationText()"
  },
  {
    "label": "GetScaleText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetScaleText()"
  },
  {
    "label": "OnSetAbsoluteTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetAbsoluteTransform(ETransformField::Type TransformField, bool bAbsoluteEnabled)"
  },
  {
    "label": "IsAbsoluteTransformChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAbsoluteTransformChecked(ETransformField::Type TransformField, bool bAbsoluteEnabled=true)"
  },
  {
    "label": "CanChangeAbsoluteFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChangeAbsoluteFlag(ETransformField::Type TransformField)"
  },
  {
    "label": "OnCanCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanCopy(ETransformField::Type TransformField)"
  },
  {
    "label": "OnCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopy(ETransformField::Type TransformField)"
  },
  {
    "label": "OnPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaste(ETransformField::Type TransformField)"
  },
  {
    "label": "OnPasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId, ETransformField::Type InTransformField)"
  },
  {
    "label": "PasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteFromText(const FString& InTag, const FString& InText, ETransformField::Type InTransformField)"
  },
  {
    "label": "CreateCopyAction()",
    "kind": "Method",
    "detail": "Function (FUIAction)",
    "insertText": "CreateCopyAction(ETransformField::Type TransformField)"
  },
  {
    "label": "CreatePasteAction()",
    "kind": "Method",
    "detail": "Function (FUIAction)",
    "insertText": "CreatePasteAction(ETransformField::Type TransformField)"
  },
  {
    "label": "OnLocationResetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocationResetClicked()"
  },
  {
    "label": "OnRotationResetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRotationResetClicked()"
  },
  {
    "label": "OnScaleResetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScaleResetClicked()"
  },
  {
    "label": "ExtendXScaleContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendXScaleContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "ExtendYScaleContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendYScaleContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "ExtendZScaleContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendZScaleContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "OnXScaleMirrored()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnXScaleMirrored()"
  },
  {
    "label": "OnYScaleMirrored()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnYScaleMirrored()"
  },
  {
    "label": "OnZScaleMirrored()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnZScaleMirrored()"
  },
  {
    "label": "GetLocationX()",
    "kind": "Method",
    "detail": "Function (TOptional<FVector::FReal>)",
    "insertText": "GetLocationX()"
  },
  {
    "label": "GetRotationX()",
    "kind": "Method",
    "detail": "Function (TOptional<FRotator::FReal>)",
    "insertText": "GetRotationX()"
  },
  {
    "label": "GetScaleX()",
    "kind": "Method",
    "detail": "Function (TOptional<FVector::FReal>)",
    "insertText": "GetScaleX()"
  },
  {
    "label": "CacheCommonLocationUnits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheCommonLocationUnits()"
  },
  {
    "label": "FindOrCreatePropertyHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "FindOrCreatePropertyHandle(FName PropertyName, IDetailChildrenBuilder& ChildrenBuilder)"
  },
  {
    "label": "UpdatePropertyHandlesObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertyHandlesObjects(const TArray<UObject*> NewSceneComponents)"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& ReplacementMap)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (private : template<NumericType> struct FOptionalVector { void)",
    "insertText": "Set(const FVector& InVec)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (X = InVec . X ; Y = InVec . Y ; Z = InVec . Z ; } void)",
    "insertText": "Set(const FRotator& InRot)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (X = InRot . Roll ; Y = InRot . Pitch ; Z = InRot . Yaw ; } bool)",
    "insertText": "IsSet()"
  }
]