[
  {
    "label": "FImplicitObjectUnion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObjectUnion"
  },
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FTriangleMeshImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMeshImplicitObject"
  },
  {
    "label": "UPhysicalMaterialMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterialMask"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FKAggregateGeom",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKAggregateGeom"
  },
  {
    "label": "FPhysicalMaterialMaskParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicalMaterialMaskParams"
  },
  {
    "label": "FGeometryAddParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryAddParams"
  },
  {
    "label": "FGeometryAddParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EngineGlobals . h \" # include \" Engine / EngineTypes . h \" # include \" PhysicsInterfaceDeclares . h \" # include \" BodySetupEnums . h \" # include \" PhysicsInterfaceTypesCore . h \" # include \" Chaos / Serializable . h \" namespace Chaos { class FImplicitObjectUnion ; class FImplicitObject ; class FTriangleMeshImplicitObject ; } class UPhysicalMaterialMask ; class UMaterialInterface ; # if ! UE_BUILD_SHIPPING # define DETECT_SQ_HITCHES 1 # endif # ifndef DETECT_SQ_HITCHES # define DETECT_SQ_HITCHES 0 # endif struct FKAggregateGeom ; struct FPhysicalMaterialMaskParams { UPhysicalMaterialMask* PhysicalMaterialMask ; UMaterialInterface* PhysicalMaterialMap ; } ; struct FGeometryAddParams {)",
    "insertText": "FGeometryAddParams()"
  },
  {
    "label": "FGeometryAddParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGeometryAddParams(const FGeometryAddParams& Other) : bDoubleSided(Other.bDoubleSided) , CollisionData(Other.CollisionData) , CollisionTraceType(Other.CollisionTraceType) , Scale(Other.Scale) , SimpleMaterial(Other.SimpleMaterial) , ComplexMaterials(Other.ComplexMaterials) , ComplexMaterialMasks(Other.ComplexMaterialMasks) , LocalTransform(Other.LocalTransform) , WorldTransform(Other.WorldTransform) , Geometry(Other.Geometry) PRAGMA_DISABLE_DEPRECATION_WARNINGS , ChaosTriMeshes(Other.ChaosTriMeshes) PRAGMA_ENABLE_DEPRECATION_WARNINGS , TriMeshGeometries(Other.TriMeshGeometries)"
  }
]