[
  {
    "label": "ENUM_GL_ENTRYPOINTS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" StandaloneRendererPlatformHeaders . h \" # if ! PLATFORM_USES_GLES # if PLATFORM_WINDOWS PFNGLGENBUFFERSARBPROC glGenBuffers ; PFNGLBINDBUFFERARBPROC glBindBuffer ; PFNGLBUFFERDATAARBPROC glBufferData ; PFNGLDELETEBUFFERSARBPROC glDeleteBuffers ; PFNGLMAPBUFFERARBPROC glMapBuffer ; PFNGLUNMAPBUFFERARBPROC glUnmapBuffer ; PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements ; PFNGLBLENDEQUATIONPROC glBlendEquation ; PFNGLACTIVETEXTUREARBPROC glActiveTexture ; PFNGLCREATESHADERPROC glCreateShader ; PFNGLSHADERSOURCEPROC glShaderSource ; PFNGLCOMPILESHADERPROC glCompileShader ; PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog ; PFNGLCREATEPROGRAMPROC glCreateProgram ; PFNGLATTACHSHADERPROC glAttachShader ; PFNGLDETACHSHADERPROC glDetachShader ; PFNGLLINKPROGRAMPROC glLinkProgram ; PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog ; PFNGLUSEPROGRAMPROC glUseProgram ; PFNGLDELETESHADERPROC glDeleteShader ; PFNGLDELETEPROGRAMPROC glDeleteProgram ; PFNGLGETSHADERIVPROC glGetShaderiv ; PFNGLGETPROGRAMIVPROC glGetProgramiv ; PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation ; PFNGLUNIFORM1FPROC glUniform1f ; PFNGLUNIFORM2FPROC glUniform2f ; PFNGLUNIFORM3FPROC glUniform3f ; PFNGLUNIFORM3FVPROC glUniform3fv ; PFNGLUNIFORM4FPROC glUniform4f ; PFNGLUNIFORM4FVPROC glUniform4fv ; PFNGLUNIFORM1IPROC glUniform1i ; PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv ; PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer ; PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation ; PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray ; PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray ; PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib ; PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform ; PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders ; PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation ; PFNWGLCREATECONTEXTATTRIBSARBPROC wglCreateContextAttribsARB ; PFNGLDEBUGMESSAGECALLBACKARBPROC glDebugMessageCallback ; PFNGLBINDVERTEXARRAYPROC glBindVertexArray ; PFNGLDELETEVERTEXARRAYSPROC glDeleteVertexArrays ; PFNGLGENVERTEXARRAYSPROC glGenVertexArrays ; PFNGLISVERTEXARRAYPROC glIsVertexArray ; # elif PLATFORM_LINUX # define)",
    "insertText": "ENUM_GL_ENTRYPOINTS(EnumMacro) \\ EnumMacro(PFNGLBINDTEXTUREPROC,glBindTexture) \\ EnumMacro(PFNGLBLENDFUNCPROC,glBlendFunc) \\ EnumMacro(PFNGLDELETETEXTURESPROC,glDeleteTextures) \\ EnumMacro(PFNGLDISABLEPROC,glDisable) \\ EnumMacro(PFNGLENABLEPROC,glEnable) \\ EnumMacro(PFNGLGENTEXTURESPROC,glGenTextures) \\ EnumMacro(PFNGLGETERRORPROC,glGetError) \\ EnumMacro(PFNGLPIXELSTOREIPROC,glPixelStorei) \\ EnumMacro(PFNGLPOLYGONMODEPROC,glPolygonMode) \\ EnumMacro(PFNGLSTENCILFUNCPROC,glStencilFunc) \\ EnumMacro(PFNGLSTENCILMASKPROC,glStencilMask) \\ EnumMacro(PFNGLSTENCILOPPROC,glStencilOp) \\ EnumMacro(PFNGLTEXIMAGE2DPROC,glTexImage2D) \\ EnumMacro(PFNGLTEXSUBIMAGE2DPROC,glTexSubImage2D) \\ EnumMacro(PFNGLTEXPARAMETERIPROC,glTexParameteri) \\ EnumMacro(PFNGLVIEWPORTPROC,glViewport) \\ EnumMacro(PFNGLBLENDEQUATIONPROC,glBlendEquation) \\ EnumMacro(PFNGLDRAWRANGEELEMENTSPROC,glDrawRangeElements) \\ EnumMacro(PFNGLACTIVETEXTUREPROC,glActiveTexture) \\ EnumMacro(PFNGLBINDBUFFERPROC,glBindBuffer) \\ EnumMacro(PFNGLDELETEBUFFERSPROC,glDeleteBuffers) \\ EnumMacro(PFNGLGENBUFFERSPROC,glGenBuffers) \\ EnumMacro(PFNGLBUFFERDATAPROC,glBufferData) \\ EnumMacro(PFNGLMAPBUFFERPROC,glMapBuffer) \\ EnumMacro(PFNGLUNMAPBUFFERPROC,glUnmapBuffer) \\ EnumMacro(PFNGLATTACHSHADERPROC,glAttachShader) \\ EnumMacro(PFNGLBINDATTRIBLOCATIONPROC,glBindAttribLocation) \\ EnumMacro(PFNGLCOMPILESHADERPROC,glCompileShader) \\ EnumMacro(PFNGLCREATEPROGRAMPROC,glCreateProgram) \\ EnumMacro(PFNGLCREATESHADERPROC,glCreateShader) \\ EnumMacro(PFNGLDELETEPROGRAMPROC,glDeleteProgram) \\ EnumMacro(PFNGLDELETESHADERPROC,glDeleteShader) \\ EnumMacro(PFNGLENABLEVERTEXATTRIBARRAYPROC,glEnableVertexAttribArray) \\ EnumMacro(PFNGLGETPROGRAMIVPROC,glGetProgramiv) \\ EnumMacro(PFNGLGETPROGRAMINFOLOGPROC,glGetProgramInfoLog) \\ EnumMacro(PFNGLGETSHADERIVPROC,glGetShaderiv) \\ EnumMacro(PFNGLGETSHADERINFOLOGPROC,glGetShaderInfoLog) \\ EnumMacro(PFNGLGETUNIFORMLOCATIONPROC,glGetUniformLocation) \\ EnumMacro(PFNGLLINKPROGRAMPROC,glLinkProgram) \\ EnumMacro(PFNGLSHADERSOURCEPROC,glShaderSource) \\ EnumMacro(PFNGLUSEPROGRAMPROC,glUseProgram) \\ EnumMacro(PFNGLUNIFORM2FPROC,glUniform2f) \\ EnumMacro(PFNGLUNIFORM4FPROC,glUniform4f) \\ EnumMacro(PFNGLUNIFORM1IPROC,glUniform1i) \\ EnumMacro(PFNGLUNIFORM4FVPROC,glUniform4fv) \\ EnumMacro(PFNGLUNIFORMMATRIX4FVPROC,glUniformMatrix4fv) \\ EnumMacro(PFNGLVERTEXATTRIBPOINTERPROC,glVertexAttribPointer) \\ EnumMacro(PFNGLDEBUGMESSAGECALLBACKARBPROC,glDebugMessageCallbackARB) \\ EnumMacro(PFNGLDEBUGMESSAGECONTROLARBPROC,glDebugMessageControlARB) \\ EnumMacro(PFNGLBINDVERTEXARRAYPROC,glBindVertexArray) \\ EnumMacro(PFNGLDELETEVERTEXARRAYSPROC,glDeleteVertexArrays) \\ EnumMacro(PFNGLGENVERTEXARRAYSPROC,glGenVertexArrays) \\ EnumMacro(PFNGLISVERTEXARRAYPROC,glIsVertexArray) \\ EnumMacro(PFNGLSCISSORPROC,glScissor) \\ #define DECLARE_GL_ENTRYPOINTS(Type,Func)"
  },
  {
    "label": "ENUM_GL_ENTRYPOINTS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_GL_ENTRYPOINTS(DECLARE_GL_ENTRYPOINTS)"
  },
  {
    "label": "LoadOpenGLExtensions()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "LoadOpenGLExtensions()"
  }
]