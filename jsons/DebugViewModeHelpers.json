[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FSlowTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlowTask"
  },
  {
    "label": "FMeshMaterialShaderPermutationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshMaterialShaderPermutationParameters"
  },
  {
    "label": "EShaderPlatform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderPlatform"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EDebugViewShaderMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDebugViewShaderMode"
  },
  {
    "label": "AllowDebugViewVSDSHS()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowDebugViewVSDSHS(EShaderPlatform Platform)"
  },
  {
    "label": "AllowDebugViewShaderMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowDebugViewShaderMode(EDebugViewShaderMode ShaderMode, EShaderPlatform Platform, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "ShouldCompileDebugViewModeShader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompileDebugViewModeShader(const FMeshMaterialShaderPermutationParameters& Parameters)"
  },
  {
    "label": "GetNumActorsInWorld()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumActorsInWorld(UWorld* InWorld)"
  },
  {
    "label": "GetUsedMaterialsInWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUsedMaterialsInWorld(UWorld* InWorld, OUT TSet<UMaterialInterface*>& OutMaterials, FSlowTask* Task)"
  },
  {
    "label": "CompileDebugViewModeShaders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileDebugViewModeShaders(EDebugViewShaderMode Mode, EMaterialQualityLevel::Type QualityLevel, ERHIFeatureLevel::Type FeatureLevel, TSet<UMaterialInterface*>& Materials, FSlowTask* ProgressTask)"
  },
  {
    "label": "WaitForShaderCompilation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForShaderCompilation(const FText& Message, FSlowTask* ProgressTask)"
  },
  {
    "label": "CompileDebugViewModeShaders()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CompileDebugViewModeShaders(Mode, QualityLevel, FeatureLevel, Materials, ProgressTask)"
  }
]