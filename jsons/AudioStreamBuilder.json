[
  {
    "label": "AudioStreamBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioStreamBuilder"
  },
  {
    "label": "AudioStreamBuilder()",
    "kind": "Method",
    "detail": "Function (# ifndef OBOE_STREAM_BUILDER_H_ # define OBOE_STREAM_BUILDER_H_ # include \" oboe / Definitions . h \" # include \" oboe / AudioStreamBase . h \" # include \" CoreMinimal . h \" namespace oboe { class AudioStreamBuilder : public AudioStreamBase { public :)",
    "insertText": "AudioStreamBuilder() : AudioStreamBase()"
  },
  {
    "label": "setChannelCount()",
    "kind": "Method",
    "detail": "Function (} AudioStreamBuilder*)",
    "insertText": "setChannelCount(int channelCount)"
  },
  {
    "label": "setDirection()",
    "kind": "Method",
    "detail": "Function (mChannelCount = channelCount ; return this ; } AudioStreamBuilder*)",
    "insertText": "setDirection(Direction direction)"
  },
  {
    "label": "setSampleRate()",
    "kind": "Method",
    "detail": "Function (mDirection = direction ; return this ; } AudioStreamBuilder*)",
    "insertText": "setSampleRate(int32_t sampleRate)"
  },
  {
    "label": "setFramesPerCallback()",
    "kind": "Method",
    "detail": "Function (mSampleRate = sampleRate ; return this ; } AudioStreamBuilder*)",
    "insertText": "setFramesPerCallback(int framesPerCallback)"
  },
  {
    "label": "setFormat()",
    "kind": "Method",
    "detail": "Function (mFramesPerCallback = framesPerCallback ; return this ; } AudioStreamBuilder*)",
    "insertText": "setFormat(AudioFormat format)"
  },
  {
    "label": "setBufferCapacityInFrames()",
    "kind": "Method",
    "detail": "Function (mFormat = format ; return this ; } AudioStreamBuilder*)",
    "insertText": "setBufferCapacityInFrames(int32_t bufferCapacityInFrames)"
  },
  {
    "label": "getAudioApi()",
    "kind": "Method",
    "detail": "Function (mBufferCapacityInFrames = bufferCapacityInFrames ; return this ; } AudioApi)",
    "insertText": "getAudioApi()"
  },
  {
    "label": "isAAudioSupported()",
    "kind": "Method",
    "detail": "Function (mAudioApi = audioApi ; return this ; } bool)",
    "insertText": "isAAudioSupported()"
  },
  {
    "label": "isAAudioRecommended()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isAAudioRecommended()"
  },
  {
    "label": "setSharingMode()",
    "kind": "Method",
    "detail": "Function (AudioStreamBuilder*)",
    "insertText": "setSharingMode(SharingMode sharingMode)"
  },
  {
    "label": "setPerformanceMode()",
    "kind": "Method",
    "detail": "Function (mSharingMode = sharingMode ; return this ; } AudioStreamBuilder*)",
    "insertText": "setPerformanceMode(PerformanceMode performanceMode)"
  },
  {
    "label": "setUsage()",
    "kind": "Method",
    "detail": "Function (mPerformanceMode = performanceMode ; return this ; } AudioStreamBuilder*)",
    "insertText": "setUsage(Usage usage)"
  },
  {
    "label": "setContentType()",
    "kind": "Method",
    "detail": "Function (mUsage = usage ; return this ; } AudioStreamBuilder*)",
    "insertText": "setContentType(ContentType contentType)"
  },
  {
    "label": "setInputPreset()",
    "kind": "Method",
    "detail": "Function (mContentType = contentType ; return this ; } AudioStreamBuilder*)",
    "insertText": "setInputPreset(InputPreset inputPreset)"
  },
  {
    "label": "setSessionId()",
    "kind": "Method",
    "detail": "Function (mInputPreset = inputPreset ; return this ; } AudioStreamBuilder*)",
    "insertText": "setSessionId(SessionId sessionId)"
  },
  {
    "label": "setDeviceId()",
    "kind": "Method",
    "detail": "Function (mSessionId = sessionId ; return this ; } AudioStreamBuilder*)",
    "insertText": "setDeviceId(int32_t deviceId)"
  },
  {
    "label": "setCallback()",
    "kind": "Method",
    "detail": "Function (mDeviceId = deviceId ; return this ; } AudioStreamBuilder*)",
    "insertText": "setCallback(AudioStreamCallback *streamCallback)"
  },
  {
    "label": "openStream()",
    "kind": "Method",
    "detail": "Function (mStreamCallback = streamCallback ; return this ; } Result)",
    "insertText": "openStream(AudioStream **stream)"
  },
  {
    "label": "build()",
    "kind": "Method",
    "detail": "Function (protected : private : oboe::AudioStream*)",
    "insertText": "build()"
  }
]