[
  {
    "label": "STextEntryPopup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextEntryPopup"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UAnimStateTransitionNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStateTransitionNode"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SGraphNodeAnimTransition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNodeAnimTransition"
  },
  {
    "label": "UAnimBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintGeneratedClass"
  },
  {
    "label": "UAnimationStateMachineGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationStateMachineGraph"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" SGraphNode . h \" # include \" SNodePanel . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class STextEntryPopup ; class SToolTip ; class SWidget ; class UAnimStateTransitionNode ; class UObject ; struct FGeometry ; struct FPointerEvent ; struct FSlateBrush ; class SGraphNodeAnimTransition : public SGraphNode { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphNodeAnimTransition)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, UAnimStateTransitionNode* InNode)"
  },
  {
    "label": "GetNodeInfoPopups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeInfoPopups(FNodeInfoContext* Context, TArray<FGraphInformationPopupInfo>& Popups)"
  },
  {
    "label": "MoveTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveTo(const FVector2D& NewPosition, FNodeSet& NodeFilter, bool bMarkDirty = true)"
  },
  {
    "label": "RequiresSecondPassLayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresSecondPassLayout()"
  },
  {
    "label": "PerformSecondPassLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformSecondPassLayout(const TMap< UObject*, TSharedRef<SNode> >& NodeToWidgetLookup)"
  },
  {
    "label": "UpdateGraphNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGraphNode()"
  },
  {
    "label": "GetComplexTooltip()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SToolTip>)",
    "insertText": "GetComplexTooltip()"
  },
  {
    "label": "OnMouseEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnter(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "PositionBetweenTwoNodesWithOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PositionBetweenTwoNodesWithOffset(const FGeometry& StartGeom, const FGeometry& EndGeom, int32 NodeIndex, int32 MaxNodes)"
  },
  {
    "label": "StaticGetTransitionColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "StaticGetTransitionColor(UAnimStateTransitionNode* TransNode, bool bIsHovered)"
  },
  {
    "label": "IsTransitionActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTransitionActive(int32 TransitionIndex, class UAnimBlueprintGeneratedClass& AnimClass, class UAnimationStateMachineGraph& StateMachineGraph, class UAnimInstance& AnimInstance)"
  },
  {
    "label": "GetPreviewCornerText()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<STextEntryPopup> TextEntryWidget ; TWeakPtr<SNode> PrevStateNodeWidgetPtr ; private : FText)",
    "insertText": "GetPreviewCornerText(bool reverse)"
  },
  {
    "label": "GetTransitionColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTransitionColor()"
  },
  {
    "label": "GetTransitionIconImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetTransitionIconImage()"
  },
  {
    "label": "GenerateInlineDisplayOrEditingWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateInlineDisplayOrEditingWidget(bool bShowGraphPreview)"
  },
  {
    "label": "GenerateRichTooltip()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateRichTooltip()"
  },
  {
    "label": "GetCurrentDuration()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentDuration()"
  }
]