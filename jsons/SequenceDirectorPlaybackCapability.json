[
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "FDirectorInstanceCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectorInstanceCache"
  },
  {
    "label": "ResetDirectorInstances()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" Evaluation / MovieScenePlaybackCapabilities . h \" # include \" MovieSceneSequenceID . h \" # include \" UObject / GCObject . h \" namespace UE::MovieScene { struct FSharedPlaybackState ; struct FSequenceDirectorPlaybackCapability { TPlaybackCapabilityID<FSequenceDirectorPlaybackCapability> ID ; void)",
    "insertText": "ResetDirectorInstances()"
  },
  {
    "label": "GetOrCreateDirectorInstance()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetOrCreateDirectorInstance(TSharedRef<const FSharedPlaybackState> SharedPlaybackState, FMovieSceneSequenceIDRef SequenceID)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (private : struct FDirectorInstanceCache : FGCObject { FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  }
]