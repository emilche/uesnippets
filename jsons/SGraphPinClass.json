[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" CoreMinimal . h \" # include \" Framework / SlateDelegates . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" KismetPins / SGraphPinObject . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" class SWidget ; class UClass ; class UEdGraphPin ; class SGraphPinClass : public SGraphPinObject { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphPinClass)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, UEdGraphPin* InGraphPinObj)"
  },
  {
    "label": "SetAllowAbstractClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowAbstractClasses(bool bAllow)"
  },
  {
    "label": "OnPickedNewClass()",
    "kind": "Method",
    "detail": "Function (bAllowAbstractClasses = bAllow ; } protected : void)",
    "insertText": "OnPickedNewClass(UClass* ChosenClass)"
  },
  {
    "label": "OnClickUse()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickUse()"
  },
  {
    "label": "AllowSelfPinWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowSelfPinWidget()"
  },
  {
    "label": "GetDefaultComboText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultComboText()"
  },
  {
    "label": "GetOnUseButtonDelegate()",
    "kind": "Method",
    "detail": "Function (FOnClicked)",
    "insertText": "GetOnUseButtonDelegate()"
  },
  {
    "label": "GetAssetData()",
    "kind": "Method",
    "detail": "Function (const FAssetData&)",
    "insertText": "GetAssetData(bool bRuntimePath)"
  }
]