[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FFastPathPerFrameData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFastPathPerFrameData"
  },
  {
    "label": "FSlateInvalidationWidgetPostHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetPostHeap"
  },
  {
    "label": "FSlateInvalidationWidgetList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetList"
  },
  {
    "label": "FSlateWidgetPersistentState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateWidgetPersistentState"
  },
  {
    "label": "FSlateInvalidationRoot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationRoot"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateInvalidationWidgetVisibility",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateInvalidationWidgetVisibility"
  },
  {
    "label": "FWidgetProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetProxy"
  },
  {
    "label": "FUpdateResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateResult"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FSlateWidgetPersistentState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateWidgetPersistentState"
  },
  {
    "label": "FWidgetProxyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetProxyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSlateInvalidationRoot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationRoot"
  },
  {
    "label": "FSlateInvalidationWidgetList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetList"
  },
  {
    "label": "FWidgetProxy()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FWidgetProxy(SWidget& InWidget)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (FUpdateResult)",
    "insertText": "Update(const FPaintArgs& PaintArgs, FSlateWindowElementList& OutDrawElements)"
  },
  {
    "label": "ProcessLayoutInvalidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessLayoutInvalidation(FSlateInvalidationWidgetPostHeap& UpdateList, FSlateInvalidationWidgetList& FastPathWidgetList, FSlateInvalidationRoot& Root)"
  },
  {
    "label": "ProcessPostInvalidation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessPostInvalidation(FSlateInvalidationWidgetPostHeap& UpdateList, FSlateInvalidationWidgetList& FastPathWidgetList, FSlateInvalidationRoot& Root)"
  },
  {
    "label": "MarkProxyUpdatedThisFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkProxyUpdatedThisFrame(FSlateInvalidationWidgetPostHeap& UpdateList)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (UE_SLATE_WITH_WIDGETPROXY_WEAKPTR)",
    "insertText": "static_assert(std::is_trivially_destructible_v<FWidgetProxy>, \"FWidgetProxy must be trivially destructible\")"
  },
  {
    "label": "MarkWidgetDirty_NoCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkWidgetDirty_NoCheck(FWidgetProxy& Proxy)"
  },
  {
    "label": "MarkWidgetDirty_NoCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkWidgetDirty_NoCheck(EInvalidateWidgetReason InvalidateReason)"
  },
  {
    "label": "UpdateWidgetFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWidgetFlags(const SWidget* Widget, EWidgetUpdateFlags Previous, EWidgetUpdateFlags NewFlags)"
  },
  {
    "label": "FWidgetProxyHandle()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FWidgetProxyHandle(const FSlateInvalidationRootHandle& InInvalidationRoot, FSlateInvalidationWidgetIndex InIndex, FSlateInvalidationWidgetSortOrder InSortIndex)"
  }
]