[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SDeviceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDeviceManager"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" ITargetDeviceServiceManager . h \" # include \" Models / DeviceManagerModel . h \" class FMenuBuilder ; class FSpawnTabArgs ; class FTabManager ; class FUICommandList ; class SWindow ; class SDeviceManager : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDeviceManager)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: SDeviceManager()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<ITargetDeviceServiceManager>& InDeviceServiceManager, const TSharedRef<SDockTab>& ConstructUnderMajorTab, const TSharedPtr<SWindow>& ConstructUnderWindow)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "FillWindowMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillWindowMenu(FMenuBuilder& MenuBuilder, const TSharedPtr<FTabManager> TabManager)"
  },
  {
    "label": "ValidateDeviceAction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateDeviceAction(const ITargetDeviceRef& Device)"
  },
  {
    "label": "HandleClaimActionCanExecute()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "HandleClaimActionCanExecute()"
  },
  {
    "label": "HandleClaimActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleClaimActionExecute()"
  },
  {
    "label": "HandleConnectActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleConnectActionCanExecute()"
  },
  {
    "label": "HandleConnectActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleConnectActionExecute()"
  },
  {
    "label": "HandleDisconnectActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDisconnectActionCanExecute()"
  },
  {
    "label": "HandleDisconnectActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDisconnectActionExecute()"
  },
  {
    "label": "HandlePowerOffActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePowerOffActionCanExecute()"
  },
  {
    "label": "HandlePowerOffActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePowerOffActionExecute(bool Force)"
  },
  {
    "label": "HandlePowerOnActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePowerOnActionCanExecute()"
  },
  {
    "label": "HandlePowerOnActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePowerOnActionExecute()"
  },
  {
    "label": "HandleRebootActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleRebootActionCanExecute()"
  },
  {
    "label": "HandleRebootActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRebootActionExecute()"
  },
  {
    "label": "HandleReleaseActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleReleaseActionCanExecute()"
  },
  {
    "label": "HandleReleaseActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReleaseActionExecute()"
  },
  {
    "label": "HandleRemoveActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleRemoveActionCanExecute()"
  },
  {
    "label": "HandleRemoveActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemoveActionExecute()"
  },
  {
    "label": "HandleShareActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleShareActionCanExecute()"
  },
  {
    "label": "HandleShareActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleShareActionExecute()"
  },
  {
    "label": "HandleShareActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleShareActionIsChecked()"
  },
  {
    "label": "HandleTabManagerSpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "HandleTabManagerSpawnTab(const FSpawnTabArgs& Args, FName TabIdentifier)"
  }
]