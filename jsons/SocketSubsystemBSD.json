[
  {
    "label": "FSocketBSD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketBSD"
  },
  {
    "label": "FSocketSubsystemBSD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketSubsystemBSD"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "GetDefaultSocketProtocolFamily()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / OutputDeviceRedirector . h \" # include \" HAL / IConsoleManager . h \" # include \" SocketSubsystemPackage . h \" # include \" SocketSubsystem . h \" # include \" IPAddress . h \" # if PLATFORM_HAS_BSD_SOCKETS | | PLATFORM_HAS_BSD_IPV6_SOCKETS class FSocketBSD ; TAutoConsoleVariable<int32> CVarDisableIPv6 ; # include \" SocketSubsystemBSDPrivate . h \" class FSocketSubsystemBSD : public ISocketSubsystem { public : FName)",
    "insertText": "GetDefaultSocketProtocolFamily()"
  },
  {
    "label": "CreateInternetAddr()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FInternetAddr>)",
    "insertText": "CreateInternetAddr(const FName ProtocolType)"
  },
  {
    "label": "CreateSocket()",
    "kind": "Method",
    "detail": "Function (class FSocket*)",
    "insertText": "CreateSocket(const FName& SocketType, const FString& SocketDescription, bool bForceUDP = false)"
  },
  {
    "label": "CreateSocket()",
    "kind": "Method",
    "detail": "Function (} class FSocket*)",
    "insertText": "CreateSocket(const FName& SocketType, const FString& SocketDescription, const FName& ProtocolType)"
  },
  {
    "label": "DestroySocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySocket(class FSocket* Socket)"
  },
  {
    "label": "GetAddressInfo()",
    "kind": "Method",
    "detail": "Function (FAddressInfoResult)",
    "insertText": "GetAddressInfo(const TCHAR* HostName, const TCHAR* ServiceName = nullptr, EAddressInfoFlags QueryFlags = EAddressInfoFlags::Default, const FName ProtocolTypeName = NAME_None, ESocketType SocketType = ESocketType::SOCKTYPE_Unknown)"
  },
  {
    "label": "GetAddressFromString()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInternetAddr>)",
    "insertText": "GetAddressFromString(const FString& InAddress)"
  },
  {
    "label": "GetMultihomeAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMultihomeAddress(TSharedRef<FInternetAddr>& Addr)"
  },
  {
    "label": "GetHostName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHostName(FString& HostName)"
  },
  {
    "label": "GetLastErrorCode()",
    "kind": "Method",
    "detail": "Function (ESocketErrors)",
    "insertText": "GetLastErrorCode()"
  },
  {
    "label": "GetSocketAPIName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetSocketAPIName()"
  },
  {
    "label": "RequiresChatDataBeSeparate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresChatDataBeSeparate()"
  },
  {
    "label": "IsSocketWaitSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSocketWaitSupported()"
  },
  {
    "label": "GetLocalHostAddr()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FInternetAddr>)",
    "insertText": "GetLocalHostAddr(FOutputDevice& Out, bool& bCanBindAll)"
  },
  {
    "label": "GetProtocolFamilyValue()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetProtocolFamilyValue(const FName& InProtocol)"
  },
  {
    "label": "GetProtocolFamilyTypeName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetProtocolFamilyTypeName(int32 InProtocol)"
  },
  {
    "label": "GetSocketType()",
    "kind": "Method",
    "detail": "Function (ESocketType)",
    "insertText": "GetSocketType(int32 InSocketType)"
  },
  {
    "label": "GetAddressInfoHintFlag()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAddressInfoHintFlag(EAddressInfoFlags InFlags)"
  },
  {
    "label": "TranslateGAIErrorCode()",
    "kind": "Method",
    "detail": "Function (protected : ESocketErrors)",
    "insertText": "TranslateGAIErrorCode(int32 Code)"
  },
  {
    "label": "InternalBSDSocketFactory()",
    "kind": "Method",
    "detail": "Function (class FSocketBSD*)",
    "insertText": "InternalBSDSocketFactory(SOCKET Socket, ESocketType SocketType, const FString& SocketDescription, const FName& SocketProtocol)"
  },
  {
    "label": "GetLocalHostAddrViaConnect()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetLocalHostAddrViaConnect(TSharedRef<FInternetAddr>& HostAddr)"
  }
]