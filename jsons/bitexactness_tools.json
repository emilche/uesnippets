[
  {
    "label": "GetApmRenderTestVectorFileName()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TEST_BITEXACTNESS_TOOLS_H_ # define MODULES_AUDIO_PROCESSING_TEST_BITEXACTNESS_TOOLS_H_ # include<string> # include \" api / array_view . h \" # include \" modules / audio_coding / neteq / tools / input_audio_file . h \" # include \" test / gtest . h \" namespace webrtc { namespace test { std::string)",
    "insertText": "GetApmRenderTestVectorFileName(int sample_rate_hz)"
  },
  {
    "label": "GetApmCaptureTestVectorFileName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetApmCaptureTestVectorFileName(int sample_rate_hz)"
  },
  {
    "label": "ReadFloatSamplesFromStereoFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadFloatSamplesFromStereoFile(size_t samples_per_channel, size_t num_channels, InputAudioFile* stereo_pcm_file, rtc::ArrayView<float> data)"
  },
  {
    "label": "VerifyDeinterleavedArray()",
    "kind": "Method",
    "detail": "Function (::testing::AssertionResult)",
    "insertText": "VerifyDeinterleavedArray(size_t samples_per_channel, size_t num_channels, rtc::ArrayView<const float> reference, rtc::ArrayView<const float> output, float element_error_bound)"
  },
  {
    "label": "VerifyArray()",
    "kind": "Method",
    "detail": "Function (::testing::AssertionResult)",
    "insertText": "VerifyArray(rtc::ArrayView<const float> reference, rtc::ArrayView<const float> output, float element_error_bound)"
  }
]