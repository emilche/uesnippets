[
  {
    "label": "FFakeInstallerError",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFakeInstallerError"
  },
  {
    "label": "HasError()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / InstallerError . h \" # include \" Interfaces / IBuildInstaller . h \" # if WITH_DEV_AUTOMATION_TESTS namespace BuildPatchServices { class FFakeInstallerError : public IInstallerError { public : bool)",
    "insertText": "HasError()"
  },
  {
    "label": "InErrorSubType()",
    "kind": "Method",
    "detail": "Function (ErrorType = InErrorType ; ErrorCode =)",
    "insertText": "InErrorSubType((InErrorCode > 0) ? FString::Printf(TEXT(\"-%u\"), InErrorCode) : TEXT(\"\"))"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (ErrorText =)",
    "insertText": "MoveTemp(InErrorText)"
  },
  {
    "label": "RegisterForErrors()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "RegisterForErrors(FOnErrorDelegate Delegate)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32 Handle = HandleCount + + ; Delegates .)",
    "insertText": "Add(Handle, Delegate)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (Delegates .)",
    "insertText": "Remove(Handle)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (bHasError = false ; bIsCancelled = false ; bCanRetry = true ; ErrorType = EBuildPatchInstallError::NoError ; ErrorCode =)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "GetEmpty()",
    "kind": "Method",
    "detail": "Function (ErrorText =)",
    "insertText": "GetEmpty()"
  }
]