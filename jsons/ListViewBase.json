[
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "ITypedUMGListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedUMGListView"
  },
  {
    "label": "yourself",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "yourself"
  },
  {
    "label": "FListViewConstructArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FListViewConstructArgs"
  },
  {
    "label": "ListViewT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListViewT"
  },
  {
    "label": "FTileViewConstructArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileViewConstructArgs"
  },
  {
    "label": "TileViewT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TileViewT"
  },
  {
    "label": "FTreeViewConstructArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTreeViewConstructArgs"
  },
  {
    "label": "TreeViewT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeViewT"
  },
  {
    "label": "ObjectRowT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjectRowT"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "directly",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "directly"
  },
  {
    "label": "UMyUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMyUserWidget"
  },
  {
    "label": "UListViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UListViewBase"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "declaration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "declaration"
  },
  {
    "label": "FListViewBaseDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FListViewBaseDetails"
  },
  {
    "label": "ITypedUMGListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedUMGListView"
  },
  {
    "label": "GetDefaultEntryClass()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetDefaultEntryClass()"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FMargin(0.f)"
  },
  {
    "label": "OnSelectionChangedInternal()",
    "kind": "Method",
    "detail": "Function (selection)",
    "insertText": "OnSelectionChangedInternal(Item)"
  },
  {
    "label": "OnIsSelectableOrNavigableInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "OnIsSelectableOrNavigableInternal(Item)"
  },
  {
    "label": "UListViewBase()",
    "kind": "Method",
    "detail": "Function (UMG_API)",
    "insertText": "UListViewBase(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "RegenerateAllEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateAllEntries()"
  },
  {
    "label": "ScrollToTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollToTop()"
  },
  {
    "label": "ScrollToBottom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollToBottom()"
  },
  {
    "label": "SetScrollOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollOffset(const float InScrollOffset)"
  },
  {
    "label": "EndInertialScrolling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndInertialScrolling()"
  },
  {
    "label": "SetWheelScrollMultiplier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWheelScrollMultiplier(float NewWheelScrollMultiplier)"
  },
  {
    "label": "SetScrollbarVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScrollbarVisibility(ESlateVisibility InVisibility)"
  },
  {
    "label": "SetIsPointerScrollingEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPointerScrollingEnabled(bool bInIsPointerScrollingEnabled)"
  },
  {
    "label": "SetIsGamepadScrollingEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsGamepadScrollingEnabled(bool bInIsGamepadScrollingEnabled)"
  },
  {
    "label": "RequestRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefresh()"
  },
  {
    "label": "RebuildListWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<STableViewBase>)",
    "insertText": "RebuildListWidget()"
  },
  {
    "label": "FinishGeneratingEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishGeneratingEntry(UUserWidget& GeneratedEntry)"
  },
  {
    "label": "HandleRowReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRowReleased(const TSharedRef<ITableRow>& Row)"
  },
  {
    "label": "HandleAnnounceGeneratedEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAnnounceGeneratedEntries()"
  },
  {
    "label": "IsDesignTime()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsDesignTime()"
  }
]