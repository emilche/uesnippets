[
  {
    "label": "FOrientedEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOrientedEdge"
  },
  {
    "label": "FThinZone2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThinZone2D"
  },
  {
    "label": "FThinZoneSide",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThinZoneSide"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FEdge2DProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdge2DProperties"
  },
  {
    "label": "FCuttingPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCuttingPoint"
  },
  {
    "label": "FModelMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModelMesh"
  },
  {
    "label": "FEdgeMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdgeMesh"
  },
  {
    "label": "FSurface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSurface"
  },
  {
    "label": "FThinZone",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThinZone"
  },
  {
    "label": "FTopologicalLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalLoop"
  },
  {
    "label": "FTopologicalVertex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalVertex"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FEntity",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntity"
  },
  {
    "label": "FTopologicalLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalLoop"
  },
  {
    "label": "FTopologicalFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalFace"
  },
  {
    "label": "PointType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointType"
  },
  {
    "label": "PointType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointType"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "GetCuttingPointCoordinates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCuttingPointCoordinates(const TArray<FCuttingPointType>& CuttingPoints, TArray<double>& CuttingPointCoordinates)"
  },
  {
    "label": "CheckVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckVertices()"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "Make(const TSharedRef<FRestrictionCurve>& InCurve, const TSharedRef<FTopologicalVertex>& InVertex1, const TSharedRef<FTopologicalVertex>& InVertex2, const FLinearBoundary& InBoundary)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "Make(const TSharedRef<FRestrictionCurve>& InCurve, const TSharedRef<FTopologicalVertex>& InVertex1, const TSharedRef<FTopologicalVertex>& InVertex2)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "Make(const TSharedRef<FRestrictionCurve>& InCurve, const FLinearBoundary& InBoundary)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "Make(const TSharedRef<FRestrictionCurve>& InCurve)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "Make(const TSharedRef<FSurface>& InSurface, const FPoint2D& InCoordinateVertex1, const TSharedRef<FTopologicalVertex>& InVertex1, const FPoint2D& InCoordinateVertex2, const TSharedRef<FTopologicalVertex>& InVertex2)"
  },
  {
    "label": "ReturnIfValid()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "ReturnIfValid(TSharedRef<FTopologicalEdge>& InEdge, bool bCheckVertices)"
  },
  {
    "label": "LinkVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkVertex()"
  },
  {
    "label": "LinkIfCoincident()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkIfCoincident(FTopologicalEdge& OtherEdge, double EdgeLengthTolerance, double SquareJoiningTolerance)"
  },
  {
    "label": "Link()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Link(FTopologicalEdge& OtherEdge)"
  },
  {
    "label": "Disjoin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disjoin()"
  },
  {
    "label": "ReplaceEdgeVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceEdgeVertex(bool bIsStartVertex, TSharedRef<FTopologicalVertex>& NewVertex)"
  },
  {
    "label": "SetStartVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartVertex(const double NewCoordinate)"
  },
  {
    "label": "SetEndVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEndVertex(const double NewCoordinate)"
  },
  {
    "label": "SetStartVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartVertex(const double NewCoordinate, const FPoint& NewPoint3D)"
  },
  {
    "label": "SetEndVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEndVertex(const double NewCoordinate, const FPoint& NewPoint3D)"
  },
  {
    "label": "RemovePreMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePreMesh()"
  },
  {
    "label": "ComputeCrossingPointCoordinates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeCrossingPointCoordinates()"
  },
  {
    "label": "EvaluateCuttingPointNum()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "EvaluateCuttingPointNum()"
  },
  {
    "label": "TransferCuttingPointFromMeshedEdge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferCuttingPointFromMeshedEdge(bool bOnlyWithOppositeNode, FAddCuttingPointFunc AddCuttingPoint)"
  },
  {
    "label": "SortImposedCuttingPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortImposedCuttingPoints()"
  },
  {
    "label": "AddImposedCuttingPointU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddImposedCuttingPointU(const double ImposedCuttingPointU, const int32 OppositeNodeIndex, const double DeltaU)"
  },
  {
    "label": "AddTwinsCuttingPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTwinsCuttingPoint(const double Coord, const double DeltaU)"
  },
  {
    "label": "GenerateMeshElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateMeshElements(FModelMesh& MeshModel)"
  },
  {
    "label": "ComputeLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeLength()"
  },
  {
    "label": "GetTangentAt()",
    "kind": "Method",
    "detail": "Function (FPoint)",
    "insertText": "GetTangentAt(const FTopologicalVertex& InVertex)"
  },
  {
    "label": "GetTangent2DAt()",
    "kind": "Method",
    "detail": "Function (FPoint2D)",
    "insertText": "GetTangent2DAt(const FTopologicalVertex& InVertex)"
  },
  {
    "label": "ProjectTwinEdgePointsOn2DCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProjectTwinEdgePointsOn2DCurve(const TSharedRef<FTopologicalEdge>& InTwinEdge, const TArray<double>& InTwinEdgePointCoords, TArray<FPoint2D>& OutPoints2D)"
  },
  {
    "label": "ComputeEdge2DProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeEdge2DProperties(FEdge2DProperties& SlopeCharacteristics)"
  },
  {
    "label": "Offset2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Offset2D(const FPoint2D& OffsetDirection)"
  },
  {
    "label": "ExtendTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExtendTo(bool bStartExtremity, const FPoint2D& NewExtremityCoordinate, TSharedRef<FTopologicalVertex>& NewVertex)"
  },
  {
    "label": "CreateEdgeByMergingEdges()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTopologicalEdge>)",
    "insertText": "CreateEdgeByMergingEdges(const double SmallEdgeTolerance, TArray<FOrientedEdge>& Edges, const TSharedRef<FTopologicalVertex>& StartVertex, const TSharedRef<FTopologicalVertex>& EndVertex)"
  }
]