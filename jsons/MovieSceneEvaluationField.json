[
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "FMovieSceneSequenceHierarchy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceHierarchy"
  },
  {
    "label": "IMovieSceneSequenceTemplateStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMovieSceneSequenceTemplateStore"
  },
  {
    "label": "UMovieSceneCondition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneCondition"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityKey"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntity"
  },
  {
    "label": "FMovieSceneEvaluationFieldSharedEntityMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldSharedEntityMetaData"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityMetaData"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityQuery"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityKeyFuncs"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntityTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldEntityTree"
  },
  {
    "label": "FEntityAndMetaDataIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAndMetaDataIndex"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FMovieSceneEntityComponentField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntityComponentField"
  },
  {
    "label": "FMovieSceneEntityComponentFieldBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntityComponentFieldBuilder"
  },
  {
    "label": "FKeyToIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyToIndex"
  },
  {
    "label": "FMetaDataToIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetaDataToIndex"
  },
  {
    "label": "FMovieSceneEvaluationFieldTrackPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldTrackPtr"
  },
  {
    "label": "FMovieSceneEvaluationFieldSegmentPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationFieldSegmentPtr"
  },
  {
    "label": "FMovieSceneFieldEntry_EvaluationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneFieldEntry_EvaluationTrack"
  },
  {
    "label": "FMovieSceneFieldEntry_ChildTemplate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneFieldEntry_ChildTemplate"
  },
  {
    "label": "FMovieSceneEvaluationGroupLUTIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationGroupLUTIndex"
  },
  {
    "label": "FMovieSceneEvaluationGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationGroup"
  },
  {
    "label": "FMovieSceneOrderedEvaluationKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneOrderedEvaluationKey"
  },
  {
    "label": "FMovieSceneEvaluationMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationMetaData"
  },
  {
    "label": "FMovieSceneEvaluationField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationField"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" Evaluation / MovieSceneEvaluationKey . h \" # include \" Evaluation / MovieSceneEvaluationTree . h \" # include \" Evaluation / MovieSceneSegment . h \" # include \" Evaluation / MovieSceneTrackIdentifier . h \" # include \" Math / NumericLimits . h \" # include \" Math / Range . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / Guid . h \" # include \" MovieSceneFrameMigration . h \" # include \" MovieSceneSequenceID . h \" # include \" Serialization / Archive . h \" # include \" Templates / Function . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" MovieSceneEvaluationField . generated . h \" class UMovieSceneSequence ; class UObject ; struct FFrameNumber ; struct FMovieSceneSequenceHierarchy ; struct IMovieSceneSequenceTemplateStore ; class UMovieSceneCondition ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() friend bool operator==(FMovieSceneEvaluationFieldEntityKey A, FMovieSceneEvaluationFieldEntityKey B)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(FMovieSceneEvaluationFieldEntityKey In)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationFieldEntity() : SharedMetaDataIndex(INDEX_NONE)"
  },
  {
    "label": "FMovieSceneEvaluationFieldEntity()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneEvaluationFieldEntity(const FMovieSceneEvaluationFieldEntityKey& InKey, int32 InSharedMetaDataIndex = INDEX_NONE) : Key(InKey) , SharedMetaDataIndex(InSharedMetaDataIndex)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationFieldEntityMetaData() : ForcedTime(TNumericLimits<int32>::Lowest()) , Flags(ESectionEvaluationFlags::None) , bEvaluateInSequencePreRoll(false) , bEvaluateInSequencePostRoll(false)"
  },
  {
    "label": "IsRedundant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRedundant()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMovieSceneEvaluationFieldEntityMetaData& A, const FMovieSceneEvaluationFieldEntityMetaData& B)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (} ; struct FMovieSceneEvaluationFieldEntityQuery { FMovieSceneEvaluationFieldEntity Entity ; int32 MetaDataIndex ; } ; struct FMovieSceneEvaluationFieldEntityKeyFuncs : BaseKeyFuncs<FMovieSceneEvaluationFieldEntityQuery,FMovieSceneEvaluationFieldEntityKey,false> { FMovieSceneEvaluationFieldEntityKey)",
    "insertText": "GetSetKey(const FMovieSceneEvaluationFieldEntityQuery& Element)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() bool Serialize(FArchive& Ar)"
  },
  {
    "label": "Identical()",
    "kind": "Method",
    "detail": "Function (Ar<<SerializedData ; return true ; } bool)",
    "insertText": "Identical(const FMovieSceneEvaluationFieldEntityTree* Other, uint32 PortFlags)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() bool IsEmpty()"
  },
  {
    "label": "GetEntity()",
    "kind": "Method",
    "detail": "Function (} const FMovieSceneEvaluationFieldEntity&)",
    "insertText": "GetEntity(int32 EntityIndex)"
  },
  {
    "label": "QueryPersistentEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryPersistentEntities(FFrameNumber QueryTime, TFunctionRef<bool(const FMovieSceneEvaluationFieldEntityQuery&)> QueryCallback, TRange<FFrameNumber>& OutRange)"
  },
  {
    "label": "HasAnyOneShotEntities()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyOneShotEntities()"
  },
  {
    "label": "QueryOneShotEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryOneShotEntities(const TRange<FFrameNumber>& QueryRange, FMovieSceneEvaluationFieldEntitySet& OutEntityIndices)"
  },
  {
    "label": "FMovieSceneEntityComponentFieldBuilder()",
    "kind": "Method",
    "detail": "Function (} ; struct FMovieSceneEntityComponentFieldBuilder { uint32 InvalidEntityID = ~ 0 u ;)",
    "insertText": "FMovieSceneEntityComponentFieldBuilder(FMovieSceneEntityComponentField* InField)"
  },
  {
    "label": "FMovieSceneEntityComponentFieldBuilder()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMovieSceneEntityComponentFieldBuilder()"
  },
  {
    "label": "GetSharedMetaData()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEvaluationFieldSharedEntityMetaData&)",
    "insertText": "GetSharedMetaData()"
  },
  {
    "label": "GetSharedMetaDataIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSharedMetaDataIndex()"
  },
  {
    "label": "AddMetaData()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddMetaData(const FMovieSceneEvaluationFieldEntityMetaData& InMetaData)"
  },
  {
    "label": "FindOrAddEntity()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddEntity(UObject* EntityOwner, uint32 EntityID = 0)"
  },
  {
    "label": "AddPersistentEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPersistentEntity(const TRange<FFrameNumber>& Range, UObject* EntityOwner, uint32 EntityID = 0, int32 InMetaDataIndex = INDEX_NONE)"
  },
  {
    "label": "AddPersistentEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPersistentEntity(const TRange<FFrameNumber>& Range, int32 LocalIndex, int32 InMetaDataIndex = INDEX_NONE)"
  },
  {
    "label": "AddOneShotEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOneShotEntity(const TRange<FFrameNumber>& OneShotRange, UObject* EntityOwner, uint32 EntityID = 0, int32 InMetaDataIndex = INDEX_NONE)"
  },
  {
    "label": "AddOneShotEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddOneShotEntity(const TRange<FFrameNumber>& OneShotRange, int32 LocalIndex, int32 InMetaDataIndex = INDEX_NONE)"
  },
  {
    "label": "LocalEntityIndexToFieldIndex()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "LocalEntityIndexToFieldIndex(int32 LocalIndex)"
  },
  {
    "label": "LocalMetaDataIndexToFieldIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LocalMetaDataIndexToFieldIndex(int32 LocalIndex)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationFieldTrackPtr()"
  },
  {
    "label": "FMovieSceneEvaluationFieldTrackPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneEvaluationFieldTrackPtr(FMovieSceneSequenceIDRef InSequenceID, FMovieSceneTrackIdentifier InTrackIdentifier) : SequenceID(InSequenceID) , TrackIdentifier(InTrackIdentifier)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FMovieSceneEvaluationFieldTrackPtr A, FMovieSceneEvaluationFieldTrackPtr B)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationFieldSegmentPtr()"
  },
  {
    "label": "FMovieSceneEvaluationFieldSegmentPtr()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneEvaluationFieldSegmentPtr(FMovieSceneSequenceIDRef InSequenceID, FMovieSceneTrackIdentifier InTrackIdentifier, FMovieSceneSegmentIdentifier InSegmentID) : FMovieSceneEvaluationFieldTrackPtr(InSequenceID, InTrackIdentifier) , SegmentID(InSegmentID)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FMovieSceneEvaluationFieldSegmentPtr A, FMovieSceneEvaluationFieldSegmentPtr B)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneFieldEntry_ChildTemplate() : ChildIndex(-1) , Flags(ESectionEvaluationFlags::None) , ForcedTime(TNumericLimits<int32>::Lowest())"
  },
  {
    "label": "FMovieSceneFieldEntry_ChildTemplate()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneFieldEntry_ChildTemplate(uint16 InChildIndex, ESectionEvaluationFlags InFlags, FFrameNumber InForcedTime) : ChildIndex(InChildIndex) , Flags(InFlags) , ForcedTime(InForcedTime)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneEvaluationGroupLUTIndex() : NumInitPtrs(0) , NumEvalPtrs(0)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() void Reset()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (ActiveSequences .)",
    "insertText": "Reset()"
  },
  {
    "label": "DiffSequences()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DiffSequences(const FMovieSceneEvaluationMetaData& LastFrame, TArray<FMovieSceneSequenceID>* NewSequences, TArray<FMovieSceneSequenceID>* ExpiredSequences)"
  },
  {
    "label": "DiffEntities()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffEntities(const FMovieSceneEvaluationMetaData& LastFrame, TArray<FMovieSceneOrderedEvaluationKey>* NewKeys, TArray<FMovieSceneOrderedEvaluationKey>* ExpiredKeys)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API int32 GetSegmentFromTime(FFrameNumber Time)"
  },
  {
    "label": "OverlapRange()",
    "kind": "Method",
    "detail": "Function (TRange<int32>)",
    "insertText": "OverlapRange(const TRange<FFrameNumber>& Range)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(const TRange<FFrameNumber>& Range)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Insert(const TRange<FFrameNumber>& InRange, FMovieSceneEvaluationGroup&& InGroup, FMovieSceneEvaluationMetaData&& InMetaData)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(const TRange<FFrameNumber>& InRange, FMovieSceneEvaluationGroup&& InGroup, FMovieSceneEvaluationMetaData&& InMetaData)"
  },
  {
    "label": "GetSignature()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA const FGuid&)",
    "insertText": "GetSignature()"
  },
  {
    "label": "GetRanges()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FMovieSceneFrameRange>)",
    "insertText": "GetRanges()"
  }
]