[
  {
    "label": "UObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBase"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FMotionVectorSimulation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMotionVectorSimulation"
  },
  {
    "label": "FSimulatedTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimulatedTransform"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / Optional . h \" # include \" Tickable . h \" # include \" UObject / UObjectArray . h \" # include \" Math / Transform . h \" # include \" HAL / IConsoleManager . h \" class UObjectBase ; class USceneComponent ; class FMotionVectorSimulation : public FTickableGameObject,public FUObjectArray::FUObjectDeleteListener { public : FMotionVectorSimulation&)",
    "insertText": "Get()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetPreviousTransform()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "GetPreviousTransform(UObject* Object, FTransform* OutTransform)"
  },
  {
    "label": "GetPreviousTransform()",
    "kind": "Method",
    "detail": "Function (TOptional<FTransform>)",
    "insertText": "GetPreviousTransform(UObject* Object)"
  },
  {
    "label": "SetPreviousTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviousTransform(UObject* Object, const FTransform& SimulatedPreviousTransform)"
  },
  {
    "label": "ClearPreviousTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPreviousTransform(UObject* Component)"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (} private : bool)",
    "insertText": "IsTickable()"
  },
  {
    "label": "IsTickableInEditor()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsTickableInEditor()"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "NotifyUObjectDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUObjectDeleted(const UObjectBase* Object, int32 Index)"
  },
  {
    "label": "OnUObjectArrayShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUObjectArrayShutdown()"
  },
  {
    "label": "FMotionVectorSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMotionVectorSimulation()"
  }
]