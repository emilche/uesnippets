[
  {
    "label": "FTemplateConfigValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateConfigValue"
  },
  {
    "label": "FTemplateReplacement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateReplacement"
  },
  {
    "label": "FTemplateFolderRename",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateFolderRename"
  },
  {
    "label": "FLocalizedTemplateString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocalizedTemplateString"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UTemplateProjectDefs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTemplateProjectDefs"
  },
  {
    "label": "FTemplateCategoryDef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateCategoryDef"
  },
  {
    "label": "UTemplateCategories",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTemplateCategories"
  },
  {
    "label": "FTemplateConfigValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" FeaturePackContentSource . h \" # include \" Internationalization / PolyglotTextData . h \" # include \" Internationalization / Text . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / CoreMiscDefines . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" TemplateProjectDefs . generated . h \" struct FTemplateConfigValue { FString ConfigFile ; FString ConfigSection ; FString ConfigKey ; FString ConfigValue ; bool bShouldReplaceExistingValue ;)",
    "insertText": "FTemplateConfigValue(const FString& InFile, const FString& InSection, const FString& InKey, const FString& InValue, bool InShouldReplaceExistingValue)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "GetLocalizedText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedText(const TArray<FLocalizedTemplateString>& LocalizedStrings)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Languages,HardwareTarget,GraphicsPreset,StarterContent,XR,Raytracing_DEPRECATED,All } ;)",
    "insertText": "UCLASS(abstract,config=TemplateDefs,MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(config)"
  },
  {
    "label": "FixupStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupStrings(const FString& TemplateName, const FString& ProjectName)"
  },
  {
    "label": "GetDisplayNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayNameText()"
  },
  {
    "label": "GetLocalizedDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedDescription()"
  },
  {
    "label": "GeneratesCode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GeneratesCode(const FString& ProjectTemplatePath) const PURE_VIRTUAL(UTemplateProjectDefs::GeneratesCode, return false;) virtual bool IsClassRename(const FString& DestFilename, const FString& SrcFilename, const FString& FileExtension)"
  },
  {
    "label": "PreGenerateProject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "PreGenerateProject(const FString& DestFolder, const FString& SrcFolder, const FString& NewProjectFile, const FString& TemplateFile, bool bShouldGenerateCode, FText& OutFailReason)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(config=TemplateCategories)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UPROPERTY(config)"
  }
]