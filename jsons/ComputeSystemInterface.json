[
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "IComputeTaskWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IComputeTaskWorker"
  },
  {
    "label": "IComputeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IComputeSystem"
  },
  {
    "label": "IComputeSystem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" RHIDefinitions . h \" class FSceneInterface ; class IComputeTaskWorker ; class IComputeSystem { public : ~)",
    "insertText": "IComputeSystem()"
  },
  {
    "label": "CreateWorkers()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CreateWorkers(FSceneInterface const* InScene, TArray<IComputeTaskWorker*>& OutWorkers)"
  },
  {
    "label": "DestroyWorkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyWorkers(FSceneInterface const* InScene, TArray<IComputeTaskWorker*>& InOutWorkers)"
  },
  {
    "label": "RegisterSystem()",
    "kind": "Method",
    "detail": "Function (} ; namespace ComputeSystemInterface { void)",
    "insertText": "RegisterSystem(IComputeSystem* InSystem)"
  },
  {
    "label": "UnregisterSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSystem(IComputeSystem* InSystem)"
  },
  {
    "label": "CreateWorkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWorkers(FSceneInterface const* InScene, TArray<IComputeTaskWorker*>& OutSchedulers)"
  },
  {
    "label": "DestroyWorkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyWorkers(FSceneInterface const* InScene, TArray<IComputeTaskWorker*>& InOutSchedulers)"
  }
]