[
  {
    "label": "UListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UListView"
  },
  {
    "label": "ListViewT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListViewT"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / ListViewBase . h \" # include \" Widgets / Views / SListView . h \" # include \" ListView . generated . h \")",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FSimpleListItemEventDynamic, UObject*, Item)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnListEntryInitializedDynamic, UObject*, Item, UUserWidget*, Widget)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnListItemSelectionChangedDynamic, UObject*, Item, bool, bIsSelected)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnItemIsHoveredChangedDynamic, UObject*, Item, bool, bIsHovered)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnListItemScrolledIntoViewDynamic, UObject*, Item, UUserWidget*, Widget)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnListViewScrolledDynamic, float, ItemOffset, float, DistanceRemaining)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(meta = (EntryInterface = \"/Script/UMG.UserObjectListEntry\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() IMPLEMENT_TYPED_UMG_LIST(UObject*, MyListView) public: UMG_API UListView(const FObjectInitializer& Initializer)"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "SetListItems()",
    "kind": "Method",
    "detail": "Function (template<ItemObjectT,AllocatorType = FDefaultAllocator> void)",
    "insertText": "SetListItems(const TArray<ItemObjectT, AllocatorType>& InListItems)"
  },
  {
    "label": "ClearListItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearListItems()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (ListItems .)",
    "insertText": "Reserve(InListItems.Num())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ListItems .)",
    "insertText": "Add(ListItem)"
  },
  {
    "label": "OnItemsChanged()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "OnItemsChanged(ListItems, TArray<UObject*>())"
  },
  {
    "label": "RequestRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefresh()"
  },
  {
    "label": "GetSelectionMode()",
    "kind": "Method",
    "detail": "Function (} ESelectionMode::Type)",
    "insertText": "GetSelectionMode()"
  },
  {
    "label": "SetSelectedItem()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSelectedItem(const UObject* Item)"
  },
  {
    "label": "GetSelectedItem()",
    "kind": "Method",
    "detail": "Function (template<ObjectT = UObject> ObjectT*)",
    "insertText": "GetSelectedItem()"
  },
  {
    "label": "GetListObjectFromEntry()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetListObjectFromEntry(UUserWidget& EntryWidget)"
  },
  {
    "label": "OnItemsChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnItemsChanged(const TArray<UObject*>& AddedItems, const TArray<UObject*>& RemovedItems)"
  },
  {
    "label": "RebuildListWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<STableViewBase>)",
    "insertText": "RebuildListWidget()"
  },
  {
    "label": "HandleListEntryHovered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleListEntryHovered(UUserWidget& EntryWidget)"
  },
  {
    "label": "HandleListEntryUnhovered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleListEntryUnhovered(UUserWidget& EntryWidget)"
  },
  {
    "label": "OnRefreshDesignerItems()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnRefreshDesignerItems()"
  },
  {
    "label": "OnGenerateEntryWidgetInternal()",
    "kind": "Method",
    "detail": "Function (# endif UUserWidget&)",
    "insertText": "OnGenerateEntryWidgetInternal(UObject* Item, TSubclassOf<UUserWidget> DesiredEntryClass, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "GetDesiredEntryPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetDesiredEntryPadding(UObject* Item)"
  },
  {
    "label": "OnItemClickedInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemClickedInternal(UObject* Item)"
  },
  {
    "label": "OnItemDoubleClickedInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClickedInternal(UObject* Item)"
  },
  {
    "label": "OnSelectionChangedInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChangedInternal(UObject* FirstSelectedItem)"
  },
  {
    "label": "OnItemScrolledIntoViewInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemScrolledIntoViewInternal(UObject* Item, UUserWidget& EntryWidget)"
  },
  {
    "label": "OnListViewScrolledInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnListViewScrolledInternal(float ItemOffset, float DistanceRemaining)"
  },
  {
    "label": "HandleOnEntryInitializedInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnEntryInitializedInternal(UObject* Item, const TSharedRef<ITableRow>& TableRow)"
  },
  {
    "label": "ConstructListView()",
    "kind": "Method",
    "detail": "Function (template<template<> class ListViewT = SListView> TSharedRef<ListViewT<UObject*>>)",
    "insertText": "ConstructListView()"
  },
  {
    "label": "ListViewT()",
    "kind": "Method",
    "detail": "Function (FListViewConstructArgs Args ; Args . bAllowFocus = bIsFocusable ; Args . SelectionMode = SelectionMode ; Args . bClearSelectionOnClick = bClearSelectionOnClick ; Args . ConsumeMouseWheel = ConsumeMouseWheel ; Args . bReturnFocusToSelection = bReturnFocusToSelection ; Args . Orientation = Orientation ; Args . ListViewStyle =& WidgetStyle ; Args . ScrollBarStyle =& ScrollBarStyle ; Args . ScrollBarPadding = ScrollBarPadding ; Args . ScrollIntoViewAlignment = ScrollIntoViewAlignment ; MyListView = ITypedUMGListView<UObject*>::ConstructListView<)",
    "insertText": "ListViewT(this, ListItems, Args)"
  },
  {
    "label": "SetOnEntryInitialized()",
    "kind": "Method",
    "detail": "Function (MyListView ->)",
    "insertText": "SetOnEntryInitialized(SListView<UObject*>::FOnEntryInitialized::CreateUObject(this, &UListView::HandleOnEntryInitializedInternal))"
  },
  {
    "label": "InitVerticalEntrySpacing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitVerticalEntrySpacing(float InVerticalEntrySpacing)"
  }
]