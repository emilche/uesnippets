[
  {
    "label": "StreamCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StreamCollection"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_STREAM_COLLECTION_H_ # define PC_STREAM_COLLECTION_H_ # include<string> # include<utility> # include<vector> # include \" api / peer_connection_interface . h \" namespace webrtc { class StreamCollection : public StreamCollectionInterface { public : rtc::scoped_refptr<StreamCollection>)",
    "insertText": "Create()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} rtc::scoped_refptr<StreamCollection>)",
    "insertText": "Create(StreamCollection* streams)"
  },
  {
    "label": "count()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "count()"
  },
  {
    "label": "at()",
    "kind": "Method",
    "detail": "Function (} MediaStreamInterface*)",
    "insertText": "at(size_t index)"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (} MediaStreamInterface*)",
    "insertText": "find(const std::string& id)"
  },
  {
    "label": "FindAudioTrack()",
    "kind": "Method",
    "detail": "Function (} } return NULL ; } MediaStreamTrackInterface*)",
    "insertText": "FindAudioTrack(const std::string& id)"
  },
  {
    "label": "FindAudioTrack()",
    "kind": "Method",
    "detail": "Function (MediaStreamTrackInterface* track = media_streams_ [ i ] ->)",
    "insertText": "FindAudioTrack(id).get()"
  },
  {
    "label": "FindVideoTrack()",
    "kind": "Method",
    "detail": "Function (MediaStreamTrackInterface* track = media_streams_ [ i ] ->)",
    "insertText": "FindVideoTrack(id).get()"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (} media_streams_ .)",
    "insertText": "push_back(std::move(stream))"
  },
  {
    "label": "RemoveStream()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveStream(MediaStreamInterface* remove_stream)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (media_streams_ .)",
    "insertText": "erase(it)"
  },
  {
    "label": "StreamCollection()",
    "kind": "Method",
    "detail": "Function (break ; } } } protected :)",
    "insertText": "StreamCollection()"
  },
  {
    "label": "StreamCollection()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "StreamCollection(StreamCollection* original) : media_streams_(original->media_streams_)"
  }
]