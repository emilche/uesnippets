[
  {
    "label": "FCameraControllerUserImpulseData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraControllerUserImpulseData"
  },
  {
    "label": "FCameraControllerConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCameraControllerConfig"
  },
  {
    "label": "FEditorCameraController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorCameraController"
  },
  {
    "label": "FEditorCameraController()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "FEditorCameraController()"
  },
  {
    "label": "UpdateSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSimulation(\n\t\tconst FCameraControllerUserImpulseData& UserImpulseData,\n\t\tconst float DeltaTime,\n\t\tconst bool bAllowRecoilIfNoImpulse,\n\t\tconst float MovementSpeedScale,\n\t\tFVector& InOutCameraPosition,\n\t\tFVector& InOutCameraEuler,\n\t\tfloat& InOutCameraFOV )"
  },
  {
    "label": "ResetVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetVelocity()"
  },
  {
    "label": "ApplyImpulseDeadZone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyImpulseDeadZone( const FCameraControllerUserImpulseData& InUserImpulse,\n\t\t\t\t\t\t\t   FCameraControllerUserImpulseData& OutUserImpulse,\n\t\t\t\t\t\t\t   bool& bOutAnyImpulseData )"
  },
  {
    "label": "UpdatePosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePosition( const FCameraControllerUserImpulseData& UserImpulse, const float DeltaTime, const float MovementSpeedScale, const FVector& CameraEuler, FVector& InOutCameraPosition )"
  },
  {
    "label": "UpdateFOV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFOV( const FCameraControllerUserImpulseData& UserImpulse, const float DeltaTime, float& InOutCameraFOV )"
  },
  {
    "label": "ApplyRecoil()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRecoil( const float DeltaTime, const bool bAllowRecoilIfNoImpulse, bool bAnyUserImpulse, float& InOutCameraFOV )"
  },
  {
    "label": "UpdateRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRotation( const FCameraControllerUserImpulseData& UserImpulse, const float DeltaTime, FVector &InOutCameraEuler )"
  }
]