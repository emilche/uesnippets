[
  {
    "label": "FCbFieldView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldView"
  },
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StringFwd . h \" # define class FCbFieldView ; class FCbWriter ; enum class EQueuedWorkPriority : uint8 ; namespace UE::DerivedData { enum class EPriority : uint8 { Lowest,Low,Normal,High,Highest,Blocking,} ; FAnsiStringBuilderBase&)",
    "insertText": "operator(FAnsiStringBuilderBase& Builder, EPriority Priority)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWideStringBuilderBase&)",
    "insertText": "operator(FWideStringBuilderBase& Builder, EPriority Priority)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FUtf8StringBuilderBase&)",
    "insertText": "operator(FUtf8StringBuilderBase& Builder, EPriority Priority)"
  },
  {
    "label": "TryLexFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLexFromString(EPriority& OutPriority, FUtf8StringView String)"
  },
  {
    "label": "TryLexFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLexFromString(EPriority& OutPriority, FWideStringView String)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, EPriority Priority)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, EPriority& OutPriority, EPriority Default = EPriority::Normal)"
  },
  {
    "label": "ConvertToQueuedWorkPriority()",
    "kind": "Method",
    "detail": "Function (EQueuedWorkPriority)",
    "insertText": "ConvertToQueuedWorkPriority(EPriority Priority)"
  },
  {
    "label": "ConvertFromQueuedWorkPriority()",
    "kind": "Method",
    "detail": "Function (EPriority)",
    "insertText": "ConvertFromQueuedWorkPriority(EQueuedWorkPriority Priority)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (enum class EStatus : uint8 { Ok,Error,Canceled,} ; FAnsiStringBuilderBase&)",
    "insertText": "operator(FAnsiStringBuilderBase& Builder, EStatus Status)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWideStringBuilderBase&)",
    "insertText": "operator(FWideStringBuilderBase& Builder, EStatus Status)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FUtf8StringBuilderBase&)",
    "insertText": "operator(FUtf8StringBuilderBase& Builder, EStatus Status)"
  },
  {
    "label": "TryLexFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLexFromString(EStatus& OutStatus, FUtf8StringView String)"
  },
  {
    "label": "TryLexFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLexFromString(EStatus& OutStatus, FWideStringView String)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, EStatus Status)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, EStatus& OutStatus, EStatus Default = EStatus::Ok)"
  }
]