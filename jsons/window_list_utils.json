[
  {
    "label": "GetWindowList()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_MAC_WINDOW_LIST_UTILS_H_ # define MODULES_DESKTOP_CAPTURE_MAC_WINDOW_LIST_UTILS_H_ # include<ApplicationServices / ApplicationServices . h> # include<string> # include \" api / function_view . h \" # include \" modules / desktop_capture / desktop_capture_types . h \" # include \" modules / desktop_capture / desktop_capturer . h \" # include \" modules / desktop_capture / desktop_geometry . h \" # include \" modules / desktop_capture / mac / desktop_configuration . h \" namespace webrtc { bool)",
    "insertText": "GetWindowList(rtc::FunctionView<bool(CFDictionaryRef)> on_window, bool ignore_minimized, bool only_zero_layer)"
  },
  {
    "label": "GetWindowList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWindowList(DesktopCapturer::SourceList* windows, bool ignore_minimized, bool only_zero_layer)"
  },
  {
    "label": "IsWindowFullScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWindowFullScreen(const MacDesktopConfiguration& desktop_config, CFDictionaryRef window)"
  },
  {
    "label": "IsWindowFullScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWindowFullScreen(const MacDesktopConfiguration& desktop_config, CGWindowID id)"
  },
  {
    "label": "IsWindowOnScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWindowOnScreen(CFDictionaryRef window)"
  },
  {
    "label": "IsWindowOnScreen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWindowOnScreen(CGWindowID id)"
  },
  {
    "label": "GetWindowTitle()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetWindowTitle(CFDictionaryRef window)"
  },
  {
    "label": "GetWindowTitle()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetWindowTitle(CGWindowID id)"
  },
  {
    "label": "GetWindowOwnerName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetWindowOwnerName(CFDictionaryRef window)"
  },
  {
    "label": "GetWindowOwnerName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetWindowOwnerName(CGWindowID id)"
  },
  {
    "label": "GetWindowId()",
    "kind": "Method",
    "detail": "Function (WindowId)",
    "insertText": "GetWindowId(CFDictionaryRef window)"
  },
  {
    "label": "GetWindowOwnerPid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetWindowOwnerPid(CFDictionaryRef window)"
  },
  {
    "label": "GetWindowOwnerPid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetWindowOwnerPid(CGWindowID id)"
  },
  {
    "label": "GetScaleFactorAtPosition()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaleFactorAtPosition(const MacDesktopConfiguration& desktop_config, DesktopVector position)"
  },
  {
    "label": "GetWindowScaleFactor()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWindowScaleFactor(CGWindowID id, DesktopSize size)"
  },
  {
    "label": "GetWindowBounds()",
    "kind": "Method",
    "detail": "Function (DesktopRect)",
    "insertText": "GetWindowBounds(CFDictionaryRef window)"
  },
  {
    "label": "GetWindowBounds()",
    "kind": "Method",
    "detail": "Function (DesktopRect)",
    "insertText": "GetWindowBounds(CGWindowID id)"
  }
]