[
  {
    "label": "FileRemover",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileRemover"
  },
  {
    "label": "DiffFilesWithTolerance()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_FILEUTILITIES_H # define LLVM_SUPPORT_FILEUTILITIES_H # include \" llvm / Support / FileSystem . h \" # include \" llvm / Support / Path . h \" namespace llvm { int)",
    "insertText": "DiffFilesWithTolerance(StringRef FileA, StringRef FileB, double AbsTol, double RelTol, std::string *Error = nullptr)"
  },
  {
    "label": "FileRemover()",
    "kind": "Method",
    "detail": "Function (class FileRemover { SmallString<1 2 8> Filename ; bool DeleteIt ; public :)",
    "insertText": "FileRemover() : DeleteIt(false)"
  },
  {
    "label": "FileRemover()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FileRemover(const Twine& filename, bool deleteIt = true) : DeleteIt(deleteIt)"
  },
  {
    "label": "toVector()",
    "kind": "Method",
    "detail": "Function (filename .)",
    "insertText": "toVector(Filename)"
  },
  {
    "label": "FileRemover()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FileRemover()"
  },
  {
    "label": "remove()",
    "kind": "Method",
    "detail": "Function (sys::)",
    "insertText": "remove(Filename)"
  },
  {
    "label": "setFile()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "setFile(const Twine& filename, bool deleteIt = true)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (} Filename .)",
    "insertText": "clear()"
  },
  {
    "label": "releaseFile()",
    "kind": "Method",
    "detail": "Function (DeleteIt = deleteIt ; } void)",
    "insertText": "releaseFile()"
  }
]