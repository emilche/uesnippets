[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FPackageIndex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageIndex"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FLazyObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLazyObjectPtr"
  },
  {
    "label": "FObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectPtr"
  },
  {
    "label": "FSoftObjectPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPath"
  },
  {
    "label": "FSoftObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPtr"
  },
  {
    "label": "FWeakObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeakObjectPtr"
  },
  {
    "label": "FJsonArchiveInputFormatter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonArchiveInputFormatter"
  },
  {
    "label": "FObjectRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectRecord"
  },
  {
    "label": "EscapeFieldName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "EscapeFieldName(const TCHAR* Name)"
  },
  {
    "label": "UnescapeFieldName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "UnescapeFieldName(const TCHAR* Name)"
  },
  {
    "label": "GetValueType()",
    "kind": "Method",
    "detail": "Function (EArchiveValueType)",
    "insertText": "GetValueType(const FJsonValue &Value)"
  }
]