[
  {
    "label": "_cef_v8exception_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8exception_t"
  },
  {
    "label": "_cef_v8handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8handler_t"
  },
  {
    "label": "_cef_v8stack_frame_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8stack_frame_t"
  },
  {
    "label": "_cef_v8value_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8value_t"
  },
  {
    "label": "_cef_v8context_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8context_t"
  },
  {
    "label": "_cef_task_runner_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_task_runner_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_frame_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_frame_t"
  },
  {
    "label": "_cef_v8accessor_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8accessor_t"
  },
  {
    "label": "_cef_v8interceptor_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8interceptor_t"
  },
  {
    "label": "_cef_v8array_buffer_release_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8array_buffer_release_callback_t"
  },
  {
    "label": "_cef_base_ref_counted_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_base_ref_counted_t"
  },
  {
    "label": "_cef_v8stack_trace_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_v8stack_trace_t"
  },
  {
    "label": "_cef_task_runner_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_V8_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_V8_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_browser_capi . h \" # include \" include / capi / cef_frame_capi . h \" # include \" include / capi / cef_task_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_v8exception_t ; struct _cef_v8handler_t ; struct _cef_v8stack_frame_t ; struct _cef_v8value_t ; typedef struct _cef_v8context_t { cef_base_ref_counted_t base ; struct)",
    "insertText": "_cef_task_runner_t(CEF_CALLBACK* get_task_runner)( struct _cef_v8context_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_v8context_t* self)"
  },
  {
    "label": "_cef_browser_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_browser_t(CEF_CALLBACK* get_browser)( struct _cef_v8context_t* self)"
  },
  {
    "label": "_cef_frame_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_frame_t(CEF_CALLBACK* get_frame)(struct _cef_v8context_t* self)"
  },
  {
    "label": "_cef_v8value_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8value_t(CEF_CALLBACK* get_global)( struct _cef_v8context_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* enter)(struct _cef_v8context_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* exit)(struct _cef_v8context_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_same)(struct _cef_v8context_t* self, struct _cef_v8context_t* that)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* eval)(struct _cef_v8context_t* self, const cef_string_t* code, const cef_string_t* script_url, int start_line, struct _cef_v8value_t** retval, struct _cef_v8exception_t** exception)"
  },
  {
    "label": "cef_v8context_get_current_context()",
    "kind": "Method",
    "detail": "Function (} cef_v8context_t ; CEF_EXPORT cef_v8context_t*)",
    "insertText": "cef_v8context_get_current_context()"
  },
  {
    "label": "cef_v8context_get_entered_context()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8context_t*)",
    "insertText": "cef_v8context_get_entered_context()"
  },
  {
    "label": "cef_v8context_in_context()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_v8context_in_context()"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef struct _cef_v8handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* execute)(struct _cef_v8handler_t* self, const cef_string_t* name, struct _cef_v8value_t* object, size_t argumentsCount, struct _cef_v8value_t* const* arguments, struct _cef_v8value_t** retval, cef_string_t* exception)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (} cef_v8handler_t ; typedef struct _cef_v8accessor_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* get)(struct _cef_v8accessor_t* self, const cef_string_t* name, struct _cef_v8value_t* object, struct _cef_v8value_t** retval, cef_string_t* exception)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set)(struct _cef_v8accessor_t* self, const cef_string_t* name, struct _cef_v8value_t* object, struct _cef_v8value_t* value, cef_string_t* exception)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (} cef_v8accessor_t ; typedef struct _cef_v8interceptor_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* get_byname)(struct _cef_v8interceptor_t* self, const cef_string_t* name, struct _cef_v8value_t* object, struct _cef_v8value_t** retval, cef_string_t* exception)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_byindex)(struct _cef_v8interceptor_t* self, int index, struct _cef_v8value_t* object, struct _cef_v8value_t** retval, cef_string_t* exception)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_byname)(struct _cef_v8interceptor_t* self, const cef_string_t* name, struct _cef_v8value_t* object, struct _cef_v8value_t* value, cef_string_t* exception)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_byindex)(struct _cef_v8interceptor_t* self, int index, struct _cef_v8value_t* object, struct _cef_v8value_t* value, cef_string_t* exception)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (} cef_v8interceptor_t ; typedef struct _cef_v8exception_t { cef_base_ref_counted_t base ;)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_message)( struct _cef_v8exception_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_source_line)( struct _cef_v8exception_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_script_resource_name)( struct _cef_v8exception_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_line_number)(struct _cef_v8exception_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_start_position)(struct _cef_v8exception_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_end_position)(struct _cef_v8exception_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_start_column)(struct _cef_v8exception_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_end_column)(struct _cef_v8exception_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_v8exception_t ; typedef struct _cef_v8array_buffer_release_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* release_buffer)( struct _cef_v8array_buffer_release_callback_t* self, void* buffer)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (} cef_v8array_buffer_release_callback_t ; typedef struct _cef_v8value_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_undefined)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_null)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_bool)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_int)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_uint)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_double)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_date)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_string)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_object)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_array)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_array_buffer)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_function)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_same)(struct _cef_v8value_t* self, struct _cef_v8value_t* that)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_bool_value)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int32(CEF_CALLBACK* get_int_value)(struct _cef_v8value_t* self)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "uint32(CEF_CALLBACK* get_uint_value)(struct _cef_v8value_t* self)"
  },
  {
    "label": "cef_time_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_time_t(CEF_CALLBACK* get_date_value)(struct _cef_v8value_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_string_value)( struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_user_created)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_exception)(struct _cef_v8value_t* self)"
  },
  {
    "label": "_cef_v8exception_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8exception_t(CEF_CALLBACK* get_exception)( struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* clear_exception)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* will_rethrow_exceptions)(struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_rethrow_exceptions)(struct _cef_v8value_t* self, int rethrow)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_value_bykey)(struct _cef_v8value_t* self, const cef_string_t* key)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* has_value_byindex)(struct _cef_v8value_t* self, int index)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* delete_value_bykey)(struct _cef_v8value_t* self, const cef_string_t* key)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* delete_value_byindex)(struct _cef_v8value_t* self, int index)"
  },
  {
    "label": "_cef_v8value_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8value_t(CEF_CALLBACK* get_value_bykey)( struct _cef_v8value_t* self, const cef_string_t* key)"
  },
  {
    "label": "_cef_v8value_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8value_t(CEF_CALLBACK* get_value_byindex)(struct _cef_v8value_t* self, int index)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_value_bykey)(struct _cef_v8value_t* self, const cef_string_t* key, struct _cef_v8value_t* value, cef_v8_propertyattribute_t attribute)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_value_byindex)(struct _cef_v8value_t* self, int index, struct _cef_v8value_t* value)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_value_byaccessor)(struct _cef_v8value_t* self, const cef_string_t* key, cef_v8_accesscontrol_t settings, cef_v8_propertyattribute_t attribute)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_keys)(struct _cef_v8value_t* self, cef_string_list_t keys)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_user_data)(struct _cef_v8value_t* self, struct _cef_base_ref_counted_t* user_data)"
  },
  {
    "label": "_cef_base_ref_counted_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_base_ref_counted_t(CEF_CALLBACK* get_user_data)( struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_externally_allocated_memory)( struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* adjust_externally_allocated_memory)( struct _cef_v8value_t* self, int change_in_bytes)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_array_length)(struct _cef_v8value_t* self)"
  },
  {
    "label": "_cef_v8array_buffer_release_callback_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8array_buffer_release_callback_t(CEF_CALLBACK* get_array_buffer_release_callback)( struct _cef_v8value_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* neuter_array_buffer)(struct _cef_v8value_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_function_name)( struct _cef_v8value_t* self)"
  },
  {
    "label": "_cef_v8handler_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8handler_t(CEF_CALLBACK* get_function_handler)( struct _cef_v8value_t* self)"
  },
  {
    "label": "_cef_v8value_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8value_t(CEF_CALLBACK* execute_function)( struct _cef_v8value_t* self, struct _cef_v8value_t* object, size_t argumentsCount, struct _cef_v8value_t* const* arguments)"
  },
  {
    "label": "_cef_v8value_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8value_t(CEF_CALLBACK* execute_function_with_context)( struct _cef_v8value_t* self, struct _cef_v8context_t* context, struct _cef_v8value_t* object, size_t argumentsCount, struct _cef_v8value_t* const* arguments)"
  },
  {
    "label": "cef_v8value_create_undefined()",
    "kind": "Method",
    "detail": "Function (} cef_v8value_t ; CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_undefined()"
  },
  {
    "label": "cef_v8value_create_null()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_null()"
  },
  {
    "label": "cef_v8value_create_bool()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_bool(int value)"
  },
  {
    "label": "cef_v8value_create_int()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_int(int32 value)"
  },
  {
    "label": "cef_v8value_create_uint()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_uint(uint32 value)"
  },
  {
    "label": "cef_v8value_create_double()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_double(double value)"
  },
  {
    "label": "cef_v8value_create_date()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_date(const cef_time_t* date)"
  },
  {
    "label": "cef_v8value_create_string()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_string(const cef_string_t* value)"
  },
  {
    "label": "cef_v8value_create_object()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_object(cef_v8accessor_t* accessor, cef_v8interceptor_t* interceptor)"
  },
  {
    "label": "cef_v8value_create_array()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_array(int length)"
  },
  {
    "label": "cef_v8value_create_array_buffer()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_array_buffer(void* buffer, size_t length, cef_v8array_buffer_release_callback_t* release_callback)"
  },
  {
    "label": "cef_v8value_create_function()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_v8value_t*)",
    "insertText": "cef_v8value_create_function(const cef_string_t* name, cef_v8handler_t* handler)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef struct _cef_v8stack_trace_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_v8stack_trace_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_frame_count)(struct _cef_v8stack_trace_t* self)"
  },
  {
    "label": "_cef_v8stack_frame_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_v8stack_frame_t(CEF_CALLBACK* get_frame)(struct _cef_v8stack_trace_t* self, int index)"
  },
  {
    "label": "cef_v8stack_trace_get_current()",
    "kind": "Method",
    "detail": "Function (} cef_v8stack_trace_t ; CEF_EXPORT cef_v8stack_trace_t*)",
    "insertText": "cef_v8stack_trace_get_current(int frame_limit)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef struct _cef_v8stack_frame_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_script_name)( struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_script_name_or_source_url)( struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_function_name)( struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_line_number)(struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_column)(struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_eval)(struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_constructor)(struct _cef_v8stack_frame_t* self)"
  },
  {
    "label": "cef_register_extension()",
    "kind": "Method",
    "detail": "Function (} cef_v8stack_frame_t ; CEF_EXPORT int)",
    "insertText": "cef_register_extension(const cef_string_t* extension_name, const cef_string_t* javascript_code, cef_v8handler_t* handler)"
  }
]