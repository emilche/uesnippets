[
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "SCENEOUTLINER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCENEOUTLINER_API"
  },
  {
    "label": "EItemSortOrder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EItemSortOrder"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "BuildWorldPickerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildWorldPickerMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "IsActorDisplayable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorDisplayable(const SSceneOutliner* SceneOutliner, const AActor* Actor, bool bShowLevelInstanceContent = false)"
  },
  {
    "label": "IsActorLevelDisplayable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorLevelDisplayable(ULevel* InLevel)"
  },
  {
    "label": "OnSelectWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectWorld(TWeakObjectPtr<UWorld> World)"
  },
  {
    "label": "ChooseRepresentingWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChooseRepresentingWorld()"
  },
  {
    "label": "SynchronizeActorSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeActorSelection()"
  }
]