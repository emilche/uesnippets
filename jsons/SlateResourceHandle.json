[
  {
    "label": "FSlateSharedHandleData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateSharedHandleData"
  },
  {
    "label": "FSlateShaderResourceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResourceProxy"
  },
  {
    "label": "FSlateResourceHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateResourceHandle"
  },
  {
    "label": "FSlateShaderResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateShaderResourceManager"
  },
  {
    "label": "FSlateNullShaderResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateNullShaderResourceManager"
  },
  {
    "label": "FSlateResourceHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Templates / SharedPointer . h \" class FSlateSharedHandleData ; class FSlateShaderResourceProxy ; class FSlateResourceHandle { class FSlateShaderResourceManager ; class FSlateNullShaderResourceManager ; public :)",
    "insertText": "FSlateResourceHandle()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetResourceProxy()",
    "kind": "Method",
    "detail": "Function (const FSlateShaderResourceProxy*)",
    "insertText": "GetResourceProxy()"
  },
  {
    "label": "FSlateResourceHandle()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FSlateResourceHandle(const TSharedPtr<FSlateSharedHandleData>& InData)"
  }
]