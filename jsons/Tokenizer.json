[
  {
    "label": "NVCORE_CLASS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NVCORE_CLASS"
  },
  {
    "label": "TokenizerException",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TokenizerException"
  },
  {
    "label": "SkipEmptyLines",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SkipEmptyLines"
  },
  {
    "label": "SkipEndOfLine",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SkipEndOfLine"
  },
  {
    "label": "NVCORE_CLASS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NVCORE_CLASS"
  },
  {
    "label": "Token()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Token()"
  },
  {
    "label": "isNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isNull()"
  },
  {
    "label": "Tokenizer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Tokenizer(Stream * stream)"
  },
  {
    "label": "nextLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "nextLine(bool skipEmptyLines = true)"
  },
  {
    "label": "nextToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "nextToken(bool skipEndOfLine = false)"
  },
  {
    "label": "readChar()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "readChar()"
  },
  {
    "label": "readLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "readLine()"
  },
  {
    "label": "readToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "readToken()"
  },
  {
    "label": "skipSpaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "skipSpaces()"
  },
  {
    "label": "isSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isSpace(char c)"
  },
  {
    "label": "isDelimiter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isDelimiter(char c)"
  }
]