[
  {
    "label": "FStoreClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreClient"
  },
  {
    "label": "IAnalysisService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisService"
  },
  {
    "label": "IModuleService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModuleService"
  },
  {
    "label": "FInsightsTestRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsTestRunner"
  },
  {
    "label": "SSessionInfoWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSessionInfoWindow"
  },
  {
    "label": "FInsightsMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsMenuBuilder"
  },
  {
    "label": "FAsyncTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncTaskData"
  },
  {
    "label": "FInsightsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsManager"
  },
  {
    "label": "FInsightsActionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInsightsActionManager"
  },
  {
    "label": "FAsyncTaskData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Ticker . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Input / DragAndDrop . h \" # include \" Trace / StoreConnection . h \" # include \" InsightsCore / Common / AvailabilityCheck . h \" # include \" InsightsCore / Common / Stopwatch . h \" # include \" Insights / IInsightsManager . h \" # include \" Insights / InsightsCommands . h \" # include \" Insights / InsightsSettings . h \" # include \" Insights / IUnrealInsightsModule . h \" namespace UE::Trace { class FStoreClient ; } namespace TraceServices { class IAnalysisService ; class IModuleService ; } class FInsightsTestRunner ; namespace UE::Insights { class SSessionInfoWindow ; class FInsightsMenuBuilder ; struct FAsyncTaskData { FString Name ; FGraphEventRef GraphEvent ;)",
    "insertText": "FAsyncTaskData(FGraphEventRef InGraphEvent, const FString InName)"
  },
  {
    "label": "FInsightsManager()",
    "kind": "Method",
    "detail": "Function (Name = InName ; GraphEvent = InGraphEvent ; } } ; class FInsightsManager : public TSharedFromThis<FInsightsManager>,public::Insights::IInsightsManager { class FInsightsActionManager ; public :)",
    "insertText": "FInsightsManager(TSharedRef<TraceServices::IAnalysisService> TraceAnalysisService, TSharedRef<TraceServices::IModuleService> TraceModuleService)"
  },
  {
    "label": "FInsightsManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FInsightsManager()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInsightsManager>)",
    "insertText": "CreateInstance(TSharedRef<TraceServices::IAnalysisService> TraceAnalysisService, TSharedRef<TraceServices::IModuleService> TraceModuleService)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInsightsManager>)",
    "insertText": "Get()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "RegisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabs(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "UnregisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabs()"
  },
  {
    "label": "Exec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Exec(const TCHAR* Cmd, FOutputDevice& Ar)"
  },
  {
    "label": "GetAnalysisService()",
    "kind": "Method",
    "detail": "Function (TSharedRef<TraceServices::IAnalysisService>)",
    "insertText": "GetAnalysisService()"
  },
  {
    "label": "ReconnectToStore()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ReconnectToStore()"
  },
  {
    "label": "GetStoreClient()",
    "kind": "Method",
    "detail": "Function (} UE::Trace::FStoreClient*)",
    "insertText": "GetStoreClient()"
  },
  {
    "label": "GetStoreClientCriticalSection()",
    "kind": "Method",
    "detail": "Function (} FCriticalSection&)",
    "insertText": "GetStoreClientCriticalSection()"
  },
  {
    "label": "GetStoreAddressAndPort()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetStoreAddressAndPort(uint32& OutStoreAddress, uint32& OutStorePort)"
  },
  {
    "label": "GetStoreDir()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetStoreDir()"
  },
  {
    "label": "GetLastStoreHost()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetLastStoreHost()"
  },
  {
    "label": "GetLastStorePort()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetLastStorePort()"
  },
  {
    "label": "IsLocalHost()",
    "kind": "Method",
    "detail": "Function (} const bool)",
    "insertText": "IsLocalHost()"
  },
  {
    "label": "CanChangeStoreSettings()",
    "kind": "Method",
    "detail": "Function (} const bool)",
    "insertText": "CanChangeStoreSettings()"
  },
  {
    "label": "GetSession()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<const TraceServices::IAnalysisSession>)",
    "insertText": "GetSession()"
  },
  {
    "label": "GetTraceId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTraceId()"
  },
  {
    "label": "GetCommands()",
    "kind": "Method",
    "detail": "Function (const FInsightsCommands&)",
    "insertText": "GetCommands()"
  },
  {
    "label": "GetActionManager()",
    "kind": "Method",
    "detail": "Function (FInsightsActionManager&)",
    "insertText": "GetActionManager()"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (FInsightsSettings&)",
    "insertText": "GetSettings()"
  },
  {
    "label": "AssignSessionInfoWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignSessionInfoWindow(const TSharedRef<SSessionInfoWindow>& InSessionInfoWindow)"
  },
  {
    "label": "RemoveSessionInfoWindow()",
    "kind": "Method",
    "detail": "Function (SessionInfoWindow = InSessionInfoWindow ; } void)",
    "insertText": "RemoveSessionInfoWindow()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (SessionInfoWindow .)",
    "insertText": "Reset()"
  },
  {
    "label": "GetSessionInfoWindow()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<class SSessionInfoWindow>)",
    "insertText": "GetSessionInfoWindow()"
  },
  {
    "label": "IsDebugInfoEnabled()",
    "kind": "Method",
    "detail": "Function (} const bool)",
    "insertText": "IsDebugInfoEnabled()"
  },
  {
    "label": "ShowOpenTraceFileDialog()",
    "kind": "Method",
    "detail": "Function (bIsDebugInfoEnabled = bDebugInfoEnabledState ; } bool)",
    "insertText": "ShowOpenTraceFileDialog(FString& OutTraceFile)"
  },
  {
    "label": "OpenTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceFile()"
  },
  {
    "label": "OpenTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceFile(const FString& TraceFilename)"
  },
  {
    "label": "ToggleAutoLoadLiveSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleAutoLoadLiveSession()"
  },
  {
    "label": "IsAutoLoadLiveSessionEnabled()",
    "kind": "Method",
    "detail": "Function (bIsAutoLoadLiveSessionEnabled = ! bIsAutoLoadLiveSessionEnabled ; } bool)",
    "insertText": "IsAutoLoadLiveSessionEnabled()"
  },
  {
    "label": "LoadLastLiveSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadLastLiveSession(float InRetryTime = 1.0f)"
  },
  {
    "label": "LoadTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadTrace(uint32 TraceId, bool InAutoQuit = false)"
  },
  {
    "label": "LoadTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadTraceFile()"
  },
  {
    "label": "LoadTraceFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadTraceFile(const FString& TraceFilename, bool InAutoQuit = false)"
  },
  {
    "label": "OnDragOver()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnDragOver(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnDrop(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "UpdateAppTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAppTitle()"
  },
  {
    "label": "OpenSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenSettings()"
  },
  {
    "label": "UpdateSessionDuration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSessionDuration()"
  },
  {
    "label": "CheckMemoryUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckMemoryUsage()"
  },
  {
    "label": "IsAnalysisComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnalysisComplete()"
  },
  {
    "label": "ResetSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSession(bool bNotify = true)"
  },
  {
    "label": "OpenTraceControlWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenTraceControlWindow()"
  },
  {
    "label": "GetSessionChangedEvent()",
    "kind": "Method",
    "detail": "Function (public :::Insights::IInsightsManager::FSessionChangedEvent&)",
    "insertText": "GetSessionChangedEvent()"
  },
  {
    "label": "SpawnSessionInfoTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnSessionInfoTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnSessionInfoTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSessionInfoTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "PollAnalysisInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PollAnalysisInfo()"
  },
  {
    "label": "OnSessionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSessionChanged()"
  },
  {
    "label": "OnSessionAnalysisCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSessionAnalysisCompleted()"
  },
  {
    "label": "SpawnAndActivateTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnAndActivateTabs()"
  },
  {
    "label": "ActivateTimingInsightsTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateTimingInsightsTab()"
  },
  {
    "label": "HandleResponseFileCmd()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleResponseFileCmd(const TCHAR* ResponseFile, FOutputDevice& Ar)"
  },
  {
    "label": "RegisterTraceControlTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTraceControlTab()"
  },
  {
    "label": "SpawnTraceControlTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTraceControlTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnTraceControlTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTraceControlTabClosed(TSharedRef<SDockTab> TabBeingClosed)"
  }
]