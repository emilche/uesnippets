[
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "KroneckerProductBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KroneckerProductBase"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "KroneckerProduct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KroneckerProduct"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "KroneckerProductSparse",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KroneckerProductSparse"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "lhs1()",
    "kind": "Method",
    "detail": "Function (Lhs1)",
    "insertText": "lhs1(m_A)"
  },
  {
    "label": "rhs1()",
    "kind": "Method",
    "detail": "Function (Rhs1)",
    "insertText": "rhs1(m_B)"
  },
  {
    "label": "itA()",
    "kind": "Method",
    "detail": "Function (LhsInnerIterator)",
    "insertText": "itA(lhs1,kA)"
  },
  {
    "label": "itB()",
    "kind": "Method",
    "detail": "Function (RhsInnerIterator)",
    "insertText": "itB(rhs1,kB)"
  },
  {
    "label": "itA()",
    "kind": "Method",
    "detail": "Function (LhsInnerIterator)",
    "insertText": "itA(lhs1,kA)"
  },
  {
    "label": "itB()",
    "kind": "Method",
    "detail": "Function (RhsInnerIterator)",
    "insertText": "itB(rhs1,kB)"
  }
]