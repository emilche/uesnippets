[
  {
    "label": "FMixerPlatformXAudio2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMixerPlatformXAudio2"
  },
  {
    "label": "FXAudio2VoiceCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXAudio2VoiceCallback"
  },
  {
    "label": "FXAudio2AsyncCreateResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FXAudio2AsyncCreateResult"
  },
  {
    "label": "comment()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioMixer . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # define USE_REDIST_HEADER PLATFORM_WINDOWS # define USE_REDIST_LIB PLATFORM_WINDOWS&& ! PLATFORM_CPU_ARM_FAMILY # if USE_REDIST_HEADER # include<xaudio2redist . h> # else # include<xaudio2 . h> # endif # include \" Windows / HideWindowsPlatformTypes . h \" # include \" Async / Future . h \" # if USE_REDIST_LIB # pragma)",
    "insertText": "comment(lib,\"xaudio2_9redist.lib\")"
  },
  {
    "label": "FXAudio2VoiceCallback()",
    "kind": "Method",
    "detail": "Function (class FMixerPlatformXAudio2 ; class FXAudio2VoiceCallback final : public IXAudio2VoiceCallback { public :)",
    "insertText": "FXAudio2VoiceCallback()"
  },
  {
    "label": "OnVoiceProcessingPassStart()",
    "kind": "Method",
    "detail": "Function (} private : void STDCALL)",
    "insertText": "OnVoiceProcessingPassStart(UINT32 BytesRequired)"
  },
  {
    "label": "OnVoiceProcessingPassEnd()",
    "kind": "Method",
    "detail": "Function (} void STDCALL)",
    "insertText": "OnVoiceProcessingPassEnd()"
  },
  {
    "label": "OnStreamEnd()",
    "kind": "Method",
    "detail": "Function (} void STDCALL)",
    "insertText": "OnStreamEnd()"
  },
  {
    "label": "OnBufferStart()",
    "kind": "Method",
    "detail": "Function (} void STDCALL)",
    "insertText": "OnBufferStart(void* BufferContext)"
  },
  {
    "label": "OnLoopEnd()",
    "kind": "Method",
    "detail": "Function (} void STDCALL)",
    "insertText": "OnLoopEnd(void* BufferContext)"
  },
  {
    "label": "OnVoiceError()",
    "kind": "Method",
    "detail": "Function (} void STDCALL)",
    "insertText": "OnVoiceError(void* BufferContext, HRESULT Error)"
  },
  {
    "label": "OnBufferEnd()",
    "kind": "Method",
    "detail": "Function (} void STDCALL)",
    "insertText": "OnBufferEnd(void* BufferContext)"
  },
  {
    "label": "FMixerPlatformXAudio2()",
    "kind": "Method",
    "detail": "Function (} ; class FMixerPlatformXAudio2 : public IAudioMixerPlatformInterface,public IXAudio2EngineCallback { public :)",
    "insertText": "FMixerPlatformXAudio2()"
  },
  {
    "label": "GetPlatformApi()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPlatformApi()"
  },
  {
    "label": "InitializeHardware()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "InitializeHardware()"
  },
  {
    "label": "CheckAudioDeviceChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckAudioDeviceChange()"
  },
  {
    "label": "TeardownHardware()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TeardownHardware()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "GetNumOutputDevices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNumOutputDevices(uint32& OutNumOutputDevices)"
  },
  {
    "label": "GetOutputDeviceInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOutputDeviceInfo(const uint32 InDeviceIndex, FAudioPlatformDeviceInfo& OutInfo)"
  },
  {
    "label": "GetCurrentDeviceName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentDeviceName()"
  },
  {
    "label": "GetDefaultOutputDeviceIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDefaultOutputDeviceIndex(uint32& OutDefaultDeviceIndex)"
  },
  {
    "label": "OpenAudioStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenAudioStream(const FAudioMixerOpenStreamParams& Params)"
  },
  {
    "label": "CloseAudioStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseAudioStream()"
  },
  {
    "label": "StartAudioStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartAudioStream()"
  },
  {
    "label": "StopAudioStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StopAudioStream()"
  },
  {
    "label": "MoveAudioStreamToNewAudioDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveAudioStreamToNewAudioDevice(const FString& InNewDeviceId)"
  },
  {
    "label": "RequestDeviceSwap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestDeviceSwap(const FString& DeviceID, bool bInForce, const TCHAR* InReason)"
  },
  {
    "label": "ResumePlaybackOnNewDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumePlaybackOnNewDevice()"
  },
  {
    "label": "GetPlatformDeviceInfo()",
    "kind": "Method",
    "detail": "Function (FAudioPlatformDeviceInfo)",
    "insertText": "GetPlatformDeviceInfo()"
  },
  {
    "label": "SubmitBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitBuffer(const uint8* Buffer)"
  },
  {
    "label": "DisablePCMAudioCaching()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisablePCMAudioCaching()"
  },
  {
    "label": "GetDefaultDeviceName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultDeviceName()"
  },
  {
    "label": "GetPlatformSettings()",
    "kind": "Method",
    "detail": "Function (FAudioPlatformSettings)",
    "insertText": "GetPlatformSettings()"
  },
  {
    "label": "OnHardwareUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHardwareUpdate()"
  },
  {
    "label": "GetDeviceInfoCache()",
    "kind": "Method",
    "detail": "Function (IAudioPlatformDeviceInfoCache*)",
    "insertText": "GetDeviceInfoCache()"
  },
  {
    "label": "RegisterDeviceChangedListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDeviceChangedListener()"
  },
  {
    "label": "UnregisterDeviceChangedListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterDeviceChangedListener()"
  },
  {
    "label": "OnDefaultCaptureDeviceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDefaultCaptureDeviceChanged(const EAudioDeviceRole InAudioDeviceRole, const FString& DeviceId)"
  },
  {
    "label": "OnDefaultRenderDeviceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDefaultRenderDeviceChanged(const EAudioDeviceRole InAudioDeviceRole, const FString& DeviceId)"
  },
  {
    "label": "OnDeviceAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeviceAdded(const FString& DeviceId, bool bIsRenderDevice)"
  },
  {
    "label": "OnDeviceRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeviceRemoved(const FString& DeviceId, bool bIsRenderDevice)"
  },
  {
    "label": "OnDeviceStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeviceStateChanged(const FString& DeviceId, const EAudioDeviceState InState, bool bIsRenderDevice)"
  },
  {
    "label": "OnSessionDisconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSessionDisconnect(Audio::IAudioMixerDeviceChangedListener::EDisconnectReason InReason)"
  },
  {
    "label": "GetDeviceId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDeviceId()"
  },
  {
    "label": "OnCriticalError()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnCriticalError(HRESULT Error)"
  },
  {
    "label": "OnProcessingPassStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProcessingPassStart()"
  },
  {
    "label": "OnProcessingPassEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProcessingPassEnd()"
  },
  {
    "label": "CheckThreadedDeviceSwap()",
    "kind": "Method",
    "detail": "Function (struct FXAudio2AsyncCreateResult { IXAudio2* XAudio2System = nullptr ; IXAudio2MasteringVoice* OutputAudioStreamMasteringVoice = nullptr ; IXAudio2SourceVoice* OutputAudioStreamSourceVoice = nullptr ; FAudioPlatformDeviceInfo DeviceInfo ; FString SwapReason ; float SuccessfullDurationMs = 0 . f ; } ; TFuture<FXAudio2AsyncCreateResult> ActiveDeviceSwap ; bool)",
    "insertText": "CheckThreadedDeviceSwap()"
  },
  {
    "label": "AllowDeviceSwap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowDeviceSwap()"
  },
  {
    "label": "ResetXAudio2System()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResetXAudio2System()"
  },
  {
    "label": "Suspend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Suspend()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume()"
  }
]