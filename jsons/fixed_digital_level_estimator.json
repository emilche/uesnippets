[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "FixedDigitalLevelEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FixedDigitalLevelEstimator"
  },
  {
    "label": "FixedDigitalLevelEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AGC2_FIXED_DIGITAL_LEVEL_ESTIMATOR_H_ # define MODULES_AUDIO_PROCESSING_AGC2_FIXED_DIGITAL_LEVEL_ESTIMATOR_H_ # include<array> # include<vector> # include \" modules / audio_processing / agc2 / agc2_common . h \" # include \" modules / audio_processing / include / audio_frame_view . h \" namespace webrtc { class ApmDataDumper ; class FixedDigitalLevelEstimator { public :)",
    "insertText": "FixedDigitalLevelEstimator(int sample_rate_hz, ApmDataDumper* apm_data_dumper)"
  },
  {
    "label": "FixedDigitalLevelEstimator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixedDigitalLevelEstimator(const FixedDigitalLevelEstimator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FixedDigitalLevelEstimator&)",
    "insertText": "operator(const FixedDigitalLevelEstimator&)"
  },
  {
    "label": "ComputeLevel()",
    "kind": "Method",
    "detail": "Function (std::array<float,kSubFramesInFrame>)",
    "insertText": "ComputeLevel(const AudioFrameView<const float>& float_frame)"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(int sample_rate_hz)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "LastAudioLevel()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "LastAudioLevel()"
  }
]