[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FMessageEndpoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageEndpoint"
  },
  {
    "label": "IMessageBus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageBus"
  },
  {
    "label": "ITargetDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetDevice"
  },
  {
    "label": "FTargetDeviceClaimDenied",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceClaimDenied"
  },
  {
    "label": "FTargetDeviceClaimed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceClaimed"
  },
  {
    "label": "FTargetDeviceServiceDeployCommit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServiceDeployCommit"
  },
  {
    "label": "FTargetDeviceServiceDeployFile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServiceDeployFile"
  },
  {
    "label": "FTargetDeviceServiceLaunchApp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServiceLaunchApp"
  },
  {
    "label": "FTargetDeviceServiceTerminateLaunchedProcess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServiceTerminateLaunchedProcess"
  },
  {
    "label": "FTargetDeviceServicePing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServicePing"
  },
  {
    "label": "FTargetDeviceServicePowerOff",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServicePowerOff"
  },
  {
    "label": "FTargetDeviceServicePowerOn",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServicePowerOn"
  },
  {
    "label": "FTargetDeviceServiceReboot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServiceReboot"
  },
  {
    "label": "FTargetDeviceServiceRunExecutable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServiceRunExecutable"
  },
  {
    "label": "FTargetDeviceUnclaimed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceUnclaimed"
  },
  {
    "label": "FTargetDeviceService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTargetDeviceService"
  },
  {
    "label": "HandleClaimDeniedMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleClaimDeniedMessage(const FTargetDeviceClaimDenied& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleClaimedMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleClaimedMessage( const FTargetDeviceClaimed& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context )"
  },
  {
    "label": "HandleUnclaimedMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUnclaimedMessage(const FTargetDeviceUnclaimed& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleTerminateLaunchedProcessMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTerminateLaunchedProcessMessage(const FTargetDeviceServiceTerminateLaunchedProcess& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandlePingMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePingMessage(const FTargetDeviceServicePing& InMessage, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandlePowerOffMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePowerOffMessage(const FTargetDeviceServicePowerOff& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandlePowerOnMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePowerOnMessage(const FTargetDeviceServicePowerOn& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleRebootMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRebootMessage(const FTargetDeviceServiceReboot& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  }
]