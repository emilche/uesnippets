[
  {
    "label": "AudioFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioFrame"
  },
  {
    "label": "VADActivity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VADActivity"
  },
  {
    "label": "SpeechType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpeechType"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (# ifndef API_AUDIO_AUDIO_FRAME_H_ # define API_AUDIO_AUDIO_FRAME_H_ # include<stddef . h> # include<stdint . h> # include \" api / audio / channel_layout . h \" # include \" api / rtp_packet_infos . h \" namespace webrtc { class AudioFrame { public : enum : size_t { kMaxDataSizeSamples = 7 6 8 0,kMaxDataSizeBytes = kMaxDataSizeSamples*)",
    "insertText": "sizeof(int16_t)"
  },
  {
    "label": "AudioFrame()",
    "kind": "Method",
    "detail": "Function (enum VADActivity { kVadActive = 0,kVadPassive = 1,kVadUnknown = 2 } ; enum SpeechType { kNormalSpeech = 0,kPLC = 1,kCNG = 2,kPLCCNG = 3,kCodecPLC = 5,kUndefined = 4 } ;)",
    "insertText": "AudioFrame()"
  },
  {
    "label": "AudioFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioFrame(const AudioFrame&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioFrame&)",
    "insertText": "operator(const AudioFrame&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ResetWithoutMuting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetWithoutMuting()"
  },
  {
    "label": "UpdateFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFrame(uint32_t timestamp, const int16_t* data, size_t samples_per_channel, int sample_rate_hz, SpeechType speech_type, VADActivity vad_activity, size_t num_channels = 1)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(const AudioFrame& src)"
  },
  {
    "label": "UpdateProfileTimeStamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateProfileTimeStamp()"
  },
  {
    "label": "ElapsedProfileTimeMs()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "ElapsedProfileTimeMs()"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (const int16_t*)",
    "insertText": "data()"
  },
  {
    "label": "mutable_data()",
    "kind": "Method",
    "detail": "Function (int16_t*)",
    "insertText": "mutable_data()"
  },
  {
    "label": "Mute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mute()"
  },
  {
    "label": "muted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "muted()"
  },
  {
    "label": "max_16bit_samples()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "max_16bit_samples()"
  },
  {
    "label": "absolute_capture_timestamp_ms()",
    "kind": "Method",
    "detail": "Function (absolute_capture_timestamp_ms_ = absolute_capture_time_stamp_ms ; } absl::optional<int64_t>)",
    "insertText": "absolute_capture_timestamp_ms()"
  }
]