[
  {
    "label": "D3D12_PROPERTY_LAYOUT_FORMAT_TABLE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D12_PROPERTY_LAYOUT_FORMAT_TABLE"
  },
  {
    "label": "FORMAT_DETAIL",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FORMAT_DETAIL"
  },
  {
    "label": "GetNumFormats()",
    "kind": "Method",
    "detail": "Function (# ifndef __D3D12_PROPERTY_LAYOUT_FORMAT_TABLE_H__ # define __D3D12_PROPERTY_LAYOUT_FORMAT_TABLE_H__ # include \" d3d12 . h \" # define MAP_ALIGN_REQUIREMENT 1 6 struct D3D12_PROPERTY_LAYOUT_FORMAT_TABLE { public : typedef struct FORMAT_DETAIL { DXGI_FORMAT DXGIFormat ; DXGI_FORMAT ParentFormat ; const DXGI_FORMAT* pDefaultFormatCastSet ; UINT8 BitsPerComponent [ 4 ] ; UINT8 BitsPerUnit ; BYTE SRGBFormat : 1 ; UINT WidthAlignment : 4 ; UINT HeightAlignment : 4 ; UINT DepthAlignment : 1 ; D3D_FORMAT_LAYOUT Layout : 1 ; D3D_FORMAT_TYPE_LEVEL TypeLevel : 2 ; D3D_FORMAT_COMPONENT_NAME ComponentName0 : 3 ; D3D_FORMAT_COMPONENT_NAME ComponentName1 : 3 ; D3D_FORMAT_COMPONENT_NAME ComponentName2 : 3 ; D3D_FORMAT_COMPONENT_NAME ComponentName3 : 3 ; D3D_FORMAT_COMPONENT_INTERPRETATION ComponentInterpretation0 : 3 ; D3D_FORMAT_COMPONENT_INTERPRETATION ComponentInterpretation1 : 3 ; D3D_FORMAT_COMPONENT_INTERPRETATION ComponentInterpretation2 : 3 ; D3D_FORMAT_COMPONENT_INTERPRETATION ComponentInterpretation3 : 3 ; bool bDX9VertexOrIndexFormat : 1 ; bool bDX9TextureFormat : 1 ; bool bFloatNormFormat : 1 ; bool bPlanar : 1 ; bool bYUV : 1 ; bool bDependantFormatCastSet : 1 ; bool bInternal : 1 ; } FORMAT_DETAIL ; private : const FORMAT_DETAIL s_FormatDetail [ ] ; const UINT s_NumFormats ; const LPCSTR s_FormatNames [ ] ; public : UINT)",
    "insertText": "GetNumFormats()"
  },
  {
    "label": "GetFormatTable()",
    "kind": "Method",
    "detail": "Function (const FORMAT_DETAIL*)",
    "insertText": "GetFormatTable()"
  },
  {
    "label": "GetHighestDefinedFeatureLevel()",
    "kind": "Method",
    "detail": "Function (D3D_FEATURE_LEVEL)",
    "insertText": "GetHighestDefinedFeatureLevel()"
  },
  {
    "label": "GetFormat()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT)",
    "insertText": "GetFormat(SIZE_T Index)"
  },
  {
    "label": "FormatExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FormatExists(DXGI_FORMAT Format)"
  },
  {
    "label": "FormatExistsInHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FormatExistsInHeader(DXGI_FORMAT Format, bool bExternalHeader = true)"
  },
  {
    "label": "GetByteAlignment()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetByteAlignment(DXGI_FORMAT Format)"
  },
  {
    "label": "IsBlockCompressFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBlockCompressFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (LPCSTR)",
    "insertText": "GetName(DXGI_FORMAT Format, bool bHideInternalFormats = true)"
  },
  {
    "label": "IsSRGBFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSRGBFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "GetBitsPerStencil()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetBitsPerStencil(DXGI_FORMAT Format)"
  },
  {
    "label": "GetFormatReturnTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFormatReturnTypes(DXGI_FORMAT Format, D3D_FORMAT_COMPONENT_INTERPRETATION* pInterpretations)"
  },
  {
    "label": "GetNumComponentsInFormat()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetNumComponentsInFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "Sequential2AbsoluteComponentIndex()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "Sequential2AbsoluteComponentIndex(DXGI_FORMAT Format, UINT SequentialComponentIndex)"
  },
  {
    "label": "CanBeCastEvenFullyTyped()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeCastEvenFullyTyped(DXGI_FORMAT Format, D3D_FEATURE_LEVEL fl)"
  },
  {
    "label": "GetAddressingBitsPerAlignedSize()",
    "kind": "Method",
    "detail": "Function (UINT8)",
    "insertText": "GetAddressingBitsPerAlignedSize(DXGI_FORMAT Format)"
  },
  {
    "label": "GetParentFormat()",
    "kind": "Method",
    "detail": "Function (DXGI_FORMAT)",
    "insertText": "GetParentFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "GetFormatCastSet()",
    "kind": "Method",
    "detail": "Function (const DXGI_FORMAT*)",
    "insertText": "GetFormatCastSet(DXGI_FORMAT Format)"
  },
  {
    "label": "GetLayout()",
    "kind": "Method",
    "detail": "Function (D3D_FORMAT_LAYOUT)",
    "insertText": "GetLayout(DXGI_FORMAT Format)"
  },
  {
    "label": "GetTypeLevel()",
    "kind": "Method",
    "detail": "Function (D3D_FORMAT_TYPE_LEVEL)",
    "insertText": "GetTypeLevel(DXGI_FORMAT Format)"
  },
  {
    "label": "GetBitsPerUnit()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetBitsPerUnit(DXGI_FORMAT Format)"
  },
  {
    "label": "GetBitsPerUnitThrow()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetBitsPerUnitThrow(DXGI_FORMAT Format)"
  },
  {
    "label": "GetBitsPerElement()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetBitsPerElement(DXGI_FORMAT Format)"
  },
  {
    "label": "GetWidthAlignment()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetWidthAlignment(DXGI_FORMAT Format)"
  },
  {
    "label": "GetHeightAlignment()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetHeightAlignment(DXGI_FORMAT Format)"
  },
  {
    "label": "GetDepthAlignment()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetDepthAlignment(DXGI_FORMAT Format)"
  },
  {
    "label": "Planar()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "Planar(DXGI_FORMAT Format)"
  },
  {
    "label": "NonOpaquePlanar()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "NonOpaquePlanar(DXGI_FORMAT Format)"
  },
  {
    "label": "YUV()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "YUV(DXGI_FORMAT Format)"
  },
  {
    "label": "Opaque()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "Opaque(DXGI_FORMAT Format)"
  },
  {
    "label": "FamilySupportsStencil()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FamilySupportsStencil(DXGI_FORMAT Format)"
  },
  {
    "label": "NonOpaquePlaneCount()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "NonOpaquePlaneCount(DXGI_FORMAT Format)"
  },
  {
    "label": "DX9VertexOrIndexFormat()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "DX9VertexOrIndexFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "DX9TextureFormat()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "DX9TextureFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "FloatNormTextureFormat()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "FloatNormTextureFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "DepthOnlyFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DepthOnlyFormat(DXGI_FORMAT format)"
  },
  {
    "label": "GetPlaneCount()",
    "kind": "Method",
    "detail": "Function (UINT8)",
    "insertText": "GetPlaneCount(DXGI_FORMAT Format)"
  },
  {
    "label": "MotionEstimatorAllowedInputFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MotionEstimatorAllowedInputFormat(DXGI_FORMAT Format)"
  },
  {
    "label": "SupportsSamplerFeedback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSamplerFeedback(DXGI_FORMAT Format)"
  },
  {
    "label": "DecodeHistogramAllowedForOutputFormatSupport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DecodeHistogramAllowedForOutputFormatSupport(DXGI_FORMAT Format)"
  },
  {
    "label": "GetPlaneSliceFromViewFormat()",
    "kind": "Method",
    "detail": "Function (UINT8)",
    "insertText": "GetPlaneSliceFromViewFormat(DXGI_FORMAT ResourceFormat, DXGI_FORMAT ViewFormat)"
  },
  {
    "label": "FloatAndNotFloatFormats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FloatAndNotFloatFormats(DXGI_FORMAT FormatA, DXGI_FORMAT FormatB)"
  },
  {
    "label": "SNORMAndUNORMFormats()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SNORMAndUNORMFormats(DXGI_FORMAT FormatA, DXGI_FORMAT FormatB)"
  },
  {
    "label": "ValidCastToR32UAV()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidCastToR32UAV(DXGI_FORMAT from, DXGI_FORMAT to)"
  },
  {
    "label": "IsSupportedTextureDisplayableFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupportedTextureDisplayableFormat(DXGI_FORMAT, bool bMediaFormatOnly)"
  },
  {
    "label": "GetFormatComponentInterpretation()",
    "kind": "Method",
    "detail": "Function (D3D_FORMAT_COMPONENT_INTERPRETATION)",
    "insertText": "GetFormatComponentInterpretation(DXGI_FORMAT Format, UINT AbsoluteComponentIndex)"
  },
  {
    "label": "GetBitsPerComponent()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetBitsPerComponent(DXGI_FORMAT Format, UINT AbsoluteComponentIndex)"
  },
  {
    "label": "GetComponentName()",
    "kind": "Method",
    "detail": "Function (D3D_FORMAT_COMPONENT_NAME)",
    "insertText": "GetComponentName(DXGI_FORMAT Format, UINT AbsoluteComponentIndex)"
  },
  {
    "label": "CalculateExtraPlanarRows()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CalculateExtraPlanarRows(DXGI_FORMAT format, UINT plane0Height, _Out_ UINT& totalHeight)"
  },
  {
    "label": "CalculateMinimumRowMajorRowPitch()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CalculateMinimumRowMajorRowPitch(DXGI_FORMAT Format, UINT Width, _Out_ UINT& RowPitch)"
  },
  {
    "label": "CalculateMinimumRowMajorSlicePitch()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CalculateMinimumRowMajorSlicePitch(DXGI_FORMAT Format, UINT ContextBasedRowPitch, UINT Height, _Out_ UINT& SlicePitch)"
  },
  {
    "label": "GetYCbCrChromaSubsampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetYCbCrChromaSubsampling(DXGI_FORMAT Format, _Out_ UINT& HorizontalSubsampling, _Out_ UINT& VerticalSubsampling)"
  },
  {
    "label": "CalculateResourceSize()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CalculateResourceSize(UINT width, UINT height, UINT depth, DXGI_FORMAT format, UINT mipLevels, UINT subresources, _Out_ SIZE_T& totalByteSize, _Out_writes_opt_(subresources) D3D12_MEMCPY_DEST* pDst = nullptr)"
  },
  {
    "label": "GetTileShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTileShape(D3D12_TILE_SHAPE* pTileShape, DXGI_FORMAT Format, D3D12_RESOURCE_DIMENSION Dimension, UINT SampleCount)"
  },
  {
    "label": "Get4KTileShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get4KTileShape(D3D12_TILE_SHAPE* pTileShape, DXGI_FORMAT Format, D3D12_RESOURCE_DIMENSION Dimension, UINT SampleCount)"
  },
  {
    "label": "GetMipDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMipDimensions(UINT8 mipSlice, _Inout_ UINT64* pWidth, _Inout_opt_ UINT64* pHeight = nullptr, _Inout_opt_ UINT64* pDepth = nullptr)"
  },
  {
    "label": "GetPlaneSubsampledSizeAndFormatForCopyableLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPlaneSubsampledSizeAndFormatForCopyableLayout(UINT PlaneSlice, DXGI_FORMAT Format, UINT Width, UINT Height, _Out_ DXGI_FORMAT& PlaneFormat, _Out_ UINT& MinPlanePitchWidth, _Out_ UINT& PlaneWidth, _Out_ UINT& PlaneHeight)"
  },
  {
    "label": "GetDetailTableIndex()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetDetailTableIndex(DXGI_FORMAT Format)"
  },
  {
    "label": "GetDetailTableIndexNoThrow()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetDetailTableIndexNoThrow(DXGI_FORMAT Format)"
  },
  {
    "label": "GetDetailTableIndexThrow()",
    "kind": "Method",
    "detail": "Function (UINT)",
    "insertText": "GetDetailTableIndexThrow(DXGI_FORMAT Format)"
  },
  {
    "label": "GetFormatDetail()",
    "kind": "Method",
    "detail": "Function (private : const FORMAT_DETAIL*)",
    "insertText": "GetFormatDetail(DXGI_FORMAT Format)"
  }
]