[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "EchoCanceller3Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EchoCanceller3Config"
  },
  {
    "label": "ReverbDecayEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReverbDecayEstimator"
  },
  {
    "label": "LateReverbLinearRegressor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LateReverbLinearRegressor"
  },
  {
    "label": "EarlyReverbLengthEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EarlyReverbLengthEstimator"
  },
  {
    "label": "ReverbDecayEstimator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_REVERB_DECAY_ESTIMATOR_H_ # define MODULES_AUDIO_PROCESSING_AEC3_REVERB_DECAY_ESTIMATOR_H_ # include<array> # include<vector> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" namespace webrtc { class ApmDataDumper ; struct EchoCanceller3Config ; class ReverbDecayEstimator { public :)",
    "insertText": "ReverbDecayEstimator(const EchoCanceller3Config& config)"
  },
  {
    "label": "ReverbDecayEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ReverbDecayEstimator()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(rtc::ArrayView<const float> filter, const absl::optional<float>& filter_quality, int filter_delay_blocks, bool usable_linear_filter, bool stationary_signal)"
  },
  {
    "label": "Decay()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Decay(bool mild)"
  },
  {
    "label": "EstimateDecay()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "EstimateDecay(rtc::ArrayView<const float> filter, int peak_block)"
  },
  {
    "label": "AnalyzeFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalyzeFilter(rtc::ArrayView<const float> filter)"
  },
  {
    "label": "ResetDecayEstimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDecayEstimation()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (class LateReverbLinearRegressor { public : void)",
    "insertText": "Reset(int num_data_points)"
  },
  {
    "label": "Accumulate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Accumulate(float z)"
  },
  {
    "label": "Estimate()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Estimate()"
  },
  {
    "label": "EstimateAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EstimateAvailable()"
  },
  {
    "label": "EarlyReverbLengthEstimator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EarlyReverbLengthEstimator()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Accumulate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Accumulate(float value, float smoothing)"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump(ApmDataDumper* data_dumper)"
  }
]