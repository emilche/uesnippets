[
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "CVD_UNPACK_BITFIELD_DATA()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # ifndef CVD_READ_PACKED_BITFIELD_SERIALIZER # define)",
    "insertText": "CVD_UNPACK_BITFIELD_DATA(Value, PackedBits, EnumFlag) \\ Value = EnumHasAnyFlags(PackedBits, EnumFlag)"
  },
  {
    "label": "CVD_PACK_BITFIELD_DATA()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef CVD_WRITE_PACKED_BITFIELD_SERIALIZER # define)",
    "insertText": "CVD_PACK_BITFIELD_DATA(Value, PackedBits, EnumFlag) \\ if (Value)"
  },
  {
    "label": "EnumAddFlags()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "EnumAddFlags(PackedBits, EnumFlag)"
  },
  {
    "label": "CVD_SERIALIZE_STATIC_ARRAY()",
    "kind": "Method",
    "detail": "Function (\\ } # endif # ifndef CVD_SERIALIZE_STATIC_ARRAY # define)",
    "insertText": "CVD_SERIALIZE_STATIC_ARRAY(Archive, Array)"
  },
  {
    "label": "UE_ARRAY_COUNT()",
    "kind": "Method",
    "detail": "Function (\\ int32 Size =)",
    "insertText": "UE_ARRAY_COUNT(Array)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "for(int32 Index = 0; Index < Size; Index++)"
  },
  {
    "label": "CVD_IMPLEMENT_SERIALIZER()",
    "kind": "Method",
    "detail": "Function (\\ Archive<<Array [ Index ] ; \\ } \\ } # endif # ifndef CVD_IMPLEMENT_SERIALIZER # define)",
    "insertText": "CVD_IMPLEMENT_SERIALIZER(Type) \\ inline FArchive& operator<<(FArchive& Ar, Type& Data)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (\\ Data .)",
    "insertText": "Serialize(Ar)"
  }
]