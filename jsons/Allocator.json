[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allocator"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_LIBCPP_DEPRECATED_IN_CXX17",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_DEPRECATED_IN_CXX17"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_LIBCPP_DEPRECATED_IN_CXX17",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_DEPRECATED_IN_CXX17"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "_Unique",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Unique"
  },
  {
    "label": "__non_trivial_if",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__non_trivial_if"
  },
  {
    "label": "_Unique",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Unique"
  },
  {
    "label": "__non_trivial_if",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "__non_trivial_if"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_LIBCPP_DEPRECATED_IN_CXX17",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_DEPRECATED_IN_CXX17"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_LIBCPP_TEMPLATE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCPP_TEMPLATE_VIS"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_LIBCPP_DEPRECATED_IN_CXX17",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_LIBCPP_DEPRECATED_IN_CXX17"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "_Up",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Up"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "delete(__p)"
  },
  {
    "label": "allocate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "allocate(__n)"
  },
  {
    "label": "allocate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "allocate(__n)"
  }
]