[
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FWorldPartitionResolveData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionResolveData"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FMovieSceneBindingReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingReference"
  },
  {
    "label": "FMovieSceneBindingResolveParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingResolveParams"
  },
  {
    "label": "FMovieSceneBindingReferences",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingReferences"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UniversalObjectLocator . h \" # include \" UniversalObjectLocatorResolveParams . h \" # include \" MovieSceneSequenceID . h \" # include \" Bindings / MovieSceneCustomBinding . h \" # include \" MovieSceneBindingReferences . generated . h \" class UWorld ; struct FWorldPartitionResolveData ; class UMovieSceneSequence ; namespace UE::MovieScene { struct FSharedPlaybackState ; })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "InitializeLocatorResolveFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLocatorResolveFlags()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API TArrayView<const FMovieSceneBindingReference> GetAllReferences()"
  },
  {
    "label": "GetAllReferences()",
    "kind": "Method",
    "detail": "Function (TArrayView<FMovieSceneBindingReference>)",
    "insertText": "GetAllReferences()"
  },
  {
    "label": "GetReferences()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FMovieSceneBindingReference>)",
    "insertText": "GetReferences(const FGuid& ObjectId)"
  },
  {
    "label": "GetReference()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneBindingReference*)",
    "insertText": "GetReference(const FGuid& ObjectId, int32 BindingIndex)"
  },
  {
    "label": "HasBinding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasBinding(const FGuid& ObjectId)"
  },
  {
    "label": "GetCustomBinding()",
    "kind": "Method",
    "detail": "Function (UMovieSceneCustomBinding*)",
    "insertText": "GetCustomBinding(const FGuid& ObjectId, int32 BindingIndex)"
  },
  {
    "label": "RemoveBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBinding(const FGuid& ObjectId)"
  },
  {
    "label": "RemoveObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjects(const FGuid& ObjectId, const TArray<UObject*>& InObjects, UObject *InContext)"
  },
  {
    "label": "RemoveInvalidObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidObjects(const FGuid& ObjectId, UObject *InContext)"
  },
  {
    "label": "AddBinding()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneBindingReference*)",
    "insertText": "AddBinding(const FGuid& ObjectId, FUniversalObjectLocator&& NewLocator)"
  },
  {
    "label": "AddBinding()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneBindingReference*)",
    "insertText": "AddBinding(const FGuid& ObjectId, UMovieSceneCustomBinding* CustomBinding)"
  },
  {
    "label": "AddBinding()",
    "kind": "Method",
    "detail": "Function (} const FMovieSceneBindingReference*)",
    "insertText": "AddBinding(const FGuid& ObjectId, FUniversalObjectLocator&& NewLocator, ELocatorResolveFlags InResolveFlags, UMovieSceneCustomBinding* CustomBinding=nullptr)"
  },
  {
    "label": "AddOrReplaceBinding()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneBindingReference*)",
    "insertText": "AddOrReplaceBinding(const FGuid& ObjectId, UMovieSceneCustomBinding* NewCustomBinding, int32 BindingIndex)"
  },
  {
    "label": "AddOrReplaceBinding()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneBindingReference*)",
    "insertText": "AddOrReplaceBinding(const FGuid& ObjectId, FUniversalObjectLocator&& NewLocator, int32 BindingIndex)"
  },
  {
    "label": "ResolveBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveBinding(const FGuid& ObjectId, const UE::UniversalObjectLocator::FResolveParams& LocatorResolveParams, TArray<UObject*, TInlineAllocator<1>>& OutObjects)"
  },
  {
    "label": "ResolveBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveBinding(const FMovieSceneBindingResolveParams& BindingResolveParams, const UE::UniversalObjectLocator::FResolveParams& LocatorResolveParams, TSharedPtr<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState, TArray<UObject*, TInlineAllocator<1>>& OutObjects)"
  },
  {
    "label": "ResolveSingleBinding()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "ResolveSingleBinding(const FMovieSceneBindingResolveParams& BindingResolveParams, int32 BindingIndex, const UE::UniversalObjectLocator::FResolveParams& LocatorResolveParams, TSharedPtr<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "RemoveInvalidBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidBindings(const TSet<FGuid>& ValidBindingIDs)"
  },
  {
    "label": "ResolveBindingInternal()",
    "kind": "Method",
    "detail": "Function (} private : UObject*)",
    "insertText": "ResolveBindingInternal(const FMovieSceneBindingResolveParams& BindingResolveParams, const UE::UniversalObjectLocator::FResolveParams& LocatorResolveParams, int32 BindingIndex, int32 InternalIndex, TSharedPtr<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "ResolveBindingFromLocator()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "ResolveBindingFromLocator(int32 Index, const UE::UniversalObjectLocator::FResolveParams& LocatorResolveParams)"
  }
]