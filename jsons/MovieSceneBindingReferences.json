[
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FWorldPartitionResolveData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionResolveData"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FMovieSceneBindingReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingReference"
  },
  {
    "label": "FMovieSceneBindingResolveParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingResolveParams"
  },
  {
    "label": "FMovieSceneBindingReferences",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBindingReferences"
  },
  {
    "label": "InitializeLocatorResolveFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeLocatorResolveFlags()"
  },
  {
    "label": "GetAllReferences()",
    "kind": "Method",
    "detail": "Function (TArrayView<FMovieSceneBindingReference>)",
    "insertText": "GetAllReferences()"
  },
  {
    "label": "RemoveBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBinding(const FGuid& ObjectId)"
  },
  {
    "label": "RemoveObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjects(const FGuid& ObjectId, const TArray<UObject*>& InObjects, UObject *InContext)"
  },
  {
    "label": "RemoveInvalidObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidObjects(const FGuid& ObjectId, UObject *InContext)"
  },
  {
    "label": "RemoveInvalidBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInvalidBindings(const TSet<FGuid>& ValidBindingIDs)"
  }
]