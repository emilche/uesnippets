[
  {
    "label": "FRDGExternalAccessQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGExternalAccessQueue"
  },
  {
    "label": "FRHICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandList"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FLightSceneInfoCompact",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfoCompact"
  },
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FGPUSceneDynamicContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSceneDynamicContext"
  },
  {
    "label": "FViewUniformShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewUniformShaderParameters"
  },
  {
    "label": "FInstanceCullingOcclusionQueryRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingOcclusionQueryRenderer"
  },
  {
    "label": "FScenePreUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScenePreUpdateChangeSet"
  },
  {
    "label": "FScenePostUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScenePostUpdateChangeSet"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FLightSceneChangeSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightSceneChangeSet"
  },
  {
    "label": "IShadowInvalidatingInstances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IShadowInvalidatingInstances"
  },
  {
    "label": "FGPUScenePrimitiveCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScenePrimitiveCollector"
  },
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FGPUSceneDynamicContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSceneDynamicContext"
  },
  {
    "label": "FUploadDataSourceAdapterDynamicPrimitives",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUploadDataSourceAdapterDynamicPrimitives"
  },
  {
    "label": "FPrimitiveData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveData"
  },
  {
    "label": "FUploadData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUploadData"
  },
  {
    "label": "FInstanceProcessingGPULoadBalancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceProcessingGPULoadBalancer"
  },
  {
    "label": "FGPUSceneDynamicContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSceneDynamicContext"
  },
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FGPUScenePrimitiveCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScenePrimitiveCollector"
  },
  {
    "label": "FGPUSceneInstanceRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSceneInstanceRange"
  },
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FRegisteredBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisteredBuffers"
  },
  {
    "label": "FDeferredGPUWrite",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeferredGPUWrite"
  },
  {
    "label": "FGPUScenePrimitiveCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScenePrimitiveCollector"
  },
  {
    "label": "FGPUSceneScopeBeginEndHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSceneScopeBeginEndHelper"
  },
  {
    "label": "FBatchedPrimitiveShaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBatchedPrimitiveShaderData"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(\n\t\tconst FMeshBatchDynamicPrimitiveData* MeshBatchData,\n\t\tconst FPrimitiveUniformShaderParameters& PrimitiveShaderParams,\n\t\tuint32 NumInstances,\n\t\tuint32& OutPrimitiveIndex,\n\t\tuint32& OutInstanceSceneDataOffset)"
  },
  {
    "label": "Commit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Commit()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "FGPUScene()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FGPUScene(FScene &InScene)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "BeginRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRender(FRDGBuilder& GraphBuilder, FGPUSceneDynamicContext &GPUSceneDynamicContext)"
  },
  {
    "label": "EndRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRender()"
  },
  {
    "label": "AllocateInstanceSceneDataSlots()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AllocateInstanceSceneDataSlots(FPersistentPrimitiveIndex PersistentPrimitiveIndex, int32 NumInstanceSceneDataEntries)"
  },
  {
    "label": "FreeInstanceSceneDataSlots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeInstanceSceneDataSlots(int32 InstanceSceneDataOffset, int32 NumInstanceSceneDataEntries)"
  },
  {
    "label": "AllocateInstancePayloadDataSlots()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AllocateInstancePayloadDataSlots(int32 NumInstancePayloadFloat4Entries)"
  },
  {
    "label": "FreeInstancePayloadDataSlots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeInstancePayloadDataSlots(int32 InstancePayloadDataOffset, int32 NumInstancePayloadFloat4Entries)"
  },
  {
    "label": "UploadDynamicPrimitiveShaderDataForView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadDynamicPrimitiveShaderDataForView(FRDGBuilder& GraphBuilder, FViewInfo& View, bool bRayTracing = false, UE::Renderer::Private::IShadowInvalidatingInstances *ShadowInvalidatingInstances = nullptr)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUB, FRDGExternalAccessQueue& ExternalAccessQueue, const FUpdateFromComputeCommands& UpdatesFromCompute, const UE::Tasks::FTask& UpdateTaskPrerequisites = {})"
  },
  {
    "label": "AddPrimitiveToUpdate()",
    "kind": "Method",
    "detail": "Function (RENDERER_API)",
    "insertText": "AddPrimitiveToUpdate(FPersistentPrimitiveIndex PersistentPrimitiveIndex, EPrimitiveDirtyState DirtyState = EPrimitiveDirtyState::ChangedAll)"
  },
  {
    "label": "GetWriteParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetWriteParameters(FRDGBuilder& GraphBuilder, FGPUSceneWriterParameters& GPUSceneWriterParametersOut)"
  },
  {
    "label": "DebugRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugRender(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUniformBuffer, FViewInfo& View)"
  },
  {
    "label": "ConsolidateInstanceDataAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsolidateInstanceDataAllocations()"
  },
  {
    "label": "ExecuteDeferredGPUWritePass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecuteDeferredGPUWritePass(FRDGBuilder& GraphBuilder, TArray<FViewInfo>& Views, EGPUSceneGPUWritePass Pass)"
  },
  {
    "label": "OnPreSceneUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSceneUpdate(FRDGBuilder& GraphBuilder, const FScenePreUpdateChangeSet& ScenePreUpdateData)"
  },
  {
    "label": "OnPostSceneUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSceneUpdate(FRDGBuilder& GraphBuilder, const FScenePostUpdateChangeSet& ScenePostUpdateData)"
  },
  {
    "label": "OnPostLightSceneInfoUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostLightSceneInfoUpdate(FRDGBuilder& OnPostLightSceneInfoUpdate, const FLightSceneChangeSet& LightsPostUpdateData)"
  },
  {
    "label": "CommitPrimitiveCollector()",
    "kind": "Method",
    "detail": "Function (TRange<int32>)",
    "insertText": "CommitPrimitiveCollector(FGPUScenePrimitiveCollector& PrimitiveCollector)"
  },
  {
    "label": "UpdateBufferAllocations()",
    "kind": "Method",
    "detail": "Function (FRegisteredBuffers)",
    "insertText": "UpdateBufferAllocations(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUB, const FUploadDataSourceAdapter& UploadDataSourceAdapter)"
  },
  {
    "label": "UploadGeneral()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadGeneral(FRDGBuilder& GraphBuilder, const FRegisteredBuffers& BufferState, FRDGExternalAccessQueue* ExternalAccessQueue, const FUploadDataSourceAdapter& UploadDataSourceAdapter, const UE::Tasks::FTask& PrerequisiteTask)"
  },
  {
    "label": "UpdateGPULights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGPULights(FRDGBuilder& GraphBuilder, const UE::Tasks::FTask& PrerequisiteTask)"
  },
  {
    "label": "InitLightData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitLightData(const FLightSceneInfoCompact& LightInfoCompact, bool bAllowStaticLighting, uint32 LightShaderParameterFlags, FLightSceneData& DataOut)"
  },
  {
    "label": "UploadDynamicPrimitiveShaderDataForViewInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UploadDynamicPrimitiveShaderDataForViewInternal(FRDGBuilder& GraphBuilder, FViewInfo& View, bool bRayTracing, UE::Renderer::Private::IShadowInvalidatingInstances *ShadowInvalidatingInstances)"
  },
  {
    "label": "UpdateInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInternal(FRDGBuilder& GraphBuilder, FSceneUniformBuffer& SceneUB, FRDGExternalAccessQueue& ExternalAccessQueue, const UE::Tasks::FTask& UpdateTaskPrerequisites, const FUpdateFromComputeCommands& UpdatesFromCompute)"
  },
  {
    "label": "AddUpdatePrimitiveIdsPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUpdatePrimitiveIdsPass(FRDGBuilder& GraphBuilder, FInstanceGPULoadBalancer& IdOnlyUpdateItems)"
  },
  {
    "label": "AddClearInstancesPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClearInstancesPass(FRDGBuilder& GraphBuilder, FInstanceCullingOcclusionQueryRenderer* OcclusionQueryRenderer = nullptr)"
  },
  {
    "label": "FBatchedPrimitiveShaderData()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FBatchedPrimitiveShaderData(const FPrimitiveSceneProxy* Proxy)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Emplace(FBatchedPrimitiveShaderData* Dest, const FPrimitiveUniformShaderParameters& ShaderParams)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Emplace(FBatchedPrimitiveShaderData* Dest, const FPrimitiveSceneProxy* Proxy)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(const FPrimitiveUniformShaderParameters& PrimitiveUniformShaderParameters)"
  }
]