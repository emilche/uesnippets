[
  {
    "label": "ReadFile()",
    "kind": "Method",
    "detail": "Function (# ifndef LIBSPIRV_TOOLS_IO_H_ # define LIBSPIRV_TOOLS_IO_H_ # include<cstdint> # include<cstdio> # include<cstring> # include<vector> template<T> bool)",
    "insertText": "ReadFile(const char* filename, const char* mode, std::vector<T>* data)"
  },
  {
    "label": "strcmp()",
    "kind": "Method",
    "detail": "Function (const int buf_size = 1 0 2 4 ; const bool use_file = filename&&)",
    "insertText": "strcmp(\"-\", filename)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (T buf [ buf_size ] ;)",
    "insertText": "while(size_t len = fread(buf, sizeof(T), buf_size, fp))"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (data ->)",
    "insertText": "insert(data->end(), buf, buf + len)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(ftell(fp) == -1L)"
  },
  {
    "label": "fprintf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fprintf(stderr, \"error: error reading file '%s'\\n\", filename)"
  },
  {
    "label": "fprintf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fprintf(stderr, \"error: corrupted word found in file '%s'\\n\", filename)"
  },
  {
    "label": "fprintf()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "fprintf(stderr, \"error: file does not exist '%s'\\n\", filename)"
  },
  {
    "label": "filename()",
    "kind": "Method",
    "detail": "Function (const bool use_stdout = !)",
    "insertText": "filename(filename[0] == '-' && filename[1] == '\\0')"
  },
  {
    "label": "fwrite()",
    "kind": "Method",
    "detail": "Function (size_t written =)",
    "insertText": "fwrite(data, sizeof(T), count, fp)"
  },
  {
    "label": "fprintf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fprintf(stderr, \"error: could not write to file '%s'\\n\", filename)"
  },
  {
    "label": "fprintf()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "fprintf(stderr, \"error: could not open file '%s'\\n\", filename)"
  }
]