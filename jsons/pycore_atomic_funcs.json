[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef Py_ATOMIC_FUNC_H # define Py_ATOMIC_FUNC_H # ifdef __cplusplus \" C \" { # endif # ifndef Py_BUILD_CORE # error \" this header requires Py_BUILD_CORE define \" # endif # if)",
    "insertText": "defined(_MSC_VER) # include <intrin.h> #endif #ifdef HAVE_BUILTIN_ATOMIC static inline Py_ssize_t _Py_atomic_size_get(Py_ssize_t *var)"
  },
  {
    "label": "_Py_atomic_size_set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "_Py_atomic_size_set(Py_ssize_t *var, Py_ssize_t value)"
  },
  {
    "label": "__atomic_store_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__atomic_store_n(var, value, __ATOMIC_SEQ_CST)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # elif)",
    "insertText": "defined(_MSC_VER) static inline Py_ssize_t _Py_atomic_size_get(Py_ssize_t *var)"
  },
  {
    "label": "Py_BUILD_ASSERT()",
    "kind": "Method",
    "detail": "Function (# if SIZEOF_VOID_P = = 8)",
    "insertText": "Py_BUILD_ASSERT(sizeof(__int64) == sizeof(*var))"
  },
  {
    "label": "volatile_var()",
    "kind": "Method",
    "detail": "Function (volatile __int64*)",
    "insertText": "volatile_var(volatile __int64 *)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (__int64 old ; do { old =* volatile_var ; })",
    "insertText": "while(_InterlockedCompareExchange64(volatile_var, old, old) != old)"
  },
  {
    "label": "Py_BUILD_ASSERT()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "Py_BUILD_ASSERT(sizeof(long) == sizeof(*var))"
  },
  {
    "label": "volatile_var()",
    "kind": "Method",
    "detail": "Function (volatile long*)",
    "insertText": "volatile_var(volatile long *)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (long old ; do { old =* volatile_var ; })",
    "insertText": "while(_InterlockedCompareExchange(volatile_var, old, old) != old)"
  },
  {
    "label": "_InterlockedExchange64()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_InterlockedExchange64(volatile_var, value)"
  },
  {
    "label": "_InterlockedExchange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_InterlockedExchange(volatile_var, value)"
  },
  {
    "label": "_Py_atomic_size_get()",
    "kind": "Method",
    "detail": "Function (# endif } # else Py_ssize_t)",
    "insertText": "_Py_atomic_size_get(Py_ssize_t *var)"
  },
  {
    "label": "volatile_var()",
    "kind": "Method",
    "detail": "Function (volatile Py_ssize_t*)",
    "insertText": "volatile_var(volatile Py_ssize_t *)"
  }
]