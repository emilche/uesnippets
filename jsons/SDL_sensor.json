[
  {
    "label": "_SDL_Sensor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_SDL_Sensor"
  },
  {
    "label": "SDL_LockSensors()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_sensor_h_ # define SDL_sensor_h_ # include \" SDL_stdinc . h \" # include \" SDL_error . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif struct _SDL_Sensor ; typedef struct _SDL_Sensor SDL_Sensor ; typedef Sint32 SDL_SensorID ; typedef enum { SDL_SENSOR_INVALID = - 1,SDL_SENSOR_UNKNOWN,SDL_SENSOR_ACCEL,SDL_SENSOR_GYRO,SDL_SENSOR_ACCEL_L,SDL_SENSOR_GYRO_L,SDL_SENSOR_ACCEL_R,SDL_SENSOR_GYRO_R } SDL_SensorType ; # define SDL_STANDARD_GRAVITY 9 . 8 0 6 6 5 f DECLSPEC void SDLCALL)",
    "insertText": "SDL_LockSensors(void)"
  },
  {
    "label": "SDL_UnlockSensors()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_UnlockSensors(void)"
  },
  {
    "label": "SDL_NumSensors()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_NumSensors(void)"
  },
  {
    "label": "SDL_SensorGetDeviceName()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_SensorGetDeviceName(int device_index)"
  },
  {
    "label": "SDL_SensorGetDeviceType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_SensorType SDLCALL)",
    "insertText": "SDL_SensorGetDeviceType(int device_index)"
  },
  {
    "label": "SDL_SensorGetDeviceNonPortableType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SensorGetDeviceNonPortableType(int device_index)"
  },
  {
    "label": "SDL_SensorGetDeviceInstanceID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_SensorID SDLCALL)",
    "insertText": "SDL_SensorGetDeviceInstanceID(int device_index)"
  },
  {
    "label": "SDL_SensorOpen()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Sensor* SDLCALL)",
    "insertText": "SDL_SensorOpen(int device_index)"
  },
  {
    "label": "SDL_SensorFromInstanceID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_Sensor* SDLCALL)",
    "insertText": "SDL_SensorFromInstanceID(SDL_SensorID instance_id)"
  },
  {
    "label": "SDL_SensorGetName()",
    "kind": "Method",
    "detail": "Function (DECLSPEC const char* SDLCALL)",
    "insertText": "SDL_SensorGetName(SDL_Sensor *sensor)"
  },
  {
    "label": "SDL_SensorGetType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_SensorType SDLCALL)",
    "insertText": "SDL_SensorGetType(SDL_Sensor *sensor)"
  },
  {
    "label": "SDL_SensorGetNonPortableType()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SensorGetNonPortableType(SDL_Sensor *sensor)"
  },
  {
    "label": "SDL_SensorGetInstanceID()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_SensorID SDLCALL)",
    "insertText": "SDL_SensorGetInstanceID(SDL_Sensor *sensor)"
  },
  {
    "label": "SDL_SensorGetData()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SensorGetData(SDL_Sensor *sensor, float *data, int num_values)"
  },
  {
    "label": "SDL_SensorGetDataWithTimestamp()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_SensorGetDataWithTimestamp(SDL_Sensor *sensor, Uint64 *timestamp, float *data, int num_values)"
  },
  {
    "label": "SDL_SensorClose()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SensorClose(SDL_Sensor *sensor)"
  },
  {
    "label": "SDL_SensorUpdate()",
    "kind": "Method",
    "detail": "Function (DECLSPEC void SDLCALL)",
    "insertText": "SDL_SensorUpdate(void)"
  }
]