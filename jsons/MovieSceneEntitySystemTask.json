[
  {
    "label": "TReadAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TReadAccess"
  },
  {
    "label": "TOptionalReadAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOptionalReadAccess"
  },
  {
    "label": "TWriteAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TWriteAccess"
  },
  {
    "label": "TOptionalWriteAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOptionalWriteAccess"
  },
  {
    "label": "TReadOneOfAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TReadOneOfAccessor"
  },
  {
    "label": "TReadOneOrMoreOfAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TReadOneOrMoreOfAccessor"
  },
  {
    "label": "TPrelockedDataOffsets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPrelockedDataOffsets"
  },
  {
    "label": "TFilteredEntityTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFilteredEntityTask"
  },
  {
    "label": "TEntityTaskComponents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskComponents"
  },
  {
    "label": "TEntityTaskComponentsImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskComponentsImpl"
  },
  {
    "label": "TEntityTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTask"
  },
  {
    "label": "TEntityTaskBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskBase"
  },
  {
    "label": "TScheduledEntityTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TScheduledEntityTask"
  },
  {
    "label": "TEntityAllocationTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityAllocationTask"
  },
  {
    "label": "TEntityAllocationTaskBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityAllocationTaskBase"
  },
  {
    "label": "TUnstructuredTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TUnstructuredTask"
  },
  {
    "label": "TEntityTaskCaller",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskCaller"
  },
  {
    "label": "FCommonEntityTaskParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommonEntityTaskParams"
  },
  {
    "label": "TDefaultEntityTaskTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDefaultEntityTaskTraits"
  },
  {
    "label": "FForEach_Expanded",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEach_Expanded"
  },
  {
    "label": "FForEach_NoExpansion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEach_NoExpansion"
  },
  {
    "label": "TEntityTaskTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskTraits"
  },
  {
    "label": "TEntityTaskTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskTraits"
  },
  {
    "label": "FEntityIterationResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityIterationResult"
  },
  {
    "label": "FCallPreTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallPreTask"
  },
  {
    "label": "FCallPostTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallPostTask"
  },
  {
    "label": "TEntityTaskComponents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskComponents"
  },
  {
    "label": "FForEachAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEachAllocation"
  },
  {
    "label": "FForEachEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEachEntity"
  },
  {
    "label": "TEntityTaskComponentsImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskComponentsImpl"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "TEntityTaskComponentsImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskComponentsImpl"
  },
  {
    "label": "FEntityTaskBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityTaskBuilder"
  },
  {
    "label": "TFilteredEntityTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFilteredEntityTask"
  },
  {
    "label": "FForEachEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEachEntity"
  },
  {
    "label": "FForEachEntity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForEachEntity"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "TEntityTaskBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskBase"
  },
  {
    "label": "TEntityTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTask"
  },
  {
    "label": "TScheduledEntityTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TScheduledEntityTask"
  },
  {
    "label": "TEntityAllocationTaskBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityAllocationTaskBase"
  },
  {
    "label": "TEntityAllocationTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityAllocationTask"
  },
  {
    "label": "TUnstructuredTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TUnstructuredTask"
  },
  {
    "label": "TEntityTaskCaller_AutoExpansion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskCaller_AutoExpansion"
  },
  {
    "label": "TPrelockedDataOffsets",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPrelockedDataOffsets"
  },
  {
    "label": "TEntityTaskCaller_AutoExpansion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskCaller_AutoExpansion"
  },
  {
    "label": "TEntityTaskCaller",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskCaller"
  },
  {
    "label": "TEntityTaskCaller",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TEntityTaskCaller"
  },
  {
    "label": "ForEachEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachEntity(float, uint16, UObject*)"
  },
  {
    "label": "ForEachAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachAllocation(const FEntityAllocation*, TRead<float>, TRead<uint16>, TRead<UObject*>)"
  },
  {
    "label": "ForEachEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachEntity(const TEntityPtr<const float, const uint16, const UObject*>&)"
  },
  {
    "label": "ForEachAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachAllocation(const FEntityAllocation*, const TEntityTaskComponents<TRead<float>, TRead<uint16>, TRead<UObject*>>&)"
  },
  {
    "label": "ForEachAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachAllocation(FEntityAllocation* InAllocation, const TFilteredEntityTask< FEntityIDAccess, TRead<FMovieSceneFloatChannel> >& InputTask)"
  },
  {
    "label": "ForEachEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachEntity(FMovieSceneEntityID InEntityID, const FMovieSceneFloatChannel& Channel)"
  },
  {
    "label": "WriteContext()",
    "kind": "Method",
    "detail": "Function (FEntityAllocationWriteContext)",
    "insertText": "WriteContext(*EntityManager)"
  },
  {
    "label": "LockGuard()",
    "kind": "Method",
    "detail": "Function (FEntityAllocationMutexGuard)",
    "insertText": "LockGuard(Allocation, LockMode)"
  },
  {
    "label": "WriteContext()",
    "kind": "Method",
    "detail": "Function (FEntityAllocationWriteContext)",
    "insertText": "WriteContext(*EntityManager)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"<debug info compiled out> - enable UE_MOVIESCENE_ENTITY_DEBUG\")"
  },
  {
    "label": "ForEachEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachEntity(FMovieSceneEntityID InEntityID, const FMovieSceneFloatChannel& Channel)"
  },
  {
    "label": "ForEachEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachEntity(FMovieSceneEntityID InEntityID, const FMovieSceneFloatChannel& Channel)"
  },
  {
    "label": "LockGuard()",
    "kind": "Method",
    "detail": "Function (FEntityAllocationMutexGuard)",
    "insertText": "LockGuard(Allocation, LockMode)"
  }
]