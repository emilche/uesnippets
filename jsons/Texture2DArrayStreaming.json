[
  {
    "label": "FTexture2DArrayMipAllocator_Reallocate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DArrayMipAllocator_Reallocate"
  },
  {
    "label": "FMallocDeleter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMallocDeleter"
  },
  {
    "label": "FTexture2DArrayMipAllocator_Reallocate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RenderAssetUpdate . h \" # include \" Engine / Texture2DArray . h \" # include \" Rendering / Texture2DResource . h \" # include \" Texture2DMipDataProvider_DDC . h \" # include \" Texture2DMipDataProvider_IO . h \" # include \" TextureMipAllocator . h \" # if WITH_EDITORONLY_DATA typedef FTexture2DMipDataProvider_DDC FTexture2DArrayMipDataProvider_DDC ; # endif typedef FTexture2DMipDataProvider_IO FTexture2DArrayMipDataProvider_IO ; class FTexture2DArrayMipAllocator_Reallocate : public FTextureMipAllocator { public :)",
    "insertText": "FTexture2DArrayMipAllocator_Reallocate(UTexture* Texture)"
  },
  {
    "label": "FTexture2DArrayMipAllocator_Reallocate()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTexture2DArrayMipAllocator_Reallocate()"
  },
  {
    "label": "AllocateMips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateMips(const FTextureUpdateContext& Context, FTextureMipInfoArray& OutMipInfos, const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "FinalizeMips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FinalizeMips(const FTextureUpdateContext& Context, const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "GetCancelThread()",
    "kind": "Method",
    "detail": "Function (ETickThread)",
    "insertText": "GetCancelThread()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (protected : struct FMallocDeleter { void)",
    "insertText": "operator() (uint8* Buffer)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(Buffer)"
  }
]