[
  {
    "label": "BinaryRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BinaryRef"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_YAML_H # define LLVM_MC_YAML_H # include \" llvm / Support / YAMLTraits . h \" namespace llvm { namespace yaml { class BinaryRef { bool)",
    "insertText": "operator(const BinaryRef &LHS, const BinaryRef &RHS)"
  },
  {
    "label": "BinaryRef()",
    "kind": "Method",
    "detail": "Function (ArrayRef<uint8_t> Data ; bool DataIsHexString ; public :)",
    "insertText": "BinaryRef(ArrayRef<uint8_t> Data) : Data(Data), DataIsHexString(false)"
  },
  {
    "label": "BinaryRef()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BinaryRef(StringRef Data) : Data(reinterpret_cast<const uint8_t *>(Data.data()), Data.size()), DataIsHexString(true)"
  },
  {
    "label": "BinaryRef()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BinaryRef() : DataIsHexString(true)"
  },
  {
    "label": "binary_size()",
    "kind": "Method",
    "detail": "Function (} ArrayRef<uint8_t>::size_type)",
    "insertText": "binary_size()"
  },
  {
    "label": "writeAsBinary()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "writeAsBinary(raw_ostream &OS)"
  },
  {
    "label": "writeAsHex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeAsHex(raw_ostream &OS)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void *, BinaryRef &)"
  },
  {
    "label": "mustQuote()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mustQuote(StringRef S)"
  }
]