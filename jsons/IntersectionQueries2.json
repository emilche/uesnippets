[
  {
    "label": "TAxisAlignedBox2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAxisAlignedBox2"
  },
  {
    "label": "TSegment2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TSegment2"
  },
  {
    "label": "TestIntersection()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" BoxTypes . h \" # include \" CoreMinimal . h \" # include \" SegmentTypes . h \" namespace UE { namespace Geometry { template<RealType> struct TAxisAlignedBox2 ; template<T> struct TSegment2 ; template<Real> bool)",
    "insertText": "TestIntersection(const TSegment2<Real>& Segment, const TAxisAlignedBox2<Real>& Box)"
  },
  {
    "label": "DoesTriangleIntersectCircle2D()",
    "kind": "Method",
    "detail": "Function (template<Real> bool)",
    "insertText": "DoesTriangleIntersectCircle2D(const TVector2<Real>& A, const TVector2<Real>& B, const TVector2<Real>& C, const TVector2<Real>& Center, double RadiusSquared)"
  }
]