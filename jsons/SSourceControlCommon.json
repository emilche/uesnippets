[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "IChangelistTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IChangelistTreeItem"
  },
  {
    "label": "TreeItemType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TreeItemType"
  },
  {
    "label": "IFileViewTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IFileViewTreeItem"
  },
  {
    "label": "FShelvedChangelistTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShelvedChangelistTreeItem"
  },
  {
    "label": "FChangelistTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChangelistTreeItem"
  },
  {
    "label": "FUncontrolledChangelistTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUncontrolledChangelistTreeItem"
  },
  {
    "label": "FUnsavedAssetsTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnsavedAssetsTreeItem"
  },
  {
    "label": "FFileTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFileTreeItem"
  },
  {
    "label": "FShelvedFileTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShelvedFileTreeItem"
  },
  {
    "label": "FOfflineFileTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOfflineFileTreeItem"
  },
  {
    "label": "ESingleLineFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESingleLineFlags"
  },
  {
    "label": "FSCCFileDragDropOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSCCFileDragDropOp"
  },
  {
    "label": "IChangelistTreeItem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" SourceControlAssetDataCache . h \" # include \" ISourceControlProvider . h \" # include \" UncontrolledChangelistState . h \" # include \" Input / DragAndDrop . h \" # include \" Widgets / Notifications / SNotificationList . h \" # include \" Templates / Function . h \" struct FAssetData ; struct IChangelistTreeItem : TSharedFromThis<IChangelistTreeItem> { enum TreeItemType { Changelist,UncontrolledChangelist,File,ShelvedChangelist,ShelvedFile,OfflineFile,UnsavedAssets,} ; ~)",
    "insertText": "IChangelistTreeItem()"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IChangelistTreeItem>)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<IChangelistTreeItem>>&)",
    "insertText": "GetChildren()"
  },
  {
    "label": "GetTreeItemType()",
    "kind": "Method",
    "detail": "Function (const TreeItemType)",
    "insertText": "GetTreeItemType()"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChild(const TSharedRef<IChangelistTreeItem>& Child)"
  },
  {
    "label": "RemoveAllChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllChildren()"
  },
  {
    "label": "IChangelistTreeItem()",
    "kind": "Method",
    "detail": "Function (public : int64 VisitedUpdateNum = - 1 ; int64 DisplayedUpdateNum = - 1 ; protected :)",
    "insertText": "IChangelistTreeItem(TreeItemType InType)"
  },
  {
    "label": "GetIconSortingPriority()",
    "kind": "Method",
    "detail": "Function (Type = InType ; } TSharedPtr<IChangelistTreeItem> Parent ; TArray<TSharedPtr<IChangelistTreeItem>> Children ; TreeItemType Type ; } ; struct IFileViewTreeItem : public IChangelistTreeItem { int32)",
    "insertText": "GetIconSortingPriority()"
  },
  {
    "label": "GetLastModifiedDateTime()",
    "kind": "Method",
    "detail": "Function (const FDateTime&)",
    "insertText": "GetLastModifiedDateTime()"
  },
  {
    "label": "FShelvedChangelistTreeItem()",
    "kind": "Method",
    "detail": "Function (} private : FString DefaultStrValue ; FDateTime DefaultDateTimeValue ; FText LastModifiedTimestampText ; FDateTime LastModifiedDateTime ; } ; struct FShelvedChangelistTreeItem : public IChangelistTreeItem {)",
    "insertText": "FShelvedChangelistTreeItem() : IChangelistTreeItem(IChangelistTreeItem::ShelvedChangelist)"
  },
  {
    "label": "GetDisplayText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDisplayText()"
  },
  {
    "label": "FChangelistTreeItem()",
    "kind": "Method",
    "detail": "Function (} ; struct FChangelistTreeItem : public IChangelistTreeItem {)",
    "insertText": "FChangelistTreeItem(TSharedRef<ISourceControlChangelistState> InChangelistState) : IChangelistTreeItem(IChangelistTreeItem::Changelist) , ChangelistState(MoveTemp(InChangelistState))"
  },
  {
    "label": "GetDescriptionText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetDescriptionText()"
  },
  {
    "label": "GetFileCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetFileCount()"
  },
  {
    "label": "GetShelvedFileCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetShelvedFileCount()"
  },
  {
    "label": "FUncontrolledChangelistTreeItem()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<ISourceControlChangelistState> ChangelistState ; TSharedPtr<FShelvedChangelistTreeItem> ShelvedChangelistItem ; } ; struct FUncontrolledChangelistTreeItem : public IChangelistTreeItem {)",
    "insertText": "FUncontrolledChangelistTreeItem(FUncontrolledChangelistStateRef InUncontrolledChangelistState) : IChangelistTreeItem(IChangelistTreeItem::UncontrolledChangelist) , UncontrolledChangelistState(InUncontrolledChangelistState)"
  },
  {
    "label": "FUnsavedAssetsTreeItem()",
    "kind": "Method",
    "detail": "Function (} FUncontrolledChangelistStateRef UncontrolledChangelistState ; } ; struct FUnsavedAssetsTreeItem : public IChangelistTreeItem {)",
    "insertText": "FUnsavedAssetsTreeItem() : IChangelistTreeItem(IChangelistTreeItem::UnsavedAssets)"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "FFileTreeItem()",
    "kind": "Method",
    "detail": "Function (} ; struct FFileTreeItem : public IFileViewTreeItem {)",
    "insertText": "FFileTreeItem(FSourceControlStateRef InFileState, bool bBeautifyPaths = true, bool bIsShelvedFile = false)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetName()"
  },
  {
    "label": "GetCheckedOutBy()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetCheckedOutBy()"
  },
  {
    "label": "RefreshAssetInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshAssetInformation()"
  },
  {
    "label": "GetAssetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetName()"
  },
  {
    "label": "GetAssetPath()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetPath()"
  },
  {
    "label": "GetCheckedOutByUser()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetCheckedOutByUser()"
  },
  {
    "label": "GetPackageName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPackageName()"
  },
  {
    "label": "GetIconName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetIconName()"
  },
  {
    "label": "GetIconTooltip()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetIconTooltip()"
  },
  {
    "label": "GetCheckBoxState()",
    "kind": "Method",
    "detail": "Function (} ECheckBoxState)",
    "insertText": "GetCheckBoxState()"
  },
  {
    "label": "CanCheckIn()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanCheckIn()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "CanDiff()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanDiff()"
  },
  {
    "label": "CanRevert()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanRevert()"
  },
  {
    "label": "GetAssetData()",
    "kind": "Method",
    "detail": "Function (} const FAssetDataArrayPtr&)",
    "insertText": "GetAssetData()"
  },
  {
    "label": "FShelvedFileTreeItem()",
    "kind": "Method",
    "detail": "Function (} public : FSourceControlStateRef FileState ; private : ECheckBoxState CheckBoxState ; FText AssetName ; FString AssetNameStr ; FText AssetPath ; FString AssetPathStr ; FText AssetType ; FString AssetTypeStr ; FText AssetTypeName ; FString AssetTypeNameStr ; FColor AssetTypeColor ; FText PackageName ; FString CheckedOutBy ; FAssetDataArrayPtr Assets ; const FTimespan MinTimeBetweenUpdate ; FTimespan LastUpdateTime ; bool bAssetsUpToDate ; } ; struct FShelvedFileTreeItem : public FFileTreeItem {)",
    "insertText": "FShelvedFileTreeItem(FSourceControlStateRef InFileState, bool bBeautifyPaths = true) : FFileTreeItem(InFileState, bBeautifyPaths, true)"
  },
  {
    "label": "FOfflineFileTreeItem()",
    "kind": "Method",
    "detail": "Function (} } ; struct FOfflineFileTreeItem : public IFileViewTreeItem {)",
    "insertText": "FOfflineFileTreeItem(const FString& InFilename)"
  },
  {
    "label": "GetSCCFileWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetSCCFileWidget()"
  },
  {
    "label": "GetDefaultAssetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultAssetName()"
  },
  {
    "label": "GetDefaultAssetType()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultAssetType()"
  },
  {
    "label": "GetDefaultUnknownAssetType()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultUnknownAssetType()"
  },
  {
    "label": "GetDefaultMultipleAsset()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDefaultMultipleAsset()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum ESingleLineFlags { NewlineTerminates = 0 x0,NewlineConvertToSpace = 0 x1,Mask_NewlineBehavior = 0 x1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ESingleLineFlags)"
  },
  {
    "label": "GetSingleLineChangelistDescription()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSingleLineChangelistDescription(const FText& InFullDescription, ESingleLineFlags Flags = ESingleLineFlags::NewlineTerminates)"
  },
  {
    "label": "ExecuteChangelistOperationWithSlowTaskWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteChangelistOperationWithSlowTaskWrapper(const FText& Message, const TFunction<void()>& ChangelistTask)"
  },
  {
    "label": "ExecuteUncontrolledChangelistOperationWithSlowTaskWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteUncontrolledChangelistOperationWithSlowTaskWrapper(const FText& Message, const TFunction<void()>& UncontrolledChangelistTask)"
  },
  {
    "label": "DisplaySourceControlOperationNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplaySourceControlOperationNotification(const FText& Message, SNotificationItem::ECompletionState CompletionState)"
  },
  {
    "label": "OpenConflictDialog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenConflictDialog(const TArray<FSourceControlStateRef>& InFilesConflicts)"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (} struct FSCCFileDragDropOp : public FDragDropOperation {)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FSCCFileDragDropOp, FDragDropOperation)"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (using FDragDropOperation::Construct ; TSharedPtr<SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} FSourceControlStateRef FileState = Files .)",
    "insertText": "IsEmpty()"
  }
]