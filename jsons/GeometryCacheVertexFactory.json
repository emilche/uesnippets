[
  {
    "label": "FGeometryCacheVertexFactoryUserData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCacheVertexFactoryUserData"
  },
  {
    "label": "FGeometryCacheVertexFactoryShaderParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCacheVertexFactoryShaderParameters"
  },
  {
    "label": "FGeometryCacheVertexVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCacheVertexVertexFactory"
  },
  {
    "label": "FDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataType"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" RHI . h \" # include \" RenderResource . h \" # include \" UniformBuffer . h \" # include \" VertexFactory . h \" # include \" LocalVertexFactory . h \")",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FGeometryCacheVertexFactoryUniformBufferParameters, ENGINE_API) SHADER_PARAMETER(FVector3f, MeshOrigin) SHADER_PARAMETER(FVector3f, MeshExtension) SHADER_PARAMETER(FVector3f, MotionBlurDataOrigin) SHADER_PARAMETER(FVector3f, MotionBlurDataExtension) SHADER_PARAMETER(float, MotionBlurPositionScale) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FGeometryCacheManualVertexFetchUniformBufferParameters, ENGINE_API) SHADER_PARAMETER_SRV(Buffer<float>, Position) SHADER_PARAMETER_SRV(Buffer<float>, MotionBlurData) SHADER_PARAMETER_SRV(Buffer<half4>, TangentX) SHADER_PARAMETER_SRV(Buffer<half4>, TangentZ) SHADER_PARAMETER_SRV(Buffer<float4>, Color) SHADER_PARAMETER_SRV(Buffer<float>, TexCoords) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE_API()",
    "kind": "Method",
    "detail": "Function (struct FGeometryCacheVertexFactoryUserData { const FVertexBuffer* PositionBuffer ; const FVertexBuffer* MotionBlurDataBuffer ; FVector3f MeshOrigin ; FVector3f MeshExtension ; FVector3f MotionBlurDataOrigin ; FVector3f MotionBlurDataExtension ; float MotionBlurPositionScale ; FGeometryCacheVertexFactoryUniformBufferParametersRef UniformBuffer ; FShaderResourceViewRHIRef PositionSRV ; FShaderResourceViewRHIRef TangentXSRV ; FShaderResourceViewRHIRef TangentZSRV ; FShaderResourceViewRHIRef ColorSRV ; FShaderResourceViewRHIRef MotionBlurDataSRV ; FShaderResourceViewRHIRef TexCoordsSRV ; FUniformBufferRHIRef ManualVertexFetchUniformBuffer ; } ; class FGeometryCacheVertexFactoryShaderParameters ; class FGeometryCacheVertexVertexFactory : public FVertexFactory {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE_API(FGeometryCacheVertexVertexFactory, ENGINE_API)"
  },
  {
    "label": "FGeometryCacheVertexVertexFactory()",
    "kind": "Method",
    "detail": "Function (typedef FVertexFactory Super ; public :)",
    "insertText": "FGeometryCacheVertexVertexFactory(ERHIFeatureLevel::Type InFeatureLevel) : FVertexFactory(InFeatureLevel), PositionStreamIndex(-1), MotionBlurDataStreamIndex(-1)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (} struct FDataType { FVertexStreamComponent PositionComponent ; FVertexStreamComponent TangentBasisComponents [ 2 ] ; TArray<FVertexStreamComponent,TFixedAllocator<MAX_STATIC_TEXCOORDS / 2>> TextureCoordinates ; FVertexStreamComponent ColorComponent ; FVertexStreamComponent MotionBlurDataComponent ; } ; void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(FRHICommandListBase& RHICmdList, const FDataType& InData)"
  },
  {
    "label": "CreateManualVertexFetchUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateManualVertexFetchUniformBuffer(FRHICommandListBase& RHICmdList, const FVertexBuffer* PoistionBuffer, const FVertexBuffer* MotionBlurBuffer, FGeometryCacheVertexFactoryUserData& OutUserData)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  }
]