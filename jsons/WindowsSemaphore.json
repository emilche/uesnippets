[
  {
    "label": "FWindowsSemaphore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsSemaphore"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / Timespan . h \" # include \" Misc / AssertionMacros . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" class FWindowsSemaphore { public :)",
    "insertText": "UE_NONCOPYABLE(FWindowsSemaphore)"
  },
  {
    "label": "FWindowsSemaphore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWindowsSemaphore(int32 InitialCount, int32 MaxCount) : Semaphore(CreateSemaphore(nullptr, InitialCount, MaxCount, nullptr))"
  },
  {
    "label": "FWindowsSemaphore()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FWindowsSemaphore()"
  },
  {
    "label": "CloseHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseHandle(Semaphore)"
  },
  {
    "label": "Acquire()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Acquire()"
  },
  {
    "label": "WaitForSingleObject()",
    "kind": "Method",
    "detail": "Function (DWORD Res =)",
    "insertText": "WaitForSingleObject(Semaphore, INFINITE)"
  },
  {
    "label": "TryAcquire()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TryAcquire(FTimespan Timeout = FTimespan::Zero())"
  },
  {
    "label": "WaitForSingleObject()",
    "kind": "Method",
    "detail": "Function (DWORD Res =)",
    "insertText": "WaitForSingleObject(Semaphore, (DWORD)Timeout.GetTotalMilliseconds())"
  },
  {
    "label": "ReleaseSemaphore()",
    "kind": "Method",
    "detail": "Function (bool bRes =)",
    "insertText": "ReleaseSemaphore(Semaphore, Count, nullptr)"
  }
]