[
  {
    "label": "macroblock_plane",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macroblock_plane"
  },
  {
    "label": "buf_2d",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "buf_2d"
  },
  {
    "label": "macroblock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "macroblock"
  },
  {
    "label": "scale_factors",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "scale_factors"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_BLOCK_H_ # define VPX_VP9_ENCODER_VP9_BLOCK_H_ # include \" vpx_util / vpx_thread . h \" # include \" vp9 / common / vp9_entropymv . h \" # include \" vp9 / common / vp9_entropy . h \" # ifdef __cplusplus \" C \" { # endif typedef struct { unsigned int sse ; int sum ; unsigned int var ; } diff ; struct macroblock_plane {)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, src_diff[64 * 64])"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (tran_low_t* qcoeff ; tran_low_t* coeff ; uint16_t* eobs ; struct buf_2d src ;)",
    "insertText": "DECLARE_ALIGNED(16, int16_t, round_fp[8])"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (int16_t* quant_fp ; int16_t* quant ; int16_t* quant_shift ; int16_t* zbin ; int16_t* round ; int64_t quant_thred [ 2 ] ; } ; typedef unsigned int vp9_coeff_cost [ PLANE_TYPES ] [ REF_TYPES ] [ COEF_BANDS ] [ 2 ] [ COEFF_CONTEXTS ] [ ENTROPY_TOKENS ] ; typedef struct { int_mv ref_mvs [ MAX_REF_FRAMES ] [ MAX_MV_REF_CANDIDATES ] ; uint8_t mode_context [ MAX_REF_FRAMES ] ; } MB_MODE_INFO_EXT ; typedef struct { int col_min ; int col_max ; int row_min ; int row_max ; } MvLimits ; typedef struct macroblock MACROBLOCK ; struct macroblock { # if)",
    "insertText": "defined(_MSC_VER)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# endif MV pred_mv [ MAX_REF_FRAMES ] ; uint8_t color_sensitivity [ 2 ] ; uint8_t sb_is_skin ; uint8_t skip_low_source_sad ; uint8_t lowvar_highsumdiff ; uint8_t last_sb_high_content ; int sb_use_mv_part ; int sb_mvcol_part ; int sb_mvrow_part ; int sb_pickmode_part ; int zero_temp_sad_source ; uint8_t content_state_sb ; uint8_t variance_low [ 2 5 ] ; uint8_t arf_frame_usage ; uint8_t lastgolden_frame_usage ;)",
    "insertText": "void(*fwd_txfm4x4)(const int16_t *input, tran_low_t *output, int stride)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(*inv_txfm_add)(const tran_low_t *input, uint8_t *dest, int stride, int eob)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# if CONFIG_VP9_HIGHBITDEPTH)",
    "insertText": "void(*highbd_inv_txfm_add)(const tran_low_t *input, uint16_t *dest, int stride, int eob, int bd)"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "DECLARE_ALIGNED(16, uint8_t, est_pred[64 * 64])"
  }
]