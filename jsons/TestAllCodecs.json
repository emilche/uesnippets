[
  {
    "label": "TestPack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestPack"
  },
  {
    "label": "TestAllCodecs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestAllCodecs"
  },
  {
    "label": "TestPack()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_TEST_TESTALLCODECS_H_ # define MODULES_AUDIO_CODING_TEST_TESTALLCODECS_H_ # include<memory> # include \" modules / audio_coding / include / audio_coding_module . h \" # include \" modules / audio_coding / test / PCMFile . h \" namespace webrtc { class TestPack : public AudioPacketizationCallback { public :)",
    "insertText": "TestPack()"
  },
  {
    "label": "RegisterReceiverACM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterReceiverACM(AudioCodingModule* acm)"
  },
  {
    "label": "SendData()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "SendData(AudioFrameType frame_type, uint8_t payload_type, uint32_t timestamp, const uint8_t* payload_data, size_t payload_size, int64_t absolute_capture_timestamp_ms)"
  },
  {
    "label": "payload_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "payload_size()"
  },
  {
    "label": "timestamp_diff()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "timestamp_diff()"
  },
  {
    "label": "reset_payload_size()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset_payload_size()"
  },
  {
    "label": "TestAllCodecs()",
    "kind": "Method",
    "detail": "Function (private : AudioCodingModule* receiver_acm_ ; uint16_t sequence_number_ ; uint8_t payload_data_ [ 6 0* 3 2* 2* 2 ] ; uint32_t timestamp_diff_ ; uint32_t last_in_timestamp_ ; uint64_t total_bytes_ ; size_t payload_size_ ; } ; class TestAllCodecs { public :)",
    "insertText": "TestAllCodecs()"
  },
  {
    "label": "Perform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Perform()"
  },
  {
    "label": "RegisterSendCodec()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterSendCodec(char side, char* codec_name, int32_t sampling_freq_hz, int rate, int packet_size, size_t extra_byte)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Run(TestPack* channel)"
  },
  {
    "label": "OpenOutFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenOutFile(int test_number)"
  }
]