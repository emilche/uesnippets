[
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "USceneThumbnailInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneThumbnailInfo"
  },
  {
    "label": "FThumbnailPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThumbnailPreviewScene"
  },
  {
    "label": "FParticleSystemThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSystemThumbnailScene"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "FMaterialThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialThumbnailScene"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "FSkeletalMeshThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshThumbnailScene"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "ASkeletalMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASkeletalMeshActor"
  },
  {
    "label": "FStaticMeshThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshThumbnailScene"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "AAnimationThumbnailSkeletalMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAnimationThumbnailSkeletalMeshActor"
  },
  {
    "label": "FAnimationSequenceThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationSequenceThumbnailScene"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "FBlendSpaceThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlendSpaceThumbnailScene"
  },
  {
    "label": "UBlendSpace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendSpace"
  },
  {
    "label": "FAnimBlueprintThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimBlueprintThumbnailScene"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "FPhysicsAssetThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAssetThumbnailScene"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "FClassActorThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassActorThumbnailScene"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FBlueprintThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintThumbnailScene"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "FClassThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassThumbnailScene"
  },
  {
    "label": "TClassInstanceThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TClassInstanceThumbnailScene"
  },
  {
    "label": "TObjectInstanceThumbnailScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TObjectInstanceThumbnailScene"
  },
  {
    "label": "FThumbnailPreviewScene()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" Engine / Blueprint . h \" # include \" PreviewScene . h \" # include \" TickableEditorObject . h \" # include \" Animation / SkeletalMeshActor . h \" # include \" ThumbnailHelpers . generated . h \" class FSceneViewFamily ; class USceneThumbnailInfo ; class FThumbnailPreviewScene : public FPreviewScene,public FTickableEditorObject { public :)",
    "insertText": "FThumbnailPreviewScene()"
  },
  {
    "label": "CreateView()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FSceneView*)",
    "insertText": "CreateView(FSceneViewFamily* ViewFamily, int32 X, int32 Y, uint32 SizeX, uint32 SizeY)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "GetBoundsZOffset()",
    "kind": "Method",
    "detail": "Function (protected : float)",
    "insertText": "GetBoundsZOffset(const FBoxSphereBounds& Bounds)"
  },
  {
    "label": "GetViewMatrixParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetViewMatrixParameters(const float InFOVDegrees, FVector& OutOrigin, float& OutOrbitPitch, float& OutOrbitYaw, float& OutOrbitZoom)"
  },
  {
    "label": "FParticleSystemThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} ; class FParticleSystemThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FParticleSystemThumbnailScene()"
  },
  {
    "label": "SetParticleSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleSystem(class UParticleSystem* ParticleSystem)"
  },
  {
    "label": "FMaterialThumbnailScene()",
    "kind": "Method",
    "detail": "Function (protected : class UParticleSystemComponent* PartComponent ; class FFXSystemInterface* ThumbnailFXSystem ; } ; class FMaterialThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FMaterialThumbnailScene()"
  },
  {
    "label": "SetMaterialInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialInterface(class UMaterialInterface* InMaterial)"
  },
  {
    "label": "ShouldSetSeparateTranslucency()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSetSeparateTranslucency(class UMaterialInterface* InMaterial)"
  },
  {
    "label": "FSkeletalMeshThumbnailScene()",
    "kind": "Method",
    "detail": "Function (protected : class AStaticMeshActor* PreviewActor ; bool bForcePlaneThumbnail ; } ; class FSkeletalMeshThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FSkeletalMeshThumbnailScene()"
  },
  {
    "label": "SetSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkeletalMesh(class USkeletalMesh* InSkeletalMesh)"
  },
  {
    "label": "SetDrawDebugSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawDebugSkeleton(bool bInDrawDebugSkeleton, const FLinearColor& InSkeletonColor)"
  },
  {
    "label": "GetPreviewActor()",
    "kind": "Method",
    "detail": "Function (class ASkeletalMeshActor*)",
    "insertText": "GetPreviewActor()"
  },
  {
    "label": "FStaticMeshThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : class ASkeletalMeshActor* PreviewActor ; FLinearColor DrawDebugColor = FLinearColor::White ; bool bDrawDebugSkeleton = false ; } ; class FStaticMeshThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FStaticMeshThumbnailScene()"
  },
  {
    "label": "SetStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStaticMesh(class UStaticMesh* StaticMesh)"
  },
  {
    "label": "SetOverrideMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverrideMaterials(const TArray<class UMaterialInterface*>& OverrideMaterials)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : class AStaticMeshActor* PreviewActor ; } ;)",
    "insertText": "UCLASS(ClassGroup = ISkeletalMeshes, ComponentWrapperClass, ConversionRoot, meta = (ChildCanTick))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "FAnimationSequenceThumbnailScene()",
    "kind": "Method",
    "detail": "Function (class FAnimationSequenceThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FAnimationSequenceThumbnailScene()"
  },
  {
    "label": "SetAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAnimation(class UAnimSequenceBase* InAnimation)"
  },
  {
    "label": "CleanupComponentChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupComponentChildren(USceneComponent* Component)"
  },
  {
    "label": "FBlendSpaceThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : class AAnimationThumbnailSkeletalMeshActor* PreviewActor ; class UAnimSequenceBase* PreviewAnimation ; } ; class FBlendSpaceThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FBlendSpaceThumbnailScene()"
  },
  {
    "label": "SetBlendSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBlendSpace(class UBlendSpace* InBlendSpace)"
  },
  {
    "label": "FAnimBlueprintThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : class AAnimationThumbnailSkeletalMeshActor* PreviewActor ; class UBlendSpace* PreviewAnimation ; } ; class FAnimBlueprintThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FAnimBlueprintThumbnailScene()"
  },
  {
    "label": "SetAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAnimBlueprint(class UAnimBlueprint* InBlueprint)"
  },
  {
    "label": "FPhysicsAssetThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : class ASkeletalMeshActor* PreviewActor ; class UAnimBlueprint* PreviewBlueprint ; } ; class FPhysicsAssetThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FPhysicsAssetThumbnailScene()"
  },
  {
    "label": "SetPhysicsAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsAsset(class UPhysicsAsset* InPhysicsAsset)"
  },
  {
    "label": "FClassActorThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : class ASkeletalMeshActor* PreviewActor ; } ; class UActorComponent ; class FClassActorThumbnailScene : public FThumbnailPreviewScene { public :)",
    "insertText": "FClassActorThumbnailScene()"
  },
  {
    "label": "IsValidComponentForVisualization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidComponentForVisualization(const UActorComponent* Component)"
  },
  {
    "label": "SpawnPreviewActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnPreviewActor(class UClass* Obj)"
  },
  {
    "label": "GetSceneThumbnailInfo()",
    "kind": "Method",
    "detail": "Function (USceneThumbnailInfo*)",
    "insertText": "GetSceneThumbnailInfo(const float TargetDistance)"
  },
  {
    "label": "GetPreviewActorBounds()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds)",
    "insertText": "GetPreviewActorBounds()"
  },
  {
    "label": "ClearStaleActors()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ClearStaleActors()"
  },
  {
    "label": "FBlueprintThumbnailScene()",
    "kind": "Method",
    "detail": "Function (int32 NumStartingActors ; TWeakObjectPtr<class AActor> PreviewActor ; } ; class FBlueprintThumbnailScene : public FClassActorThumbnailScene { public :)",
    "insertText": "FBlueprintThumbnailScene()"
  },
  {
    "label": "SetBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlueprint(class UBlueprint* Blueprint)"
  },
  {
    "label": "BlueprintChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlueprintChanged(class UBlueprint* Blueprint)"
  },
  {
    "label": "FClassThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : TWeakObjectPtr<class UBlueprint> CurrentBlueprint ; } ; class FClassThumbnailScene : public FClassActorThumbnailScene { public :)",
    "insertText": "FClassThumbnailScene()"
  },
  {
    "label": "SetClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClass(class UClass* Class)"
  },
  {
    "label": "TClassInstanceThumbnailScene()",
    "kind": "Method",
    "detail": "Function (private : UClass* CurrentClass ; } ; template<ThumbnailSceneType,int32 MaxNumScenes> class TClassInstanceThumbnailScene { public :)",
    "insertText": "TClassInstanceThumbnailScene()"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (InstancedThumbnailScenes .)",
    "insertText": "Reserve(MaxNumScenes)"
  },
  {
    "label": "FindThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<ThumbnailSceneType>)",
    "insertText": "FindThumbnailScene(const UClass* InClass)"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (const FName ClassName = InClass ->)",
    "insertText": "GetFName()"
  },
  {
    "label": "EnsureThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<ThumbnailSceneType>)",
    "insertText": "EnsureThumbnailScene(const UClass* InClass)"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ThumbnailSceneType> ExistingThumbnailScene = InstancedThumbnailScenes .)",
    "insertText": "FindRef(ClassName)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (InstancedThumbnailScenes .)",
    "insertText": "Reset()"
  },
  {
    "label": "CollectGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectGarbage(GARBAGE_COLLECTION_KEEPFLAGS)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (} ExistingThumbnailScene =)",
    "insertText": "MakeShareable(new ThumbnailSceneType())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (InstancedThumbnailScenes .)",
    "insertText": "Add(ClassName, ExistingThumbnailScene)"
  },
  {
    "label": "ToSharedRef()",
    "kind": "Method",
    "detail": "Function (} return ExistingThumbnailScene .)",
    "insertText": "ToSharedRef()"
  },
  {
    "label": "RemoveThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveThumbnailScene(const UClass* InClass)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (InstancedThumbnailScenes .)",
    "insertText": "Remove(InClass->GetFName())"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Clear()"
  },
  {
    "label": "TObjectInstanceThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} private : TMap<FName,TSharedPtr<ThumbnailSceneType>> InstancedThumbnailScenes ; } ; template<ThumbnailSceneType,int32 MaxNumScenes> class TObjectInstanceThumbnailScene { public :)",
    "insertText": "TObjectInstanceThumbnailScene()"
  },
  {
    "label": "FindThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<ThumbnailSceneType>)",
    "insertText": "FindThumbnailScene(const UObject* InObject)"
  },
  {
    "label": "GetPathName()",
    "kind": "Method",
    "detail": "Function (const FString ObjectPath = InObject ->)",
    "insertText": "GetPathName()"
  },
  {
    "label": "EnsureThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<ThumbnailSceneType>)",
    "insertText": "EnsureThumbnailScene(const UObject* InObject)"
  },
  {
    "label": "FindRef()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ThumbnailSceneType> ExistingThumbnailScene = InstancedThumbnailScenes .)",
    "insertText": "FindRef(ObjectPath)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (InstancedThumbnailScenes .)",
    "insertText": "Add(ObjectPath, ExistingThumbnailScene)"
  },
  {
    "label": "RemoveThumbnailScene()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveThumbnailScene(const UObject* InObject)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (InstancedThumbnailScenes .)",
    "insertText": "Remove(InObject->GetPathName())"
  }
]