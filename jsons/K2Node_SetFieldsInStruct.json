[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FOptionalPinFromProperty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptionalPinFromProperty"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "UK2Node_SetFieldsInStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_SetFieldsInStruct"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "FNodeHandlingFunctor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeHandlingFunctor"
  },
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "EPinsToRemove",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPinsToRemove"
  },
  {
    "label": "FSetFieldsInStructPinManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetFieldsInStructPinManager"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraph / EdGraphNodeUtils . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node_MakeStruct . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_SetFieldsInStruct . generated . h \" class FBlueprintActionDatabaseRegistrar ; class FProperty ; class FString ; class UBlueprint ; class UEdGraphPin ; class UObject ; struct FLinearColor ; struct FOptionalPinFromProperty ; template<FuncType> class TFunctionRef ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual void AllocateDefaultPins()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "ValidateNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateNodeDuringCompilation(class FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "IsConnectionDisallowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionDisallowed(const UEdGraphPin* MyPin, const UEdGraphPin* OtherPin, FString& OutReason)"
  },
  {
    "label": "CanSplitPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSplitPin(const UEdGraphPin* Pin)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "IsNodePure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodePure()"
  },
  {
    "label": "ShowCustomPinActions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowCustomPinActions(const UEdGraphPin* InGraphPin, bool bIgnorePinsNum)"
  },
  {
    "label": "RemoveFieldPins()",
    "kind": "Method",
    "detail": "Function (enum EPinsToRemove { GivenPin,AllOtherPins } ; void)",
    "insertText": "RemoveFieldPins(UEdGraphPin* InGraphPin, EPinsToRemove Selection)"
  },
  {
    "label": "AllPinsAreShown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllPinsAreShown()"
  },
  {
    "label": "RestoreAllPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreAllPins()"
  },
  {
    "label": "BackTracePinPath()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BackTracePinPath(UEdGraphPin* OutputPin, TFunctionRef<void(UEdGraphPin*)> Predicate)"
  },
  {
    "label": "FSetFieldsInStructPinManager()",
    "kind": "Method",
    "detail": "Function (struct FSetFieldsInStructPinManager : public FMakeStructPinManager { public :)",
    "insertText": "FSetFieldsInStructPinManager(const uint8* InSampleStructMemory, UBlueprint* BP) : FMakeStructPinManager(InSampleStructMemory, BP)"
  },
  {
    "label": "GetRecordDefaults()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetRecordDefaults(FProperty* TestProperty, FOptionalPinFromProperty& Record)"
  }
]