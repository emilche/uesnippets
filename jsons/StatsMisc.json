[
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FSimpleScopeSecondsCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleScopeSecondsCounter"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FSecondsCounterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSecondsCounterData"
  },
  {
    "label": "FSecondsCounterScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSecondsCounterScope"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FSecondsCounterScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSecondsCounterScope"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FConditionalScopeLogTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConditionalScopeLogTime"
  },
  {
    "label": "EScopeLogTimeUnits",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EScopeLogTimeUnits"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FScopeLogTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeLogTime"
  },
  {
    "label": "FConditionalScopeLogTime()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConditionalScopeLogTime( bool bCondition, const WIDECHAR* InName, FTotalTimeAndCount* InCumulative = nullptr, EScopeLogTimeUnits InUnits = ScopeLog_Milliseconds )"
  },
  {
    "label": "FConditionalScopeLogTime()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FConditionalScopeLogTime( bool bCondition, const ANSICHAR* InName, FTotalTimeAndCount* InCumulative = nullptr, EScopeLogTimeUnits InUnits = ScopeLog_Milliseconds )"
  }
]