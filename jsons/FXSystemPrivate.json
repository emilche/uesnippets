[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FGlobalDistanceFieldParameterData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalDistanceFieldParameterData"
  },
  {
    "label": "FParticleSimulationGPU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSimulationGPU"
  },
  {
    "label": "FParticleSimulationResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSimulationResources"
  },
  {
    "label": "UVectorFieldComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVectorFieldComponent"
  },
  {
    "label": "FGPUSpriteEmitterInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSpriteEmitterInfo"
  },
  {
    "label": "FParticleEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterInstance"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "EParticleCollisionShaderMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleCollisionShaderMode"
  },
  {
    "label": "FNewParticle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNewParticle"
  },
  {
    "label": "FGPUSpriteVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSpriteVertexFactory"
  },
  {
    "label": "FFXSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystem"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "IsParticleCollisionModeSupported()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" FXSystem . h \" # include \" VectorField . h \" # include \" ParticleSortingGPU . h \" # include \" GPUSortManager . h \" # include \" ParticleVertexFactory . h \" class FCanvas ; class FGlobalDistanceFieldParameterData ; class FParticleSimulationGPU ; class FParticleSimulationResources ; class UVectorFieldComponent ; struct FGPUSpriteEmitterInfo ; struct FParticleEmitterInstance ; class FParticleSimulationGPU ; class FParticleSimulationResources ; namespace EParticleSimulatePhase { enum Type { Main,CollisionDistanceField,CollisionDepthBuffer,First = Main,Last = CollisionDepthBuffer } ; } ; enum EParticleCollisionShaderMode { PCM_None,PCM_DepthBuffer,PCM_DistanceField } ; bool)",
    "insertText": "IsParticleCollisionModeSupported(EShaderPlatform InPlatform, EParticleCollisionShaderMode InCollisionShaderMode)"
  },
  {
    "label": "GetLastParticleSimulationPhase()",
    "kind": "Method",
    "detail": "Function (EParticleSimulatePhase::Type)",
    "insertText": "GetLastParticleSimulationPhase(EShaderPlatform InPlatform)"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE()",
    "kind": "Method",
    "detail": "Function (} struct FNewParticle { FVector3f Position ; float RelativeTime ; FVector3f Velocity ; float TimeScale ; FVector2f Size ; float Rotation ; float RelativeRotationRate ; float DragCoefficient ; float VectorFieldScale ; union { float Resilience ; int32 AllocatedTileIndex ; } ResilienceAndTileIndex ; float RandomOrbit ; FVector3f Offset ; } ; class FGPUSpriteVertexFactory : public FParticleVertexFactoryBase {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE(FGPUSpriteVertexFactory)"
  },
  {
    "label": "FGPUSpriteVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FGPUSpriteVertexFactory(ERHIFeatureLevel::Type InFeatureLevel) : FParticleVertexFactoryBase(InFeatureLevel)"
  },
  {
    "label": "FGPUSpriteVertexFactory()",
    "kind": "Method",
    "detail": "Function (} FRHIUniformBuffer* EmitterUniformBuffer ; FUniformBufferRHIRef EmitterDynamicUniformBuffer ; FRHIShaderResourceView* UnsortedParticleIndicesSRV ; FRHITexture* PositionTextureRHI ; FRHITexture* VelocityTextureRHI ; FRHITexture* AttributesTextureRHI ; FVector3f LWCTile ; FVector3f TilePageScale ;)",
    "insertText": "FGPUSpriteVertexFactory() : FParticleVertexFactoryBase(PVFT_MAX, ERHIFeatureLevel::Num) , UnsortedParticleIndicesSRV(0) , PositionTextureRHI(nullptr) , VelocityTextureRHI(nullptr) , AttributesTextureRHI(nullptr) , LWCTile(FVector3f::ZeroVector) , TilePageScale(FVector3f::OneVector)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "RendersPrimitivesAsCameraFacingSprites()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RendersPrimitivesAsCameraFacingSprites()"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (UnsortedParticleIndicesSRV = VertexBuffer ; } bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "FFXSystem()",
    "kind": "Method",
    "detail": "Function (} ; class FFXSystem : public FFXSystemInterface { public :)",
    "insertText": "FFXSystem(ERHIFeatureLevel::Type InFeatureLevel, EShaderPlatform InShaderPlatform, FGPUSortManager* InGPUSortManager)"
  },
  {
    "label": "FFXSystem()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFXSystem()"
  },
  {
    "label": "GetInterface()",
    "kind": "Method",
    "detail": "Function (const FName Name ; FFXSystemInterface*)",
    "insertText": "GetInterface(const FName& InName)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(UWorld* World, float DeltaSeconds)"
  },
  {
    "label": "Suspend()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "Suspend()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume()"
  },
  {
    "label": "DrawDebug()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DrawDebug(FCanvas* Canvas)"
  },
  {
    "label": "AddVectorField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVectorField(UVectorFieldComponent* VectorFieldComponent)"
  },
  {
    "label": "RemoveVectorField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveVectorField(UVectorFieldComponent* VectorFieldComponent)"
  },
  {
    "label": "UpdateVectorField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVectorField(UVectorFieldComponent* VectorFieldComponent)"
  },
  {
    "label": "CreateGPUSpriteEmitterInstance()",
    "kind": "Method",
    "detail": "Function (FParticleEmitterInstance*)",
    "insertText": "CreateGPUSpriteEmitterInstance(FGPUSpriteEmitterInfo& EmitterInfo)"
  },
  {
    "label": "PreInitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreInitViews(class FRDGBuilder& GraphBuilder, bool bAllowGPUParticleUpdate, const TArrayView<const FSceneViewFamily*>& ViewFamilies, const FSceneViewFamily* CurrentFamily)"
  },
  {
    "label": "PostInitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitViews(FRDGBuilder& GraphBuilder, TConstStridedView<FSceneView> Views, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "UsesGlobalDistanceField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesGlobalDistanceField()"
  },
  {
    "label": "UsesDepthBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesDepthBuffer()"
  },
  {
    "label": "RequiresEarlyViewUniformBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresEarlyViewUniformBuffer()"
  },
  {
    "label": "RequiresRayTracingScene()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresRayTracingScene()"
  },
  {
    "label": "PreRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRender(FRDGBuilder& GraphBuilder, TConstStridedView<FSceneView> Views, FSceneUniformBuffer &SceneUniformBuffer, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "PostRenderOpaque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRenderOpaque(FRDGBuilder& GraphBuilder, TConstStridedView<FSceneView> Views, FSceneUniformBuffer &SceneUniformBuffer, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "GetFeatureLevel()",
    "kind": "Method",
    "detail": "Function (ERHIFeatureLevel::Type)",
    "insertText": "GetFeatureLevel()"
  },
  {
    "label": "RemoveGPUSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveGPUSimulation(FParticleSimulationGPU* Simulation)"
  },
  {
    "label": "OnSimulationPhaseChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSimulationPhaseChanged(const FParticleSimulationGPU* Simulation, EParticleSimulatePhase::Type PrevPhase)"
  },
  {
    "label": "GetParticleSimulationResources()",
    "kind": "Method",
    "detail": "Function (FParticleSimulationResources*)",
    "insertText": "GetParticleSimulationResources()"
  },
  {
    "label": "PrepareGPUSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareGPUSimulation(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "FinalizeGPUSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeGPUSimulation(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "GetGPUSortManager()",
    "kind": "Method",
    "detail": "Function (FGPUSortManager*)",
    "insertText": "GetGPUSortManager()"
  },
  {
    "label": "SetSceneTexturesUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSceneTexturesUniformBuffer(const TUniformBufferRef<FSceneTextureUniformParameters>& InSceneTexturesUniformParams)"
  },
  {
    "label": "GenerateSortKeys()",
    "kind": "Method",
    "detail": "Function (SceneTexturesUniformParams = InSceneTexturesUniformParams ; } private : void)",
    "insertText": "GenerateSortKeys(FRHICommandListImmediate& RHICmdList, int32 BatchId, int32 NumElementsInBatch, EGPUSortFlags Flags, FRHIUnorderedAccessView* KeysUAV, FRHIUnorderedAccessView* ValuesUAV)"
  },
  {
    "label": "InitGPUSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitGPUSimulation()"
  },
  {
    "label": "DestroyGPUSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyGPUSimulation()"
  },
  {
    "label": "InitGPUResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitGPUResources()"
  },
  {
    "label": "ReleaseGPUResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseGPUResources()"
  },
  {
    "label": "AdvanceGPUParticleFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceGPUParticleFrame(FRHICommandListImmediate& RHICmdList, bool bAllowGPUParticleUpdate)"
  },
  {
    "label": "UsesGlobalDistanceFieldInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesGlobalDistanceFieldInternal()"
  },
  {
    "label": "UsesDepthBufferInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesDepthBufferInternal()"
  },
  {
    "label": "RequiresEarlyViewUniformBufferInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresEarlyViewUniformBufferInternal()"
  },
  {
    "label": "RequiresRayTracingSceneInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresRayTracingSceneInternal()"
  },
  {
    "label": "UpdateMultiGPUResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMultiGPUResources(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "SimulateGPUParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimulateGPUParticles(FRHICommandListImmediate& RHICmdList, EParticleSimulatePhase::Type Phase, const TUniformBufferRef<FViewUniformShaderParameters>& ViewUniformBuffer, const FGlobalDistanceFieldParameterData* GlobalDistanceFieldParameterData)"
  },
  {
    "label": "VisualizeGPUParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisualizeGPUParticles(FCanvas* Canvas)"
  },
  {
    "label": "SimulateGPUParticles_Internal()",
    "kind": "Method",
    "detail": "Function (private : template<TVectorFieldUniformParametersType> void)",
    "insertText": "SimulateGPUParticles_Internal(FRHICommandListImmediate& RHICmdList, EParticleSimulatePhase::Type Phase, const TUniformBufferRef<FViewUniformShaderParameters>& ViewUniformBuffer, const FGlobalDistanceFieldParameterData* GlobalDistanceFieldParameterData, FRHITexture* SceneDepthTexture, FRHITexture* GBufferATexture)"
  }
]