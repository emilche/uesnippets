[
  {
    "label": "ANativeWindow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ANativeWindow"
  },
  {
    "label": "EAppEventState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAppEventState"
  },
  {
    "label": "FAppEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAppEventData"
  },
  {
    "label": "FAppEventPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAppEventPacket"
  },
  {
    "label": "FAppEventManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAppEventManager"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Queue . h \" # if USE_ANDROID_EVENTS struct ANativeWindow ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogAndroidEvents, Log, All)"
  },
  {
    "label": "FAppEventData()",
    "kind": "Method",
    "detail": "Function (enum EAppEventState { APP_EVENT_STATE_WINDOW_CREATED,APP_EVENT_STATE_WINDOW_RESIZED,APP_EVENT_STATE_WINDOW_CHANGED,APP_EVENT_STATE_WINDOW_DESTROYED,APP_EVENT_STATE_WINDOW_REDRAW_NEEDED,APP_EVENT_STATE_ON_DESTROY,APP_EVENT_STATE_ON_PAUSE,APP_EVENT_STATE_ON_RESUME,APP_EVENT_STATE_ON_STOP,APP_EVENT_STATE_ON_START,APP_EVENT_STATE_WINDOW_LOST_FOCUS,APP_EVENT_STATE_WINDOW_GAINED_FOCUS,APP_EVENT_STATE_SAVE_STATE,APP_EVENT_STATE_APP_SUSPENDED,APP_EVENT_STATE_APP_ACTIVATED,APP_EVENT_STATE_SAFE_ZONE_UPDATED,APP_EVENT_RUN_CALLBACK,APP_EVENT_MAX_EVENTS,APP_EVENT_STATE_INVALID = - 1,} ; struct FAppEventData {)",
    "insertText": "FAppEventData() : WindowWidth(-1), WindowHeight(-1)"
  },
  {
    "label": "FAppEventData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAppEventData(TFunction<void(void)> CallbackFuncIN) : WindowWidth(-1), WindowHeight(-1), CallbackFunc(MoveTemp(CallbackFuncIN))"
  },
  {
    "label": "FAppEventData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAppEventData(ANativeWindow* WindowIn)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (int32 WindowWidth ; int32 WindowHeight ; TFunction<)",
    "insertText": "void(void)"
  },
  {
    "label": "FAppEventPacket()",
    "kind": "Method",
    "detail": "Function (} ; struct FAppEventPacket { EAppEventState State ; FAppEventData Data ;)",
    "insertText": "FAppEventPacket(): State(APP_EVENT_STATE_INVALID)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (} } ; class FAppEventManager { public : FAppEventManager*)",
    "insertText": "GetInstance()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "EnqueueAppEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueAppEvent(EAppEventState InState, FAppEventData&& InData = FAppEventData())"
  },
  {
    "label": "SetEventHandlerEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEventHandlerEvent(FEvent* InEventHandlerEvent)"
  },
  {
    "label": "HandleWindowCreated_EventThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWindowCreated_EventThread(void* InWindow)"
  },
  {
    "label": "HandleWindowClosed_EventThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWindowClosed_EventThread()"
  },
  {
    "label": "IsGamePaused()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGamePaused()"
  },
  {
    "label": "IsGameInFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGameInFocus()"
  },
  {
    "label": "WaitForEventInQueue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitForEventInQueue(EAppEventState InState, double TimeoutSeconds)"
  },
  {
    "label": "SetEmptyQueueHandlerEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEmptyQueueHandlerEvent(FEvent* InEventHandlerEvent)"
  },
  {
    "label": "TriggerEmptyQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerEmptyQueue()"
  },
  {
    "label": "PauseAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseAudio()"
  },
  {
    "label": "ResumeAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResumeAudio()"
  },
  {
    "label": "ReleaseMicrophone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseMicrophone(bool shuttingDown)"
  },
  {
    "label": "FAppEventManager()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FAppEventManager()"
  },
  {
    "label": "DequeueAppEvent()",
    "kind": "Method",
    "detail": "Function (private : FAppEventPacket)",
    "insertText": "DequeueAppEvent()"
  },
  {
    "label": "ExecWindowCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecWindowCreated()"
  },
  {
    "label": "ExecWindowResized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecWindowResized()"
  },
  {
    "label": "OnScaleFactorChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScaleFactorChanged(IConsoleVariable* CVar)"
  },
  {
    "label": "IsInAndroidEventThread()",
    "kind": "Method",
    "detail": "Function (FAppEventManager* sInstance ; pthread_mutex_t QueueMutex ; TQueue<FAppEventPacket,EQueueMode::Mpsc> Queue ; FEvent* EventHandlerEvent ; FEvent* EmptyQueueHandlerEvent ; bool FirstInitialized ; bool bCreateWindow ; bool bWindowInFocus ; bool bSaveState ; bool bAudioPaused ; bool bHaveWindow ; bool bHaveGame ; bool bRunning ; } ; bool)",
    "insertText": "IsInAndroidEventThread()"
  }
]