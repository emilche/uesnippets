[
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "USequencerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencerSettings"
  },
  {
    "label": "IDraggableTrackAreaExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDraggableTrackAreaExtension"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "FTrackModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackModel"
  },
  {
    "label": "FVirtualTrackArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTrackArea"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FEditToolDragOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditToolDragOperation"
  },
  {
    "label": "FResizeSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResizeSection"
  },
  {
    "label": "FPreDragChannelData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreDragChannelData"
  },
  {
    "label": "FPreDragSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreDragSectionData"
  },
  {
    "label": "FMoveKeysAndSections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMoveKeysAndSections"
  },
  {
    "label": "FInitialRowIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialRowIndex"
  },
  {
    "label": "FDuplicateKeysAndSections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDuplicateKeysAndSections"
  },
  {
    "label": "FManipulateSectionEasing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FManipulateSectionEasing"
  },
  {
    "label": "BeginTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTransaction( TSet<UMovieSceneSection*>& Sections, const FText& TransactionDesc )"
  },
  {
    "label": "EndTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTransaction()"
  },
  {
    "label": "GetSectionBoundaries()",
    "kind": "Method",
    "detail": "Function (TRange<FFrameNumber>)",
    "insertText": "GetSectionBoundaries(const UMovieSceneSection* Section)"
  },
  {
    "label": "FMoveKeysAndSections()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FMoveKeysAndSections(FSequencer& InSequencer, ESequencerMoveOperationType InMoveType)"
  },
  {
    "label": "GetMovementDeltaX()",
    "kind": "Method",
    "detail": "Function (TOptional<FFrameNumber>)",
    "insertText": "GetMovementDeltaX(FFrameTime MouseTime)"
  },
  {
    "label": "HandleSectionMovement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleSectionMovement(FFrameTime MouseTime, FVector2D VirtualMousePos, FVector2D LocalMousePos, TOptional<FFrameNumber> MaxDeltaX, FFrameNumber DesiredDeltaX)"
  },
  {
    "label": "HandleKeyMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleKeyMovement(TOptional<FFrameNumber> MaxDeltaX, FFrameNumber DesiredDeltaX)"
  },
  {
    "label": "HandleMarkedFrameMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMarkedFrameMovement(TOptional<FFrameNumber> MaxDeltaX, FFrameNumber DesiredDeltaX)"
  },
  {
    "label": "OnSequencerNodeTreeUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequencerNodeTreeUpdated()"
  },
  {
    "label": "ModifyNonSelectedSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyNonSelectedSections()"
  }
]