[
  {
    "label": "FRenderTimer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderTimer"
  },
  {
    "label": "FInputLatencyTimer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputLatencyTimer"
  },
  {
    "label": "FRenderTimer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / PlatformTime . h \" class FRenderTimer { public :)",
    "insertText": "FRenderTimer() : CurrentDeltaTime(0.0f) , CurrentTime(0.0f)"
  },
  {
    "label": "GetCurrentTime()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetCurrentTime()"
  },
  {
    "label": "FInputLatencyTimer()",
    "kind": "Method",
    "detail": "Function (CurrentDeltaTime = DeltaTime ; CurrentTime + = DeltaTime ; } protected : float CurrentDeltaTime ; float CurrentTime ; } ; bool GPauseRenderingRealtimeClock ; FRenderTimer GRenderingRealtimeClock ; struct FInputLatencyTimer {)",
    "insertText": "FInputLatencyTimer(float InUpdateFrequency) : UpdateFrequency(InUpdateFrequency)"
  },
  {
    "label": "GameThreadTick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GameThreadTick()"
  },
  {
    "label": "GetDeltaSeconds()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDeltaSeconds()"
  }
]