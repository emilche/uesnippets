[
  {
    "label": "FileSys",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileSys"
  },
  {
    "label": "ErrorLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ErrorLog"
  },
  {
    "label": "log_types",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "log_types"
  },
  {
    "label": "ReportFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ReportFlags"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (class FileSys ; typedef)",
    "insertText": "void(*StructuredLogHook)( void *context, const Error *e)"
  },
  {
    "label": "ErrorLog()",
    "kind": "Method",
    "detail": "Function (class ErrorLog { public : enum log_types { type_none,type_stdout,type_stderr,type_syslog } ;)",
    "insertText": "ErrorLog(): hook(NULL), context(NULL)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init()"
  },
  {
    "label": "ErrorLog()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ErrorLog(ErrorLog *from)"
  },
  {
    "label": "ErrorLog()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ErrorLog()"
  },
  {
    "label": "Abort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abort(const Error *e)"
  },
  {
    "label": "SysLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SysLog(const Error *e, int tagged, const char *et, const char *buf)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (enum ReportFlags { REPORT_NO_FLAGS = 0,REPORT_TAGGED = 1,REPORT_HOOKED = 2,REPORT_STDIO = 4,REPORT_ALL = 0 x3,REPORT_ABORT = 0 x7 } ; void)",
    "insertText": "Report(const Error *e)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(e, REPORT_ALL)"
  },
  {
    "label": "ReportAbort()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReportAbort(const Error *e)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(e, REPORT_ABORT)"
  },
  {
    "label": "ReportNoTag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReportNoTag(const Error *e)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(e, REPORT_HOOKED)"
  },
  {
    "label": "ReportNoHook()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReportNoHook(const Error *e)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(e, REPORT_TAGGED)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Report(const Error *e, int flags)"
  },
  {
    "label": "LogWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogWrite(const StrPtr &, int stdio = 0)"
  },
  {
    "label": "StdioWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StdioWrite(const StrPtr &, int err = 1)"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (offL_t)",
    "insertText": "Size()"
  },
  {
    "label": "Exists()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Exists()"
  },
  {
    "label": "SetLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLog(const char *file)"
  },
  {
    "label": "SetSyslog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSyslog()"
  },
  {
    "label": "UnsetSyslog()",
    "kind": "Method",
    "detail": "Function (logType = type_syslog ; } void)",
    "insertText": "UnsetSyslog()"
  },
  {
    "label": "UnsetLogType()",
    "kind": "Method",
    "detail": "Function (logType = type_stderr ; } void)",
    "insertText": "UnsetLogType()"
  },
  {
    "label": "SetTag()",
    "kind": "Method",
    "detail": "Function (logType = type_none ; } void)",
    "insertText": "SetTag(const char *tag)"
  },
  {
    "label": "EnableCritSec()",
    "kind": "Method",
    "detail": "Function (errorTag = tag ; } void)",
    "insertText": "EnableCritSec()"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rename(const char *file, Error *e)"
  },
  {
    "label": "SetStructuredLogHook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStructuredLogHook(void *ctx, StructuredLogHook hk)"
  }
]