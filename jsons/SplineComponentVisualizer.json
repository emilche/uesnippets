[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "SSplineGeneratorPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSplineGeneratorPanel"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "USplineComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USplineComponent"
  },
  {
    "label": "USplineMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USplineMetadata"
  },
  {
    "label": "FConvexVolume",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConvexVolume"
  },
  {
    "label": "FViewportClick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportClick"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "COMPONENTVISUALIZERS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COMPONENTVISUALIZERS_API"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "HSplineVisProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HSplineVisProxy"
  },
  {
    "label": "HSplineKeyProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HSplineKeyProxy"
  },
  {
    "label": "HSplineSegmentProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HSplineSegmentProxy"
  },
  {
    "label": "HSplineTangentHandleProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HSplineTangentHandleProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "COMPONENTVISUALIZERS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "COMPONENTVISUALIZERS_API"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ClearSelectedSegmentIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelectedSegmentIndex()"
  },
  {
    "label": "ClearSelectedTangentHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelectedTangentHandle()"
  },
  {
    "label": "FSplineComponentVisualizer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSplineComponentVisualizer()"
  },
  {
    "label": "HandleSelectFirstLastSplinePoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleSelectFirstLastSplinePoint(USplineComponent* InSplineComponent, bool bFirstPoint)"
  },
  {
    "label": "HandleSelectAllSplinePoints()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleSelectAllSplinePoints(USplineComponent* InSplineComponent)"
  },
  {
    "label": "OnSelectPrevNextSplinePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectPrevNextSplinePoint(bool bNextPoint, bool bAddToSelection)"
  },
  {
    "label": "SetCachedRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCachedRotation(const FQuat& NewRotation)"
  },
  {
    "label": "SelectSplinePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectSplinePoint(int32 SelectIndex, bool bAddToSelection)"
  },
  {
    "label": "TransformSelectedTangent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransformSelectedTangent(EPropertyChangeType::Type InPropertyChangeType, const FVector& InDeltaTranslate)"
  },
  {
    "label": "TransformSelectedKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TransformSelectedKeys(EPropertyChangeType::Type InPropertyChangeType, const FVector& InDeltaTranslate, const FRotator& InDeltaRotate = FRotator::ZeroRotator, const FVector& InDeltaScale = FVector::ZeroVector)"
  },
  {
    "label": "ChangeSelectionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeSelectionState(int32 Index, bool bIsCtrlHeld)"
  },
  {
    "label": "DuplicateKeyForAltDrag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateKeyForAltDrag(const FVector& InDrag)"
  },
  {
    "label": "UpdateDuplicateKeyForAltDrag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateDuplicateKeyForAltDrag(const FVector& InDrag)"
  },
  {
    "label": "SplitSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitSegment(const FVector& InWorldPos, int32 InSegmentIndex, bool bCopyFromSegmentBeginIndex = true)"
  },
  {
    "label": "UpdateSplitSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSplitSegment(const FVector& InDrag)"
  },
  {
    "label": "AddSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSegment(const FVector& InWorldPos, bool bAppend)"
  },
  {
    "label": "UpdateAddSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAddSegment(const FVector& InWorldPos)"
  },
  {
    "label": "ResetAllowDuplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAllowDuplication()"
  },
  {
    "label": "SnapKeysToLastSelectedAxisPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapKeysToLastSelectedAxisPosition(const EAxis::Type InAxis, TArray<int32> InSnapKeys)"
  },
  {
    "label": "SnapKeyToActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapKeyToActor(const AActor* InActor, const ESplineComponentSnapMode SnapMode)"
  },
  {
    "label": "SnapKeyToTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapKeyToTransform(const ESplineComponentSnapMode InSnapMode,\n\t\tconst FVector& InWorldPos,\n\t\tconst FVector& InWorldUpVector,\n\t\tconst FVector& InWorldForwardVector,\n\t\tconst FVector& InScale,\n\t\tconst USplineMetadata* InCopySplineMetadata = nullptr,\n\t\tconst int32 InCopySplineMetadataKey = 0)"
  },
  {
    "label": "SetSnapToActorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSnapToActorMode(const bool bInIsSnappingToActor, const ESplineComponentSnapMode InSnapMode = ESplineComponentSnapMode::Snap)"
  },
  {
    "label": "ResetTempModes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTempModes()"
  },
  {
    "label": "OnDeleteKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteKey()"
  },
  {
    "label": "OnDuplicateKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateKey()"
  },
  {
    "label": "OnAddKeyToSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddKeyToSegment()"
  },
  {
    "label": "OnSnapKeyToNearestSplinePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSnapKeyToNearestSplinePoint(ESplineComponentSnapMode InSnapMode)"
  },
  {
    "label": "OnSnapKeyToActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSnapKeyToActor(const ESplineComponentSnapMode InSnapMode)"
  },
  {
    "label": "OnSnapAllToAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSnapAllToAxis(EAxis::Type InAxis)"
  },
  {
    "label": "OnSnapSelectedToAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSnapSelectedToAxis(EAxis::Type InAxis)"
  },
  {
    "label": "OnStraightenKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStraightenKey(int32 Direction)"
  },
  {
    "label": "StraightenKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StraightenKey(int32 KeyToStraighten, int32 KeyToStraightenToward)"
  },
  {
    "label": "OnToggleSnapTangentAdjustment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSnapTangentAdjustment()"
  },
  {
    "label": "OnLockAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLockAxis(EAxis::Type InAxis)"
  },
  {
    "label": "OnResetToAutomaticTangent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToAutomaticTangent(EInterpCurveMode Mode)"
  },
  {
    "label": "OnSetKeyType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetKeyType(EInterpCurveMode Mode)"
  },
  {
    "label": "OnSetVisualizeRollAndScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetVisualizeRollAndScale()"
  },
  {
    "label": "OnSetDiscontinuousSpline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetDiscontinuousSpline()"
  },
  {
    "label": "OnToggleClosedLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleClosedLoop()"
  },
  {
    "label": "OnResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToDefault()"
  },
  {
    "label": "OnSelectFirstLastSplinePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectFirstLastSplinePoint(bool bFirstPoint)"
  },
  {
    "label": "OnSelectAllSplinePoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectAllSplinePoints()"
  },
  {
    "label": "SetEditedSplineComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditedSplineComponent(const USplineComponent* InSplineComponent)"
  },
  {
    "label": "CreateSplineGeneratorPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSplineGeneratorPanel()"
  },
  {
    "label": "OnDeselectedInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeselectedInEditor(TObjectPtr<USplineComponent> SplineComponent)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FSplineComponentVisualizer\")"
  }
]