[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "UActorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFactory"
  },
  {
    "label": "FViewportCursorLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportCursorLocation"
  },
  {
    "label": "FPositioningData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPositioningData"
  },
  {
    "label": "FSnappedPositioningData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSnappedPositioningData"
  },
  {
    "label": "FActorPositionTraceResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorPositionTraceResult"
  },
  {
    "label": "ResultState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ResultState"
  },
  {
    "label": "FActorPositioning",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorPositioning"
  },
  {
    "label": "TraceWorldForPositionWithDefault()",
    "kind": "Method",
    "detail": "Function (FActorPositionTraceResult)",
    "insertText": "TraceWorldForPositionWithDefault(const FViewportCursorLocation& Cursor, const FSceneView& View, const TArray<AActor*>* IgnoreActors = nullptr)"
  },
  {
    "label": "TraceWorldForPosition()",
    "kind": "Method",
    "detail": "Function (FActorPositionTraceResult)",
    "insertText": "TraceWorldForPosition(const FViewportCursorLocation& Cursor, const FSceneView& View, const TArray<AActor*>* IgnoreActors = nullptr)"
  },
  {
    "label": "TraceWorldForPosition()",
    "kind": "Method",
    "detail": "Function (FActorPositionTraceResult)",
    "insertText": "TraceWorldForPosition(const UWorld& InWorld, const FSceneView& InSceneView, const FVector& RayStart, const FVector& RayEnd, const TArray<AActor*>* IgnoreActors = nullptr)"
  },
  {
    "label": "GetCurrentViewportPlacementTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetCurrentViewportPlacementTransform(const AActor& Actor, bool bSnap = true, const FViewportCursorLocation* InCursor = nullptr)"
  },
  {
    "label": "GetActorPositionInFrontOfCamera()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetActorPositionInFrontOfCamera(const AActor& InActor, const FVector& InCameraOrigin, const FVector& InCameraDirection)"
  },
  {
    "label": "GetSnappedSurfaceAlignedTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetSnappedSurfaceAlignedTransform(const FSnappedPositioningData& PositioningData)"
  },
  {
    "label": "GetSurfaceAlignedTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetSurfaceAlignedTransform(const FPositioningData& PositioningData)"
  }
]