[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Factory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Factory"
  },
  {
    "label": "Ptr()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_FACTORY_H # define MATERIALX_FACTORY_H # include<MaterialXCore / Library . h> MATERIALX_NAMESPACE_BEGIN template<class T> class Factory { public : using Ptr = shared_ptr<T> ; using CreatorFunction =)",
    "insertText": "Ptr(*)()"
  },
  {
    "label": "registerClass()",
    "kind": "Method",
    "detail": "Function (using CreatorMap = std::unordered_map<string,CreatorFunction> ; void)",
    "insertText": "registerClass(const string& typeName, CreatorFunction f)"
  },
  {
    "label": "classRegistered()",
    "kind": "Method",
    "detail": "Function (_creatorMap [ ] = f ; } bool)",
    "insertText": "classRegistered(const string& typeName)"
  },
  {
    "label": "unregisterClass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "unregisterClass(const string& typeName)"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (auto it = _creatorMap .)",
    "insertText": "find(typeName)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (_creatorMap .)",
    "insertText": "erase(it)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (} } Ptr)",
    "insertText": "create(const string& typeName)"
  }
]