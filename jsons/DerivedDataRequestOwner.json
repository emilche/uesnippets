[
  {
    "label": "TUniqueFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniqueFunction"
  },
  {
    "label": "FRequestBarrier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestBarrier"
  },
  {
    "label": "IRequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRequest"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRequestOwner"
  },
  {
    "label": "FRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestOwner"
  },
  {
    "label": "FDeleteOwner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeleteOwner"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / EnumClassFlags . h \" # include \" Templates / Invoke . h \" # include \" Templates / RefCounting . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" # define template<FuncType> class TUniqueFunction ; namespace UE::DerivedData { class FRequestBarrier ; } namespace UE::DerivedData { class IRequest ; } namespace UE::DerivedData { enum class EPriority : uint8 ; } namespace UE::DerivedData { enum class ERequestBarrierFlags : uint32 { None = 0,Priority = 1<<0,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ERequestBarrierFlags)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (class IRequestOwner { public : void)",
    "insertText": "Begin(IRequest* Request)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<IRequest>)",
    "insertText": "End(IRequest* Request)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (template<CallbackType,. . . CallbackArgTypes> TRefCountPtr<IRequest>)",
    "insertText": "End(IRequest* Request, CallbackType&& Callback, CallbackArgTypes&&... CallbackArgs)"
  },
  {
    "label": "BeginBarrier()",
    "kind": "Method",
    "detail": "Function (UE_INTERNAL void)",
    "insertText": "BeginBarrier(const FRequestBarrier& Barrier)"
  },
  {
    "label": "EndBarrier()",
    "kind": "Method",
    "detail": "Function (UE_INTERNAL void)",
    "insertText": "EndBarrier(const FRequestBarrier& Barrier)"
  },
  {
    "label": "GetPriority()",
    "kind": "Method",
    "detail": "Function (EPriority)",
    "insertText": "GetPriority()"
  },
  {
    "label": "IsCanceled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCanceled()"
  },
  {
    "label": "LaunchTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchTask(const TCHAR* DebugName, TUniqueFunction<void ()>&& TaskBody)"
  },
  {
    "label": "FRequestOwner()",
    "kind": "Method",
    "detail": "Function (} ; class FRequestOwner { public :)",
    "insertText": "FRequestOwner(EPriority Priority)"
  },
  {
    "label": "FRequestOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRequestOwner(FRequestOwner&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRequestOwner&)",
    "insertText": "operator(FRequestOwner&&)"
  },
  {
    "label": "FRequestOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRequestOwner(const FRequestOwner&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRequestOwner&)",
    "insertText": "operator(const FRequestOwner&)"
  },
  {
    "label": "KeepAlive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KeepAlive()"
  },
  {
    "label": "SetPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPriority(EPriority Priority)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Wait()"
  },
  {
    "label": "Poll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Poll()"
  },
  {
    "label": "LaunchTask()",
    "kind": "Method",
    "detail": "Function (Owner ->)",
    "insertText": "LaunchTask(DebugName, MoveTemp(TaskBody))"
  },
  {
    "label": "IRequestOwner()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "IRequestOwner()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Destroy(IRequestOwner& SharedOwner)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FDeleteOwner { void)",
    "insertText": "operator()(IRequestOwner* O)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(*O)"
  },
  {
    "label": "FRequestBarrier()",
    "kind": "Method",
    "detail": "Function (} } } ; TUniquePtr<IRequestOwner,FDeleteOwner> Owner ; } ; class FRequestBarrier { public :)",
    "insertText": "FRequestBarrier(IRequestOwner& Owner, ERequestBarrierFlags Flags = ERequestBarrierFlags::None)"
  },
  {
    "label": "FRequestBarrier()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRequestBarrier()"
  },
  {
    "label": "FRequestBarrier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRequestBarrier(const FRequestBarrier&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FRequestBarrier&)",
    "insertText": "operator(const FRequestBarrier&)"
  },
  {
    "label": "GetFlags()",
    "kind": "Method",
    "detail": "Function (UE_INTERNAL ERequestBarrierFlags)",
    "insertText": "GetFlags()"
  },
  {
    "label": "Barrier()",
    "kind": "Method",
    "detail": "Function (FRequestBarrier)",
    "insertText": "Barrier(*this, ERequestBarrierFlags::Priority)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<IRequest> RequestRef =)",
    "insertText": "End(Request)"
  },
  {
    "label": "Invoke()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invoke(Forward<CallbackType>(Callback), Forward<CallbackArgTypes>(CallbackArgs)...)"
  }
]