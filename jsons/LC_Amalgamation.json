[
  {
    "label": "FileAttributeCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileAttributeCache"
  },
  {
    "label": "IsPartOfAmalgamation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPartOfAmalgamation(const char* normalizedObjPath)"
  },
  {
    "label": "IsPartOfAmalgamation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPartOfAmalgamation(const wchar_t* normalizedObjPath)"
  },
  {
    "label": "CreateObjPart()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "CreateObjPart(const std::wstring& normalizedFilename)"
  },
  {
    "label": "CreateObjPath()",
    "kind": "Method",
    "detail": "Function (std::wstring)",
    "insertText": "CreateObjPath(const std::wstring& normalizedAmalgamatedObjPath, const std::wstring& objPart)"
  },
  {
    "label": "SplitAmalgamatedCompilands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitAmalgamatedCompilands(\n\t\tunsigned int splitAmalgamatedFilesThreshold,\n\t\tsymbols::CompilandDB* compilandDb,\n\t\tsymbols::Compiland* compiland,\n\t\tconst types::vector<std::wstring>& includeFiles,\n\t\tconst wchar_t* diaCompilandPath,\n\t\tconst std::wstring& compilandPath,\n\t\tFileAttributeCache& fileCache,\n\t\tbool generateLogs,\n\t\tsymbols::TimeStamp moduleLastModificationTime)"
  },
  {
    "label": "ReadAndCompareDatabase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadAndCompareDatabase(const symbols::ObjPath& objPath, const std::wstring& compilerPath, const symbols::Compiland* compiland, const std::wstring& additionalCompilerOptions)"
  },
  {
    "label": "WriteDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteDatabase(const symbols::ObjPath& objPath, const std::wstring& compilerPath, const symbols::Compiland* compiland, const std::wstring& additionalCompilerOptions)"
  },
  {
    "label": "DeleteDatabase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteDatabase(const symbols::ObjPath& objPath)"
  }
]