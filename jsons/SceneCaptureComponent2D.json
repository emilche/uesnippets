[
  {
    "label": "ISceneViewExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneViewExtension"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "USceneCaptureComponent2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneCaptureComponent2D"
  },
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "ESceneCaptureCompositeMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESceneCaptureCompositeMode"
  },
  {
    "label": "FPostProcessSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPostProcessSettings"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "UDrawFrustumComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDrawFrustumComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ScriptInterface . h \" # include \" Engine / BlendableInterface . h \" # include \" Camera / CameraTypes . h \" # include \" Components / SceneCaptureComponent . h \" # include \" SceneCaptureComponent2D . generated . h \" class ISceneViewExtension ; class FSceneInterface ;)",
    "insertText": "UCLASS(hidecategories=(Collision, Object, Physics, SceneComponent), ClassGroup=Rendering, editinlinenew, meta=(BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=Projection, meta=(DisplayName = \"Projection Type\"))"
  },
  {
    "label": "ShouldRenderInMainRenderer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderInMainRenderer()"
  },
  {
    "label": "ShouldRenderWithMainViewResolution()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldRenderWithMainViewResolution()"
  },
  {
    "label": "ShouldRenderWithMainViewFamily()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldRenderWithMainViewFamily()"
  },
  {
    "label": "ShouldRenderWithMainViewCamera()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldRenderWithMainViewCamera()"
  },
  {
    "label": "OnComponentDestroyed()",
    "kind": "Method",
    "detail": "Function (} TArray<TWeakPtr<ISceneViewExtension,ESPMode::ThreadSafe>> SceneViewExtensions ; int32 TileID = 0 ; const FSceneViewFamily* MainViewFamily = nullptr ; void)",
    "insertText": "OnComponentDestroyed(bool bDestroyingHierarchy)"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "RequiresGameThreadEndOfFrameUpdates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresGameThreadEndOfFrameUpdates()"
  },
  {
    "label": "ResetOrthographicTilingCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetOrthographicTilingCounter()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "SetCameraView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCameraView(const FMinimalViewInfo& DesiredView)"
  },
  {
    "label": "GetCameraView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCameraView(float DeltaTime, FMinimalViewInfo& OutDesiredView)"
  },
  {
    "label": "AddBlendable()",
    "kind": "Method",
    "detail": "Function (PostProcessSettings .)",
    "insertText": "AddBlendable(InBlendableObject, InWeight)"
  },
  {
    "label": "RemoveBlendable()",
    "kind": "Method",
    "detail": "Function (PostProcessSettings .)",
    "insertText": "RemoveBlendable(InBlendableObject)"
  },
  {
    "label": "CaptureSceneDeferred()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CaptureSceneDeferred()"
  },
  {
    "label": "UpdateContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateContent()"
  },
  {
    "label": "UpdateSceneCaptureContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSceneCaptureContents(FSceneInterface* Scene)"
  },
  {
    "label": "GetEnableOrthographicTiling()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnableOrthographicTiling()"
  },
  {
    "label": "GetNumXTiles()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumXTiles()"
  },
  {
    "label": "GetNumYTiles()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumYTiles()"
  },
  {
    "label": "Is2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Is2D()"
  }
]