[
  {
    "label": "FPropertyProxyArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyProxyArchive"
  },
  {
    "label": "FPropertyProxyArchive()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" Templates / Casts . h \" # include \" UObject / UnrealType . h \" # include \" UObject / FieldPath . h \" # include \" Serialization / ArchiveProxy . h \" class FPropertyProxyArchive : public FArchiveProxy { public : UStruct::FUnresolvedScriptPropertiesArray UnresolvedProperties ; int32& BytecodeIndex ; UStruct* Container ;)",
    "insertText": "FPropertyProxyArchive(FArchive& InInnerArchive, int32& InBytecodeIndex, UStruct* InContainer) : FArchiveProxy(InInnerArchive) , BytecodeIndex(InBytecodeIndex) , Container(InContainer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ArIsFilterEditorOnly = InnerArchive . ArIsFilterEditorOnly ; } FArchive&)",
    "insertText": "operator(FField*& Value)"
  },
  {
    "label": "PropertyPath()",
    "kind": "Method",
    "detail": "Function (InnerArchive<<Value ; } TFieldPath<FField>)",
    "insertText": "PropertyPath(Value)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (* this<<PropertyPath ;)",
    "insertText": "if(IsLoading())"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (Value = PropertyPath .)",
    "insertText": "Get(Container)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (UnresolvedProperties .)",
    "insertText": "Add(TPair<TFieldPath<FField>, int32>(PropertyPath, BytecodeIndex))"
  }
]