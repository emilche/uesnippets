[
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "SGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNode"
  },
  {
    "label": "SGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPin"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGraphPanelNodeFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphPanelNodeFactory"
  },
  {
    "label": "SGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNode"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FGraphPanelPinFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphPanelPinFactory"
  },
  {
    "label": "SGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPin"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "FGraphPanelPinConnectionFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphPanelPinConnectionFactory"
  },
  {
    "label": "FConnectionDrawingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConnectionDrawingPolicy"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FEdGraphUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdGraphUtilities"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FNodeVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeVisitor"
  },
  {
    "label": "FNodeFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNodeFactory"
  },
  {
    "label": "FEdGraphUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdGraphUtilities"
  },
  {
    "label": "FWeakGraphPinPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeakGraphPinPtr"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "RegisterVisualNodeFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterVisualNodeFactory(TSharedPtr<FGraphPanelNodeFactory> NewFactory)"
  },
  {
    "label": "UnregisterVisualNodeFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterVisualNodeFactory(TSharedPtr<FGraphPanelNodeFactory> OldFactory)"
  },
  {
    "label": "RegisterVisualPinFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterVisualPinFactory(TSharedPtr<FGraphPanelPinFactory> NewFactory)"
  },
  {
    "label": "UnregisterVisualPinFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterVisualPinFactory(TSharedPtr<FGraphPanelPinFactory> OldFactory)"
  },
  {
    "label": "RegisterVisualPinConnectionFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterVisualPinConnectionFactory(TSharedPtr<FGraphPanelPinConnectionFactory> NewFactory)"
  },
  {
    "label": "UnregisterVisualPinConnectionFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterVisualPinConnectionFactory(TSharedPtr<FGraphPanelPinConnectionFactory> OldFactory)"
  },
  {
    "label": "PostProcessPastedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostProcessPastedNodes(TSet<class UEdGraphNode*>& SpawnedNodes)"
  },
  {
    "label": "CloneAndMergeGraphIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloneAndMergeGraphIn(UEdGraph* MergeTarget, UEdGraph* SourceGraph, FCompilerResultsLog& MessageLog, bool bRequireSchemaMatch, bool bInIsCompiling = false, TArray<UEdGraphNode*>* OutClonedNodes = NULL)"
  },
  {
    "label": "MergeChildrenGraphsIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeChildrenGraphsIn(UEdGraph* MergeTarget, UEdGraph* ParentGraph, bool bRequireSchemaMatch, bool bInIsCompiling = false, FCompilerResultsLog* MessageLog = nullptr)"
  },
  {
    "label": "RenameGraphCloseToName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameGraphCloseToName(UEdGraph* Graph, const FString& BaseName, int32 StartIndex = 1)"
  },
  {
    "label": "RenameGraphToNameOrCloseToName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameGraphToNameOrCloseToName(UEdGraph* Graph, const FString& DesiredName)"
  },
  {
    "label": "ExportNodesToText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportNodesToText(TSet<UObject*> NodesToExport, /*out*/ FString& ExportedText)"
  },
  {
    "label": "ImportNodesFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportNodesFromText(UEdGraph* DestinationGraph, const FString& TextToImport, /*out*/ TSet<UEdGraphNode*>& ImportedNodeSet)"
  },
  {
    "label": "CanImportNodesFromText()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanImportNodesFromText(const UEdGraph* DestinationGraph, const FString& TextToImport)"
  },
  {
    "label": "CalculateApproximateNodeBoundaries()",
    "kind": "Method",
    "detail": "Function (FIntRect)",
    "insertText": "CalculateApproximateNodeBoundaries(const TArray<UEdGraphNode*>& Nodes)"
  },
  {
    "label": "CopyCommonState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyCommonState(UEdGraphNode* OldNode, UEdGraphNode* NewNode)"
  },
  {
    "label": "TraverseNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraverseNodes(UEdGraphNode* Node)"
  },
  {
    "label": "IsSetParam()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSetParam(const UFunction* Function, const FName ParameterName)"
  },
  {
    "label": "IsMapParam()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMapParam(const UFunction* Function, const FName ParameterName)"
  },
  {
    "label": "IsArrayDependentParam()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsArrayDependentParam(const UFunction* Function, const FName ParameterName )"
  },
  {
    "label": "IsDynamicContainerParam()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDynamicContainerParam(const UFunction* Function, const FName ParameterName)"
  },
  {
    "label": "GetPinConnectionMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinConnectionMap(const UEdGraphNode* Node, TMap<FString, TSet<UEdGraphPin*>>& OutPinConnections)"
  },
  {
    "label": "ReconnectPinMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReconnectPinMap(UEdGraphNode* Node, const TMap<FString, TSet<UEdGraphPin*>>& PinConnections)"
  },
  {
    "label": "CopyPinDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPinDefaults(const UEdGraphNode* NodeFrom, UEdGraphNode* NodeTo)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Get()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Get()"
  }
]