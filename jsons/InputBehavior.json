[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInputCaptureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputCaptureData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UInputBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputBehavior"
  },
  {
    "label": "FInputCaptureRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputCaptureRequest"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInputCaptureUpdate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputCaptureUpdate"
  },
  {
    "label": "FInputCapturePriority",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputCapturePriority"
  },
  {
    "label": "UInputBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputBehavior"
  },
  {
    "label": "FInputCaptureRequest()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCaptureRequest(EInputCaptureRequestType::Begin, behavior, whichSide, hitDepth)"
  },
  {
    "label": "FInputCaptureUpdate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCaptureUpdate(EInputCaptureState::Begin, SourceBehavior, WhichSide, CustomData)"
  },
  {
    "label": "FInputCaptureUpdate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCaptureUpdate(EInputCaptureState::Continue, nullptr, EInputCaptureSide::Any)"
  },
  {
    "label": "FInputCaptureUpdate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCaptureUpdate(EInputCaptureState::End, nullptr, EInputCaptureSide::Any)"
  },
  {
    "label": "FInputCaptureUpdate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCaptureUpdate(EInputCaptureState::Ignore, nullptr, EInputCaptureSide::Any)"
  },
  {
    "label": "FInputCapturePriority()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCapturePriority(Priority + DeltaAmount)"
  },
  {
    "label": "FInputCapturePriority()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FInputCapturePriority(Priority - DeltaAmount)"
  },
  {
    "label": "UInputBehavior()",
    "kind": "Method",
    "detail": "Function (INTERACTIVETOOLSFRAMEWORK_API)",
    "insertText": "UInputBehavior()"
  },
  {
    "label": "GetPriority()",
    "kind": "Method",
    "detail": "Function (FInputCapturePriority)",
    "insertText": "GetPriority()"
  },
  {
    "label": "SetDefaultPriority()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultPriority(const FInputCapturePriority& Priority)"
  },
  {
    "label": "GetSupportedDevices()",
    "kind": "Method",
    "detail": "Function (EInputDevices)",
    "insertText": "GetSupportedDevices()"
  },
  {
    "label": "WantsCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureRequest)",
    "insertText": "WantsCapture(const FInputDeviceState& InputState)"
  },
  {
    "label": "BeginCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "BeginCapture(const FInputDeviceState& InputState, EInputCaptureSide eSide)"
  },
  {
    "label": "UpdateCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "UpdateCapture(const FInputDeviceState& InputState, const FInputCaptureData& CaptureData)"
  },
  {
    "label": "ForceEndCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceEndCapture(const FInputCaptureData& CaptureData)"
  },
  {
    "label": "WantsHoverEvents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WantsHoverEvents()"
  },
  {
    "label": "WantsHoverCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureRequest)",
    "insertText": "WantsHoverCapture(const FInputDeviceState& InputState)"
  },
  {
    "label": "BeginHoverCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "BeginHoverCapture(const FInputDeviceState& InputState, EInputCaptureSide eSide)"
  },
  {
    "label": "UpdateHoverCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "UpdateHoverCapture(const FInputDeviceState& InputState)"
  },
  {
    "label": "EndHoverCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndHoverCapture()"
  }
]