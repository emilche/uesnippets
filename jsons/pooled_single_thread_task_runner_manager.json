[
  {
    "label": "TaskTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskTraits"
  },
  {
    "label": "WorkerThreadObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkerThreadObserver"
  },
  {
    "label": "SingleThreadTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SingleThreadTaskRunner"
  },
  {
    "label": "DelayedTaskManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DelayedTaskManager"
  },
  {
    "label": "WorkerThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkerThread"
  },
  {
    "label": "TaskTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskTracker"
  },
  {
    "label": "WorkerThreadDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorkerThreadDelegate"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "PooledSingleThreadTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PooledSingleThreadTaskRunner"
  },
  {
    "label": "ContinueOnShutdown",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ContinueOnShutdown"
  },
  {
    "label": "PooledSingleThreadTaskRunnerManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PooledSingleThreadTaskRunnerManager(TrackedRef<TaskTracker> task_tracker,\n                                      DelayedTaskManager* delayed_task_manager)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(scoped_refptr<SingleThreadTaskRunner> io_thread_task_runner,\n             WorkerThreadObserver* worker_thread_observer = nullptr)"
  },
  {
    "label": "DidUpdateCanRunPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DidUpdateCanRunPolicy()"
  },
  {
    "label": "CreateSingleThreadTaskRunner()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<SingleThreadTaskRunner>)",
    "insertText": "CreateSingleThreadTaskRunner(\n      const TaskTraits& traits,\n      SingleThreadTaskRunnerThreadMode thread_mode)"
  },
  {
    "label": "CreateCOMSTATaskRunner()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<SingleThreadTaskRunner>)",
    "insertText": "CreateCOMSTATaskRunner(\n      const TaskTraits& traits,\n      SingleThreadTaskRunnerThreadMode thread_mode)"
  },
  {
    "label": "JoinForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JoinForTesting()"
  },
  {
    "label": "TraitsToContinueOnShutdown()",
    "kind": "Method",
    "detail": "Function (ContinueOnShutdown)",
    "insertText": "TraitsToContinueOnShutdown(\n      const TaskTraits& traits)"
  },
  {
    "label": "CreateTaskRunnerImpl()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<PooledSingleThreadTaskRunner>)",
    "insertText": "CreateTaskRunnerImpl(\n      const TaskTraits& traits,\n      SingleThreadTaskRunnerThreadMode thread_mode)"
  },
  {
    "label": "CreateWorkerThreadDelegate()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<WorkerThreadDelegate>)",
    "insertText": "CreateWorkerThreadDelegate(\n      const std::string& name,\n      int id,\n      SingleThreadTaskRunnerThreadMode thread_mode)"
  },
  {
    "label": "UnregisterWorkerThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterWorkerThread(WorkerThread* worker)"
  },
  {
    "label": "ReleaseSharedWorkerThreads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSharedWorkerThreads()"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (workers_)",
    "insertText": "GUARDED_BY(lock_)"
  }
]