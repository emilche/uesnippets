[
  {
    "label": "FMetalBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalBuffer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMetalDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDevice"
  },
  {
    "label": "Block()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MetalRHIPrivate . h \" # include \" HAL / LowLevelMemTracker . h \" # include \" Apple / AppleLLM . h \" class FMetalBuffer ; typedef TSharedPtr<FMetalBuffer,ESPMode::ThreadSafe> FMetalBufferPtr ; @ interface FMetalDeallocHandler : FApplePlatformObject<NSObject> { dispatch_block_t)",
    "insertText": "Block(instancetype)initWithBlock:(dispatch_block_t)"
  },
  {
    "label": "LLM_SCOPE_METAL()",
    "kind": "Method",
    "detail": "Function (@ end # if ENABLE_LOW_LEVEL_MEM_TRACKER # define)",
    "insertText": "LLM_SCOPE_METAL(Tag) LLM_SCOPE((ELLMTag)Tag) #define LLM_PLATFORM_SCOPE_METAL(Tag) LLM_PLATFORM_SCOPE((ELLMTag)Tag)"
  },
  {
    "label": "Buffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Buffers(LLM_TAG_TYPE)"
  },
  {
    "label": "Initialise()",
    "kind": "Method",
    "detail": "Function (namespace MetalLLM { void)",
    "insertText": "Initialise()"
  },
  {
    "label": "LLM_SCOPE_METAL()",
    "kind": "Method",
    "detail": "Function (} # else # define)",
    "insertText": "LLM_SCOPE_METAL(...) #define LLM_PLATFORM_SCOPE_METAL(...)"
  },
  {
    "label": "LogAllocTexture()",
    "kind": "Method",
    "detail": "Function (namespace MetalLLM { void)",
    "insertText": "LogAllocTexture(FMetalDevice& Device, MTL::TextureDescriptor* Desc, MTL::Texture* Texture)"
  },
  {
    "label": "LogAllocBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAllocBuffer(FMetalBuffer* Buffer)"
  },
  {
    "label": "LogAllocBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAllocBuffer(FMetalBufferPtr Buffer)"
  },
  {
    "label": "LogAllocBufferNative()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAllocBufferNative(MTL::Buffer* Buffer)"
  },
  {
    "label": "LogAllocHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAllocHeap(MTL::Heap* Heap)"
  },
  {
    "label": "LogAliasTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAliasTexture(MTL::Texture* Texture)"
  }
]