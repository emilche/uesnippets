[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "IPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCell"
  },
  {
    "label": "IPropertyTableCellPresenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCellPresenter"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FCustomFontColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCustomFontColumn"
  },
  {
    "label": "FCustomFontColumn()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" Containers / Array . h \" # include \" UserInterface / PropertyTable / PropertyTableConstants . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / PlatformCrt . h \" # include \" IPropertyTableCustomColumn . h \" # include \" Styling / AppStyle . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FProperty ; class IPropertyTableCell ; class IPropertyTableCellPresenter ; class IPropertyTableColumn ; class IPropertyTableUtilities ; class SWidget ; class FCustomFontColumn : public IPropertyTableCustomColumn { public :)",
    "insertText": "FCustomFontColumn(FSlateFontInfo InFont = FAppStyle::GetFontStyle( PropertyTableConstants::NormalFontStyle ), FOnClicked InOnChangeFontButtonClicked = NULL, FOnInt32ValueCommitted InOnFontSizeValueCommitted = NULL) : Font(InFont) , OnChangeFontButtonClicked(InOnChangeFontButtonClicked) , OnFontSizeValueCommitted(InOnFontSizeValueCommitted)"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Supports(const TSharedRef< IPropertyTableColumn >& Column, const TSharedRef< IPropertyTableUtilities >& Utilities)"
  },
  {
    "label": "CreateColumnLabel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateColumnLabel(const TSharedRef< IPropertyTableColumn >& Column, const TSharedRef< IPropertyTableUtilities >& Utilities, const FName& Style)"
  },
  {
    "label": "CreateCellPresenter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyTableCellPresenter>)",
    "insertText": "CreateCellPresenter(const TSharedRef< IPropertyTableCell >& Cell, const TSharedRef< IPropertyTableUtilities >& Utilities, const FName& Style)"
  },
  {
    "label": "SetFont()",
    "kind": "Method",
    "detail": "Function (private : FSlateFontInfo Font ; TArray<FProperty*> SupportedProperties ; FOnClicked OnChangeFontButtonClicked ; FOnInt32ValueCommitted OnFontSizeValueCommitted ; public : void)",
    "insertText": "SetFont(FSlateFontInfo InFont)"
  },
  {
    "label": "AddSupportedProperty()",
    "kind": "Method",
    "detail": "Function (Font = InFont ; } void)",
    "insertText": "AddSupportedProperty(FProperty* Property)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (SupportedProperties .)",
    "insertText": "Add(Property)"
  },
  {
    "label": "SetOnChangeFontButtonClicked()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetOnChangeFontButtonClicked(FOnClicked InOnClicked)"
  },
  {
    "label": "SetOnFontSizeValueCommitted()",
    "kind": "Method",
    "detail": "Function (OnChangeFontButtonClicked = InOnClicked ; } void)",
    "insertText": "SetOnFontSizeValueCommitted(FOnInt32ValueCommitted InOnFontSizeValueCommitted)"
  }
]