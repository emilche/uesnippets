[
  {
    "label": "FMetalStateCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalStateCache"
  },
  {
    "label": "FMetalDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDevice"
  },
  {
    "label": "FMetalSuballocatedUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalSuballocatedUniformBuffer"
  },
  {
    "label": "FMetalSuballocatedUniformBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # import \" MetalThirdParty . h \" # include \" MetalBuffer . h \" # include \" RHIResources . h \" # define METAL_UNIFORM_BUFFER_VALIDATION ! UE_BUILD_SHIPPING class FMetalStateCache ; class FMetalDevice ; class FMetalSuballocatedUniformBuffer : public FRHIUniformBuffer { class FMetalStateCache ; public : uint32 LastFrameUpdated ; FMetalBufferPtr BackingBuffer ; void* Shadow ; private : FMetalDevice& Device ; # if METAL_UNIFORM_BUFFER_VALIDATION EUniformBufferValidation Validation ; # endif public :)",
    "insertText": "FMetalSuballocatedUniformBuffer(FMetalDevice& Device, const void* Contents, const FRHIUniformBufferLayout* Layout, EUniformBufferUsage Usage, EUniformBufferValidation Validation)"
  },
  {
    "label": "FMetalSuballocatedUniformBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMetalSuballocatedUniformBuffer()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const void* Contents)"
  },
  {
    "label": "PrepareToBind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareToBind()"
  },
  {
    "label": "CopyResourceTable()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CopyResourceTable(const void* Contents, TArray<TRefCountPtr<FRHIResource> >& OutResourceTable)"
  },
  {
    "label": "PushToGPUBacking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushToGPUBacking(const void* Contents)"
  }
]