[
  {
    "label": "UCharsetDetector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCharsetDetector"
  },
  {
    "label": "UCharsetMatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCharsetMatch"
  },
  {
    "label": "ucsdet_open()",
    "kind": "Method",
    "detail": "Function (# ifndef __UCSDET_H # define __UCSDET_H # include \" unicode / utypes . h \" # if ! UCONFIG_NO_CONVERSION # include \" unicode / localpointer . h \" # include \" unicode / uenum . h \" struct UCharsetDetector ; typedef struct UCharsetDetector UCharsetDetector ; struct UCharsetMatch ; typedef struct UCharsetMatch UCharsetMatch ; U_STABLE UCharsetDetector* U_EXPORT2)",
    "insertText": "ucsdet_open(UErrorCode *status)"
  },
  {
    "label": "ucsdet_close()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "ucsdet_close(UCharsetDetector *ucsd)"
  },
  {
    "label": "U_DEFINE_LOCAL_OPEN_POINTER()",
    "kind": "Method",
    "detail": "Function (# if U_NAMESPACE_BEGIN)",
    "insertText": "U_DEFINE_LOCAL_OPEN_POINTER(LocalUCharsetDetectorPointer, UCharsetDetector, ucsdet_close)"
  },
  {
    "label": "ucsdet_setText()",
    "kind": "Method",
    "detail": "Function (U_NAMESPACE_END # endif U_STABLE void U_EXPORT2)",
    "insertText": "ucsdet_setText(UCharsetDetector *ucsd, const char *textIn, int32_t len, UErrorCode *status)"
  },
  {
    "label": "ucsdet_setDeclaredEncoding()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "ucsdet_setDeclaredEncoding(UCharsetDetector *ucsd, const char *encoding, int32_t length, UErrorCode *status)"
  },
  {
    "label": "ucsdet_detect()",
    "kind": "Method",
    "detail": "Function (U_STABLE const UCharsetMatch* U_EXPORT2)",
    "insertText": "ucsdet_detect(UCharsetDetector *ucsd, UErrorCode *status)"
  },
  {
    "label": "ucsdet_detectAll()",
    "kind": "Method",
    "detail": "Function (U_STABLE const UCharsetMatch** U_EXPORT2)",
    "insertText": "ucsdet_detectAll(UCharsetDetector *ucsd, int32_t *matchesFound, UErrorCode *status)"
  },
  {
    "label": "ucsdet_getName()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ucsdet_getName(const UCharsetMatch *ucsm, UErrorCode *status)"
  },
  {
    "label": "ucsdet_getConfidence()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ucsdet_getConfidence(const UCharsetMatch *ucsm, UErrorCode *status)"
  },
  {
    "label": "ucsdet_getLanguage()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "ucsdet_getLanguage(const UCharsetMatch *ucsm, UErrorCode *status)"
  },
  {
    "label": "ucsdet_getUChars()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "ucsdet_getUChars(const UCharsetMatch *ucsm, UChar *buf, int32_t cap, UErrorCode *status)"
  },
  {
    "label": "ucsdet_getAllDetectableCharsets()",
    "kind": "Method",
    "detail": "Function (U_STABLE UEnumeration* U_EXPORT2)",
    "insertText": "ucsdet_getAllDetectableCharsets(const UCharsetDetector *ucsd, UErrorCode *status)"
  },
  {
    "label": "ucsdet_isInputFilterEnabled()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "ucsdet_isInputFilterEnabled(const UCharsetDetector *ucsd)"
  },
  {
    "label": "ucsdet_enableInputFilter()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "ucsdet_enableInputFilter(UCharsetDetector *ucsd, UBool filter)"
  },
  {
    "label": "ucsdet_getDetectableCharsets()",
    "kind": "Method",
    "detail": "Function (# ifndef U_INTERNAL UEnumeration* U_EXPORT2)",
    "insertText": "ucsdet_getDetectableCharsets(const UCharsetDetector *ucsd, UErrorCode *status)"
  },
  {
    "label": "ucsdet_setDetectableCharset()",
    "kind": "Method",
    "detail": "Function (U_INTERNAL void U_EXPORT2)",
    "insertText": "ucsdet_setDetectableCharset(UCharsetDetector *ucsd, const char *encoding, UBool enabled, UErrorCode *status)"
  }
]