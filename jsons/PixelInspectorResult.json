[
  {
    "label": "FFloat16Color",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFloat16Color"
  },
  {
    "label": "PixelInspectorResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PixelInspectorResult"
  },
  {
    "label": "DecodeFinalColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeFinalColor(TArray<FLinearColor> &BufferFinalColorValue, float InGamma, bool bHasAlphaChannel)"
  },
  {
    "label": "DecodeSceneColorBeforePostProcessing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeSceneColorBeforePostProcessing(TArray<FLinearColor> &BufferSceneColorValue)"
  },
  {
    "label": "DecodeDepth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeDepth(TArray<FLinearColor> &BufferDepthValue)"
  },
  {
    "label": "DecodeSceneColorBeforeToneMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeSceneColorBeforeToneMap(TArray<FLinearColor>& BufferSceneColorValue, bool bHasAlphaChannel)"
  },
  {
    "label": "DecodeBufferData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferData(TArray<FColor> &BufferAValue, TArray<FColor> &BufferBCDEValue, bool AllowStaticLighting)"
  },
  {
    "label": "DecodeBufferData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferData(TArray<FLinearColor> &BufferAValue, TArray<FColor> &BufferBCDEValue, bool AllowStaticLighting)"
  },
  {
    "label": "DecodeBufferData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferData(TArray<FFloat16Color> &BufferAValue, TArray<FFloat16Color> &BufferBCDEValue, bool AllowStaticLighting)"
  },
  {
    "label": "DecodeBufferA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferA(TArray<FColor> &BufferAValue)"
  },
  {
    "label": "DecodeBufferA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferA(TArray<FLinearColor> &BufferAValue)"
  },
  {
    "label": "DecodeBufferA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferA(TArray<FFloat16Color> &BufferAValue)"
  },
  {
    "label": "DecodeBufferBCDE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferBCDE(TArray<FColor> &BufferBCDEValue, bool AllowStaticLighting)"
  },
  {
    "label": "DecodeBufferBCDE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeBufferBCDE(TArray<FFloat16Color> &BufferBCDEValue, bool AllowStaticLighting)"
  },
  {
    "label": "ConvertLinearRGBAToFloat()",
    "kind": "Method",
    "detail": "Function (FVector4)",
    "insertText": "ConvertLinearRGBAToFloat(FColor LinearRGBColor)"
  },
  {
    "label": "ConvertLinearRGBToFloat()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertLinearRGBToFloat(FColor LinearRGBColor)"
  },
  {
    "label": "ConvertLinearRGBToFloat()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ConvertLinearRGBToFloat(uint8 Red, uint8 Green, uint8 Blue)"
  },
  {
    "label": "DecodeSubSurfaceColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "DecodeSubSurfaceColor(FVector EncodeColor)"
  },
  {
    "label": "DecodeNormalFromBuffer()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "DecodeNormalFromBuffer(FVector NormalEncoded)"
  },
  {
    "label": "DecodeShadingModel()",
    "kind": "Method",
    "detail": "Function (EMaterialShadingModel)",
    "insertText": "DecodeShadingModel(float InPackedChannel)"
  },
  {
    "label": "DecodeSelectiveOutputMask()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "DecodeSelectiveOutputMask(float InPackedChannel)"
  },
  {
    "label": "DecodeIndirectIrradiance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "DecodeIndirectIrradiance(float IndirectIrradiance)"
  },
  {
    "label": "OctahedronToUnitVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "OctahedronToUnitVector(FVector2D Oct)"
  },
  {
    "label": "DecodeCustomData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeCustomData(FVector4 InCustomData)"
  }
]