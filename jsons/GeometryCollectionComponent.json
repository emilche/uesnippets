[
  {
    "label": "FGeometryCollectionConstantData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionConstantData"
  },
  {
    "label": "FGeometryCollectionDynamicData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionDynamicData"
  },
  {
    "label": "FManagedArrayBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FManagedArrayBase"
  },
  {
    "label": "UGeometryCollectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGeometryCollectionComponent"
  },
  {
    "label": "UBoxComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBoxComponent"
  },
  {
    "label": "UGeometryCollectionCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGeometryCollectionCache"
  },
  {
    "label": "UChaosPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChaosPhysicalMaterial"
  },
  {
    "label": "AChaosSolverActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AChaosSolverActor"
  },
  {
    "label": "FGeometryCollectionEmbeddedExemplar",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionEmbeddedExemplar"
  },
  {
    "label": "UInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedStaticMeshComponent"
  },
  {
    "label": "FGeometryCollectionDecayDynamicFacade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionDecayDynamicFacade"
  },
  {
    "label": "FGeometryDynamicCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryDynamicCollection"
  },
  {
    "label": "FGeometryCollectionDecayContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionDecayContext"
  },
  {
    "label": "FGeometryCollectionSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionSection"
  },
  {
    "label": "FDamageCollector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDamageCollector"
  },
  {
    "label": "FPhysScene_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_Chaos"
  },
  {
    "label": "AGeometryCollectionISMPoolActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGeometryCollectionISMPoolActor"
  },
  {
    "label": "IGeometryCollectionExternalRenderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGeometryCollectionExternalRenderInterface"
  },
  {
    "label": "ESimulationInitializationState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESimulationInitializationState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "InElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InElementType"
  },
  {
    "label": "TManagedArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TManagedArray"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGeomComponentCacheParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeomComponentCacheParameters"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGeometryCollectionEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionEdit"
  },
  {
    "label": "FScopedColorEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedColorEdit"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FGeometryCollectionClusterRep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionClusterRep"
  },
  {
    "label": "FClusterState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterState"
  },
  {
    "label": "FGeometryCollectionActivatedCluster",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionActivatedCluster"
  },
  {
    "label": "FGeometryCollectionRepData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionRepData"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FGeometryCollectionRepStateData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionRepStateData"
  },
  {
    "label": "FReleasedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReleasedData"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FGeometryCollectionRepDynamicData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometryCollectionRepDynamicData"
  },
  {
    "label": "FClusterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterData"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FGCCollisionProfileScopedTransaction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGCCollisionProfileScopedTransaction"
  },
  {
    "label": "UGeometryCollectionComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGeometryCollectionComponent"
  },
  {
    "label": "FGeometryCollectionEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionEdit"
  },
  {
    "label": "FScopedColorEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedColorEdit"
  },
  {
    "label": "FGeometryCollectionCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionCommands"
  },
  {
    "label": "FGeometryCollectionSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionSceneProxy"
  },
  {
    "label": "FNaniteGeometryCollectionSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNaniteGeometryCollectionSceneProxy"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "ERadialImpulseFalloff",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERadialImpulseFalloff"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "FComponentSpaceTransforms",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentSpaceTransforms"
  },
  {
    "label": "FBrokenAndDecayedStates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBrokenAndDecayedStates"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGCCollisionProfileScopedTransaction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGCCollisionProfileScopedTransaction"
  },
  {
    "label": "GEOMETRYCOLLECTIONENGINE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GEOMETRYCOLLECTIONENGINE_API"
  },
  {
    "label": "FGeometryCollectionEdit()",
    "kind": "Method",
    "detail": "Function (GEOMETRYCOLLECTIONENGINE_API)",
    "insertText": "FGeometryCollectionEdit(UGeometryCollectionComponent* InComponent, GeometryCollection::EEditUpdate EditUpdate = GeometryCollection::EEditUpdate::RestPhysicsDynamic, bool bShapeIsUnchanged = false, bool bPropagateToAllMatchingComponents = true)"
  },
  {
    "label": "FScopedColorEdit()",
    "kind": "Method",
    "detail": "Function (GEOMETRYCOLLECTIONENGINE_API)",
    "insertText": "FScopedColorEdit(UGeometryCollectionComponent* InComponent, bool bForceUpdate = false)"
  },
  {
    "label": "SetShowBoneColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowBoneColors(bool ShowBoneColorsIn)"
  },
  {
    "label": "SetEnableBoneSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableBoneSelection(bool ShowSelectedBonesIn)"
  },
  {
    "label": "Sanitize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Sanitize()"
  },
  {
    "label": "SetSelectedBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedBones(const TArray<int32>& SelectedBonesIn)"
  },
  {
    "label": "AppendSelectedBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSelectedBones(const TArray<int32>& SelectedBonesIn)"
  },
  {
    "label": "ToggleSelectedBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleSelectedBones(const TArray<int32>& SelectedBonesIn, bool bAdd, bool bSnapToLevel = true)"
  },
  {
    "label": "AddSelectedBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSelectedBone(int32 BoneIndex)"
  },
  {
    "label": "ClearSelectedBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelectedBone(int32 BoneIndex)"
  },
  {
    "label": "ResetBoneSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBoneSelection()"
  },
  {
    "label": "SelectBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectBones(GeometryCollection::ESelectionMode SelectionMode)"
  },
  {
    "label": "FilterSelectionToLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterSelectionToLevel(bool bPreferLowestOnly = false)"
  },
  {
    "label": "SetHighlightedBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHighlightedBones(const TArray<int32>& HighlightedBonesIn, bool bHighlightChildren = false)"
  },
  {
    "label": "AddHighlightedBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHighlightedBone(int32 BoneIndex)"
  },
  {
    "label": "ResetHighlightedBones()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetHighlightedBones()"
  },
  {
    "label": "SetLevelViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelViewMode(int ViewLevel)"
  },
  {
    "label": "GetViewLevel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetViewLevel()"
  },
  {
    "label": "UpdateBoneColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBoneColors()"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "SetBroken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetBroken(int32 TransformIndex, int32 NumTransforms, bool bDisabled, const FVector& LinV, const FVector& AngVInRadiansPerSecond)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetData(const FClusterData& Data)"
  },
  {
    "label": "RemoveOutOfDateClusterData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveOutOfDateClusterData()"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "RegisterOnGeometryCollectionPropertyChanged()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterOnGeometryCollectionPropertyChanged(const FOnGeometryCollectionPropertyChanged& Delegate)"
  },
  {
    "label": "UnregisterOnGeometryCollectionPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterOnGeometryCollectionPropertyChanged(FDelegateHandle Handle)"
  },
  {
    "label": "ApplyExternalStrain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyExternalStrain(int32 ItemIndex, const FVector& Location, float Radius = 0, int32 PropagationDepth = 0, float PropagationFactor = 1, float Strain = 0)"
  },
  {
    "label": "ApplyInternalStrain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyInternalStrain(int32 ItemIndex, const FVector& Location, float Radius = 0, int32 PropagationDepth = 0, float PropagationFactor = 1, float Strain = 0)"
  },
  {
    "label": "CrumbleCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CrumbleCluster(int32 ItemIndex)"
  },
  {
    "label": "CrumbleActiveClusters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CrumbleActiveClusters()"
  },
  {
    "label": "SetAnchoredByIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnchoredByIndex(int32 Index, bool bAnchored)"
  },
  {
    "label": "SetAnchoredByBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnchoredByBox(FBox WorldSpaceBox, bool bAnchored, int32 MaxLevel = -1)"
  },
  {
    "label": "SetAnchoredByTransformedBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnchoredByTransformedBox(FBox Box, FTransform Transform, bool bAnchored, int32 MaxLevel = -1)"
  },
  {
    "label": "RemoveAllAnchors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnchors()"
  },
  {
    "label": "ApplyBreakingLinearVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBreakingLinearVelocity(int32 ItemIndex, const FVector& LinearVelocity)"
  },
  {
    "label": "ApplyBreakingAngularVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBreakingAngularVelocity(int32 ItemIndex, const FVector& AngularVelocity)"
  },
  {
    "label": "ApplyLinearVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLinearVelocity(int32 ItemIndex, const FVector& LinearVelocity)"
  },
  {
    "label": "ApplyAngularVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyAngularVelocity(int32 ItemIndex, const FVector& AngularVelocity)"
  },
  {
    "label": "GetInitialLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetInitialLevel(int32 ItemIndex)"
  },
  {
    "label": "SetLocalRestTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLocalRestTransforms(const TArray<FTransform>& Transforms, bool bOnlyLeaves)"
  },
  {
    "label": "GetMassAndExtents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMassAndExtents(int32 ItemIndex, float& OutMass, FBox& OutExtents)"
  },
  {
    "label": "SetRestCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestCollection(const UGeometryCollection * RestCollectionIn, bool bApplyAssetDefaults = true)"
  },
  {
    "label": "GetDebugInfo()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugInfo()"
  },
  {
    "label": "FGeometryCollectionEdit()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGeometryCollectionEdit(this, EditUpdate, bShapeIsUnchanged)"
  },
  {
    "label": "FScopedColorEdit()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FScopedColorEdit(this, bForceUpdate)"
  },
  {
    "label": "SelectEmbeddedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectEmbeddedGeometry()"
  },
  {
    "label": "SetEnableDamageFromCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableDamageFromCollision(bool bValue)"
  },
  {
    "label": "SetAbandonedParticleCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAbandonedParticleCollisionProfileName(FName CollisionProfile)"
  },
  {
    "label": "SetPerLevelCollisionProfileNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerLevelCollisionProfileNames(const TArray<FName>& ProfileNames)"
  },
  {
    "label": "SetPerParticleCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerParticleCollisionProfileName(const TArray<int32>& BoneIds, FName ProfileName)"
  },
  {
    "label": "SetPerParticleCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerParticleCollisionProfileName(const TSet<int32>& BoneIds, FName ProfileName)"
  },
  {
    "label": "SetParticleCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParticleCollisionProfileName(int32 BoneId, FName ProfileName, FGCCollisionProfileScopedTransaction& InProfileNameUpdateTransaction)"
  },
  {
    "label": "UpdatePerParticleCollisionProfilesNum()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePerParticleCollisionProfilesNum()"
  },
  {
    "label": "UpdateCachedBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedBounds()"
  },
  {
    "label": "ApplyAssetDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyAssetDefaults()"
  },
  {
    "label": "SetGravityGroupIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravityGroupIndex(int32 InGravityGroupIndex)"
  },
  {
    "label": "SetOneWayInteractionLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOneWayInteractionLevel(int32 InOneWayInteractionLevel)"
  },
  {
    "label": "SetDensityFromPhysicsMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDensityFromPhysicsMaterial(bool bInDensityFromPhysicsMaterial)"
  },
  {
    "label": "SetDamageModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamageModel(EDamageModelTypeEnum InDamageModel)"
  },
  {
    "label": "SetDamageThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamageThreshold(const TArray<float>& InDamageThreshold)"
  },
  {
    "label": "SetUseMaterialDamageModifiers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseMaterialDamageModifiers(bool bInUseMaterialDamageModifiers)"
  },
  {
    "label": "SetDamagePropagationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDamagePropagationData(const FGeometryCollectionDamagePropagationData& InDamagePropagationData)"
  },
  {
    "label": "EnableTransformSelectionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableTransformSelectionMode(bool bEnable)"
  },
  {
    "label": "RegisterAndInitializePhysicsProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAndInitializePhysicsProxy()"
  },
  {
    "label": "SetNotifyBreaks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyBreaks(bool bNewNotifyBreaks)"
  },
  {
    "label": "SetNotifyRemovals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyRemovals(bool bNewNotifyRemovals)"
  },
  {
    "label": "SetNotifyCrumblings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyCrumblings(bool bNewNotifyCrumblings, bool bNewCrumblingEventIncludesChildren = false)"
  },
  {
    "label": "SetNotifyGlobalBreaks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalBreaks(bool bNewNotifyGlobalBreaks)"
  },
  {
    "label": "SetNotifyGlobalCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalCollision(bool bNewNotifyGlobalCollisions)"
  },
  {
    "label": "SetNotifyGlobalRemovals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalRemovals(bool bNewNotifyGlobalRemovals)"
  },
  {
    "label": "SetNotifyGlobalCrumblings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotifyGlobalCrumblings(bool bNewNotifyGlobalCrumblings, bool bGlobalNewCrumblingEventIncludesChildren)"
  },
  {
    "label": "DispatchBreakEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchBreakEvent(const FChaosBreakEvent& Event)"
  },
  {
    "label": "DispatchRemovalEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchRemovalEvent(const FChaosRemovalEvent& Event)"
  },
  {
    "label": "DispatchCrumblingEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchCrumblingEvent(const FChaosCrumblingEvent& Event)"
  },
  {
    "label": "InitializeEmbeddedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeEmbeddedGeometry()"
  },
  {
    "label": "RefreshEmbeddedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshEmbeddedGeometry()"
  },
  {
    "label": "SetEmbeddedGeometrySelectable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEmbeddedGeometrySelectable(bool bSelectableIn)"
  },
  {
    "label": "ForceNativeRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceNativeRendering(bool bForce)"
  },
  {
    "label": "SetRestState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestState(TArray<FTransform>&& InRestTransforms)"
  },
  {
    "label": "ResetRestTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRestTransforms()"
  },
  {
    "label": "SetDynamicState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicState(const Chaos::EObjectStateType& NewDynamicState)"
  },
  {
    "label": "SetInitialTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialTransforms(const TArray<FTransform>& InitialTransforms)"
  },
  {
    "label": "SetInitialClusterBreaks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialClusterBreaks(const TArray<int32>& ReleaseIndices)"
  },
  {
    "label": "ComputeGlobalMatricesFromComponentSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ComputeGlobalMatricesFromComponentSpaceTransforms()"
  },
  {
    "label": "GetComponentSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (TArray<FTransform>)",
    "insertText": "GetComponentSpaceTransforms()"
  },
  {
    "label": "SetUseStaticMeshCollisionForTraces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseStaticMeshCollisionForTraces(bool bInUseStaticMeshCollisionForTraces)"
  },
  {
    "label": "ForceBrokenForCustomRenderer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceBrokenForCustomRenderer(bool bForceBroken)"
  },
  {
    "label": "SetRootProxyComponentSpaceTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootProxyComponentSpaceTransform(int32 Index, const FTransform& RootProxyTransform)"
  },
  {
    "label": "SetRootProxyLocalTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootProxyLocalTransform(int32 Index, const FTransform3f& RootProxyTransform)"
  },
  {
    "label": "ClearRootProxyLocalTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRootProxyLocalTransforms()"
  },
  {
    "label": "ReregisterAllCustomRenderers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReregisterAllCustomRenderers()"
  },
  {
    "label": "ReceivePhysicsCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivePhysicsCollision(const FChaosPhysicsCollisionInfo& CollisionInfo)"
  },
  {
    "label": "CheckFullyDecayed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckFullyDecayed()"
  },
  {
    "label": "ResetDynamicCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDynamicCollection()"
  },
  {
    "label": "GetInitializationCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInitializationCommands(TArray<FFieldSystemCommand>& CombinedCommmands)"
  },
  {
    "label": "DispatchFieldCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchFieldCommand(const FFieldSystemCommand& InCommand)"
  },
  {
    "label": "RegisterForEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterForEvents()"
  },
  {
    "label": "UpdateRBCollisionEventRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRBCollisionEventRegistration()"
  },
  {
    "label": "UpdateGlobalCollisionEventRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGlobalCollisionEventRegistration()"
  },
  {
    "label": "UpdateGlobalRemovalEventRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGlobalRemovalEventRegistration()"
  },
  {
    "label": "OnRep_RepData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_RepData()"
  },
  {
    "label": "OnRep_RepStateData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_RepStateData()"
  },
  {
    "label": "OnRep_RepDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_RepDynamicData()"
  },
  {
    "label": "RequestUpdateRepData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateRepData()"
  },
  {
    "label": "UpdateRepData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRepData()"
  },
  {
    "label": "UpdateRepStateAndDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRepStateAndDynamicData()"
  },
  {
    "label": "ResetRepData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRepData()"
  },
  {
    "label": "ProcessRepData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRepData()"
  },
  {
    "label": "ProcessRepData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessRepData(float DeltaTime, float SimTime)"
  },
  {
    "label": "ProcessRepDataOnPT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRepDataOnPT()"
  },
  {
    "label": "ProcessRepStateDataOnPT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRepStateDataOnPT()"
  },
  {
    "label": "ProcessRepDynamicDataOnPT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessRepDynamicDataOnPT()"
  },
  {
    "label": "InitializeRemovalDynamicAttributesIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRemovalDynamicAttributesIfNeeded()"
  },
  {
    "label": "SendDynamicDataToSceneProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendDynamicDataToSceneProxy()"
  },
  {
    "label": "RestTransformsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestTransformsChanged()"
  },
  {
    "label": "SwitchRenderModels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchRenderModels(const AActor* Actor)"
  },
  {
    "label": "ClearEmbeddedGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearEmbeddedGeometry()"
  },
  {
    "label": "RegisterCustomRenderer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomRenderer()"
  },
  {
    "label": "UnregisterCustomRenderer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomRenderer()"
  },
  {
    "label": "RefreshCustomRenderer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCustomRenderer()"
  },
  {
    "label": "RefreshRootProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshRootProxies()"
  },
  {
    "label": "SetSolverActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSolverActor(AChaosSolverActor* InSolverActor)"
  },
  {
    "label": "IncrementSleepTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementSleepTimer(float DeltaTime)"
  },
  {
    "label": "IncrementBreakTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementBreakTimer(float DeltaTime)"
  },
  {
    "label": "UpdateDecay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDecay(int32 TransformIdx, float UpdatedDecay, bool UseClusterCrumbling, bool HasDynamicInternalClusterParent, FGeometryCollectionDecayContext& ContextInOut)"
  },
  {
    "label": "UpdateRenderSystemsIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRenderSystemsIfNeeded(bool bDynamicCollectionDirty)"
  },
  {
    "label": "UpdateNavigationDataIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNavigationDataIfNeeded(bool bDynamicCollectionDirty)"
  },
  {
    "label": "UpdateRemovalIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRemovalIfNeeded()"
  },
  {
    "label": "BuildInitialFilterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInitialFilterData()"
  },
  {
    "label": "LoadCollisionProfiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadCollisionProfiles()"
  },
  {
    "label": "OnPostPhysicsSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostPhysicsSync()"
  },
  {
    "label": "OnPostCreateParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostCreateParticles()"
  },
  {
    "label": "MoveComponentToRootTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveComponentToRootTransform()"
  },
  {
    "label": "OnTransformsDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransformsDirty()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(int32 NumTransforms)"
  },
  {
    "label": "SetRootIsBroken()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootIsBroken(bool bIsBroken)"
  },
  {
    "label": "SetIsBroken()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsBroken(int32 TransformIndex)"
  },
  {
    "label": "SetHasDecayed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasDecayed(int32 TransformIndex)"
  },
  {
    "label": "SetHasDecayedRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasDecayedRecursive(int32 TransformIndex, const TArray<TSet<int32>>& Children)"
  },
  {
    "label": "UpdateBrokenAndDecayedStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBrokenAndDecayedStates()"
  },
  {
    "label": "RebaseDynamicCollectionTransformsOnNewWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebaseDynamicCollectionTransformsOnNewWorldTransform()"
  }
]