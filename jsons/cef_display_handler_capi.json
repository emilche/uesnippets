[
  {
    "label": "_cef_display_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_display_handler_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_frame_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_frame_t"
  },
  {
    "label": "_cef_cursor_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cursor_info_t"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_DISPLAY_HANDLER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_DISPLAY_HANDLER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_browser_capi . h \" # include \" include / capi / cef_frame_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_display_handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_address_change)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, const cef_string_t* url)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_title_change)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, const cef_string_t* title)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_favicon_urlchange)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, cef_string_list_t icon_urls)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_fullscreen_mode_change)( struct _cef_display_handler_t* self, struct _cef_browser_t* browser, int fullscreen)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_tooltip)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, cef_string_t* text)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_status_message)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, const cef_string_t* value)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_console_message)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, cef_log_severity_t level, const cef_string_t* message, const cef_string_t* source, int line)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_auto_resize)(struct _cef_display_handler_t* self, struct _cef_browser_t* browser, const cef_size_t* new_size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_loading_progress_change)( struct _cef_display_handler_t* self, struct _cef_browser_t* browser, double progress)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* on_cursor_change)( struct _cef_display_handler_t* self, struct _cef_browser_t* browser, cef_cursor_handle_t cursor, cef_cursor_type_t type, const struct _cef_cursor_info_t* custom_cursor_info)"
  }
]