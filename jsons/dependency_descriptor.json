[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FrameDependencyTemplate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameDependencyTemplate"
  },
  {
    "label": "FrameDependencyStructure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameDependencyStructure"
  },
  {
    "label": "DependencyDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DependencyDescriptor"
  },
  {
    "label": "S()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TRANSPORT_RTP_DEPENDENCY_DESCRIPTOR_H_ # define API_TRANSPORT_RTP_DEPENDENCY_DESCRIPTOR_H_ # include<stdint . h> # include<initializer_list> # include<memory> # include<vector> # include \" absl / container / inlined_vector . h \" # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / video / render_resolution . h \" namespace webrtc { enum class DecodeTargetIndication { kNotPresent = 0,kDiscardable = 1,kSwitch = 2,kRequired = 3 } ; struct FrameDependencyTemplate { FrameDependencyTemplate&)",
    "insertText": "S(int spatial_layer)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (FrameDependencyTemplate&)",
    "insertText": "T(int temporal_layer)"
  },
  {
    "label": "Dtis()",
    "kind": "Method",
    "detail": "Function (FrameDependencyTemplate&)",
    "insertText": "Dtis(absl::string_view dtis)"
  },
  {
    "label": "FrameDiffs()",
    "kind": "Method",
    "detail": "Function (FrameDependencyTemplate&)",
    "insertText": "FrameDiffs(std::initializer_list<int> diffs)"
  },
  {
    "label": "ChainDiffs()",
    "kind": "Method",
    "detail": "Function (FrameDependencyTemplate&)",
    "insertText": "ChainDiffs(std::initializer_list<int> diffs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FrameDependencyTemplate& lhs, const FrameDependencyTemplate& rhs)"
  },
  {
    "label": "StringToDecodeTargetIndications()",
    "kind": "Method",
    "detail": "Function (this -> decode_target_indications =)",
    "insertText": "StringToDecodeTargetIndications(dtis)"
  },
  {
    "label": "assign()",
    "kind": "Method",
    "detail": "Function (this -> frame_diffs .)",
    "insertText": "assign(diffs.begin(), diffs.end())"
  }
]