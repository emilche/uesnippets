[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "OCameraSchema()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcGeom_OCamera_h # define Alembic_AbcGeom_OCamera_h # include<Alembic / Util / Export . h> # include<Alembic / AbcGeom / Foundation . h> # include<Alembic / AbcGeom / SchemaInfoDeclarations . h> # include<Alembic / AbcGeom / CameraSample . h> namespace Alembic { namespace AbcGeom { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT OCameraSchema : public Abc::OSchema<CameraSchemaInfo> { public : typedef OCameraSchema this_type ;)",
    "insertText": "OCameraSchema()"
  },
  {
    "label": "OCameraSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OCameraSchema(AbcA::CompoundPropertyWriterPtr iParent, const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument(), const Abc::Argument &iArg2 = Abc::Argument(), const Abc::Argument &iArg3 = Abc::Argument() ) : Abc::OSchema<CameraSchemaInfo>( iParent, iName, iArg0, iArg1, iArg2, iArg3)"
  },
  {
    "label": "GetTimeSampling()",
    "kind": "Method",
    "detail": "Function (AbcA::TimeSamplingPtr tsPtr =)",
    "insertText": "GetTimeSampling(iArg0, iArg1, iArg2, iArg3)"
  },
  {
    "label": "GetTimeSamplingIndex()",
    "kind": "Method",
    "detail": "Function (uint32_t tsIndex =)",
    "insertText": "GetTimeSamplingIndex(iArg0, iArg1, iArg2, iArg3)"
  },
  {
    "label": "getObject()",
    "kind": "Method",
    "detail": "Function (tsIndex = iParent ->)",
    "insertText": "getObject()->getArchive()->addTimeSampling( *tsPtr)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "init(tsIndex)"
  },
  {
    "label": "getTimeSampling()",
    "kind": "Method",
    "detail": "Function (} AbcA::TimeSamplingPtr)",
    "insertText": "getTimeSampling()"
  },
  {
    "label": "getNumSamples()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "getNumSamples()"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set(const CameraSample &iSamp)"
  },
  {
    "label": "setFromPrevious()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFromPrevious()"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling(uint32_t iIndex)"
  },
  {
    "label": "setTimeSampling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeSampling(AbcA::TimeSamplingPtr iTime)"
  },
  {
    "label": "getUserProperties()",
    "kind": "Method",
    "detail": "Function (Abc::OCompoundProperty)",
    "insertText": "getUserProperties()"
  },
  {
    "label": "getArbGeomParams()",
    "kind": "Method",
    "detail": "Function (Abc::OCompoundProperty)",
    "insertText": "getArbGeomParams()"
  },
  {
    "label": "getChildBoundsProperty()",
    "kind": "Method",
    "detail": "Function (Abc::OBox3dProperty)",
    "insertText": "getChildBoundsProperty()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "valid()"
  },
  {
    "label": "ALEMBIC_OVERRIDE_OPERATOR_BOOL()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ALEMBIC_OVERRIDE_OPERATOR_BOOL(OCameraSchema::valid())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "init(uint32_t iTsIdx)"
  }
]