[
  {
    "label": "linux_dirent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "linux_dirent"
  },
  {
    "label": "DirReaderLinux",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DirReaderLinux"
  },
  {
    "label": "DirReaderLinux()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FILES_DIR_READER_LINUX_H_ # define BASE_FILES_DIR_READER_LINUX_H_ # include<errno . h> # include<fcntl . h> # include<stddef . h> # include<stdint . h> # include<string . h> # include<sys / syscall . h> # include<unistd . h> # include \" base / logging . h \" # include \" base / posix / eintr_wrapper . h \" namespace base { struct linux_dirent { uint64_t d_ino ; int64_t d_off ; unsigned short d_reclen ; unsigned char d_type ; char d_name [ 0 ] ; } ; class DirReaderLinux { public :)",
    "insertText": "DirReaderLinux(const char* directory_path) : fd_(open(directory_path, O_RDONLY | O_DIRECTORY)), offset_(0), size_(0)"
  },
  {
    "label": "memset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memset(buf_, 0, sizeof(buf_))"
  },
  {
    "label": "DirReaderLinux()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DirReaderLinux(const DirReaderLinux&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DirReaderLinux&)",
    "insertText": "operator(const DirReaderLinux&)"
  },
  {
    "label": "DirReaderLinux()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DirReaderLinux()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "linux_dirent()",
    "kind": "Method",
    "detail": "Function (linux_dirent* dirent = reinterpret_cast<)",
    "insertText": "linux_dirent(&buf_[offset_])"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (offset_ + = dirent -> d_reclen ; })",
    "insertText": "if(offset_ != size_)"
  },
  {
    "label": "syscall()",
    "kind": "Method",
    "detail": "Function (const long r =)",
    "insertText": "syscall(__NR_getdents64, fd_, buf_, sizeof(buf_))"
  },
  {
    "label": "DPLOG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DPLOG(FATAL)"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (offset_ = 0 ; return true ; } const char*)",
    "insertText": "name()"
  }
]