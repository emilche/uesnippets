[
  {
    "label": "UWorldLocationsConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldLocationsConfig"
  },
  {
    "label": "FWorldLocationsInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldLocationsInitParams"
  },
  {
    "label": "FWorldLocations",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldLocations"
  },
  {
    "label": "FObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectInfo"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / ChunkedArray . h \" # include \" Net / Core / NetBitArray . h \" # include \" Math / Vector . h \" # include \" WorldLocations . generated . h \" namespace UE::Net::Private { typedef uint32 FInternalNetRefIndex ; })",
    "insertText": "UCLASS(Config=Engine)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(Config)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (+ 0 . 5 f* 2 0 9 7 1 5 2 . 0 f,+ 0 . 5 f* 2 0 9 7 1 5 2 . 0 f,+ 0 . 5 f* 2 0 9 7 1 5 2 . 0 f } ; } ; namespace UE::Net { struct FWorldLocationsInitParams { UE::Net::Private::FInternalNetRefIndex MaxInternalNetRefIndex = 0 ; } ; class FWorldLocations { public : void)",
    "insertText": "Init(const FWorldLocationsInitParams& InitParams)"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "HasInfoForObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInfoForObject(uint32 ObjectIndex)"
  },
  {
    "label": "GetWorldLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetWorldLocation(uint32 ObjectIndex)"
  },
  {
    "label": "GetCullDistance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCullDistance(uint32 ObjectIndex)"
  },
  {
    "label": "FObjectInfo()",
    "kind": "Method",
    "detail": "Function (struct FObjectInfo { FVector WorldLocation ; float CullDistance ;)",
    "insertText": "FObjectInfo() : WorldLocation(EForceInit::ForceInitToZero), CullDistance(0.0f)"
  },
  {
    "label": "UpdateWorldLocation()",
    "kind": "Method",
    "detail": "Function (} } ; public : void)",
    "insertText": "UpdateWorldLocation(uint32 ObjectIndex, const FVector& WorldLocation)"
  },
  {
    "label": "InitObjectInfoCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitObjectInfoCache(uint32 ObjectIndex)"
  },
  {
    "label": "RemoveObjectInfoCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectInfoCache(uint32 ObjectIndex)"
  },
  {
    "label": "SetObjectInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectInfo(uint32 ObjectIndex, const FObjectInfo& ObjectInfo)"
  },
  {
    "label": "GetObjectInfo()",
    "kind": "Method",
    "detail": "Function (const FObjectInfo&)",
    "insertText": "GetObjectInfo(uint32 ObjectIndex)"
  },
  {
    "label": "SetObjectRequiresFrequentWorldLocationUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectRequiresFrequentWorldLocationUpdate(uint32 ObjectIndex, bool bRequiresFrequentUpdate)"
  },
  {
    "label": "GetObjectRequiresFrequentWorldLocationUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetObjectRequiresFrequentWorldLocationUpdate(uint32 ObjectIndex)"
  },
  {
    "label": "GetObjectsRequiringFrequentWorldLocationUpdate()",
    "kind": "Method",
    "detail": "Function (FNetBitArrayView)",
    "insertText": "GetObjectsRequiringFrequentWorldLocationUpdate()"
  },
  {
    "label": "ResetObjectsWithDirtyInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetObjectsWithDirtyInfo()"
  },
  {
    "label": "GetObjectsWithDirtyInfo()",
    "kind": "Method",
    "detail": "Function (FNetBitArrayView)",
    "insertText": "GetObjectsWithDirtyInfo()"
  },
  {
    "label": "GetObjectsWithWorldInfo()",
    "kind": "Method",
    "detail": "Function (const FNetBitArrayView)",
    "insertText": "GetObjectsWithWorldInfo()"
  },
  {
    "label": "GetWorldMinPos()",
    "kind": "Method",
    "detail": "Function (} const FVector&)",
    "insertText": "GetWorldMinPos()"
  },
  {
    "label": "OnMaxInternalNetRefIndexIncreased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxInternalNetRefIndexIncreased(UE::Net::Private::FInternalNetRefIndex NewMaxInternalIndex)"
  },
  {
    "label": "SetBitValue()",
    "kind": "Method",
    "detail": "Function (ObjectsRequiringFrequentWorldLocationUpdate .)",
    "insertText": "SetBitValue(ObjectIndex, ValidInfoIndexes.GetBit(ObjectIndex) && bRequiresFrequentUpdate)"
  }
]