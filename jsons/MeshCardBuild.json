[
  {
    "label": "FAsyncCompilationNotification",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncCompilationNotification"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "FSignedDistanceFieldBuildSectionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSignedDistanceFieldBuildSectionData"
  },
  {
    "label": "FLumenCardBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardBuildData"
  },
  {
    "label": "FLumenCardBuildDebugData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardBuildDebugData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRay"
  },
  {
    "label": "FSurfel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSurfel"
  },
  {
    "label": "FSurfelCluster",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSurfelCluster"
  },
  {
    "label": "FMeshCardsBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshCardsBuildData"
  },
  {
    "label": "FCardRepresentationDataId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCardRepresentationDataId"
  },
  {
    "label": "FCardRepresentationData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCardRepresentationData"
  },
  {
    "label": "FAsyncCardRepresentationTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncCardRepresentationTask"
  },
  {
    "label": "FAsyncCardRepresentationTaskWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAsyncCardRepresentationTaskWorker"
  },
  {
    "label": "FCardRepresentationAsyncQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCardRepresentationAsyncQueue"
  },
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "IMeshUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshUtilities"
  },
  {
    "label": "FStaticMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshRenderData"
  },
  {
    "label": "ContainsNaN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / AsyncWork . h \" # include \" DerivedMeshDataTaskUtils . h \" # include \" MeshCardRepresentation . h \" # include \" RenderDeferredCleanup . h \" # include \" IAssetCompilingManager . h \" # include<atomic> class FAsyncCompilationNotification ; class UStaticMesh ; struct FSignedDistanceFieldBuildSectionData ; class FLumenCardBuildData { public : FLumenCardOBBf OBB ; uint8 AxisAlignedDirectionIndex ; bool)",
    "insertText": "ContainsNaN()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FLumenCardBuildData& Data)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (Ar<<Data . OBB ; Ar<<Data . AxisAlignedDirectionIndex ; return Ar ; } } ; class FLumenCardBuildDebugData { public : enum class ESurfelType : uint8 { Valid,Invalid,Idle,Cluster,Used } ; struct FRay { FVector3f RayStart ; FVector3f RayEnd ; bool bHit ; } ; struct FSurfel { FVector3f Position ; FVector3f Normal ; float Coverage = 0 . 0 f ; float Visibility = 1 . 0 f ; int32 SourceSurfelIndex = - 1 ; ESurfelType Type ; } ; struct FSurfelCluster { TArray<FSurfel> Surfels ; TArray<FRay> Rays ; } ; TArray<FSurfel> Surfels ; TArray<FRay> SurfelRays ; TArray<FSurfelCluster> Clusters ; int32 NumSurfels = 0 ; void)",
    "insertText": "Init()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Surfels .)",
    "insertText": "Reset()"
  },
  {
    "label": "FBox()",
    "kind": "Method",
    "detail": "Function (NumSurfels = 0 ; } } ; class FMeshCardsBuildData { public : FBox Bounds =)",
    "insertText": "FBox(ForceInit)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FMeshCardsBuildData& Data)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (Ar<<Data . Bounds ; Ar<<Data . bMostlyTwoSided ; Ar<<Data . CardBuildData ; return Ar ; } } ; class FCardRepresentationDataId { public : uint32 Value = 0 ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FCardRepresentationData()",
    "kind": "Method",
    "detail": "Function (} } ; class FCardRepresentationData : public FDeferredCleanupInterface { public : FMeshCardsBuildData MeshCardsBuildData ; FCardRepresentationDataId CardRepresentationDataId ;)",
    "insertText": "FCardRepresentationData()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (std::atomic<uint32> NextCardRepresentationId { 1 } ; CardRepresentationDataId . Value = NextCardRepresentationId + + ; } void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (CumulativeResourceSize .)",
    "insertText": "AddDedicatedSystemMemoryBytes(sizeof(*this))"
  },
  {
    "label": "GetResourceSizeBytes()",
    "kind": "Method",
    "detail": "Function (} SIZE_T)",
    "insertText": "GetResourceSizeBytes()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx ResSize ;)",
    "insertText": "GetResourceSizeEx(ResSize)"
  },
  {
    "label": "CacheDerivedData()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITORONLY_DATA void)",
    "insertText": "CacheDerivedData(const FString& InDDCKey, const ITargetPlatform* TargetPlatform, UStaticMesh* Mesh, UStaticMesh* GenerateSource, int32 MaxLumenMeshCards, bool bGenerateDistanceFieldAsIfTwoSided, FSourceMeshDataForDerivedDataTask* OptionalSourceMeshData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif FArchive&)",
    "insertText": "operator(FArchive& Ar, FCardRepresentationData& Data)"
  },
  {
    "label": "FAsyncCardRepresentationTaskWorker()",
    "kind": "Method",
    "detail": "Function (Ar<<Data . MeshCardsBuildData ; return Ar ; } } ; class FAsyncCardRepresentationTask ; class FAsyncCardRepresentationTaskWorker : public FNonAbandonableTask { public :)",
    "insertText": "FAsyncCardRepresentationTaskWorker(FAsyncCardRepresentationTask& InTask) : Task(InTask)"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (} TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoWork()"
  },
  {
    "label": "FCardRepresentationAsyncQueue()",
    "kind": "Method",
    "detail": "Function (private : FAsyncCardRepresentationTask& Task ; } ; class FAsyncCardRepresentationTask { public : bool bSuccess = false ; # if WITH_EDITOR TArray<FSignedDistanceFieldBuildSectionData> SectionData ; # endif FSourceMeshDataForDerivedDataTask SourceMeshData ; bool bGenerateDistanceFieldAsIfTwoSided = false ; int32 MaxLumenMeshCards = 0 ; UStaticMesh* StaticMesh = nullptr ; UStaticMesh* GenerateSource = nullptr ; FString DDCKey ; FCardRepresentationData* GeneratedCardRepresentation ; TUniquePtr<FAsyncTask<FAsyncCardRepresentationTaskWorker>> AsyncTask = nullptr ; } ; class FCardRepresentationAsyncQueue : IAssetCompilingManager { public :)",
    "insertText": "FCardRepresentationAsyncQueue()"
  },
  {
    "label": "AddTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTask(FAsyncCardRepresentationTask* Task)"
  },
  {
    "label": "CancelBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelBuild(UStaticMesh* StaticMesh)"
  },
  {
    "label": "CancelBuilds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelBuilds(const TSet<UStaticMesh*>& InStaticMeshes)"
  },
  {
    "label": "CancelAllOutstandingBuilds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAllOutstandingBuilds()"
  },
  {
    "label": "BlockUntilBuildComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUntilBuildComplete(UStaticMesh* InStaticMesh, bool bWarnIfBlocked)"
  },
  {
    "label": "BlockUntilAllBuildsComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BlockUntilAllBuildsComplete()"
  },
  {
    "label": "ProcessAsyncTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAsyncTasks(bool bLimitExecutionTime = false)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "GetNumOutstandingTasks()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumOutstandingTasks()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&CriticalSection)"
  },
  {
    "label": "GetStaticAssetTypeName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetStaticAssetTypeName()"
  },
  {
    "label": "GetAssetTypeName()",
    "kind": "Method",
    "detail": "Function (private : FAsyncCardRepresentationTaskWorker ; FName)",
    "insertText": "GetAssetTypeName()"
  },
  {
    "label": "GetAssetNameFormat()",
    "kind": "Method",
    "detail": "Function (FTextFormat)",
    "insertText": "GetAssetNameFormat()"
  },
  {
    "label": "GetDependentTypeNames()",
    "kind": "Method",
    "detail": "Function (TArrayView<FName>)",
    "insertText": "GetDependentTypeNames()"
  },
  {
    "label": "GetNumRemainingAssets()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumRemainingAssets()"
  },
  {
    "label": "FinishAllCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishAllCompilation()"
  },
  {
    "label": "ProcessPendingTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPendingTasks()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FQueuedThreadPool> ThreadPool ; void)",
    "insertText": "Build(FAsyncCardRepresentationTask* Task, class FQueuedThreadPool& ThreadPool)"
  },
  {
    "label": "RescheduleBackgroundTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RescheduleBackgroundTask(FAsyncCardRepresentationTask* InTask, EQueuedWorkPriority InPriority)"
  },
  {
    "label": "StartBackgroundTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartBackgroundTask(FAsyncCardRepresentationTask* Task)"
  },
  {
    "label": "CancelAndDeleteTaskByPredicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAndDeleteTaskByPredicate(TFunctionRef<bool(FAsyncCardRepresentationTask*)> ShouldCancelPredicate)"
  },
  {
    "label": "CancelAndDeleteTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAndDeleteTask(const TSet<FAsyncCardRepresentationTask*>& Tasks)"
  },
  {
    "label": "FinishCompilationForObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishCompilationForObjects(TArrayView<UObject* const> InObjects)"
  },
  {
    "label": "IsTaskInvalid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTaskInvalid(FAsyncCardRepresentationTask* Task)"
  },
  {
    "label": "OnPostReachabilityAnalysis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostReachabilityAnalysis()"
  },
  {
    "label": "BuildCardRepresentationDerivedDataKey()",
    "kind": "Method",
    "detail": "Function (TSet<FAsyncCardRepresentationTask*> ReferencedTasks ; TSet<FAsyncCardRepresentationTask*> PendingTasks ; TSet<FAsyncCardRepresentationTask*> CompletedTasks ; FDelegateHandle PostReachabilityAnalysisHandle ; class IMeshUtilities* MeshUtilities ; FCriticalSection CriticalSection ; TUniquePtr<FAsyncCompilationNotification> Notification ; } ; FCardRepresentationAsyncQueue* GCardRepresentationAsyncQueue ; FString)",
    "insertText": "BuildCardRepresentationDerivedDataKey(const FString& InMeshKey)"
  },
  {
    "label": "BeginCacheMeshCardRepresentation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCacheMeshCardRepresentation(const ITargetPlatform* TargetPlatform, UStaticMesh* StaticMeshAsset, class FStaticMeshRenderData& RenderData, const FString& DistanceFieldKey, FSourceMeshDataForDerivedDataTask* OptionalSourceMeshData)"
  }
]