[
  {
    "label": "APlayerCameraManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerCameraManager"
  },
  {
    "label": "UCameraShakePattern",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraShakePattern"
  },
  {
    "label": "FCameraShakePatternStartParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakePatternStartParams"
  },
  {
    "label": "FCameraShakePatternUpdateParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakePatternUpdateParams"
  },
  {
    "label": "FCameraShakePatternScrubParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakePatternScrubParams"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCameraShakePatternUpdateResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakePatternUpdateResult"
  },
  {
    "label": "FCameraShakePatternStopParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakePatternStopParams"
  },
  {
    "label": "FCameraShakeDuration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeDuration"
  },
  {
    "label": "FCameraShakeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeInfo"
  },
  {
    "label": "FCameraShakeApplyResultParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeApplyResultParams"
  },
  {
    "label": "FCameraShakeState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeState"
  },
  {
    "label": "FCameraShakeBaseStartParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraShakeBaseStartParams"
  },
  {
    "label": "UCameraShakeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraShakeBase"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / EnumClassFlags . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ScriptMacros . h \" # include \" Camera / CameraTypes . h \" # include \" Engine / Scene . h \" # include \" CameraShakeBase . generated . h \" class APlayerCameraManager ; class UCameraShakePattern ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=CameraShake)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FCameraShakePatternUpdateParams()"
  },
  {
    "label": "FCameraShakePatternUpdateParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCameraShakePatternUpdateParams(const FMinimalViewInfo& InPOV) : POV(InPOV)"
  },
  {
    "label": "GetTotalScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTotalScale()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FCameraShakePatternScrubParams()"
  },
  {
    "label": "FCameraShakePatternScrubParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCameraShakePatternScrubParams(const FMinimalViewInfo& InPOV) : POV(InPOV)"
  },
  {
    "label": "ToUpdateParams()",
    "kind": "Method",
    "detail": "Function (} FCameraShakePatternUpdateParams)",
    "insertText": "ToUpdateParams()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (ApplyAsAbsolute = 1<<0,SkipAutoScale = 1<<1,SkipAutoPlaySpace = 1<<2,Default = 0 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(ECameraShakePatternUpdateResultFlags)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FCameraShakePatternUpdateResult() : Location(FVector::ZeroVector) , Rotation(FRotator::ZeroRotator) , FOV(0.f) , PostProcessBlendWeight(0.f) , Flags(ECameraShakePatternUpdateResultFlags::Default)"
  },
  {
    "label": "ApplyScale()",
    "kind": "Method",
    "detail": "Function (} FVector Location ; FRotator Rotation ; float FOV ; FPostProcessSettings PostProcessSettings ; float PostProcessBlendWeight ; ECameraShakePatternUpdateResultFlags Flags ; void)",
    "insertText": "ApplyScale(float InScale)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} ; # if !)",
    "insertText": "defined(UE_LEGACY_CAMERA_SHAKE_PATTERN_TYPES)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() static FCameraShakeDuration Infinite()"
  },
  {
    "label": "FCameraShakeDuration()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCameraShakeDuration(float InDuration, ECameraShakeDurationType InType = ECameraShakeDurationType::Fixed) : Duration(InDuration), Type(InType)"
  },
  {
    "label": "GetDurationType()",
    "kind": "Method",
    "detail": "Function (} ECameraShakeDurationType)",
    "insertText": "GetDurationType()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "Get()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "FCameraShakeState()",
    "kind": "Method",
    "detail": "Function (} ; struct FCameraShakeApplyResultParams { float Scale = 1 . f ; ECameraShakePlaySpace PlaySpace = ECameraShakePlaySpace::CameraLocal ; FMatrix UserPlaySpaceMatrix ; TWeakObjectPtr<APlayerCameraManager> CameraManager ; } ; struct FCameraShakeState {)",
    "insertText": "FCameraShakeState()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const FCameraShakeInfo& InShakeInfo)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const FCameraShakeInfo& InShakeInfo, TOptional<float> InDurationOverride)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const UCameraShakePattern* InShakePattern)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const UCameraShakePattern* InShakePattern, const FCameraShakePatternStartParams& InParams)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Update(float DeltaTime)"
  },
  {
    "label": "Scrub()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Scrub(float AbsoluteTime)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(bool bImmediately)"
  },
  {
    "label": "IsPlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlaying()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetDuration()"
  },
  {
    "label": "IsInfinite()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInfinite()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(InShakeInfo)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : FCameraShakeInfo ShakeInfo ; float ElapsedTime ; float CurrentBlendInTime ; float CurrentBlendOutTime ; bool bIsBlendingIn : 1 ; bool bIsBlendingOut : 1 ; bool bIsPlaying : 1 ; bool bHasBlendIn : 1 ; bool bHasBlendOut : 1 ; } ; struct FCameraShakeBaseStartParams { TObjectPtr<APlayerCameraManager> CameraManager ; float Scale = 1 . f ; ECameraShakePlaySpace PlaySpace = ECameraShakePlaySpace::CameraLocal ; FRotator UserPlaySpaceRot = FRotator::ZeroRotator ; TOptional<float> DurationOverride ; } ;)",
    "insertText": "UCLASS(Abstract, Blueprintable, EditInlineNew, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UCameraShakeBase(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "GetCameraShakeDuration()",
    "kind": "Method",
    "detail": "Function (public : FCameraShakeDuration)",
    "insertText": "GetCameraShakeDuration()"
  },
  {
    "label": "GetCameraShakeBlendTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCameraShakeBlendTimes(float& OutBlendIn, float& OutBlendOut)"
  },
  {
    "label": "GetCameraShakeDuration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCameraShakeDuration(TSubclassOf<UCameraShakeBase> CameraShakeClass, FCameraShakeDuration& OutDuration)"
  },
  {
    "label": "GetCameraShakeBlendTimes()",
    "kind": "Method",
    "detail": "Function (CDO ->)",
    "insertText": "GetCameraShakeBlendTimes(OutBlendIn, OutBlendOut)"
  },
  {
    "label": "ApplyScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyScale(const FCameraShakePatternUpdateParams& Params, FCameraShakePatternUpdateResult& InOutResult)"
  },
  {
    "label": "ApplyScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyScale(float Scale, FCameraShakePatternUpdateResult& InOutResult)"
  },
  {
    "label": "ApplyLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLimits(const FMinimalViewInfo& InPOV, FCameraShakePatternUpdateResult& InOutResult)"
  },
  {
    "label": "ApplyPlaySpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPlaySpace(ECameraShakePlaySpace PlaySpace, FMatrix UserPlaySpaceMatrix, const FMinimalViewInfo& InPOV, FCameraShakePatternUpdateResult& InOutResult)"
  },
  {
    "label": "ChangeRootShakePattern()",
    "kind": "Method",
    "detail": "Function (template<ShakePatternType> ShakePatternType*)",
    "insertText": "ChangeRootShakePattern()"
  },
  {
    "label": "ShakePatternType()",
    "kind": "Method",
    "detail": "Function (ShakePatternType* ShakePattern = NewObject<)",
    "insertText": "ShakePatternType(this)"
  },
  {
    "label": "SetRootShakePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootShakePattern(ShakePattern)"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActive()"
  },
  {
    "label": "StartShake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartShake(const FCameraShakeBaseStartParams& Params)"
  },
  {
    "label": "IsFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFinished()"
  },
  {
    "label": "UpdateAndApplyCameraShake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAndApplyCameraShake(float DeltaTime, float Alpha, FMinimalViewInfo& InOutPOV)"
  },
  {
    "label": "ScrubAndApplyCameraShake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrubAndApplyCameraShake(float AbsoluteTime, float Alpha, FMinimalViewInfo& InOutPOV)"
  },
  {
    "label": "StopShake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopShake(bool bImmediately = true)"
  },
  {
    "label": "TeardownShake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TeardownShake()"
  },
  {
    "label": "ApplyPlaySpace()",
    "kind": "Method",
    "detail": "Function (UserPlaySpaceMatrix = InMatrix ; } protected : void)",
    "insertText": "ApplyPlaySpace(const FCameraShakePatternUpdateParams& Params, FCameraShakePatternUpdateResult& InOutResult)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (ECameraShakePlaySpace PlaySpace ; FMatrix UserPlaySpaceMatrix ; bool bIsActive ; } ;)",
    "insertText": "UCLASS(Abstract, EditInlineNew, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UCameraShakePattern(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "GetShakePatternInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetShakePatternInfo(FCameraShakeInfo& OutInfo)"
  },
  {
    "label": "StartShakePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartShakePattern(const FCameraShakePatternStartParams& Params)"
  },
  {
    "label": "UpdateShakePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateShakePattern(const FCameraShakePatternUpdateParams& Params, FCameraShakePatternUpdateResult& OutResult)"
  },
  {
    "label": "ScrubShakePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrubShakePattern(const FCameraShakePatternScrubParams& Params, FCameraShakePatternUpdateResult& OutResult)"
  },
  {
    "label": "StopShakePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopShakePattern(const FCameraShakePatternStopParams& Params)"
  },
  {
    "label": "TeardownShakePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TeardownShakePattern()"
  },
  {
    "label": "GetShakeInstance()",
    "kind": "Method",
    "detail": "Function (protected : UCameraShakeBase*)",
    "insertText": "GetShakeInstance()"
  },
  {
    "label": "GetShakePatternInfoImpl()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "GetShakePatternInfoImpl(FCameraShakeInfo& OutInfo)"
  },
  {
    "label": "StartShakePatternImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartShakePatternImpl(const FCameraShakePatternStartParams& Params)"
  },
  {
    "label": "UpdateShakePatternImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateShakePatternImpl(const FCameraShakePatternUpdateParams& Params, FCameraShakePatternUpdateResult& OutResult)"
  },
  {
    "label": "ScrubShakePatternImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ScrubShakePatternImpl(const FCameraShakePatternScrubParams& Params, FCameraShakePatternUpdateResult& OutResult)"
  },
  {
    "label": "IsFinishedImpl()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFinishedImpl()"
  },
  {
    "label": "TeardownShakePatternImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "TeardownShakePatternImpl()"
  }
]