[
  {
    "label": "FShaderCommonCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCommonCompileJob"
  },
  {
    "label": "FShaderCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompileJob"
  },
  {
    "label": "FShaderPipelineCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderPipelineCompileJob"
  },
  {
    "label": "FShaderCacheSerializeContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCacheSerializeContext"
  },
  {
    "label": "FRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestOwner"
  },
  {
    "label": "FShaderMapCompileResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderMapCompileResults"
  },
  {
    "label": "FShaderCommonCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCommonCompileJob"
  },
  {
    "label": "FPendingShaderMapCompileResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingShaderMapCompileResults"
  },
  {
    "label": "FShaderJobCacheRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderJobCacheRef"
  },
  {
    "label": "FShaderJobDataBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderJobDataBlock"
  },
  {
    "label": "FShaderCommonCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCommonCompileJob"
  },
  {
    "label": "FShaderCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompilingManager"
  },
  {
    "label": "FShaderPipelineCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderPipelineCompileJob"
  },
  {
    "label": "FShaderCompileJobKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderCompileJobKey"
  },
  {
    "label": "FShaderCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderCompileJob"
  },
  {
    "label": "FShaderPipelineCompileJobKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderPipelineCompileJobKey"
  },
  {
    "label": "FShaderPipelineCompileJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderPipelineCompileJob"
  },
  {
    "label": "CheckIfHung()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckIfHung()"
  },
  {
    "label": "FShaderCompilerInputHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FShaderCompilerInputHash()"
  },
  {
    "label": "GetNextJobId()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNextJobId()"
  },
  {
    "label": "SerializeOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeOutput(FShaderCacheSerializeContext& Ctx, int32 CodeIndex)"
  },
  {
    "label": "SerializeWorkerOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeWorkerOutput(FArchive& Ar)"
  },
  {
    "label": "SerializeWorkerInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeWorkerInput(FArchive& Ar)"
  },
  {
    "label": "FShaderPipelineCompileJob()",
    "kind": "Method",
    "detail": "Function (RENDERCORE_API)",
    "insertText": "FShaderPipelineCompileJob(int32 NumStages)"
  },
  {
    "label": "FShaderPipelineCompileJob()",
    "kind": "Method",
    "detail": "Function (RENDERCORE_API)",
    "insertText": "FShaderPipelineCompileJob(uint32 InHash, uint32 InId, EShaderCompileJobPriority InPriroity, const FShaderPipelineCompileJobKey& InKey)"
  },
  {
    "label": "checkNoEntry()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "checkNoEntry()"
  },
  {
    "label": "checkNoEntry()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "checkNoEntry()"
  }
]