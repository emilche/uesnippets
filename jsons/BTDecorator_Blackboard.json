[
  {
    "label": "FBlackboardDecoratorDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlackboardDecoratorDetails"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "FBlackboardEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlackboardEntry"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UBTDecorator_Blackboard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator_Blackboard"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" InputCoreTypes . h \" # include \" BehaviorTree / Decorators / BTDecorator_BlackboardBase . h \" # include \" BehaviorTree / Blackboard / BlackboardKeyType . h \" # include \" BTDecorator_Blackboard . generated . h \" class FBlackboardDecoratorDetails ; class UBehaviorTree ; class UBlackboardComponent ; struct FBlackboardEntry ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { ValueChange)",
    "insertText": "UMETA(DisplayName=\"On Value Change\", ToolTip=\"Restart on every change of observed blackboard value\"), ResultChange UMETA(DisplayName=\"On Result Change\", ToolTip=\"Restart only when result of evaluated condition is changed\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UCLASS(HideCategories=(Condition), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() AIMODULE_API virtual bool CalculateRawConditionValue(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "OnBlackboardKeyValueChange()",
    "kind": "Method",
    "detail": "Function (EBlackboardNotificationResult)",
    "insertText": "OnBlackboardKeyValueChange(const UBlackboardComponent& Blackboard, FBlackboard::FKey ChangedKeyID)"
  },
  {
    "label": "DescribeRuntimeValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DescribeRuntimeValues(const UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory, EBTDescriptionVerbosity::Type Verbosity, TArray<FString>& Values)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "BuildDescription()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR public : void)",
    "insertText": "BuildDescription()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "InitializeFromAsset()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "InitializeFromAsset(UBehaviorTree& Asset)"
  },
  {
    "label": "RefreshEnumBasedDecorator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshEnumBasedDecorator(const FBlackboardEntry& Entry)"
  },
  {
    "label": "EvaluateOnBlackboard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvaluateOnBlackboard(const UBlackboardComponent& BlackboardComp)"
  }
]