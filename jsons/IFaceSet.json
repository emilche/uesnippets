[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "Sample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sample"
  },
  {
    "label": "IFaceSetSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFaceSetSchema"
  },
  {
    "label": "CPROP_PTR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CPROP_PTR"
  },
  {
    "label": "Sample()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcGeom_IFaceSet_h # define Alembic_AbcGeom_IFaceSet_h # include<Alembic / Util / Export . h> # include<Alembic / AbcGeom / Foundation . h> # include<Alembic / AbcGeom / SchemaInfoDeclarations . h> # include<Alembic / AbcGeom / IGeomParam . h> # include<Alembic / AbcGeom / FaceSetExclusivity . h> # include<Alembic / AbcGeom / IGeomBase . h> namespace Alembic { namespace AbcGeom { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT IFaceSetSchema : public IGeomBaseSchema<FaceSetSchemaInfo> { public : class Sample { public : typedef Sample this_type ;)",
    "insertText": "Sample()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "getFaces()",
    "kind": "Method",
    "detail": "Function (} Abc::Int32ArraySamplePtr)",
    "insertText": "getFaces()"
  },
  {
    "label": "makeEmpty()",
    "kind": "Method",
    "detail": "Function (m_selfBounds .)",
    "insertText": "makeEmpty()"
  },
  {
    "label": "ALEMBIC_OPERATOR_BOOL()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ALEMBIC_OPERATOR_BOOL(valid())"
  },
  {
    "label": "IFaceSetSchema()",
    "kind": "Method",
    "detail": "Function (protected : class IFaceSetSchema ; Abc::Int32ArraySamplePtr m_faces ; Abc::Box3d m_selfBounds ; } ; public : typedef IFaceSetSchema this_type ;)",
    "insertText": "IFaceSetSchema()"
  },
  {
    "label": "IFaceSetSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IFaceSetSchema(const ICompoundProperty &iParent, const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : IGeomBaseSchema<FaceSetSchemaInfo>( iParent, iName, iArg0, iArg1)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(iArg0, iArg1)"
  },
  {
    "label": "IFaceSetSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IFaceSetSchema(const ICompoundProperty &iProp, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : IGeomBaseSchema<FaceSetSchemaInfo>( iProp, iArg0, iArg1)"
  },
  {
    "label": "IFaceSetSchema()",
    "kind": "Method",
    "detail": "Function (} template<class CPROP_PTR>)",
    "insertText": "IFaceSetSchema(CPROP_PTR iThis, Abc::WrapExistingFlag iFlag, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument() ) : IGeomBaseSchema<FaceSetSchemaInfo>( iThis, iFlag, iArg0, iArg1)"
  },
  {
    "label": "isConstant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isConstant()"
  },
  {
    "label": "getNumSamples()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "getNumSamples()"
  },
  {
    "label": "getTimeSampling()",
    "kind": "Method",
    "detail": "Function (AbcA::TimeSamplingPtr)",
    "insertText": "getTimeSampling()"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "get(Sample &iSamp, const Abc::ISampleSelector &iSS = Abc::ISampleSelector())"
  },
  {
    "label": "getValue()",
    "kind": "Method",
    "detail": "Function (Sample)",
    "insertText": "getValue(const Abc::ISampleSelector &iSS = Abc::ISampleSelector())"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (Sample smp ;)",
    "insertText": "get(smp, iSS)"
  },
  {
    "label": "getFacesProperty()",
    "kind": "Method",
    "detail": "Function (Abc::IInt32ArrayProperty)",
    "insertText": "getFacesProperty()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "valid()"
  },
  {
    "label": "ALEMBIC_OVERRIDE_OPERATOR_BOOL()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ALEMBIC_OVERRIDE_OPERATOR_BOOL(IFaceSetSchema::valid())"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "init(const Abc::Argument &iArg0, const Abc::Argument &iArg1)"
  }
]