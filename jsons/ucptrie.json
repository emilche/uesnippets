[
  {
    "label": "UCPTrie",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCPTrie"
  },
  {
    "label": "UCPTrie",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UCPTrie"
  },
  {
    "label": "UCPTrieType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UCPTrieType"
  },
  {
    "label": "UCPTrieType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UCPTrieType"
  },
  {
    "label": "UCPTrieValueWidth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UCPTrieValueWidth"
  },
  {
    "label": "UCPTrieValueWidth",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UCPTrieValueWidth"
  },
  {
    "label": "LocalUCPTriePointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalUCPTriePointer"
  },
  {
    "label": "ucptrie_openFromBinary()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_openFromBinary(UCPTrieType type, UCPTrieValueWidth valueWidth,\n                       const void *data, int32_t length, int32_t *pActualLength,\n                       UErrorCode *pErrorCode)"
  },
  {
    "label": "ucptrie_close()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_close(UCPTrie *trie)"
  },
  {
    "label": "ucptrie_getType()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_getType(const UCPTrie *trie)"
  },
  {
    "label": "ucptrie_getValueWidth()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_getValueWidth(const UCPTrie *trie)"
  },
  {
    "label": "ucptrie_get()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_get(const UCPTrie *trie, UChar32 c)"
  },
  {
    "label": "ucptrie_getRange()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_getRange(const UCPTrie *trie, UChar32 start,\n                 UCPMapRangeOption option, uint32_t surrogateValue,\n                 UCPMapValueFilter *filter, const void *context, uint32_t *pValue)"
  },
  {
    "label": "ucptrie_toBinary()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_toBinary(const UCPTrie *trie, void *data, int32_t capacity, UErrorCode *pErrorCode)"
  },
  {
    "label": "ucptrie_internalSmallIndex()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_internalSmallIndex(const UCPTrie *trie, UChar32 c)"
  },
  {
    "label": "ucptrie_internalSmallU8Index()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_internalSmallU8Index(const UCPTrie *trie, int32_t lt1, uint8_t t2, uint8_t t3)"
  },
  {
    "label": "ucptrie_internalU8PrevIndex()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "ucptrie_internalU8PrevIndex(const UCPTrie *trie, UChar32 c,\n                            const uint8_t *start, const uint8_t *src)"
  }
]