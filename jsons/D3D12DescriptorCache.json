[
  {
    "label": "FD3D12CommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12CommandContext"
  },
  {
    "label": "FD3D12DynamicRHI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DynamicRHI"
  },
  {
    "label": "FD3D12DepthStencilView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DepthStencilView"
  },
  {
    "label": "FD3D12ExplicitDescriptorCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ExplicitDescriptorCache"
  },
  {
    "label": "FD3D12RenderTargetView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RenderTargetView"
  },
  {
    "label": "FD3D12ShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ShaderResourceView"
  },
  {
    "label": "FD3D12UnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12UnorderedAccessView"
  },
  {
    "label": "FD3D12DescriptorCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DescriptorCache"
  },
  {
    "label": "FD3D12RootSignature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RootSignature"
  },
  {
    "label": "FD3D12DefaultViews",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DefaultViews"
  },
  {
    "label": "FD3D12VertexBufferCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12VertexBufferCache"
  },
  {
    "label": "FD3D12IndexBufferCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12IndexBufferCache"
  },
  {
    "label": "FD3D12ConstantBufferCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ConstantBufferCache"
  },
  {
    "label": "FD3D12ShaderResourceViewCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12ShaderResourceViewCache"
  },
  {
    "label": "FD3D12UnorderedAccessViewCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12UnorderedAccessViewCache"
  },
  {
    "label": "FD3D12SamplerStateCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12SamplerStateCache"
  },
  {
    "label": "FD3D12StateCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12StateCache"
  },
  {
    "label": "FD3D12SyncPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12SyncPoint"
  },
  {
    "label": "FD3D12ConservativeMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12ConservativeMap"
  },
  {
    "label": "Entry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Entry"
  },
  {
    "label": "FD3D12SamplerArrayDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12SamplerArrayDesc"
  },
  {
    "label": "FD3D12UniqueSamplerTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12UniqueSamplerTable"
  },
  {
    "label": "FD3D12UniqueSamplerTableKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12UniqueSamplerTableKeyFuncs"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "FD3D12OnlineHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12OnlineHeap"
  },
  {
    "label": "FD3D12GlobalOnlineSamplerHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12GlobalOnlineSamplerHeap"
  },
  {
    "label": "FD3D12SubAllocatedOnlineHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12SubAllocatedOnlineHeap"
  },
  {
    "label": "FD3D12LocalOnlineHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12LocalOnlineHeap"
  },
  {
    "label": "FSyncPointEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSyncPointEntry"
  },
  {
    "label": "FPoolEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolEntry"
  },
  {
    "label": "FD3D12DescriptorCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DescriptorCache"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const D3D12_SAMPLER_DESC& Desc)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FD3D12SamplerArrayDesc& Key)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FD3D12UniqueSamplerTable& Table)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key.Key)"
  },
  {
    "label": "FD3D12OnlineHeap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12OnlineHeap(FD3D12Device* Device, bool CanLoopAround)"
  },
  {
    "label": "CanReserveSlots()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReserveSlots(uint32 NumSlots)"
  },
  {
    "label": "ReserveSlots()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ReserveSlots(uint32 NumSlotsRequested)"
  },
  {
    "label": "SetNextSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNextSlot(uint32 NextSlot)"
  },
  {
    "label": "FD3D12GlobalOnlineSamplerHeap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12GlobalOnlineSamplerHeap(FD3D12Device* Device)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 TotalSize)"
  },
  {
    "label": "ConsolidateUniqueSamplerTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsolidateUniqueSamplerTables(TArrayView<FD3D12UniqueSamplerTable> UniqueTables)"
  },
  {
    "label": "GetUniqueDescriptorTables()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FD3D12SamplerSet>)",
    "insertText": "GetUniqueDescriptorTables()"
  },
  {
    "label": "FD3D12SubAllocatedOnlineHeap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12SubAllocatedOnlineHeap(FD3D12DescriptorCache& DescriptorCache, FD3D12CommandContext& Context)"
  },
  {
    "label": "AllocateBlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateBlock()"
  },
  {
    "label": "FD3D12LocalOnlineHeap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FD3D12LocalOnlineHeap(FD3D12DescriptorCache& DescriptorCache, FD3D12CommandContext& Context)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InNumDescriptors, ERHIDescriptorHeapType InHeapType)"
  },
  {
    "label": "RecycleSlots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecycleSlots()"
  },
  {
    "label": "OpenCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenCommandList()"
  },
  {
    "label": "CloseCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseCommandList()"
  },
  {
    "label": "SetVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexBuffers(FD3D12VertexBufferCache& Cache)"
  },
  {
    "label": "SetRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderTargets(FD3D12RenderTargetView** RenderTargetViewArray, uint32 Count, FD3D12DepthStencilView* DepthStencilTarget)"
  },
  {
    "label": "BuildUAVTable()",
    "kind": "Method",
    "detail": "Function (D3D12_GPU_DESCRIPTOR_HANDLE)",
    "insertText": "BuildUAVTable(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12UnorderedAccessViewCache& Cache, const UAVSlotMask& SlotsNeededMask, uint32 Count, uint32 &HeapSlot)"
  },
  {
    "label": "BuildSamplerTable()",
    "kind": "Method",
    "detail": "Function (D3D12_GPU_DESCRIPTOR_HANDLE)",
    "insertText": "BuildSamplerTable(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12SamplerStateCache& Cache, const SamplerSlotMask& SlotsNeededMask, uint32 Count, uint32& HeapSlot)"
  },
  {
    "label": "BuildSRVTable()",
    "kind": "Method",
    "detail": "Function (D3D12_GPU_DESCRIPTOR_HANDLE)",
    "insertText": "BuildSRVTable(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12ShaderResourceViewCache& Cache, const SRVSlotMask& SlotsNeededMask, uint32 Count, uint32& HeapSlot)"
  },
  {
    "label": "SetUAVTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUAVTable(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12UnorderedAccessViewCache& Cache, uint32 SlotsNeeded, const D3D12_GPU_DESCRIPTOR_HANDLE& BindDescriptor)"
  },
  {
    "label": "SetSamplerTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSamplerTable(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12SamplerStateCache& Cache, uint32 SlotsNeeded, const D3D12_GPU_DESCRIPTOR_HANDLE& BindDescriptor)"
  },
  {
    "label": "SetSRVTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSRVTable(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12ShaderResourceViewCache& Cache, uint32 SlotsNeeded, const D3D12_GPU_DESCRIPTOR_HANDLE& BindDescriptor)"
  },
  {
    "label": "SetConstantBufferViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConstantBufferViews(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12ConstantBufferCache& Cache, CBVSlotMask SlotsNeededMask, uint32 Count, uint32& HeapSlot)"
  },
  {
    "label": "SetRootConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootConstantBuffers(EShaderFrequency ShaderStage, const FD3D12RootSignature* RootSignature, FD3D12ConstantBufferCache& Cache, CBVSlotMask SlotsNeededMask, FD3D12StateCache* StateCache)"
  },
  {
    "label": "PrepareBindlessViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareBindlessViews(EShaderFrequency ShaderStage, TConstArrayView<FD3D12ShaderResourceView*> SRVs, TConstArrayView<FD3D12UnorderedAccessView*> UAVs)"
  },
  {
    "label": "HeapRolledOver()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HeapRolledOver(ERHIDescriptorHeapType InHeapType)"
  },
  {
    "label": "HeapLoopedAround()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HeapLoopedAround(ERHIDescriptorHeapType InHeapType)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InNumLocalViewDescriptors, uint32 InNumSamplerDescriptors)"
  },
  {
    "label": "SwitchToContextLocalViewHeap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchToContextLocalViewHeap()"
  },
  {
    "label": "SwitchToContextLocalSamplerHeap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchToContextLocalSamplerHeap()"
  },
  {
    "label": "SwitchToGlobalSamplerHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchToGlobalSamplerHeap()"
  },
  {
    "label": "SwitchToNewBindlessResourceHeap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwitchToNewBindlessResourceHeap(FD3D12DescriptorHeap* InHeap)"
  },
  {
    "label": "SetExplicitDescriptorCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExplicitDescriptorCache(FD3D12ExplicitDescriptorCache& ExplicitDescriptorCache)"
  },
  {
    "label": "UnsetExplicitDescriptorCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnsetExplicitDescriptorCache()"
  },
  {
    "label": "SetDescriptorHeaps()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDescriptorHeaps(bool bForceHeapChanged = false)"
  }
]