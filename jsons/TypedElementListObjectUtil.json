[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "HasObjects()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Elements / Framework / TypedElementList . h \" # include \" Elements / Framework / TypedElementListFwd . h \" # include \" HAL / Platform . h \" # include \" Templates / Casts . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" class UClass ; class UObject ; namespace TypedElementListObjectUtil { bool)",
    "insertText": "HasObjects(FTypedElementListConstRef InElementList, const UClass* InRequiredClass = nullptr)"
  },
  {
    "label": "HasObjects()",
    "kind": "Method",
    "detail": "Function (template<RequiredClassType> bool)",
    "insertText": "HasObjects(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "CountObjects()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "CountObjects(FTypedElementListConstRef InElementList, const UClass* InRequiredClass = nullptr)"
  },
  {
    "label": "CountObjects()",
    "kind": "Method",
    "detail": "Function (template<RequiredClassType> int32)",
    "insertText": "CountObjects(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "ForEachObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ForEachObject(FTypedElementListConstRef InElementList, TFunctionRef<bool(UObject*)> InCallback, const UClass* InRequiredClass = nullptr)"
  },
  {
    "label": "ForEachObject()",
    "kind": "Method",
    "detail": "Function (template<RequiredClassType> void)",
    "insertText": "ForEachObject(FTypedElementListConstRef InElementList, TFunctionRef<bool(RequiredClassType*)> InCallback)"
  },
  {
    "label": "GetObjects()",
    "kind": "Method",
    "detail": "Function (} TArray<UObject*>)",
    "insertText": "GetObjects(FTypedElementListConstRef InElementList, const UClass* InRequiredClass = nullptr)"
  },
  {
    "label": "GetObjects()",
    "kind": "Method",
    "detail": "Function (template<RequiredClassType> TArray<RequiredClassType*>)",
    "insertText": "GetObjects(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (TArray<RequiredClassType*> SelectedObjects ; SelectedObjects .)",
    "insertText": "Reserve(InElementList->Num())"
  },
  {
    "label": "GetTopObject()",
    "kind": "Method",
    "detail": "Function (template<RequiredClassType> RequiredClassType*)",
    "insertText": "GetTopObject(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "GetBottomObject()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetBottomObject(FTypedElementListConstRef InElementList, const UClass* InRequiredClass = nullptr)"
  },
  {
    "label": "GetBottomObject()",
    "kind": "Method",
    "detail": "Function (template<RequiredClassType> RequiredClassType*)",
    "insertText": "GetBottomObject(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "HasObjectsOfExactClass()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasObjectsOfExactClass(FTypedElementListConstRef InElementList, const UClass* InClass)"
  },
  {
    "label": "HasObjectsOfExactClass()",
    "kind": "Method",
    "detail": "Function (template<ClassType> bool)",
    "insertText": "HasObjectsOfExactClass(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "CountObjectsOfExactClass()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "CountObjectsOfExactClass(FTypedElementListConstRef InElementList, const UClass* InClass)"
  },
  {
    "label": "CountObjectsOfExactClass()",
    "kind": "Method",
    "detail": "Function (template<ClassType> bool)",
    "insertText": "CountObjectsOfExactClass(FTypedElementListConstRef InElementList)"
  },
  {
    "label": "ForEachObjectClass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ForEachObjectClass(FTypedElementListConstRef InElementList, TFunctionRef<bool(UClass*)> InCallback)"
  }
]