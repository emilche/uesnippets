[
  {
    "label": "FD3D12Texture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Texture"
  },
  {
    "label": "FD3D12Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Device"
  },
  {
    "label": "FUpdateTextureRegion2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTextureRegion2D"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "FD3D12Viewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12Viewport"
  },
  {
    "label": "FD3D12BackBufferReferenceTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12BackBufferReferenceTexture2D"
  },
  {
    "label": "SafeCreateTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeCreateTexture2D(FD3D12Device* pDevice, \n\tFD3D12Adapter* Adapter,\n\tconst FD3D12ResourceDesc& TextureDesc,\n\tconst D3D12_CLEAR_VALUE* ClearValue, \n\tFD3D12ResourceLocation* OutTexture2D,\n\tFD3D12BaseShaderResource* Owner,\n\tEPixelFormat Format,\n\tETextureCreateFlags Flags,\n\tD3D12_RESOURCE_STATES InitialState,\n\tconst TCHAR* Name)"
  },
  {
    "label": "CanBe4KAligned()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBe4KAligned(const FD3D12ResourceDesc& Desc, EPixelFormat UEFormat)"
  },
  {
    "label": "InitializeTextureData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTextureData(FRHICommandListBase& RHICmdList, const FRHITextureCreateDesc& CreateDesc, D3D12_RESOURCE_STATES DestinationState)"
  },
  {
    "label": "CreateViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateViews(FD3D12Texture* FirstLinkedObject)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock(FRHICommandListBase& RHICmdList, uint32 MipIndex, uint32 ArrayIndex)"
  },
  {
    "label": "UpdateTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTexture2D(FRHICommandListBase& RHICmdList, uint32 MipIndex, const struct FUpdateTextureRegion2D& UpdateRegion, uint32 SourcePitch, const uint8* SourceData)"
  },
  {
    "label": "UpdateTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTexture(FD3D12CommandContext& Context, uint32 MipIndex, uint32 DestX, uint32 DestY, uint32 DestZ, const D3D12_TEXTURE_COPY_LOCATION& SourceCopyLocation)"
  },
  {
    "label": "CopyTextureRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyTextureRegion(FD3D12CommandContext& Context, uint32 DestX, uint32 DestY, uint32 DestZ, FD3D12Texture* SourceTexture, const D3D12_BOX& SourceBox)"
  },
  {
    "label": "AliasResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AliasResources(FD3D12Texture* Texture)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (it)",
    "insertText": "check(ArraySliceIndex == -1 || ArraySliceIndex == 0)"
  },
  {
    "label": "UpdateD3D12TextureStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateD3D12TextureStats(FD3D12Texture& Texture, const FD3D12ResourceDesc& ResourceDesc, const FRHITextureDesc& TextureDesc, uint64 TextureSize, bool bNewTexture, bool bAllocating)"
  },
  {
    "label": "D3D12TextureAllocated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "D3D12TextureAllocated(FD3D12Texture& Texture)"
  },
  {
    "label": "D3D12TextureDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "D3D12TextureDeleted(FD3D12Texture& Texture)"
  }
]