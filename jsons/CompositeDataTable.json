[
  {
    "label": "UCompositeDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCompositeDataTable"
  },
  {
    "label": "UCompositeDataTableFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCompositeDataTableFactory"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DataTable . h \" # include \" CompositeDataTable . generated . h \")",
    "insertText": "UCLASS(MinimalAPI, BlueprintType, hideCategories=(ImportOptions,ImportSource))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "GetPreloadDependencies()",
    "kind": "Method",
    "detail": "Function (enum class ERowState : uint8 { Inherited,Overridden,New,Invalid,} ; void)",
    "insertText": "GetPreloadDependencies(TArray<UObject*>& OutDeps)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetRowState()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA ERowState)",
    "insertText": "GetRowState(FName RowName)"
  },
  {
    "label": "EmptyTable()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "EmptyTable()"
  },
  {
    "label": "RemoveRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRow(FName RowName)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRow(FName RowName, const FTableRowBase& RowData)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRow(FName RowName, const uint8* RowData, const UScriptStruct* RowType)"
  },
  {
    "label": "CleanBeforeStructChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "CleanBeforeStructChange()"
  },
  {
    "label": "RestoreAfterStructChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreAfterStructChange()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "AppendParentTables()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "AppendParentTables(const TArray<UDataTable*>& NewTables)"
  },
  {
    "label": "RemoveParentTables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParentTables(const TArray<UDataTable*>& TablesToRemove)"
  },
  {
    "label": "AddParentTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParentTable(const TObjectPtr<UDataTable>& TableToAdd)"
  },
  {
    "label": "RemoveParentTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParentTable(const TObjectPtr<UDataTable>& TableToRemove)"
  },
  {
    "label": "FindLoops()",
    "kind": "Method",
    "detail": "Function (protected : const UCompositeDataTable*)",
    "insertText": "FindLoops(TArray<const UCompositeDataTable*> AlreadySeenTables)"
  },
  {
    "label": "EmptyCompositeTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyCompositeTable(bool bClearParentTables)"
  },
  {
    "label": "UpdateCachedRowMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedRowMap(bool bWarnOnInvalidChildren = true)"
  },
  {
    "label": "OnParentTablesUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnParentTablesUpdated(EPropertyChangeType::Type ChangeType = EPropertyChangeType::Unspecified)"
  }
]