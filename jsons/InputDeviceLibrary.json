[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UInputDeviceLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInputDeviceLibrary"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogInputDevices, Log, All)"
  },
  {
    "label": "IsDevicePropertyHandleValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDevicePropertyHandleValid(const FInputDevicePropertyHandle& InHandle)"
  },
  {
    "label": "GetAllInputDevicesForUser()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAllInputDevicesForUser(const FPlatformUserId UserId, TArray<FInputDeviceId>& OutInputDevices)"
  },
  {
    "label": "GetAllInputDevices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAllInputDevices(TArray<FInputDeviceId>& OutInputDevices)"
  },
  {
    "label": "GetAllConnectedInputDevices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAllConnectedInputDevices(TArray<FInputDeviceId>& OutInputDevices)"
  },
  {
    "label": "GetAllActiveUsers()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAllActiveUsers(TArray<FPlatformUserId>& OutUsers)"
  },
  {
    "label": "GetUserForUnpairedInputDevices()",
    "kind": "Method",
    "detail": "Function (FPlatformUserId)",
    "insertText": "GetUserForUnpairedInputDevices()"
  },
  {
    "label": "GetPrimaryPlatformUser()",
    "kind": "Method",
    "detail": "Function (FPlatformUserId)",
    "insertText": "GetPrimaryPlatformUser()"
  },
  {
    "label": "IsUnpairedUserId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnpairedUserId(const FPlatformUserId PlatformId)"
  },
  {
    "label": "IsInputDeviceMappedToUnpairedUser()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInputDeviceMappedToUnpairedUser(const FInputDeviceId InputDevice)"
  },
  {
    "label": "GetDefaultInputDevice()",
    "kind": "Method",
    "detail": "Function (FInputDeviceId)",
    "insertText": "GetDefaultInputDevice()"
  },
  {
    "label": "GetUserForInputDevice()",
    "kind": "Method",
    "detail": "Function (FPlatformUserId)",
    "insertText": "GetUserForInputDevice(FInputDeviceId DeviceId)"
  },
  {
    "label": "GetPrimaryInputDeviceForUser()",
    "kind": "Method",
    "detail": "Function (FInputDeviceId)",
    "insertText": "GetPrimaryInputDeviceForUser(FPlatformUserId UserId)"
  },
  {
    "label": "GetInputDeviceConnectionState()",
    "kind": "Method",
    "detail": "Function (EInputDeviceConnectionState)",
    "insertText": "GetInputDeviceConnectionState(const FInputDeviceId DeviceId)"
  },
  {
    "label": "IsValidInputDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidInputDevice(FInputDeviceId DeviceId)"
  },
  {
    "label": "IsValidPlatformId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidPlatformId(FPlatformUserId UserId)"
  },
  {
    "label": "PlatformUserId_None()",
    "kind": "Method",
    "detail": "Function (FPlatformUserId)",
    "insertText": "PlatformUserId_None()"
  },
  {
    "label": "InputDeviceId_None()",
    "kind": "Method",
    "detail": "Function (FInputDeviceId)",
    "insertText": "InputDeviceId_None()"
  },
  {
    "label": "EqualEqual_PlatformUserId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualEqual_PlatformUserId(FPlatformUserId A, FPlatformUserId B)"
  },
  {
    "label": "NotEqual_PlatformUserId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotEqual_PlatformUserId(FPlatformUserId A, FPlatformUserId B)"
  },
  {
    "label": "EqualEqual_InputDeviceId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualEqual_InputDeviceId(FInputDeviceId A, FInputDeviceId B)"
  },
  {
    "label": "NotEqual_InputDeviceId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotEqual_InputDeviceId(FInputDeviceId A, FInputDeviceId B)"
  }
]