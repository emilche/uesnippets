[
  {
    "label": "TReversePredicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TReversePredicate"
  },
  {
    "label": "TReversePredicate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / Invoke . h \" # include \" Templates / UnrealTemplate . h \" template<PredicateType> class TReversePredicate { const PredicateType& Predicate ; public :)",
    "insertText": "TReversePredicate(const PredicateType& InPredicate ) : Predicate( InPredicate)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<T> bool)",
    "insertText": "operator()( T&& A, T&& B)"
  }
]