[
  {
    "label": "FNavigationReply",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavigationReply"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "SLATEREFLECTOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLATEREFLECTOR_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSimulatedReply",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimulatedReply"
  },
  {
    "label": "FSimulationResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimulationResult"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(TOptional<FWidgetPath>, FHandleNavigation, uint32 /*UserIndex*/, const TSharedPtr<SWidget>& /*InDestination*/)"
  },
  {
    "label": "ToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToText(ENavigationStyle NavigationStyle)"
  },
  {
    "label": "ToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ToText(ERoutedReason RoutedReason)"
  },
  {
    "label": "SimulateForEachWidgets()",
    "kind": "Method",
    "detail": "Function (TArray<FSimulationResult>)",
    "insertText": "SimulateForEachWidgets(const FWidgetPath& WidgetPath, int32 UserIndex, ENavigationGenesis Genesis, ENavigationStyle Navigation)"
  },
  {
    "label": "SimulateForEachWidgets()",
    "kind": "Method",
    "detail": "Function (TArray<FSimulationResult>)",
    "insertText": "SimulateForEachWidgets(const TSharedRef<SWindow>& Window, int32 UserIndex, ENavigationGenesis Genesis, ENavigationStyle Navigation)"
  },
  {
    "label": "SimulateForEachWidgets()",
    "kind": "Method",
    "detail": "Function (TArray<FSimulationResult>)",
    "insertText": "SimulateForEachWidgets(const FWidgetPath& WidgetPath, int32 UserIndex, ENavigationGenesis Genesis, EUINavigation Navigation)"
  },
  {
    "label": "SimulateForEachWidgets()",
    "kind": "Method",
    "detail": "Function (TArray<FSimulationResult>)",
    "insertText": "SimulateForEachWidgets(const TSharedRef<SWindow>& Window, int32 UserIndex, ENavigationGenesis Genesis, EUINavigation Navigation)"
  },
  {
    "label": "Simulate()",
    "kind": "Method",
    "detail": "Function (TArray<FSimulationResult>)",
    "insertText": "Simulate(const FWidgetPath& WidgetPath, int32 UserIndex, ENavigationGenesis Genesis, ENavigationStyle Navigation)"
  },
  {
    "label": "Simulate()",
    "kind": "Method",
    "detail": "Function (FSimulationResult)",
    "insertText": "Simulate(const FWidgetPath& WidgetPath, int32 UserIndex, ENavigationGenesis Genesis, EUINavigation Navigation)"
  },
  {
    "label": "InterpretResult()",
    "kind": "Method",
    "detail": "Function (FSimulationResult)",
    "insertText": "InterpretResult(const FWidgetPath& WidgetPath, const FNavigationEvent& NavigationEvent, const FNavigationReply& Reply, const FArrangedWidget& BoundaryWidget)"
  }
]