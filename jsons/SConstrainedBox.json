[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SConstrainedBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SConstrainedBox"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SWidget ; class SConstrainedBox : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SConstrainedBox) : _MinWidth() , _MaxWidth()"
  },
  {
    "label": "SLATE_DEFAULT_SLOT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_ATTRIBUTE(TOptional<float>, MinWidth) SLATE_ATTRIBUTE(TOptional<float>, MaxWidth) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float LayoutScaleMultiplier)"
  }
]