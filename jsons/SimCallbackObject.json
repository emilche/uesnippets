[
  {
    "label": "FPhysicsSolverBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsSolverBase"
  },
  {
    "label": "FMidPhaseModifierAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMidPhaseModifierAccessor"
  },
  {
    "label": "FCCDModifierAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCCDModifierAccessor"
  },
  {
    "label": "FStrainModifierAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStrainModifierAccessor"
  },
  {
    "label": "FCollisionContactModifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionContactModifier"
  },
  {
    "label": "FSingleParticlePhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSingleParticlePhysicsProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ISimCallbackObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISimCallbackObject"
  },
  {
    "label": "FPBDRigidsSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsSolver"
  },
  {
    "label": "FChaosMarshallingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosMarshallingManager"
  },
  {
    "label": "FPushPhysicsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPushPhysicsData"
  },
  {
    "label": "FSimCallbackCommandObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimCallbackCommandObject"
  },
  {
    "label": "FSimCallbackInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimCallbackInput"
  },
  {
    "label": "TSimCallbackObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSimCallbackObject"
  },
  {
    "label": "FSimCallbackInputAndObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimCallbackInputAndObject"
  },
  {
    "label": "GetSolverPhysicsResultsTime()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Queue . h \" # include \" Chaos / Defines . h \" # include \" Chaos / SimCallbackInput . h \" # include \" Chaos / CollisionResolutionTypes . h \" # include \" Chaos / GeometryParticlesfwd . h \" # include \" ChaosStats . h \" # include \" Chaos / PhysicsObject . h \" # ifndef UE_CHAOS_UNTRACKED_CALLBACK_IS_ERROR # define UE_CHAOS_UNTRACKED_CALLBACK_IS_ERROR 0 # endif namespace Chaos { class FPhysicsSolverBase ; class FMidPhaseModifierAccessor ; class FCCDModifierAccessor ; class FStrainModifierAccessor ; class FCollisionContactModifier ; class FSingleParticlePhysicsProxy ; namespace Utilities { FReal)",
    "insertText": "GetSolverPhysicsResultsTime(FPhysicsSolverBase*)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} enum class ESimCallbackOptions : uint16 { None = 0,Presimulate = 1<<0,MidPhaseModification = 1<<1,CCDModification = 1<<2,ContactModification = 1<<3,StrainModification = 1<<5,ParticleRegister = 1<<6,ParticleUnregister = 1<<7,RunOnFrozenGameThread = 1<<8,Rewind = 1<<9,PhysicsObjectUnregister = 1<<1 0,PreIntegrate = 1<<1 1,PostIntegrate = 1<<1 2,PreSolve = 1<<1 3,PostSolve = 1<<1 4,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ESimCallbackOptions)"
  },
  {
    "label": "ISimCallbackObject()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ISimCallbackObject()"
  },
  {
    "label": "ISimCallbackObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ISimCallbackObject(const ISimCallbackObject&)"
  },
  {
    "label": "GetSimTime_Internal()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetSimTime_Internal()"
  },
  {
    "label": "OnPostInitialize_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostInitialize_Internal()"
  },
  {
    "label": "PreSimulate_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PreSimulate_Internal()"
  },
  {
    "label": "OnPreSimulate_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSimulate_Internal()"
  },
  {
    "label": "PreIntegrate_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PreIntegrate_Internal()"
  },
  {
    "label": "OnPreIntegrate_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreIntegrate_Internal()"
  },
  {
    "label": "PostIntegrate_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostIntegrate_Internal()"
  },
  {
    "label": "OnPostIntegrate_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostIntegrate_Internal()"
  },
  {
    "label": "MidPhaseModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MidPhaseModification_Internal(FMidPhaseModifierAccessor& Modifier)"
  },
  {
    "label": "OnMidPhaseModification_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMidPhaseModification_Internal(Modifier)"
  },
  {
    "label": "CCDModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CCDModification_Internal(FCCDModifierAccessor& Modifier)"
  },
  {
    "label": "OnCCDModification_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCCDModification_Internal(Modifier)"
  },
  {
    "label": "StrainModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StrainModification_Internal(FStrainModifierAccessor& Modifier)"
  },
  {
    "label": "OnStrainModification_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStrainModification_Internal(Modifier)"
  },
  {
    "label": "ContactModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ContactModification_Internal(FCollisionContactModifier& Modifier)"
  },
  {
    "label": "OnContactModification_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnContactModification_Internal(Modifier)"
  },
  {
    "label": "PreSolve_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PreSolve_Internal()"
  },
  {
    "label": "OnPreSolve_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSolve_Internal()"
  },
  {
    "label": "PostSolve_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostSolve_Internal()"
  },
  {
    "label": "OnPostSolve_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSolve_Internal()"
  },
  {
    "label": "FinalizeOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FinalizeOutputData_Internal()"
  },
  {
    "label": "OnFinalizeOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinalizeOutputData_Internal(CurrentOutput_Internal)"
  },
  {
    "label": "FreeOutputData_External()",
    "kind": "Method",
    "detail": "Function (CurrentOutput_Internal = nullptr ; } } void)",
    "insertText": "FreeOutputData_External(FSimCallbackOutput* Output)"
  },
  {
    "label": "FreeInputData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeInputData_Internal(FSimCallbackInput* Input)"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (# if STATS TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "FStatGroup_STATGROUP_Chaos()",
    "kind": "Method",
    "detail": "Function (TStatId StatId = FDynamicStats::CreateStatId<)",
    "insertText": "FStatGroup_STATGROUP_Chaos(GetFNameForStatId())"
  },
  {
    "label": "GetFNameForStatId()",
    "kind": "Method",
    "detail": "Function (# else FName)",
    "insertText": "GetFNameForStatId()"
  },
  {
    "label": "StaticName()",
    "kind": "Method",
    "detail": "Function (const FLazyName)",
    "insertText": "StaticName(\"Untracked Physics Callback\")"
  },
  {
    "label": "ProcessInputs_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessInputs_Internal(int32 PhysicsStep)"
  },
  {
    "label": "ProcessInputs_External()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessInputs_External(int32 PhysicsStep)"
  },
  {
    "label": "TriggerRewindIfNeeded_Internal()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "TriggerRewindIfNeeded_Internal(int32 LastCompletedStep)"
  },
  {
    "label": "FirstPreResimStep_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FirstPreResimStep_Internal(int32 PhysicsStep)"
  },
  {
    "label": "HasOption()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasOption(const ESimCallbackOptions Option)"
  },
  {
    "label": "ISimCallbackObject()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "ISimCallbackObject(const ESimCallbackOptions InOptions = ESimCallbackOptions::Presimulate) : bPendingDelete(false) , bPendingDelete_External(false) , CurrentExternalInput_External(nullptr) , Solver(nullptr) , CurrentOutput_Internal(nullptr) , CurrentInput_Internal(nullptr) , Options(InOptions)"
  },
  {
    "label": "GetProducerInputData_External()",
    "kind": "Method",
    "detail": "Function (} FSimCallbackInput*)",
    "insertText": "GetProducerInputData_External()"
  },
  {
    "label": "SetCurrentInput_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentInput_Internal(FSimCallbackInput* NewInput)"
  },
  {
    "label": "SetSimAndDeltaTime_Internal()",
    "kind": "Method",
    "detail": "Function (CurrentInput_Internal = NewInput ; } void)",
    "insertText": "SetSimAndDeltaTime_Internal(const FReal InSimTime, const FReal InDeltaTime)"
  },
  {
    "label": "AllocateInputData_External()",
    "kind": "Method",
    "detail": "Function (SimTime_Internal = InSimTime ; DeltaTime_Internal = InDeltaTime ; } private : FSimCallbackInput*)",
    "insertText": "AllocateInputData_External()"
  },
  {
    "label": "OnMidPhaseModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnMidPhaseModification_Internal(FMidPhaseModifierAccessor& Modifier)"
  },
  {
    "label": "OnCCDModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCCDModification_Internal(FCCDModifierAccessor& Modifier)"
  },
  {
    "label": "OnStrainModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnStrainModification_Internal(FStrainModifierAccessor& Modifier)"
  },
  {
    "label": "OnContactModification_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnContactModification_Internal(FCollisionContactModifier& Modifier)"
  },
  {
    "label": "OnParticlesRegistered_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnParticlesRegistered_Internal(TArray<FSingleParticlePhysicsProxy*>& RegisteredProxies)"
  },
  {
    "label": "OnParticleUnregistered_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnParticleUnregistered_Internal(TArray<TTuple<Chaos::FUniqueIdx, FSingleParticlePhysicsProxy*>>& UnregisteredProxies)"
  },
  {
    "label": "OnPhysicsObjectUnregistered_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnPhysicsObjectUnregistered_Internal(FConstPhysicsObjectHandle PhysicsObject)"
  },
  {
    "label": "OnFinalizeOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnFinalizeOutputData_Internal(FSimCallbackOutput* CurOutput)"
  },
  {
    "label": "SetSolver_External()",
    "kind": "Method",
    "detail": "Function (} class FPBDRigidsSolver ; class FPhysicsSolverBase ; class FChaosMarshallingManager ; struct FPushPhysicsData ; bool bPendingDelete ; bool bPendingDelete_External ; FSimCallbackInput* CurrentExternalInput_External ; FPhysicsSolverBase* Solver ; void)",
    "insertText": "SetSolver_External(FPhysicsSolverBase* InSolver)"
  },
  {
    "label": "GetCurrentInput_Internal()",
    "kind": "Method",
    "detail": "Function (Options = Options | ESimCallbackOptions::ContactModification ; } protected : FSimCallbackOutput* CurrentOutput_Internal ; const FSimCallbackInput*)",
    "insertText": "GetCurrentInput_Internal()"
  },
  {
    "label": "FSimCallbackCommandObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSimCallbackCommandObject(TUniqueFunction<void(FReal DeltaTime, FReal SimTime)>&& InFunc) : Func(nullptr) , Func2(MoveTemp(InFunc)) , bFuncHasTimeParameters(true)"
  },
  {
    "label": "StaticName()",
    "kind": "Method",
    "detail": "Function (const FLazyName)",
    "insertText": "StaticName(\"FSimCallbackCommandObject\")"
  },
  {
    "label": "Func()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Func()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } else {)",
    "insertText": "if(ensureMsgf(Func2, TEXT(\"The function of this sim callback object became unbound. This should not happen. This command will not be executed.\")))"
  },
  {
    "label": "Func2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Func2(GetDeltaTime_Internal(), GetSimTime_Internal())"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} } } TUniqueFunction<)",
    "insertText": "void()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TUniqueFunction<)",
    "insertText": "void(FReal deltaTime, FReal SimTime)"
  },
  {
    "label": "TSimCallbackObject()",
    "kind": "Method",
    "detail": "Function (bool bFuncHasTimeParameters ; struct FSimCallbackInput ; } ; template<TInputType = FSimCallbackNoInput,TOutputType = FSimCallbackNoOutput,ESimCallbackOptions TOptions = ESimCallbackOptions::Presimulate> class TSimCallbackObject : public ISimCallbackObject { public :)",
    "insertText": "TSimCallbackObject() : ISimCallbackObject(TOptions) , CurrentOutput_External(nullptr)"
  },
  {
    "label": "TOutputType()",
    "kind": "Method",
    "detail": "Function (auto Concrete = static_cast<)",
    "insertText": "TOutputType(Output)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Concrete ->)",
    "insertText": "Reset()"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (OutputPool .)",
    "insertText": "Enqueue(Concrete)"
  },
  {
    "label": "GetConsumerInput_Internal()",
    "kind": "Method",
    "detail": "Function (} const TInputType*)",
    "insertText": "GetConsumerInput_Internal()"
  },
  {
    "label": "PopOutputData_External()",
    "kind": "Method",
    "detail": "Function (} TSimCallbackOutputHandle<TOutputType>)",
    "insertText": "PopOutputData_External()"
  },
  {
    "label": "GetSolverPhysicsResultsTime()",
    "kind": "Method",
    "detail": "Function (const FReal ResultsTime =)",
    "insertText": "GetSolverPhysicsResultsTime(GetSolver())"
  },
  {
    "label": "Dequeue()",
    "kind": "Method",
    "detail": "Function (OutputQueue .)",
    "insertText": "Dequeue(CurrentOutput_External)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(CurrentOutput_External && CurrentOutput_External->InternalTime <= ResultsTime)"
  },
  {
    "label": "TOutputType()",
    "kind": "Method",
    "detail": "Function (TOutputType* Output = CurrentOutput_External ; CurrentOutput_External = nullptr ; return TSimCallbackOutputHandle<)",
    "insertText": "TOutputType(Output, this)"
  },
  {
    "label": "TOutputType()",
    "kind": "Method",
    "detail": "Function (} else { return TSimCallbackOutputHandle<)",
    "insertText": "TOutputType()"
  },
  {
    "label": "PopFutureOutputData_External()",
    "kind": "Method",
    "detail": "Function (} } TSimCallbackOutputHandle<TOutputType>)",
    "insertText": "PopFutureOutputData_External()"
  },
  {
    "label": "IsOutputQueueEmpty_External()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsOutputQueueEmpty_External()"
  },
  {
    "label": "GetProducerOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (} TOutputType&)",
    "insertText": "GetProducerOutputData_Internal()"
  },
  {
    "label": "NewOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (CurrentOutput_Internal =)",
    "insertText": "NewOutputData_Internal(GetSimTime_Internal())"
  },
  {
    "label": "TOutputType()",
    "kind": "Method",
    "detail": "Function (} return static_cast<)",
    "insertText": "TOutputType(*CurrentOutput_Internal)"
  },
  {
    "label": "NewOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (} private : TOutputType*)",
    "insertText": "NewOutputData_Internal(const FReal InternalTime)"
  },
  {
    "label": "NewDataHelper()",
    "kind": "Method",
    "detail": "Function (auto NewOutput =)",
    "insertText": "NewDataHelper(OutputBacking, OutputPool)"
  },
  {
    "label": "NewDataHelper()",
    "kind": "Method",
    "detail": "Function (NewOutput -> InternalTime = InternalTime ; return NewOutput ; } template<T> T*)",
    "insertText": "NewDataHelper(TArray<TUniquePtr<T>>& Backing, TQueue<T*, EQueueMode::Spsc>& Queue)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (T* Result ;)",
    "insertText": "if(!Queue.Dequeue(Result))"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (Backing .)",
    "insertText": "Emplace(new T())"
  },
  {
    "label": "Last()",
    "kind": "Method",
    "detail": "Function (Result = Backing .)",
    "insertText": "Last().Get()"
  },
  {
    "label": "TInputType()",
    "kind": "Method",
    "detail": "Function (auto Concrete = static_cast<)",
    "insertText": "TInputType(Input)"
  },
  {
    "label": "NewInputData_External()",
    "kind": "Method",
    "detail": "Function (} TInputType*)",
    "insertText": "NewInputData_External()"
  },
  {
    "label": "OnFinalizeOutputData_Internal()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnFinalizeOutputData_Internal(FSimCallbackOutput* BaseOutput)"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (OutputQueue .)",
    "insertText": "Enqueue(static_cast<TOutputType*>(BaseOutput))"
  },
  {
    "label": "Release_Internal()",
    "kind": "Method",
    "detail": "Function (} TQueue<TInputType*,EQueueMode::Spsc> InputPool ; TArray<TUniquePtr<TInputType>> InputBacking ; TQueue<TOutputType*,EQueueMode::Spsc> OutputPool ; TArray<TUniquePtr<TOutputType>> OutputBacking ; TQueue<TOutputType*,EQueueMode::Spsc> OutputQueue ; TOutputType* CurrentOutput_External ; } ; struct FSimCallbackInputAndObject { ISimCallbackObject* CallbackObject ; FSimCallbackInput* Input ; } ; void)",
    "insertText": "Release_Internal(ISimCallbackObject& CallbackObj)"
  },
  {
    "label": "FreeInputData_Internal()",
    "kind": "Method",
    "detail": "Function (CallbackObj .)",
    "insertText": "FreeInputData_Internal(this)"
  },
  {
    "label": "Free_External()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Free_External()"
  },
  {
    "label": "FreeOutputData_External()",
    "kind": "Method",
    "detail": "Function (SimCallbackObject ->)",
    "insertText": "FreeOutputData_External(SimCallbackOutput)"
  }
]