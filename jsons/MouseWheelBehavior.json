[
  {
    "label": "IMouseWheelBehaviorTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMouseWheelBehaviorTarget"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FInputDeviceState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputDeviceState"
  },
  {
    "label": "UMouseWheelInputBehavior",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMouseWheelInputBehavior"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BaseBehaviors / AnyButtonInputBehavior . h \" # include \" CoreMinimal . h \" # include \" InputBehavior . h \" # include \" InputBehaviorModifierStates . h \" # include \" Templates / Function . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" MouseWheelBehavior . generated . h \" class IMouseWheelBehaviorTarget ; class UObject ; struct FInputDeviceState ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API UMouseWheelInputBehavior()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IMouseWheelBehaviorTarget* Target)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "bool(const FInputDeviceState&)"
  },
  {
    "label": "WantsCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureRequest)",
    "insertText": "WantsCapture(const FInputDeviceState& Input)"
  },
  {
    "label": "BeginCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "BeginCapture(const FInputDeviceState& Input, EInputCaptureSide eSide)"
  },
  {
    "label": "UpdateCapture()",
    "kind": "Method",
    "detail": "Function (FInputCaptureUpdate)",
    "insertText": "UpdateCapture(const FInputDeviceState& Input, const FInputCaptureData& Data)"
  },
  {
    "label": "ForceEndCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceEndCapture(const FInputCaptureData& Data)"
  }
]