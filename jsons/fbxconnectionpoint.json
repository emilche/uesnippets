[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "FbxConnectionPointFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxConnectionPointFilter"
  },
  {
    "label": "EDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDirection"
  },
  {
    "label": "EAttribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAttribute"
  },
  {
    "label": "EAllocFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAllocFlag"
  },
  {
    "label": "ECleanedFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECleanedFlag"
  },
  {
    "label": "EEvent",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEvent"
  },
  {
    "label": "ConnectionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConnectionList"
  },
  {
    "label": "Connection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Connection"
  },
  {
    "label": "FbxConnectionPoint()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_CONNECTION_POINT_H_ # define _FBXSDK_CORE_CONNECTION_POINT_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxarray . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxConnection { public : enum EType { eNone = 0,eSystem = 1<<0,eUser = 1<<1,eSystemOrUser = eUser | eSystem,eReference = 1<<2,eContains = 1<<3,eData = 1<<4,eLinkType = eReference | eContains | eData,eDefault = eUser | eReference,eUnidirectional = 1<<7 } ; } ; class FbxConnectionPointFilter ; class FBXSDK_DLL FbxConnectionPoint { public : enum EDirection { eDirSrc = 1<<0,eDirDst = 1<<1,eDirUni = 1<<2,eDirBoth = eDirSrc | eDirDst,eDirMask = eDirSrc | eDirDst | eDirUni } ; enum EType { eStandard = 0,eSubConnection = 1<<3,eTypeMask = eSubConnection } ; enum EAttribute { eDefault = 0,eCache = 1<<4,eAttributeMask = eCache } ; enum EAllocFlag { eNotAllocated = 0,eAllocated = 1<<5,eAllocFlagMask = eAllocated } ; enum ECleanedFlag { eNotCleaned = 0,eCleaned = 1<<6,eCleanedFlagMask = eCleaned } ; enum EEvent { eSrcConnectRequest,eDstConnectRequest,eSrcConnect,eDstConnect,eSrcConnected,eDstConnected,eSrcDisconnect,eDstDisconnect,eSrcDisconnected,eDstDisconnected,eSrcReplaceBegin,eSrcReplaceEnd,eDstReplaceBegin,eDstReplaceEnd,eSrcReorder,eSrcReordered } ;)",
    "insertText": "FbxConnectionPoint(void* pData=0)"
  },
  {
    "label": "FbxConnectionPoint()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxConnectionPoint()"
  },
  {
    "label": "SetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilter(FbxConnectionPointFilter* pConnectFilter, EType pType=eStandard)"
  },
  {
    "label": "InternalClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalClear()"
  },
  {
    "label": "WipeConnectionList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WipeConnectionList()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "SubConnectRemoveAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubConnectRemoveAll()"
  },
  {
    "label": "GetSubOwnerConnect()",
    "kind": "Method",
    "detail": "Function (FbxConnectionPoint*)",
    "insertText": "GetSubOwnerConnect()"
  },
  {
    "label": "GetFilter()",
    "kind": "Method",
    "detail": "Function (} FbxConnectionPointFilter*)",
    "insertText": "GetFilter()"
  },
  {
    "label": "SetConnectType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConnectType(EType pType)"
  },
  {
    "label": "mFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mFlags(mFlags & ~eTypeMask)"
  },
  {
    "label": "GetConnectType()",
    "kind": "Method",
    "detail": "Function (} EType)",
    "insertText": "GetConnectType()"
  },
  {
    "label": "SetDirection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDirection(int pDirections)"
  },
  {
    "label": "mFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mFlags(mFlags & ~eDirMask)"
  },
  {
    "label": "GetDirection()",
    "kind": "Method",
    "detail": "Function (} EDirection)",
    "insertText": "GetDirection()"
  },
  {
    "label": "SetAttribute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAttribute(int pAttributes)"
  },
  {
    "label": "mFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mFlags(mFlags & ~eAttributeMask)"
  },
  {
    "label": "GetAttribute()",
    "kind": "Method",
    "detail": "Function (} EAttribute)",
    "insertText": "GetAttribute()"
  },
  {
    "label": "SetAllocatedFlag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAllocatedFlag(bool pBool)"
  },
  {
    "label": "mFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mFlags(pBool)"
  },
  {
    "label": "GetAllocatedFlag()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetAllocatedFlag()"
  },
  {
    "label": "SetCleanedFlag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCleanedFlag(bool pBool)"
  },
  {
    "label": "GetCleanedFlag()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetCleanedFlag()"
  },
  {
    "label": "IsValidSrc()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidSrc(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "IsValidDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidDst(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "IsValidSrcConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidSrcConnection(FbxConnectionPoint* pConnect, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "IsValidDstConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidDstConnection(FbxConnectionPoint* pConnect, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "RequestValidSrcConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestValidSrcConnection(FbxConnectionPoint* pConnect, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "RequestValidDstConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestValidDstConnection(FbxConnectionPoint* pConnect, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "ConnectSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectSrc(FbxConnectionPoint* pSrc,FbxConnection::EType pConnectionType=FbxConnection::eNone)"
  },
  {
    "label": "ConnectDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectDst(FbxConnectionPoint* pDst,FbxConnection::EType pConnectionType=FbxConnection::eNone)"
  },
  {
    "label": "ConnectSrcAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectSrcAt(int pDst_SrcIndex, FbxConnectionPoint* pSrc, FbxConnection::EType pConnectionType=FbxConnection::eNone)"
  },
  {
    "label": "ConnectDstAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectDstAt(int pSrc_DstIndex, FbxConnectionPoint* pDst, FbxConnection::EType pConnectionType=FbxConnection::eNone)"
  },
  {
    "label": "ConnectConnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectConnect(FbxConnectionPoint* pSrc,FbxConnectionPoint* pDst,FbxConnection::EType pConnectionType)"
  },
  {
    "label": "ConnectAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectAt(FbxConnectionPoint* pSrc, int pSrc_DstIndex, FbxConnectionPoint* pDst, int pDst_SrcIndex, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "DisconnectDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectDst(FbxConnectionPoint* pSrc)"
  },
  {
    "label": "DisconnectSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectSrc(FbxConnectionPoint* pSrc)"
  },
  {
    "label": "DisconnectAllSrc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisconnectAllSrc()"
  },
  {
    "label": "DisconnectAllDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisconnectAllDst()"
  },
  {
    "label": "DisconnectConnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectConnect(FbxConnectionPoint* pSrc,FbxConnectionPoint* pDst)"
  },
  {
    "label": "DisconnectDstAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectDstAt(int pIndex)"
  },
  {
    "label": "DisconnectSrcAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectSrcAt(int pIndex)"
  },
  {
    "label": "ReplaceInDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceInDst(FbxConnectionPoint* pDstOld, FbxConnectionPoint* pDstNew, int pIndexInNew)"
  },
  {
    "label": "ReplaceInSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceInSrc(FbxConnectionPoint* pSrcOld, FbxConnectionPoint* pSrcNew, int pIndexInNew)"
  },
  {
    "label": "ReplaceDstAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceDstAt(int pIndex, FbxConnectionPoint* pDst)"
  },
  {
    "label": "ReplaceSrcAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceSrcAt(int pIndex, FbxConnectionPoint* pSrc)"
  },
  {
    "label": "SwapSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SwapSrc(int pIndexA, int pIndexB)"
  },
  {
    "label": "MoveSrcAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveSrcAt(int pIndex, int pAtIndex)"
  },
  {
    "label": "MoveSrcAt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveSrcAt(FbxConnectionPoint* pSrc, FbxConnectionPoint* pAtSrc)"
  },
  {
    "label": "IsConnectedSrc()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedSrc(FbxConnectionPoint*)"
  },
  {
    "label": "IsConnectedDst()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectedDst(FbxConnectionPoint*)"
  },
  {
    "label": "IsConnected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnected(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "GetSrcCount()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetSrcCount()"
  },
  {
    "label": "GetSrc()",
    "kind": "Method",
    "detail": "Function (} FbxConnectionPoint*)",
    "insertText": "GetSrc(int pIndex)"
  },
  {
    "label": "GetSrcType()",
    "kind": "Method",
    "detail": "Function (} FbxConnection::EType)",
    "insertText": "GetSrcType(int pIndex)"
  },
  {
    "label": "GetDstCount()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetDstCount()"
  },
  {
    "label": "GetDst()",
    "kind": "Method",
    "detail": "Function (} FbxConnectionPoint*)",
    "insertText": "GetDst(int pIndex)"
  },
  {
    "label": "GetDstType()",
    "kind": "Method",
    "detail": "Function (} FbxConnection::EType)",
    "insertText": "GetDstType(int pIndex)"
  },
  {
    "label": "FindSrc()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "FindSrc(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "FindDst()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "FindDst(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "GetSrcCount()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetSrcCount(FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "GetSrc()",
    "kind": "Method",
    "detail": "Function (} FbxConnectionPoint*)",
    "insertText": "GetSrc(int pIndex,FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "GetSrcType()",
    "kind": "Method",
    "detail": "Function (} FbxConnection::EType)",
    "insertText": "GetSrcType(int pIndex,FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "GetDstCount()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "GetDstCount(FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "GetDst()",
    "kind": "Method",
    "detail": "Function (} FbxConnectionPoint*)",
    "insertText": "GetDst(int pIndex,FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "GetDstType()",
    "kind": "Method",
    "detail": "Function (} FbxConnection::EType)",
    "insertText": "GetDstType(int pIndex,FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "GetData()"
  },
  {
    "label": "ConnectionList()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ConnectionList()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "InsertSrcAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertSrcAt(int pIndex, FbxConnectionPoint* pConnect, FbxConnection::EType pType)"
  },
  {
    "label": "AddSrc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSrc(FbxConnectionPoint* pConnect, FbxConnection::EType pType)"
  },
  {
    "label": "RemoveSrcAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSrcAt(int pIndex)"
  },
  {
    "label": "InsertDstAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertDstAt(int pIndex, FbxConnectionPoint* pConnect, FbxConnection::EType pType)"
  },
  {
    "label": "AddDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDst(FbxConnectionPoint* pConnect, FbxConnection::EType pType)"
  },
  {
    "label": "RemoveDstAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDstAt(int pIndex)"
  },
  {
    "label": "Connection()",
    "kind": "Method",
    "detail": "Function (protected : struct Connection {)",
    "insertText": "Connection(FbxConnectionPoint* pPoint, FbxConnection::EType pType) : mPoint(pPoint), mType(pType)"
  },
  {
    "label": "SubConnectAdd()",
    "kind": "Method",
    "detail": "Function (} FbxConnectionPoint* mPoint ; FbxConnection::EType mType ; } ; FbxArray<Connection> mSrcList ; FbxArray<Connection> mDstList ; } ; void)",
    "insertText": "SubConnectAdd(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "SubConnectRemove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubConnectRemove(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "SubConnectFind()",
    "kind": "Method",
    "detail": "Function (FbxConnectionPoint*)",
    "insertText": "SubConnectFind(FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "SubConnectGetOrCreate()",
    "kind": "Method",
    "detail": "Function (FbxConnectionPoint*)",
    "insertText": "SubConnectGetOrCreate(FbxConnectionPointFilter* pFilter)"
  },
  {
    "label": "SubConnectFill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubConnectFill(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "ConnectNotify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConnectNotify(EEvent pAction, FbxConnectionPoint* pThis, int pIndex, FbxConnectionPoint* pConnect=NULL, FbxConnection::EType pConnectionType=FbxConnection::eNone, FbxConnectionPoint* pNewConnect=NULL)"
  },
  {
    "label": "ConnectCleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectCleanUp(FbxConnectionPoint* pThis)"
  },
  {
    "label": "FindSrcIndexFromOwnerConnectIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FindSrcIndexFromOwnerConnectIndex(FbxConnectionPoint* pOwner, int pOwnerIndex)"
  },
  {
    "label": "FindDstIndexFromOwnerConnectIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FindDstIndexFromOwnerConnectIndex(FbxConnectionPoint* pOwner, int pOwnerIndex)"
  },
  {
    "label": "InternalMoveSrcBefore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalMoveSrcBefore(int pIndex, int pBeforeIndex)"
  },
  {
    "label": "InsertSrcAt()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InsertSrcAt(int pIndex, FbxConnectionPoint* pConnect, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "InsertSrcAt()",
    "kind": "Method",
    "detail": "Function (mConnectionList .)",
    "insertText": "InsertSrcAt(pIndex, pConnect, pConnectionType)"
  },
  {
    "label": "InsertDstAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InsertDstAt(int pIndex, FbxConnectionPoint* pConnect, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "InsertDstAt()",
    "kind": "Method",
    "detail": "Function (mConnectionList .)",
    "insertText": "InsertDstAt(pIndex, pConnect, pConnectionType)"
  },
  {
    "label": "RemoveSrcAt()",
    "kind": "Method",
    "detail": "Function (mConnectionList .)",
    "insertText": "RemoveSrcAt(pIndex)"
  },
  {
    "label": "RemoveDstAt()",
    "kind": "Method",
    "detail": "Function (mConnectionList .)",
    "insertText": "RemoveDstAt(pIndex)"
  },
  {
    "label": "InternalConnectBefore()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "InternalConnectBefore(FbxConnectionPoint* pSrc, FbxConnectionPoint* pSrc_BeforeDst, FbxConnectionPoint* pDst, FbxConnectionPoint* pDst_BeforeSrc, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "UserConnectBefore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UserConnectBefore(FbxConnectionPoint* pSrc, FbxConnectionPoint* pSrc_BeforeDst, FbxConnectionPoint* pDst, FbxConnectionPoint* pDst_BeforeSrc, FbxConnection::EType pConnectionType)"
  },
  {
    "label": "EmitReplaceNotify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EmitReplaceNotify(FbxConnectionPoint* pDstOwner, FbxConnectionPoint* pSrcOwner, FbxConnectionPoint* pDst, FbxConnectionPoint* pSrc, EEvent pConnectAction, FbxConnectionPoint* pNew)"
  },
  {
    "label": "SetOwnerConnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetOwnerConnect(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "GetOwnerConnect()",
    "kind": "Method",
    "detail": "Function (FbxConnectionPoint*)",
    "insertText": "GetOwnerConnect()"
  },
  {
    "label": "DisconnectOwnedConnect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DisconnectOwnedConnect(FbxConnectionPoint* pConnect)"
  },
  {
    "label": "FbxConnectionPointFilter()",
    "kind": "Method",
    "detail": "Function (void* mData ; FbxConnectionPoint* mOwner ; FbxConnectionPointFilter* mFilter ; ConnectionList mConnectionList ; FbxArray<FbxConnectionPoint*> mSubConnectList ; FbxArray<FbxConnectionPoint*> mSubConnectCreatedList ; int mFlags ; # endif } ; class FBXSDK_DLL FbxConnectionPointFilter { public : ~)",
    "insertText": "FbxConnectionPointFilter()"
  },
  {
    "label": "Ref()",
    "kind": "Method",
    "detail": "Function (} ; FbxConnectionPointFilter*)",
    "insertText": "Ref()"
  },
  {
    "label": "Unref()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unref()"
  },
  {
    "label": "GetUniqueId()",
    "kind": "Method",
    "detail": "Function (FbxInt)",
    "insertText": "GetUniqueId()"
  },
  {
    "label": "IsValidConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidConnection(FbxConnectionPoint* pConnect, FbxConnection::EType pType)"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEqual(FbxConnectionPointFilter* pConnectFilter)"
  }
]