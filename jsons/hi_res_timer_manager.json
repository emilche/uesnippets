[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "HighResolutionTimerManager()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TIMER_HI_RES_TIMER_MANAGER_H_ # define BASE_TIMER_HI_RES_TIMER_MANAGER_H_ # include \" base / base_export . h \" # include \" base / power_monitor / power_observer . h \" # include \" base / timer / timer . h \" # include \" build / build_config . h \" namespace base { class BASE_EXPORT HighResolutionTimerManager : public base::PowerSuspendObserver,public base::PowerStateObserver { public :)",
    "insertText": "HighResolutionTimerManager()"
  },
  {
    "label": "HighResolutionTimerManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighResolutionTimerManager(const HighResolutionTimerManager&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (HighResolutionTimerManager&)",
    "insertText": "operator(const HighResolutionTimerManager&)"
  },
  {
    "label": "OnPowerStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPowerStateChange(bool on_battery_power)"
  },
  {
    "label": "OnSuspend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSuspend()"
  },
  {
    "label": "OnResume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResume()"
  },
  {
    "label": "hi_res_clock_available()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hi_res_clock_available()"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (bool hi_res_clock_available_ ; # if)",
    "insertText": "BUILDFLAG(IS_WIN)"
  }
]