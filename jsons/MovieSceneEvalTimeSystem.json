[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrameTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameTime"
  },
  {
    "label": "FEvaluatedTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvaluatedTime"
  },
  {
    "label": "UMovieSceneEvalTimeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEvalTimeSystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" Misc / FrameTime . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneEvalTimeSystem . generated . h \" class UObject ; struct FFrameTime ; namespace UE::MovieScene { struct FEvaluatedTime { FFrameTime FrameTime ; double Seconds ; } ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API UMovieSceneEvalTimeSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "IsRelevantImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRelevantImpl(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  }
]