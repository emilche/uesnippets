[
  {
    "label": "RtcpTransceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcpTransceiver"
  },
  {
    "label": "RtcpTransceiver()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_TRANSCEIVER_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_TRANSCEIVER_H_ # include<memory> # include<string> # include<vector> # include \" absl / functional / any_invocable . h \" # include \" api / task_queue / task_queue_base . h \" # include \" modules / rtp_rtcp / source / rtcp_transceiver_config . h \" # include \" modules / rtp_rtcp / source / rtcp_transceiver_impl . h \" # include \" rtc_base / copy_on_write_buffer . h \" # include \" system_wrappers / include / clock . h \" namespace webrtc { class RtcpTransceiver : public RtcpFeedbackSenderInterface { public :)",
    "insertText": "RtcpTransceiver(const RtcpTransceiverConfig& config)"
  },
  {
    "label": "RtcpTransceiver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtcpTransceiver(const RtcpTransceiver&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtcpTransceiver&)",
    "insertText": "operator(const RtcpTransceiver&)"
  },
  {
    "label": "RtcpTransceiver()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtcpTransceiver()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(absl::AnyInvocable<void() &&> on_destroyed)"
  },
  {
    "label": "AddMediaReceiverRtcpObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMediaReceiverRtcpObserver(uint32_t remote_ssrc, MediaReceiverRtcpObserver* observer)"
  },
  {
    "label": "RemoveMediaReceiverRtcpObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMediaReceiverRtcpObserver(uint32_t remote_ssrc, MediaReceiverRtcpObserver* observer, absl::AnyInvocable<void() &&> on_removed)"
  },
  {
    "label": "SetReadyToSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReadyToSend(bool ready)"
  },
  {
    "label": "ReceivePacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivePacket(rtc::CopyOnWriteBuffer packet)"
  },
  {
    "label": "SendCompoundPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCompoundPacket()"
  },
  {
    "label": "SetRemb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemb(int64_t bitrate_bps, std::vector<uint32_t> ssrcs)"
  },
  {
    "label": "UnsetRemb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnsetRemb()"
  },
  {
    "label": "SendCombinedRtcpPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCombinedRtcpPacket(std::vector<std::unique_ptr<rtcp::RtcpPacket>> rtcp_packets)"
  },
  {
    "label": "SendNack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendNack(uint32_t ssrc, std::vector<uint16_t> sequence_numbers)"
  },
  {
    "label": "SendPictureLossIndication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPictureLossIndication(uint32_t ssrc)"
  },
  {
    "label": "SendFullIntraRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendFullIntraRequest(std::vector<uint32_t> ssrcs)"
  },
  {
    "label": "SendFullIntraRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendFullIntraRequest(std::vector<uint32_t> ssrcs, bool new_request)"
  }
]