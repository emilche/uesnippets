[
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "FPhysicsAssetEditorSkeletonTreeBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAssetEditorSkeletonTreeBuilder"
  },
  {
    "label": "ISkeletonTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTreeItem"
  },
  {
    "label": "FPhysicsAssetEditorSkeletonTreeBuilder()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SkeletonTreeBuilder . h \" class UPhysicsAsset ; class FPhysicsAssetEditorSkeletonTreeBuilder : public FSkeletonTreeBuilder { public :)",
    "insertText": "FPhysicsAssetEditorSkeletonTreeBuilder(UPhysicsAsset* InPhysicsAsset, const FSkeletonTreeBuilderArgs& InSkeletonTreeBuilderArgs = FSkeletonTreeBuilderArgs(true, false, true, false))"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(FSkeletonTreeBuilderOutput& Output)"
  },
  {
    "label": "FilterItem()",
    "kind": "Method",
    "detail": "Function (ESkeletonTreeFilterResult)",
    "insertText": "FilterItem(const FSkeletonTreeFilterArgs& InArgs, const TSharedPtr<class ISkeletonTreeItem>& InItem)"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (bool bShowBodies ; bool bShowKinematicBodies ; bool bShowSimulatedBodies ; bool bShowConstraints ; bool bShowConstraintsOnParentBodies ; bool bShowPrimitives ; private : void)",
    "insertText": "AddBodies(FSkeletonTreeBuilderOutput& Output)"
  }
]