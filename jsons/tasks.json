[
  {
    "label": "TaskOrder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskOrder"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "WakeUp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WakeUp"
  },
  {
    "label": "WorkDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WorkDetails"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "PostedTask()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "PostedTask(scoped_refptr<SequencedTaskRunner> task_runner,\n                      OnceClosure callback,\n                      Location location,\n                      TimeTicks delayed_run_time,\n                      subtle::DelayPolicy delay_policy,\n                      Nestable nestable = Nestable::kNestable,\n                      TaskType task_type = kTaskTypeNone,\n                      WeakPtr<DelayedTaskHandleDelegate>\n                          delayed_task_handle_delegate = nullptr)"
  },
  {
    "label": "SetHeapHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeapHandle(HeapHandle heap_handle)"
  },
  {
    "label": "ClearHeapHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHeapHandle()"
  },
  {
    "label": "WillRunTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WillRunTask()"
  }
]