[
  {
    "label": "FLatentDrawCommand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatentDrawCommand"
  },
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "IChaosDDRenderer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" # include \" ChaosDebugDraw / ChaosDDTypes . h \" # if CHAOS_DEBUG_DRAW namespace Chaos { struct FLatentDrawCommand ; } namespace ChaosDD::Private { class IChaosDDRenderer { public :)",
    "insertText": "IChaosDDRenderer()"
  },
  {
    "label": "IsServer()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsServer()"
  },
  {
    "label": "GetDrawRegion()",
    "kind": "Method",
    "detail": "Function (FSphere3d)",
    "insertText": "GetDrawRegion()"
  },
  {
    "label": "RenderPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPoint(const FVector3d& Position, const FColor& Color, float PointSize, float Lifetime)"
  },
  {
    "label": "RenderLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLine(const FVector3d& A, const FVector3d& B, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderArrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderArrow(const FVector3d& A, const FVector3d& B, float ArrowSize, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderCircle(const FVector3d& Center, const FMatrix& Axes, float Radius, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderSphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSphere(const FVector3d& Center, float Radius, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderCapsule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderCapsule(const FVector3d& Center, const FQuat4d& Rotation, float HalfHeight, float Radius, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderBox(const FVector3d& Position, const FQuat4d& Rotation, const FVector3d& Size, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderTriangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderTriangle(const FVector3d& A, const FVector3d& B, const FVector3d& C, const FColor& Color, float LineThickness, float Lifetime)"
  },
  {
    "label": "RenderString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderString(const FVector3d& TextLocation, const FString& Text, const FColor& Color, float FontScale, bool bDrawShadow, float Lifetime)"
  },
  {
    "label": "RenderLatentCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLatentCommand(const Chaos::FLatentDrawCommand& Command)"
  }
]