[
  {
    "label": "FBodySetupUVInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodySetupUVInfo"
  },
  {
    "label": "FCookBodySetupInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookBodySetupInfo"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "FChaosArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosArchive"
  },
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FTriangleMeshImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMeshImplicitObject"
  },
  {
    "label": "FChaosTriMeshCollisionBuildParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosTriMeshCollisionBuildParameters"
  },
  {
    "label": "FChaosConvexMeshCollisionBuildParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChaosConvexMeshCollisionBuildParameters"
  },
  {
    "label": "FChaosDerivedDataCooker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDerivedDataCooker"
  },
  {
    "label": "FChaosDerivedDataCookerRefHolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosDerivedDataCookerRefHolder"
  },
  {
    "label": "GetPluginName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DerivedDataPluginInterface . h \" # include \" UObject / GCObject . h \" # include \" Interface_CollisionDataProviderCore . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / ObjectPtr . h \" struct FBodySetupUVInfo ; struct FCookBodySetupInfo ; class UBodySetup ; namespace Chaos { class FChaosArchive ; class FImplicitObject ; class FTriangleMeshImplicitObject ; } struct FChaosTriMeshCollisionBuildParameters { bool bCollapseVerts ; FTriMeshCollisionData MeshDesc ; FBodySetupUVInfo* UVInfo ; } ; struct FChaosConvexMeshCollisionBuildParameters { bool bCollapseVerts ; bool bMirror ; } ; class FChaosDerivedDataCooker : public FDerivedDataPluginInterface { public : using BuildPrecision = float ; const TCHAR*)",
    "insertText": "GetPluginName()"
  },
  {
    "label": "GetVersionString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetVersionString()"
  },
  {
    "label": "GetPluginSpecificCacheKeySuffix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPluginSpecificCacheKeySuffix()"
  },
  {
    "label": "IsBuildThreadsafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBuildThreadsafe()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Build(TArray<uint8>& OutData)"
  },
  {
    "label": "GetDebugContextString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugContextString()"
  },
  {
    "label": "FChaosDerivedDataCooker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChaosDerivedDataCooker(UBodySetup* InSetup, FName InFormat, bool bUseRefHolder = true)"
  },
  {
    "label": "CanBuild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBuild()"
  }
]