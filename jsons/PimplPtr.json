[
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "member",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "member"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TPimplPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPimplPtr"
  },
  {
    "label": "TPimplHeapObjectImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPimplHeapObjectImpl"
  },
  {
    "label": "TPimplHeapObjectImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPimplHeapObjectImpl"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "in"
  },
  {
    "label": "TPimplPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPimplPtr"
  },
  {
    "label": "TPimplPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPimplPtr"
  },
  {
    "label": "TPimplPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPimplPtr"
  },
  {
    "label": "FHeapType()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FHeapType(A)"
  },
  {
    "label": "MakePimpl()",
    "kind": "Method",
    "detail": "Function (M>)",
    "insertText": "MakePimpl(ArgTypes&&... Args)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValid()"
  },
  {
    "label": "MakePimpl()",
    "kind": "Method",
    "detail": "Function (M>)",
    "insertText": "MakePimpl(ArgTypes&&... Args)"
  }
]