[
  {
    "label": "FArrayProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrayProperty"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FSequencerKeyStructGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerKeyStructGenerator"
  },
  {
    "label": "FStructProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructProperty"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "type"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "by",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "by"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "instance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "instance"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "instance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "instance"
  },
  {
    "label": "instance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "instance"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "properties",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "properties"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "if"
  },
  {
    "label": "FinalizeNewKeyStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeNewKeyStruct(UMovieSceneKeyStructType* InStruct)"
  },
  {
    "label": "AddGeneratedStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGeneratedStruct(FName InstancedStructName, UMovieSceneKeyStructType* Struct)"
  },
  {
    "label": "CreateKeyStructInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FStructOnScope>)",
    "insertText": "CreateKeyStructInstance(const TMovieSceneChannelHandle<ChannelType>& ChannelHandle, FKeyHandle InHandle)"
  },
  {
    "label": "CreateInitialStructInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FStructOnScope>)",
    "insertText": "CreateInitialStructInstance(const void* SourceChannel, UMovieSceneKeyStructType* GeneratedStructType, int32 InitialKeyIndex)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"FSequencerKeyStructGenerator\")"
  },
  {
    "label": "CopyInstanceToKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyInstanceToKey(const TMovieSceneChannelHandle<ChannelType>& DestChannelHandle, FKeyHandle DestHandle, FStructOnScope* SourceInstance)"
  }
]