[
  {
    "label": "FLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxy"
  },
  {
    "label": "ULocalLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalLightComponent"
  },
  {
    "label": "FLightmassPointLightSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightmassPointLightSettings"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" Components / LightComponent . h \" # include \" LocalLightComponent . generated . h \" class FLightSceneProxy ;)",
    "insertText": "UCLASS(abstract, ClassGroup=(Lights,Common), hidecategories=(Object, LightShafts), editinlinenew, meta=(BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, BlueprintReadOnly, Category=Light, meta=(DisplayName=\"Intensity Units\", EditCondition=\"!bUseIESBrightness\"))"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "AffectsBounds()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "AffectsBounds(const FBoxSphereBounds& InBounds)"
  },
  {
    "label": "GetLightPosition()",
    "kind": "Method",
    "detail": "Function (FVector4)",
    "insertText": "GetLightPosition()"
  },
  {
    "label": "GetBoundingBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetBoundingBox()"
  },
  {
    "label": "GetBoundingSphere()",
    "kind": "Method",
    "detail": "Function (FSphere)",
    "insertText": "GetBoundingSphere()"
  },
  {
    "label": "GetLightmassSettings()",
    "kind": "Method",
    "detail": "Function (FLightmassLightSettings)",
    "insertText": "GetLightmassSettings()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PushRadiusToRenderThread()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "PushRadiusToRenderThread()"
  }
]