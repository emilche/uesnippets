[
  {
    "label": "FErrorReporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FErrorReporter"
  },
  {
    "label": "FKLevelSetElem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKLevelSetElem"
  },
  {
    "label": "FMTDInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMTDInfo"
  },
  {
    "label": "FTriangleMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMesh"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TPlane",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPlane"
  },
  {
    "label": "FCapsule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCapsule"
  },
  {
    "label": "FConvex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConvex"
  },
  {
    "label": "FLevelSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelSet"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FLevelSet()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FLevelSet(FErrorReporter& ErrorReporter, const TUniformGrid<FReal, 3>& InGrid, const FParticles& InParticles, const FTriangleMesh& Mesh, const int32 BandWidth = 0)"
  },
  {
    "label": "FLevelSet()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FLevelSet(FErrorReporter& ErrorReporter, const TUniformGrid<FReal, 3>& InGrid, const FImplicitObject& InObject, const int32 BandWidth = 0, const bool bUseObjectPhi = false)"
  },
  {
    "label": "FLevelSet()",
    "kind": "Method",
    "detail": "Function (COMPILE_WITHOUT_UNREAL_SUPPORT)",
    "insertText": "FLevelSet(std::istream& Stream)"
  },
  {
    "label": "FLevelSet()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FLevelSet(TUniformGrid<FReal, 3>&& Grid, TArrayND<FReal, 3>&& Phi, int32 BandWidth)"
  },
  {
    "label": "FLevelSet()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FLevelSet(FLevelSet&& Other)"
  },
  {
    "label": "ComputeLevelSetError()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "ComputeLevelSetError(const FParticles& InParticles, const TArray<FVec3>& Normals, const FTriangleMesh& Mesh, FReal& AngleError, FReal& MaxDistError)"
  },
  {
    "label": "OutputDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OutputDebugData(FErrorReporter& ErrorReporter, const FParticles& InParticles, const TArray<FVec3>& Normals, const FTriangleMesh& Mesh, const FString FileName)"
  },
  {
    "label": "CheckData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckData(FErrorReporter& ErrorReporter, const FParticles& InParticles, const FTriangleMesh& Mesh, const TArray<FVec3> &Normals)"
  },
  {
    "label": "ComputeDistancesNearZeroIsocontour()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeDistancesNearZeroIsocontour(FErrorReporter& ErrorReporter, const FParticles& InParticles, const TArray<FVec3> &Normals, const FTriangleMesh& Mesh, TArrayND<bool, 3>& BlockedFaceX, TArrayND<bool, 3>& BlockedFaceY, TArrayND<bool, 3>& BlockedFaceZ, TArray<TVec3<int32>>& InterfaceIndices)"
  },
  {
    "label": "ComputeDistancesNearZeroIsocontour()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeDistancesNearZeroIsocontour(const FImplicitObject& Object, const TArrayND<FReal, 3>& ObjectPhi, TArray<TVec3<int32>>& InterfaceIndices)"
  },
  {
    "label": "CorrectSign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CorrectSign(const TArrayND<bool, 3>& BlockedFaceX, const TArrayND<bool, 3>& BlockedFaceY, const TArrayND<bool, 3>& BlockedFaceZ, TArray<TVec3<int32>>& InterfaceIndices)"
  },
  {
    "label": "ComputePhi()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "ComputePhi(const TArrayND<bool, 3>& Done, const TVec3<int32>& CellIndex)"
  },
  {
    "label": "FillWithFastMarchingMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillWithFastMarchingMethod(const FReal StoppingDistance, const TArray<TVec3<int32>>& InterfaceIndices)"
  },
  {
    "label": "FloodFill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FloodFill(const TArrayND<bool, 3>& BlockedFaceX, const TArrayND<bool, 3>& BlockedFaceY, const TArrayND<bool, 3>& BlockedFaceZ, TArrayND<int32, 3>& Color, int32& NextColor)"
  },
  {
    "label": "FloodFillFromCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FloodFillFromCell(const TVec3<int32> CellIndex, const int32 NextColor, const TArrayND<bool, 3>& BlockedFaceX, const TArrayND<bool, 3>& BlockedFaceY, const TArrayND<bool, 3>& BlockedFaceZ, TArrayND<int32, 3>& Color)"
  },
  {
    "label": "IsIntersectingWithTriangle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIntersectingWithTriangle(const FParticles& Particles, const TVec3<int32>& Elements, const TPlane<FReal, 3>& TrianglePlane, const TVec3<int32>& CellIndex, const TVec3<int32>& PrevCellIndex)"
  },
  {
    "label": "ComputeNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNormals()"
  },
  {
    "label": "ComputeConvexity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeConvexity(const TArray<TVec3<int32>>& InterfaceIndices)"
  },
  {
    "label": "ComputeNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNormals(const FParticles& InParticles, const FTriangleMesh& Mesh, const TArray<TVec3<int32>>& InterfaceIndices)"
  }
]