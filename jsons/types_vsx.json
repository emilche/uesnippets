[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_DSP_PPC_TYPES_VSX_H_ # define VPX_VPX_DSP_PPC_TYPES_VSX_H_ # include<altivec . h> typedef vector signed char int8x16_t ; typedef vector unsigned char uint8x16_t ; typedef vector signed short int16x8_t ; typedef vector unsigned short uint16x8_t ; typedef vector signed int int32x4_t ; typedef vector unsigned int uint32x4_t ; typedef vector bool char bool8x16_t ; typedef vector bool short bool16x8_t ; typedef vector bool int bool32x4_t ; # if)",
    "insertText": "defined(__clang__)"
  },
  {
    "label": "xxpermdi()",
    "kind": "Method",
    "detail": "Function (0 x00,0 x01,0 x02,0 x03,0 x04,0 x05,0 x06,0 x07,0 x10,0 x11,0 x12,0 x13,0 x14,0 x15,0 x16,0 x17 } ; const uint8x16_t xxpermdi1_perm = { 0 x00,0 x01,0 x02,0 x03,0 x04,0 x05,0 x06,0 x07,0 x18,0 x19,0 x1A,0 x1B,0 x1C,0 x1D,0 x1E,0 x1F } ; const uint8x16_t xxpermdi2_perm = { 0 x08,0 x09,0 x0A,0 x0B,0 x0C,0 x0D,0 x0E,0 x0F,0 x10,0 x11,0 x12,0 x13,0 x14,0 x15,0 x16,0 x17 } ; const uint8x16_t xxpermdi3_perm = { 0 x08,0 x09,0 x0A,0 x0B,0 x0C,0 x0D,0 x0E,0 x0F,0 x18,0 x19,0 x1A,0 x1B,0 x1C,0 x1D,0 x1E,0 x1F } ; # define)",
    "insertText": "xxpermdi(a, b, c) vec_perm(a, b, xxpermdi##c##_perm) #elif defined(__GNUC__) && \\ (__GNUC__ > 6 || (__GNUC__ == 6 && __GNUC_MINOR__ >= 3)) #define xxpermdi(a, b, c) vec_xxpermdi(a, b, c) #endif #ifdef WORDS_BIGENDIAN #define unpack_to_u16_h(v) \\ (uint16x8_t) vec_mergeh(vec_splat_u8(0), (uint8x16_t)v) #define unpack_to_u16_l(v) \\ (uint16x8_t) vec_mergel(vec_splat_u8(0), (uint8x16_t)v) #define unpack_to_s16_h(v) \\ (int16x8_t) vec_mergeh(vec_splat_u8(0), (uint8x16_t)v) #define unpack_to_s16_l(v) \\ (int16x8_t) vec_mergel(vec_splat_u8(0), (uint8x16_t)v) #ifndef xxpermdi #define xxpermdi(a, b, c) vec_xxpermdi(a, b, c) #endif #else #define unpack_to_u16_h(v) \\ (uint16x8_t) vec_mergeh((uint8x16_t)v, vec_splat_u8(0)) #define unpack_to_u16_l(v) \\ (uint16x8_t) vec_mergel((uint8x16_t)v, vec_splat_u8(0)) #define unpack_to_s16_h(v) \\ (int16x8_t) vec_mergeh((uint8x16_t)v, vec_splat_u8(0)) #define unpack_to_s16_l(v) \\ (int16x8_t) vec_mergel((uint8x16_t)v, vec_splat_u8(0)) #ifndef xxpermdi #define xxpermdi(a, b, c) vec_xxpermdi(b, a, (((c) >> 1) | ((c)&1) << 1) ^ 3) #endif #endif static INLINE uint8x16_t read4x2(const uint8_t *a, int stride)"
  },
  {
    "label": "a0()",
    "kind": "Method",
    "detail": "Function (const uint32x4_t)",
    "insertText": "a0(uint32x4_t)vec_vsx_ld(0, a)"
  },
  {
    "label": "a1()",
    "kind": "Method",
    "detail": "Function (const uint32x4_t)",
    "insertText": "a1(uint32x4_t)vec_vsx_ld(0, a + stride)"
  },
  {
    "label": "vec_absd()",
    "kind": "Method",
    "detail": "Function (} # ifndef __POWER9_VECTOR__ # define)",
    "insertText": "vec_absd(a, b) vec_sub(vec_max(a, b), vec_min(a, b))"
  }
]