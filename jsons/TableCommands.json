[
  {
    "label": "FTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTable"
  },
  {
    "label": "ITableCellValueSorter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableCellValueSorter"
  },
  {
    "label": "TreeNodePtrType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeNodePtrType"
  },
  {
    "label": "ConvertNodes()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Algo / Transform . h \" # include \" InsightsCore / Table / ViewModels / BaseTreeNode . h \" # include \" InsightsCore / Table / ViewModels / TableCellValueSorter . h \" # include \" Templates / SharedPointer . h \" namespace UE::Insights { class FTable ; class ITableCellValueSorter ; namespace Private { template<class TreeNodePtrType> TArray<FBaseTreeNodePtr>)",
    "insertText": "ConvertNodes(const TArray<TreeNodePtrType>& InNodes)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (TArray<FBaseTreeNodePtr> BaseNodes ;)",
    "insertText": "Transform(InNodes, BaseNodes, [](const TreeNodePtrType& Ptr) { return StaticCastSharedPtr<FBaseTreeNodePtr::ElementType>(Ptr); })"
  },
  {
    "label": "CopyNameToClipboardImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyNameToClipboardImpl(TSharedRef<FTable> Table, TArray<FBaseTreeNodePtr> SelectedNodes, TSharedPtr<ITableCellValueSorter> Sorter, ESortMode ColumnSortMode)"
  },
  {
    "label": "CopyToClipboard()",
    "kind": "Method",
    "detail": "Function (} template<class TreeNodePtrType> void)",
    "insertText": "CopyToClipboard(TSharedRef<FTable> Table, const TArray<TreeNodePtrType>& SelectedNodes, TSharedPtr<ITableCellValueSorter> Sorter, ESortMode ColumnSortMode)"
  },
  {
    "label": "CopyToClipboardImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyToClipboardImpl(Table, Private::ConvertNodes(SelectedNodes), MoveTemp(Sorter), ColumnSortMode)"
  },
  {
    "label": "CopyNameToClipboard()",
    "kind": "Method",
    "detail": "Function (} template<class TreeNodePtrType> void)",
    "insertText": "CopyNameToClipboard(TSharedRef<FTable> Table, const TArray<TreeNodePtrType>& SelectedNodes, TSharedPtr<ITableCellValueSorter> Sorter, ESortMode ColumnSortMode)"
  },
  {
    "label": "CopyNameToClipboardImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyNameToClipboardImpl(Table, Private::ConvertNodes(SelectedNodes), MoveTemp(Sorter), ColumnSortMode)"
  }
]