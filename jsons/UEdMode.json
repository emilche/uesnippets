[
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "FModeToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModeToolkit"
  },
  {
    "label": "UEditorInteractiveToolsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorInteractiveToolsContext"
  },
  {
    "label": "UModeManagerInteractiveToolsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModeManagerInteractiveToolsContext"
  },
  {
    "label": "UEdModeInteractiveToolsContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdModeInteractiveToolsContext"
  },
  {
    "label": "UInteractiveToolManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveToolManager"
  },
  {
    "label": "UInteractiveTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveTool"
  },
  {
    "label": "UInteractiveToolBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveToolBuilder"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdMode"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdMode"
  },
  {
    "label": "UAssetEditorSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetEditorSubsystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Tools / Modes . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / Object . h \" # include \" GenericPlatform / ICursor . h \" # include \" UEdMode . generated . h \" class FEditorModeTools ; class FModeToolkit ; class UEditorInteractiveToolsContext ; class UModeManagerInteractiveToolsContext ; class UEdModeInteractiveToolsContext ; class UInteractiveToolManager ; class UInteractiveTool ; class UInteractiveToolBuilder ; class FUICommandInfo ; class FUICommandList ; class FEdMode ; namespace EEditAction { enum Type { Skip = 0,Process,Halt,} ; } ; enum class EAssetOperation { Delete,Duplicate,Save,Rename } ; enum class EToolsContextScope { Editor,EdMode,Default } ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UEdMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UEdMode()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "GetActionEditDuplicate()",
    "kind": "Method",
    "detail": "Function (EEditAction::Type)",
    "insertText": "GetActionEditDuplicate()"
  },
  {
    "label": "ProcessEditCut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessEditCut()"
  },
  {
    "label": "ActorsDuplicatedNotify()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ActorsDuplicatedNotify(TArray<AActor*>& PreDuplicateSelection, TArray<AActor*>& PostDuplicateSelection, bool bOffsetLocations)"
  },
  {
    "label": "ActorSelectionChangeNotify()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ActorSelectionChangeNotify()"
  },
  {
    "label": "ActorPropChangeNotify()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "ActorPropChangeNotify()"
  },
  {
    "label": "MapChangeNotify()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MapChangeNotify()"
  },
  {
    "label": "GetPivotForOrbit()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetPivotForOrbit(FVector& OutPivot)"
  },
  {
    "label": "SnapRotatorToGridOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SnapRotatorToGridOverride(FRotator& Rotation)"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Enter()"
  },
  {
    "label": "RegisterTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTool(TSharedPtr<FUICommandInfo> UICommand, FString ToolIdentifier, UInteractiveToolBuilder* Builder, EToolsContextScope ToolScope = EToolsContextScope::Default)"
  },
  {
    "label": "ShouldToolStartBeAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldToolStartBeAllowed(const FString& ToolIdentifier)"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo()"
  },
  {
    "label": "ModeTick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ModeTick(float DeltaTime)"
  },
  {
    "label": "CanAutoSave()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanAutoSave()"
  },
  {
    "label": "SelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectionChanged()"
  },
  {
    "label": "ComputeBoundingBoxForViewportFocus()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ComputeBoundingBoxForViewportFocus(AActor* Actor, UPrimitiveComponent* PrimitiveComponent, FBox& InOutBox)"
  },
  {
    "label": "ComputeCustomViewportFocus()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "ComputeCustomViewportFocus()"
  },
  {
    "label": "GetFocusBoxFromActiveToolFocusAPI()",
    "kind": "Method",
    "detail": "Function (private : FBox)",
    "insertText": "GetFocusBoxFromActiveToolFocusAPI()"
  },
  {
    "label": "Select()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Select(AActor* InActor, bool bInSelected)"
  },
  {
    "label": "GetToolkit()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<FModeToolkit>)",
    "insertText": "GetToolkit()"
  },
  {
    "label": "GetModeManager()",
    "kind": "Method",
    "detail": "Function (FEditorModeTools*)",
    "insertText": "GetModeManager()"
  },
  {
    "label": "AsLegacyMode()",
    "kind": "Method",
    "detail": "Function (FEdMode*)",
    "insertText": "AsLegacyMode()"
  },
  {
    "label": "GetDefaultToolScope()",
    "kind": "Method",
    "detail": "Function (bool bHaveSavedEditorState ; bool bSavedAntiAliasingState ; public : EToolsContextScope)",
    "insertText": "GetDefaultToolScope()"
  },
  {
    "label": "GetInteractiveToolsContext()",
    "kind": "Method",
    "detail": "Function (UEditorInteractiveToolsContext*)",
    "insertText": "GetInteractiveToolsContext(EToolsContextScope ToolScope = EToolsContextScope::Default)"
  },
  {
    "label": "GetModeCommands()",
    "kind": "Method",
    "detail": "Function (TMap<FName,TArray<TSharedPtr<FUICommandInfo>>>)",
    "insertText": "GetModeCommands()"
  },
  {
    "label": "CreateToolkit()",
    "kind": "Method",
    "detail": "Function (} ; protected : void)",
    "insertText": "CreateToolkit()"
  },
  {
    "label": "OnToolStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolStarted(UInteractiveToolManager* Manager, UInteractiveTool* Tool)"
  },
  {
    "label": "OnToolEnded()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnToolEnded(UInteractiveToolManager* Manager, UInteractiveTool* Tool)"
  },
  {
    "label": "ActivateDefaultTool()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ActivateDefaultTool()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnModeActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModeActivated(const FEditorModeID& InID, bool bIsActive)"
  },
  {
    "label": "CreateInteractiveToolsContexts()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CreateInteractiveToolsContexts()"
  },
  {
    "label": "DestroyInteractiveToolsContexts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyInteractiveToolsContexts()"
  }
]