[
  {
    "label": "FDetailCategoryImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailCategoryImpl"
  },
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "IPropertyGenerationUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyGenerationUtilities"
  },
  {
    "label": "FDetailLayoutBuilderImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailLayoutBuilderImpl"
  },
  {
    "label": "FPropertyAndParent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAndParent"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "variable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "variable"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "instances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instances"
  },
  {
    "label": "exists",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "exists"
  },
  {
    "label": "IDetailsViewPrivate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsViewPrivate"
  },
  {
    "label": "being",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "being"
  },
  {
    "label": "FDetailLayoutBuilderImpl()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FDetailLayoutBuilderImpl(\n\t\tTSharedPtr<FComplexPropertyNode>& InRootNode,\n\t\tFClassToPropertyMap& InPropertyMap,\n\t\tconst TSharedRef<IPropertyUtilities>& InPropertyUtilities,\n\t\tconst TSharedRef<IPropertyGenerationUtilities>& InPropertyGenerationUtilities,\n\t\tconst TSharedPtr<IDetailsViewPrivate>& InDetailsView,\n\t\tbool bIsExternal)"
  },
  {
    "label": "AddEmptyCategoryIfNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddEmptyCategoryIfNeeded(TSharedPtr<FComplexPropertyNode> Node)"
  },
  {
    "label": "GenerateDetailLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateDetailLayout()"
  },
  {
    "label": "FilterDetailLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterDetailLayout(const FDetailFilter& InFilter)"
  },
  {
    "label": "SetCurrentCustomizationClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentCustomizationClass(UStruct* CurrentClass, FName VariableName)"
  },
  {
    "label": "SetCustomProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomProperty(const TSharedPtr<FPropertyNode>& PropertyNode)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "AddTickableNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTickableNode(FDetailTreeNode& TickableNode)"
  },
  {
    "label": "RemoveTickableNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTickableNode(FDetailTreeNode& TickableNode)"
  },
  {
    "label": "SaveExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveExpansionState(const FString& NodePath, bool bIsExpanded)"
  },
  {
    "label": "AddExternalRootPropertyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExternalRootPropertyNode(TSharedRef<FComplexPropertyNode> InExternalRootNode)"
  },
  {
    "label": "RemoveExternalRootPropertyNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveExternalRootPropertyNode(TSharedRef<FComplexPropertyNode> InExternalRootNode)"
  },
  {
    "label": "ClearExternalRootPropertyNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearExternalRootPropertyNodes()"
  },
  {
    "label": "AddNodeVisibilityChangedHandler()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "AddNodeVisibilityChangedHandler(FSimpleMulticastDelegate::FDelegate InOnNodeVisibilityChanged)"
  },
  {
    "label": "RemoveNodeVisibilityChangedHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNodeVisibilityChangedHandler(FDelegateHandle DelegateHandle)"
  },
  {
    "label": "NotifyNodeVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyNodeVisibilityChanged()"
  },
  {
    "label": "RefreshNodeVisbility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshNodeVisbility()"
  },
  {
    "label": "BuildCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildCategories( const FCategoryMap& CategoryMap, TArray< TSharedRef<FDetailCategoryImpl> >& OutSimpleCategories, TArray< TSharedRef<FDetailCategoryImpl> >& OutAdvancedCategories )"
  }
]