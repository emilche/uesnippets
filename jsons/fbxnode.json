[
  {
    "label": "FbxStatus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxStatus"
  },
  {
    "label": "FbxNodeAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNodeAttribute"
  },
  {
    "label": "FbxCachedEffect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCachedEffect"
  },
  {
    "label": "FbxLODGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxLODGroup"
  },
  {
    "label": "FbxNull",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNull"
  },
  {
    "label": "FbxMarker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxMarker"
  },
  {
    "label": "FbxSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSkeleton"
  },
  {
    "label": "FbxGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxGeometry"
  },
  {
    "label": "FbxMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxMesh"
  },
  {
    "label": "FbxNurbs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNurbs"
  },
  {
    "label": "FbxNurbsCurve",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNurbsCurve"
  },
  {
    "label": "FbxLine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxLine"
  },
  {
    "label": "FbxNurbsSurface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNurbsSurface"
  },
  {
    "label": "FbxTrimNurbsSurface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxTrimNurbsSurface"
  },
  {
    "label": "FbxPatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxPatch"
  },
  {
    "label": "FbxCamera",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCamera"
  },
  {
    "label": "FbxCameraStereo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCameraStereo"
  },
  {
    "label": "FbxCameraSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCameraSwitcher"
  },
  {
    "label": "FbxLight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxLight"
  },
  {
    "label": "FbxOpticalReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxOpticalReference"
  },
  {
    "label": "FbxSubDiv",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSubDiv"
  },
  {
    "label": "FbxCharacter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxCharacter"
  },
  {
    "label": "FbxSurfaceMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSurfaceMaterial"
  },
  {
    "label": "FbxAnimStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimStack"
  },
  {
    "label": "FbxAnimCurveFilterMatrixConverter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxAnimCurveFilterMatrixConverter"
  },
  {
    "label": "FbxSceneCheckUtility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxSceneCheckUtility"
  },
  {
    "label": "defines",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defines"
  },
  {
    "label": "FbxNodeAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNodeAttribute"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "allows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allows"
  },
  {
    "label": "also",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "also"
  },
  {
    "label": "EShadingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShadingMode"
  },
  {
    "label": "EShadingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShadingMode"
  },
  {
    "label": "EPivotSet",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPivotSet"
  },
  {
    "label": "EPivotSet",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPivotSet"
  },
  {
    "label": "EPivotState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPivotState"
  },
  {
    "label": "EPivotState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPivotState"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "ECullingType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECullingType"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddChild(FbxNode* pNode)"
  },
  {
    "label": "SetTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTarget(FbxNode* pNode)"
  },
  {
    "label": "SetPostTargetRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPostTargetRotation(FbxVector4 pVector)"
  },
  {
    "label": "SetTargetUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetUp(FbxNode* pNode)"
  },
  {
    "label": "SetTargetUpVector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetUpVector(FbxVector4 pVector)"
  },
  {
    "label": "SetVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisibility(bool pIsVisible)"
  },
  {
    "label": "SetShadingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShadingMode(EShadingMode pShadingMode)"
  },
  {
    "label": "SetDefaultNodeAttributeIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDefaultNodeAttributeIndex(int pIndex, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "AddNodeAttribute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddNodeAttribute(FbxNodeAttribute* pNodeAttribute, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "SetTransformationInheritType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransformationInheritType(FbxTransform::EInheritType pInheritType)"
  },
  {
    "label": "lZero()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "lZero(0,0,0)"
  },
  {
    "label": "lOne()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "lOne(1,1,1)"
  },
  {
    "label": "lRV()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "lRV(90, 0, 0)"
  },
  {
    "label": "lR()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "lR(lZero, lRV, lOne)"
  },
  {
    "label": "SetPivotState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPivotState(EPivotSet pPivotSet, EPivotState pPivotState)"
  },
  {
    "label": "SetRotationOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationOrder(EPivotSet pPivotSet, EFbxRotationOrder pRotationOrder)"
  },
  {
    "label": "SetUseRotationSpaceForLimitOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseRotationSpaceForLimitOnly(EPivotSet pPivotSet, bool pUseForLimitOnly)"
  },
  {
    "label": "SetRotationActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationActive(bool pVal)"
  },
  {
    "label": "SetQuaternionInterpolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQuaternionInterpolation(EPivotSet pPivotSet, EFbxQuatInterpMode pQuatIterp)"
  },
  {
    "label": "SetRotationStiffness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationStiffness(FbxVector4 pRotationStiffness)"
  },
  {
    "label": "SetMinDampRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinDampRange(FbxVector4 pMinDampRange)"
  },
  {
    "label": "SetMaxDampRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxDampRange(FbxVector4 pMaxDampRange)"
  },
  {
    "label": "SetMinDampStrength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinDampStrength(FbxVector4 pMinDampStrength)"
  },
  {
    "label": "SetMaxDampStrength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxDampStrength(FbxVector4 pMaxDampStrength)"
  },
  {
    "label": "SetPreferedAngle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreferedAngle(FbxVector4 pPreferedAngle)"
  },
  {
    "label": "SetRotationOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationOffset(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetRotationPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationPivot(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetPreRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreRotation(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetPostRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPostRotation(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetScalingOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScalingOffset(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetScalingPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetScalingPivot(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetGeometricTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeometricTranslation(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetGeometricRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeometricRotation(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "SetGeometricScaling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGeometricScaling(EPivotSet pPivotSet, FbxVector4 pVector)"
  },
  {
    "label": "ResetPivotSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPivotSet( FbxNode::EPivotSet pPivotSet )"
  },
  {
    "label": "ConvertPivotAnimationRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPivotAnimationRecursive(FbxAnimStack* pAnimStack, EPivotSet pConversionTarget, double pFrameRate, bool pKeyReduce=true)"
  },
  {
    "label": "ResetPivotSetAndConvertAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPivotSetAndConvertAnimation(double pFrameRate=30.0, bool pKeyReduce=false, bool pToNodeCenter=true, bool pForceResetLimits=false)"
  },
  {
    "label": "EvaluateGlobalBoundingBoxMinMaxCenter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvaluateGlobalBoundingBoxMinMaxCenter(FbxVector4& pBBoxMin, FbxVector4& pBBoxMax, FbxVector4& pBBoxCenter, const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "EvaluateRayIntersectionPoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvaluateRayIntersectionPoint(FbxVector4& pOut, const FbxVector4& pRayOrigin, const FbxVector4& pRayDir, bool pCulling=false, const FbxTime& pTime=FBXSDK_TIME_INFINITE)"
  },
  {
    "label": "GetCharacterLink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCharacterLink(int pIndex, FbxCharacter** pCharacter, int* pCharacterLinkType, int* pNodeId, int* pNodeSubId)"
  },
  {
    "label": "GetAnimationInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAnimationInterval(FbxTimeSpan& pInterval, FbxAnimStack* pAnimStack=NULL, int pAnimLayerId=0)"
  },
  {
    "label": "AddMaterial()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddMaterial(FbxSurfaceMaterial* pMaterial)"
  },
  {
    "label": "RemoveMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveMaterial(FbxSurfaceMaterial* pMaterial)"
  },
  {
    "label": "RemoveAllMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllMaterials()"
  },
  {
    "label": "AddChildName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildName(const char* pChildName)"
  },
  {
    "label": "UpdatePivotsAndLimitsFromProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePivotsAndLimitsFromProperties()"
  },
  {
    "label": "UpdatePropertiesFromPivotsAndLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertiesFromPivotsAndLimits()"
  },
  {
    "label": "SetRotationActiveProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRotationActiveProperty(bool pVal)"
  },
  {
    "label": "PivotSetToMBTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PivotSetToMBTransform(EPivotSet pPivotSet)"
  },
  {
    "label": "AddCharacterLink()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddCharacterLink(FbxCharacter* pCharacter, int pCharacterLinkType, int pNodeId, int pNodeSubId)"
  },
  {
    "label": "RemoveCharacterLink()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RemoveCharacterLink(FbxCharacter* pCharacter, int pCharacterLinkType, int pNodeId, int pNodeSubId)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetAnimationIntervalRecursive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAnimationIntervalRecursive(FbxTimeSpan& pTimeInterval, FbxAnimLayer* pAnimLayer)"
  },
  {
    "label": "ResetLimitsRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLimitsRecursive(FbxNode* pNode)"
  },
  {
    "label": "ConvertPivotAnimationRecurseLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPivotAnimationRecurseLoop(FbxAnimStack* pAnimStack, const EPivotSet pConversionTarget, const double pFrameRate, const bool pKeyReduce, GeomInstSet& pGeomInstSet)"
  },
  {
    "label": "ConvertPivotAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPivotAnimation(FbxAnimStack* pAnimStack, const EPivotSet pConversionTarget, const double pFrameRate, const bool pKeyReduce, GeomInstSet& pGeomInstSet)"
  },
  {
    "label": "ConvertPivotAnimation_SetupMatrixConverter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertPivotAnimation_SetupMatrixConverter(FbxAnimCurveFilterMatrixConverter& pConverter, const EPivotSet& pSrcSet, const EPivotSet& pDstSet, const double pFrameRate, const bool pKeyReduce, GeomInstSet& pGeomInstSet)"
  },
  {
    "label": "ConvertPivotAnimation_ApplyGeometryPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertPivotAnimation_ApplyGeometryPivot(const EPivotSet& pSrcSet, const EPivotSet& pDstSet, GeomInstSet& pGeomInstSet)"
  }
]