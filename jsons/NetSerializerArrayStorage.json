[
  {
    "label": "FElementAllocationPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FElementAllocationPolicy"
  },
  {
    "label": "ForElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForElementType"
  },
  {
    "label": "TInlinedElementAllocationPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TInlinedElementAllocationPolicy"
  },
  {
    "label": "ForElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForElementType"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FNetSerializerArrayStorage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetSerializerArrayStorage"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FNetSerializerAlignedStorage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetSerializerAlignedStorage"
  },
  {
    "label": "ResizeAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeAllocation(FNetSerializationContext& Context, SizeType PreviousNumElements, SizeType NumElements)"
  },
  {
    "label": "ForElementType()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "ForElementType(const ForElementType&)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FNetSerializationContext& Context, void* Ptr)"
  },
  {
    "label": "GetInlineElements()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetInlineElements()"
  },
  {
    "label": "ResizeAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeAllocation(FNetSerializationContext& Context, SizeType PreviousNumElements, SizeType NumElements)"
  },
  {
    "label": "ForElementType()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "ForElementType(const ForElementType&)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (copyable)",
    "insertText": "static_assert(TIsPODType<QuantizedElementType>::Value, \"Only pod types are supported by FNetSerializerArrayHelper\")"
  },
  {
    "label": "FNetSerializerArrayStorage()",
    "kind": "Method",
    "detail": "Function (inline)",
    "insertText": "FNetSerializerArrayStorage()"
  },
  {
    "label": "AdjustSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustSize(FNetSerializationContext& Context, SizeType InNum)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FNetSerializationContext& Context)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clone(FNetSerializationContext& Context, const ArrayType& Source)"
  },
  {
    "label": "AdjustSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustSize(FNetSerializationContext& Context, SizeType InNum, SizeType InAlignment)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FNetSerializationContext& Context)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clone(FNetSerializationContext& Context, const FNetSerializerAlignedStorage& Source)"
  }
]