[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "OnlyObservedThreadsTag",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnlyObservedThreadsTag"
  },
  {
    "label": "scoped_blocking_call()",
    "kind": "Method",
    "detail": "Function (ScopedBlockingCall)",
    "insertText": "scoped_blocking_call(\n//         FROM_HERE, BlockingType::WILL_BLOCK)"
  },
  {
    "label": "scoped_blocking_call()",
    "kind": "Method",
    "detail": "Function (ScopedBlockingCall)",
    "insertText": "scoped_blocking_call(FROM_HERE,\n//       BlockingType::WILL_BLOCK)"
  },
  {
    "label": "scoped_blocking_call()",
    "kind": "Method",
    "detail": "Function (ScopedBlockingCall)",
    "insertText": "scoped_blocking_call(\n//         FROM_HERE, BlockingType::MAY_BLOCK)"
  },
  {
    "label": "scoped_blocking_call()",
    "kind": "Method",
    "detail": "Function (ScopedBlockingCall)",
    "insertText": "scoped_blocking_call(\n//       FROM_HERE, BlockingType::MAY_BLOCK)"
  },
  {
    "label": "waitable_event()",
    "kind": "Method",
    "detail": "Function (base::WaitableEvent)",
    "insertText": "waitable_event(...)"
  },
  {
    "label": "waitable_event()",
    "kind": "Method",
    "detail": "Function (base::WaitableEvent)",
    "insertText": "waitable_event(...)"
  },
  {
    "label": "scoped_blocking_call()",
    "kind": "Method",
    "detail": "Function (ScopedBlockingCall)",
    "insertText": "scoped_blocking_call(\n//      FROM_HERE, BlockingType::WILL_BLOCK)"
  },
  {
    "label": "ScopedBlockingCall()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScopedBlockingCall(const Location& from_here, BlockingType blocking_type)"
  },
  {
    "label": "ScopedBlockingCallWithBaseSyncPrimitives()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScopedBlockingCallWithBaseSyncPrimitives(const Location& from_here,\n                                           BlockingType blocking_type)"
  }
]