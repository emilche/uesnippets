[
  {
    "label": "VG_USERREQ_TOOL_BASE()",
    "kind": "Method",
    "detail": "Function (# ifndef __MEMCHECK_H # define __MEMCHECK_H # include \" valgrind . h \" typedef enum { VG_USERREQ__MAKE_MEM_NOACCESS =)",
    "insertText": "VG_USERREQ_TOOL_BASE('M','C'), VG_USERREQ__MAKE_MEM_UNDEFINED, VG_USERREQ__MAKE_MEM_DEFINED, VG_USERREQ__DISCARD, VG_USERREQ__CHECK_MEM_IS_ADDRESSABLE, VG_USERREQ__CHECK_MEM_IS_DEFINED, VG_USERREQ__DO_LEAK_CHECK, VG_USERREQ__COUNT_LEAKS, VG_USERREQ__GET_VBITS, VG_USERREQ__SET_VBITS, VG_USERREQ__CREATE_BLOCK, VG_USERREQ__MAKE_MEM_DEFINED_IF_ADDRESSABLE, VG_USERREQ__COUNT_LEAK_BLOCKS, _VG_USERREQ__MEMCHECK_RECORD_OVERLAP_ERROR = VG_USERREQ_TOOL_BASE('M','C')"
  },
  {
    "label": "VALGRIND_MAKE_MEM_NOACCESS()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "VALGRIND_MAKE_MEM_NOACCESS(_qzz_addr,_qzz_len) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0 , \\ VG_USERREQ__MAKE_MEM_NOACCESS, \\ (_qzz_addr), (_qzz_len), 0, 0, 0) #define VALGRIND_MAKE_MEM_UNDEFINED(_qzz_addr,_qzz_len) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0 , \\ VG_USERREQ__MAKE_MEM_UNDEFINED, \\ (_qzz_addr), (_qzz_len), 0, 0, 0) #define VALGRIND_MAKE_MEM_DEFINED(_qzz_addr,_qzz_len) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0 , \\ VG_USERREQ__MAKE_MEM_DEFINED, \\ (_qzz_addr), (_qzz_len), 0, 0, 0) #define VALGRIND_MAKE_MEM_DEFINED_IF_ADDRESSABLE(_qzz_addr,_qzz_len) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0 , \\ VG_USERREQ__MAKE_MEM_DEFINED_IF_ADDRESSABLE, \\ (_qzz_addr), (_qzz_len), 0, 0, 0) #define VALGRIND_CREATE_BLOCK(_qzz_addr,_qzz_len, _qzz_desc) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0 , \\ VG_USERREQ__CREATE_BLOCK, \\ (_qzz_addr), (_qzz_len), (_qzz_desc), \\ 0, 0) #define VALGRIND_DISCARD(_qzz_blkindex) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0 , \\ VG_USERREQ__DISCARD, \\ 0, (_qzz_blkindex), 0, 0, 0) #define VALGRIND_CHECK_MEM_IS_ADDRESSABLE(_qzz_addr,_qzz_len) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0, \\ VG_USERREQ__CHECK_MEM_IS_ADDRESSABLE, \\ (_qzz_addr), (_qzz_len), 0, 0, 0) #define VALGRIND_CHECK_MEM_IS_DEFINED(_qzz_addr,_qzz_len) \\ VALGRIND_DO_CLIENT_REQUEST_EXPR(0, \\ VG_USERREQ__CHECK_MEM_IS_DEFINED, \\ (_qzz_addr), (_qzz_len), 0, 0, 0) #define VALGRIND_CHECK_VALUE_IS_DEFINED(__lvalue) \\ VALGRIND_CHECK_MEM_IS_DEFINED( \\ (volatile unsigned char *)&(__lvalue), \\ (unsigned long)(sizeof (__lvalue)))"
  },
  {
    "label": "VALGRIND_DO_CLIENT_REQUEST()",
    "kind": "Method",
    "detail": "Function (unsigned long _qzz_res ; \\)",
    "insertText": "VALGRIND_DO_CLIENT_REQUEST(_qzz_res, 0, \\ VG_USERREQ__DO_LEAK_CHECK, \\ 0, 0, 0, 0, 0)"
  },
  {
    "label": "VALGRIND_DO_CLIENT_REQUEST()",
    "kind": "Method",
    "detail": "Function (\\ } # define VALGRIND_DO_QUICK_LEAK_CHECK \\ { unsigned long _qzz_res ; \\)",
    "insertText": "VALGRIND_DO_CLIENT_REQUEST(_qzz_res, 0, \\ VG_USERREQ__DO_LEAK_CHECK, \\ 1, 0, 0, 0, 0)"
  },
  {
    "label": "VALGRIND_COUNT_LEAKS()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "VALGRIND_COUNT_LEAKS(leaked, dubious, reachable, suppressed)"
  },
  {
    "label": "VALGRIND_DO_CLIENT_REQUEST()",
    "kind": "Method",
    "detail": "Function (unsigned long _qzz_res ; \\ unsigned long _qzz_leaked = 0,_qzz_dubious = 0 ; \\ unsigned long _qzz_reachable = 0,_qzz_suppressed = 0 ; \\)",
    "insertText": "VALGRIND_DO_CLIENT_REQUEST(_qzz_res, 0, \\ VG_USERREQ__COUNT_LEAKS, \\ &_qzz_leaked, &_qzz_dubious, \\ &_qzz_reachable, &_qzz_suppressed, 0)"
  },
  {
    "label": "VALGRIND_COUNT_LEAK_BLOCKS()",
    "kind": "Method",
    "detail": "Function (\\ leaked = _qzz_leaked ; \\ dubious = _qzz_dubious ; \\ reachable = _qzz_reachable ; \\ suppressed = _qzz_suppressed ; \\ } # define)",
    "insertText": "VALGRIND_COUNT_LEAK_BLOCKS(leaked, dubious, reachable, suppressed)"
  },
  {
    "label": "VALGRIND_DO_CLIENT_REQUEST()",
    "kind": "Method",
    "detail": "Function (unsigned long _qzz_res ; \\ unsigned long _qzz_leaked = 0,_qzz_dubious = 0 ; \\ unsigned long _qzz_reachable = 0,_qzz_suppressed = 0 ; \\)",
    "insertText": "VALGRIND_DO_CLIENT_REQUEST(_qzz_res, 0, \\ VG_USERREQ__COUNT_LEAK_BLOCKS, \\ &_qzz_leaked, &_qzz_dubious, \\ &_qzz_reachable, &_qzz_suppressed, 0)"
  }
]