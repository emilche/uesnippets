[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "TPropertyValueStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPropertyValueStorage"
  },
  {
    "label": "FInitialValueIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialValueIndex"
  },
  {
    "label": "IPropertyValueStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPropertyValueStorage"
  },
  {
    "label": "FInitialValueCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialValueCache"
  },
  {
    "label": "FKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyType"
  },
  {
    "label": "IPropertyValueStorage()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntitySystemLinkerExtension . h \" # include \" EntitySystem / MovieScenePropertySystemTypes . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Optional . h \" # include \" Misc / TVariant . h \" # include \" MovieSceneCommonHelpers . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / Tuple . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectKey . h \" class UObject ; namespace UE { namespace MovieScene { template<PropertyTraits> struct TPropertyValueStorage ; struct FInitialValueIndex { uint16 Index ; } ; struct IPropertyValueStorage { ~)",
    "insertText": "IPropertyValueStorage()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset(TArrayView<const FInitialValueIndex> Indices)"
  },
  {
    "label": "GetExtensionID()",
    "kind": "Method",
    "detail": "Function (} ; struct FInitialValueCache { TEntitySystemLinkerExtensionID<FInitialValueCache>)",
    "insertText": "GetExtensionID()"
  },
  {
    "label": "GetGlobalInitialValues()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInitialValueCache>)",
    "insertText": "GetGlobalInitialValues()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Reset(FComponentTypeID InitialValueType, TArrayView<const FInitialValueIndex> InitialValueIndices)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (Storage ->)",
    "insertText": "Get()->Reset(InitialValueIndices)"
  },
  {
    "label": "GetStorage()",
    "kind": "Method",
    "detail": "Function (} } template<PropertyTraits> TPropertyValueStorage<PropertyTraits>*)",
    "insertText": "GetStorage(FComponentTypeID InitialValueType)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (StorageByComponent .)",
    "insertText": "Add(InitialValueType, TUniquePtr<IPropertyValueStorage>(NewStorage))"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (PropertyValues .)",
    "insertText": "RemoveAt(Index.Index)"
  },
  {
    "label": "AddInitialValue()",
    "kind": "Method",
    "detail": "Function (} } bLUTContainsInvalidEntries = true ; } FInitialValueIndex)",
    "insertText": "AddInitialValue(UObject* BoundObject, const StorageType& InValue, uint16 ResolvedPropertyOffset)"
  },
  {
    "label": "FObjectKey()",
    "kind": "Method",
    "detail": "Function (FKeyType Key {)",
    "insertText": "FObjectKey(BoundObject), FPropertyKey(TInPlaceType<uint16>(), ResolvedPropertyOffset)"
  },
  {
    "label": "AddInitialValue()",
    "kind": "Method",
    "detail": "Function (} FInitialValueIndex)",
    "insertText": "AddInitialValue(UObject* BoundObject, const StorageType& InValue, FCustomPropertyIndex AccessorIndex)"
  },
  {
    "label": "FObjectKey()",
    "kind": "Method",
    "detail": "Function (FKeyType Key {)",
    "insertText": "FObjectKey(BoundObject), FPropertyKey(TInPlaceType<FCustomPropertyIndex>(), AccessorIndex)"
  },
  {
    "label": "AddInitialValue()",
    "kind": "Method",
    "detail": "Function (} FInitialValueIndex)",
    "insertText": "AddInitialValue(UObject* BoundObject, const StorageType& InValue, FTrackInstancePropertyBindings* SlowBindings)"
  },
  {
    "label": "FObjectKey()",
    "kind": "Method",
    "detail": "Function (FKeyType Key {)",
    "insertText": "FObjectKey(BoundObject), FPropertyKey(TInPlaceType<FName>(), SlowBindings->GetPropertyPath())"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (} TOptional<FInitialValueIndex>)",
    "insertText": "FindPropertyIndex(UObject* BoundObject, uint16 ResolvedPropertyOffset)"
  },
  {
    "label": "CleanupStaleEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupStaleEntries()"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (} TOptional<FInitialValueIndex>)",
    "insertText": "FindPropertyIndex(UObject* BoundObject, FCustomPropertyIndex AccessorIndex)"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (} TOptional<FInitialValueIndex>)",
    "insertText": "FindPropertyIndex(UObject* BoundObject, const FName& PropertyPath)"
  },
  {
    "label": "FindCachedValue()",
    "kind": "Method",
    "detail": "Function (} const StorageType*)",
    "insertText": "FindCachedValue(UObject* BoundObject, uint16 ResolvedPropertyOffset)"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (TOptional<FInitialValueIndex> Index =)",
    "insertText": "FindPropertyIndex(BoundObject, ResolvedPropertyOffset)"
  },
  {
    "label": "FindCachedValue()",
    "kind": "Method",
    "detail": "Function (} const StorageType*)",
    "insertText": "FindCachedValue(UObject* BoundObject, FCustomPropertyIndex CustomIndex)"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (TOptional<FInitialValueIndex> Index =)",
    "insertText": "FindPropertyIndex(BoundObject, CustomIndex)"
  },
  {
    "label": "FindCachedValue()",
    "kind": "Method",
    "detail": "Function (} const StorageType*)",
    "insertText": "FindCachedValue(UObject* BoundObject, const FName& PropertyPath)"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (TOptional<FInitialValueIndex> Index =)",
    "insertText": "FindPropertyIndex(BoundObject, PropertyPath)"
  },
  {
    "label": "GetCachedValue()",
    "kind": "Method",
    "detail": "Function (} const StorageType&)",
    "insertText": "GetCachedValue(FInitialValueIndex Index)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32 Hash =)",
    "insertText": "GetTypeHash(InKey.Object)"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, static_cast<uint32>(InKey.Property.GetIndex()))"
  },
  {
    "label": "RemoveCurrent()",
    "kind": "Method",
    "detail": "Function (It .)",
    "insertText": "RemoveCurrent()"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (} } PropertyValues .)",
    "insertText": "Shrink()"
  },
  {
    "label": "FindPropertyIndex()",
    "kind": "Method",
    "detail": "Function (bLUTContainsInvalidEntries = false ; } TOptional<FInitialValueIndex>)",
    "insertText": "FindPropertyIndex(const FKeyType& InKey)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (const uint16* Index = KeyToPropertyIndex .)",
    "insertText": "Find(InKey)"
  },
  {
    "label": "AddInitialValue()",
    "kind": "Method",
    "detail": "Function (} FInitialValueIndex)",
    "insertText": "AddInitialValue(const FKeyType& InKey, const StorageType& InValue)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (const int32 NewIndex = PropertyValues .)",
    "insertText": "Add(InValue)"
  },
  {
    "label": "uint16()",
    "kind": "Method",
    "detail": "Function (const uint16 NarrowIndex = static_cast<)",
    "insertText": "uint16(NewIndex)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (KeyToPropertyIndex .)",
    "insertText": "Add(InKey, NarrowIndex)"
  }
]