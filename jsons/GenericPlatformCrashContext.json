[
  {
    "label": "FDateTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDateTime"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FScopedAdditionalCrashContextProvider",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedAdditionalCrashContextProvider"
  },
  {
    "label": "FProgramCounterSymbolInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProgramCounterSymbolInfo"
  },
  {
    "label": "ECrashExitCodes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECrashExitCodes"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCrashStackFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrashStackFrame"
  },
  {
    "label": "FThreadStackFrames",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadStackFrames"
  },
  {
    "label": "FSessionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSessionContext"
  },
  {
    "label": "FUserSettingsContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUserSettingsContext"
  },
  {
    "label": "FGPUBreadcrumbsSharedContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUBreadcrumbsSharedContext"
  },
  {
    "label": "FQueueData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueueData"
  },
  {
    "label": "FSharedCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedCrashContext"
  },
  {
    "label": "FCrashContextExtendedWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrashContextExtendedWriter"
  },
  {
    "label": "FThreadCallStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreadCallStack"
  },
  {
    "label": "FGPUBreadcrumbCrashData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUBreadcrumbCrashData"
  },
  {
    "label": "FSerializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSerializer"
  },
  {
    "label": "FGenericCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericCrashContext"
  },
  {
    "label": "FGenericMemoryWarningContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericMemoryWarningContext"
  },
  {
    "label": "FAdditionalCrashContextStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAdditionalCrashContextStack"
  },
  {
    "label": "FCrashStackFrame()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Delegates / DelegateCombinations . h \" # include \" GenericPlatform / GenericPlatformStackWalk . h \" # include \" HAL / PlatformMemory . h \" # include \" HAL / PlatformProcess . h \" # include \" HAL / PlatformStackWalk . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Optional . h \" # include \" Misc / SecureHash . h \" # include \" Misc / Timespan . h \" # include \" Templates / Function . h \" # include \" Templates / UnrealTemplate . h \" struct FDateTime ; struct FGuid ; struct FScopedAdditionalCrashContextProvider ; # ifndef WITH_ADDITIONAL_CRASH_CONTEXTS # define WITH_ADDITIONAL_CRASH_CONTEXTS 1 # endif struct FProgramCounterSymbolInfo ; enum ECrashExitCodes : int32 { MonitoredApplicationStillRunning = 7 7 7 0 0 1,MonitoredApplicationExitCodeNotAvailable = 7 7 7 0 0 2,CrashReporterCrashed = 7 7 7 0 0 3,CrashHandlerCrashed = 7 7 7 0 0 4,OutOfProcessReporterExitedUnexpectedly = 7 7 7 0 0 5,CrashDuringStaticInit = 7 7 7 0 0 6,OutOfProcessReporterCheckFailed = 7 7 7 0 0 7,UnhandledEnsure = 7 7 7 0 0 8,} ; enum class ECrashDescVersions : int32 { VER_1_NewCrashFormat,VER_2_AddedNewProperties,VER_3_CrashContext = 3,} ; enum class ECrashDumpMode : int32 { Default = 0,FullDump = 1,FullDumpAlways = 2,} ; struct FCrashStackFrame { FString ModuleName ; uint64 BaseAddress ; uint64 Offset ;)",
    "insertText": "FCrashStackFrame(FString ModuleNameIn, uint64 BaseAddressIn, uint64 OffsetIn) : ModuleName(MoveTemp(ModuleNameIn)) , BaseAddress(BaseAddressIn) , Offset(OffsetIn)"
  },
  {
    "label": "AttendedStatusToString()",
    "kind": "Method",
    "detail": "Function (} } ; struct FThreadStackFrames { FString ThreadName ; uint32 ThreadId ; TArray<FCrashStackFrame> StackFrames ; } ; enum class ECrashContextType { Crash,Assert,Ensure,Stall,GPUCrash,Hang,OutOfMemory,AbnormalShutdown,VerseRuntimeError,Max } ; enum class ECrashTrigger { Debug = - 1,Normal = 0 } ; enum class EUnattendedStatus : uint8 { Unknown,Attended,Unattended } ; const TCHAR*)",
    "insertText": "AttendedStatusToString(const EUnattendedStatus Status)"
  },
  {
    "label": "AddBuffer()",
    "kind": "Method",
    "detail": "Function (# define CR_MAX_ERROR_MESSAGE_CHARS 2 0 4 8 # define CR_MAX_DIRECTORY_CHARS 2 5 6 # define CR_MAX_SYMBOL_CHARS 1 2 8 # define CR_MAX_STACK_FRAMES 2 5 6 # define CR_MAX_THREAD_NAME_CHARS 6 4 # define CR_MAX_THREADS 5 1 2 # define CR_MAX_GENERIC_FIELD_CHARS 6 4 # define CR_MAX_COMMANDLINE_CHARS 1 0 2 4 # define CR_MAX_RICHTEXT_FIELD_CHARS 5 1 2 # define CR_MAX_DYNAMIC_BUFFER_CHARS 1 0 2 4* 3 2 # define CR_MAX_GPU_BREADCRUMBS_QUEUES 2 # define CR_MAX_GPU_BREADCRUMBS_STRING_CHARS 1 0 2 4* 8 struct FSessionContext { bool bIsInternalBuild ; bool bIsPerforceBuild ; bool bWithDebugInfo ; bool bIsSourceDistribution ; bool bIsUERelease ; bool bIsOOM ; bool bIsExitRequested ; bool bIsStuck ; uint32 ProcessId ; int32 LanguageLCID ; int32 NumberOfCores ; int32 NumberOfCoresIncludingHyperthreads ; int32 SecondsSinceStart ; int32 CrashDumpMode ; int32 CrashTrigger ; uint32 StuckThreadId ; int32 OOMAllocationAlignment ; uint64 OOMAllocationSize ; TCHAR EngineVersion [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR EngineCompatibleVersion [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR BuildVersion [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR GameName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR EngineMode [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR EngineModeEx [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR ExecutableName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR BuildConfigurationName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR DeploymentName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR BaseDir [ CR_MAX_DIRECTORY_CHARS ] ; TCHAR RootDir [ CR_MAX_DIRECTORY_CHARS ] ; TCHAR EpicAccountId [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR LoginIdStr [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR SymbolsLabel [ CR_MAX_SYMBOL_CHARS ] ; TCHAR OsVersion [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR OsSubVersion [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR CPUVendor [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR CPUBrand [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR PrimaryGPUBrand [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR UserName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR DefaultLocale [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR CrashGUIDRoot [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR UserActivityHint [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR GameSessionID [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR CommandLine [ CR_MAX_COMMANDLINE_CHARS ] ; TCHAR CrashReportClientRichText [ CR_MAX_RICHTEXT_FIELD_CHARS ] ; TCHAR GameStateName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR CrashConfigFilePath [ CR_MAX_DIRECTORY_CHARS ] ; TCHAR AttendedStatus [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR PlatformName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR PlatformNameIni [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR AnticheatProvider [ CR_MAX_GENERIC_FIELD_CHARS ] ; FPlatformMemoryStats MemoryStats ; } ; struct FUserSettingsContext { bool bNoDialog = false ; bool bSendUnattendedBugReports = false ; bool bSendUsageData = false ; bool bImplicitSend = false ; TCHAR LogFilePath [ CR_MAX_DIRECTORY_CHARS ] ; } ; struct FGPUBreadcrumbsSharedContext { struct FQueueData { TCHAR QueueName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR FullHash [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR ActiveHash [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR Breadcrumbs [ CR_MAX_GPU_BREADCRUMBS_STRING_CHARS ] ; } ; TCHAR SourceName [ CR_MAX_GENERIC_FIELD_CHARS ] ; TCHAR Version [ CR_MAX_GENERIC_FIELD_CHARS ] ; uint32 NumQueues = 0 ; FQueueData Queues [ CR_MAX_GPU_BREADCRUMBS_QUEUES ] ; } ; struct FSharedCrashContext { TCHAR ErrorMessage [ CR_MAX_ERROR_MESSAGE_CHARS ] ; uint32 ThreadIds [ CR_MAX_THREADS ] ; TCHAR ThreadNames [ CR_MAX_THREAD_NAME_CHARS* CR_MAX_THREADS ] ; uint32 NumThreads ; uint32 CrashingThreadId ; ECrashContextType CrashType ; FUserSettingsContext UserSettings ; void* PlatformCrashContext ; TCHAR CrashFilesDirectory [ CR_MAX_DIRECTORY_CHARS ] ; FSessionContext SessionContext ; uint32 EnabledPluginsNum ; uint32 EnabledPluginsOffset ; uint32 EngineDataNum ; uint32 EngineDataOffset ; uint32 GameDataNum ; uint32 GameDataOffset ; TCHAR DynamicData [ CR_MAX_DYNAMIC_BUFFER_CHARS ] ; void* ErrorProgramCounter ; void* ExceptionProgramCounter ; FGPUBreadcrumbsSharedContext GPUBreadcrumbs ; } ; # if WITH_ADDITIONAL_CRASH_CONTEXTS struct FCrashContextExtendedWriter { void)",
    "insertText": "AddBuffer(const TCHAR* Identifier, const uint8* Data, uint32 DataSize)"
  },
  {
    "label": "AddString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddString(const TCHAR* Identifier, const TCHAR* DataStr)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FAdditionalCrashContextDelegate, FCrashContextExtendedWriter&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FEngineDataResetDelegate)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FEngineDataSetDelegate, const FString&, const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FGameDataResetDelegate)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FGameDataSetDelegate, const FString&, const FString&)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (struct FThreadCallStack { TConstArrayView<uint64> StackFrames ; const TCHAR* ThreadName ; uint32 ThreadId ; } ; struct FGPUBreadcrumbCrashData { TCHAR const CurrentVersion [ ] =)",
    "insertText": "TEXT(\"526BDA74-7A81-44C3-B0FD-9DBF80973C25\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (enum class EState : uint8 { NotStarted = 0,Active = 1,Finished = 2 } ; TCHAR const StateChars [ ] = {)",
    "insertText": "TEXT('N'), TEXT('A'), TEXT('F')"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (struct FQueueData { FString BreadcrumbString ; FSHAHash FullHash ; FSHAHash ActiveHash ; operator)",
    "insertText": "bool()"
  },
  {
    "label": "Sanitize()",
    "kind": "Method",
    "detail": "Function (} } ; TMap<FString,FQueueData> Queues ; FString SourceName ; FString Version ; class FSerializer { FString String ; FSHA1 FullHash,ActiveHash ; TArray<bool> ChildStack ; FString)",
    "insertText": "Sanitize(FString const& Name)"
  },
  {
    "label": "SanitizeForHash()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizeForHash(FString const& Name)"
  },
  {
    "label": "BeginNode()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "BeginNode(FString const& Name, EState State)"
  },
  {
    "label": "EndNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndNode()"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (FQueueData)",
    "insertText": "GetResult()"
  },
  {
    "label": "FGPUBreadcrumbCrashData()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FGPUBreadcrumbCrashData(TCHAR const* InSourceName, TCHAR const* InVersion = CurrentVersion) : SourceName(InSourceName), Version(InVersion)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} } ; struct FGenericCrashContext { public : const ANSICHAR* const CrashContextRuntimeXMLNameA ; const TCHAR* const CrashContextRuntimeXMLNameW ; const ANSICHAR* const CrashConfigFileNameA ; const TCHAR* const CrashConfigFileNameW ; const TCHAR* const CrashConfigExtension ; const TCHAR* const ConfigSectionName ; const TCHAR* const CrashConfigPurgeDays ; const TCHAR* const CrashGUIDRootPrefix ; const TCHAR* const CrashContextExtension ; const TCHAR* const RuntimePropertiesTag ; const TCHAR* const DeploymentNameTag ; const TCHAR* const PlatformPropertiesTag ; const TCHAR* const EngineDataTag ; const TCHAR* const GameDataTag ; const TCHAR* const GameNameTag ; const TCHAR* const EnabledPluginsTag ; const TCHAR* const UEMinidumpName ; const TCHAR* const NewLineTag ; const TCHAR* const CrashVersionTag ; const TCHAR* const ExecutionGuidTag ; const TCHAR* const CrashGuidTag ; const TCHAR* const IsEnsureTag ; const TCHAR* const IsStallTag ; const TCHAR* const IsAssertTag ; const TCHAR* const CrashTypeTag ; const TCHAR* const ErrorMessageTag ; const TCHAR* const CrashReporterMessageTag ; const TCHAR* const AttendedStatusTag ; const TCHAR* const SecondsSinceStartTag ; const TCHAR* const BuildVersionTag ; const TCHAR* const CallStackTag ; const TCHAR* const PortableCallStackTag ; const TCHAR* const PortableCallStackHashTag ; const TCHAR* const IsRequestingExitTag ; const TCHAR* const LogFilePathTag ; const TCHAR* const ProcessIdTag ; const TCHAR* const IsInternalBuildTag ; const TCHAR* const IsPerforceBuildTag ; const TCHAR* const IsWithDebugInfoTag ; const TCHAR* const IsSourceDistributionTag ; int32 CrashGUIDLength = 1 2 8 ; const TCHAR* const CrashTypeCrash ; const TCHAR* const CrashTypeAssert ; const TCHAR* const CrashTypeEnsure ; const TCHAR* const CrashTypeStall ; const TCHAR* const CrashTypeGPU ; const TCHAR* const CrashTypeHang ; const TCHAR* const CrashTypeAbnormalShutdown ; const TCHAR* const CrashTypeOutOfMemory ; const TCHAR* const CrashTypeVerseRuntimeError ; const TCHAR* const EngineModeExUnknown ; const TCHAR* const EngineModeExDirty ; const TCHAR* const EngineModeExVanilla ; const FGuid ExecutionGuid ; void)",
    "insertText": "Initialize()"
  },
  {
    "label": "InitializeFromContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromContext(const FSessionContext& Context, const TCHAR* EnabledPlugins, const TCHAR* EngineData, const TCHAR* GameData, const FGPUBreadcrumbsSharedContext* GPUBreadcrumbs)"
  },
  {
    "label": "GetCachedSessionContext()",
    "kind": "Method",
    "detail": "Function (const FSessionContext&)",
    "insertText": "GetCachedSessionContext()"
  },
  {
    "label": "GetGameName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGameName()"
  },
  {
    "label": "IsInitalized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitalized()"
  },
  {
    "label": "SetOutOfProcessCrashReporterExitCode()",
    "kind": "Method",
    "detail": "Function (OutOfProcessCrashReporterPid = ProcessId ; } void)",
    "insertText": "SetOutOfProcessCrashReporterExitCode(int32 ExitCode)"
  },
  {
    "label": "GetOutOfProcessCrashReporterExitCode()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetOutOfProcessCrashReporterExitCode()"
  },
  {
    "label": "FGenericCrashContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGenericCrashContext(ECrashContextType InType, const TCHAR* ErrorMessage)"
  },
  {
    "label": "FGenericCrashContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FGenericCrashContext()"
  },
  {
    "label": "GetTempSessionContextFilePath()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetTempSessionContextFilePath(uint64 ProcessID)"
  },
  {
    "label": "CleanupTempSessionContextFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupTempSessionContextFiles(const FTimespan& ExpirationAge)"
  },
  {
    "label": "SerializeContentToBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeContentToBuffer()"
  },
  {
    "label": "GetBuffer()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetBuffer()"
  },
  {
    "label": "IsFullCrashDump()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsFullCrashDump()"
  },
  {
    "label": "SerializeAsXML()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeAsXML(const TCHAR* Filename)"
  },
  {
    "label": "SerializeSessionContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeSessionContext(FString& Buffer)"
  },
  {
    "label": "AddCrashProperty()",
    "kind": "Method",
    "detail": "Function (template<Type> void)",
    "insertText": "AddCrashProperty(const TCHAR* PropertyName, const Type& Value)"
  },
  {
    "label": "AddCrashPropertyInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCrashPropertyInternal(CommonBuffer, PropertyName, Value)"
  },
  {
    "label": "AddCrashProperty()",
    "kind": "Method",
    "detail": "Function (} template<Type> void)",
    "insertText": "AddCrashProperty(FString& Buffer, const TCHAR* PropertyName, const Type& Value)"
  },
  {
    "label": "AddCrashPropertyInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCrashPropertyInternal(Buffer, PropertyName, Value)"
  },
  {
    "label": "AppendEscapedXMLString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AppendEscapedXMLString(FString& OutBuffer, FStringView Text)"
  },
  {
    "label": "AppendEscapedXMLString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendEscapedXMLString(FStringBuilderBase& OutBuffer, FStringView Text)"
  },
  {
    "label": "AppendPortableCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPortableCallstack(FString& OutBuffer, TConstArrayView<FCrashStackFrame> StackFrames)"
  },
  {
    "label": "UnescapeXMLString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "UnescapeXMLString(const FString& Text)"
  },
  {
    "label": "GetCrashTypeString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetCrashTypeString(ECrashContextType Type)"
  },
  {
    "label": "GetCrashGameName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCrashGameName()"
  },
  {
    "label": "GetCrashConfigFilePath()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetCrashConfigFilePath()"
  },
  {
    "label": "GetCrashConfigFolder()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetCrashConfigFolder()"
  },
  {
    "label": "PurgeOldCrashConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PurgeOldCrashConfig()"
  },
  {
    "label": "SetEpicAccountId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEpicAccountId(const FString& EpicAccountId)"
  },
  {
    "label": "ResetEngineData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEngineData()"
  },
  {
    "label": "OnEngineDataResetDelegate()",
    "kind": "Method",
    "detail": "Function (FEngineDataResetDelegate&)",
    "insertText": "OnEngineDataResetDelegate()"
  },
  {
    "label": "SetGPUBreadcrumbs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGPUBreadcrumbs(FGPUBreadcrumbCrashData&& Data)"
  },
  {
    "label": "OnEngineDataSetDelegate()",
    "kind": "Method",
    "detail": "Function (FEngineDataSetDelegate&)",
    "insertText": "OnEngineDataSetDelegate()"
  },
  {
    "label": "ResetGameData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetGameData()"
  },
  {
    "label": "OnGameDataResetDelegate()",
    "kind": "Method",
    "detail": "Function (FGameDataResetDelegate&)",
    "insertText": "OnGameDataResetDelegate()"
  },
  {
    "label": "OnGameDataSetDelegate()",
    "kind": "Method",
    "detail": "Function (FGameDataSetDelegate&)",
    "insertText": "OnGameDataSetDelegate()"
  },
  {
    "label": "AddPlugin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPlugin(const FString& PluginDesc)"
  },
  {
    "label": "DumpLog()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DumpLog(const FString& CrashFolderAbsolute)"
  },
  {
    "label": "DumpAdditionalContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpAdditionalContext(const TCHAR* CrashFolderAbsolute)"
  },
  {
    "label": "CopySharedCrashContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySharedCrashContext(FSharedCrashContext& Dst)"
  },
  {
    "label": "SetMemoryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMemoryStats(const FPlatformMemoryStats& MemoryStats)"
  },
  {
    "label": "SetAnticheatProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnticheatProvider(const FString& AnticheatProvider)"
  },
  {
    "label": "OnThreadStuck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThreadStuck(uint32 ThreadId)"
  },
  {
    "label": "OnThreadUnstuck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThreadUnstuck(uint32 ThreadId)"
  },
  {
    "label": "CreateCrashReportDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateCrashReportDirectory(const TCHAR* CrashGUIDRoot, int32 CrashIndex, FString& OutCrashDirectoryAbsolute)"
  },
  {
    "label": "SetEngineExit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEngineExit(bool bIsRequestExit)"
  },
  {
    "label": "OnAdditionalCrashContextDelegate()",
    "kind": "Method",
    "detail": "Function (# if WITH_ADDITIONAL_CRASH_CONTEXTS FAdditionalCrashContextDelegate&)",
    "insertText": "OnAdditionalCrashContextDelegate()"
  },
  {
    "label": "SetCrashedThreadId()",
    "kind": "Method",
    "detail": "Function (ProcessHandle = Process ; } void)",
    "insertText": "SetCrashedThreadId(uint32 InId)"
  },
  {
    "label": "SetNumMinidumpFramesToIgnore()",
    "kind": "Method",
    "detail": "Function (CrashedThreadId = InId ; } void)",
    "insertText": "SetNumMinidumpFramesToIgnore(int32 InNumMinidumpFramesToIgnore)"
  },
  {
    "label": "CapturePortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CapturePortableCallStack(void* ErrorProgramCounter, void* Context)"
  },
  {
    "label": "CaptureThreadPortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureThreadPortableCallStack(const uint64 ThreadId, void* Context)"
  },
  {
    "label": "SetPortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPortableCallStack(const uint64* StackFrames, int32 NumStackFrames)"
  },
  {
    "label": "GetPortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPortableCallStack(const uint64* StackFrames, int32 NumStackFrames, TArray<FCrashStackFrame>& OutCallStack)"
  },
  {
    "label": "CaptureModules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureModules()"
  },
  {
    "label": "GetModules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetModules(TArray<FStackWalkModuleInfo>& OutModules)"
  },
  {
    "label": "AddPortableThreadCallStacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPortableThreadCallStacks(TConstArrayView<FThreadCallStack> Threads)"
  },
  {
    "label": "AddPortableThreadCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPortableThreadCallStack(uint32 ThreadId, const TCHAR* ThreadName, const uint64* StackFrames, int32 NumStackFrames)"
  },
  {
    "label": "CopyPlatformSpecificFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPlatformSpecificFiles(const TCHAR* OutputDirectory, void* Context)"
  },
  {
    "label": "CleanupPlatformSpecificFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupPlatformSpecificFiles()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (ECrashContextType)",
    "insertText": "GetType()"
  },
  {
    "label": "GetDeploymentName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDeploymentName()"
  },
  {
    "label": "SetCrashTrigger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCrashTrigger(ECrashTrigger Type)"
  },
  {
    "label": "GetPlatformAllThreadContextsString()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "GetPlatformAllThreadContextsString(FString& OutStr)"
  },
  {
    "label": "GetEngineData()",
    "kind": "Method",
    "detail": "Function (const FString*)",
    "insertText": "GetEngineData(const FString& Key)"
  },
  {
    "label": "GetGameData()",
    "kind": "Method",
    "detail": "Function (const FString*)",
    "insertText": "GetGameData(const FString& Key)"
  },
  {
    "label": "SerializeTempCrashContextToFile()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SerializeTempCrashContextToFile()"
  },
  {
    "label": "SerializeUserSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeUserSettings(FString& Buffer)"
  },
  {
    "label": "AddCrashPropertyInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCrashPropertyInternal(FString& Buffer, FStringView PropertyName, FStringView PropertyValue)"
  },
  {
    "label": "AddCrashPropertyInternal()",
    "kind": "Method",
    "detail": "Function (template<Type> void)",
    "insertText": "AddCrashPropertyInternal(FString& Buffer, FStringView PropertyName, const Type& Value)"
  },
  {
    "label": "AddCrashPropertyInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCrashPropertyInternal(Buffer, PropertyName, FStringView(TTypeToString<Type>::ToString(Value)))"
  },
  {
    "label": "AddPlatformSpecificProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddPlatformSpecificProperties()"
  },
  {
    "label": "AddPortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPortableCallStack()"
  },
  {
    "label": "AddPortableCallStackHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPortableCallStackHash()"
  },
  {
    "label": "AddGPUBreadcrumbs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGPUBreadcrumbs()"
  },
  {
    "label": "AddModules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddModules()"
  },
  {
    "label": "AddHeader()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddHeader(FString& Buffer)"
  },
  {
    "label": "AddFooter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFooter(FString& Buffer)"
  },
  {
    "label": "BeginSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginSection(FString& Buffer, const TCHAR* SectionName)"
  },
  {
    "label": "EndSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSection(FString& Buffer, const TCHAR* SectionName)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSection(FString& Buffer, const TCHAR* SectionName, const FString& SectionContent)"
  },
  {
    "label": "InitializeFromConfig()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitializeFromConfig()"
  },
  {
    "label": "UpdateLocalizedStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLocalizedStrings()"
  },
  {
    "label": "FGenericCrashContext()",
    "kind": "Method",
    "detail": "Function (bool bIsInitialized ; uint32 OutOfProcessCrashReporterPid ; volatile int64 OutOfProcessCrashReporterExitCode ; int32 StaticCrashContextIndex ; # if WITH_ADDITIONAL_CRASH_CONTEXTS FAdditionalCrashContextDelegate AdditionalCrashContextDelegate ; # endif FString CommonBuffer ; int32 CrashContextIndex ; FEngineDataResetDelegate OnEngineDataReset ; FEngineDataSetDelegate OnEngineDataSet ; FGameDataResetDelegate OnGameDataReset ; FGameDataSetDelegate OnGameDataSet ;)",
    "insertText": "FGenericCrashContext(const FGenericCrashContext&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FGenericCrashContext&)",
    "insertText": "operator(const FGenericCrashContext&)"
  },
  {
    "label": "GetRecoveryServerName()",
    "kind": "Method",
    "detail": "Function (} ; struct FGenericMemoryWarningContext { } ; namespace RecoveryService { FString)",
    "insertText": "GetRecoveryServerName()"
  },
  {
    "label": "MakeSessionName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeSessionName()"
  },
  {
    "label": "TokenizeSessionName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TokenizeSessionName(const FString& SessionName, FString* OutServerName, int32* SeqNum, FString* ProjName, FDateTime* DateTime)"
  },
  {
    "label": "GetThreadContextProvider()",
    "kind": "Method",
    "detail": "Function (} # if WITH_ADDITIONAL_CRASH_CONTEXTS struct FAdditionalCrashContextStack { FAdditionalCrashContextStack&)",
    "insertText": "GetThreadContextProvider()"
  },
  {
    "label": "PushProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushProvider(struct FScopedAdditionalCrashContextProvider* Provider)"
  },
  {
    "label": "PopProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopProvider()"
  },
  {
    "label": "ExecuteProviders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteProviders(FCrashContextExtendedWriter& Writer)"
  },
  {
    "label": "FAdditionalCrashContextStack()",
    "kind": "Method",
    "detail": "Function (private : enum { MaxStackDepth = 1 6 } ; FAdditionalCrashContextStack* Next ; const FScopedAdditionalCrashContextProvider* Stack [ MaxStackDepth ] ; uint32 StackIndex = 0 ;)",
    "insertText": "FAdditionalCrashContextStack()"
  },
  {
    "label": "PushProviderInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushProviderInternal(const FScopedAdditionalCrashContextProvider* Provider)"
  },
  {
    "label": "PopProviderInternal()",
    "kind": "Method",
    "detail": "Function (Stack [ StackIndex + + ] = Provider ; } void)",
    "insertText": "PopProviderInternal()"
  },
  {
    "label": "FScopedAdditionalCrashContextProvider()",
    "kind": "Method",
    "detail": "Function (Stack [ - - StackIndex ] = nullptr ; } } ; struct FScopedAdditionalCrashContextProvider { public :)",
    "insertText": "FScopedAdditionalCrashContextProvider(TUniqueFunction<void(FCrashContextExtendedWriter&)> InFunc) : Func(MoveTemp(InFunc))"
  },
  {
    "label": "PushProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushProvider(this)"
  },
  {
    "label": "FScopedAdditionalCrashContextProvider()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FScopedAdditionalCrashContextProvider()"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Execute(FCrashContextExtendedWriter& Writer)"
  },
  {
    "label": "Func()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Func(Writer)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} private : TUniqueFunction<)",
    "insertText": "void(FCrashContextExtendedWriter&)"
  }
]