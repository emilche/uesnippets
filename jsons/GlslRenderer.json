[
  {
    "label": "GLContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLContext"
  },
  {
    "label": "SimpleWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleWindow"
  },
  {
    "label": "GlslRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlslRenderer"
  },
  {
    "label": "MX_RENDERGLSL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_RENDERGLSL_API"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_GLSLRENDERER_H # define MATERIALX_GLSLRENDERER_H # include<MaterialXRenderGlsl / Export . h> # include<MaterialXRenderGlsl / GLFramebuffer . h> # include<MaterialXRenderGlsl / GlslProgram . h> # include<MaterialXRender / ShaderRenderer . h> MATERIALX_NAMESPACE_BEGIN using GLContextPtr = std::shared_ptr<class GLContext> ; using SimpleWindowPtr = std::shared_ptr<class SimpleWindow> ; using GlslRendererPtr = std::shared_ptr<class GlslRenderer> ; class GlslRenderer : public ShaderRenderer { public : GlslRendererPtr)",
    "insertText": "create(unsigned int width = 512, unsigned int height = 512, Image::BaseType baseType = Image::BaseType::UINT8)"
  },
  {
    "label": "GlslRenderer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GlslRenderer()"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "initialize()"
  },
  {
    "label": "createProgram()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createProgram(ShaderPtr shader)"
  },
  {
    "label": "createProgram()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createProgram(const StageMap& stages)"
  },
  {
    "label": "validateInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "validateInputs()"
  },
  {
    "label": "setSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setSize(unsigned int width, unsigned int height)"
  },
  {
    "label": "render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "render()"
  },
  {
    "label": "renderTextureSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "renderTextureSpace(const Vector2& uvMin, const Vector2& uvMax)"
  },
  {
    "label": "captureImage()",
    "kind": "Method",
    "detail": "Function (ImagePtr)",
    "insertText": "captureImage(ImagePtr image = nullptr)"
  },
  {
    "label": "getFramebuffer()",
    "kind": "Method",
    "detail": "Function (GLFramebufferPtr)",
    "insertText": "getFramebuffer()"
  },
  {
    "label": "setScreenColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setScreenColor(const Color3& screenColor)"
  },
  {
    "label": "getScreenColor()",
    "kind": "Method",
    "detail": "Function (_screenColor = screenColor ; } Color3)",
    "insertText": "getScreenColor()"
  },
  {
    "label": "updateViewInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateViewInformation()"
  },
  {
    "label": "updateWorldInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateWorldInformation()"
  }
]