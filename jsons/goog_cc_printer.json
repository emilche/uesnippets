[
  {
    "label": "FieldLogger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldLogger"
  },
  {
    "label": "GoogCcStatePrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GoogCcStatePrinter"
  },
  {
    "label": "GoogCcDebugFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GoogCcDebugFactory"
  },
  {
    "label": "FieldLogger()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_GOOG_CC_TEST_GOOG_CC_PRINTER_H_ # define MODULES_CONGESTION_CONTROLLER_GOOG_CC_TEST_GOOG_CC_PRINTER_H_ # include<deque> # include<memory> # include<string> # include \" api / rtc_event_log / rtc_event_log . h \" # include \" api / transport / goog_cc_factory . h \" # include \" api / transport / network_control . h \" # include \" api / transport / network_types . h \" # include \" api / units / timestamp . h \" # include \" modules / congestion_controller / goog_cc / goog_cc_network_control . h \" # include \" test / logging / log_writer . h \" namespace webrtc { class FieldLogger { public : ~)",
    "insertText": "FieldLogger()"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (const std::string&)",
    "insertText": "name()"
  },
  {
    "label": "WriteValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValue(RtcEventLogOutput* out)"
  },
  {
    "label": "GoogCcStatePrinter()",
    "kind": "Method",
    "detail": "Function (} ; class GoogCcStatePrinter { public :)",
    "insertText": "GoogCcStatePrinter()"
  },
  {
    "label": "GoogCcStatePrinter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoogCcStatePrinter(const GoogCcStatePrinter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (GoogCcStatePrinter&)",
    "insertText": "operator(const GoogCcStatePrinter&)"
  },
  {
    "label": "PrintHeaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintHeaders(RtcEventLogOutput* log)"
  },
  {
    "label": "PrintState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintState(RtcEventLogOutput* log, GoogCcNetworkController* controller, Timestamp at_time)"
  },
  {
    "label": "CreateLoggers()",
    "kind": "Method",
    "detail": "Function (private : std::deque<FieldLogger*>)",
    "insertText": "CreateLoggers()"
  },
  {
    "label": "PlusInfinity()",
    "kind": "Method",
    "detail": "Function (std::deque<std::unique_ptr<FieldLogger>> loggers_ ; GoogCcNetworkController* controller_ = nullptr ; TargetTransferRate target_ ; PacerConfig pacing_ ; DataSize congestion_window_ =)",
    "insertText": "PlusInfinity()"
  },
  {
    "label": "GoogCcDebugFactory()",
    "kind": "Method",
    "detail": "Function (NetworkStateEstimate est_ ; } ; class GoogCcDebugFactory : public GoogCcNetworkControllerFactory { public :)",
    "insertText": "GoogCcDebugFactory()"
  },
  {
    "label": "GoogCcDebugFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GoogCcDebugFactory(GoogCcFactoryConfig config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<NetworkControllerInterface>)",
    "insertText": "Create(NetworkControllerConfig config)"
  },
  {
    "label": "PrintState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintState(Timestamp at_time)"
  },
  {
    "label": "AttachWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AttachWriter(std::unique_ptr<RtcEventLogOutput> log_writer)"
  }
]