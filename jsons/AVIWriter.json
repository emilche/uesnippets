[
  {
    "label": "FEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvent"
  },
  {
    "label": "TFuture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFuture"
  },
  {
    "label": "FAVIWriterOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAVIWriterOptions"
  },
  {
    "label": "FCapturedFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCapturedFrame"
  },
  {
    "label": "FCapturedFrames",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCapturedFrames"
  },
  {
    "label": "FAVIWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAVIWriter"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / Future . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" HAL / ThreadSafeBool . h \" # include \" Logging / LogMacros . h \" # include \" Math / Color . h \" # include \" Misc / Optional . h \" # include \" Misc / Paths . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" class FEvent ; template<ResultType> class TFuture ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMovieCapture, Warning, All)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FString, FResolveFileFormat, const FString&, const FString&)"
  },
  {
    "label": "FAVIWriterOptions()",
    "kind": "Method",
    "detail": "Function (struct FAVIWriterOptions {)",
    "insertText": "FAVIWriterOptions() : OutputFilename(FPaths::VideoCaptureDir() / TEXT(\"Capture.avi\")) , CaptureFramerateNumerator(30) , CaptureFramerateDenominator(1) , bSynchronizeFrames(false) , Width(0) , Height(0)"
  },
  {
    "label": "FCapturedFrame()",
    "kind": "Method",
    "detail": "Function (} FString OutputFilename ; int32 CaptureFramerateNumerator ; int32 CaptureFramerateDenominator ; TOptional<float> CompressionQuality ; FString CodecName ; bool bSynchronizeFrames ; uint32 Width ; uint32 Height ; } ; struct FCapturedFrame {)",
    "insertText": "FCapturedFrame() : StartTimeSeconds(), EndTimeSeconds(), FrameIndex(), FrameProcessedEvent(nullptr)"
  },
  {
    "label": "FCapturedFrame()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCapturedFrame(double InStartTimeSeconds, double InEndTimeSeconds, uint32 InFrameIndex, TArray<FColor> InFrameData)"
  },
  {
    "label": "FCapturedFrame()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCapturedFrame()"
  },
  {
    "label": "FCapturedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCapturedFrame(FCapturedFrame&& In) : StartTimeSeconds(In.StartTimeSeconds), EndTimeSeconds(In.EndTimeSeconds), FrameIndex(In.FrameIndex), FrameData(MoveTemp(In.FrameData)), FrameProcessedEvent(In.FrameProcessedEvent)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FCapturedFrame&)",
    "insertText": "operator(FCapturedFrame&& In)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (StartTimeSeconds = In . StartTimeSeconds ; EndTimeSeconds = In . EndTimeSeconds ; FrameIndex = In . FrameIndex ; FrameData =)",
    "insertText": "MoveTemp(In.FrameData)"
  },
  {
    "label": "FCapturedFrames()",
    "kind": "Method",
    "detail": "Function (FrameProcessedEvent = In . FrameProcessedEvent ; return* this ; } double StartTimeSeconds ; double EndTimeSeconds ; uint32 FrameIndex ; TArray<FColor> FrameData ; FEvent* FrameProcessedEvent ; } ; struct FCapturedFrames {)",
    "insertText": "FCapturedFrames(const FString& InArchiveDirectory, int32 InMaxInMemoryFrames)"
  },
  {
    "label": "FCapturedFrames()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCapturedFrames()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FCapturedFrame Frame)"
  },
  {
    "label": "ReadFrames()",
    "kind": "Method",
    "detail": "Function (TArray<FCapturedFrame>)",
    "insertText": "ReadFrames(uint32 WaitTimeMs)"
  },
  {
    "label": "GetNumOutstandingFrames()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumOutstandingFrames()"
  },
  {
    "label": "ArchiveFrame()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ArchiveFrame(FCapturedFrame Frame)"
  },
  {
    "label": "UnArchiveFrame()",
    "kind": "Method",
    "detail": "Function (TOptional<FCapturedFrame>)",
    "insertText": "UnArchiveFrame(uint32 FrameIndex)"
  },
  {
    "label": "StartUnArchiving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartUnArchiving()"
  },
  {
    "label": "FAVIWriter()",
    "kind": "Method",
    "detail": "Function (FString ArchiveDirectory ; FCriticalSection ArchiveFrameMutex ; TArray<uint32> ArchivedFrames ; uint32 TotalArchivedFrames ; FEvent* FrameReady ; FCriticalSection InMemoryFrameMutex ; TArray<FCapturedFrame> InMemoryFrames ; int32 MaxInMemoryFrames ; TOptional<TFuture<void>> UnarchiveTask ; } ; class FAVIWriter { protected :)",
    "insertText": "FAVIWriter(const FAVIWriterOptions& InOptions) : bCapturing(false) , FrameNumber(0) , Options(InOptions)"
  },
  {
    "label": "FAVIWriter()",
    "kind": "Method",
    "detail": "Function (} FThreadSafeBool bCapturing ; int32 FrameNumber ; TUniquePtr<FCapturedFrames> CapturedFrames ; public : ~)",
    "insertText": "FAVIWriter()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (FAVIWriterOptions Options ; FAVIWriter*)",
    "insertText": "CreateInstance(const FAVIWriterOptions& InOptions)"
  },
  {
    "label": "GetFrameData()",
    "kind": "Method",
    "detail": "Function (TArray<FCapturedFrame>)",
    "insertText": "GetFrameData(uint32 WaitTimeMs)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetWidth()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize()"
  },
  {
    "label": "DropFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropFrames(int32 NumFramesToDrop)"
  }
]