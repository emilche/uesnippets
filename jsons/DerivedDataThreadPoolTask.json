[
  {
    "label": "FQueuedThreadPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQueuedThreadPool"
  },
  {
    "label": "TUniqueFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniqueFunction"
  },
  {
    "label": "IRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRequestOwner"
  },
  {
    "label": "LaunchTaskInThreadPool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # define class FQueuedThreadPool ; template<FuncType> class TUniqueFunction ; namespace UE::DerivedData { class IRequestOwner ; } namespace UE::DerivedData { void)",
    "insertText": "LaunchTaskInThreadPool(uint64 MemoryEstimate, const TCHAR * DebugName, IRequestOwner& Owner, FQueuedThreadPool* ThreadPool, TUniqueFunction<void ()>&& TaskBody)"
  },
  {
    "label": "LaunchTaskInThreadPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchTaskInThreadPool(IRequestOwner& Owner, FQueuedThreadPool* ThreadPool, TUniqueFunction<void ()>&& TaskBody)"
  }
]