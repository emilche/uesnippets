[
  {
    "label": "IDNAInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDNAInfo"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "UTS46",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTS46"
  },
  {
    "label": "IDNA()",
    "kind": "Method",
    "detail": "Function (# ifndef __IDNA_H__ # define __IDNA_H__ # include \" unicode / utypes . h \" # if ! UCONFIG_NO_IDNA # include \" unicode / bytestream . h \" # include \" unicode / stringpiece . h \" # include \" unicode / uidna . h \" # include \" unicode / unistr . h \" U_NAMESPACE_BEGIN class IDNAInfo ; class IDNA : public UObject { public : ~)",
    "insertText": "IDNA()"
  },
  {
    "label": "createUTS46Instance()",
    "kind": "Method",
    "detail": "Function (IDNA*)",
    "insertText": "createUTS46Instance(uint32_t options, UErrorCode &errorCode)"
  },
  {
    "label": "labelToASCII()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "labelToASCII(const UnicodeString &label, UnicodeString &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "labelToUnicode()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "labelToUnicode(const UnicodeString &label, UnicodeString &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "nameToASCII()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "nameToASCII(const UnicodeString &name, UnicodeString &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "nameToUnicode()",
    "kind": "Method",
    "detail": "Function (UnicodeString&)",
    "insertText": "nameToUnicode(const UnicodeString &name, UnicodeString &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "labelToASCII_UTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "labelToASCII_UTF8(StringPiece label, ByteSink &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "labelToUnicodeUTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "labelToUnicodeUTF8(StringPiece label, ByteSink &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "nameToASCII_UTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nameToASCII_UTF8(StringPiece name, ByteSink &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "nameToUnicodeUTF8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nameToUnicodeUTF8(StringPiece name, ByteSink &dest, IDNAInfo &info, UErrorCode &errorCode)"
  },
  {
    "label": "IDNAInfo()",
    "kind": "Method",
    "detail": "Function (} ; class UTS46 ; class IDNAInfo : public UMemory { public :)",
    "insertText": "IDNAInfo() : errors(0), labelErrors(0), isTransDiff(FALSE), isBiDi(FALSE), isOkBiDi(TRUE)"
  },
  {
    "label": "hasErrors()",
    "kind": "Method",
    "detail": "Function (} UBool)",
    "insertText": "hasErrors()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IDNAInfo&)",
    "insertText": "operator(const IDNAInfo &other)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  }
]