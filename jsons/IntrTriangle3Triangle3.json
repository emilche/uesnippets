[
  {
    "label": "TIntrTriangle3Triangle3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TIntrTriangle3Triangle3"
  },
  {
    "label": "Plane0()",
    "kind": "Method",
    "detail": "Function (TPlane3<Real>)",
    "insertText": "Plane0(Triangle0.V[0], Triangle0.V[1], Triangle0.V[2])"
  },
  {
    "label": "Plane1()",
    "kind": "Method",
    "detail": "Function (TPlane3<Real>)",
    "insertText": "Plane1(Triangle1.V[0], Triangle1.V[1], Triangle1.V[2])"
  },
  {
    "label": "SwappedTrisIntr()",
    "kind": "Method",
    "detail": "Function (TIntrTriangle3Triangle3<Real>)",
    "insertText": "SwappedTrisIntr(Triangle1, Triangle0)"
  },
  {
    "label": "GetCoplanarIntersection()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCoplanarIntersection(Plane0, Triangle0, Triangle1)"
  },
  {
    "label": "IntersectsSegment()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IntersectsSegment(Plane0, Triangle0, Triangle1.V[iM], Triangle1.V[iP])"
  },
  {
    "label": "ContainsPoint()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ContainsPoint(Triangle0, Plane0, Triangle1.V[i])"
  },
  {
    "label": "IntersectsSegment()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IntersectsSegment(Plane0, Triangle0, intr0, intr1)"
  },
  {
    "label": "IntersectsSegment()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IntersectsSegment(Plane0, Triangle0, Triangle1.V[i], intr0)"
  },
  {
    "label": "projSeg()",
    "kind": "Method",
    "detail": "Function (TSegment2<Real>)",
    "insertText": "projSeg(projEnd0, projEnd1)"
  },
  {
    "label": "calc()",
    "kind": "Method",
    "detail": "Function (TIntrSegment2Triangle2<Real>)",
    "insertText": "calc(projSeg, projTri)"
  },
  {
    "label": "intr()",
    "kind": "Method",
    "detail": "Function (TIntrTriangle2Triangle2<Real>)",
    "insertText": "intr(projTri0, projTri1)"
  }
]