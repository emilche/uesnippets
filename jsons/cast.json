[
  {
    "label": "cast_key_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "cast_key_st"
  },
  {
    "label": "CAST_set_key()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_CAST_H # define HEADER_CAST_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_CAST # ifdef __cplusplus \" C \" { # endif # define CAST_ENCRYPT 1 # define CAST_DECRYPT 0 # define CAST_LONG unsigned int # define CAST_BLOCK 8 # define CAST_KEY_LENGTH 1 6 typedef struct cast_key_st { CAST_LONG data [ 3 2 ] ; int short_key ; } CAST_KEY ; void)",
    "insertText": "CAST_set_key(CAST_KEY *key, int len, const unsigned char *data)"
  },
  {
    "label": "CAST_ecb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CAST_ecb_encrypt(const unsigned char *in, unsigned char *out, const CAST_KEY *key, int enc)"
  },
  {
    "label": "CAST_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CAST_encrypt(CAST_LONG *data, const CAST_KEY *key)"
  },
  {
    "label": "CAST_decrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CAST_decrypt(CAST_LONG *data, const CAST_KEY *key)"
  },
  {
    "label": "CAST_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CAST_cbc_encrypt(const unsigned char *in, unsigned char *out, long length, const CAST_KEY *ks, unsigned char *iv, int enc)"
  },
  {
    "label": "CAST_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CAST_cfb64_encrypt(const unsigned char *in, unsigned char *out, long length, const CAST_KEY *schedule, unsigned char *ivec, int *num, int enc)"
  },
  {
    "label": "CAST_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CAST_ofb64_encrypt(const unsigned char *in, unsigned char *out, long length, const CAST_KEY *schedule, unsigned char *ivec, int *num)"
  }
]