[
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FAssetRegistryModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRegistryModule"
  },
  {
    "label": "ModuleName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / IAssetRegistry . h \" # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Misc / AssetRegistryInterface . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" CoreMinimal . h \" # endif class UPackage ; namespace AssetRegistryConstants { const FName)",
    "insertText": "ModuleName(\"AssetRegistry\")"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (} class FAssetRegistryModule : public IModuleInterface,public IAssetRegistryInterface { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IAssetRegistry&)",
    "insertText": "Get()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (} IAssetRegistry*)",
    "insertText": "TryGet()"
  },
  {
    "label": "GetRegistry()",
    "kind": "Method",
    "detail": "Function (} IAssetRegistry&)",
    "insertText": "GetRegistry()"
  },
  {
    "label": "TickAssetRegistry()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "TickAssetRegistry(float DeltaTime)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().Tick(DeltaTime)"
  },
  {
    "label": "AssetCreated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AssetCreated(UObject* NewAsset)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().AssetCreated(NewAsset)"
  },
  {
    "label": "AssetDeleted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AssetDeleted(UObject* DeletedAsset)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().AssetDeleted(DeletedAsset)"
  },
  {
    "label": "AssetRenamed()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AssetRenamed(const UObject* RenamedAsset, const FString& OldObjectPath)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().AssetRenamed(RenamedAsset, OldObjectPath)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS ;)",
    "insertText": "GetChecked().AssetSaved(SavedAsset)"
  },
  {
    "label": "AssetsSaved()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS ; } void)",
    "insertText": "AssetsSaved(TArray<FAssetData>&& SavedAssets)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().AssetsSaved(MoveTemp(SavedAssets))"
  },
  {
    "label": "PackageDeleted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PackageDeleted(UPackage* DeletedPackage)"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().PackageDeleted(DeletedPackage)"
  },
  {
    "label": "GetDependencies()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetDependencies(FName InPackageName, TArray<FName>& OutDependencies, UE::AssetRegistry::EDependencyCategory Category = UE::AssetRegistry::EDependencyCategory::Package, const UE::AssetRegistry::FDependencyQuery& Flags = UE::AssetRegistry::FDependencyQuery())"
  },
  {
    "label": "GetChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChecked().GetDependencies(InPackageName, OutDependencies, Category, Flags)"
  },
  {
    "label": "TryGetAssetByObjectPath()",
    "kind": "Method",
    "detail": "Function (} UE::AssetRegistry::EExists)",
    "insertText": "TryGetAssetByObjectPath(const FSoftObjectPath& ObjectPath, FAssetData& OutAssetData)"
  },
  {
    "label": "TryGetAssetPackageData()",
    "kind": "Method",
    "detail": "Function (} UE::AssetRegistry::EExists)",
    "insertText": "TryGetAssetPackageData(FName PackageName, FAssetPackageData& OutAssetPackageData)"
  },
  {
    "label": "TryGetAssetPackageData()",
    "kind": "Method",
    "detail": "Function (FName OutCorrectCasePackageName ; return)",
    "insertText": "TryGetAssetPackageData(PackageName, OutAssetPackageData, OutCorrectCasePackageName)"
  },
  {
    "label": "TryGetAssetPackageData()",
    "kind": "Method",
    "detail": "Function (} UE::AssetRegistry::EExists)",
    "insertText": "TryGetAssetPackageData(FName PackageName, FAssetPackageData& OutAssetPackageData, FName& OutCorrectCasePackageName)"
  },
  {
    "label": "EnumerateAssets()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EnumerateAssets(const FARFilter& Filter, TFunctionRef<bool(const FAssetData&)> Callback, UE::AssetRegistry::EEnumerateAssetsFlags InEnumerateFlags)"
  }
]