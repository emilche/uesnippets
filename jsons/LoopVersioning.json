[
  {
    "label": "Loop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Loop"
  },
  {
    "label": "LoopAccessInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LoopAccessInfo"
  },
  {
    "label": "LoopInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LoopInfo"
  },
  {
    "label": "LoopVersioning",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LoopVersioning"
  },
  {
    "label": "LoopVersioning()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TRANSFORMS_UTILS_LOOPVERSIONING_H # define LLVM_TRANSFORMS_UTILS_LOOPVERSIONING_H # include \" llvm / Transforms / Utils / ValueMapper . h \" namespace llvm { class Loop ; class LoopAccessInfo ; class LoopInfo ; class LoopVersioning { public :)",
    "insertText": "LoopVersioning(const LoopAccessInfo &LAI, Loop *L, LoopInfo *LI, DominatorTree *DT, const SmallVector<int, 8> *PtrToPartition = nullptr)"
  },
  {
    "label": "needsRuntimeChecks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "needsRuntimeChecks()"
  },
  {
    "label": "versionLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "versionLoop(Pass *P)"
  },
  {
    "label": "addPHINodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addPHINodes(const SmallVectorImpl<Instruction *> &DefsUsedOutside)"
  },
  {
    "label": "getVersionedLoop()",
    "kind": "Method",
    "detail": "Function (Loop*)",
    "insertText": "getVersionedLoop()"
  }
]