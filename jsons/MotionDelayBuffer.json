[
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FMotionDelayBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMotionDelayBuffer"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FMotionDelayTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMotionDelayTarget"
  },
  {
    "label": "FMotionDelayClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMotionDelayClient"
  },
  {
    "label": "FMotionDelayService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMotionDelayService"
  },
  {
    "label": "FMotionDelayClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMotionDelayClient"
  },
  {
    "label": "FTargetTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetTransform"
  },
  {
    "label": "TCircularHistoryBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TCircularHistoryBuffer"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool bEnable)"
  },
  {
    "label": "RegisterDelayTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterDelayTarget(USceneComponent* MotionControlledComponent, const int32 PlayerIndex, const FName SourceId)"
  },
  {
    "label": "RegisterDelayClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDelayClient(TSharedRef<FMotionDelayClient, ESPMode::ThreadSafe> DelayClient)"
  },
  {
    "label": "FMotionDelayClient()",
    "kind": "Method",
    "detail": "Function (HEADMOUNTEDDISPLAY_API)",
    "insertText": "FMotionDelayClient(const FAutoRegister& AutoRegister)"
  },
  {
    "label": "Apply_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply_RenderThread(FSceneInterface* Scene)"
  },
  {
    "label": "Restore_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Restore_RenderThread(FSceneInterface* Scene)"
  },
  {
    "label": "FindDelayTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindDelayTransform(USceneComponent* Target, uint32 Delay, FTransform& TransformOut)"
  },
  {
    "label": "TCircularHistoryBuffer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TCircularHistoryBuffer(uint32 InitialCapacity = 0)"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize(uint32 NewCapacity)"
  },
  {
    "label": "InsertAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertAt(uint32 Index, const ElementType& Element)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "ResizeGrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeGrow(uint32 AddedSlack)"
  },
  {
    "label": "Realign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Realign()"
  },
  {
    "label": "ResizeShrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeShrink(uint32 ShrinkAmount)"
  }
]