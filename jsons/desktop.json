[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "Desktop()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_DESKTOP_H_ # define MODULES_DESKTOP_CAPTURE_WIN_DESKTOP_H_ # include<windows . h> # include<string> # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RTC_EXPORT Desktop { public : ~)",
    "insertText": "Desktop()"
  },
  {
    "label": "Desktop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Desktop(const Desktop&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Desktop&)",
    "insertText": "operator(const Desktop&)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetName(std::wstring* desktop_name_out)"
  },
  {
    "label": "IsSame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSame(const Desktop& other)"
  },
  {
    "label": "SetThreadDesktop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetThreadDesktop()"
  },
  {
    "label": "GetDesktop()",
    "kind": "Method",
    "detail": "Function (Desktop*)",
    "insertText": "GetDesktop(const wchar_t* desktop_name)"
  },
  {
    "label": "GetInputDesktop()",
    "kind": "Method",
    "detail": "Function (Desktop*)",
    "insertText": "GetInputDesktop()"
  },
  {
    "label": "GetThreadDesktop()",
    "kind": "Method",
    "detail": "Function (Desktop*)",
    "insertText": "GetThreadDesktop()"
  },
  {
    "label": "Desktop()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "Desktop(HDESK desktop, bool own)"
  }
]