[
  {
    "label": "device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "device"
  },
  {
    "label": "queue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "queue"
  },
  {
    "label": "event",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "event"
  },
  {
    "label": "CUstream_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CUstream_st"
  },
  {
    "label": "ihipStream_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ihipStream_t"
  },
  {
    "label": "OIDNDeviceImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OIDNDeviceImpl"
  },
  {
    "label": "OIDNBufferImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OIDNBufferImpl"
  },
  {
    "label": "OIDNFilterImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OIDNFilterImpl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stddef . h> # include<stdbool . h> # include<stdint . h> # include \" config . h \" # if)",
    "insertText": "defined(__cplusplus) #if defined(SYCL_LANGUAGE_VERSION) #include <sycl/sycl.hpp> #define OIDN_SYCL_HPP #elif defined(SYCL_FEATURE_SET_FULL) || defined(SYCL_FEATURE_SET_REDUCED)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (class device ; class queue ; class event ; } # endif # endif typedef struct CUstream_st* cudaStream_t ; typedef struct ihipStream_t* hipStream_t ; # if)",
    "insertText": "defined(__OBJC__)"
  },
  {
    "label": "oidnGetNumPhysicalDevices()",
    "kind": "Method",
    "detail": "Function (@ protocol MTLCommandQueue ; @ protocol MTLBuffer ; typedef id<MTLDevice> MTLDevice_id ; typedef id<MTLCommandQueue> MTLCommandQueue_id ; typedef id<MTLBuffer> MTLBuffer_id ; # else typedef void* MTLDevice_id ; typedef void* MTLCommandQueue_id ; typedef void* MTLBuffer_id ; # endif OIDN_API_NAMESPACE_BEGIN # define OIDN_UUID_SIZE 1 6 u # define OIDN_LUID_SIZE 8 u int)",
    "insertText": "oidnGetNumPhysicalDevices()"
  },
  {
    "label": "oidnGetPhysicalDeviceBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "oidnGetPhysicalDeviceBool(int physicalDeviceID, const char* name)"
  },
  {
    "label": "oidnGetPhysicalDeviceInt()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "oidnGetPhysicalDeviceInt(int physicalDeviceID, const char* name)"
  },
  {
    "label": "oidnGetPhysicalDeviceUInt()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "oidnGetPhysicalDeviceUInt(int physicalDeviceID, const char* name)"
  },
  {
    "label": "oidnGetPhysicalDeviceString()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "oidnGetPhysicalDeviceString(int physicalDeviceID, const char* name)"
  },
  {
    "label": "oidnGetPhysicalDeviceData()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "oidnGetPhysicalDeviceData(int physicalDeviceID, const char* name, size_t* byteSize)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef enum { OIDN_DEVICE_TYPE_DEFAULT = 0,OIDN_DEVICE_TYPE_CPU = 1,OIDN_DEVICE_TYPE_SYCL = 2,OIDN_DEVICE_TYPE_CUDA = 3,OIDN_DEVICE_TYPE_HIP = 4,OIDN_DEVICE_TYPE_METAL = 5,} OIDNDeviceType ; typedef enum { OIDN_ERROR_NONE = 0,OIDN_ERROR_UNKNOWN = 1,OIDN_ERROR_INVALID_ARGUMENT = 2,OIDN_ERROR_INVALID_OPERATION = 3,OIDN_ERROR_OUT_OF_MEMORY = 4,OIDN_ERROR_UNSUPPORTED_HARDWARE = 5,OIDN_ERROR_CANCELLED = 6,} OIDNError ; typedef)",
    "insertText": "void(*OIDNErrorFunction)(void* userPtr, OIDNError code, const char* message)"
  },
  {
    "label": "oidnIsCPUDeviceSupported()",
    "kind": "Method",
    "detail": "Function (typedef struct OIDNDeviceImpl* OIDNDevice ; bool)",
    "insertText": "oidnIsCPUDeviceSupported()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) OIDN_API bool oidnIsSYCLDeviceSupported(const sycl::device* device)"
  },
  {
    "label": "oidnIsCUDADeviceSupported()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "oidnIsCUDADeviceSupported(int deviceID)"
  },
  {
    "label": "oidnIsHIPDeviceSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "oidnIsHIPDeviceSupported(int deviceID)"
  },
  {
    "label": "oidnIsMetalDeviceSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "oidnIsMetalDeviceSupported(MTLDevice_id device)"
  },
  {
    "label": "oidnNewDevice()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewDevice(OIDNDeviceType type)"
  },
  {
    "label": "oidnNewDeviceByID()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewDeviceByID(int physicalDeviceID)"
  },
  {
    "label": "oidnNewDeviceByUUID()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewDeviceByUUID(const void* uuid)"
  },
  {
    "label": "oidnNewDeviceByLUID()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewDeviceByLUID(const void* luid)"
  },
  {
    "label": "oidnNewDeviceByPCIAddress()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewDeviceByPCIAddress(int pciDomain, int pciBus, int pciDevice, int pciFunction)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) OIDN_API OIDNDevice oidnNewSYCLDevice(const sycl::queue* queues, int numQueues)"
  },
  {
    "label": "oidnNewCUDADevice()",
    "kind": "Method",
    "detail": "Function (# endif OIDNDevice)",
    "insertText": "oidnNewCUDADevice(const int* deviceIDs, const cudaStream_t* streams, int numPairs)"
  },
  {
    "label": "oidnNewHIPDevice()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewHIPDevice(const int* deviceIDs, const hipStream_t* streams, int numPairs)"
  },
  {
    "label": "oidnNewMetalDevice()",
    "kind": "Method",
    "detail": "Function (OIDNDevice)",
    "insertText": "oidnNewMetalDevice(const MTLCommandQueue_id* commandQueues, int numQueues)"
  },
  {
    "label": "oidnRetainDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnRetainDevice(OIDNDevice device)"
  },
  {
    "label": "oidnReleaseDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnReleaseDevice(OIDNDevice device)"
  },
  {
    "label": "oidnSetDeviceBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetDeviceBool(OIDNDevice device, const char* name, bool value)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnSetDevice1b is deprecated. Use oidnSetDeviceBool instead.\") inline void oidnSetDevice1b(OIDNDevice device, const char* name, bool value)"
  },
  {
    "label": "oidnSetDeviceBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetDeviceBool(device, name, value)"
  },
  {
    "label": "oidnSetDeviceInt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetDeviceInt(OIDNDevice device, const char* name, int value)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnSetDevice1i is deprecated. Use oidnSetDeviceInt instead.\") inline void oidnSetDevice1i(OIDNDevice device, const char* name, int value)"
  },
  {
    "label": "oidnSetDeviceInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetDeviceInt(device, name, value)"
  },
  {
    "label": "oidnSetDeviceUInt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetDeviceUInt(OIDNDevice device, const char* name, unsigned int value)"
  },
  {
    "label": "oidnSetDeviceInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetDeviceInt(device, name, (int)value)"
  },
  {
    "label": "oidnGetDeviceBool()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "oidnGetDeviceBool(OIDNDevice device, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnGetDevice1b is deprecated. Use oidnGetDeviceBool instead.\") inline bool oidnGetDevice1b(OIDNDevice device, const char* name)"
  },
  {
    "label": "oidnGetDeviceInt()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "oidnGetDeviceInt(OIDNDevice device, const char* name)"
  },
  {
    "label": "oidnGetDeviceUInt()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "oidnGetDeviceUInt(OIDNDevice device, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OIDN_DEPRECATED(\"oidnGetDevice1i is deprecated. Use oidnGetDeviceInt instead.\") inline int oidnGetDevice1i(OIDNDevice device, const char* name)"
  },
  {
    "label": "oidnSetDeviceErrorFunction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetDeviceErrorFunction(OIDNDevice device, OIDNErrorFunction func, void* userPtr)"
  },
  {
    "label": "oidnGetDeviceError()",
    "kind": "Method",
    "detail": "Function (OIDNError)",
    "insertText": "oidnGetDeviceError(OIDNDevice device, const char** outMessage)"
  },
  {
    "label": "oidnCommitDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnCommitDevice(OIDNDevice device)"
  },
  {
    "label": "oidnSyncDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSyncDevice(OIDNDevice device)"
  },
  {
    "label": "oidnNewBuffer()",
    "kind": "Method",
    "detail": "Function (typedef enum { OIDN_FORMAT_UNDEFINED = 0,OIDN_FORMAT_FLOAT = 1,OIDN_FORMAT_FLOAT2,OIDN_FORMAT_FLOAT3,OIDN_FORMAT_FLOAT4,OIDN_FORMAT_HALF = 2 5 7,OIDN_FORMAT_HALF2,OIDN_FORMAT_HALF3,OIDN_FORMAT_HALF4,} OIDNFormat ; typedef enum { OIDN_STORAGE_UNDEFINED = 0,OIDN_STORAGE_HOST = 1,OIDN_STORAGE_DEVICE = 2,OIDN_STORAGE_MANAGED = 3,} OIDNStorage ; typedef enum { OIDN_EXTERNAL_MEMORY_TYPE_FLAG_NONE = 0,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_OPAQUE_FD = 1<<0,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_DMA_BUF = 1<<1,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_OPAQUE_WIN32 = 1<<2,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_OPAQUE_WIN32_KMT = 1<<3,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_D3D11_TEXTURE = 1<<4,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_D3D11_TEXTURE_KMT = 1<<5,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_D3D11_RESOURCE = 1<<6,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_D3D11_RESOURCE_KMT = 1<<7,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_D3D12_HEAP = 1<<8,OIDN_EXTERNAL_MEMORY_TYPE_FLAG_D3D12_RESOURCE = 1<<9,} OIDNExternalMemoryTypeFlag ; typedef struct OIDNBufferImpl* OIDNBuffer ; OIDNBuffer)",
    "insertText": "oidnNewBuffer(OIDNDevice device, size_t byteSize)"
  },
  {
    "label": "oidnNewBufferWithStorage()",
    "kind": "Method",
    "detail": "Function (OIDNBuffer)",
    "insertText": "oidnNewBufferWithStorage(OIDNDevice device, size_t byteSize, OIDNStorage storage)"
  },
  {
    "label": "oidnNewSharedBuffer()",
    "kind": "Method",
    "detail": "Function (OIDNBuffer)",
    "insertText": "oidnNewSharedBuffer(OIDNDevice device, void* devPtr, size_t byteSize)"
  },
  {
    "label": "oidnNewSharedBufferFromFD()",
    "kind": "Method",
    "detail": "Function (OIDNBuffer)",
    "insertText": "oidnNewSharedBufferFromFD(OIDNDevice device, OIDNExternalMemoryTypeFlag fdType, int fd, size_t byteSize)"
  },
  {
    "label": "oidnNewSharedBufferFromWin32Handle()",
    "kind": "Method",
    "detail": "Function (OIDNBuffer)",
    "insertText": "oidnNewSharedBufferFromWin32Handle(OIDNDevice device, OIDNExternalMemoryTypeFlag handleType, void* handle, const void* name, size_t byteSize)"
  },
  {
    "label": "oidnNewSharedBufferFromMetal()",
    "kind": "Method",
    "detail": "Function (OIDNBuffer)",
    "insertText": "oidnNewSharedBufferFromMetal(OIDNDevice device, MTLBuffer_id buffer)"
  },
  {
    "label": "oidnGetBufferSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "oidnGetBufferSize(OIDNBuffer buffer)"
  },
  {
    "label": "oidnGetBufferStorage()",
    "kind": "Method",
    "detail": "Function (OIDNStorage)",
    "insertText": "oidnGetBufferStorage(OIDNBuffer buffer)"
  },
  {
    "label": "oidnGetBufferData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "oidnGetBufferData(OIDNBuffer buffer)"
  },
  {
    "label": "oidnReadBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnReadBuffer(OIDNBuffer buffer, size_t byteOffset, size_t byteSize, void* dstHostPtr)"
  },
  {
    "label": "oidnReadBufferAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnReadBufferAsync(OIDNBuffer buffer, size_t byteOffset, size_t byteSize, void* dstHostPtr)"
  },
  {
    "label": "oidnWriteBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnWriteBuffer(OIDNBuffer buffer, size_t byteOffset, size_t byteSize, const void* srcHostPtr)"
  },
  {
    "label": "oidnWriteBufferAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnWriteBufferAsync(OIDNBuffer buffer, size_t byteOffset, size_t byteSize, const void* srcHostPtr)"
  },
  {
    "label": "oidnRetainBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnRetainBuffer(OIDNBuffer buffer)"
  },
  {
    "label": "oidnReleaseBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnReleaseBuffer(OIDNBuffer buffer)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef enum { OIDN_QUALITY_DEFAULT = 0,OIDN_QUALITY_FAST = 4,OIDN_QUALITY_BALANCED = 5,OIDN_QUALITY_HIGH = 6,} OIDNQuality ; typedef)",
    "insertText": "bool(*OIDNProgressMonitorFunction)(void* userPtr, double n)"
  },
  {
    "label": "oidnNewFilter()",
    "kind": "Method",
    "detail": "Function (typedef struct OIDNFilterImpl* OIDNFilter ; OIDNFilter)",
    "insertText": "oidnNewFilter(OIDNDevice device, const char* type)"
  },
  {
    "label": "oidnRetainFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnRetainFilter(OIDNFilter filter)"
  },
  {
    "label": "oidnReleaseFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnReleaseFilter(OIDNFilter filter)"
  },
  {
    "label": "oidnSetFilterImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetFilterImage(OIDNFilter filter, const char* name, OIDNBuffer buffer, OIDNFormat format, size_t width, size_t height, size_t byteOffset, size_t pixelByteStride, size_t rowByteStride)"
  },
  {
    "label": "oidnSetSharedFilterImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetSharedFilterImage(OIDNFilter filter, const char* name, void* devPtr, OIDNFormat format, size_t width, size_t height, size_t byteOffset, size_t pixelByteStride, size_t rowByteStride)"
  },
  {
    "label": "oidnUnsetFilterImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnUnsetFilterImage(OIDNFilter filter, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnRemoveFilterImage is deprecated. Use oidnUnsetFilterImage instead.\") inline void oidnRemoveFilterImage(OIDNFilter filter, const char* name)"
  },
  {
    "label": "oidnUnsetFilterImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnUnsetFilterImage(filter, name)"
  },
  {
    "label": "oidnSetSharedFilterData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetSharedFilterData(OIDNFilter filter, const char* name, void* hostPtr, size_t byteSize)"
  },
  {
    "label": "oidnUpdateFilterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnUpdateFilterData(OIDNFilter filter, const char* name)"
  },
  {
    "label": "oidnUnsetFilterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnUnsetFilterData(OIDNFilter filter, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnRemoveFilterData is deprecated. Use oidnUnsetFilterData instead.\") inline void oidnRemoveFilterData(OIDNFilter filter, const char* name)"
  },
  {
    "label": "oidnUnsetFilterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnUnsetFilterData(filter, name)"
  },
  {
    "label": "oidnSetFilterBool()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetFilterBool(OIDNFilter filter, const char* name, bool value)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnSetFilter1b is deprecated. Use oidnSetFilterBool instead.\") inline void oidnSetFilter1b(OIDNFilter filter, const char* name, bool value)"
  },
  {
    "label": "oidnSetFilterBool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetFilterBool(filter, name, value)"
  },
  {
    "label": "oidnGetFilterBool()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "oidnGetFilterBool(OIDNFilter filter, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnGetFilter1b is deprecated. Use oidnGetFilterBool instead.\") inline bool oidnGetFilter1b(OIDNFilter filter, const char* name)"
  },
  {
    "label": "oidnSetFilterInt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetFilterInt(OIDNFilter filter, const char* name, int value)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnSetFilter1i is deprecated. Use oidnSetFilterInt instead.\") inline void oidnSetFilter1i(OIDNFilter filter, const char* name, int value)"
  },
  {
    "label": "oidnSetFilterInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetFilterInt(filter, name, value)"
  },
  {
    "label": "oidnGetFilterInt()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "oidnGetFilterInt(OIDNFilter filter, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnGetFilter1i is deprecated. Use oidnGetFilterInt instead.\") inline int oidnGetFilter1i(OIDNFilter filter, const char* name)"
  },
  {
    "label": "oidnSetFilterFloat()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetFilterFloat(OIDNFilter filter, const char* name, float value)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnSetFilter1f is deprecated. Use oidnSetFilterFloat instead.\") inline void oidnSetFilter1f(OIDNFilter filter, const char* name, float value)"
  },
  {
    "label": "oidnSetFilterFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnSetFilterFloat(filter, name, value)"
  },
  {
    "label": "oidnGetFilterFloat()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "oidnGetFilterFloat(OIDNFilter filter, const char* name)"
  },
  {
    "label": "OIDN_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OIDN_DEPRECATED(\"oidnGetFilter1f is deprecated. Use oidnGetFilterFloat instead.\") inline float oidnGetFilter1f(OIDNFilter filter, const char* name)"
  },
  {
    "label": "oidnSetFilterProgressMonitorFunction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "oidnSetFilterProgressMonitorFunction(OIDNFilter filter, OIDNProgressMonitorFunction func, void* userPtr)"
  },
  {
    "label": "oidnCommitFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnCommitFilter(OIDNFilter filter)"
  },
  {
    "label": "oidnExecuteFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnExecuteFilter(OIDNFilter filter)"
  },
  {
    "label": "oidnExecuteFilterAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "oidnExecuteFilterAsync(OIDNFilter filter)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) OIDN_API void oidnExecuteSYCLFilterAsync(OIDNFilter filter, const sycl::event* depEvents, int numDepEvents, sycl::event* doneEvent)"
  }
]