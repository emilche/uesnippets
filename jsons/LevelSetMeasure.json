[
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "GridType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridType"
  },
  {
    "label": "DiracDelta",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiracDelta"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "LevelSetMeasure",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LevelSetMeasure"
  },
  {
    "label": "MeasureArea",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MeasureArea"
  },
  {
    "label": "MeasureCurvatures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MeasureCurvatures"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "levelSetArea()",
    "kind": "Method",
    "detail": "Function (Real)",
    "insertText": "levelSetArea(const GridType& grid, bool useWorldSpace = true)"
  },
  {
    "label": "levelSetVolume()",
    "kind": "Method",
    "detail": "Function (Real)",
    "insertText": "levelSetVolume(const GridType& grid, bool useWorldSpace = true)"
  },
  {
    "label": "levelSetEulerCharacteristic()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "levelSetEulerCharacteristic(const GridType& grid)"
  },
  {
    "label": "levelSetGenus()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "levelSetGenus(const GridType& grid)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(const GridType& grid)"
  },
  {
    "label": "area()",
    "kind": "Method",
    "detail": "Function (Real)",
    "insertText": "area(bool useWorldUnits = true)"
  },
  {
    "label": "volume()",
    "kind": "Method",
    "detail": "Function (Real)",
    "insertText": "volume(bool useWorldUnits = true)"
  },
  {
    "label": "totMeanCurvature()",
    "kind": "Method",
    "detail": "Function (Real)",
    "insertText": "totMeanCurvature(bool useWorldUnits = true)"
  },
  {
    "label": "totGaussianCurvature()",
    "kind": "Method",
    "detail": "Function (Real)",
    "insertText": "totGaussianCurvature(bool useWorldUnits = true)"
  },
  {
    "label": "eulerCharacteristic()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "eulerCharacteristic()"
  },
  {
    "label": "checkInterrupter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "checkInterrupter()"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (MeasureArea)",
    "insertText": "m(this)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (MeasureArea)",
    "insertText": "m(this)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (MeasureCurvatures)",
    "insertText": "m(this)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (MeasureCurvatures)",
    "insertText": "m(this)"
  },
  {
    "label": "DD()",
    "kind": "Method",
    "detail": "Function (DiracDelta<Real>)",
    "insertText": "DD(1.5)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (cancellation)",
    "insertText": "for(VoxelCIterT voxelIter = leafIter->cbeginValueOn()"
  },
  {
    "label": "DD()",
    "kind": "Method",
    "detail": "Function (DiracDelta<Real>)",
    "insertText": "DD(1.5)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (cancellation)",
    "insertText": "for(VoxelCIterT voxelIter = leafIter->cbeginValueOn()"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (LevelSetMeasure<GridT>)",
    "insertText": "m(grid)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (LevelSetMeasure<GridT>)",
    "insertText": "m(grid)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (LevelSetMeasure<GridT>)",
    "insertText": "m(grid)"
  },
  {
    "label": "doLevelSetEulerCharacteristic()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "doLevelSetEulerCharacteristic(grid)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (LevelSetMeasure<GridT>)",
    "insertText": "m(grid)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (LevelSetMeasure<GridT>)",
    "insertText": "m(grid)"
  },
  {
    "label": "doLevelSetGenus()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "doLevelSetGenus(grid)"
  }
]