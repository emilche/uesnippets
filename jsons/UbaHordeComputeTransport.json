[
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FUbaHordeComputeTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUbaHordeComputeTransport"
  },
  {
    "label": "FUbaHordeComputeTransport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Compute / ComputeTransport . h \" # include \" UbaHordeMetaClient . h \" class FSocket ; class FUbaHordeComputeTransport : public FComputeTransport { public :)",
    "insertText": "FUbaHordeComputeTransport(const FHordeRemoteMachineInfo &Info, bool& InHasErrors)"
  },
  {
    "label": "FUbaHordeComputeTransport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FUbaHordeComputeTransport()"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Send(const void* Data, size_t Size)"
  },
  {
    "label": "Recv()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Recv(void* Data, size_t Size)"
  },
  {
    "label": "MarkComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkComplete()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  }
]