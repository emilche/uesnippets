[
  {
    "label": "FPacketContentViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPacketContentViewport"
  },
  {
    "label": "FPacketContentViewport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Insights / ViewModels / AxisViewportDouble . h \" namespace UE::Insights::NetworkingProfiler { class FPacketContentViewport { public :)",
    "insertText": "FPacketContentViewport()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetHorizontalAxisViewport()",
    "kind": "Method",
    "detail": "Function (Height = 0 . 0 f ; TopEventPosY = 3 2 . 0 f + 4 . 0 f ; EventHeight = 1 4 . 0 f ; EventDY = 2 . 0 f ; } const FAxisViewportDouble&)",
    "insertText": "GetHorizontalAxisViewport()"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetHeight()"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (const bool bWidthChanged = HorizontalAxisViewport .)",
    "insertText": "SetSize(InWidth)"
  },
  {
    "label": "OnSizeChanged()",
    "kind": "Method",
    "detail": "Function (Height = InHeight ;)",
    "insertText": "OnSizeChanged()"
  },
  {
    "label": "GetEventHeight()",
    "kind": "Method",
    "detail": "Function (TopEventPosY = InTopEventPosY ; } float)",
    "insertText": "GetEventHeight()"
  },
  {
    "label": "GetEventDY()",
    "kind": "Method",
    "detail": "Function (EventHeight = InEventHeight ; } float)",
    "insertText": "GetEventDY()"
  }
]