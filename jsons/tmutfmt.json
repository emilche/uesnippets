[
  {
    "label": "UTimeUnitFormatStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTimeUnitFormatStyle"
  },
  {
    "label": "UTimeUnitFormatStyle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTimeUnitFormatStyle"
  },
  {
    "label": "Hashtable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Hashtable"
  },
  {
    "label": "UVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector"
  },
  {
    "label": "TimeUnitFormatReadSink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TimeUnitFormatReadSink"
  },
  {
    "label": "instead",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instead"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "TimeUnitFormatReadSink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TimeUnitFormatReadSink"
  },
  {
    "label": "TimeUnitAmount()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "TimeUnitAmount(2, TimeUnit::UTIMEUNIT_YEAR, status)"
  },
  {
    "label": "setLocale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLocale(const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "setNumberFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setNumberFormat(const NumberFormat& format, UErrorCode& status)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "create(UTimeUnitFormatStyle style, UErrorCode& status)"
  },
  {
    "label": "setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setup(UErrorCode& status)"
  },
  {
    "label": "initDataMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initDataMembers(UErrorCode& status)"
  },
  {
    "label": "readFromCurrentLocale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readFromCurrentLocale(UTimeUnitFormatStyle style, const char* key, const UVector& pluralCounts,\n                               UErrorCode& status)"
  },
  {
    "label": "checkConsistency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "checkConsistency(UTimeUnitFormatStyle style, const char* key, UErrorCode& status)"
  },
  {
    "label": "searchInLocaleChain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "searchInLocaleChain(UTimeUnitFormatStyle style, const char* key, const char* localeName,\n                             TimeUnit::UTimeUnitFields field, const UnicodeString&,\n                             const char*, Hashtable*, UErrorCode&)"
  },
  {
    "label": "deleteHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "deleteHash(Hashtable* htable)"
  },
  {
    "label": "copyHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyHash(const Hashtable* source, Hashtable* target, UErrorCode& status)"
  }
]