[
  {
    "label": "SquareGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SquareGenerator"
  },
  {
    "label": "Square",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Square"
  },
  {
    "label": "YuvFileGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "YuvFileGenerator"
  },
  {
    "label": "NV12FileGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NV12FileGenerator"
  },
  {
    "label": "SlideGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SlideGenerator"
  },
  {
    "label": "ScrollingImageFrameGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScrollingImageFrameGenerator"
  },
  {
    "label": "SquareGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SquareGenerator(int width, int height, OutputType type, int num_squares)"
  },
  {
    "label": "CreateI420Buffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420Buffer>)",
    "insertText": "CreateI420Buffer(int width, int height)"
  },
  {
    "label": "Square()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Square(int width, int height, int seed)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(const rtc::scoped_refptr<VideoFrameBuffer>& frame_buffer)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (width_)",
    "insertText": "RTC_GUARDED_BY(&mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (height_)",
    "insertText": "RTC_GUARDED_BY(&mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (squares_)",
    "insertText": "RTC_GUARDED_BY(&mutex_)"
  },
  {
    "label": "YuvFileGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "YuvFileGenerator(std::vector<FILE*> files,\n                   size_t width,\n                   size_t height,\n                   int frame_repeat_count)"
  },
  {
    "label": "ReadNextFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadNextFrame()"
  },
  {
    "label": "NV12FileGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NV12FileGenerator(std::vector<FILE*> files,\n                    size_t width,\n                    size_t height,\n                    int frame_repeat_count)"
  },
  {
    "label": "ReadNextFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadNextFrame()"
  },
  {
    "label": "SlideGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SlideGenerator(int width, int height, int frame_repeat_count)"
  },
  {
    "label": "GenerateNewFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateNewFrame()"
  },
  {
    "label": "ScrollingImageFrameGenerator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ScrollingImageFrameGenerator(Clock* clock,\n                               const std::vector<FILE*>& files,\n                               size_t source_width,\n                               size_t source_height,\n                               size_t target_width,\n                               size_t target_height,\n                               int64_t scroll_time_ms,\n                               int64_t pause_time_ms)"
  },
  {
    "label": "UpdateSourceFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSourceFrame(size_t frame_num)"
  },
  {
    "label": "CropSourceToScrolledImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CropSourceToScrolledImage(double scroll_factor)"
  }
]