[
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "Arg",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Arg"
  },
  {
    "label": "ArgList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArgList"
  },
  {
    "label": "InputArgList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputArgList"
  },
  {
    "label": "Option",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Option"
  },
  {
    "label": "OptTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OptTable"
  },
  {
    "label": "Info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Info"
  },
  {
    "label": "getInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_OPTION_OPTTABLE_H # define LLVM_OPTION_OPTTABLE_H # include \" llvm / ADT / ArrayRef . h \" # include \" llvm / ADT / StringSet . h \" # include \" llvm / Option / OptSpecifier . h \" namespace llvm { class raw_ostream ; namespace opt { class Arg ; class ArgList ; class InputArgList ; class Option ; class OptTable { public : struct Info { const char* const* Prefixes ; const char* Name ; const char* HelpText ; const char* MetaVar ; unsigned ID ; unsigned char Kind ; unsigned char Param ; unsigned long Flags ; unsigned short GroupID ; unsigned short AliasID ; const char* AliasArgs ; } ; private : const Info* OptionInfos ; unsigned NumOptionInfos ; bool IgnoreCase ; unsigned TheInputOptionID ; unsigned TheUnknownOptionID ; unsigned FirstSearchableIndex ; StringSet<> PrefixesUnion ; std::string PrefixChars ; private : const Info&)",
    "insertText": "getInfo(OptSpecifier Opt)"
  },
  {
    "label": "getID()",
    "kind": "Method",
    "detail": "Function (unsigned id = Opt .)",
    "insertText": "getID()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(id > 0 && id - 1 < getNumOptions() && \"Invalid Option ID.\")"
  },
  {
    "label": "OptTable()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "OptTable()"
  },
  {
    "label": "getNumOptions()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getNumOptions()"
  },
  {
    "label": "getOptionName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getOptionName(OptSpecifier id)"
  },
  {
    "label": "getOptionKind()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getOptionKind(OptSpecifier id)"
  },
  {
    "label": "getOptionGroupID()",
    "kind": "Method",
    "detail": "Function (} unsigned)",
    "insertText": "getOptionGroupID(OptSpecifier id)"
  },
  {
    "label": "getOptionHelpText()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "getOptionHelpText(OptSpecifier id)"
  },
  {
    "label": "getOptionMetaVar()",
    "kind": "Method",
    "detail": "Function (} const char*)",
    "insertText": "getOptionMetaVar(OptSpecifier id)"
  },
  {
    "label": "ParseOneArg()",
    "kind": "Method",
    "detail": "Function (} Arg*)",
    "insertText": "ParseOneArg(const ArgList &Args, unsigned &Index, unsigned FlagsToInclude = 0, unsigned FlagsToExclude = 0)"
  },
  {
    "label": "findOption()",
    "kind": "Method",
    "detail": "Function (Option)",
    "insertText": "findOption(const char *normalizedName, unsigned FlagsToInclude = 0, unsigned FlagsToExclude = 0)"
  },
  {
    "label": "ParseArgs()",
    "kind": "Method",
    "detail": "Function (InputArgList)",
    "insertText": "ParseArgs(ArrayRef<const char *> Args, unsigned &MissingArgIndex, unsigned &MissingArgCount, unsigned FlagsToInclude = 0, unsigned FlagsToExclude = 0)"
  },
  {
    "label": "PrintHelp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintHelp(raw_ostream &OS, const char *Name, const char *Title, const char *VersionInfo, unsigned FlagsToInclude, unsigned FlagsToExclude)"
  },
  {
    "label": "PrintHelp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintHelp(raw_ostream &OS, const char *Name, const char *Title, const char *VersionInfo = \"\", bool ShowHidden = false)"
  }
]