[
  {
    "label": "FNullAudioCaptureDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullAudioCaptureDevice"
  },
  {
    "label": "FNullAudioCaptureDevice()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioCaptureCore . h \" # include \" AudioCaptureCoreLog . h \" # include \" Engine / Engine . h \" # include \" Features / IModularFeatures . h \" namespace Audio { class FNullAudioCaptureDevice : public IAudioCaptureStream { public :)",
    "insertText": "FNullAudioCaptureDevice()"
  },
  {
    "label": "GetCaptureDeviceInfo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetCaptureDeviceInfo(FCaptureDeviceInfo& OutInfo, int32 DeviceIndex)"
  },
  {
    "label": "GetInputDevicesAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetInputDevicesAvailable(TArray<FCaptureDeviceInfo>& OutDevices)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().LockModularFeatureList()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TArray<IAudioCaptureFactory*> AudioCaptureStreamFactories =)",
    "insertText": "Get().GetModularFeatureImplementations<IAudioCaptureFactory>(IAudioCaptureFactory::GetModularFeatureName())"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().UnlockModularFeatureList()"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "UE_LOG(LogAudioCaptureCore, Display, TEXT(\"No Audio Capture implementations found. Audio input will be silent.\"))"
  }
]