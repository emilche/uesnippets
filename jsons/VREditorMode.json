[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "SLevelViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLevelViewport"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "USoundBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundBase"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "VREDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VREDITOR_API"
  },
  {
    "label": "UViewportWorldInteraction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportWorldInteraction"
  },
  {
    "label": "UViewportWorldInteraction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportWorldInteraction"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UVREditorUISystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorUISystem"
  },
  {
    "label": "UVREditorUISystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorUISystem"
  },
  {
    "label": "UVREditorInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorInteractor"
  },
  {
    "label": "UVREditorInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorInteractor"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "UVREditorInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorInteractor"
  },
  {
    "label": "FSavedEditorState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSavedEditorState"
  },
  {
    "label": "USequencerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequencerSettings"
  },
  {
    "label": "UVREditorAssetContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorAssetContainer"
  },
  {
    "label": "UVREditorAssetContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorAssetContainer"
  },
  {
    "label": "AVREditorTeleporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AVREditorTeleporter"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "AVREditorAvatarActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AVREditorAvatarActor"
  },
  {
    "label": "USpotLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USpotLightComponent"
  },
  {
    "label": "UVREditorUISystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorUISystem"
  },
  {
    "label": "AVREditorTeleporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AVREditorTeleporter"
  },
  {
    "label": "UVREditorAutoScaler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorAutoScaler"
  },
  {
    "label": "UViewportWorldInteraction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportWorldInteraction"
  },
  {
    "label": "UVREditorPlacement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorPlacement"
  },
  {
    "label": "EColors",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EColors"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FVREditorFloatingUICreationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVREditorFloatingUICreationContext"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "UVREditorAssetContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVREditorAssetContainer"
  },
  {
    "label": "Touch()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Touch( \"Touch\" )"
  },
  {
    "label": "Modifier()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Modifier( \"Modifier\" )"
  },
  {
    "label": "Modifier2()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "Modifier2( \"Modifier2\" )"
  },
  {
    "label": "ConfirmRadialSelection()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "ConfirmRadialSelection( \"ConfirmRadialSelection\" )"
  },
  {
    "label": "TrackpadPositionX()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TrackpadPositionX( \"TrackpadPosition_X\" )"
  },
  {
    "label": "TrackpadPositionY()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TrackpadPositionY( \"TrackpadPosition_Y\" )"
  },
  {
    "label": "TrackpadUp()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TrackpadUp(\"TrackpadUp\")"
  },
  {
    "label": "TrackpadDown()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TrackpadDown(\"TrackpadDown\")"
  },
  {
    "label": "TrackpadRight()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TrackpadRight(\"TrackpadRight\")"
  },
  {
    "label": "TrackpadLeft()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TrackpadLeft(\"TrackpadLeft\")"
  },
  {
    "label": "TriggerAxis()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "TriggerAxis( \"TriggerAxis\" )"
  },
  {
    "label": "SetHMDDeviceTypeOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHMDDeviceTypeOverride( FName InOverrideType )"
  },
  {
    "label": "PreTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreTick( const float DeltaTime )"
  },
  {
    "label": "PostTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostTick( const float DeltaTime )"
  },
  {
    "label": "AllocateInteractors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateInteractors()"
  },
  {
    "label": "StartExitingVRMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartExitingVRMode()"
  },
  {
    "label": "SetRoomTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRoomTransform( const FTransform& NewRoomTransform )"
  },
  {
    "label": "SetGameView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGameView(bool bGameView)"
  },
  {
    "label": "ToggleFlashlight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleFlashlight( class UVREditorInteractor* Interactor )"
  },
  {
    "label": "CycleTransformGizmoHandleType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CycleTransformGizmoHandleType()"
  },
  {
    "label": "SnapSelectedActorsToGround()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapSelectedActorsToGround()"
  },
  {
    "label": "SaveSequencerSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSequencerSettings(bool bInKeyAllEnabled, EAutoChangeMode InAutoChangeMode, const class USequencerSettings& InSequencerSettings)"
  },
  {
    "label": "PlaySound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlaySound(USoundBase* SoundBase, const FVector& InWorldLocation, const float InVolume = 1.0f)"
  },
  {
    "label": "ToggleDebugMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDebugMode()"
  },
  {
    "label": "IsDebugModeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebugModeEnabled()"
  },
  {
    "label": "OnEditorClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorClosed()"
  },
  {
    "label": "OnVREditorWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVREditorWindowClosed( const TSharedRef<SWindow>& ClosedWindow )"
  },
  {
    "label": "RestoreWorldToMeters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreWorldToMeters()"
  },
  {
    "label": "BeginEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginEntry()"
  },
  {
    "label": "SetupSubsystems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupSubsystems()"
  },
  {
    "label": "FinishEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishEntry()"
  },
  {
    "label": "RefreshVREditorSequencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshVREditorSequencer(class ISequencer* InCurrentSequencer)"
  },
  {
    "label": "RefreshActorPreviewWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshActorPreviewWidget(TSharedRef<SWidget> InWidget, int32 Index, AActor *Actor, bool bIsPanelDetached = false)"
  },
  {
    "label": "UpdateExternalUMGUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExternalUMGUI(const struct FVREditorFloatingUICreationContext& CreationContext)"
  },
  {
    "label": "UpdateExternalSlateUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExternalSlateUI(TSharedRef<SWidget> InWidget, FName Name, FVector2D InSize)"
  }
]