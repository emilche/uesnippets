[
  {
    "label": "TLazyInitialized",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TLazyInitialized"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "AddLeakedObjectForLazyInitialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLeakedObjectForLazyInitialization(void* Object)"
  },
  {
    "label": "TLazyInitialized()",
    "kind": "Method",
    "detail": "Function (template<T> struct TLazyInitialized {)",
    "insertText": "TLazyInitialized()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (T&)",
    "insertText": "Get()"
  },
  {
    "label": "load()",
    "kind": "Method",
    "detail": "Function (T* Result = Data .)",
    "insertText": "load(std::memory_order_relaxed)"
  },
  {
    "label": "atomic_signal_fence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "atomic_signal_fence(std::memory_order_seq_cst)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } T&)",
    "insertText": "operator()"
  },
  {
    "label": "GetSlow()",
    "kind": "Method",
    "detail": "Function (} private : FORCENOINLINE T&)",
    "insertText": "GetSlow()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* Object = new)",
    "insertText": "T()"
  },
  {
    "label": "compare_exchange_strong()",
    "kind": "Method",
    "detail": "Function (T* Expected = nullptr ; Data .)",
    "insertText": "compare_exchange_strong(Expected, Object)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (T* Result ;)",
    "insertText": "if(Expected)"
  },
  {
    "label": "AddLeakedObjectForLazyInitialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLeakedObjectForLazyInitialization(Object)"
  },
  {
    "label": "V_DIE_UNLESS()",
    "kind": "Method",
    "detail": "Function (Result = Expected ; } else { Result = Object ; })",
    "insertText": "V_DIE_UNLESS(Data.load() == Result)"
  }
]