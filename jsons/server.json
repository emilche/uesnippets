[
  {
    "label": "server_session",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "server_session"
  },
  {
    "label": "server",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "server"
  },
  {
    "label": "detail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "detail"
  },
  {
    "label": "server()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef SERVER_H_S0HB5KXY # define SERVER_H_S0HB5KXY # include \" rpc / config . h \" # include \" rpc / msgpack . hpp \" # include \" rpc / dispatcher . h \" # include \" rpc / detail / pimpl . h \" namespace rpc { namespace detail { class server_session ; } class server { public :)",
    "insertText": "server(uint16_t port)"
  },
  {
    "label": "server()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "server(server&& other)"
  },
  {
    "label": "server()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "server(std::string const &address, uint16_t port)"
  },
  {
    "label": "server()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "server()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (server&)",
    "insertText": "operator(server&& other)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "run()"
  },
  {
    "label": "async_run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "async_run(std::size_t worker_threads = 1)"
  },
  {
    "label": "bind()",
    "kind": "Method",
    "detail": "Function (template<F> void)",
    "insertText": "bind(std::string const &name, F func)"
  },
  {
    "label": "bind()",
    "kind": "Method",
    "detail": "Function (disp_ ->)",
    "insertText": "bind(name, func)"
  },
  {
    "label": "suppress_exceptions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "suppress_exceptions(bool suppress)"
  },
  {
    "label": "stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "stop()"
  },
  {
    "label": "close_sessions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "close_sessions()"
  },
  {
    "label": "close_session()",
    "kind": "Method",
    "detail": "Function (class detail::server_session ; private : void)",
    "insertText": "close_session(std::shared_ptr<detail::server_session> const& s)"
  },
  {
    "label": "RPCLIB_DECLARE_PIMPL()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "RPCLIB_DECLARE_PIMPL()"
  }
]