[
  {
    "label": "UNREALED_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNREALED_API"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Logging / LogMacros . h \" # include \" Materials / MaterialRenderProxy . h \" # include \" MaterialShared . h \" # include \" Math / Color . h \" # include \" SceneManagement . h \" # include \" Tools / Modes . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogEditorModes, Log, All)"
  },
  {
    "label": "FDynamicColoredMaterialRenderProxy()",
    "kind": "Method",
    "detail": "Function (namespace FBuiltinEditorModes { const FEditorModeID EM_None ; const FEditorModeID EM_Default ; const FEditorModeID EM_Placement ; const FEditorModeID EM_MeshPaint ; const FEditorModeID EM_Landscape ; const FEditorModeID EM_Foliage ; const FEditorModeID EM_Level ; const FEditorModeID EM_StreamingLevel ; const FEditorModeID EM_Physics ; const FEditorModeID EM_ActorPicker ; const FEditorModeID EM_SceneDepthPicker ; } ; class FDynamicColoredMaterialRenderProxy : public FDynamicPrimitiveResource,public FColoredMaterialRenderProxy { public :)",
    "insertText": "FDynamicColoredMaterialRenderProxy(const FMaterialRenderProxy* InParent,const FLinearColor& InColor) : FColoredMaterialRenderProxy(InParent,InColor)"
  },
  {
    "label": "FDynamicColoredMaterialRenderProxy()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FDynamicColoredMaterialRenderProxy()"
  },
  {
    "label": "InitPrimitiveResource()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitPrimitiveResource(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleasePrimitiveResource()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReleasePrimitiveResource()"
  }
]