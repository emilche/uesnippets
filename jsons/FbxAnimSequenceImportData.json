[
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "EFBXAnimationLengthImportType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFBXAnimationLengthImportType"
  },
  {
    "label": "UFbxAnimSequenceImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFbxAnimSequenceImportData"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Factories / FbxAssetImportData . h \" # include \" FbxAnimSequenceImportData . generated . h \" class UAnimSequence ; struct FPropertyChangedEvent ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (FBXALIT_ExportedTime)",
    "insertText": "UMETA(DisplayName = \"Exported Time\"), FBXALIT_AnimatedKey UMETA(DisplayName = \"Animated Time\"), FBXALIT_SetRange UMETA(DisplayName = \"Set Range\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(BlueprintType, config = EditorPerProjectUserSettings, configdonotcheckdefaults, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, AdvancedDisplay, config, Category = ImportSettings, meta = (ImportType = \"Animation\"))"
  },
  {
    "label": "GetImportDataForAnimSequence()",
    "kind": "Method",
    "detail": "Function (UFbxAnimSequenceImportData*)",
    "insertText": "GetImportDataForAnimSequence(UAnimSequence* AnimSequence, UFbxAnimSequenceImportData* TemplateForCreation)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "CopyAnimationValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyAnimationValues(const UFbxAnimSequenceImportData* Other)"
  }
]