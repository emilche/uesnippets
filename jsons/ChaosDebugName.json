[
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "FSharedDebugName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" Templates / SharedPointer . h \" # ifndef CHAOS_DEBUG_NAME # define CHAOS_DEBUG_NAME 0 # endif namespace Chaos { class FSharedDebugName { public :)",
    "insertText": "FSharedDebugName()"
  },
  {
    "label": "FSharedDebugName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSharedDebugName(const FSharedDebugName& Other)"
  },
  {
    "label": "FSharedDebugName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSharedDebugName(FSharedDebugName&& Other)"
  },
  {
    "label": "FSharedDebugName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSharedDebugName(const FString& S)"
  },
  {
    "label": "FSharedDebugName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSharedDebugName(FString&& S)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Value()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "Value()"
  }
]