[
  {
    "label": "FMemoryArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemoryArchive"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "GetArchiveName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" Serialization / Archive . h \" # include \" Containers / UnrealString . h \" # include \" UObject / NameTypes . h \" class FMemoryArchive : public FArchive { public : FString)",
    "insertText": "GetArchiveName()"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Seek(int64 InPos)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (Offset = InPos ; } int64)",
    "insertText": "Tell()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (FString StringName ;* this<<StringName ; N =)",
    "insertText": "FName(*StringName)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} else { FString StringName = N .)",
    "insertText": "ToString()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* this<<StringName ; } return* this ; } FArchive&)",
    "insertText": "operator(class UObject*& Res)"
  }
]