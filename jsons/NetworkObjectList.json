[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetworkObjectInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkObjectInfo"
  },
  {
    "label": "FNetConnectionKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetConnectionKeyFuncs"
  },
  {
    "label": "FNetworkObjectKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkObjectKeyFuncs"
  },
  {
    "label": "FNetworkObjectList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetworkObjectList"
  },
  {
    "label": "FActorInvalidSubObjectView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorInvalidSubObjectView"
  },
  {
    "label": "holding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "holding"
  },
  {
    "label": "FActorSubObjectReferences",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorSubObjectReferences"
  },
  {
    "label": "FSubObjectChannelReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubObjectChannelReference"
  },
  {
    "label": "FSubObjectChannelRefKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubObjectChannelRefKeyFuncs"
  },
  {
    "label": "FActorInvalidSubObjectView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorInvalidSubObjectView"
  },
  {
    "label": "FActorSubObjectReferences",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorSubObjectReferences"
  },
  {
    "label": "FActorSubObjectRefKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorSubObjectRefKeyFuncs"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "AddInitialObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInitialObjects(UWorld* const World, UNetDriver* NetDriver)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FNetworkObjectInfo>)",
    "insertText": "Find(AActor* const Actor)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(AActor* const Actor)"
  },
  {
    "label": "MarkDormant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDormant(AActor* const Actor, UNetConnection* const Connection, const int32 NumConnections, UNetDriver* NetDriver)"
  },
  {
    "label": "MarkActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MarkActive(AActor* const Actor, UNetConnection* const Connection, UNetDriver* NetDriver)"
  },
  {
    "label": "MarkDirtyForReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDirtyForReplay(AActor* const Actor)"
  },
  {
    "label": "ResetReplayDirtyTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetReplayDirtyTracking()"
  },
  {
    "label": "ClearRecentlyDormantConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRecentlyDormantConnection(AActor* const Actor, UNetConnection* const Connection, UNetDriver* NetDriver)"
  },
  {
    "label": "OnActorIsTraveling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorIsTraveling(AActor* TravelingAtor)"
  },
  {
    "label": "OnPostSeamlessTravel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSeamlessTravel()"
  },
  {
    "label": "HandleConnectionAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleConnectionAdded()"
  },
  {
    "label": "ResetDormancyState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDormancyState()"
  },
  {
    "label": "ForceActorRelevantNextUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceActorRelevantNextUpdate(AActor* const Actor, UNetDriver* NetDriver)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FlushDormantActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushDormantActors(UNetConnection* const Connection, const FName& PackageName)"
  },
  {
    "label": "OnActorDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorDestroyed(AActor* DestroyedActor)"
  },
  {
    "label": "SetSubObjectForDeletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubObjectForDeletion(AActor* Actor, UObject* SubObject)"
  },
  {
    "label": "SetSubObjectForTearOff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSubObjectForTearOff(AActor* Actor, UObject* SubObject)"
  },
  {
    "label": "AddSubObjectChannelReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSubObjectChannelReference(AActor* OwnerActor, UObject* ReplicatedSubObject, UObject* ReferenceOwner)"
  },
  {
    "label": "RemoveSubObjectChannelReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubObjectChannelReference(AActor* OwnerActor, const TWeakObjectPtr<UObject>& ReplicatedSubObject, UObject* ReferenceOwner)"
  },
  {
    "label": "RemoveMultipleSubObjectChannelReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMultipleSubObjectChannelReference(FObjectKey OwnerActorKey, const TArrayView<TWeakObjectPtr<UObject>>& SubObjectsToRemove, UObject* ReferenceOwner)"
  },
  {
    "label": "RemoveMultipleInvalidSubObjectChannelReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMultipleInvalidSubObjectChannelReference(FObjectKey OwnerActorKey, const TArrayView<TWeakObjectPtr<UObject>>& SubObjectsToRemove, UObject* ReferenceOwner)"
  },
  {
    "label": "RemoveMultipleActiveSubObjectChannelReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMultipleActiveSubObjectChannelReference(FObjectKey OwnerActorKey, const TArrayView<TWeakObjectPtr<UObject>>& SubObjectsToRemove, UObject* ReferenceOwner)"
  },
  {
    "label": "SwapMultipleReferencesForDormancy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapMultipleReferencesForDormancy(AActor* OwnerActor, const TArrayView<TWeakObjectPtr<UObject>>& SubObjectsToSwap, UActorChannel* PreviousChannelRefOwner, UNetConnection* NewConnectionRefOwner)"
  },
  {
    "label": "SwapReferenceForDormancy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapReferenceForDormancy(AActor* OwnerActor, UObject* ReplicatedSubObject, UNetConnection* PreviousConnectionRefOwner, UActorChannel* NewChannelRefOwner)"
  },
  {
    "label": "MarkActiveInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MarkActiveInternal(const TSharedPtr<FNetworkObjectInfo>& ObjectInfo, UNetConnection* const Connection, UNetDriver* NetDriver)"
  },
  {
    "label": "InvalidateSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateSubObject(AActor* Actor, UObject* SubObject, ENetSubObjectStatus InvalidStatus)"
  },
  {
    "label": "HandleRemoveAnySubObjectChannelRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemoveAnySubObjectChannelRef(FActorSubObjectReferences& SubObjectsRefInfo, const TWeakObjectPtr<UObject>& ReplicatedSubObject, UObject* ReferenceOwner)"
  },
  {
    "label": "HandleRemoveActiveSubObjectRef()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleRemoveActiveSubObjectRef(FActorSubObjectReferences& SubObjectsRefInfo, const TWeakObjectPtr<UObject>& ReplicatedSubObject, UObject* ReferenceOwner)"
  },
  {
    "label": "HandleRemoveInvalidSubObjectRef()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleRemoveInvalidSubObjectRef(FActorSubObjectReferences& SubObjectsRefInfo, const TWeakObjectPtr<UObject>& ReplicatedSubObject, UObject* ReferenceOwner)"
  },
  {
    "label": "HandleSwapReferenceForDormancy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSwapReferenceForDormancy(FActorSubObjectReferences* ActorNetInfo, const TWeakObjectPtr<UObject>& SubObjectPtr, UObject* PreviousRefOwner, UObject* NewRefOwner)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(SubObjChannelRef.SubObjectPtr)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Key)"
  }
]