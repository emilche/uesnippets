[
  {
    "label": "Thread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Thread"
  },
  {
    "label": "PlatformThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PlatformThread"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "ThreadListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadListener"
  },
  {
    "label": "OnAddThread()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_THREAD_OBSERVER_H_ # define RTC_BASE_THREAD_OBSERVER_H_ # include \" rtc_base / system / rtc_export . h \" namespace rtc { class Thread ; class PlatformThread ; class RTC_EXPORT ThreadObserver { public : void)",
    "insertText": "OnAddThread(const Thread* thread)"
  },
  {
    "label": "OnRemoveThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveThread(const Thread* thread)"
  },
  {
    "label": "OnAddThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddThread(const PlatformThread* platform_thread)"
  },
  {
    "label": "OnRemoveThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveThread(const PlatformThread* platform_thread)"
  },
  {
    "label": "ThreadObserver()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "ThreadObserver()"
  },
  {
    "label": "Instance()",
    "kind": "Method",
    "detail": "Function (} ; class ThreadListener { public : ThreadListener&)",
    "insertText": "Instance()"
  },
  {
    "label": "RegisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObserver(ThreadObserver* observer)"
  },
  {
    "label": "UnregisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObserver()"
  },
  {
    "label": "NotifyAddThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAddThread(const Thread* thread)"
  },
  {
    "label": "NotifyRemoveThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRemoveThread(const Thread* thread)"
  },
  {
    "label": "NotifyAddThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAddThread(const PlatformThread* platform_thread)"
  },
  {
    "label": "NotifyRemoveThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRemoveThread(const PlatformThread* platform_thread)"
  },
  {
    "label": "ThreadListener()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "ThreadListener()"
  },
  {
    "label": "ThreadListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadListener(const ThreadListener&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ThreadListener&)",
    "insertText": "operator(const ThreadListener&)"
  },
  {
    "label": "NotifyAddThreadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAddThreadInternal(const Thread* thread)"
  },
  {
    "label": "NotifyRemoveThreadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRemoveThreadInternal(const Thread* thread)"
  },
  {
    "label": "NotifyAddThreadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAddThreadInternal(const PlatformThread* platform_thread)"
  },
  {
    "label": "NotifyRemoveThreadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyRemoveThreadInternal(const PlatformThread* platform_thread)"
  }
]