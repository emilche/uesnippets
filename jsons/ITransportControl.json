[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTransportControlWidget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransportControlWidget"
  },
  {
    "label": "FTransportControlArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransportControlArgs"
  },
  {
    "label": "ITransportControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITransportControl"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" Misc / EnumRange . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Framework / SlateDelegates . h \" namespace EPlaybackMode { enum Type { Stopped,PlayingForward,PlayingReverse,} ; })",
    "insertText": "DECLARE_DELEGATE_RetVal(bool, FOnGetLooping) DECLARE_DELEGATE_RetVal(bool, FOnGetRecording) DECLARE_DELEGATE_RetVal(EPlaybackMode::Type, FOnGetPlaybackMode) DECLARE_DELEGATE_TwoParams(FOnTickPlayback, double , float ) DECLARE_DELEGATE_RetVal(TSharedRef<SWidget>, FOnMakeTransportWidget)"
  },
  {
    "label": "ENUM_RANGE_BY_COUNT()",
    "kind": "Method",
    "detail": "Function (BackwardEnd,BackwardStep,BackwardPlay,Record,ForwardPlay,ForwardStep,ForwardEnd,Loop,Custom } ;)",
    "insertText": "ENUM_RANGE_BY_COUNT(ETransportControlWidgetType, ETransportControlWidgetType::Custom)"
  },
  {
    "label": "FTransportControlWidget()",
    "kind": "Method",
    "detail": "Function (struct FTransportControlWidget {)",
    "insertText": "FTransportControlWidget(ETransportControlWidgetType InWidgetType) : WidgetType(InWidgetType)"
  },
  {
    "label": "FTransportControlWidget()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTransportControlWidget(FOnMakeTransportWidget InMakeCustomWidgetDelegate) : WidgetType(ETransportControlWidgetType::Custom) , MakeCustomWidgetDelegate(InMakeCustomWidgetDelegate)"
  },
  {
    "label": "FTransportControlArgs()",
    "kind": "Method",
    "detail": "Function (} ETransportControlWidgetType WidgetType ; FOnMakeTransportWidget MakeCustomWidgetDelegate ; } ; struct FTransportControlArgs {)",
    "insertText": "FTransportControlArgs() : OnForwardPlay() , OnRecord() , OnBackwardPlay() , OnForwardStep() , OnBackwardStep() , OnForwardEnd() , OnBackwardEnd() , OnToggleLooping() , OnGetLooping() , OnGetPlaybackMode() , OnTickPlayback() , OnGetRecording() , bAreButtonsFocusable(true)"
  }
]