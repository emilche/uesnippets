[
  {
    "label": "FActionableMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActionableMessage"
  },
  {
    "label": "ACTIONABLEMESSAGE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACTIONABLEMESSAGE_API"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Subsystems / WorldSubsystem . h \" # include \" ActionableMessageSubsystem . generated . h \" struct FActionableMessage { FText Message ; FText ActionMessage ; FText Tooltip ; TFunction<)",
    "insertText": "void()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "operator(const FActionableMessage& LHS, const FActionableMessage& RHS)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: const TMap<FName, TSharedPtr<FActionableMessage>>& GetActionableMessages()"
  },
  {
    "label": "ClearActionableMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearActionableMessage(FName InProvider)"
  },
  {
    "label": "GetStateID()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetStateID()"
  }
]