[
  {
    "label": "FGenericMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericMemoryStats"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMallocBinned2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMallocBinned2"
  },
  {
    "label": "FFreeBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeBlock"
  },
  {
    "label": "FPoolInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Private",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Private"
  },
  {
    "label": "FFreeBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeBlock"
  },
  {
    "label": "FPoolList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolList"
  },
  {
    "label": "FPoolTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolTable"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FPoolInfo()",
    "kind": "Method",
    "detail": "Function (pool)",
    "insertText": "FPoolInfo()"
  },
  {
    "label": "SetCanary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanary(ECanary ShouldBe, bool bPreexisting, bool bGuaranteedToBeNew)"
  },
  {
    "label": "SetOSAllocationSizes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOSAllocationSizes(SIZE_T InRequestedBytes, UPTRINT InAllocatedBytes)"
  },
  {
    "label": "Link()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Link(FPoolInfo*& PrevNext)"
  },
  {
    "label": "Unlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlink()"
  },
  {
    "label": "ExhaustPoolIfNecessary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExhaustPoolIfNecessary()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "LinkToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkToFront(FPoolInfo* Pool)"
  },
  {
    "label": "IsAligned()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsAligned(Ptr, UE_MB2_LARGE_ALLOC)"
  },
  {
    "label": "FMallocBinned2()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FMallocBinned2()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&ValidationCriticalSection)"
  },
  {
    "label": "MallocInline()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MallocInline(Size, Alignment)"
  },
  {
    "label": "MallocSelect()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MallocSelect(Size, Alignment, bUseSmallPool)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&ValidationCriticalSection)"
  },
  {
    "label": "ReallocInline()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ReallocInline(Ptr, NewSize, Alignment)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&ValidationCriticalSection)"
  },
  {
    "label": "FreeInline()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "FreeInline(Ptr)"
  },
  {
    "label": "GetAllocationSizeExternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetAllocationSizeExternal(Ptr, SizeOut)"
  },
  {
    "label": "QuantizeSizeCommon()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "QuantizeSizeCommon(Count, Alignment, *this)"
  },
  {
    "label": "FreeExternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeExternal(void *Ptr)"
  },
  {
    "label": "FreeMetaDataMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeMetaDataMemory(void* Ptr, SIZE_T Size)"
  },
  {
    "label": "FreeBundles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBundles(FBundleNode* Bundles, uint32 PoolIndex)"
  },
  {
    "label": "FlushCurrentThreadCacheInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCurrentThreadCacheInternal(bool bNewEpochOnly = false)"
  }
]