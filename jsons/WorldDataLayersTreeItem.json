[
  {
    "label": "ISceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutliner"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "STableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableRow"
  },
  {
    "label": "FWorldDataLayersTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldDataLayersTreeItem"
  },
  {
    "label": "FWorldDataLayersTreeItem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" ISceneOutlinerTreeItem . h \" # include \" SceneOutlinerFwd . h \" # include \" SceneOutlinerStandaloneTypes . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectKey . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" WorldPartition / DataLayer / WorldDataLayers . h \" class ISceneOutliner ; class SWidget ; template<ItemType> class STableRow ; struct FWorldDataLayersTreeItem : ISceneOutlinerTreeItem { public :)",
    "insertText": "FWorldDataLayersTreeItem(AWorldDataLayers* InWorldDataLayers)"
  },
  {
    "label": "GetWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (AWorldDataLayers*)",
    "insertText": "GetWorldDataLayers()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} FSceneOutlinerTreeItemID)",
    "insertText": "GetID()"
  },
  {
    "label": "CanInteract()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanInteract()"
  },
  {
    "label": "GenerateLabelWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateLabelWidget(ISceneOutliner& Outliner, const STableRow<FSceneOutlinerTreeItemPtr>& InRow)"
  },
  {
    "label": "ShouldShowVisibilityState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowVisibilityState()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (const FSceneOutlinerTreeItemType Type ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FFilterPredicate, const AWorldDataLayers*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FInteractivePredicate, const AWorldDataLayers*)"
  },
  {
    "label": "Filter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Filter(FFilterPredicate Pred)"
  },
  {
    "label": "GetInteractiveState()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetInteractiveState(FInteractivePredicate Pred)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (} private : bool)",
    "insertText": "IsReadOnly()"
  }
]