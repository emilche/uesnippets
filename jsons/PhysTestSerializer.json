[
  {
    "label": "FChaosArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosArchive"
  },
  {
    "label": "FPhysTestSerializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysTestSerializer"
  },
  {
    "label": "FPhysTestSerializer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / ChaosArchive . h \" # include \" Chaos / Defines . h \" # include \" Chaos / Framework / Handles . h \" # include \" Chaos / PBDRigidsEvolutionFwd . h \" # include \" Chaos / PBDRigidsEvolutionGBF . h \" # include \" Chaos / PBDRigidsSOAs . h \" # include \" Chaos / ParticleHandle . h \" # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Misc / AssertionMacros . h \" # include \" PhysicsInterfaceDeclaresCore . h \" # include \" SQCapture . h \" # include \" Serialization / CustomVersion . h \" # include \" Serialization / MemoryReader . h \" # include \" Templates / UniquePtr . h \" # ifndef PHYS_TEST_SERIALIZER # define PHYS_TEST_SERIALIZER 1 # endif # if PHYS_TEST_SERIALIZER namespace Chaos { class FChaosArchive ; } class FPhysTestSerializer { public :)",
    "insertText": "FPhysTestSerializer()"
  },
  {
    "label": "FPhysTestSerializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPhysTestSerializer(const FPhysTestSerializer& Other)"
  },
  {
    "label": "FPhysTestSerializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPhysTestSerializer(FPhysTestSerializer&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPhysTestSerializer&)",
    "insertText": "operator(const FPhysTestSerializer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPhysTestSerializer&)",
    "insertText": "operator(FPhysTestSerializer&&)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Chaos::FChaosArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* FilePrefix)"
  },
  {
    "label": "SetPhysicsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsData(Chaos::FPBDRigidsEvolution& ChaosEvolution)"
  },
  {
    "label": "GetChaosContext()",
    "kind": "Method",
    "detail": "Function (const Chaos::FChaosArchiveContext*)",
    "insertText": "GetChaosContext()"
  },
  {
    "label": "CaptureSQ()",
    "kind": "Method",
    "detail": "Function (} FSQCapture&)",
    "insertText": "CaptureSQ()"
  },
  {
    "label": "FSQCapture()",
    "kind": "Method",
    "detail": "Function (SQCapture = TUniquePtr<)",
    "insertText": "FSQCapture(new FSQCapture(*this))"
  },
  {
    "label": "GetChaosData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChaosData()"
  },
  {
    "label": "CreateChaosDataFromPhysX()",
    "kind": "Method",
    "detail": "Function (# if 0 SQCapture ->)",
    "insertText": "CreateChaosDataFromPhysX()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# endif } return SQCapture .)",
    "insertText": "Get()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if 0)",
    "insertText": "if(!bChaosDataReady)"
  },
  {
    "label": "CreateChaosData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateChaosData()"
  }
]