[
  {
    "label": "UHashtable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UHashtable"
  },
  {
    "label": "PluralRules",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PluralRules"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (# ifndef __COMPACT_DECIMAL_FORMAT_H__ # define __COMPACT_DECIMAL_FORMAT_H__ # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / decimfmt . h \" struct UHashtable ; U_NAMESPACE_BEGIN class PluralRules ; class U_I18N_API CompactDecimalFormat : public DecimalFormat { public : CompactDecimalFormat* U_EXPORT2)",
    "insertText": "createInstance(const Locale& inLocale, UNumberCompactStyle style, UErrorCode& status)"
  },
  {
    "label": "CompactDecimalFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompactDecimalFormat(const CompactDecimalFormat& source)"
  },
  {
    "label": "CompactDecimalFormat()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CompactDecimalFormat()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (CompactDecimalFormat&)",
    "insertText": "operator(const CompactDecimalFormat& rhs)"
  },
  {
    "label": "parse()",
    "kind": "Method",
    "detail": "Function (using DecimalFormat::format ; void)",
    "insertText": "parse(const UnicodeString& text, Formattable& result, ParsePosition& parsePosition)"
  },
  {
    "label": "parse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parse(const UnicodeString& text, Formattable& result, UErrorCode& status)"
  },
  {
    "label": "parseCurrency()",
    "kind": "Method",
    "detail": "Function (# ifndef CurrencyAmount*)",
    "insertText": "parseCurrency(const UnicodeString& text, ParsePosition& pos)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (# endif UClassID U_EXPORT2)",
    "insertText": "getStaticClassID()"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID()"
  },
  {
    "label": "CompactDecimalFormat()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "CompactDecimalFormat(const Locale& inLocale, UNumberCompactStyle style, UErrorCode& status)"
  }
]