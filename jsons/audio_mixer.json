[
  {
    "label": "AudioMixer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioMixer"
  },
  {
    "label": "Source",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Source"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "GetAudioFrameWithInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef API_AUDIO_AUDIO_MIXER_H_ # define API_AUDIO_AUDIO_MIXER_H_ # include<memory> # include \" api / audio / audio_frame . h \" # include \" rtc_base / ref_count . h \" namespace webrtc { class AudioMixer : public rtc::RefCountInterface { public : class Source { public : enum class AudioFrameInfo { kNormal,kMuted,kError,} ; AudioFrameInfo)",
    "insertText": "GetAudioFrameWithInfo(int sample_rate_hz, AudioFrame* audio_frame)"
  },
  {
    "label": "Ssrc()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Ssrc()"
  },
  {
    "label": "PreferredSampleRate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PreferredSampleRate()"
  },
  {
    "label": "Source()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Source()"
  },
  {
    "label": "AddSource()",
    "kind": "Method",
    "detail": "Function (} } ; bool)",
    "insertText": "AddSource(Source* audio_source)"
  },
  {
    "label": "RemoveSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSource(Source* audio_source)"
  },
  {
    "label": "Mix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mix(size_t number_of_channels, AudioFrame* audio_frame_for_mixing)"
  },
  {
    "label": "AudioMixer()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "AudioMixer()"
  }
]