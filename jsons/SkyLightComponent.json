[
  {
    "label": "FSkyLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkyLightSceneProxy"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "FSkyTextureCubeResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkyTextureCubeResource"
  },
  {
    "label": "ESkyLightSourceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESkyLightSourceType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USkyLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkyLightComponent"
  },
  {
    "label": "ESkyLightSourceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESkyLightSourceType"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "EOcclusionCombineMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOcclusionCombineMode"
  },
  {
    "label": "FSkyLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkyLightSceneProxy"
  },
  {
    "label": "FPrecomputedSkyLightInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrecomputedSkyLightInstanceData"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "FSkyLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkyLightSceneProxy"
  },
  {
    "label": "FPrecomputedSkyLightInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrecomputedSkyLightInstanceData"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "ApplyComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyComponentInstanceData(struct FPrecomputedSkyLightInstanceData* ComponentInstanceData)"
  },
  {
    "label": "UpdateSkyCaptureContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkyCaptureContents(UWorld* WorldToUpdate)"
  },
  {
    "label": "UpdateSkyCaptureContentsArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkyCaptureContentsArray(UWorld* WorldToUpdate, TArray<USkyLightComponent*>& ComponentArray, bool bBlendSources)"
  },
  {
    "label": "SetIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIntensity(float NewIntensity)"
  },
  {
    "label": "SetIndirectLightingIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIndirectLightingIntensity(float NewIntensity)"
  },
  {
    "label": "SetVolumetricScatteringIntensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolumetricScatteringIntensity(float NewIntensity)"
  },
  {
    "label": "SetLightColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightColor(FLinearColor NewLightColor)"
  },
  {
    "label": "SetCubemap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCubemap(UTextureCube* NewCubemap)"
  },
  {
    "label": "SetSourceCubemapAngle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceCubemapAngle(float NewValue)"
  },
  {
    "label": "SetCubemapBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCubemapBlend(UTextureCube* SourceCubemap, UTextureCube* DestinationCubemap, float InBlendFraction)"
  },
  {
    "label": "SetLowerHemisphereColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLowerHemisphereColor(const FLinearColor& InLowerHemisphereColor)"
  },
  {
    "label": "SetOcclusionTint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOcclusionTint(const FColor& InTint)"
  },
  {
    "label": "SetOcclusionContrast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOcclusionContrast(float InOcclusionContrast)"
  },
  {
    "label": "SetOcclusionExponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOcclusionExponent(float InOcclusionExponent)"
  },
  {
    "label": "SetMinOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinOcclusion(float InMinOcclusion)"
  },
  {
    "label": "SetRealTimeCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRealTimeCapture(bool bInRealTimeCapture)"
  },
  {
    "label": "SetCaptureIsDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCaptureIsDirty()"
  },
  {
    "label": "SetBlendDestinationCaptureIsDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBlendDestinationCaptureIsDirty()"
  },
  {
    "label": "SanitizeCubemapSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeCubemapSize()"
  },
  {
    "label": "SetRealTimeCaptureEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRealTimeCaptureEnabled(bool bNewRealTimeCaptureEnabled)"
  },
  {
    "label": "RecaptureSky()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecaptureSky()"
  },
  {
    "label": "UpdateLimitedRenderingStateFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLimitedRenderingStateFast()"
  },
  {
    "label": "UpdateOcclusionRenderingStateFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOcclusionRenderingStateFast()"
  }
]