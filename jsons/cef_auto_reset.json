[
  {
    "label": "AutoReset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AutoReset"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_BASE_CEF_AUTO_RESET_H_ # define CEF_INCLUDE_BASE_CEF_AUTO_RESET_H_ # pragma once # if)",
    "insertText": "defined(USING_CHROMIUM_INCLUDES)"
  },
  {
    "label": "AutoReset()",
    "kind": "Method",
    "detail": "Function (template<T> class AutoReset { public : template<U>)",
    "insertText": "AutoReset(T* scoped_variable, U&& new_value) : scoped_variable_(scoped_variable), original_value_( std::exchange(*scoped_variable_, std::forward<U>(new_value)))"
  },
  {
    "label": "AutoReset()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "AutoReset(AutoReset&& other) : scoped_variable_(std::exchange(other.scoped_variable_, nullptr)), original_value_(std::move(other.original_value_))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} AutoReset&)",
    "insertText": "operator(AutoReset&& rhs)"
  },
  {
    "label": "exchange()",
    "kind": "Method",
    "detail": "Function (scoped_variable_ =)",
    "insertText": "exchange(rhs.scoped_variable_, nullptr)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (original_value_ =)",
    "insertText": "move(rhs.original_value_)"
  }
]