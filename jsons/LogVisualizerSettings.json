[
  {
    "label": "FVisualLoggerDBRow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerDBRow"
  },
  {
    "label": "FCategoryFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCategoryFilter"
  },
  {
    "label": "FVisualLoggerFiltersData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerFiltersData"
  },
  {
    "label": "FVisualLoggerFilters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerFilters"
  },
  {
    "label": "FCategoryFiltersManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCategoryFiltersManager"
  },
  {
    "label": "LOGVISUALIZER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOGVISUALIZER_API"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" LogVisualizerSettings . generated . h \" struct FVisualLoggerDBRow ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnFilterCategoryAdded, FString, ELogVerbosity::Type)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnFilterCategoryRemoved, FString)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (struct FVisualLoggerDBRow ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FCategoryFilter() : LogVerbosity(ELogVerbosity::Type::NoLogging) , Enabled(0) , bIsInUse(0)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(config)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FOnFilterCategoryRemoved OnFilterCategoryRemoved ; FVisualLoggerFilters&)",
    "insertText": "Get()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "InitWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitWith(const FVisualLoggerFiltersData& NewFiltersData)"
  },
  {
    "label": "MatchCategoryFilters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchCategoryFilters(FString String, ELogVerbosity::Type Verbosity = ELogVerbosity::All)"
  },
  {
    "label": "MatchSearchString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchSearchString(FString String)"
  },
  {
    "label": "SetSearchString()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSearchString(FString InString)"
  },
  {
    "label": "GetSearchString()",
    "kind": "Method",
    "detail": "Function (SearchBoxFilter = InString ; } FString)",
    "insertText": "GetSearchString()"
  },
  {
    "label": "RemoveCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCategory(FString InName)"
  },
  {
    "label": "GetCategoryByName()",
    "kind": "Method",
    "detail": "Function (FCategoryFilter&)",
    "insertText": "GetCategoryByName(const FString& InName)"
  },
  {
    "label": "GetCategoryByName()",
    "kind": "Method",
    "detail": "Function (FCategoryFilter&)",
    "insertText": "GetCategoryByName(const FName& InName)"
  },
  {
    "label": "DeactivateAllButThis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateAllButThis(const FString& InName)"
  },
  {
    "label": "EnableAllCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableAllCategories()"
  },
  {
    "label": "MatchObjectName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchObjectName(FString String)"
  },
  {
    "label": "SelectObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectObject(FString ObjectName)"
  },
  {
    "label": "RemoveObjectFromSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveObjectFromSelection(FString ObjectName)"
  },
  {
    "label": "GetSelectedObjects()",
    "kind": "Method",
    "detail": "Function (const TArray<FString>&)",
    "insertText": "GetSelectedObjects()"
  },
  {
    "label": "DisableGraphData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableGraphData(FName GraphName, FName DataName, bool SetAsDisabled)"
  },
  {
    "label": "IsGraphDataDisabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGraphDataDisabled(FName GraphName, FName DataName)"
  },
  {
    "label": "OnNewItemHandler()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnNewItemHandler(const FVisualLoggerDBRow& BDRow, int32 ItemIndex)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<struct FVisualLoggerFilters> StaticInstance ; TMap<FName,FCategoryFilter*> FastCategoryFilterMap ; TArray<FName> DisabledGraphDatas ; } ; struct FCategoryFiltersManager ;)",
    "insertText": "UCLASS(config = EditorPerProjectUserSettings)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_EVENT_OneParam(ULogVisualizerSettings, FSettingChangedEvent, FName)"
  },
  {
    "label": "OnSettingChanged()",
    "kind": "Method",
    "detail": "Function (FSettingChangedEvent&)",
    "insertText": "OnSettingChanged()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "GetDebugMeshMaterial()",
    "kind": "Method",
    "detail": "Function (# endif class UMaterial*)",
    "insertText": "GetDebugMeshMaterial()"
  },
  {
    "label": "SavePersistentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePersistentData()"
  },
  {
    "label": "ClearPersistentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPersistentData()"
  },
  {
    "label": "LoadPersistentData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadPersistentData()"
  },
  {
    "label": "ConfigureVisLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureVisLog()"
  }
]