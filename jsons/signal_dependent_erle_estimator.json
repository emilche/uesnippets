[
  {
    "label": "estimates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "estimates"
  },
  {
    "label": "receive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "receive"
  },
  {
    "label": "SignalDependentErleEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SignalDependentErleEstimator"
  },
  {
    "label": "SignalDependentErleEstimator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SignalDependentErleEstimator(const EchoCanceller3Config& config,\n                               size_t num_capture_channels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(\n      const RenderBuffer& render_buffer,\n      rtc::ArrayView<const std::vector<std::array<float, kFftLengthBy2Plus1>>>\n          filter_frequency_response,\n      rtc::ArrayView<const float, kFftLengthBy2Plus1> X2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> Y2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> E2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> average_erle,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          average_erle_onset_compensated,\n      const std::vector<bool>& converged_filters)"
  },
  {
    "label": "ComputeNumberOfActiveFilterSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNumberOfActiveFilterSections(\n      const RenderBuffer& render_buffer,\n      rtc::ArrayView<const std::vector<std::array<float, kFftLengthBy2Plus1>>>\n          filter_frequency_responses)"
  },
  {
    "label": "UpdateCorrectionFactors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCorrectionFactors(\n      rtc::ArrayView<const float, kFftLengthBy2Plus1> X2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> Y2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> E2,\n      const std::vector<bool>& converged_filters)"
  },
  {
    "label": "ComputeEchoEstimatePerFilterSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeEchoEstimatePerFilterSection(\n      const RenderBuffer& render_buffer,\n      rtc::ArrayView<const std::vector<std::array<float, kFftLengthBy2Plus1>>>\n          filter_frequency_responses)"
  },
  {
    "label": "ComputeActiveFilterSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeActiveFilterSections()"
  }
]