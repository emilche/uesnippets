[
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "FActiveSound",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveSound"
  },
  {
    "label": "FSoundParseParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundParseParameters"
  },
  {
    "label": "FSubtitleCue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubtitleCue"
  },
  {
    "label": "UDialogueSoundWaveProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueSoundWaveProxy"
  },
  {
    "label": "UDialogueWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueWave"
  },
  {
    "label": "FAudioDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAudioDevice"
  },
  {
    "label": "UCurveTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveTable"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" Sound / SoundBase . h \" # include \" DialogueSoundWaveProxy . generated . h \" class USoundWave ; struct FActiveSound ; struct FSoundParseParameters ; struct FSubtitleCue ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "IsPlayable()",
    "kind": "Method",
    "detail": "Function (USoundWave* SoundWave ; TArray<struct FSubtitleCue> Subtitles ; public : bool)",
    "insertText": "IsPlayable()"
  },
  {
    "label": "GetAttenuationSettingsToApply()",
    "kind": "Method",
    "detail": "Function (const FSoundAttenuationSettings*)",
    "insertText": "GetAttenuationSettingsToApply()"
  },
  {
    "label": "GetMaxDistance()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxDistance()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDuration()"
  },
  {
    "label": "GetVolumeMultiplier()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetVolumeMultiplier()"
  },
  {
    "label": "GetPitchMultiplier()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPitchMultiplier()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Parse(class FAudioDevice* AudioDevice, const UPTRINT NodeWaveInstanceHash, FActiveSound& AudioComponent, const FSoundParseParameters& ParseParams, TArray<FWaveInstance*>& WaveInstances)"
  },
  {
    "label": "GetSoundClass()",
    "kind": "Method",
    "detail": "Function (USoundClass*)",
    "insertText": "GetSoundClass()"
  },
  {
    "label": "GetCurveData()",
    "kind": "Method",
    "detail": "Function (class UCurveTable*)",
    "insertText": "GetCurveData()"
  }
]