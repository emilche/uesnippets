[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "FImaginaryFiBData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImaginaryFiBData"
  },
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSimpleFTextKeyStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimpleFTextKeyStorage"
  },
  {
    "label": "FFindInBlueprintsNoResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindInBlueprintsNoResult"
  },
  {
    "label": "FFindInBlueprintsGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindInBlueprintsGraphNode"
  },
  {
    "label": "FFindInBlueprintsPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindInBlueprintsPin"
  },
  {
    "label": "FFindInBlueprintsProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindInBlueprintsProperty"
  },
  {
    "label": "FFindInBlueprintsGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFindInBlueprintsGraph"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "FStreamSearch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamSearch"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" EdGraph / EdGraphPin . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" FindInBlueprintManager . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Misc / Guid . h \" # include \" Misc / Optional . h \" # include \" SlateFwd . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Textures / SlateIcon . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" # include \" FindInBlueprints . generated . h \" class FBlueprintEditor ; class FImaginaryFiBData ; class FJsonValue ; class FUICommandList ; class ITableRow ; class SDockTab ; class SVerticalBox ; class SWidget ; class UBlueprint ; class UClass ; class UObject ; struct FGeometry ; struct FKeyEvent ; struct FSlateBrush ; typedef STreeView<FSearchResult> STreeViewType ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSearchComplete, TArray<FImaginaryFiBDataSharedPtr>&)"
  },
  {
    "label": "FSimpleFTextKeyStorage()",
    "kind": "Method",
    "detail": "Function (namespace FindInBlueprintsHelpers { struct FSimpleFTextKeyStorage { FText Text ;)",
    "insertText": "FSimpleFTextKeyStorage(FText InText) : Text(InText)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSimpleFTextKeyStorage& InObject)"
  },
  {
    "label": "GetFunctionOriginClass()",
    "kind": "Method",
    "detail": "Function (} } ; UClass*)",
    "insertText": "GetFunctionOriginClass(const UFunction* Function)"
  },
  {
    "label": "ConstructSearchTermFromFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConstructSearchTermFromFunction(const UFunction* Function, FString& SearchTerm)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const FindInBlueprintsHelpers::FSimpleFTextKeyStorage& InObject)"
  },
  {
    "label": "AsFText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "AsFText(TSharedPtr< FJsonValue > InJsonValue, const TMap<int32, FText>& InLookupTable)"
  },
  {
    "label": "AsFText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "AsFText(int32 InValue, const TMap<int32, FText>& InLookupTable)"
  },
  {
    "label": "IsTextEqualToString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTextEqualToString(const FText& InText, const FString& InString)"
  },
  {
    "label": "GetPinTypeAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPinTypeAsString(const FEdGraphPinType& InPinType)"
  },
  {
    "label": "ParsePinType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParsePinType(FText InKey, FText InValue, FEdGraphPinType& InOutPinType)"
  },
  {
    "label": "ExpandAllChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandAllChildren(FSearchResult InTreeNode, TSharedPtr<STreeView<TSharedPtr<FFindInBlueprintsResult>>> InTreeView)"
  },
  {
    "label": "FFindInBlueprintsNoResult()",
    "kind": "Method",
    "detail": "Function (} class FFindInBlueprintsNoResult : public FFindInBlueprintsResult { public :)",
    "insertText": "FFindInBlueprintsNoResult(const FText& InDisplayText) :FFindInBlueprintsResult(InDisplayText)"
  },
  {
    "label": "OnClick()",
    "kind": "Method",
    "detail": "Function (} FReply)",
    "insertText": "OnClick()"
  },
  {
    "label": "FFindInBlueprintsGraphNode()",
    "kind": "Method",
    "detail": "Function (} } ; class FFindInBlueprintsGraphNode : public FFindInBlueprintsResult { public :)",
    "insertText": "FFindInBlueprintsGraphNode()"
  },
  {
    "label": "CreateIcon()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateIcon()"
  },
  {
    "label": "ParseSearchInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseSearchInfo(FText InKey, FText InValue)"
  },
  {
    "label": "GetCategory()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCategory()"
  },
  {
    "label": "FinalizeSearchData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeSearchData()"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObject(UBlueprint* InBlueprint)"
  },
  {
    "label": "FFindInBlueprintsPin()",
    "kind": "Method",
    "detail": "Function (private : FGuid NodeGuid ; FSlateIcon Glyph ; FLinearColor GlyphColor ; UClass* Class ; FString ClassName ; } ; class FFindInBlueprintsPin : public FFindInBlueprintsResult { public :)",
    "insertText": "FFindInBlueprintsPin(FString InSchemaName)"
  },
  {
    "label": "FFindInBlueprintsPin()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFindInBlueprintsPin()"
  },
  {
    "label": "FFindInBlueprintsProperty()",
    "kind": "Method",
    "detail": "Function (private : FString SchemaName ; FEdGraphPinType PinType ; FSlateColor IconColor ; } ; class FFindInBlueprintsProperty : public FFindInBlueprintsResult { public :)",
    "insertText": "FFindInBlueprintsProperty()"
  },
  {
    "label": "FFindInBlueprintsGraph()",
    "kind": "Method",
    "detail": "Function (private : FEdGraphPinType PinType ; FString DefaultValue ; bool bIsSCSComponent ; } ; class FFindInBlueprintsGraph : public FFindInBlueprintsResult { public :)",
    "insertText": "FFindInBlueprintsGraph(EGraphType InGraphType)"
  },
  {
    "label": "FFindInBlueprintsGraph()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FFindInBlueprintsGraph()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (private : EGraphType GraphType ; } ; enum class EFiBCacheBarWidget { ProgressBar,CloseButton,CancelButton,CacheAllUnindexedButton,CurrentAssetNameText,UnresponsiveEditorWarningText,ShowCacheFailuresButton,ShowCacheStatusText } ; enum class EFiBSearchBarWidget { StatusText,Throbber,ProgressBar,} ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (None,LoadOnly,CheckoutAndResave } ; class SFindInBlueprints : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SFindInBlueprints ) : _bIsSearchWindow(true) , _bHideSearchBar(false) , _bHideFindGlobalButton(false) , _ContainingTab()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(bool, bIsSearchWindow) SLATE_ARGUMENT(bool, bHideSearchBar) SLATE_ARGUMENT(bool, bHideFindGlobalButton) SLATE_ARGUMENT(TSharedPtr<SDockTab>, ContainingTab) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<class FBlueprintEditor> InBlueprintEditor = nullptr)"
  },
  {
    "label": "SFindInBlueprints()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SFindInBlueprints()"
  },
  {
    "label": "FocusForUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusForUse(bool bSetFindWithinBlueprint, FString NewSearchTerms = FString(), bool bSelectFirstResult = false)"
  },
  {
    "label": "MakeSearchQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeSearchQuery(FString InSearchString, bool bInIsFindWithinBlueprint, const FStreamSearchOptions& InSearchOptions = FStreamSearchOptions(), FOnSearchComplete InOnSearchComplete = FOnSearchComplete())"
  },
  {
    "label": "OnCacheStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCacheStarted(EFiBCacheOpType InOpType, EFiBCacheOpFlags InOpFlags)"
  },
  {
    "label": "OnCacheComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCacheComplete(EFiBCacheOpType InOpType, EFiBCacheOpFlags InOpFlags)"
  },
  {
    "label": "CacheAllBlueprints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheAllBlueprints(const FFindInBlueprintCachingOptions& InOptions)"
  },
  {
    "label": "GetHostTabId()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetHostTabId()"
  },
  {
    "label": "CloseHostTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseHostTab()"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocked()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "ClearResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearResults()"
  },
  {
    "label": "UpdateSearchResults()",
    "kind": "Method",
    "detail": "Function (private : EActiveTimerReturnType)",
    "insertText": "UpdateSearchResults(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "OnSearchTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchTextChanged(const FText& Text)"
  },
  {
    "label": "OnSearchTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchTextCommitted(const FText& Text, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildren(FSearchResult InItem, TArray< FSearchResult >& OutChildren)"
  },
  {
    "label": "OnTreeSelectionDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeSelectionDoubleClicked(FSearchResult Item)"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(FSearchResult InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "LaunchStreamThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchStreamThread(const FString& InSearchValue, const FStreamSearchOptions& InSearchOptions = FStreamSearchOptions(), FOnSearchComplete InOnSearchComplete = FOnSearchComplete())"
  },
  {
    "label": "GetPercentCompleteSearch()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetPercentCompleteSearch()"
  },
  {
    "label": "GetSearchBarWidgetVisiblity()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSearchBarWidgetVisiblity(EFiBSearchBarWidget InSearchBarWidget)"
  },
  {
    "label": "ConditionallyAddCacheBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyAddCacheBar()"
  },
  {
    "label": "OnRemoveCacheBar()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRemoveCacheBar()"
  },
  {
    "label": "GetCacheBarStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCacheBarStatusText()"
  },
  {
    "label": "GetCacheBarCurrentAssetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCacheBarCurrentAssetName()"
  },
  {
    "label": "CanCacheAllUnindexedBlueprints()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCacheAllUnindexedBlueprints()"
  },
  {
    "label": "OnCacheAllUnindexedBlueprints()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCacheAllUnindexedBlueprints()"
  },
  {
    "label": "OnExportUnindexedAssetList()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnExportUnindexedAssetList()"
  },
  {
    "label": "OnCacheAllBlueprints()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCacheAllBlueprints(const FFindInBlueprintCachingOptions& InOptions)"
  },
  {
    "label": "OnCancelCacheAll()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCancelCacheAll()"
  },
  {
    "label": "GetCurrentCacheIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentCacheIndex()"
  },
  {
    "label": "GetPercentCompleteCache()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetPercentCompleteCache()"
  },
  {
    "label": "GetCacheBarVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetCacheBarVisibility()"
  },
  {
    "label": "GetCacheBarWidgetVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetCacheBarWidgetVisibility(EFiBCacheBarWidget InCacheBarWidget)"
  },
  {
    "label": "IsCacheInProgress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCacheInProgress()"
  },
  {
    "label": "GetCacheBarImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetCacheBarImage()"
  },
  {
    "label": "OnContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnContextMenuOpening()"
  },
  {
    "label": "SelectAllItemsHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllItemsHelper(FSearchResult InItemToSelect)"
  },
  {
    "label": "OnSelectAllAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectAllAction()"
  },
  {
    "label": "OnCopyAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyAction()"
  },
  {
    "label": "OnOpenGlobalFindResults()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnOpenGlobalFindResults()"
  },
  {
    "label": "OnHostTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHostTabClosed(TSharedRef<SDockTab> DockTab)"
  },
  {
    "label": "OnLockButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnLockButtonClicked()"
  },
  {
    "label": "OnGetLockButtonImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetLockButtonImage()"
  }
]