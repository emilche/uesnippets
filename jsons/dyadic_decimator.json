[
  {
    "label": "GetOutLengthToDyadicDecimate()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TRANSIENT_DYADIC_DECIMATOR_H_ # define MODULES_AUDIO_PROCESSING_TRANSIENT_DYADIC_DECIMATOR_H_ # include<cstdlib> namespace webrtc { size_t)",
    "insertText": "GetOutLengthToDyadicDecimate(size_t in_length, bool odd_sequence)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (size_t out_length = in_length / 2 ;)",
    "insertText": "if(in_length % 2 == 1 && !odd_sequence)"
  },
  {
    "label": "DyadicDecimate()",
    "kind": "Method",
    "detail": "Function (+ + out_length ; } return out_length ; } template<T> size_t)",
    "insertText": "DyadicDecimate(const T* in, size_t in_length, bool odd_sequence, T* out, size_t out_length)"
  },
  {
    "label": "GetOutLengthToDyadicDecimate()",
    "kind": "Method",
    "detail": "Function (size_t half_length =)",
    "insertText": "GetOutLengthToDyadicDecimate(in_length, odd_sequence)"
  }
]