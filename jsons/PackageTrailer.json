[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FLinkerSave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerSave"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLookupTableEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLookupTableEntry"
  },
  {
    "label": "FPayloadInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPayloadInfo"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FPackageTrailerBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailerBuilder"
  },
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "LocalEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LocalEntry"
  },
  {
    "label": "ReferencedEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReferencedEntry"
  },
  {
    "label": "VirtualizedEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VirtualizedEntry"
  },
  {
    "label": "FPackageTrailer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailer"
  },
  {
    "label": "FHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeader"
  },
  {
    "label": "FFooter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFooter"
  },
  {
    "label": "FPackageTrailerBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageTrailerBuilder"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, EPackageTrailerVersion PackageTrailerVersion)"
  },
  {
    "label": "CreateFromTrailer()",
    "kind": "Method",
    "detail": "Function (FPackageTrailerBuilder)",
    "insertText": "CreateFromTrailer(const class FPackageTrailer& Trailer, FArchive& Ar, FString DebugContext)"
  },
  {
    "label": "CreateReferenceToTrailer()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<UE::FPackageTrailerBuilder>)",
    "insertText": "CreateReferenceToTrailer(const class FPackageTrailer& Trailer, FString DebugContext)"
  },
  {
    "label": "FPackageTrailerBuilder()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FPackageTrailerBuilder(const FName& InPackageName)"
  },
  {
    "label": "FPackageTrailerBuilder()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FPackageTrailerBuilder(FString&& DebugContext)"
  },
  {
    "label": "AddPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPayload(const FIoHash& Identifier, FCompressedBuffer Payload, UE::Virtualization::EPayloadFilterReason Filter, AdditionalDataCallback&& Callback)"
  },
  {
    "label": "AddPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPayload(const FIoHash& Identifier, FCompressedBuffer Payload, UE::Virtualization::EPayloadFilterReason Filter)"
  },
  {
    "label": "AddVirtualizedPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVirtualizedPayload(const FIoHash& Identifier, int64 RawSize)"
  },
  {
    "label": "UpdatePayloadAsLocal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePayloadAsLocal(const FIoHash& Identifier, FCompressedBuffer Payload)"
  },
  {
    "label": "BuildAndAppendTrailer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildAndAppendTrailer(FLinkerSave* Linker, FArchive& DataArchive)"
  },
  {
    "label": "BuildAndAppendTrailer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildAndAppendTrailer(FLinkerSave* Linker, FArchive& DataArchive, int64& InOutPackageFileOffset)"
  },
  {
    "label": "CalculateTrailerLength()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CalculateTrailerLength()"
  },
  {
    "label": "RemoveDuplicateEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDuplicateEntries()"
  },
  {
    "label": "TryLoadFromPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoadFromPackage(const FPackagePath& PackagePath, FPackageTrailer& OutTrailer)"
  },
  {
    "label": "TryLoadFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoadFromFile(const FString& Path, FPackageTrailer& OutTrailer)"
  },
  {
    "label": "TryLoadFromArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoadFromArchive(FArchive& Ar, FPackageTrailer& OutTrailer)"
  },
  {
    "label": "TryLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoad(FArchive& Ar)"
  },
  {
    "label": "TryLoadBackwards()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryLoadBackwards(FArchive& Ar)"
  },
  {
    "label": "UpdatePayloadAsVirtualized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePayloadAsVirtualized(const FIoHash& Identifier)"
  },
  {
    "label": "FindPayloadsInPackageFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindPayloadsInPackageFile(const FPackagePath& PackagePath, EPayloadStorageType Filter, TArray<FIoHash>& OutPayloadIds)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(UE::Virtualization::EPayloadFilterReason FilterFlags)"
  }
]