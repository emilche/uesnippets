[
  {
    "label": "FindLastBy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / IdentityFunctor . h \" # include \" Templates / Invoke . h \" # include \" Templates / UnrealTemplate . h \" namespace AlgoImpl { template<T,ValueType,ProjectionType> T*)",
    "insertText": "FindLastBy(T* First, SIZE_T Num, const ValueType& Value, ProjectionType Proj)"
  },
  {
    "label": "FindLastBy()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,ValueType,ProjectionType> auto)",
    "insertText": "FindLastBy(RangeType&& Range, const ValueType& Value, ProjectionType Proj) -> decltype(AlgoImpl::FindLastBy(GetData(Range), GetNum(Range), Value, MoveTemp(Proj)))"
  },
  {
    "label": "FindLastByPredicate()",
    "kind": "Method",
    "detail": "Function (} template<RangeType,PredicateType> auto)",
    "insertText": "FindLastByPredicate(RangeType&& Range, PredicateType Pred) -> decltype(AlgoImpl::FindLastByPredicate(GetData(Range), GetNum(Range), MoveTemp(Pred)))"
  }
]