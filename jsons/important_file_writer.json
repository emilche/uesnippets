[
  {
    "label": "SequencedTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequencedTaskRunner"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "comment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "comment"
  },
  {
    "label": "WriteNow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNow(std::unique_ptr<std::string> data)"
  },
  {
    "label": "ScheduleWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleWrite(DataSerializer* serializer)"
  },
  {
    "label": "ScheduleWriteWithBackgroundDataSerializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleWriteWithBackgroundDataSerializer(\n      BackgroundDataSerializer* serializer)"
  },
  {
    "label": "DoScheduledWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoScheduledWrite()"
  },
  {
    "label": "SetTimerForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimerForTesting(OneShotTimer* timer_override)"
  },
  {
    "label": "WriteNowWithBackgroundDataProducer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNowWithBackgroundDataProducer(\n      BackgroundDataProducerCallback background_producer)"
  },
  {
    "label": "WriteFileAtomicallyImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteFileAtomicallyImpl(const FilePath& path,\n                                      StringPiece data,\n                                      StringPiece histogram_suffix,\n                                      bool from_instance)"
  },
  {
    "label": "ClearPendingWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPendingWrite()"
  }
]