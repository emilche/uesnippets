[
  {
    "label": "FModelMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModelMesh"
  },
  {
    "label": "FTopologicalFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalFace"
  },
  {
    "label": "FTopologyReport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologyReport"
  },
  {
    "label": "CADKERNEL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CADKERNEL_API"
  },
  {
    "label": "FBody",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBody"
  },
  {
    "label": "FModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModel"
  },
  {
    "label": "FShell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShell"
  },
  {
    "label": "FTopologicalShapeEntity()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Core / MetadataDictionary . h \" # include \" Topo / TopologicalEntity . h \" namespace UE::CADKernel { class FModelMesh ; class FTopologicalFace ; class FTopologyReport ; class FTopologicalShapeEntity : public FTopologicalEntity { class FBody ; class FModel ; class FShell ; private : FTopologicalShapeEntity* HostedBy = nullptr ; FMetadataDictionary Dictionary ; public : ~)",
    "insertText": "FTopologicalShapeEntity()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FCADKernelArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(Ar)"
  },
  {
    "label": "SerializeIdent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeIdent(Ar, &HostedBy)"
  },
  {
    "label": "GetMetaDataDictionary()",
    "kind": "Method",
    "detail": "Function (} const FMetadataDictionary&)",
    "insertText": "GetMetaDataDictionary()"
  },
  {
    "label": "ExtractMetaData()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "ExtractMetaData(OutMetaData)"
  },
  {
    "label": "CompleteMetaData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CompleteMetaData()"
  },
  {
    "label": "CompleteMetaDataWithHostMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteMetaDataWithHostMetaData()"
  },
  {
    "label": "FaceCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FaceCount()"
  },
  {
    "label": "GetFaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFaces(TArray<FTopologicalFace*>& OutFaces)"
  },
  {
    "label": "PropagateBodyOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateBodyOrientation()"
  },
  {
    "label": "FillTopologyReport()",
    "kind": "Method",
    "detail": "Function (# ifdef CADKERNEL_DEV void)",
    "insertText": "FillTopologyReport(FTopologyReport& Report)"
  },
  {
    "label": "GetHost()",
    "kind": "Method",
    "detail": "Function (# endif FTopologicalShapeEntity*)",
    "insertText": "GetHost()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (HostedBy ->)",
    "insertText": "Remove(this)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} HostedBy = Body ; } void)",
    "insertText": "Remove(const FTopologicalShapeEntity*)"
  },
  {
    "label": "SetHostId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHostId(const int32 InHostId)"
  },
  {
    "label": "SetHostId()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "SetHostId(InHostId)"
  },
  {
    "label": "GetHostId()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetHostId()"
  },
  {
    "label": "SetLayer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetLayer(const int32 InLayerId)"
  },
  {
    "label": "SetLayer()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "SetLayer(InLayerId)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetName(const FString& InName)"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "SetName(InName)"
  },
  {
    "label": "HasName()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasName()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetName()"
  },
  {
    "label": "SetColorId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetColorId(const uint32& InColorId)"
  },
  {
    "label": "SetColorId()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "SetColorId(InColorId)"
  },
  {
    "label": "GetColorId()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetColorId()"
  },
  {
    "label": "SetMaterialId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMaterialId(const uint32& InMaterialId)"
  },
  {
    "label": "SetMaterialId()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "SetMaterialId(InMaterialId)"
  },
  {
    "label": "GetMaterialId()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetMaterialId()"
  },
  {
    "label": "SetDisplayData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDisplayData(const uint32& InColorId, const uint32& InMaterialId)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(InMaterialId)"
  },
  {
    "label": "SetDisplayData()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetDisplayData(const FTopologicalShapeEntity& DisplayData)"
  },
  {
    "label": "SetDisplayData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayData(DisplayData.GetColorId(), DisplayData.GetMaterialId())"
  },
  {
    "label": "SetPatchId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPatchId(int32 InPatchId)"
  },
  {
    "label": "SetPatchId()",
    "kind": "Method",
    "detail": "Function (Dictionary .)",
    "insertText": "SetPatchId(InPatchId)"
  },
  {
    "label": "GetPatchId()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetPatchId()"
  },
  {
    "label": "GetInfo()",
    "kind": "Method",
    "detail": "Function (} # ifdef CADKERNEL_DEV FInfoEntity&)",
    "insertText": "GetInfo(FInfoEntity&)"
  },
  {
    "label": "ResetHost()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "ResetHost()"
  }
]