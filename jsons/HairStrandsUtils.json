[
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxy"
  },
  {
    "label": "FHairComponent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ComputeMinStrandRadiusAtDepth1()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RendererInterface . h \" # include \" HairStrandsInterface . h \" # include \" SceneTypes . h \" # include \" HairStrandsData . h \" class FViewInfo ; FMinHairRadiusAtDepth1)",
    "insertText": "ComputeMinStrandRadiusAtDepth1(const FIntPoint& Resolution, const float FOV, const uint32 SampleCount, const float OverrideStrandHairRasterizationScale, const float OrthoWidth = 0.0f)"
  },
  {
    "label": "ComputeProjectedScreenRect()",
    "kind": "Method",
    "detail": "Function (FIntRect)",
    "insertText": "ComputeProjectedScreenRect(const FBox& B, const FViewInfo& View)"
  },
  {
    "label": "ComputeTranslatedWorldToLightClip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeTranslatedWorldToLightClip(const FVector& TranslatedWorldOffset, FMatrix& OutTranslatedWorldToClipTransform, FMinHairRadiusAtDepth1& OutMinStrandRadiusAtDepth1, const FBoxSphereBounds& PrimitivesBounds, const class FLightSceneProxy& LightProxy, const ELightComponentType LightType, const FIntPoint& ShadowResolution)"
  },
  {
    "label": "GetHairComponents()",
    "kind": "Method",
    "detail": "Function (struct FHairComponent { bool R = true ; bool TT = true ; bool TRT = true ; bool GlobalScattering = true ; bool LocalScattering = true ; bool TTModel = false ; } ; FHairComponent)",
    "insertText": "GetHairComponents()"
  },
  {
    "label": "ToBitfield()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ToBitfield(const FHairComponent& Component)"
  },
  {
    "label": "GetHairDualScatteringRoughnessOverride()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHairDualScatteringRoughnessOverride()"
  },
  {
    "label": "SampleCountToSubPixelSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "SampleCountToSubPixelSize(uint32 SamplePerPixelCount)"
  },
  {
    "label": "ComputeVisibleHairStrandsMacroGroupsRect()",
    "kind": "Method",
    "detail": "Function (FIntRect)",
    "insertText": "ComputeVisibleHairStrandsMacroGroupsRect(const FViewInfo& View, const FIntRect& ViewRect, const FHairStrandsMacroGroupDatas& Datas)"
  },
  {
    "label": "IsHairStrandsViewRectOptimEnable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHairStrandsViewRectOptimEnable()"
  },
  {
    "label": "GetVendorOptimalGroupSize1D()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetVendorOptimalGroupSize1D()"
  },
  {
    "label": "GetVendorOptimalGroupSize2D()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetVendorOptimalGroupSize2D()"
  },
  {
    "label": "GetHairStrandsComposition()",
    "kind": "Method",
    "detail": "Function (enum class EHairStrandsCompositionType : uint8 { BeforeTranslucent,AfterTranslucent,AfterSeparateTranslucent,AfterTranslucentBeforeTranslucentAfterDOF } ; EHairStrandsCompositionType)",
    "insertText": "GetHairStrandsComposition()"
  },
  {
    "label": "PackHairRenderInfo()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "PackHairRenderInfo(float PrimaryRadiusAtDepth1, float StableRadiusAtDepth1, float VelocityRadiusAtDepth1, float VelocityScale)"
  },
  {
    "label": "PackHairRenderInfoBits()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "PackHairRenderInfoBits(bool bIsOrtho, bool bIsGPUDriven)"
  }
]