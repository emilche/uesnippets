[
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxy"
  },
  {
    "label": "FHairComponent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ComputeMinStrandRadiusAtDepth1()",
    "kind": "Method",
    "detail": "Function (FMinHairRadiusAtDepth1)",
    "insertText": "ComputeMinStrandRadiusAtDepth1(\n\tconst FIntPoint& Resolution,\n\tconst float FOV,\n\tconst uint32 SampleCount,\n\tconst float OverrideStrandHairRasterizationScale,\n\tconst float OrthoWidth = 0.0f)"
  },
  {
    "label": "ComputeProjectedScreenRect()",
    "kind": "Method",
    "detail": "Function (FIntRect)",
    "insertText": "ComputeProjectedScreenRect(const FBox& B, const FViewInfo& View)"
  },
  {
    "label": "ComputeTranslatedWorldToLightClip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeTranslatedWorldToLightClip(\n\tconst FVector& TranslatedWorldOffset,\n\tFMatrix& OutTranslatedWorldToClipTransform,\n\tFMinHairRadiusAtDepth1& OutMinStrandRadiusAtDepth1,\n\tconst FBoxSphereBounds& PrimitivesBounds,\n\tconst class FLightSceneProxy& LightProxy,\n\tconst ELightComponentType LightType,\n\tconst FIntPoint& ShadowResolution)"
  },
  {
    "label": "GetHairComponents()",
    "kind": "Method",
    "detail": "Function (FHairComponent)",
    "insertText": "GetHairComponents()"
  },
  {
    "label": "ToBitfield()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ToBitfield(const FHairComponent& Component)"
  },
  {
    "label": "GetHairDualScatteringRoughnessOverride()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHairDualScatteringRoughnessOverride()"
  },
  {
    "label": "SampleCountToSubPixelSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "SampleCountToSubPixelSize(uint32 SamplePerPixelCount)"
  },
  {
    "label": "ComputeVisibleHairStrandsMacroGroupsRect()",
    "kind": "Method",
    "detail": "Function (FIntRect)",
    "insertText": "ComputeVisibleHairStrandsMacroGroupsRect(const FViewInfo& View, const FIntRect& ViewRect, const FHairStrandsMacroGroupDatas& Datas)"
  },
  {
    "label": "IsHairStrandsViewRectOptimEnable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHairStrandsViewRectOptimEnable()"
  },
  {
    "label": "GetVendorOptimalGroupSize1D()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetVendorOptimalGroupSize1D()"
  },
  {
    "label": "GetVendorOptimalGroupSize2D()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetVendorOptimalGroupSize2D()"
  },
  {
    "label": "GetHairStrandsComposition()",
    "kind": "Method",
    "detail": "Function (EHairStrandsCompositionType)",
    "insertText": "GetHairStrandsComposition()"
  },
  {
    "label": "PackHairRenderInfo()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "PackHairRenderInfo(\n\tfloat PrimaryRadiusAtDepth1,\n\tfloat StableRadiusAtDepth1,\n\tfloat VelocityRadiusAtDepth1,\n\tfloat VelocityScale)"
  },
  {
    "label": "PackHairRenderInfoBits()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "PackHairRenderInfoBits(\n\tbool bIsOrtho,\n\tbool bIsGPUDriven)"
  }
]