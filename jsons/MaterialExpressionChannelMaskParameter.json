[
  {
    "label": "UMaterialExpressionChannelMaskParameter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionChannelMaskParameter"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MaterialValueType . h \" # include \" Materials / MaterialExpressionChannelMaskParameterColor . h \" # include \" Materials / MaterialExpressionVectorParameter . h \" # include \" MaterialExpressionChannelMaskParameter . generated . h \")",
    "insertText": "UCLASS(collapsecategories, hidecategories=(Object, MaterialExpressionVectorParameter), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=MaterialExpressionChannelMaskParameter)"
  },
  {
    "label": "GetParameterValue()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "GetParameterValue(FMaterialParameterMetadata& OutMeta)"
  },
  {
    "label": "SetParameterValue()",
    "kind": "Method",
    "detail": "Function (OutMeta . bUsedAsChannelMask = true ; return true ; } return false ; } bool)",
    "insertText": "SetParameterValue(FName InParameterName, FLinearColor InValue, EMaterialExpressionSetParameterValueFlags Flags)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "IsInputConnectionRequired()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInputConnectionRequired(int32 InputIndex)"
  },
  {
    "label": "IsUsedAsChannelMask()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsUsedAsChannelMask()"
  }
]