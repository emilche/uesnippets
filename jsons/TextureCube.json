[
  {
    "label": "FTextureResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureResource"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / Texture . h \" # include \" TextureCube . generated . h \" class FTextureResource ;)",
    "insertText": "UCLASS(hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "SetPlatformData()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetPlatformData(FTexturePlatformData* PlatformData)"
  },
  {
    "label": "GetPlatformData()",
    "kind": "Method",
    "detail": "Function (FTexturePlatformData*)",
    "insertText": "GetPlatformData()"
  },
  {
    "label": "UTextureCube()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR TMap<FString,FTexturePlatformData*> CookedPlatformData ; # endif PRAGMA_DISABLE_DEPRECATION_WARNINGS ~)",
    "insertText": "UTextureCube()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} ; PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDesc()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "NeedsLoadForTargetPlatform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsLoadForTargetPlatform(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "GetSizeX()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSizeX()"
  },
  {
    "label": "GetSizeY()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSizeY()"
  },
  {
    "label": "GetNumMips()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumMips()"
  },
  {
    "label": "GetPixelFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetPixelFormat()"
  },
  {
    "label": "GetMipData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMipData(int32 FirstMipToLoad, void** OutMipData)"
  },
  {
    "label": "GetTextureClass()",
    "kind": "Method",
    "detail": "Function (ETextureClass)",
    "insertText": "GetTextureClass()"
  },
  {
    "label": "GetSurfaceHeight()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetSurfaceHeight()"
  },
  {
    "label": "GetSurfaceDepth()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "GetSurfaceDepth()"
  },
  {
    "label": "UpdateResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResource()"
  },
  {
    "label": "GetMaterialType()",
    "kind": "Method",
    "detail": "Function (EMaterialValueType)",
    "insertText": "GetMaterialType()"
  },
  {
    "label": "IsDefaultTexture()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "IsDefaultTexture()"
  },
  {
    "label": "GetCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (TMap<FString,FTexturePlatformData*>*)",
    "insertText": "GetCookedPlatformData()"
  },
  {
    "label": "CalcTextureMemorySize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CalcTextureMemorySize(int32 MipCount)"
  },
  {
    "label": "CalcTextureMemorySizeEnum()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CalcTextureMemorySizeEnum(ETextureMipCount Enum)"
  },
  {
    "label": "GetMaximumDimension()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR uint32)",
    "insertText": "GetMaximumDimension()"
  }
]