[
  {
    "label": "FailureSignalHandlerOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FailureSignalHandlerOptions"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_DEBUGGING_FAILURE_SIGNAL_HANDLER_H_ # define ABSL_DEBUGGING_FAILURE_SIGNAL_HANDLER_H_ # include \" absl / base / config . h \" namespace absl { ABSL_NAMESPACE_BEGIN struct FailureSignalHandlerOptions { bool symbolize_stacktrace = true ; bool use_alternate_stack = true ; int alarm_on_failure_secs = 3 ; bool call_previous_handler = false ;)",
    "insertText": "void(*writerfn)(const char*)"
  },
  {
    "label": "InstallFailureSignalHandler()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "InstallFailureSignalHandler(const FailureSignalHandlerOptions& options)"
  },
  {
    "label": "FailureSignalToString()",
    "kind": "Method",
    "detail": "Function (namespace debugging_internal { const char*)",
    "insertText": "FailureSignalToString(int signo)"
  }
]