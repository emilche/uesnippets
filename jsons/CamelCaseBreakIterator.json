[
  {
    "label": "FCamelCaseBreakIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCamelCaseBreakIterator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FToken",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToken"
  },
  {
    "label": "FCamelCaseBreakIterator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Internationalization / IBreakIterator . h \" class FCamelCaseBreakIterator : public IBreakIterator { public :)",
    "insertText": "FCamelCaseBreakIterator()"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetString(FString&& InString)"
  },
  {
    "label": "SetStringRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringRef(FStringView InString)"
  },
  {
    "label": "GetCurrentPosition()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentPosition()"
  },
  {
    "label": "ResetToBeginning()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResetToBeginning()"
  },
  {
    "label": "ResetToEnd()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ResetToEnd()"
  },
  {
    "label": "MoveToPrevious()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToPrevious()"
  },
  {
    "label": "MoveToNext()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToNext()"
  },
  {
    "label": "MoveToCandidateBefore()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToCandidateBefore(const int32 InIndex)"
  },
  {
    "label": "MoveToCandidateAfter()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MoveToCandidateAfter(const int32 InIndex)"
  },
  {
    "label": "FToken()",
    "kind": "Method",
    "detail": "Function (protected : enum class ETokenType : uint8 { Uppercase,Lowercase,Digit,Null,Other,} ; struct FToken {)",
    "insertText": "FToken(const ETokenType InTokenType, const int32 InStrIndex) : TokenType(InTokenType) , StrIndex(InStrIndex)"
  },
  {
    "label": "TokenizeString()",
    "kind": "Method",
    "detail": "Function (} ETokenType TokenType ; int32 StrIndex ; } ; using FTokensArray = TArray<FToken,TInlineAllocator<1 0 2 4>> ; void)",
    "insertText": "TokenizeString(FTokensArray& OutTokens)"
  },
  {
    "label": "UpdateBreakPointsArray()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateBreakPointsArray()"
  },
  {
    "label": "PopulateBreakPointsArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateBreakPointsArray(const FTokensArray& InTokens)"
  }
]