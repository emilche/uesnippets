[
  {
    "label": "PacketOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketOptions"
  },
  {
    "label": "SentPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SentPacket"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "transport_name()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_PACKET_TRANSPORT_INTERNAL_H_ # define P2P_BASE_PACKET_TRANSPORT_INTERNAL_H_ # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" p2p / base / port . h \" # include \" rtc_base / async_packet_socket . h \" # include \" rtc_base / network_route . h \" # include \" rtc_base / socket . h \" # include \" rtc_base / system / rtc_export . h \" # include \" rtc_base / third_party / sigslot / sigslot . h \" namespace rtc { struct PacketOptions ; struct SentPacket ; class RTC_EXPORT PacketTransportInternal : public sigslot::has_slots<> { public : const std::string&)",
    "insertText": "transport_name()"
  },
  {
    "label": "writable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "writable()"
  },
  {
    "label": "receiving()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "receiving()"
  },
  {
    "label": "SendPacket()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SendPacket(const char* data, size_t len, const rtc::PacketOptions& options, int flags = 0)"
  },
  {
    "label": "SetOption()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetOption(rtc::Socket::Option opt, int value)"
  },
  {
    "label": "GetOption()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOption(rtc::Socket::Option opt, int* value)"
  },
  {
    "label": "GetError()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetError()"
  },
  {
    "label": "network_route()",
    "kind": "Method",
    "detail": "Function (absl::optional<NetworkRoute>)",
    "insertText": "network_route()"
  },
  {
    "label": "PacketTransportInternal()",
    "kind": "Method",
    "detail": "Function (sigslot::signal1<PacketTransportInternal*> SignalWritableState ; sigslot::signal1<PacketTransportInternal*> SignalReadyToSend ; sigslot::signal1<PacketTransportInternal*> SignalReceivingState ; sigslot::signal5<PacketTransportInternal*,const char*,size_t,const int64_t&,int> SignalReadPacket ; sigslot::signal2<PacketTransportInternal*,const rtc::SentPacket&> SignalSentPacket ; sigslot::signal1<absl::optional<rtc::NetworkRoute>> SignalNetworkRouteChanged ; sigslot::signal1<PacketTransportInternal*> SignalClosed ; protected :)",
    "insertText": "PacketTransportInternal()"
  }
]