[
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "VarArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VarArray"
  },
  {
    "label": "SpecData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecData"
  },
  {
    "label": "SpecElem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecElem"
  },
  {
    "label": "StrBufDict",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrBufDict"
  },
  {
    "label": "SpecType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpecType"
  },
  {
    "label": "SpecOpt",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpecOpt"
  },
  {
    "label": "SpecFmt",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpecFmt"
  },
  {
    "label": "SpecOpen",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SpecOpen"
  },
  {
    "label": "Spec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Spec"
  },
  {
    "label": "SpecElem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecElem"
  },
  {
    "label": "Spec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Spec"
  },
  {
    "label": "SpecWords",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecWords"
  },
  {
    "label": "SpecData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecData"
  },
  {
    "label": "SpecDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SpecDataTable"
  },
  {
    "label": "Spec()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Spec()"
  },
  {
    "label": "Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Format( SpecData *data, StrBuf *result )"
  },
  {
    "label": "Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Format( SpecData *data, StrDict *result )"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Parse( const char *buf, SpecData *data, Error *e, int valid )"
  },
  {
    "label": "Count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Count()"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decode( StrPtr *encoded, Error *e )"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Encode( StrBuf *encoded )"
  },
  {
    "label": "ExtractFieldMapToDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtractFieldMapToDict( StrDict *map,  Error *e, int skipAuto=0)"
  },
  {
    "label": "EncodeFieldMapToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeFieldMapToString( StrBuf *s, Error *e )"
  },
  {
    "label": "Dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dump( const char *msg )"
  },
  {
    "label": "CheckValue()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CheckValue( StrBuf &value )"
  },
  {
    "label": "GetPreset()",
    "kind": "Method",
    "detail": "Function (StrPtr)",
    "insertText": "GetPreset( const char *name = 0 )"
  },
  {
    "label": "SetOpt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOpt( const char *optName, Error *e )"
  },
  {
    "label": "SetFmt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFmt( const char *fmtName, Error *e )"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType( const char *s, Error *e )"
  },
  {
    "label": "SetOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOpen( const char *openName, Error *e )"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Compare( const SpecElem &other )"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decode( StrRef *s, Error *e )"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Encode( StrBuf *s, int code )"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Split()"
  },
  {
    "label": "Join()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Join( int wc )"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (calls)",
    "insertText": "Get()"
  },
  {
    "label": "SetLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLine( SpecElem *sd, int x, const StrPtr *val,\n\t\t\t\tError *e )"
  },
  {
    "label": "SetComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComment( SpecElem *sd, int x, const StrPtr *val,\n\t\t\t\tint nl, Error *e )"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Get( SpecElem *sd, int x, const char **wv, const char **cmt )"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set( SpecElem *sd, int x, const char **wv, Error *e )"
  },
  {
    "label": "Comment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Comment( SpecElem *sd, int x, const char **wv, int nl, Error *e )"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Get( SpecElem *sd, int x, char **wv, char **cmt )"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set( SpecElem *sd, int x, char **wv, Error *e )"
  },
  {
    "label": "Comment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Comment( SpecElem *sd, int x, char **wv, int nl, Error *e )"
  },
  {
    "label": "SpecDataTable()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SpecDataTable( StrDict *dict = 0 )"
  },
  {
    "label": "SetLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLine( SpecElem *sd, int x, const StrPtr *val,\n\t\t\t\tError *e )"
  },
  {
    "label": "SetComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComment( SpecElem *sd, int x, const StrPtr *val,\n\t\t\t\tint nl, Error *e )"
  }
]