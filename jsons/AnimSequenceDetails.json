[
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FAnimSequenceDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimSequenceDetails"
  },
  {
    "label": "SSearchableComboBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchableComboBox"
  },
  {
    "label": "SAnimationRefPoseViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationRefPoseViewport"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FFXSystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystemInterface"
  },
  {
    "label": "UDebugSkelMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDebugSkelMeshComponent"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AdvancedPreviewScene . h \" # include \" Animation / Skeleton . h \" # include \" Containers / Array . h \" # include \" Delegates / IDelegateInstance . h \" # include \" HAL / Platform . h \" # include \" IDetailCustomization . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FEditorViewportClient ; class FString ; class IDetailCategoryBuilder ; class IDetailChildrenBuilder ; class IDetailLayoutBuilder ; class IPropertyHandle ; class STextBlock ; class SViewport ; class SWidget ; class UAnimSequence ; class USceneComponent ; struct FGeometry ; class FAnimSequenceDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "CreateOverridenProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOverridenProperty(IDetailLayoutBuilder& DetailBuilder, IDetailCategoryBuilder& AdditiveSettingsCategory, TSharedPtr<IPropertyHandle> PropertyHandle, TAttribute<EVisibility> VisibilityAttribute)"
  },
  {
    "label": "ShouldShowRefPoseType()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "ShouldShowRefPoseType()"
  },
  {
    "label": "ShouldShowRefAnimInfo()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "ShouldShowRefAnimInfo()"
  },
  {
    "label": "ShouldShowRefFrameIndex()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "ShouldShowRefFrameIndex()"
  },
  {
    "label": "FAnimSequenceDetails()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FAnimSequenceDetails()"
  },
  {
    "label": "MakeRetargetSourceComboWidget()",
    "kind": "Method",
    "detail": "Function (private : TWeakObjectPtr<USkeleton> TargetSkeleton ; TSharedPtr<IPropertyHandle> AdditiveAnimTypeHandle ; TSharedPtr<IPropertyHandle> RefPoseTypeHandle ; TSharedPtr<IPropertyHandle> RefPoseSeqHandle ; TSharedPtr<IPropertyHandle> RefFrameIndexHandle ; TSharedPtr<IPropertyHandle> RetargetSourceNameHandler ; TSharedPtr<IPropertyHandle> RetargetSourceAssetHandle ; TSharedPtr<class SSearchableComboBox> RetargetSourceComboBox ; TArray<TSharedPtr<FString>> RetargetSourceComboList ; TSharedRef<SWidget>)",
    "insertText": "MakeRetargetSourceComboWidget(TSharedPtr<FString> InItem)"
  },
  {
    "label": "OnRetargetSourceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRetargetSourceChanged(TSharedPtr<FString> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "GetRetargetSourceComboBoxContent()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRetargetSourceComboBoxContent()"
  },
  {
    "label": "GetRetargetSourceComboBoxToolTip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetRetargetSourceComboBoxToolTip()"
  },
  {
    "label": "OnRetargetSourceComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRetargetSourceComboOpening()"
  },
  {
    "label": "GetRetargetSourceString()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FString>)",
    "insertText": "GetRetargetSourceString(FName RetargetSourceName)"
  },
  {
    "label": "UpdateRetargetSourceAssetDataVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "UpdateRetargetSourceAssetDataVisibility()"
  },
  {
    "label": "UpdateRetargetSourceAssetData()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "UpdateRetargetSourceAssetData()"
  },
  {
    "label": "RegisterRetargetSourceChanged()",
    "kind": "Method",
    "detail": "Function (USkeleton::FOnRetargetSourceChanged OnDelegateRetargetSourceChanged ; FDelegateHandle OnDelegateRetargetSourceChangedDelegateHandle ; void)",
    "insertText": "RegisterRetargetSourceChanged()"
  },
  {
    "label": "DelegateRetargetSourceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DelegateRetargetSourceChanged()"
  },
  {
    "label": "GenerateAnimationTrackNameArrayElementWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle> AnimationTrackNamesHandle ; TArray<FName> AnimationTrackNamesList ; void)",
    "insertText": "GenerateAnimationTrackNameArrayElementWidget(TSharedRef<IPropertyHandle> PropertyHandle, int32 ArrayIndex, IDetailChildrenBuilder& ChildrenBuilder, IDetailLayoutBuilder* DetailLayout)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TArray<TWeakObjectPtr<UAnimSequence>> SelectedAnimSequences ; } ; class SAnimationRefPoseViewport : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimationRefPoseViewport)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(USkeleton*, Skeleton ) SLATE_ARGUMENT( TSharedPtr<IPropertyHandle>, AnimRefPropertyHandle ) SLATE_ARGUMENT( TSharedPtr<IPropertyHandle>, RefPoseTypeHandle ) SLATE_ARGUMENT( TSharedPtr<IPropertyHandle>, RefFrameIndexPropertyHandle ) SLATE_END_ARGS() public: SAnimationRefPoseViewport()"
  },
  {
    "label": "SAnimationRefPoseViewport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SAnimationRefPoseViewport()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "OnTickPreview()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnTickPreview(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "InitSkeleton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSkeleton()"
  },
  {
    "label": "CleanupComponent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEditorViewportClient> LevelViewportClient ; TSharedPtr<IPropertyHandle> AnimRefPropertyHandle ; TSharedPtr<IPropertyHandle> RefPoseTypeHandle ; TSharedPtr<IPropertyHandle> RefFrameIndexPropertyHandle ; TSharedPtr<SViewport> ViewportWidget ; TSharedPtr<class FSceneViewport> SceneViewport ; USkeleton* TargetSkeleton ; UAnimSequence* PreviewAnimationSequence ; FAdvancedPreviewScene PreviewScene ; class FFXSystemInterface* FXSystem ; TSharedPtr<STextBlock> Description ; class UDebugSkelMeshComponent* PreviewComponent ; void)",
    "insertText": "CleanupComponent(USceneComponent* Component)"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "GetViewMinInput()",
    "kind": "Method",
    "detail": "Function (public : float)",
    "insertText": "GetViewMinInput()"
  },
  {
    "label": "GetViewMaxInput()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetViewMaxInput()"
  },
  {
    "label": "GetPreviewInstance()",
    "kind": "Method",
    "detail": "Function (class UAnimSingleNodeInstance*)",
    "insertText": "GetPreviewInstance()"
  },
  {
    "label": "GetBars()",
    "kind": "Method",
    "detail": "Function (TArray<float>)",
    "insertText": "GetBars()"
  },
  {
    "label": "OnBarDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBarDrag(int32 index, float newPos)"
  }
]