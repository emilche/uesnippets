[
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimPhysBoneRigidBody",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPhysBoneRigidBody"
  },
  {
    "label": "FAnimPhysLinkedBody",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPhysLinkedBody"
  },
  {
    "label": "FAnimPhysConstraintSetup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPhysConstraintSetup"
  },
  {
    "label": "FAnimPhysPlanarLimit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPhysPlanarLimit"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimPhysSphericalLimit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPhysSphericalLimit"
  },
  {
    "label": "FAnimPhysBodyDefinition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimPhysBodyDefinition"
  },
  {
    "label": "FAnimConstraintOffsetPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimConstraintOffsetPair"
  },
  {
    "label": "FAnimNode_AnimDynamics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_AnimDynamics"
  },
  {
    "label": "FAnimNode_AnimDynamics()",
    "kind": "Method",
    "detail": "Function (ANIMGRAPHRUNTIME_API)",
    "insertText": "FAnimNode_AnimDynamics()"
  },
  {
    "label": "RequestInitialise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestInitialise(ETeleportType InTeleportType)"
  },
  {
    "label": "InitPhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitPhysics(FComponentSpacePoseContext& Output)"
  },
  {
    "label": "TermPhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TermPhysics()"
  },
  {
    "label": "UpdateChainPhysicsBodyDefinitions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChainPhysicsBodyDefinitions(const FReferenceSkeleton& ReferenceSkeleton)"
  },
  {
    "label": "ValidateChainPhysicsBodyDefinitions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateChainPhysicsBodyDefinitions(const FReferenceSkeleton& ReferenceSkeleton)"
  },
  {
    "label": "FindChainBoneNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindChainBoneNames(const FReferenceSkeleton& ReferenceSkeleton, TArray<FName>& ChainBoneNames)"
  },
  {
    "label": "UpdateLimits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLimits(FComponentSpacePoseContext& Output)"
  },
  {
    "label": "IsValidToEvaluate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidToEvaluate(const USkeleton* Skeleton, const FBoneContainer& RequiredBones)"
  },
  {
    "label": "DrawBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawBodies(FComponentSpacePoseContext& InContext, const TArray<FAnimPhysRigidBody*>& InBodies)"
  },
  {
    "label": "IsAnimDynamicsSystemEnabledFor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnimDynamicsSystemEnabledFor(int32 InLOD)"
  }
]