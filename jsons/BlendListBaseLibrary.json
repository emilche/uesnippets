[
  {
    "label": "FAnimNode_BlendListBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_BlendListBase"
  },
  {
    "label": "FBlendListBaseReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlendListBaseReference"
  },
  {
    "label": "UBlendListBaseLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendListBaseLibrary"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / AnimExecutionContext . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Animation / AnimNodeReference . h \" # include \" BlendListBaseLibrary . generated . h \" struct FAnimNode_BlendListBase ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(Experimental, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Blend List Base\", meta = (BlueprintThreadSafe, ExpandEnumAsExecs = \"Result\")) static ANIMGRAPHRUNTIME_API FBlendListBaseReference ConvertToBlendListBase(const FAnimNodeReference& Node, EAnimNodeReferenceConversionResult& Result)"
  }
]