[
  {
    "label": "CefMediaObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaObserver"
  },
  {
    "label": "CefMediaRoute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaRoute"
  },
  {
    "label": "CefMediaRouteCreateCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaRouteCreateCallback"
  },
  {
    "label": "CefMediaSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaSink"
  },
  {
    "label": "CefMediaSinkDeviceInfoCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaSinkDeviceInfoCallback"
  },
  {
    "label": "CefMediaSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaSource"
  },
  {
    "label": "CefMediaRouter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefMediaRouter"
  },
  {
    "label": "GetGlobalMediaRouter()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_MEDIA_ROUTER_H_ # define CEF_INCLUDE_CEF_MEDIA_ROUTER_H_ # pragma once # include<vector> # include \" include / cef_base . h \" # include \" include / cef_callback . h \" # include \" include / cef_registration . h \" class CefMediaObserver ; class CefMediaRoute ; class CefMediaRouteCreateCallback ; class CefMediaSink ; class CefMediaSinkDeviceInfoCallback ; class CefMediaSource ; class CefMediaRouter : public CefBaseRefCounted { public : CefRefPtr<CefMediaRouter>)",
    "insertText": "GetGlobalMediaRouter(CefRefPtr<CefCompletionCallback> callback)"
  },
  {
    "label": "AddObserver()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefRegistration>)",
    "insertText": "AddObserver(CefRefPtr<CefMediaObserver> observer)"
  },
  {
    "label": "GetSource()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefMediaSource>)",
    "insertText": "GetSource(const CefString& urn)"
  },
  {
    "label": "NotifyCurrentSinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCurrentSinks()"
  },
  {
    "label": "CreateRoute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRoute(CefRefPtr<CefMediaSource> source, CefRefPtr<CefMediaSink> sink, CefRefPtr<CefMediaRouteCreateCallback> callback)"
  },
  {
    "label": "NotifyCurrentRoutes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCurrentRoutes()"
  },
  {
    "label": "OnSinks()",
    "kind": "Method",
    "detail": "Function (} ; class CefMediaObserver : public CefBaseRefCounted { public : typedef cef_media_route_connection_state_t ConnectionState ; void)",
    "insertText": "OnSinks(const std::vector<CefRefPtr<CefMediaSink>>& sinks)"
  },
  {
    "label": "OnRoutes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRoutes(const std::vector<CefRefPtr<CefMediaRoute>>& routes)"
  },
  {
    "label": "OnRouteStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRouteStateChanged(CefRefPtr<CefMediaRoute> route, ConnectionState state)"
  },
  {
    "label": "OnRouteMessageReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRouteMessageReceived(CefRefPtr<CefMediaRoute> route, const void* message, size_t message_size)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (} ; class CefMediaRoute : public CefBaseRefCounted { public : CefString)",
    "insertText": "GetId()"
  },
  {
    "label": "GetSource()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefMediaSource>)",
    "insertText": "GetSource()"
  },
  {
    "label": "GetSink()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefMediaSink>)",
    "insertText": "GetSink()"
  },
  {
    "label": "SendRouteMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRouteMessage(const void* message, size_t message_size)"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Terminate()"
  },
  {
    "label": "OnMediaRouteCreateFinished()",
    "kind": "Method",
    "detail": "Function (} ; class CefMediaRouteCreateCallback : public CefBaseRefCounted { public : typedef cef_media_route_create_result_t RouteCreateResult ; void)",
    "insertText": "OnMediaRouteCreateFinished(RouteCreateResult result, const CefString& error, CefRefPtr<CefMediaRoute> route)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetIconType()",
    "kind": "Method",
    "detail": "Function (IconType)",
    "insertText": "GetIconType()"
  },
  {
    "label": "GetDeviceInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDeviceInfo(CefRefPtr<CefMediaSinkDeviceInfoCallback> callback)"
  },
  {
    "label": "IsCastSink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCastSink()"
  },
  {
    "label": "IsDialSink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDialSink()"
  },
  {
    "label": "IsCompatibleWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleWith(CefRefPtr<CefMediaSource> source)"
  },
  {
    "label": "OnMediaSinkDeviceInfo()",
    "kind": "Method",
    "detail": "Function (} ; class CefMediaSinkDeviceInfoCallback : public CefBaseRefCounted { public : void)",
    "insertText": "OnMediaSinkDeviceInfo(const CefMediaSinkDeviceInfo& device_info)"
  },
  {
    "label": "IsCastSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCastSource()"
  },
  {
    "label": "IsDialSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDialSource()"
  }
]