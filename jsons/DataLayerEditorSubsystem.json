[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "FDataLayersBroadcast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayersBroadcast"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "FSubsystemCollectionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubsystemCollectionBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UDEPRECATED_DataLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDEPRECATED_DataLayer"
  },
  {
    "label": "UDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerAsset"
  },
  {
    "label": "UEditorEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorEngine"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UExternalDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerAsset"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFilter"
  },
  {
    "label": "FExternalDataLayerTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalDataLayerTest"
  },
  {
    "label": "DATALAYEREDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DATALAYEREDITOR_API"
  },
  {
    "label": "DATALAYEREDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATALAYEREDITOR_API"
  },
  {
    "label": "DataLayerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayerType"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FDataLayersBroadcast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayersBroadcast"
  },
  {
    "label": "FDataLayersBroadcast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayersBroadcast"
  },
  {
    "label": "UContentBundleEditingSubmodule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleEditingSubmodule"
  },
  {
    "label": "FExternalDataLayerWorldSurrogateReferencingObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalDataLayerWorldSurrogateReferencingObject"
  },
  {
    "label": "WorldPartitionTests",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WorldPartitionTests"
  },
  {
    "label": "DataLayerInstanceType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayerInstanceType"
  },
  {
    "label": "UDataLayerEditorSubsystem()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UDataLayerEditorSubsystem()"
  },
  {
    "label": "AddToActorEditorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToActorEditorContext(UDataLayerInstance* InDataLayerInstance)"
  },
  {
    "label": "RemoveFromActorEditorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromActorEditorContext(UDataLayerInstance* InDataLayerInstance)"
  },
  {
    "label": "SetActorEditorContextCurrentExternalDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetActorEditorContextCurrentExternalDataLayer(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "IsActorValidForDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorValidForDataLayer(AActor* Actor)"
  },
  {
    "label": "IsActorValidForDataLayerInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorValidForDataLayerInstances(AActor* Actor, const TArray<UDataLayerInstance*>& DataLayerInstances)"
  },
  {
    "label": "AddActorToDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddActorToDataLayer(AActor* Actor, UDataLayerInstance* DataLayer)"
  },
  {
    "label": "AddActorToDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddActorToDataLayers(AActor* Actor, const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "RemoveActorFromDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorFromDataLayer(AActor* Actor, UDataLayerInstance* DataLayerToRemove)"
  },
  {
    "label": "RemoveActorFromDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorFromDataLayers(AActor* Actor, const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "RemoveActorFromAllDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorFromAllDataLayers(AActor* Actor)"
  },
  {
    "label": "RemoveActorsFromAllDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorsFromAllDataLayers(const TArray<AActor*>& Actors)"
  },
  {
    "label": "AddActorsToDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddActorsToDataLayer(const TArray<AActor*>& Actors, UDataLayerInstance* DataLayer)"
  },
  {
    "label": "AddActorsToDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddActorsToDataLayers(const TArray<AActor*>& Actors, const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "RemoveActorsFromDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorsFromDataLayer(const TArray<AActor*>& Actors, UDataLayerInstance* DataLayer)"
  },
  {
    "label": "RemoveActorsFromDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveActorsFromDataLayers(const TArray<AActor*>& Actors, const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "AddSelectedActorsToDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSelectedActorsToDataLayer(UDataLayerInstance* DataLayer)"
  },
  {
    "label": "AddSelectedActorsToDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSelectedActorsToDataLayers(const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "RemoveSelectedActorsFromDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSelectedActorsFromDataLayer(UDataLayerInstance* DataLayer)"
  },
  {
    "label": "RemoveSelectedActorsFromDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSelectedActorsFromDataLayers(const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "SelectActorsInDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectActorsInDataLayer(UDataLayerInstance* DataLayer, const bool bSelect, const bool bNotify, const bool bSelectEvenIfHidden = false)"
  },
  {
    "label": "SelectActorsInDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectActorsInDataLayer(UDataLayerInstance* DataLayer, const bool bSelect, const bool bNotify, const bool bSelectEvenIfHidden, const TSharedPtr<FActorFilter>& Filter)"
  },
  {
    "label": "SelectActorsInDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectActorsInDataLayers(const TArray<UDataLayerInstance*>& DataLayers, const bool bSelect, const bool bNotify, const bool bSelectEvenIfHidden = false)"
  },
  {
    "label": "SelectActorsInDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectActorsInDataLayers(const TArray<UDataLayerInstance*>& DataLayers, const bool bSelect, const bool bNotify, const bool bSelectEvenIfHidden, const TSharedPtr<FActorFilter>& Filter)"
  },
  {
    "label": "SetActorsPinStateInDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorsPinStateInDataLayers(const TArray<UDataLayerInstance*>& DataLayerInstances, const bool bPinned)"
  },
  {
    "label": "UpdateActorVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateActorVisibility(AActor* Actor, bool& bOutSelectionChanged, bool& bOutActorModified, const bool bNotifySelectionChange, const bool bRedrawViewports)"
  },
  {
    "label": "UpdateAllActorsVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAllActorsVisibility(const bool bNotifySelectionChange, const bool bRedrawViewports)"
  },
  {
    "label": "SetDataLayerVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataLayerVisibility(UDataLayerInstance* DataLayer, const bool bIsVisible)"
  },
  {
    "label": "SetDataLayersVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataLayersVisibility(const TArray<UDataLayerInstance*>& DataLayers, const bool bIsVisible)"
  },
  {
    "label": "ToggleDataLayerVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDataLayerVisibility(UDataLayerInstance* DataLayer)"
  },
  {
    "label": "ToggleDataLayersVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDataLayersVisibility(const TArray<UDataLayerInstance*>& DataLayers)"
  },
  {
    "label": "SetDataLayerIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataLayerIsLoadedInEditor(UDataLayerInstance* DataLayer, const bool bIsLoadedInEditor, const bool bIsFromUserChange)"
  },
  {
    "label": "SetDataLayersIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataLayersIsLoadedInEditor(const TArray<UDataLayerInstance*>& DataLayers, const bool bIsLoadedInEditor, const bool bIsFromUserChange)"
  },
  {
    "label": "ToggleDataLayerIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToggleDataLayerIsLoadedInEditor(UDataLayerInstance* DataLayer, const bool bIsFromUserChange)"
  },
  {
    "label": "ToggleDataLayersIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToggleDataLayersIsLoadedInEditor(const TArray<UDataLayerInstance*>& DataLayers, const bool bIsFromUserChange)"
  },
  {
    "label": "MakeAllDataLayersVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeAllDataLayersVisible()"
  },
  {
    "label": "SetParentDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParentDataLayer(UDataLayerInstance* DataLayer, UDataLayerInstance* ParentDataLayer)"
  },
  {
    "label": "SetParentDataLayerForDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentDataLayerForDataLayers(const TArray<UDataLayerInstance*>& DataLayers, UDataLayerInstance* ParentDataLayer)"
  },
  {
    "label": "DeleteDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteDataLayers(const TArray<UDataLayerInstance*>& DataLayersToDelete)"
  },
  {
    "label": "DeleteDataLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteDataLayer(UDataLayerInstance* DataLayerToDelete)"
  },
  {
    "label": "ResetUserSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResetUserSettings()"
  },
  {
    "label": "SetDataLayerShortName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataLayerShortName(UDataLayerInstance* InDataLayerInstance, const FString& InNewShortName)"
  },
  {
    "label": "RenameDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameDataLayer(UDataLayerInstance* DataLayer, const FName& NewDataLayerLabel)"
  },
  {
    "label": "InitializeNewActorDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeNewActorDataLayers(AActor* Actor)"
  },
  {
    "label": "EditorMapChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorMapChange()"
  },
  {
    "label": "EditorRefreshDataLayerBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorRefreshDataLayerBrowser()"
  },
  {
    "label": "PostUndoRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndoRedo()"
  },
  {
    "label": "UpdateRegisteredWorldDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRegisteredWorldDelegates()"
  },
  {
    "label": "OnWorldPartitionInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionInitialized(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "OnWorldPartitionUninitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionUninitialized(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "OnLoadedActorAddedToLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadedActorAddedToLevel(AActor& InActor)"
  },
  {
    "label": "OnDataLayerEditorLoadingStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataLayerEditorLoadingStateChanged(bool bIsFromUserChange)"
  },
  {
    "label": "SetDataLayerIsLoadedInEditorInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataLayerIsLoadedInEditorInternal(UDataLayerInstance* DataLayer, const bool bIsLoadedInEditor, const bool bIsFromUserChange)"
  },
  {
    "label": "PassDataLayersFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassDataLayersFilter(UWorld* World, const FWorldPartitionHandle& ActorHandle)"
  },
  {
    "label": "BroadcastActorDataLayersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastActorDataLayersChanged(const TWeakObjectPtr<AActor>& ChangedActor)"
  },
  {
    "label": "BroadcastDataLayerChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastDataLayerChanged(const EDataLayerAction Action, const TWeakObjectPtr<const UDataLayerInstance>& ChangedDataLayer, const FName& ChangedProperty)"
  },
  {
    "label": "BroadcastDataLayerEditorLoadingStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastDataLayerEditorLoadingStateChanged(bool bIsFromUserChange)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged()"
  },
  {
    "label": "RebuildSelectedDataLayersFromEditorSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildSelectedDataLayersFromEditorSelection()"
  },
  {
    "label": "SetParentDataLayerForDataLayersInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParentDataLayerForDataLayersInternal(const TArray<UDataLayerInstance*>& DataLayers, UDataLayerInstance* ParentDataLayer)"
  },
  {
    "label": "UpdateAllActorsVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAllActorsVisibility(const bool bNotifySelectionChange, const bool bRedrawViewports, ULevel* InLevel)"
  },
  {
    "label": "IsActorValidForDataLayerForClasses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorValidForDataLayerForClasses(AActor* Actor, const TSet<TSubclassOf<UDataLayerInstance>>& DataLayerInstanceClasses)"
  },
  {
    "label": "OnActorPreSpawnInitialization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorPreSpawnInitialization(AActor* InActor)"
  },
  {
    "label": "OnNewActorsPlaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewActorsPlaced(UObject* InObjToUse, const TArray<AActor*>& InPlacedActors)"
  },
  {
    "label": "OnEditorActorReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorActorReplaced(AActor* InOldActor, AActor* InNewActor)"
  },
  {
    "label": "OnExternalDataLayerAssetRegistrationStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExternalDataLayerAssetRegistrationStateChanged(const UExternalDataLayerAsset* ExternalDataLayerAsset, EExternalDataLayerRegistrationState OldState, EExternalDataLayerRegistrationState NewState)"
  },
  {
    "label": "OnLevelEditorDragDropWorldSurrogateReferencingObject()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FLevelEditorDragDropWorldSurrogateReferencingObject>)",
    "insertText": "OnLevelEditorDragDropWorldSurrogateReferencingObject(UWorld* ReferencingWorld, const FSoftObjectPath& Object)"
  },
  {
    "label": "ApplyContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyContext(AActor* InActor, bool bInForceTryApply = false)"
  }
]