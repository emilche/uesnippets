[
  {
    "label": "FPrimitiveSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneInfo"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "UXRDeviceVisualizationComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UXRDeviceVisualizationComponent"
  },
  {
    "label": "UMotionControllerComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMotionControllerComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "IModularFeature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModularFeature"
  },
  {
    "label": "FViewExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewExtension"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / PrimitiveComponent . h \" # include \" SceneViewExtension . h \" # include \" IMotionController . h \" # include \" LateUpdateManager . h \" # include \" MotionControllerComponent . generated . h \" class FPrimitiveSceneInfo ; class FRHICommandListImmediate ; class FSceneView ; class FSceneViewFamily ; class UXRDeviceVisualizationComponent ;)",
    "insertText": "UCLASS(Blueprintable, meta = (BlueprintSpawnableComponent), ClassGroup = MotionController, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, BlueprintSetter = SetAssociatedPlayerIndex, Category = \"MotionController\")"
  },
  {
    "label": "GetTrackingMotionSource()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTrackingMotionSource()"
  },
  {
    "label": "TickComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickComponent(float DeltaTime, enum ELevelTick TickType, FActorComponentTickFunction* ThisTickFunction)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "InitializeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeComponent()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FActivateVisualizationComponent, bool)"
  },
  {
    "label": "CreateRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (FActivateVisualizationComponent OnActivateVisualizationComponent ; protected : void)",
    "insertText": "CreateRenderState_Concurrent(FRegisterComponentContext* Context)"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "PollControllerState_GameThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollControllerState_GameThread(FVector& Position, FRotator& Orientation, bool& OutbProvidedLinearVelocity, FVector& OutLinearVelocity, bool& OutbProvidedAngularVelocity, FVector& OutAngularVelocityAsAxisAndLength, bool& OutbProvidedLinearAcceleration, FVector& OutLinearAcceleration, float WorldToMetersScale)"
  },
  {
    "label": "PollControllerState_RenderThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollControllerState_RenderThread(FVector& Position, FRotator& Orientation, float WorldToMetersScale)"
  },
  {
    "label": "OnModularFeatureUnregistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModularFeatureUnregistered(const FName& Type, class IModularFeature* ModularFeature)"
  },
  {
    "label": "FViewExtension()",
    "kind": "Method",
    "detail": "Function (IMotionController* PolledMotionController_GameThread ; IMotionController* PolledMotionController_RenderThread ; bool bPolledHMD_GameThread ; bool bPolledHMD_RenderThread ; FCriticalSection PolledMotionControllerMutex ; FTransform RenderThreadRelativeTransform ; FVector RenderThreadComponentScale ; class FViewExtension : public FSceneViewExtensionBase { public :)",
    "insertText": "FViewExtension(const FAutoRegister& AutoRegister, UMotionControllerComponent* InMotionControllerComponent)"
  },
  {
    "label": "FViewExtension()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FViewExtension()"
  },
  {
    "label": "SetupViewFamily()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetupViewFamily(FSceneViewFamily& InViewFamily)"
  },
  {
    "label": "SetupView()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetupView(FSceneViewFamily& InViewFamily, FSceneView& InView)"
  },
  {
    "label": "BeginRenderViewFamily()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginRenderViewFamily(FSceneViewFamily& InViewFamily)"
  },
  {
    "label": "PreRenderView_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreRenderView_RenderThread(FRDGBuilder& GraphBuilder, FSceneView& InView)"
  },
  {
    "label": "PreRenderViewFamily_RenderThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PreRenderViewFamily_RenderThread(FRDGBuilder& GraphBuilder, FSceneViewFamily& InViewFamily)"
  },
  {
    "label": "GetPriority()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPriority()"
  }
]