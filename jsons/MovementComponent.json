[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "UMovementComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovementComponent"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "APhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhysicsVolume"
  },
  {
    "label": "PhysicsLockedAxisSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PhysicsLockedAxisSettingChanged()"
  },
  {
    "label": "StopMovementImmediately()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopMovementImmediately()"
  },
  {
    "label": "PhysicsVolumeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PhysicsVolumeChanged(class APhysicsVolume* NewVolume)"
  },
  {
    "label": "SetUpdatedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpdatedComponent(USceneComponent* NewUpdatedComponent)"
  },
  {
    "label": "UpdateTickRegistration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTickRegistration()"
  },
  {
    "label": "HandleImpact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleImpact(const FHitResult& Hit, float TimeSlice=0.f, const FVector& MoveDelta = FVector::ZeroVector)"
  },
  {
    "label": "UpdateComponentVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateComponentVelocity()"
  },
  {
    "label": "MoveUpdatedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveUpdatedComponent(const FVector& Delta, const FQuat& NewRotation,    bool bSweep, FHitResult* OutHit = NULL, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "MoveUpdatedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveUpdatedComponent(const FVector& Delta, const FRotator& NewRotation, bool bSweep, FHitResult* OutHit = NULL, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "MoveUpdatedComponentImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveUpdatedComponentImpl(const FVector& Delta, const FQuat& NewRotation, bool bSweep, FHitResult* OutHit = NULL, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "K2_MoveUpdatedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "K2_MoveUpdatedComponent(FVector Delta, FRotator NewRotation, FHitResult& OutHit, bool bSweep = true, bool bTeleport = false)"
  },
  {
    "label": "SafeMoveUpdatedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SafeMoveUpdatedComponent(const FVector& Delta, const FQuat& NewRotation,    bool bSweep, FHitResult& OutHit, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "SafeMoveUpdatedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SafeMoveUpdatedComponent(const FVector& Delta, const FRotator& NewRotation, bool bSweep, FHitResult& OutHit, ETeleportType Teleport = ETeleportType::None)"
  },
  {
    "label": "ResolvePenetration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolvePenetration(const FVector& Adjustment, const FHitResult& Hit, const FQuat& NewRotation)"
  },
  {
    "label": "ResolvePenetration()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolvePenetration(const FVector& Adjustment, const FHitResult& Hit, const FRotator& NewRotation)"
  },
  {
    "label": "ResolvePenetrationImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolvePenetrationImpl(const FVector& Adjustment, const FHitResult& Hit, const FQuat& NewRotation)"
  },
  {
    "label": "SlideAlongSurface()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "SlideAlongSurface(const FVector& Delta, float Time, const FVector& Normal, FHitResult &Hit, bool bHandleImpact = false)"
  },
  {
    "label": "AddRadialForce()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRadialForce(const FVector& Origin, float Radius, float Strength, ERadialImpulseFalloff Falloff)"
  },
  {
    "label": "AddRadialImpulse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRadialImpulse(const FVector& Origin, float Radius, float Strength, ERadialImpulseFalloff Falloff, bool bVelChange)"
  },
  {
    "label": "SetPlaneConstraintAxisSetting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaneConstraintAxisSetting(EPlaneConstraintAxisSetting NewAxisSetting)"
  },
  {
    "label": "SetPlaneConstraintNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaneConstraintNormal(FVector PlaneNormal)"
  },
  {
    "label": "SetPlaneConstraintFromVectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaneConstraintFromVectors(FVector Forward, FVector Up)"
  },
  {
    "label": "SetPlaneConstraintOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaneConstraintOrigin(FVector PlaneOrigin)"
  },
  {
    "label": "SetPlaneConstraintEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlaneConstraintEnabled(bool bEnabled)"
  },
  {
    "label": "SnapUpdatedComponentToPlane()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapUpdatedComponentToPlane()"
  },
  {
    "label": "MoveUpdatedComponentImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveUpdatedComponentImpl(Delta, NewRotation, bSweep, OutHit, Teleport)"
  },
  {
    "label": "ResolvePenetrationImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ResolvePenetrationImpl(Adjustment, Hit, NewRotation)"
  }
]