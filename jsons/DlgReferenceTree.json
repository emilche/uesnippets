[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FReferenceTreeDataContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceTreeDataContainer"
  },
  {
    "label": "FReferenceGraphNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceGraphNode"
  },
  {
    "label": "FArchiveGenerateReferenceGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveGenerateReferenceGraph"
  },
  {
    "label": "SReferenceTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SReferenceTree"
  },
  {
    "label": "FReferenceGraphNode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Serialization / ArchiveUObject . h \" # include \" Components / ActorComponent . h \" # include \" GameFramework / Actor . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Engine / Brush . h \" # include \" Model . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STreeView . h \" # include \" Engine / Polys . h \" class FMenuBuilder ; class SWindow ; struct FReferenceTreeDataContainer ; struct FReferenceGraphNode { UObject* Object ; TSet<FReferenceGraphNode*> Links ; bool bVisited ;)",
    "insertText": "FReferenceGraphNode(UObject* InObject ) : Object( InObject ), bVisited(false)"
  },
  {
    "label": "GetObjectToDisplay()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetObjectToDisplay(bool bShowScriptReferences)"
  },
  {
    "label": "UActorComponent()",
    "kind": "Method",
    "detail": "Function (UObject* ObjectToDisplay = NULL ; UActorComponent* Comp = Cast<)",
    "insertText": "UActorComponent(Object)"
  },
  {
    "label": "GetOwner()",
    "kind": "Method",
    "detail": "Function (ObjectToDisplay = Comp ->)",
    "insertText": "GetOwner()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(Comp->GetOuter() && Comp->GetOuter()->IsA( AActor::StaticClass() ))"
  },
  {
    "label": "GetOuter()",
    "kind": "Method",
    "detail": "Function (ObjectToDisplay = Comp ->)",
    "insertText": "GetOuter()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } else)",
    "insertText": "if(Object->IsA( UPolys::StaticClass() ))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ObjectToDisplay = PossibleBrush ; } } } else { ObjectToDisplay = Object ; })",
    "insertText": "if(ObjectToDisplay && ObjectToDisplay->HasAnyFlags( RF_ClassDefaultObject ) && !bShowScriptReferences)"
  },
  {
    "label": "FArchiveGenerateReferenceGraph()",
    "kind": "Method",
    "detail": "Function (ObjectToDisplay = NULL ; } return ObjectToDisplay ; } } ; typedef TMap<UObject*,FReferenceGraphNode*> FReferenceGraph ; class FArchiveGenerateReferenceGraph : public FArchiveUObject { public :)",
    "insertText": "FArchiveGenerateReferenceGraph(FReferenceGraph& OutGraph)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(UObject*& Object)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : UObject* CurrentObject ; TSet<UObject*> VisitedObjects ; FReferenceGraph& ObjectGraph ; } ; typedef TSharedPtr<struct FReferenceTreeDataContainer> FReferenceTreeItemPtr ; typedef STreeView<FReferenceTreeItemPtr> SReferenceTreeView ; class SReferenceTree : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SReferenceTree ) : _Object(NULL)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UObject*, Object) SLATE_END_ARGS() UNREALED_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "SReferenceTree()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SReferenceTree()"
  },
  {
    "label": "OpenDialog()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SWindow> SingletonInstance ; void)",
    "insertText": "OpenDialog(UObject* InObject)"
  },
  {
    "label": "OnGenerateRowForReferenceTree()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForReferenceTree(FReferenceTreeItemPtr Item, const TSharedRef< STableViewBase >& OwnerTable)"
  },
  {
    "label": "PopulateTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateTree(UObject* RootObject)"
  },
  {
    "label": "PopulateTreeRecursive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PopulateTreeRecursive(FReferenceGraphNode& InNode, FReferenceTreeItemPtr InParentNode)"
  },
  {
    "label": "OnGetChildrenForReferenceTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForReferenceTree(FReferenceTreeItemPtr InParent, TArray< FReferenceTreeItemPtr >& OutChildren)"
  },
  {
    "label": "BuildMenuWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildMenuWidget()"
  },
  {
    "label": "FillViewEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillViewEntries(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "FillOptionsEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillOptionsEntries(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "SetAllExpansionStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllExpansionStates(bool bInExpansionState)"
  },
  {
    "label": "SetAllExpansionStates_Helper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllExpansionStates_Helper(FReferenceTreeItemPtr InNode, bool bInExpansionState)"
  },
  {
    "label": "OnEditorMapChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditorMapChange(uint32 InMapChangeFlags)"
  },
  {
    "label": "DestroyGraphAndTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyGraphAndTree()"
  },
  {
    "label": "OnMenuViewProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuViewProperties(AActor* InActor)"
  },
  {
    "label": "OnMenuShowEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuShowEditor(UObject* InObject)"
  },
  {
    "label": "OnShowScriptReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowScriptReferences()"
  },
  {
    "label": "OnShowScriptReferences_Checked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnShowScriptReferences_Checked()"
  },
  {
    "label": "SetWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindow(TSharedPtr<SWindow> InWindow)"
  }
]