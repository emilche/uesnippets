[
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_GWP_ASAN_SUPPORT_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_GWP_ASAN_SUPPORT_H_ # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" # include \" base / allocator / partition_allocator / partition_alloc_buildflags . h \" # if)",
    "insertText": "BUILDFLAG(ENABLE_GWP_ASAN_SUPPORT)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (class)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC)"
  },
  {
    "label": "MapRegion()",
    "kind": "Method",
    "detail": "Function (public : void*)",
    "insertText": "MapRegion(size_t slot_count, std::vector<uint16_t>& free_list)"
  },
  {
    "label": "CanReuse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReuse(uintptr_t slot_start)"
  }
]