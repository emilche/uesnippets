[
  {
    "label": "wl_display",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "wl_display"
  },
  {
    "label": "wl_surface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "wl_surface"
  },
  {
    "label": "ANativeWindow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ANativeWindow"
  },
  {
    "label": "_screen_context",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_screen_context"
  },
  {
    "label": "_screen_window",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_screen_window"
  },
  {
    "label": "VkResult()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" vulkan . h \" # include<stdbool . h> # define CURRENT_LOADER_ICD_INTERFACE_VERSION 7 # define MIN_SUPPORTED_LOADER_ICD_INTERFACE_VERSION 0 # define MIN_PHYS_DEV_EXTENSION_ICD_INTERFACE_VERSION 4 typedef)",
    "insertText": "VkResult(VKAPI_PTR *PFN_vkNegotiateLoaderICDInterfaceVersion)(uint32_t *pVersion)"
  },
  {
    "label": "PFN_vkVoidFunction()",
    "kind": "Method",
    "detail": "Function (# ifndef PFN_GetPhysicalDeviceProcAddr typedef)",
    "insertText": "PFN_vkVoidFunction(VKAPI_PTR *PFN_GetPhysicalDeviceProcAddr)(VkInstance instance, const char *pName)"
  },
  {
    "label": "VkResult()",
    "kind": "Method",
    "detail": "Function (# endif typedef)",
    "insertText": "VkResult(VKAPI_PTR *PFN_vk_icdNegotiateLoaderICDInterfaceVersion)(uint32_t* pVersion)"
  },
  {
    "label": "PFN_vkVoidFunction()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "PFN_vkVoidFunction(VKAPI_PTR *PFN_vk_icdGetInstanceProcAddr)(VkInstance instance, const char* pName)"
  },
  {
    "label": "PFN_vkVoidFunction()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "PFN_vkVoidFunction(VKAPI_PTR *PFN_vk_icdGetPhysicalDeviceProcAddr)(VkInstance instance, const char* pName)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(VK_USE_PLATFORM_WIN32_KHR) typedef VkResult (VKAPI_PTR *PFN_vk_icdEnumerateAdapterPhysicalDevices)(VkInstance instance, LUID adapterLUID, uint32_t* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if !)",
    "insertText": "defined(VK_NO_PROTOTYPES)"
  },
  {
    "label": "vk_icdNegotiateLoaderICDInterfaceVersion()",
    "kind": "Method",
    "detail": "Function (# endif VKAPI_ATTR VkResult VKAPI_CALL)",
    "insertText": "vk_icdNegotiateLoaderICDInterfaceVersion(uint32_t* pVersion)"
  },
  {
    "label": "vk_icdGetInstanceProcAddr()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR PFN_vkVoidFunction VKAPI_CALL)",
    "insertText": "vk_icdGetInstanceProcAddr(VkInstance instance, const char* pName)"
  },
  {
    "label": "vk_icdGetPhysicalDeviceProcAddr()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR PFN_vkVoidFunction VKAPI_CALL)",
    "insertText": "vk_icdGetPhysicalDeviceProcAddr(VkInstance instance, const char* pName)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(VK_USE_PLATFORM_WIN32_KHR) VKAPI_ATTR VkResult VKAPI_CALL vk_icdEnumerateAdapterPhysicalDevices(VkInstance instance, LUID adapterLUID, uint32_t* pPhysicalDeviceCount, VkPhysicalDevice* pPhysicalDevices)"
  },
  {
    "label": "set_loader_magic_value()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef __cplusplus } # endif # endif # define ICD_LOADER_MAGIC 0 x01CDC0DE typedef union { uintptr_t loaderMagic ; void* loaderData ; } VK_LOADER_DATA ; void)",
    "insertText": "set_loader_magic_value(void *pNewObject)"
  },
  {
    "label": "loader_info()",
    "kind": "Method",
    "detail": "Function (VK_LOADER_DATA*)",
    "insertText": "loader_info(VK_LOADER_DATA *)"
  },
  {
    "label": "valid_loader_magic_value()",
    "kind": "Method",
    "detail": "Function (loader_info -> loaderMagic = ICD_LOADER_MAGIC ; } bool)",
    "insertText": "valid_loader_magic_value(void *pNewObject)"
  }
]