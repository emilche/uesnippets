[
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FCollisionQueryFilterCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionQueryFilterCallback"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FPreFilterRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreFilterRecord"
  },
  {
    "label": "CalcQueryHitType()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "CalcQueryHitType(const FCollisionFilterData& QueryFilter, const FCollisionFilterData& ShapeFilter, bool bPreFilter = false)"
  },
  {
    "label": "PreFilterImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PreFilterImp(const FCollisionFilterData& FilterData, const FCollisionFilterData& ShapeFilterData, uint32 ComponentID, const FBodyInstance* BodyInstance)"
  },
  {
    "label": "PostFilterImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PostFilterImp(const FCollisionFilterData& FilterData, bool bIsOverlap)"
  },
  {
    "label": "PreFilterImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PreFilterImp(const FCollisionFilterData& FilterData, const Chaos::FPerShapeData& Shape, const Chaos::FGeometryParticle& Actor)"
  },
  {
    "label": "PreFilterImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PreFilterImp(const FCollisionFilterData& FilterData, const Chaos::FPerShapeData& Shape, const Chaos::FGeometryParticleHandle& Actor)"
  },
  {
    "label": "PostFilterImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PostFilterImp(const FCollisionFilterData& FilterData, const ChaosInterface::FQueryHit& Hit)"
  },
  {
    "label": "PostFilterImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PostFilterImp(const FCollisionFilterData& FilterData, const ChaosInterface::FPTQueryHit& Hit)"
  },
  {
    "label": "PostFilterImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PostFilterImp(FilterData, Hit)"
  },
  {
    "label": "PostFilterImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PostFilterImp(FilterData, Hit)"
  },
  {
    "label": "PreFilterImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PreFilterImp(FilterData, Shape, Actor)"
  },
  {
    "label": "PreFilterImp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PreFilterImp(FilterData, Shape, Actor)"
  },
  {
    "label": "PreFilterBaseImp()",
    "kind": "Method",
    "detail": "Function (ECollisionQueryHitType)",
    "insertText": "PreFilterBaseImp(const FCollisionFilterData& FilterData, const Chaos::FPerShapeData& Shape, const TParticle& Actor)"
  }
]