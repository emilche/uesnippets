[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "SpectrumBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SpectrumBuffer"
  },
  {
    "label": "StationarityEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StationarityEstimator"
  },
  {
    "label": "NoiseSpectrum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoiseSpectrum"
  },
  {
    "label": "StationarityEstimator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "StationarityEstimator()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "UpdateNoiseEstimator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNoiseEstimator(\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> spectrum)"
  },
  {
    "label": "UpdateStationarityFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStationarityFlags(\n      const SpectrumBuffer& spectrum_buffer,\n      rtc::ArrayView<const float> render_reverb_contribution_spectrum,\n      int idx_current,\n      int num_lookahead)"
  },
  {
    "label": "AreAllBandsStationary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllBandsStationary()"
  },
  {
    "label": "UpdateHangover()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHangover()"
  },
  {
    "label": "SmoothStationaryPerFreq()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SmoothStationaryPerFreq()"
  },
  {
    "label": "NoiseSpectrum()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NoiseSpectrum()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(\n        rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> spectrum)"
  }
]