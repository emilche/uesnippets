[
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "FoliageVertexColorMask",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FoliageVertexColorMask"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FFoliageVertexColorChannelMask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageVertexColorChannelMask"
  },
  {
    "label": "FFoliageDensityFalloff",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageDensityFalloff"
  },
  {
    "label": "UFoliageType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFoliageType"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / Guid . h \" # include \" Engine / EngineTypes . h \" # include \" Components / PrimitiveComponent . h \" # include \" Curves / CurveFloat . h \" # include \" VT / RuntimeVirtualTextureEnum . h \" # include \" FoliageType . generated . h \" class UStaticMesh ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (FOLIAGEVERTEXCOLORMASK_Disabled)",
    "insertText": "UMETA(DisplayName=\"Disabled\"), FOLIAGEVERTEXCOLORMASK_Red UMETA(DisplayName=\"Red\"), FOLIAGEVERTEXCOLORMASK_Green UMETA(DisplayName=\"Green\"), FOLIAGEVERTEXCOLORMASK_Blue UMETA(DisplayName=\"Blue\"), FOLIAGEVERTEXCOLORMASK_Alpha UMETA(DisplayName=\"Alpha\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Red,Green,Blue,Alpha,MAX_None)",
    "insertText": "UMETA(Hidden)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=VertexColorMask)"
  },
  {
    "label": "FFoliageVertexColorChannelMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FFoliageVertexColorChannelMask() : UseMask(false) , MaskThreshold(0.5f) , InvertMask(false)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FFoliageDensityFalloff()"
  },
  {
    "label": "IsInstanceFiltered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstanceFiltered(const FVector2D& Position, const FVector2D& Origin, FVector::FReal MaxDistance)"
  },
  {
    "label": "GetDensityFalloffValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDensityFalloffValue(const FVector2D& Position, const FVector2D& Origin, FVector::FReal MaxDistance)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(abstract, hidecategories = Object, editinlinenew, MinimalAPI, BlueprintType, Blueprintable)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual UObject* GetSource() const PURE_VIRTUAL(UFoliageType::GetSource, return nullptr;)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "IsNotAssetOrBlueprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNotAssetOrBlueprint()"
  },
  {
    "label": "GetRandomScale()",
    "kind": "Method",
    "detail": "Function (FVector3f)",
    "insertText": "GetRandomScale()"
  },
  {
    "label": "GetDefaultNewAssetName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FString)",
    "insertText": "GetDefaultNewAssetName()"
  },
  {
    "label": "SetSource()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSource(UObject* InSource) PURE_VIRTUAL(UFoliageType::SetSource,)"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds()"
  },
  {
    "label": "IsFoliageReallocationRequiredForPropertyChange()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFoliageReallocationRequiredForPropertyChange(const FProperty* Property)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "IsSourcePropertyChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSourcePropertyChange(const FProperty* Property)"
  },
  {
    "label": "GetDisplayFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDisplayFName()"
  },
  {
    "label": "GetRadius()",
    "kind": "Method",
    "detail": "Function (# endif public : float)",
    "insertText": "GetRadius(bool bInSingleInstanceMode)"
  },
  {
    "label": "GetScaleForAge()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScaleForAge(const float Age)"
  },
  {
    "label": "GetInitAge()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetInitAge(FRandomStream& RandomStream)"
  },
  {
    "label": "GetNextAge()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetNextAge(const float CurrentAge, const int32 NumSteps)"
  },
  {
    "label": "GetSpawnsInShade()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSpawnsInShade()"
  }
]