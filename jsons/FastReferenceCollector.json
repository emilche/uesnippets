[
  {
    "label": "FWorkCoordinator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkCoordinator"
  },
  {
    "label": "FWorkerContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorkerContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGCInternals",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGCInternals"
  },
  {
    "label": "FGarbageCollectionTracer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGarbageCollectionTracer"
  },
  {
    "label": "FStructArrayBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructArrayBlock"
  },
  {
    "label": "schema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "schema"
  },
  {
    "label": "FPrefetchingObjectIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrefetchingObjectIterator"
  },
  {
    "label": "FWorkBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorkBlock"
  },
  {
    "label": "FWorkstealingQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkstealingQueue"
  },
  {
    "label": "FWorkBlockifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorkBlockifier"
  },
  {
    "label": "FSlowARO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlowARO"
  },
  {
    "label": "FProcessorStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProcessorStats"
  },
  {
    "label": "FStructArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructArray"
  },
  {
    "label": "FSuspendedStructBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSuspendedStructBatch"
  },
  {
    "label": "FWeakReferenceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeakReferenceInfo"
  },
  {
    "label": "FDebugSchemaStackNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugSchemaStackNode"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "TFastReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastReferenceCollector"
  },
  {
    "label": "FSlowAROManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlowAROManager"
  },
  {
    "label": "FDebugSchemaStackScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugSchemaStackScope"
  },
  {
    "label": "FDebugSchemaStackNoOpScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugSchemaStackNoOpScope"
  },
  {
    "label": "FMemberUnpacked",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemberUnpacked"
  },
  {
    "label": "FMemberWordUnpacked",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMemberWordUnpacked"
  },
  {
    "label": "FStridedReferenceArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStridedReferenceArray"
  },
  {
    "label": "FStridedReferenceView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStridedReferenceView"
  },
  {
    "label": "FStridedReferenceIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStridedReferenceIterator"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "ArrayType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "did",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "did"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "member",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "member"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "DispatcherType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DispatcherType"
  },
  {
    "label": "HasHandleTokenStreamVerseCellReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasHandleTokenStreamVerseCellReference"
  },
  {
    "label": "HasHandleTokenStreamVerseCellReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasHandleTokenStreamVerseCellReference"
  },
  {
    "label": "ProcessorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessorType"
  },
  {
    "label": "TDirectDispatcher",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TDirectDispatcher"
  },
  {
    "label": "ArrayType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayType"
  },
  {
    "label": "CollectorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CollectorType"
  },
  {
    "label": "ProcessorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessorType"
  },
  {
    "label": "CollectorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CollectorType"
  },
  {
    "label": "ProcessorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessorType"
  },
  {
    "label": "TGetDispatcherType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TGetDispatcherType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "TFastReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFastReferenceCollector"
  },
  {
    "label": "HasFlushWork",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasFlushWork"
  },
  {
    "label": "HasFlushWork",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasFlushWork"
  },
  {
    "label": "TDefaultCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDefaultCollector"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FSimpleReferenceProcessorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleReferenceProcessorBase"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "CollectorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CollectorType"
  },
  {
    "label": "ProcessorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessorType"
  },
  {
    "label": "ProcessorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessorType"
  },
  {
    "label": "PadObjectArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PadObjectArray(TArray<UObject*>& Objects)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(Objects, ObjectCapacity)"
  },
  {
    "label": "MakeArrayView()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeArrayView(Objects + ObjectCapacity, ObjectLookahead)"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UE_NONCOPYABLE(FWorkBlockifier)"
  },
  {
    "label": "ResetAsyncQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAsyncQueue()"
  },
  {
    "label": "PopWipBlock()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PopWipBlock()"
  },
  {
    "label": "StealAsyncBlock()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "StealAsyncBlock()"
  },
  {
    "label": "FreeOwningBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeOwningBlock(UObject*const* BlockObjects)"
  },
  {
    "label": "AllocateWipBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateWipBlock()"
  },
  {
    "label": "PushFullBlockSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushFullBlockSync()"
  },
  {
    "label": "PushFullBlockAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushFullBlockAsync()"
  },
  {
    "label": "CallSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallSync(uint32 SlowAROIndex, UObject* Object, FReferenceCollector& Collector)"
  },
  {
    "label": "TryQueueCall()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryQueueCall(uint32 SlowAROIndex, UObject* Object, FWorkerContext& Context)"
  },
  {
    "label": "ProcessUnbalancedCalls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessUnbalancedCalls(FWorkerContext& Context, FReferenceCollector& Collector)"
  },
  {
    "label": "ProcessAllCalls()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessAllCalls(FWorkerContext& Context, FReferenceCollector& Collector)"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UE_NONCOPYABLE(FWorkerContext)"
  },
  {
    "label": "FWorkerContext()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FWorkerContext()"
  },
  {
    "label": "AllocateWorkerIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateWorkerIndex()"
  },
  {
    "label": "FreeWorkerIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeWorkerIndex()"
  },
  {
    "label": "VisitNestedStructMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisitNestedStructMembers(DispatcherType& Dispatcher, FSchemaView Schema, uint8* Instance)"
  },
  {
    "label": "SchemaStack()",
    "kind": "Method",
    "detail": "Function (DispatcherType::SchemaStackScopeType)",
    "insertText": "SchemaStack(Dispatcher.Context, StructSchema)"
  },
  {
    "label": "SchemaStack()",
    "kind": "Method",
    "detail": "Function (DispatcherType::SchemaStackScopeType)",
    "insertText": "SchemaStack(Dispatcher.Context, StructSchema)"
  },
  {
    "label": "SchemaStack()",
    "kind": "Method",
    "detail": "Function (DispatcherType::SchemaStackScopeType)",
    "insertText": "SchemaStack(Dispatcher.Context, StructSchema)"
  },
  {
    "label": "CalledSuperAROScope()",
    "kind": "Method",
    "detail": "Function (TGuardValue<bool>)",
    "insertText": "CalledSuperAROScope(bCalledSuperARO, false)"
  },
  {
    "label": "Quad()",
    "kind": "Method",
    "detail": "Function (FMemberWordUnpacked)",
    "insertText": "Quad(WordIt->Members)"
  },
  {
    "label": "CallARO()",
    "kind": "Method",
    "detail": "Function (EMemberType::MemberARO:)",
    "insertText": "CallARO(Dispatcher, MemberPtr, *++WordIt)"
  },
  {
    "label": "CallARO()",
    "kind": "Method",
    "detail": "Function (EMemberType::ARO:)",
    "insertText": "CallARO(Dispatcher, Instance, *++WordIt)"
  },
  {
    "label": "CallSlowARO()",
    "kind": "Method",
    "detail": "Function (EMemberType::SlowARO:)",
    "insertText": "CallSlowARO(Dispatcher, /* slow ARO index */ Member.WordOffset, Instance, DebugIdx)"
  },
  {
    "label": "LogIllegalTypeFatal()",
    "kind": "Method",
    "detail": "Function (default:)",
    "insertText": "LogIllegalTypeFatal(Member.Type, DebugIdx, Instance)"
  },
  {
    "label": "StealWork()",
    "kind": "Method",
    "detail": "Function (ELoot)",
    "insertText": "StealWork(FWorkerContext& Context, FReferenceCollector& Collector, FWorkBlock*& OutBlock, EGCOptions Options)"
  },
  {
    "label": "SuspendWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SuspendWork(FWorkerContext& Context)"
  },
  {
    "label": "Collector()",
    "kind": "Method",
    "detail": "Function (CollectorType)",
    "insertText": "Collector(Processor, Context)"
  },
  {
    "label": "FlushWork()",
    "kind": "Method",
    "detail": "Function (StoleARO:)",
    "insertText": "FlushWork(Dispatcher)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "if(Block = RemainingObjects.PopPartialBlock(/* out if successful */ BlockSize)"
  },
  {
    "label": "It()",
    "kind": "Method",
    "detail": "Function (FPrefetchingObjectIterator)",
    "insertText": "It(CurrentObjects)"
  },
  {
    "label": "SchemaStack()",
    "kind": "Method",
    "detail": "Function (DispatcherType::SchemaStackScopeType)",
    "insertText": "SchemaStack(Dispatcher.Context, Schema)"
  },
  {
    "label": "ProcessStructs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessStructs(DispatcherType& Dispatcher)"
  },
  {
    "label": "GetNumCollectReferenceWorkers()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumCollectReferenceWorkers()"
  }
]