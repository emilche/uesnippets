[
  {
    "label": "VUniqueString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VUniqueString"
  },
  {
    "label": "VUniqueStringSetInternPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VUniqueStringSetInternPool"
  },
  {
    "label": "FUniqueStringSetKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniqueStringSetKeyFuncs"
  },
  {
    "label": "FUniqueStringSetKeyFuncsBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniqueStringSetKeyFuncsBase"
  },
  {
    "label": "VStringInternPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VStringInternPool"
  },
  {
    "label": "TLazyInitialized",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TLazyInitialized"
  },
  {
    "label": "VUniqueStringSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VUniqueStringSet"
  },
  {
    "label": "FConstIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstIterator"
  },
  {
    "label": "FHashableUniqueStringSetKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHashableUniqueStringSetKeyFuncs"
  },
  {
    "label": "FHashableUniqueStringSetKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHashableUniqueStringSetKey"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (struct VUniqueString ; class VUniqueStringSetInternPool ; template<T> struct FUniqueStringSetKeyFuncs ; template<T> struct FUniqueStringSetKeyFuncsBase : BaseKeyFuncs<T,T,false> { typedef FUtf8StringView KeyInitType ; typedef VUniqueString& ElementInitType ; FUtf8StringView)",
    "insertText": "GetSetKey(VUniqueString& Element)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (FUtf8StringView)",
    "insertText": "GetSetKey(const T& Element)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(FUtf8StringView A, FUtf8StringView B)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKeyHash(FUtf8StringView Key)"
  },
  {
    "label": "VStringInternPool()",
    "kind": "Method",
    "detail": "Function (} ; template<> struct FUniqueStringSetKeyFuncs<TWeakBarrier<VUniqueString>> : FUniqueStringSetKeyFuncsBase<TWeakBarrier<VUniqueString>> { } ; template<> struct FUniqueStringSetKeyFuncs<TWriteBarrier<VUniqueString>> : FUniqueStringSetKeyFuncsBase<TWriteBarrier<VUniqueString>> { } ; class VStringInternPool final : FGlobalHeapCensusRoot { private :)",
    "insertText": "VStringInternPool()"
  },
  {
    "label": "Intern()",
    "kind": "Method",
    "detail": "Function (VUniqueString&)",
    "insertText": "Intern(FAllocationContext Context, FUtf8StringView String)"
  },
  {
    "label": "ConductCensus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConductCensus()"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (TSet<TWeakBarrier<VUniqueString>,FUniqueStringSetKeyFuncs<TWeakBarrier<VUniqueString>>> UniqueStrings ; UE::FMutex Mutex ; struct VUniqueString ; struct TLazyInitialized<VStringInternPool> ; } ; struct VUniqueString final : VArray {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VArray)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; VUniqueString&)",
    "insertText": "New(FAllocationContext Context, FUtf8StringView String)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const VUniqueString& Other)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SerializeImpl(VUniqueString*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (private : VUniqueString&)",
    "insertText": "Make(FAllocationContext Context, FUtf8StringView String)"
  },
  {
    "label": "VUniqueString()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VUniqueString(FAllocationContext Context, FUtf8StringView String) : VArray(Context, String, &GlobalTrivialEmergentType.Get(Context))"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} TLazyInitialized<VStringInternPool> StringPool ; class VStringInternPool ; } ; uint32)",
    "insertText": "GetTypeHash(const VUniqueString& String)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (} struct VUniqueStringSet : VCell { using SetType = TSet<TWriteBarrier<VUniqueString>,FUniqueStringSetKeyFuncs<TWriteBarrier<VUniqueString>>> ;)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VCell)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; class FConstIterator { public : FSetElementId)",
    "insertText": "GetId()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const TWriteBarrier<VUniqueString>*)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FConstIterator& Rhs)"
  },
  {
    "label": "FConstIterator()",
    "kind": "Method",
    "detail": "Function (private : struct VUniqueStringSet ;)",
    "insertText": "FConstIterator(SetType::TRangedForConstIterator InCurrentIteration)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (SetType::TRangedForConstIterator CurrentIteration ; } ; FConstIterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (FConstIterator)",
    "insertText": "end()"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (VUniqueStringSet&)",
    "insertText": "New(FAllocationContext Context, const TSet<VUniqueString*> InSet)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (VUniqueStringSet&)",
    "insertText": "New(FAllocationContext Context, const std::initializer_list<FUtf8StringView>& InStrings)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const VUniqueStringSet& Other)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const VUniqueStringSet& Other)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Num()"
  },
  {
    "label": "FindId()",
    "kind": "Method",
    "detail": "Function (FSetElementId)",
    "insertText": "FindId(const FUtf8StringView& String)"
  },
  {
    "label": "IsValidId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidId(const FSetElementId& Id)"
  },
  {
    "label": "ToStringImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToStringImpl(FStringBuilderBase& Builder, FAllocationContext Context, const FCellFormatter& Formatter)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeImpl(VUniqueStringSet*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "FormSet()",
    "kind": "Method",
    "detail": "Function (private : SetType)",
    "insertText": "FormSet(FAllocationContext Context, const TSet<VUniqueString*>& InSet)"
  },
  {
    "label": "VUniqueStringSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VUniqueStringSet(FAllocationContext Context, const TSet<VUniqueString*>& InSet)"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (VUniqueStringSet&)",
    "insertText": "Make(FAllocationContext Context, const TSet<VUniqueString*>& InSet)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const TSet<VUniqueString*>& A, const TSet<VUniqueString*>& B)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (TLazyInitialized<VUniqueStringSetInternPool> Pool ; SetType Strings ; class VUniqueStringSetInternPool ; struct FHashableUniqueStringSetKeyFuncs ; } ; uint32)",
    "insertText": "GetTypeHash(const TSet<VUniqueString*>& Set)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHash(const VUniqueStringSet& Set)"
  },
  {
    "label": "FHashableUniqueStringSetKey()",
    "kind": "Method",
    "detail": "Function (struct FHashableUniqueStringSetKey { enum class EType : uint8 { Cell,Set,Invalid } ; union { const VUniqueStringSet* Cell ; const TSet<VUniqueString*>* Set ; } ; EType Type ;)",
    "insertText": "FHashableUniqueStringSetKey()"
  },
  {
    "label": "FHashableUniqueStringSetKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FHashableUniqueStringSetKey(const TSet<VUniqueString*>& InSet)"
  },
  {
    "label": "FHashableUniqueStringSetKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FHashableUniqueStringSetKey(const VUniqueStringSet& InCell)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FHashableUniqueStringSetKey& Other)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (} ; struct FHashableUniqueStringSetKeyFuncs : BaseKeyFuncs<TWeakBarrier<VUniqueStringSet>,TWeakBarrier<VUniqueStringSet>,false> { typedef FHashableUniqueStringSetKey KeyInitType ; typedef VUniqueStringSet& ElementInitType ; KeyInitType)",
    "insertText": "GetSetKey(ElementInitType& Element)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (KeyInitType)",
    "insertText": "GetSetKey(const TWeakBarrier<VUniqueStringSet>& Element)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(KeyInitType A, KeyInitType B)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKeyHash(KeyInitType Key)"
  },
  {
    "label": "VUniqueStringSetInternPool()",
    "kind": "Method",
    "detail": "Function (} ; class VUniqueStringSetInternPool final : FGlobalHeapCensusRoot { private :)",
    "insertText": "VUniqueStringSetInternPool()"
  },
  {
    "label": "Intern()",
    "kind": "Method",
    "detail": "Function (VUniqueStringSet&)",
    "insertText": "Intern(FAllocationContext Context, const TSet<VUniqueString*>& InSet)"
  }
]