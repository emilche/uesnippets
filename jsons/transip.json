[
  {
    "label": "from",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "from"
  },
  {
    "label": "CTransInPlaceFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceFilter"
  },
  {
    "label": "CTransInPlaceInputPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceInputPin"
  },
  {
    "label": "CTransInPlaceOutputPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceOutputPin"
  },
  {
    "label": "AM_NOVTABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AM_NOVTABLE"
  },
  {
    "label": "of",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "of"
  },
  {
    "label": "enumerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "enumerator"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "CTransInPlaceInputPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceInputPin"
  },
  {
    "label": "CTransInPlaceOutputPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceOutputPin"
  },
  {
    "label": "CTransInPlaceInputPin()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CTransInPlaceInputPin(\n        __in_opt LPCTSTR     pObjectName,\n        __inout CTransInPlaceFilter *pFilter,\n        __inout HRESULT             *phr,\n        __in_opt LPCWSTR              pName)"
  },
  {
    "label": "EnumMediaTypes()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "EnumMediaTypes( __deref_out IEnumMediaTypes **ppEnum )"
  },
  {
    "label": "CheckMediaType()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CheckMediaType(const CMediaType* pmt)"
  },
  {
    "label": "GetAllocator()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetAllocator(__deref_out IMemAllocator ** ppAllocator)"
  },
  {
    "label": "NotifyAllocator()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "NotifyAllocator(IMemAllocator * pAllocator,\n                                 BOOL bReadOnly)"
  },
  {
    "label": "GetAllocatorRequirements()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetAllocatorRequirements(__out ALLOCATOR_PROPERTIES *pProps)"
  },
  {
    "label": "CompleteConnect()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CompleteConnect(IPin *pReceivePin)"
  },
  {
    "label": "CTransInPlaceOutputPin()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CTransInPlaceOutputPin(\n        __in_opt LPCTSTR     pObjectName,\n        __inout CTransInPlaceFilter *pFilter,\n        __inout HRESULT             *phr,\n        __in_opt LPCWSTR              pName)"
  },
  {
    "label": "DecideAllocator()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "DecideAllocator(IMemInputPin * pPin, IMemAllocator ** pAlloc)"
  },
  {
    "label": "EnumMediaTypes()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "EnumMediaTypes( __deref_out IEnumMediaTypes **ppEnum )"
  },
  {
    "label": "CheckMediaType()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CheckMediaType(const CMediaType* pmt)"
  },
  {
    "label": "SetAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllocator(IMemAllocator * pAllocator)"
  },
  {
    "label": "CompleteConnect()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CompleteConnect(IPin *pReceivePin)"
  },
  {
    "label": "CTransInPlaceFilter()",
    "kind": "Method",
    "detail": "Function (UNICODE)",
    "insertText": "CTransInPlaceFilter(__in_opt LPCSTR, __inout_opt LPUNKNOWN, REFCLSID clsid, __inout HRESULT *,\n                        bool bModifiesData = true)"
  },
  {
    "label": "DecideBufferSize()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "DecideBufferSize(IMemAllocator*, __inout ALLOCATOR_PROPERTIES *)"
  },
  {
    "label": "CompleteConnect()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CompleteConnect(PIN_DIRECTION dir,IPin *pReceivePin)"
  },
  {
    "label": "Receive()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Receive(IMediaSample *pSample)"
  }
]