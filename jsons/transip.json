[
  {
    "label": "CTransInPlaceFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceFilter"
  },
  {
    "label": "CTransInPlaceInputPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceInputPin"
  },
  {
    "label": "CTransInPlaceOutputPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTransInPlaceOutputPin"
  },
  {
    "label": "AM_NOVTABLE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AM_NOVTABLE"
  },
  {
    "label": "CTransInPlaceInputPin()",
    "kind": "Method",
    "detail": "Function (# ifndef __TRANSIP__ # define __TRANSIP__ class CTransInPlaceFilter ; class CTransInPlaceInputPin : public CTransformInputPin { protected : CTransInPlaceFilter* const m_pTIPFilter ; BOOL m_bReadOnly ; public :)",
    "insertText": "CTransInPlaceInputPin(__in_opt LPCTSTR pObjectName, __inout CTransInPlaceFilter *pFilter, __inout HRESULT *phr, __in_opt LPCWSTR pName)"
  },
  {
    "label": "EnumMediaTypes()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "EnumMediaTypes(__deref_out IEnumMediaTypes **ppEnum)"
  },
  {
    "label": "CheckMediaType()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CheckMediaType(const CMediaType* pmt)"
  },
  {
    "label": "GetAllocator()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "GetAllocator(__deref_out IMemAllocator ** ppAllocator)"
  },
  {
    "label": "NotifyAllocator()",
    "kind": "Method",
    "detail": "Function (STDMETHODIMP)",
    "insertText": "NotifyAllocator(IMemAllocator * pAllocator, BOOL bReadOnly)"
  },
  {
    "label": "PeekAllocator()",
    "kind": "Method",
    "detail": "Function (__out IMemAllocator*)",
    "insertText": "PeekAllocator()"
  },
  {
    "label": "CompleteConnect()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CompleteConnect(IPin *pReceivePin)"
  },
  {
    "label": "ReadOnly()",
    "kind": "Method",
    "detail": "Function (const BOOL)",
    "insertText": "ReadOnly()"
  },
  {
    "label": "SetAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllocator(IMemAllocator * pAllocator)"
  },
  {
    "label": "ConnectedIMemInputPin()",
    "kind": "Method",
    "detail": "Function (__out_opt IMemInputPin*)",
    "insertText": "ConnectedIMemInputPin()"
  },
  {
    "label": "GetPin()",
    "kind": "Method",
    "detail": "Function (} ; class AM_NOVTABLE CTransInPlaceFilter : public CTransformFilter { public : CBasePin*)",
    "insertText": "GetPin(int n)"
  },
  {
    "label": "CTransInPlaceFilter()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CTransInPlaceFilter(__in_opt LPCTSTR, __inout_opt LPUNKNOWN, REFCLSID clsid, __inout HRESULT *, bool bModifiesData = true)"
  },
  {
    "label": "CTransInPlaceFilter()",
    "kind": "Method",
    "detail": "Function (# ifdef UNICODE)",
    "insertText": "CTransInPlaceFilter(__in_opt LPCSTR, __inout_opt LPUNKNOWN, REFCLSID clsid, __inout HRESULT *, bool bModifiesData = true)"
  },
  {
    "label": "GetMediaType()",
    "kind": "Method",
    "detail": "Function (# endif HRESULT)",
    "insertText": "GetMediaType(int iPosition, __inout CMediaType *pMediaType)"
  },
  {
    "label": "DbgBreak()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DbgBreak(\"CTransInPlaceFilter::GetMediaType should never be called\")"
  },
  {
    "label": "CheckTransform()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "CheckTransform(const CMediaType *mtIn, const CMediaType *mtOut)"
  },
  {
    "label": "Receive()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Receive(IMediaSample *pSample)"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "Transform(IMediaSample *pSample)"
  },
  {
    "label": "RegisterPerfId()",
    "kind": "Method",
    "detail": "Function (# ifdef PERF void)",
    "insertText": "RegisterPerfId()"
  },
  {
    "label": "MSR_REGISTER()",
    "kind": "Method",
    "detail": "Function (m_idTransInPlace =)",
    "insertText": "MSR_REGISTER(TEXT(\"TransInPlace\"))"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (} # endif protected : __out_opt IMediaSample*)",
    "insertText": "Copy(IMediaSample *pSource)"
  },
  {
    "label": "InputPin()",
    "kind": "Method",
    "detail": "Function (# ifdef PERF int m_idTransInPlace ; # endif bool m_bModifiesData ; class CTransInPlaceInputPin ; class CTransInPlaceOutputPin ; __out CTransInPlaceInputPin*)",
    "insertText": "InputPin()"
  },
  {
    "label": "OutputPin()",
    "kind": "Method",
    "detail": "Function (} ; __out CTransInPlaceOutputPin*)",
    "insertText": "OutputPin()"
  },
  {
    "label": "TypesMatch()",
    "kind": "Method",
    "detail": "Function (} ; BOOL)",
    "insertText": "TypesMatch()"
  },
  {
    "label": "UsingDifferentAllocators()",
    "kind": "Method",
    "detail": "Function (} BOOL)",
    "insertText": "UsingDifferentAllocators()"
  }
]