[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FResolveParameterHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResolveParameterHeader"
  },
  {
    "label": "FResolveParameterBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResolveParameterBuffer"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "Resolve()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Math / UnrealMathUtility . h \" # include \" UniversalObjectLocatorFwd . h \" # include \" UniversalObjectLocatorParameterTypeHandle . h \" class UObject ; namespace UE::UniversalObjectLocator { struct FResolveParameterHeader { uint16 ParameterOffset = 0 ; uint8 Sizeof = 0 ; uint8 Alignment = 0 ; void*)",
    "insertText": "Resolve(void* InMemory)"
  },
  {
    "label": "FResolveParameterBuffer()",
    "kind": "Method",
    "detail": "Function (} } ; struct FResolveParameterBuffer {)",
    "insertText": "FResolveParameterBuffer()"
  },
  {
    "label": "FResolveParameterBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveParameterBuffer(const FResolveParameterBuffer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FResolveParameterBuffer&)",
    "insertText": "operator(const FResolveParameterBuffer&)"
  },
  {
    "label": "FResolveParameterBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResolveParameterBuffer(FResolveParameterBuffer&& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FResolveParameterBuffer&)",
    "insertText": "operator(FResolveParameterBuffer&& RHS)"
  },
  {
    "label": "FindParameter()",
    "kind": "Method",
    "detail": "Function (public : template<T> const T*)",
    "insertText": "FindParameter()"
  },
  {
    "label": "FindParameter()",
    "kind": "Method",
    "detail": "Function (template<T> const T*)",
    "insertText": "FindParameter(TParameterTypeHandle<T> ParameterTypeHandle)"
  },
  {
    "label": "AddParameter()",
    "kind": "Method",
    "detail": "Function (template<T,. . . ArgTypes> T*)",
    "insertText": "AddParameter(TParameterTypeHandle<T> ParameterTypeHandle, ArgTypes&&... InArgs)"
  },
  {
    "label": "HasParameter()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "HasParameter(uint32 ParameterBit)"
  },
  {
    "label": "FindParameterImpl()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "FindParameterImpl(uint32 ParameterBit)"
  },
  {
    "label": "AddParameterImpl()",
    "kind": "Method",
    "detail": "Function (template<ParameterType,. . . ArgTypes> ParameterType*)",
    "insertText": "AddParameterImpl(uint32 ParameterBit, ArgTypes&&... InArgs)"
  },
  {
    "label": "GetHeader()",
    "kind": "Method",
    "detail": "Function (const FResolveParameterHeader&)",
    "insertText": "GetHeader(uint8 Index)"
  },
  {
    "label": "GetParameterIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetParameterIndex(uint32 ParameterBit)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (protected : uint8* Memory = nullptr ; uint32 AllParameters = 0 u ; uint16 Capacity = 0 u ; uint8 Num = 0 u ; bool bCanFreeMemory = false ; public : int32 MaxNumParameters =)",
    "insertText": "sizeof(AllParameters)"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (} ; template<int InlineByteSize> struct)",
    "insertText": "alignas(8)"
  },
  {
    "label": "TInlineResolveParameterBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TInlineResolveParameterBuffer()"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (const uint8 ParameterIndex = ParameterTypeHandle .)",
    "insertText": "GetIndex()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const uint32 ParameterBit = 1<<ParameterIndex ; return static_cast<const)",
    "insertText": "T(FindParameterImpl(ParameterBit))"
  },
  {
    "label": "GetParameterIndex()",
    "kind": "Method",
    "detail": "Function (const int32 Index =)",
    "insertText": "GetParameterIndex(ParameterBit)"
  }
]