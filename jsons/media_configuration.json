[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ScrollingParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScrollingParams"
  },
  {
    "label": "ScreenShareConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScreenShareConfig"
  },
  {
    "label": "VideoSimulcastConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoSimulcastConfig"
  },
  {
    "label": "EmulatedSFUConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EmulatedSFUConfig"
  },
  {
    "label": "VideoResolution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoResolution"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "VideoDumpOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoDumpOptions"
  },
  {
    "label": "VideoConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoConfig"
  },
  {
    "label": "AudioConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AudioConfig"
  },
  {
    "label": "Mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Mode"
  },
  {
    "label": "VideoCodecConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoCodecConfig"
  },
  {
    "label": "VideoSubscription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoSubscription"
  },
  {
    "label": "EchoEmulationConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EchoEmulationConfig"
  },
  {
    "label": "ScreenShareConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ScreenShareConfig(TimeDelta slide_change_interval)"
  },
  {
    "label": "VideoSimulcastConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "VideoSimulcastConfig(int simulcast_streams_count)"
  },
  {
    "label": "EmulatedSFUConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "EmulatedSFUConfig(int target_layer_index)"
  },
  {
    "label": "VideoResolution()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "VideoResolution(Spec spec = Spec::kNone)"
  },
  {
    "label": "Y4mVideoFrameWriterFactory()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<test::VideoFrameWriter>)",
    "insertText": "Y4mVideoFrameWriterFactory(\n      absl::string_view file_name_prefix,\n      const VideoResolution& resolution)"
  },
  {
    "label": "VideoConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "VideoConfig(const VideoResolution& resolution)"
  },
  {
    "label": "VideoResolution()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VideoResolution(width, height, fps)"
  },
  {
    "label": "AudioConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "AudioConfig(std::string stream_label)"
  },
  {
    "label": "VideoCodecConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "VideoCodecConfig(std::string name)"
  },
  {
    "label": "GetMaxResolution()",
    "kind": "Method",
    "detail": "Function (absl::optional<VideoResolution>)",
    "insertText": "GetMaxResolution(\n      rtc::ArrayView<const VideoConfig> video_configs)"
  },
  {
    "label": "GetMaxResolution()",
    "kind": "Method",
    "detail": "Function (absl::optional<VideoResolution>)",
    "insertText": "GetMaxResolution(\n      rtc::ArrayView<const VideoResolution> resolutions)"
  }
]