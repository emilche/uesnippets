[
  {
    "label": "then",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "then"
  },
  {
    "label": "PeerConnectionWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PeerConnectionWrapper"
  },
  {
    "label": "CreateOffer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateOffer(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options,\n      std::string* error_out = nullptr)"
  },
  {
    "label": "CreateOffer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateOffer()"
  },
  {
    "label": "CreateOfferAndSetAsLocal()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateOfferAndSetAsLocal(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options)"
  },
  {
    "label": "CreateOfferAndSetAsLocal()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateOfferAndSetAsLocal()"
  },
  {
    "label": "CreateAnswer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateAnswer(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options,\n      std::string* error_out = nullptr)"
  },
  {
    "label": "CreateAnswer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateAnswer()"
  },
  {
    "label": "CreateAnswerAndSetAsLocal()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateAnswerAndSetAsLocal(\n      const PeerConnectionInterface::RTCOfferAnswerOptions& options)"
  },
  {
    "label": "CreateAnswerAndSetAsLocal()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateAnswerAndSetAsLocal()"
  },
  {
    "label": "CreateRollback()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CreateRollback()"
  },
  {
    "label": "SetLocalDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetLocalDescription(std::unique_ptr<SessionDescriptionInterface> desc,\n                           std::string* error_out = nullptr)"
  },
  {
    "label": "SetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRemoteDescription(std::unique_ptr<SessionDescriptionInterface> desc,\n                            std::string* error_out = nullptr)"
  },
  {
    "label": "SetRemoteDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRemoteDescription(std::unique_ptr<SessionDescriptionInterface> desc,\n                            RTCError* error_out)"
  },
  {
    "label": "ExchangeOfferAnswerWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExchangeOfferAnswerWith(PeerConnectionWrapper* answerer)"
  },
  {
    "label": "ExchangeOfferAnswerWith()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExchangeOfferAnswerWith(\n      PeerConnectionWrapper* answerer,\n      const PeerConnectionInterface::RTCOfferAnswerOptions& offer_options,\n      const PeerConnectionInterface::RTCOfferAnswerOptions& answer_options)"
  },
  {
    "label": "AddTransceiver()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpTransceiverInterface>)",
    "insertText": "AddTransceiver(\n      cricket::MediaType media_type)"
  },
  {
    "label": "AddTransceiver()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpTransceiverInterface>)",
    "insertText": "AddTransceiver(\n      cricket::MediaType media_type,\n      const RtpTransceiverInit& init)"
  },
  {
    "label": "AddTransceiver()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpTransceiverInterface>)",
    "insertText": "AddTransceiver(\n      rtc::scoped_refptr<MediaStreamTrackInterface> track)"
  },
  {
    "label": "AddTransceiver()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpTransceiverInterface>)",
    "insertText": "AddTransceiver(\n      rtc::scoped_refptr<MediaStreamTrackInterface> track,\n      const RtpTransceiverInit& init)"
  },
  {
    "label": "CreateAudioTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<AudioTrackInterface>)",
    "insertText": "CreateAudioTrack(\n      const std::string& label)"
  },
  {
    "label": "CreateVideoTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoTrackInterface>)",
    "insertText": "CreateVideoTrack(\n      const std::string& label)"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpSenderInterface>)",
    "insertText": "AddTrack(\n      rtc::scoped_refptr<MediaStreamTrackInterface> track,\n      const std::vector<std::string>& stream_ids = {})"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpSenderInterface>)",
    "insertText": "AddTrack(\n      rtc::scoped_refptr<MediaStreamTrackInterface> track,\n      const std::vector<std::string>& stream_ids,\n      const std::vector<RtpEncodingParameters>& init_send_encodings)"
  },
  {
    "label": "AddAudioTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpSenderInterface>)",
    "insertText": "AddAudioTrack(\n      const std::string& track_label,\n      const std::vector<std::string>& stream_ids = {})"
  },
  {
    "label": "AddVideoTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RtpSenderInterface>)",
    "insertText": "AddVideoTrack(\n      const std::string& track_label,\n      const std::vector<std::string>& stream_ids = {})"
  },
  {
    "label": "CreateDataChannel()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DataChannelInterface>)",
    "insertText": "CreateDataChannel(\n      const std::string& label)"
  },
  {
    "label": "signaling_state()",
    "kind": "Method",
    "detail": "Function (PeerConnectionInterface::SignalingState)",
    "insertText": "signaling_state()"
  },
  {
    "label": "IsIceGatheringDone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIceGatheringDone()"
  },
  {
    "label": "IsIceConnected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIceConnected()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (RTCStatsReport>)",
    "insertText": "GetStats()"
  }
]