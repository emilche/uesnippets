[
  {
    "label": "FBandwidthTestItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBandwidthTestItem"
  },
  {
    "label": "FBandwidthTestGenerator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBandwidthTestGenerator"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "ABandwidthTestActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABandwidthTestActor"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameFramework / Actor . h \" # include \" BandwidthTestActor . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() bool NetDeltaSerialize(FNetDeltaSerializeInfo & DeltaParms)"
  },
  {
    "label": "FillBufferForSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillBufferForSize(int32 SizeInKilobytes)"
  },
  {
    "label": "OnSpikePeriod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSpikePeriod()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ABandwidthTestActor()"
  },
  {
    "label": "StartGeneratingBandwidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartGeneratingBandwidth(float BandwidthInKilobytesPerSec)"
  },
  {
    "label": "StopGeneratingBandwidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopGeneratingBandwidth()"
  },
  {
    "label": "StartBandwidthSpike()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartBandwidthSpike(float SpikeInKilobytes, int32 PeriodInMS)"
  }
]