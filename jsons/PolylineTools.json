[
  {
    "label": "FPolylineBBox",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPolylineBBox"
  },
  {
    "label": "PointType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointType"
  },
  {
    "label": "PointType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointType"
  },
  {
    "label": "TPolylineApproximator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPolylineApproximator"
  },
  {
    "label": "CurvePointType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CurvePointType"
  },
  {
    "label": "CurvePointType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CurvePointType"
  },
  {
    "label": "PointOnSegment()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PointOnSegment(Array[Index], Array[Index + 1], Coordinate)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(ElementLength)"
  },
  {
    "label": "Finder()",
    "kind": "Method",
    "detail": "Function (FDichotomyFinder)",
    "insertText": "Finder(PolylineCoordinates)"
  },
  {
    "label": "Finder()",
    "kind": "Method",
    "detail": "Function (FDichotomyFinder)",
    "insertText": "Finder(PolylineCoordinates)"
  },
  {
    "label": "ComputePoint()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ComputePoint(Index, InCoordinate)"
  },
  {
    "label": "Finder()",
    "kind": "Method",
    "detail": "Function (FDichotomyFinder)",
    "insertText": "Finder(PolylineCoordinates)"
  },
  {
    "label": "DichotomyFinder()",
    "kind": "Method",
    "detail": "Function (FDichotomyFinder)",
    "insertText": "DichotomyFinder(PolylineCoordinates)"
  },
  {
    "label": "LinearFinder()",
    "kind": "Method",
    "detail": "Function (FLinearFinder)",
    "insertText": "LinearFinder(PolylineCoordinates, StartIndex)"
  },
  {
    "label": "DichotomyFinder()",
    "kind": "Method",
    "detail": "Function (FDichotomyFinder)",
    "insertText": "DichotomyFinder(PolylineCoordinates)"
  },
  {
    "label": "LinearFinder()",
    "kind": "Method",
    "detail": "Function (FLinearFinder)",
    "insertText": "LinearFinder(PolylineCoordinates, StartIndex)"
  },
  {
    "label": "ComputeLengthOfSubPolyline()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ComputeLengthOfSubPolyline(BoundaryIndices, InBoundary)"
  }
]