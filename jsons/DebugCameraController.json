[
  {
    "label": "ASpectatorPawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASpectatorPawn"
  },
  {
    "label": "ADebugCameraController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADebugCameraController"
  },
  {
    "label": "UDrawFrustumComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDrawFrustumComponent"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPlayer"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / HitResult . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" FinalPostProcessSettings . h \" # include \" SceneTypes . h \" # include \" GameFramework / PlayerController . h \" # include \" DebugCameraController . generated . h \" class ASpectatorPawn ;)",
    "insertText": "UCLASS(config=Game, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(globalconfig)"
  },
  {
    "label": "SelectTargetedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectTargetedObject()"
  },
  {
    "label": "Unselect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unselect()"
  },
  {
    "label": "IncreaseCameraSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncreaseCameraSpeed()"
  },
  {
    "label": "DecreaseCameraSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecreaseCameraSpeed()"
  },
  {
    "label": "IncreaseFOV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncreaseFOV()"
  },
  {
    "label": "DecreaseFOV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecreaseFOV()"
  },
  {
    "label": "SetDisplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplay(bool bEnabled)"
  },
  {
    "label": "IsDisplayEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisplayEnabled()"
  },
  {
    "label": "ToggleFreezeRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleFreezeRendering()"
  },
  {
    "label": "PreProcessInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreProcessInput(const float DeltaTime, const bool bGamePaused)"
  },
  {
    "label": "UpdateRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRotation(float DeltaTime)"
  },
  {
    "label": "PreProcessInputForOrbit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreProcessInputForOrbit(const float DeltaTime, const bool bGamePaused)"
  },
  {
    "label": "UpdateRotationForOrbit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRotationForOrbit(float DeltaTime)"
  },
  {
    "label": "GetPivotForOrbit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPivotForOrbit(FVector& PivotLocation)"
  },
  {
    "label": "ToggleOrbit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleOrbit(bool bOrbitCenter)"
  },
  {
    "label": "ToggleOrbitCenter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleOrbitCenter()"
  },
  {
    "label": "ToggleOrbitHitPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleOrbitHitPoint()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST) static ENGINE_API bool EnableDebugBuffers()"
  },
  {
    "label": "EnableDebugViewmodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableDebugViewmodes()"
  },
  {
    "label": "CycleViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CycleViewMode()"
  },
  {
    "label": "ToggleBufferVisualizationOverviewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleBufferVisualizationOverviewMode()"
  },
  {
    "label": "BufferVisualizationMoveUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferVisualizationMoveUp()"
  },
  {
    "label": "BufferVisualizationMoveDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferVisualizationMoveDown()"
  },
  {
    "label": "BufferVisualizationMoveRight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferVisualizationMoveRight()"
  },
  {
    "label": "BufferVisualizationMoveLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferVisualizationMoveLeft()"
  },
  {
    "label": "ConsumeAxisMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumeAxisMotion(float Val)"
  },
  {
    "label": "ToggleBufferVisualizationFullMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleBufferVisualizationFullMode()"
  },
  {
    "label": "SetBufferVisualizationFullMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferVisualizationFullMode(bool bFullMode)"
  },
  {
    "label": "UpdateVisualizeBufferPostProcessing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisualizeBufferPostProcessing(FFinalPostProcessSettings& InOutPostProcessingSettings)"
  },
  {
    "label": "GetBufferMaterialName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBufferMaterialName(const FString& InBuffer)"
  },
  {
    "label": "GetSelectedBufferMaterialName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSelectedBufferMaterialName()"
  },
  {
    "label": "ApplySpeedScale()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ApplySpeedScale()"
  },
  {
    "label": "SetupInputComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupInputComponent()"
  },
  {
    "label": "SetupBufferVisualizationOverviewInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupBufferVisualizationOverviewInput()"
  },
  {
    "label": "OnActivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActivate(class APlayerController* OriginalPC)"
  },
  {
    "label": "OnDeactivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeactivate(class APlayerController* RestoredPC)"
  },
  {
    "label": "UpdateHiddenComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHiddenComponents(const FVector& ViewLocation,TSet<FPrimitiveComponentId>& HiddenComponents)"
  },
  {
    "label": "PostInitializeComponents()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "PostInitializeComponents()"
  },
  {
    "label": "ConsoleCommand()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConsoleCommand(const FString& Command, bool bWriteToLog = true)"
  },
  {
    "label": "AddCheats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCheats(bool bForce)"
  },
  {
    "label": "EndSpectatingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndSpectatingState()"
  },
  {
    "label": "SpawnSpectatorPawn()",
    "kind": "Method",
    "detail": "Function (ASpectatorPawn*)",
    "insertText": "SpawnSpectatorPawn()"
  },
  {
    "label": "Select()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Select(FHitResult const& Hit)"
  },
  {
    "label": "SetSpectatorPawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSpectatorPawn(class ASpectatorPawn* NewSpectatorPawn)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (#)",
    "insertText": "if(UE_BUILD_SHIPPING || UE_BUILD_TEST) ENGINE_API TArray<FString> GetBufferVisualizationOverviewTargets()"
  },
  {
    "label": "GetNextBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNextBuffer(const TArray<FString>& OverviewBuffers, int32 Step = 1)"
  },
  {
    "label": "GetNextBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNextBuffer(int32 Step = 1)"
  },
  {
    "label": "OnTouchBegin()",
    "kind": "Method",
    "detail": "Function (# endif private : FVector2D LastTouchDragLocation ; FVector LastOrbitPawnLocation ; FVector OrbitPivot ; float OrbitRadius ; int32 LastViewModeSettingsIndex ; FString CurrSelectedBuffer ; void)",
    "insertText": "OnTouchBegin(ETouchIndex::Type FingerIndex, FVector Location)"
  },
  {
    "label": "OnTouchEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTouchEnd(ETouchIndex::Type FingerIndex, FVector Location)"
  },
  {
    "label": "OnFingerMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFingerMove(ETouchIndex::Type FingerIndex, FVector Location)"
  }
]