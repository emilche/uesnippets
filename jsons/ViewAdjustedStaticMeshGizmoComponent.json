[
  {
    "label": "UGizmoViewContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoViewContext"
  },
  {
    "label": "IViewBasedTransformAdjuster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IViewBasedTransformAdjuster"
  },
  {
    "label": "INTERACTIVETOOLSFRAMEWORK_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INTERACTIVETOOLSFRAMEWORK_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / StaticMeshComponent . h \" # include \" BaseGizmos / GizmoBaseComponent . h \" # include \" ViewAdjustedStaticMeshGizmoComponent . generated . h \" class UGizmoViewContext ; namespace UE::GizmoRenderingUtil { class IViewBasedTransformAdjuster ; })",
    "insertText": "UCLASS(Blueprintable, BlueprintType, ClassGroup = Gizmos, meta = (BlueprintSpawnableComponent))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: void SetGizmoViewContext(UGizmoViewContext* GizmoViewContextIn)"
  },
  {
    "label": "SetTransformAdjuster()",
    "kind": "Method",
    "detail": "Function (GizmoViewContext = GizmoViewContextIn ; } void)",
    "insertText": "SetTransformAdjuster(TSharedPtr<UE::GizmoRenderingUtil::IViewBasedTransformAdjuster> Adjuster)"
  },
  {
    "label": "GetTransformAdjuster()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<UE::GizmoRenderingUtil::IViewBasedTransformAdjuster>)",
    "insertText": "GetTransformAdjuster()"
  },
  {
    "label": "SetHoverOverrideMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoverOverrideMaterial(UMaterialInterface* Material)"
  },
  {
    "label": "GetHoverOverrideMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetHoverOverrideMaterial()"
  },
  {
    "label": "IsHiddenByInteraction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHiddenByInteraction()"
  },
  {
    "label": "UpdateWorldLocalState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWorldLocalState(bool bWorldIn)"
  },
  {
    "label": "UpdateInteractingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInteractingState(bool bInteracting)"
  },
  {
    "label": "GetMaterialRelevance()",
    "kind": "Method",
    "detail": "Function (FMaterialRelevance)",
    "insertText": "GetMaterialRelevance(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "LineTraceComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LineTraceComponent(FHitResult& OutHit, const FVector Start, const FVector End, const FCollisionQueryParams& Params)"
  },
  {
    "label": "IsHLODRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHLODRelevant()"
  }
]