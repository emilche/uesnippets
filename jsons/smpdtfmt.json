[
  {
    "label": "doc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "doc"
  },
  {
    "label": "DateFormatSymbols",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateFormatSymbols"
  },
  {
    "label": "DateFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateFormat"
  },
  {
    "label": "MessageFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessageFormat"
  },
  {
    "label": "FieldPositionHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FieldPositionHandler"
  },
  {
    "label": "TimeZoneFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TimeZoneFormat"
  },
  {
    "label": "SharedNumberFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedNumberFormat"
  },
  {
    "label": "SimpleDateFormatMutableNFs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleDateFormatMutableNFs"
  },
  {
    "label": "DateIntervalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalFormat"
  },
  {
    "label": "LocalizedNumberFormatter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalizedNumberFormatter"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "documentation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "documentation"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "method",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "method"
  },
  {
    "label": "DateFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateFormat"
  },
  {
    "label": "DateIntervalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DateIntervalFormat"
  },
  {
    "label": "NSOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NSOverride"
  },
  {
    "label": "NumberFormatterKey",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NumberFormatterKey"
  },
  {
    "label": "locale()",
    "kind": "Method",
    "detail": "Function (the)",
    "insertText": "locale(h or K)"
  },
  {
    "label": "locale()",
    "kind": "Method",
    "detail": "Function (the)",
    "insertText": "locale(H or k)"
  },
  {
    "label": "SimpleTimeZone()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "SimpleTimeZone(-8 * 60 * 60 * 1000, \"PST\")"
  },
  {
    "label": "SimpleDateFormat()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "SimpleDateFormat(\"yyyy.MM.dd G 'at' hh:mm:ss a zzz\", success )"
  },
  {
    "label": "cal()",
    "kind": "Method",
    "detail": "Function (GregorianCalendar)",
    "insertText": "cal(success)"
  },
  {
    "label": "fp()",
    "kind": "Method",
    "detail": "Function (FieldPosition)",
    "insertText": "fp(FieldPosition::DONT_CARE)"
  },
  {
    "label": "pp()",
    "kind": "Method",
    "detail": "Function (ParsePosition)",
    "insertText": "pp(0)"
  },
  {
    "label": "set2DigitYearStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set2DigitYearStart(UDate d, UErrorCode& status)"
  },
  {
    "label": "applyPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyPattern(const UnicodeString& pattern)"
  },
  {
    "label": "applyLocalizedPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyLocalizedPattern(const UnicodeString& pattern,\n                                       UErrorCode& status)"
  },
  {
    "label": "adoptDateFormatSymbols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptDateFormatSymbols(DateFormatSymbols* newFormatSymbols)"
  },
  {
    "label": "setDateFormatSymbols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDateFormatSymbols(const DateFormatSymbols& newFormatSymbols)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "adoptCalendar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptCalendar(Calendar* calendarToAdopt)"
  },
  {
    "label": "adoptTimeZoneFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptTimeZoneFormat(TimeZoneFormat* timeZoneFormatToAdopt)"
  },
  {
    "label": "setTimeZoneFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTimeZoneFormat(const TimeZoneFormat& newTimeZoneFormat)"
  },
  {
    "label": "setContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setContext(UDisplayContext value, UErrorCode& status)"
  },
  {
    "label": "adoptNumberFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptNumberFormat(NumberFormat *formatToAdopt)"
  },
  {
    "label": "adoptNumberFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptNumberFormat(const UnicodeString& fields, NumberFormat *formatToAdopt, UErrorCode &status)"
  },
  {
    "label": "isFieldUnitIgnored()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isFieldUnitIgnored(const UnicodeString& pattern,\n                                    UCalendarDateFields field)"
  },
  {
    "label": "initializeDefaultCentury()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDefaultCentury(void)"
  },
  {
    "label": "initializeBooleanAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeBooleanAttributes(void)"
  },
  {
    "label": "isNumeric()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isNumeric(char16_t formatChar, int32_t count)"
  },
  {
    "label": "isAtNumericField()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isAtNumericField(const UnicodeString &pattern, int32_t patternOffset)"
  },
  {
    "label": "isAfterNonNumericField()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isAfterNonNumericField(const UnicodeString &pattern, int32_t patternOffset)"
  },
  {
    "label": "construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "construct(EStyle timeStyle, EStyle dateStyle, const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initialize(const Locale& locale, UErrorCode& status)"
  },
  {
    "label": "matchLiterals()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "matchLiterals(const UnicodeString &pattern, int32_t &patternOffset,\n                               const UnicodeString &text, int32_t &textOffset,\n                               UBool whitespaceLenient, UBool partialMatchLenient, UBool oldLeniency)"
  },
  {
    "label": "translatePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "translatePattern(const UnicodeString& originalPattern,\n                                UnicodeString& translatedPattern,\n                                const UnicodeString& from,\n                                const UnicodeString& to,\n                                UErrorCode& status)"
  },
  {
    "label": "parseAmbiguousDatesAsAfter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parseAmbiguousDatesAsAfter(UDate startDate, UErrorCode& status)"
  },
  {
    "label": "initFastNumberFormatters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initFastNumberFormatters(UErrorCode& status)"
  },
  {
    "label": "freeFastNumberFormatters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "freeFastNumberFormatters()"
  },
  {
    "label": "initNumberFormatters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initNumberFormatters(const Locale &locale,UErrorCode &status)"
  },
  {
    "label": "processOverrideString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "processOverrideString(const Locale &locale, const UnicodeString &str, int8_t type, UErrorCode &status)"
  },
  {
    "label": "getLevelFromChar()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getLevelFromChar(char16_t ch)"
  },
  {
    "label": "isSyntaxChar()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isSyntaxChar(char16_t ch)"
  },
  {
    "label": "parsePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parsePattern()"
  },
  {
    "label": "free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "free()"
  }
]