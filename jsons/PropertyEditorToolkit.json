[
  {
    "label": "IPropertyTreeRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTreeRow"
  },
  {
    "label": "FPropertyEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditorToolkit"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "SPropertyTreeViewImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyTreeViewImpl"
  },
  {
    "label": "IPropertyTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTable"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FPropertyEditorToolkit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" Layout / Visibility . h \" # include \" Animation / CurveSequence . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" PropertyPath . h \" # include \" Toolkits / IToolkitHost . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" IPropertyTable . h \" # include \" SPropertyTreeViewImpl . h \" class IPropertyTreeRow ; class FPropertyEditorToolkit : public FAssetEditorToolkit { public :)",
    "insertText": "FPropertyEditorToolkit()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "IncludeAssetInRestoreOpenAssetsPrompt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncludeAssetInRestoreOpenAssetsPrompt(UObject* Asset)"
  },
  {
    "label": "ToggleColumnForProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleColumnForProperty(const TSharedPtr< class FPropertyPath >& PropertyPath)"
  },
  {
    "label": "TableHasCustomColumns()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TableHasCustomColumns()"
  },
  {
    "label": "IsPrimaryEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrimaryEditor()"
  },
  {
    "label": "CreateEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPropertyEditorToolkit>)",
    "insertText": "CreateEditor(const EToolkitMode::Type Mode, const TSharedPtr< IToolkitHost >& InitToolkitHost, const TArray<UObject*>& ObjectsToEdit)"
  },
  {
    "label": "IsFindInContentBrowserButtonVisible()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "IsFindInContentBrowserButtonVisible()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, const TArray<UObject*>& ObjectsToEdit)"
  },
  {
    "label": "CreatePropertyTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePropertyTree()"
  },
  {
    "label": "CreatePropertyTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePropertyTable()"
  },
  {
    "label": "CreateGridView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGridView()"
  },
  {
    "label": "CreateDetailsPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDetailsPanel()"
  },
  {
    "label": "SpawnTab_PropertyTree()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_PropertyTree(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_PropertyTable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_PropertyTable(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_DetailsPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_DetailsPanel(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GridSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GridSelectionChanged()"
  },
  {
    "label": "GridRootPathChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GridRootPathChanged()"
  },
  {
    "label": "ConstructTreeColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructTreeColumns(const TSharedRef< class SHeaderRow >& HeaderRow)"
  },
  {
    "label": "ConstructTreeCell()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructTreeCell(const FName& ColumnName, const TSharedRef< class IPropertyTreeRow >& Row)"
  },
  {
    "label": "OnToggleColumnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleColumnClicked(const TWeakPtr< class IPropertyTreeRow > Row)"
  },
  {
    "label": "GetToggleColumnButtonImageBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetToggleColumnButtonImageBrush(const TWeakPtr< class IPropertyTreeRow > Row)"
  },
  {
    "label": "GetToggleColumnButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetToggleColumnButtonVisibility(const TSharedRef< class IPropertyTreeRow > Row)"
  },
  {
    "label": "TableColumnsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TableColumnsChanged()"
  }
]