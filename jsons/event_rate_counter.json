[
  {
    "label": "EventRateCounter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EventRateCounter"
  },
  {
    "label": "AddEvent()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_NUMERICS_EVENT_RATE_COUNTER_H_ # define RTC_BASE_NUMERICS_EVENT_RATE_COUNTER_H_ # include \" rtc_base / numerics / sample_stats . h \" namespace webrtc { class EventRateCounter { public : void)",
    "insertText": "AddEvent(Timestamp event_time)"
  },
  {
    "label": "AddEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEvents(EventRateCounter other)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "interval()",
    "kind": "Method",
    "detail": "Function (SampleStats<TimeDelta>&)",
    "insertText": "interval()"
  },
  {
    "label": "Count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Count()"
  },
  {
    "label": "MinusInfinity()",
    "kind": "Method",
    "detail": "Function (Timestamp last_time_ =)",
    "insertText": "MinusInfinity()"
  }
]