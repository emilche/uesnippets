[
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UAnimCompress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCompress"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FAnimStreamableChunk",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimStreamableChunk"
  },
  {
    "label": "FStreamableAnimPlatformData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamableAnimPlatformData"
  },
  {
    "label": "UAnimStreamable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStreamable"
  },
  {
    "label": "UAnimStreamable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStreamable"
  },
  {
    "label": "FRawAnimSequenceTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawAnimSequenceTrack"
  },
  {
    "label": "FTrackToSkeletonMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTrackToSkeletonMap"
  },
  {
    "label": "UAnimBoneCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBoneCompressionSettings"
  },
  {
    "label": "UAnimCurveCompressionSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionSettings"
  },
  {
    "label": "UVariableFrameStrippingSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVariableFrameStrippingSettings"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UAnimStreamable* Owner, int32 ChunkIndex)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, class UAnimStreamable* Owner)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (WITH_EDITOR)",
    "insertText": "check(RunningAnimPlatformData)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (WITH_EDITOR)",
    "insertText": "check(RunningAnimPlatformData)"
  },
  {
    "label": "InitFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFrom(const UAnimSequence* InSourceSequence)"
  },
  {
    "label": "RequestCompressedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestCompressedData(const  ITargetPlatform* Platform=nullptr)"
  },
  {
    "label": "UpdateRawData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRawData()"
  },
  {
    "label": "RequestCompressedDataForChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestCompressedDataForChunk(const FString& ChunkDDCKey, FAnimStreamableChunk& Chunk, const int32 ChunkIndex, const uint32 FrameStart, const uint32 FrameEnd, TSharedRef<FAnimCompressContext> CompressContext, const ITargetPlatform* TargetPlatform)"
  }
]