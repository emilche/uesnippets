[
  {
    "label": "FLateReflectionsPlateOutputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLateReflectionsPlateOutputs"
  },
  {
    "label": "FLateReflectionsPlateDelays",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLateReflectionsPlateDelays"
  },
  {
    "label": "FLateReflectionsPlate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLateReflectionsPlate"
  },
  {
    "label": "FLateReflectionsFastSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLateReflectionsFastSettings"
  },
  {
    "label": "FLateReflectionsFast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLateReflectionsFast"
  },
  {
    "label": "ResizeAndZero()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / BufferVectorOperations . h \" # include \" DSP / IntegerDelay . h \" # include \" DSP / LongDelayAPF . h \" # include \" DSP / BufferOnePoleLPF . h \" # include \" DSP / DynamicDelayAPF . h \" namespace Audio { struct FLateReflectionsPlateOutputs { const int32 NumTaps = 7 ; FAlignedFloatBuffer Taps [ NumTaps ] ; FAlignedFloatBuffer Output ; void)",
    "insertText": "ResizeAndZero(int32 InNumSamples)"
  },
  {
    "label": "DefaultLeftDelays()",
    "kind": "Method",
    "detail": "Function (} ; struct FLateReflectionsPlateDelays { int32 NumSamplesModulatedBase ; int32 NumSamplesModulatedDelta ; int32 NumSamplesDelayA ; int32 NumSamplesDelayB ; int32 NumSamplesDelayC ; int32 NumSamplesDelayD ; int32 NumSamplesAPF ; int32 NumSamplesDelayE ; int32 NumSamplesDelayF ; int32 NumSamplesDelayG ; int32 NumSamplesDelayH ; int32 NumSamplesDelayI ; FLateReflectionsPlateDelays)",
    "insertText": "DefaultLeftDelays(float InSampleRate)"
  },
  {
    "label": "DefaultRightDelays()",
    "kind": "Method",
    "detail": "Function (FLateReflectionsPlateDelays)",
    "insertText": "DefaultRightDelays(float InSampleRate)"
  },
  {
    "label": "FLateReflectionsPlate()",
    "kind": "Method",
    "detail": "Function (} ; class FLateReflectionsPlate { public :)",
    "insertText": "FLateReflectionsPlate(float InSampleRate, int32 InMaxNumInternalBufferSamples, const FLateReflectionsPlateDelays& InDelays)"
  },
  {
    "label": "FLateReflectionsPlate()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLateReflectionsPlate()"
  },
  {
    "label": "ProcessAudioFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioFrames(const FAlignedFloatBuffer& InSamples, const FAlignedFloatBuffer& InFeedbackSamples, const FAlignedFloatBuffer& InDelayModulations, FLateReflectionsPlateOutputs& OutPlateSamples)"
  },
  {
    "label": "FlushAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAudio()"
  },
  {
    "label": "SetDensity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDensity(float InDensity)"
  },
  {
    "label": "SetDampening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDampening(float InDampening)"
  },
  {
    "label": "SetDecay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDecay(float InDecay)"
  },
  {
    "label": "GetNumInternalBufferSamples()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumInternalBufferSamples()"
  },
  {
    "label": "PeekDelayLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PeekDelayLine(int32 InNum, FAlignedFloatBuffer& OutSamples)"
  },
  {
    "label": "FLateReflectionsFastSettings()",
    "kind": "Method",
    "detail": "Function (protected : float SampleRate ; int32 NumInternalBufferSamples ; float Dampening ; float Decay ; float Density ; FLateReflectionsPlateDelays PlateDelays ; const int32 PresetSampleRate = 2 9 7 6 1 ; TUniquePtr<FDynamicDelayAPF> ModulatedAPF ; TUniquePtr<FIntegerDelay> DelayA ; TUniquePtr<FIntegerDelay> DelayB ; TUniquePtr<FIntegerDelay> DelayC ; TUniquePtr<FIntegerDelay> DelayD ; TUniquePtr<FBufferOnePoleLPF> LPF ; TUniquePtr<FLongDelayAPF> APF ; TUniquePtr<FIntegerDelay> DelayE ; TUniquePtr<FIntegerDelay> DelayF ; TUniquePtr<FIntegerDelay> DelayG ; TUniquePtr<FIntegerDelay> DelayH ; TUniquePtr<FIntegerDelay> DelayI ; Audio::FAlignedFloatBuffer WorkBufferA ; Audio::FAlignedFloatBuffer WorkBufferB ; Audio::FAlignedFloatBuffer WorkBufferC ; } ; struct FLateReflectionsFastSettings { float LateDelayMsec ; float LateGainDB ; float Bandwidth ; float Diffusion ; float Dampening ; float Decay ; float Density ;)",
    "insertText": "FLateReflectionsFastSettings()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FLateReflectionsFastSettings& Other)"
  },
  {
    "label": "FLateReflectionsFast()",
    "kind": "Method",
    "detail": "Function (} ; class FLateReflectionsFast { public : const float MaxLateDelayMsec ; const float MinLateDelayMsec ; const float MaxLateGainDB ; const float MaxBandwidth ; const float MinBandwidth ; const float MaxDampening ; const float MinDampening ; const float MaxDiffusion ; const float MinDiffusion ; const float MaxDecay ; const float MinDecay ; const float MaxDensity ; const float MinDensity ; const FLateReflectionsFastSettings DefaultSettings ;)",
    "insertText": "FLateReflectionsFast(float InSampleRate, int InMaxNumInternalBufferSamples, const FLateReflectionsFastSettings& InSettings=DefaultSettings)"
  },
  {
    "label": "FLateReflectionsFast()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLateReflectionsFast()"
  },
  {
    "label": "SetSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSettings(const FLateReflectionsFastSettings& InSettings)"
  },
  {
    "label": "ClampSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClampSettings(FLateReflectionsFastSettings& InOutSettings)"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const FAlignedFloatBuffer& InSamples, const int32 InNumChannels, FAlignedFloatBuffer& OutLeftSamples, FAlignedFloatBuffer& OutRightSamples)"
  },
  {
    "label": "ProcessAudioBuffer()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ProcessAudioBuffer(const float* InSampleData, const int32 InNumFrames, const int32 InNumChannels, float* OutLeftSampleData, float* OutRightSampleData)"
  },
  {
    "label": "ApplySettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySettings()"
  },
  {
    "label": "GeneraterPlateModulations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneraterPlateModulations(const int32 InNum, FAlignedFloatBuffer& OutLeftDelays, FAlignedFloatBuffer& OutRightDelays)"
  }
]