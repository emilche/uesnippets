[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FArrangedWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedWidget"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "FSoundCueGraphConnectionDrawingPolicyFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoundCueGraphConnectionDrawingPolicyFactory"
  },
  {
    "label": "FConnectionDrawingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConnectionDrawingPolicy"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "FSoundCueGraphConnectionDrawingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundCueGraphConnectionDrawingPolicy"
  },
  {
    "label": "FTimePair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimePair"
  },
  {
    "label": "FSoundCueGraphConnectionDrawingPolicyFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ConnectionDrawingPolicy . h \" # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" EdGraphUtilities . h \" # include \" HAL / Platform . h \" # include \" Math / Color . h \" # include \" Templates / SharedPointer . h \" class FArrangedChildren ; class FArrangedWidget ; class FSlateRect ; class FSlateWindowElementList ; class SWidget ; class UEdGraph ; class UEdGraphNode ; class UEdGraphPin ; struct FSoundCueGraphConnectionDrawingPolicyFactory : public FGraphPanelPinConnectionFactory { public : ~)",
    "insertText": "FSoundCueGraphConnectionDrawingPolicyFactory()"
  },
  {
    "label": "CreateConnectionPolicy()",
    "kind": "Method",
    "detail": "Function (} class FConnectionDrawingPolicy*)",
    "insertText": "CreateConnectionPolicy(const class UEdGraphSchema* Schema, int32 InBackLayerID, int32 InFrontLayerID, float ZoomFactor, const class FSlateRect& InClippingRect, class FSlateWindowElementList& InDrawElements, class UEdGraph* InGraphObj)"
  },
  {
    "label": "FTimePair()",
    "kind": "Method",
    "detail": "Function (} ; class FSoundCueGraphConnectionDrawingPolicy : public FConnectionDrawingPolicy { protected : struct FTimePair { double PredExecTime ; double ThisExecTime ;)",
    "insertText": "FTimePair() : PredExecTime(0.0) , ThisExecTime(0.0)"
  },
  {
    "label": "FSoundCueGraphConnectionDrawingPolicy()",
    "kind": "Method",
    "detail": "Function (} } ; typedef TMap<UEdGraphNode*,FTimePair> FExecPairingMap ; TMap<UEdGraphNode*,FExecPairingMap> PredecessorNodes ; UEdGraph* GraphObj ; FLinearColor ActiveColor ; FLinearColor InactiveColor ; float ActiveWireThickness ; float InactiveWireThickness ; public :)",
    "insertText": "FSoundCueGraphConnectionDrawingPolicy(int32 InBackLayerID, int32 InFrontLayerID, float ZoomFactor, const FSlateRect& InClippingRect, FSlateWindowElementList& InDrawElements, UEdGraph* InGraphObj)"
  },
  {
    "label": "BuildAudioFlowRoadmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildAudioFlowRoadmap()"
  },
  {
    "label": "DetermineWiringStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineWiringStyle(UEdGraphPin* OutputPin, UEdGraphPin* InputPin, FConnectionParams& Params)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(TMap<TSharedRef<SWidget>, FArrangedWidget>& PinGeometries, FArrangedChildren& ArrangedNodes)"
  }
]