[
  {
    "label": "FMicrosoftPlatformMathBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMicrosoftPlatformMathBase"
  },
  {
    "label": "IsNaN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformMath . h \" # include \" Math / UnrealPlatformMathSSE4 . h \" struct FMicrosoftPlatformMathBase : public TUnrealPlatformMathSSE4Base<FGenericPlatformMath> { # if PLATFORM_ENABLE_VECTORINTRINSICS bool)",
    "insertText": "IsNaN(float A)"
  },
  {
    "label": "IsNaN()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNaN(double A)"
  },
  {
    "label": "IsFinite()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFinite(float A)"
  },
  {
    "label": "IsFinite()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFinite(double A)"
  },
  {
    "label": "intrinsic()",
    "kind": "Method",
    "detail": "Function (} # pragma)",
    "insertText": "intrinsic(_BitScanReverse) static FORCEINLINE uint32 FloorLog2(uint32 Value)"
  },
  {
    "label": "_BitScanReverse()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ; return)",
    "insertText": "_BitScanReverse(&BitIndex, Value)"
  },
  {
    "label": "FloorLog2NonZero()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "FloorLog2NonZero(uint32 Value)"
  },
  {
    "label": "_BitScanReverse()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ;)",
    "insertText": "_BitScanReverse(&BitIndex, uint32(Value)*2 + 1)"
  },
  {
    "label": "CountTrailingZeros()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "CountTrailingZeros(uint32 Value)"
  },
  {
    "label": "_BitScanForward()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ; return)",
    "insertText": "_BitScanForward(&BitIndex, Value)"
  },
  {
    "label": "CeilLogTwo()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "CeilLogTwo(uint32 Arg)"
  },
  {
    "label": "CountLeadingZeros()",
    "kind": "Method",
    "detail": "Function (Arg = Arg ? Arg : 1 ; return 3 2 -)",
    "insertText": "CountLeadingZeros(Arg - 1)"
  },
  {
    "label": "RoundUpToPowerOfTwo()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "RoundUpToPowerOfTwo(uint32 Arg)"
  },
  {
    "label": "RoundUpToPowerOfTwo64()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "RoundUpToPowerOfTwo64(uint64 Arg)"
  },
  {
    "label": "intrinsic()",
    "kind": "Method",
    "detail": "Function (} # if PLATFORM_64BITS # pragma)",
    "insertText": "intrinsic(_BitScanReverse64) static FORCEINLINE uint64 FloorLog2_64(uint64 Value)"
  },
  {
    "label": "_BitScanReverse64()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ; return)",
    "insertText": "_BitScanReverse64(&BitIndex, Value)"
  },
  {
    "label": "FloorLog2NonZero_64()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "FloorLog2NonZero_64(uint64 Value)"
  },
  {
    "label": "CountLeadingZeros64()",
    "kind": "Method",
    "detail": "Function (Arg = Arg ? Arg : 1 ; return 6 4 -)",
    "insertText": "CountLeadingZeros64(Arg - 1)"
  },
  {
    "label": "CountLeadingZeros64()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "CountLeadingZeros64(uint64 Value)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ;)",
    "insertText": "if(! _BitScanReverse64(&BitIndex, Value))"
  },
  {
    "label": "_BitScanForward64()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ; return)",
    "insertText": "_BitScanForward64(&BitIndex, Value)"
  },
  {
    "label": "CountLeadingZeros()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "CountLeadingZeros(uint32 Value)"
  },
  {
    "label": "_BitScanReverse64()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ;)",
    "insertText": "_BitScanReverse64(&BitIndex, uint64(Value)*2 + 1)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (unsigned long BitIndex ;)",
    "insertText": "if(! _BitScanReverse(&BitIndex, Value))"
  }
]