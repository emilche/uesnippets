[
  {
    "label": "ERoundingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERoundingMode"
  },
  {
    "label": "EMemoryUnitStandard",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMemoryUnitStandard"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FFormatArgumentData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFormatArgumentData"
  },
  {
    "label": "UKismetTextLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UKismetTextLibrary"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / TextProperty . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Internationalization / PolyglotTextData . h \" # include \" KismetTextLibrary . generated . h \" # if ! CPP)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Default,Short,Medium,Long,Full,Custom)",
    "insertText": "UMETA(Hidden)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Int,UInt,Float,Double,Text,Gender,} ; })",
    "insertText": "USTRUCT(noexport, BlueprintInternalUseOnly)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; # endif)",
    "insertText": "UCLASS(meta=(BlueprintThreadSafe, ScriptName=\"TextLibrary\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UFUNCTION(BlueprintPure, meta = (DisplayName = \"To Text (Vector)\", CompactNodeTitle = \"->\", BlueprintAutocast), Category = \"Utilities|Text\") static ENGINE_API FText Conv_VectorToText(FVector InVec)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_FUNCTION(execEditTextSourceString)"
  },
  {
    "label": "DECLARE_FUNCTION()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_FUNCTION(execConv_NumericPropertyToText)"
  }
]