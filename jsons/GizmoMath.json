[
  {
    "label": "ProjectPointOntoLine()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ProjectPointOntoLine(\n\t\tconst FVector& Point,\n\t\tconst FVector& LineOrigin, const FVector& LineDirection)"
  },
  {
    "label": "NearestPointOnLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NearestPointOnLine(\n\t\tconst FVector& LineOrigin, const FVector& LineDirection,\n\t\tconst FVector& QueryPoint,\n\t\tFVector& NearestPointOut, float& LineParameterOut)"
  },
  {
    "label": "NearestPointOnLineToRay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NearestPointOnLineToRay(\n\t\tconst FVector& LineOrigin, const FVector& LineDirection,\n\t\tconst FVector& RayOrigin, const FVector& RayDirection,\n\t\tFVector& NearestLinePointOut, float& LineParameterOut,\n\t\tFVector& NearestRayPointOut, float& RayParameterOut)"
  },
  {
    "label": "RayPlaneIntersectionPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RayPlaneIntersectionPoint(\n\t\tconst FVector& PlaneOrigin, const FVector& PlaneNormal,\n\t\tconst FVector& RayOrigin, const FVector& RayDirection,\n\t\tbool& bIntersectsOut, FVector& PlaneIntersectionPointOut)"
  },
  {
    "label": "RaySphereIntersection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RaySphereIntersection(\n\t\tconst FVector& SphereOrigin, const float SphereRadius,\n\t\tconst FVector& RayOrigin, const FVector& RayDirection,\n\t\tbool& bIntersectsOut, FVector& SphereIntersectionPointOut)"
  },
  {
    "label": "RayCylinderIntersection()",
    "kind": "Method",
    "detail": "Function (INTERACTIVETOOLSFRAMEWORK_API)",
    "insertText": "RayCylinderIntersection(\n\t\tconst FVector& CylinderCenter, const FVector& CylinderAxis, RealType CylinderRadius, RealType CylinderHeight,\n\t\tconst FVector& RayOrigin, const FVector& RayDirection,\n\t\tbool& bIntersectsOut, RealType& OutHitDepth)"
  },
  {
    "label": "RayConeIntersection()",
    "kind": "Method",
    "detail": "Function (INTERACTIVETOOLSFRAMEWORK_API)",
    "insertText": "RayConeIntersection(\n\t\tconst FVector& ConeCenter, const FVector& ConeDirection, RealType ConeCosAngle, RealType ConeHeight,\n\t\tconst FVector& RayOrigin, const FVector& RayDirection,\n\t\tbool& bIntersectsOut, RealType& OutHitDepth)"
  },
  {
    "label": "IntervalIntervalIntersection()",
    "kind": "Method",
    "detail": "Function (INTERACTIVETOOLSFRAMEWORK_API)",
    "insertText": "IntervalIntervalIntersection(\n\t\tconst RealType Interval0[2], const RealType Interval1[2],\n\t\tint& OutNumIntersections, RealType& OutResult0, RealType& OutResult1)"
  },
  {
    "label": "ClosetPointOnCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClosetPointOnCircle(\n\t\tconst FVector& QueryPoint, \n\t\tconst FVector& CircleOrigin, const FVector& CircleNormal, float CircleRadius,\n\t\tFVector& ClosestPointOut)"
  },
  {
    "label": "MakeNormalPlaneBasis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeNormalPlaneBasis(\n\t\tconst FVector& PlaneNormal,\n\t\tFVector& BasisAxis1Out, FVector& BasisAxis2Out)"
  },
  {
    "label": "ComputeAngleInPlane()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeAngleInPlane(\n\t\tconst FVector& Point,\n\t\tconst FVector& PlaneOrigin, const FVector& PlaneNormal,\n\t\tconst FVector& PlaneAxis1, const FVector& PlaneAxis2)"
  },
  {
    "label": "ComputeCoordinatesInPlane()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeCoordinatesInPlane(\n\t\tconst FVector& Point,\n\t\tconst FVector& PlaneOrigin, const FVector& PlaneNormal,\n\t\tconst FVector& PlaneAxis1, const FVector& PlaneAxis2)"
  },
  {
    "label": "ProjectPointOntoPlane()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "ProjectPointOntoPlane(\n\t\tconst FVector& Point,\n\t\tconst FVector& PlaneOrigin, const FVector& PlaneNormal)"
  },
  {
    "label": "SnapToIncrement()",
    "kind": "Method",
    "detail": "Function (RealType)",
    "insertText": "SnapToIncrement(RealType Value, RealType Increment)"
  },
  {
    "label": "GetOrthogonalVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetOrthogonalVector(const FVector& V)"
  }
]