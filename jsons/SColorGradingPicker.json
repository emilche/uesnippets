[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (changed)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnColorGradingPickerValueChanged, FVector4&, bool)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs )"
  },
  {
    "label": "OnDynamicSliderMaxValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDynamicSliderMaxValueChanged(float NewMaxSliderValue, TWeakPtr<SWidget> InValueChangedSourceWidget, bool IsOriginator, bool UpdateOnlyIfHigher)"
  },
  {
    "label": "OnDynamicSliderMinValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDynamicSliderMinValueChanged(float NewMinSliderValue, TWeakPtr<SWidget> InValueChangedSourceWidget, bool IsOriginator, bool UpdateOnlyIfLower)"
  },
  {
    "label": "TransformColorGradingRangeToLinearColorRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformColorGradingRangeToLinearColorRange(float &FloatValue)"
  },
  {
    "label": "OnMainValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMainValueChanged(float InValue, bool ShouldCommitValueChanges)"
  },
  {
    "label": "OnMainValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMainValueCommitted(float InValue, ETextCommit::Type CommitType)"
  },
  {
    "label": "GetCurrentLinearColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetCurrentLinearColor()"
  },
  {
    "label": "HandleCurrentColorValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCurrentColorValueChanged(const FLinearColor& NewValue, bool ShouldCommitValueChanges)"
  },
  {
    "label": "HandleColorWheelMouseCaptureBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleColorWheelMouseCaptureBegin(const FLinearColor& InValue)"
  },
  {
    "label": "HandleColorWheelMouseCaptureEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleColorWheelMouseCaptureEnd(const FLinearColor& InValue)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSliderMovement(float NewValue)"
  },
  {
    "label": "AdjustRatioValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustRatioValue(FVector4 &NewValue)"
  }
]