[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnNumericEntryBoxDynamicSliderMinMaxValueChanged, float, TWeakPtr<SWidget>, bool, bool)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnColorGradingPickerValueChanged, FVector4&, bool)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SColorGradingPicker) : _AllowSpin(true) , _SupportDynamicSliderMaxValue(false) , _SupportDynamicSliderMinValue(false) , _MainDelta(0.01f) , _MainShiftMultiplier(10.f) , _MainCtrlMultiplier(0.1f) PRAGMA_DISABLE_DEPRECATION_WARNINGS , _ColorGradingModes(EColorGradingModes::Saturation) PRAGMA_ENABLE_DEPRECATION_WARNINGS , _OnColorCommitted() , _OnQueryCurrentColor()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TOptional<float>, ValueMin ) SLATE_ARGUMENT(TOptional<float>, ValueMax ) SLATE_ARGUMENT(TOptional<float>, SliderValueMin) SLATE_ARGUMENT(TOptional<float>, SliderValueMax) SLATE_ATTRIBUTE(bool, AllowSpin) SLATE_ATTRIBUTE(bool, SupportDynamicSliderMaxValue) SLATE_ATTRIBUTE(bool, SupportDynamicSliderMinValue) SLATE_ARGUMENT( float, MainDelta ) SLATE_ARGUMENT(float, MainShiftMultiplier) SLATE_ARGUMENT(float, MainCtrlMultiplier) SLATE_ARGUMENT_DEPRECATED( int32, MainShiftMouseMovePixelPerDelta, 5.4, \"Shift Mouse Move Pixel Per Delta is deprecated and incrementing by a fixed delta per pixel is no longer supported. Please use ShiftMultiplier and CtrlMultiplier which will multiply the step per mouse move\") PRAGMA_DISABLE_DEPRECATION_WARNINGS SLATE_ARGUMENT( EColorGradingModes, ColorGradingModes) PRAGMA_ENABLE_DEPRECATION_WARNINGS PRAGMA_DISABLE_DEPRECATION_WARNINGS SLATE_EVENT(FOnColorGradingPickerValueChanged, OnColorCommitted ) PRAGMA_ENABLE_DEPRECATION_WARNINGS PRAGMA_DISABLE_DEPRECATION_WARNINGS SLATE_EVENT(FOnGetCurrentVector4Value, OnQueryCurrentColor) PRAGMA_ENABLE_DEPRECATION_WARNINGS SLATE_EVENT(FSimpleDelegate, OnBeginSliderMovement) SLATE_EVENT(FSimpleDelegate, OnEndSliderMovement) SLATE_EVENT(FSimpleDelegate, OnBeginMouseCapture) SLATE_EVENT(FSimpleDelegate, OnEndMouseCapture) SLATE_END_ARGS() APPFRAMEWORK_API ~SColorGradingPicker()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetOnNumericEntryBoxDynamicSliderMaxValueChangedDelegate()",
    "kind": "Method",
    "detail": "Function (FOnNumericEntryBoxDynamicSliderMinMaxValueChanged&)",
    "insertText": "GetOnNumericEntryBoxDynamicSliderMaxValueChangedDelegate()"
  },
  {
    "label": "OnDynamicSliderMinValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDynamicSliderMinValueChanged(float NewMinSliderValue, TWeakPtr<SWidget> InValueChangedSourceWidget, bool IsOriginator, bool UpdateOnlyIfLower)"
  },
  {
    "label": "TransformLinearColorRangeToColorGradingRange()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "TransformLinearColorRangeToColorGradingRange(FVector4 &VectorValue)"
  },
  {
    "label": "TransformColorGradingRangeToLinearColorRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformColorGradingRangeToLinearColorRange(FVector4 &VectorValue)"
  },
  {
    "label": "TransformColorGradingRangeToLinearColorRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformColorGradingRangeToLinearColorRange(float &FloatValue)"
  },
  {
    "label": "OnGetMainValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnGetMainValue()"
  },
  {
    "label": "OnMainValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMainValueChanged(float InValue, bool ShouldCommitValueChanges)"
  },
  {
    "label": "OnMainValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMainValueCommitted(float InValue, ETextCommit::Type CommitType)"
  },
  {
    "label": "GetCurrentLinearColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetCurrentLinearColor()"
  },
  {
    "label": "IsEntryBoxEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEntryBoxEnabled()"
  },
  {
    "label": "HandleCurrentColorValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCurrentColorValueChanged(const FLinearColor& NewValue, bool ShouldCommitValueChanges)"
  },
  {
    "label": "HandleColorWheelMouseCaptureBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleColorWheelMouseCaptureBegin(const FLinearColor& InValue)"
  },
  {
    "label": "HandleColorWheelMouseCaptureEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleColorWheelMouseCaptureEnd(const FLinearColor& InValue)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSliderMovement(float NewValue)"
  },
  {
    "label": "AdjustRatioValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustRatioValue(FVector4 &NewValue)"
  }
]