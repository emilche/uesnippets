[
  {
    "label": "ralloc()",
    "kind": "Method",
    "detail": "Function (# ifndef RALLOC_H # define RALLOC_H # define)",
    "insertText": "ralloc(ctx, type) ((type *) ralloc_size(ctx, sizeof(type))) #define rzalloc(ctx, type) ((type *) rzalloc_size(ctx, sizeof(type))) void *ralloc_context(const void *ctx)"
  },
  {
    "label": "ralloc_size()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ralloc_size(const void *ctx, size_t size)"
  },
  {
    "label": "rzalloc_size()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "rzalloc_size(const void *ctx, size_t size)"
  },
  {
    "label": "reralloc_size()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "reralloc_size(const void *ctx, void *ptr, size_t size)"
  },
  {
    "label": "ralloc_array()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "ralloc_array(ctx, type, count) \\ ((type *) ralloc_array_size(ctx, sizeof(type), count)) #define rzalloc_array(ctx, type, count) \\ ((type *) rzalloc_array_size(ctx, sizeof(type), count)) #define reralloc(ctx, ptr, type, count) \\ ((type *) reralloc_array_size(ctx, ptr, sizeof(type), count)) void *ralloc_array_size(const void *ctx, size_t size, unsigned count)"
  },
  {
    "label": "rzalloc_array_size()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "rzalloc_array_size(const void *ctx, size_t size, unsigned count)"
  },
  {
    "label": "reralloc_array_size()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "reralloc_array_size(const void *ctx, void *ptr, size_t size, unsigned count)"
  },
  {
    "label": "ralloc_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ralloc_free(void *ptr)"
  },
  {
    "label": "ralloc_parent()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ralloc_parent(const void *ptr)"
  },
  {
    "label": "ralloc_autofree_context()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "ralloc_autofree_context(void)"
  },
  {
    "label": "ralloc_set_destructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ralloc_set_destructor(const void *ptr, void(*destructor)(void *))"
  },
  {
    "label": "ralloc_strdup()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "ralloc_strdup(const void *ctx, const char *str)"
  },
  {
    "label": "ralloc_strndup()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "ralloc_strndup(const void *ctx, const char *str, size_t n)"
  },
  {
    "label": "ralloc_strcat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ralloc_strcat(char **dest, const char *str)"
  },
  {
    "label": "ralloc_strncat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ralloc_strncat(char **dest, const char *str, size_t n)"
  },
  {
    "label": "ralloc_asprintf()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "ralloc_asprintf(const void *ctx, const char *fmt, ...)"
  },
  {
    "label": "ralloc_vasprintf()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "ralloc_vasprintf(const void *ctx, const char *fmt, va_list args)"
  },
  {
    "label": "ralloc_asprintf_rewrite_tail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ralloc_asprintf_rewrite_tail(char **str, size_t *start, const char *fmt, ...)"
  },
  {
    "label": "ralloc_vasprintf_rewrite_tail()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ralloc_vasprintf_rewrite_tail(char **str, size_t *start, const char *fmt, va_list args)"
  },
  {
    "label": "ralloc_asprintf_append()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ralloc_asprintf_append(char **str, const char *fmt, ...)"
  },
  {
    "label": "ralloc_vasprintf_append()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ralloc_vasprintf_append(char **str, const char *fmt, va_list args)"
  },
  {
    "label": "ralloc_cpp_destructor()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "ralloc_cpp_destructor(void *ptr)"
  }
]