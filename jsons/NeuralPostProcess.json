[
  {
    "label": "FNeuralPostProcessResource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNeuralPostProcessResource"
  },
  {
    "label": "FScreenPassTextureViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScreenPassTextureViewport"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "GetDefaultNeuralPostProcessShaderParameters()",
    "kind": "Method",
    "detail": "Function (FNeuralPostProcessShaderParameters)",
    "insertText": "GetDefaultNeuralPostProcessShaderParameters(\n\tFRDGBuilder& GraphBuilder\n)"
  },
  {
    "label": "SetupNeuralPostProcessShaderParametersForWrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupNeuralPostProcessShaderParametersForWrite(\n\tFNeuralPostProcessShaderParameters& NeuralPostProcessShaderParameters,\n\tFRDGBuilder& GraphBuilder,\n\tconst FNeuralPostProcessResource& NeuralPostProcessResource)"
  },
  {
    "label": "SetupNeuralPostProcessShaderParametersForRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupNeuralPostProcessShaderParametersForRead(\n\tFNeuralPostProcessShaderParameters& NeuralPostProcessShaderParameters,\n\tFRDGBuilder& GraphBuilder,\n\tconst FNeuralPostProcessResource& NeuralPostProcessResource)"
  },
  {
    "label": "AllocateNeuralPostProcessingResourcesIfNeeded()",
    "kind": "Method",
    "detail": "Function (FNeuralPostProcessResource)",
    "insertText": "AllocateNeuralPostProcessingResourcesIfNeeded(\n\tFRDGBuilder& GraphBuilder,\n\tconst class FScreenPassTextureViewport& OutputViewport, \n\tint32 NeuralProfileId,\n\tbool bUsedWithNeuralNetworks\n)"
  },
  {
    "label": "ApplyNeuralPostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyNeuralPostProcess(\n\tFRDGBuilder& GraphBuilder,\n\tconst FViewInfo& View,\n\tFIntRect Rect,\n\tFNeuralPostProcessResource& NeuralPostProcessResource\n)"
  },
  {
    "label": "IsNeuralPostProcessEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNeuralPostProcessEnabled()"
  },
  {
    "label": "ShouldApplyNeuralPostProcessForMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldApplyNeuralPostProcessForMaterial(const class FMaterial* Material)"
  },
  {
    "label": "IsNeuralPostProcessShaderParameterUsed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNeuralPostProcessShaderParameterUsed(FNeuralPostProcessShaderParameters& NeuralPostProcessShaderParameters)"
  }
]