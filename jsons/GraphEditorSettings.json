[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / EnumAsByte . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphPin . h \" # include \" EdGraphNode_Comment . h \" # include \" HAL / Platform . h \" # include \" Layout / Margin . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" GraphEditorSettings . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Right)",
    "insertText": "UMETA(DisplayName = \"Right\"), Middle UMETA(DisplayName = \"Middle\"), Both UMETA(DisplayName = \"Right or Middle\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (struct FPropertyChangedEvent ;)",
    "insertText": "UCLASS(config=EditorPerProjectUserSettings)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: #if WITH_EDITOR virtual void PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "GetInputPinPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetInputPinPadding()"
  },
  {
    "label": "GetOutputPinPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetOutputPinPadding()"
  },
  {
    "label": "GetNonPinNodeBodyPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetNonPinNodeBodyPadding()"
  },
  {
    "label": "GetShadowDeltaSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetShadowDeltaSize()"
  },
  {
    "label": "ComputeSplineTangent()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeSplineTangent(const FVector2D& Start, const FVector2D& End)"
  }
]