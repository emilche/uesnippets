[
  {
    "label": "USoundBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundBase"
  },
  {
    "label": "UMovieSceneAudioTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneAudioTrack"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneNameableTrack . h \" # include \" MovieSceneAudioTrack . generated . h \" class USoundBase ; namespace AudioTrackConstants { const float ScrubDuration = 0 . 0 5 0 f ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: MOVIESCENETRACKS_API virtual UMovieSceneSection* AddNewSoundOnRow(USoundBase* Sound, FFrameNumber Time, int32 RowIndex)"
  },
  {
    "label": "AddNewSound()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "AddNewSound(USoundBase* Sound, FFrameNumber Time)"
  },
  {
    "label": "GetAudioSections()",
    "kind": "Method",
    "detail": "Function (} const TArray<UMovieSceneSection*>&)",
    "insertText": "GetAudioSections()"
  },
  {
    "label": "RemoveAllAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnimationData()"
  },
  {
    "label": "HasSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSection(const UMovieSceneSection& Section)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSectionAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSectionAt(int32 SectionIndex)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (const TArray<UMovieSceneSection*>&)",
    "insertText": "GetAllSections()"
  },
  {
    "label": "SupportsMultipleRows()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMultipleRows()"
  },
  {
    "label": "CreateNewSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "CreateNewSection()"
  },
  {
    "label": "PostRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRename(UObject* OldOuter, const FName OldName)"
  },
  {
    "label": "GetRowHeight()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA public : int32)",
    "insertText": "GetRowHeight()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (RowHeight =)",
    "insertText": "Max(16, NewRowHeight)"
  }
]