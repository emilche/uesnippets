[
  {
    "label": "DesktopFrameGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopFrameGenerator"
  },
  {
    "label": "DesktopFramePainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesktopFramePainter"
  },
  {
    "label": "PainterDesktopFrameGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PainterDesktopFrameGenerator"
  },
  {
    "label": "BlackWhiteDesktopFramePainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlackWhiteDesktopFramePainter"
  },
  {
    "label": "DesktopFrameGenerator()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_DESKTOP_FRAME_GENERATOR_H_ # define MODULES_DESKTOP_CAPTURE_DESKTOP_FRAME_GENERATOR_H_ # include<memory> # include \" modules / desktop_capture / desktop_frame . h \" # include \" modules / desktop_capture / desktop_geometry . h \" # include \" modules / desktop_capture / desktop_region . h \" # include \" modules / desktop_capture / shared_memory . h \" namespace webrtc { class DesktopFrameGenerator { public :)",
    "insertText": "DesktopFrameGenerator()"
  },
  {
    "label": "GetNextFrame()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopFrame>)",
    "insertText": "GetNextFrame(SharedMemoryFactory* factory)"
  },
  {
    "label": "DesktopFramePainter()",
    "kind": "Method",
    "detail": "Function (} ; class DesktopFramePainter { public :)",
    "insertText": "DesktopFramePainter()"
  },
  {
    "label": "Paint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Paint(DesktopFrame* frame, DesktopRegion* updated_region)"
  },
  {
    "label": "PainterDesktopFrameGenerator()",
    "kind": "Method",
    "detail": "Function (} ; class PainterDesktopFrameGenerator final : public DesktopFrameGenerator { public :)",
    "insertText": "PainterDesktopFrameGenerator()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (DesktopSize*)",
    "insertText": "size()"
  },
  {
    "label": "set_return_frame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_return_frame(bool return_frame)"
  },
  {
    "label": "set_provide_updated_region_hints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_provide_updated_region_hints(bool provide_updated_region_hints)"
  },
  {
    "label": "set_enlarge_updated_region()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_enlarge_updated_region(bool enlarge_updated_region)"
  },
  {
    "label": "set_enlarge_range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_enlarge_range(int enlarge_range)"
  },
  {
    "label": "set_add_random_updated_region()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_add_random_updated_region(bool add_random_updated_region)"
  },
  {
    "label": "set_desktop_frame_painter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_desktop_frame_painter(DesktopFramePainter* painter)"
  },
  {
    "label": "BlackWhiteDesktopFramePainter()",
    "kind": "Method",
    "detail": "Function (private : DesktopSize size_ ; bool return_frame_ ; bool provide_updated_region_hints_ ; bool enlarge_updated_region_ ; int enlarge_range_ ; bool add_random_updated_region_ ; DesktopFramePainter* painter_ ; } ; class BlackWhiteDesktopFramePainter final : public DesktopFramePainter { public :)",
    "insertText": "BlackWhiteDesktopFramePainter()"
  },
  {
    "label": "updated_region()",
    "kind": "Method",
    "detail": "Function (DesktopRegion*)",
    "insertText": "updated_region()"
  }
]