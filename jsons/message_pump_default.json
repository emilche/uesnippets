[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "MessagePumpDefault()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MESSAGE_LOOP_MESSAGE_PUMP_DEFAULT_H_ # define BASE_MESSAGE_LOOP_MESSAGE_PUMP_DEFAULT_H_ # include \" base / base_export . h \" # include \" base / message_loop / message_pump . h \" # include \" base / synchronization / waitable_event . h \" # include \" base / time / time . h \" # include \" build / build_config . h \" namespace base { class BASE_EXPORT MessagePumpDefault : public MessagePump { public :)",
    "insertText": "MessagePumpDefault()"
  },
  {
    "label": "MessagePumpDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MessagePumpDefault(const MessagePumpDefault&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MessagePumpDefault&)",
    "insertText": "operator(const MessagePumpDefault&)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Run(Delegate* delegate)"
  },
  {
    "label": "Quit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Quit()"
  },
  {
    "label": "ScheduleWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleWork()"
  },
  {
    "label": "ScheduleDelayedWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleDelayedWork(const Delegate::NextWorkInfo& next_work_info)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_APPLE) void SetTimerSlack(TimerSlack timer_slack)"
  }
]