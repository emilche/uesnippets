[
  {
    "label": "IDXGIAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIAdapter"
  },
  {
    "label": "IDXGIFactory1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIFactory1"
  },
  {
    "label": "IDXGIFactory6",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIFactory6"
  },
  {
    "label": "FFindBestDevice",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFindBestDevice"
  },
  {
    "label": "FFindBestDevice()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / RefCounting . h \" # include \" StandaloneRendererPlatformHeaders . h \" struct IDXGIAdapter ; struct IDXGIFactory1 ; struct IDXGIFactory6 ; namespace UE::StandaloneRenderer::D3D { struct FFindBestDevice {)",
    "insertText": "FFindBestDevice()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "CreateDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateDevice(ID3D11Device** Device, ID3D11DeviceContext** DeviceContext)"
  },
  {
    "label": "GetFeatureLevelString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetFeatureLevelString(D3D_FEATURE_LEVEL FeatureLevel)"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "SelectAdapter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAdapter()"
  },
  {
    "label": "EnumerateAdapters()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "EnumerateAdapters(UINT AdapterIndex, IDXGIAdapter** Adapter)"
  },
  {
    "label": "CreateTesingDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateTesingDevice(IDXGIAdapter* Adapter, D3D_FEATURE_LEVEL& ResultFeatureLevel)"
  }
]