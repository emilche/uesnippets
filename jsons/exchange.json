[
  {
    "label": "_T1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_T1"
  },
  {
    "label": "_T2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_T2"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___UTILITY_EXCHANGE_H # define _LIBCPP___UTILITY_EXCHANGE_H # include<__config> # include<__utility / forward . h> # include<__utility / move . h> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER > 11 template<class _T1, class _T2 = _T1> inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 _T1 exchange(_T1& __obj, _T2&& __new_value) noexcept(is_nothrow_move_constructible<_T1>::value && is_nothrow_assignable<_T1&, _T2>::value)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (_T1 __old_value =)",
    "insertText": "move(__obj)"
  },
  {
    "label": "_T2()",
    "kind": "Method",
    "detail": "Function (__obj = _VSTD::forward<)",
    "insertText": "_T2(__new_value)"
  }
]