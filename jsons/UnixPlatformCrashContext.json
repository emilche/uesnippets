[
  {
    "label": "ThreadStackUserData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThreadStackUserData"
  },
  {
    "label": "FUnixCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnixCrashContext"
  },
  {
    "label": "FUnixCrashContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformCrashContext . h \" # include \" Unix / UnixSystemIncludes . h \" # include \" Templates / Atomic . h \" # include<ucontext . h> struct ThreadStackUserData { bool bCaptureCallStack ; union { ANSICHAR* CallStack ; uint64* BackTrace ; } ; int32 BackTraceCount ; SIZE_T CallStackSize ; TAtomic<bool> bDone ; } ; struct FUnixCrashContext : public FGenericCrashContext { int32 Signal ; siginfo_t* Info ; ucontext_t* Context ; bool bCapturedBacktrace ; char** BacktraceSymbols ; TCHAR SignalDescription [ 2 5 6 ] ; char MinidumpCallstackInfo [ 1 6 3 8 4 ] ; __thread siginfo_t FakeSiginfoForDiagnostics ; uint64* FirstCrashHandlerFrame = nullptr ; void* ErrorFrame = nullptr ;)",
    "insertText": "FUnixCrashContext(ECrashContextType InType, const TCHAR* InErrorMessage) : FGenericCrashContext(InType, InErrorMessage) , Signal(0) , Info(nullptr) , Context(nullptr) , bCapturedBacktrace(false) , BacktraceSymbols(nullptr)"
  },
  {
    "label": "FUnixCrashContext()",
    "kind": "Method",
    "detail": "Function (SignalDescription [ 0 ] = 0 ; MinidumpCallstackInfo [ 0 ] = 0 ; } ~)",
    "insertText": "FUnixCrashContext()"
  },
  {
    "label": "InitFromSignal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromSignal(int32 InSignal, siginfo_t* InInfo, void* InContext)"
  },
  {
    "label": "InitFromDiagnostics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromDiagnostics(const void* InAddress = nullptr)"
  },
  {
    "label": "CaptureStackTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureStackTrace(void* ErrorProgramCounter)"
  },
  {
    "label": "CaptureThreadStackTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureThreadStackTrace(uint32_t ThreadId)"
  },
  {
    "label": "GenerateCrashInfoAndLaunchReporter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCrashInfoAndLaunchReporter()"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType(ECrashContextType InType)"
  },
  {
    "label": "SetFirstCrashHandlerFrame()",
    "kind": "Method",
    "detail": "Function (Type = InType ; } void)",
    "insertText": "SetFirstCrashHandlerFrame(uint64* ProgramCounter)"
  },
  {
    "label": "GetPortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPortableCallStack(const uint64* StackFrames, int32 NumStackFrames, TArray<FCrashStackFrame>& OutCallStack)"
  },
  {
    "label": "AddPlatformSpecificProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPlatformSpecificProperties()"
  },
  {
    "label": "GenerateReport()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "GenerateReport(const FString & DiagnosticsPath)"
  },
  {
    "label": "PreInit()",
    "kind": "Method",
    "detail": "Function (} ; typedef FUnixCrashContext FPlatformCrashContext ; namespace UnixCrashReporterTracker { void)",
    "insertText": "PreInit()"
  },
  {
    "label": "RemoveValidCrashReportTickerForChildProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveValidCrashReportTickerForChildProcess()"
  }
]