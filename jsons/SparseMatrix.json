[
  {
    "label": "SparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseMatrix"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "traits"
  },
  {
    "label": "SparseMatrix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseMatrix"
  },
  {
    "label": "SparseVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SparseVector"
  },
  {
    "label": "internal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "internal"
  },
  {
    "label": "SizesType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SizesType"
  },
  {
    "label": "SizesType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SizesType"
  },
  {
    "label": "SizesType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SizesType"
  },
  {
    "label": "SingletonVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SingletonVector"
  },
  {
    "label": "IndexPosPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IndexPosPair"
  },
  {
    "label": "default_prunning_func",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "default_prunning_func"
  },
  {
    "label": "evaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "evaluator"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "insert(row,col)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "insert(row,col)"
  },
  {
    "label": "reserve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reserve(const SizesType& reserveSizes)"
  },
  {
    "label": "insertBackByOuterInner()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "insertBackByOuterInner(IsRowMajor?row:col, IsRowMajor?col:row)"
  },
  {
    "label": "setFromTriplets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFromTriplets(const InputIterators& begin, const InputIterators& end)"
  },
  {
    "label": "setFromTriplets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFromTriplets(const InputIterators& begin, const InputIterators& end, DupFunctor dup_func)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "insert(IsRowMajor ? j : i, IsRowMajor ? i : j)"
  },
  {
    "label": "makeCompressed()",
    "kind": "Method",
    "detail": "Function (twice)",
    "insertText": "makeCompressed()"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "resize(rows,cols)"
  },
  {
    "label": "ConstDiagonalReturnType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ConstDiagonalReturnType(*this)"
  },
  {
    "label": "DiagonalReturnType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DiagonalReturnType(*this)"
  },
  {
    "label": "initAssignment()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "initAssignment(other)"
  },
  {
    "label": "diaEval()",
    "kind": "Method",
    "detail": "Function (internal::evaluator<DiagXpr>)",
    "insertText": "diaEval(diagXpr)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (InputIterator)",
    "insertText": "it(begin)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (InputIterator)",
    "insertText": "it(begin)"
  },
  {
    "label": "m()",
    "kind": "Method",
    "detail": "Function (SparseMatrixType)",
    "insertText": "m(rows,cols)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (buffers)",
    "insertText": "for(Index j=0; j<outerSize()"
  },
  {
    "label": "otherCopyEval()",
    "kind": "Method",
    "detail": "Function (OtherCopyEval)",
    "insertText": "otherCopyEval(otherCopy)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (pass)",
    "insertText": "for(Index j=0; j<otherCopy.outerSize()"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (OtherCopyEval::InnerIterator)",
    "insertText": "it(otherCopyEval, j)"
  },
  {
    "label": "it()",
    "kind": "Method",
    "detail": "Function (OtherCopyEval::InnerIterator)",
    "insertText": "it(otherCopyEval, j)"
  },
  {
    "label": "insertUncompressed()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "insertUncompressed(row,col)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (offsets)",
    "insertText": "for(Index k=0; k<=(outer+1)"
  }
]