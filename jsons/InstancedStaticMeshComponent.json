[
  {
    "label": "FLightingBuildOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightingBuildOptions"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FStaticLightingBuildContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingBuildContext"
  },
  {
    "label": "FStaticLightingTextureMapping_InstancedStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingTextureMapping_InstancedStaticMesh"
  },
  {
    "label": "ULightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULightComponent"
  },
  {
    "label": "FNavigableGeometryExport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigableGeometryExport"
  },
  {
    "label": "FNavigationRelevantData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationRelevantData"
  },
  {
    "label": "FPerInstanceRenderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerInstanceRenderData"
  },
  {
    "label": "FStaticLightingPrimitiveInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticLightingPrimitiveInfo"
  },
  {
    "label": "FInstancedLightMap2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancedLightMap2D"
  },
  {
    "label": "FInstancedShadowMap2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstancedShadowMap2D"
  },
  {
    "label": "FStaticMeshInstanceData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshInstanceData"
  },
  {
    "label": "FISMInstanceUpdateChangeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FISMInstanceUpdateChangeSet"
  },
  {
    "label": "FInstanceUpdateComponentDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceUpdateComponentDesc"
  },
  {
    "label": "FInstancedStaticMeshInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshInstanceData"
  },
  {
    "label": "FInstancedStaticMeshMappingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshMappingInfo"
  },
  {
    "label": "FInstancedStaticMeshRandomSeed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshRandomSeed"
  },
  {
    "label": "UInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedStaticMeshComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FComponentQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentQueryParams"
  },
  {
    "label": "FCollisionObjectQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionObjectQueryParams"
  },
  {
    "label": "FInstancedStaticMeshComponentInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshComponentInstanceData"
  },
  {
    "label": "HInstancedStaticMeshInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HInstancedStaticMeshInstance"
  },
  {
    "label": "FInstancedStaticMeshLightMapInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshLightMapInstanceData"
  },
  {
    "label": "DECLARE_STATS_GROUP()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" UObject / ObjectMacros . h \" # include \" EngineDefines . h \" # include \" HitProxies . h \" # include \" Misc / Guid . h \" # include \" Engine / TextureStreamingTypes . h \" # include \" Components / StaticMeshComponent . h \" # include \" Elements / SMInstance / SMInstanceManager . h \" # include \" InstanceDataSceneProxy . h \" # include \" InstancedStaticMesh / ISMInstanceDataManager . h \" # include \" StaticMeshResources . h \" # include \" InstancedStaticMeshComponent . generated . h \" class FLightingBuildOptions ; class FPrimitiveSceneProxy ; class FStaticLightingBuildContext ; class FStaticLightingTextureMapping_InstancedStaticMesh ; class ULightComponent ; struct FNavigableGeometryExport ; struct FNavigationRelevantData ; struct FPerInstanceRenderData ; struct FStaticLightingPrimitiveInfo ;)",
    "insertText": "DECLARE_STATS_GROUP(TEXT(\"Foliage\"), STATGROUP_Foliage, STATCAT_Advanced)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (class FStaticLightingTextureMapping_InstancedStaticMesh ; class FInstancedLightMap2D ; class FInstancedShadowMap2D ; class FStaticMeshInstanceData ; class FISMInstanceUpdateChangeSet ; struct FInstanceUpdateComponentDesc ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, Category=Instances)"
  },
  {
    "label": "FInstancedStaticMeshInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedStaticMeshInstanceData() : Transform(FMatrix::Identity)"
  },
  {
    "label": "FInstancedStaticMeshInstanceData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInstancedStaticMeshInstanceData(const FMatrix& InTransform) : Transform(InTransform)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FInstancedStaticMeshInstanceData& InstanceData)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FInstancedStaticMeshMappingInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedStaticMeshMappingInfo() : Mapping(nullptr)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FInstancedStaticMeshRandomSeed& InstanceData)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Ar<<InstanceData . StartInstanceIndex ; Ar<<InstanceData . RandomSeed ; return Ar ; } } ;)",
    "insertText": "UCLASS(ClassGroup = Rendering, meta = (BlueprintSpawnableComponent), Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() ENGINE_API UInstancedStaticMeshComponent(FVTableHelper& Helper)"
  },
  {
    "label": "UInstancedStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UInstancedStaticMeshComponent()"
  },
  {
    "label": "GetRenderIndex()",
    "kind": "Method",
    "detail": "Function (SIZE_T ProxySize ; int32)",
    "insertText": "GetRenderIndex(int32 InInstanceIndex)"
  },
  {
    "label": "GetNumInstances()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumInstances()"
  },
  {
    "label": "AddInstancesById()",
    "kind": "Method",
    "detail": "Function (} TArray<FPrimitiveInstanceId>)",
    "insertText": "AddInstancesById(const TArrayView<const FTransform>& InstanceTransforms, bool bWorldSpace = false, bool bUpdateNavigation = true)"
  },
  {
    "label": "AddInstanceById()",
    "kind": "Method",
    "detail": "Function (FPrimitiveInstanceId)",
    "insertText": "AddInstanceById(const FTransform& InstanceTransforms, bool bWorldSpace = false)"
  },
  {
    "label": "SetCustomDataById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDataById(const TArrayView<const FPrimitiveInstanceId> &InstanceIds, TArrayView<const float> CustomDataFloats)"
  },
  {
    "label": "SetCustomDataById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDataById(FPrimitiveInstanceId InstanceId, TArrayView<const float> CustomDataFloats)"
  },
  {
    "label": "SetCustomDataById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDataById(MakeArrayView(&InstanceId, 1), CustomDataFloats)"
  },
  {
    "label": "SetCustomDataValueById()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCustomDataValueById(FPrimitiveInstanceId InstanceId, int32 CustomDataIndex, float CustomDataValue)"
  },
  {
    "label": "RemoveInstancesById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstancesById(const TArrayView<const FPrimitiveInstanceId> &InstanceIds, bool bUpdateNavigation = true)"
  },
  {
    "label": "RemoveInstanceById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstanceById(FPrimitiveInstanceId InstanceId)"
  },
  {
    "label": "RemoveInstancesById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstancesById(MakeArrayView(&InstanceId, 1))"
  },
  {
    "label": "UpdateInstanceTransformById()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateInstanceTransformById(FPrimitiveInstanceId InstanceId, const FTransform& NewInstanceTransform, bool bWorldSpace=false, bool bTeleport=false)"
  },
  {
    "label": "SetPreviousTransformById()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviousTransformById(FPrimitiveInstanceId InstanceId, const FTransform& NewPrevInstanceTransform, bool bWorldSpace=false)"
  },
  {
    "label": "IsValidId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidId(FPrimitiveInstanceId InstanceId)"
  },
  {
    "label": "SetHasPerInstancePrevTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetHasPerInstancePrevTransforms(bool bInHasPreviousTransforms)"
  },
  {
    "label": "SetCustomData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCustomData(int32 InstanceIndex, TArrayView<const float> CustomDataFloats, bool bMarkRenderStateDirty = false)"
  },
  {
    "label": "PreAllocateInstancesMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreAllocateInstancesMemory(int32 AddedInstanceCount)"
  },
  {
    "label": "GetInstancePrevTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInstancePrevTransform(int32 InstanceIndex, FTransform& OutInstanceTransform, bool bWorldSpace = false)"
  },
  {
    "label": "OnUpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateTransform(EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport)"
  },
  {
    "label": "UpdateComponentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateComponentTransform(EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport)"
  },
  {
    "label": "GetTextureStreamingTransformScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTextureStreamingTransformScale()"
  },
  {
    "label": "GetMaterialStreamingData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMaterialStreamingData(int32 MaterialIndex, FPrimitiveMaterialInfo& MaterialData)"
  },
  {
    "label": "BuildTextureStreamingDataImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildTextureStreamingDataImpl(ETextureStreamingBuildType BuildType, EMaterialQualityLevel::Type QualityLevel, ERHIFeatureLevel::Type FeatureLevel, TSet<FGuid>& DependentResources, bool& bOutSupportsBuildTextureStreamingData)"
  },
  {
    "label": "GetStreamingRenderAssetInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStreamingRenderAssetInfo(FStreamingTextureLevelContext& LevelContext, TArray<FStreamingRenderAssetPrimitiveInfo>& OutStreamingRenderAssets)"
  },
  {
    "label": "BatchUpdateInstancesTransforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransforms(int32 StartInstanceIndex, TArrayView<const FTransform> NewInstancesTransforms, bool bWorldSpace = false, bool bMarkRenderStateDirty = false, bool bTeleport = false)"
  },
  {
    "label": "BatchUpdateInstancesTransforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransforms(int32 StartInstanceIndex, const TArray<FTransform>& NewInstancesTransforms, const TArray<FTransform>& NewInstancesPrevTransforms, bool bWorldSpace = false, bool bMarkRenderStateDirty = false, bool bTeleport = false)"
  },
  {
    "label": "BatchUpdateInstancesData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesData(int32 StartInstanceIndex, int32 NumInstances, FInstancedStaticMeshInstanceData* StartInstanceData, bool bMarkRenderStateDirty = false, bool bTeleport = false)"
  },
  {
    "label": "RemoveInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInstances(const TArray<int32>& InstancesToRemove, bool bInstanceArrayAlreadySortedInReverseOrder)"
  },
  {
    "label": "ShouldCreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCreatePhysicsState()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "OnUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnregister()"
  },
  {
    "label": "SetRemoveSwap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRemoveSwap()"
  },
  {
    "label": "SupportsRemoveSwap()",
    "kind": "Method",
    "detail": "Function (bSupportRemoveAtSwap = true ; } bool)",
    "insertText": "SupportsRemoveSwap()"
  },
  {
    "label": "SetUseConservativeBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseConservativeBounds(bool bValue)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bUseConservativeBounds = bValue ; CachedConservativeInstanceBounds .)",
    "insertText": "Init()"
  },
  {
    "label": "ComponentIsTouchingSelectionBox()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR bool)",
    "insertText": "ComponentIsTouchingSelectionBox(const FBox& InSelBBox, const bool bConsiderOnlyBSP, const bool bMustEncompassEntireComponent)"
  },
  {
    "label": "ComponentIsTouchingSelectionFrustum()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentIsTouchingSelectionFrustum(const FConvexVolume& InFrustum, const bool bConsiderOnlyBSP, const bool bMustEncompassEntireComponent)"
  },
  {
    "label": "IsInstanceTouchingSelectionBox()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstanceTouchingSelectionBox(int32 InstanceIndex, const FBox& InBox, const bool bMustEncompassEntireInstance)"
  },
  {
    "label": "IsInstanceTouchingSelectionFrustum()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstanceTouchingSelectionFrustum(int32 InstanceIndex, const FConvexVolume& InFrustum, const bool bMustEncompassEntireInstance)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "MakeInstanceDataFlags()",
    "kind": "Method",
    "detail": "Function (# endif FInstanceDataFlags)",
    "insertText": "MakeInstanceDataFlags(bool bAnyMaterialHasPerInstanceRandom, bool bAnyMaterialHasPerInstanceCustomData)"
  },
  {
    "label": "GetComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (private : FBox CachedConservativeInstanceBounds ; public : # if WITH_EDITOR TBitArray<> SelectedInstances ; bool bForceShowAllInstancesDetails = false ; enum class EInstanceDeletionReason : uint8 { NotDeleting,EntryAlreadyRemoved,EntryRemoval,Clearing } ; EInstanceDeletionReason DeletionState = EInstanceDeletionReason::NotDeleting ; # endif TArray<FBodyInstance*> InstanceBodies ; TStructOnScope<FActorComponentInstanceData>)",
    "insertText": "GetComponentInstanceData()"
  },
  {
    "label": "GetComponentChildElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComponentChildElements(TArray<FTypedElementHandle>& OutElementHandles, const bool bAllowCreate = true)"
  },
  {
    "label": "IsHLODRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHLODRelevant()"
  },
  {
    "label": "SendRenderInstanceData_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderInstanceData_Concurrent()"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (FPrimitiveSceneProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "GetRenderMatrix()",
    "kind": "Method",
    "detail": "Function (FMatrix)",
    "insertText": "GetRenderMatrix()"
  },
  {
    "label": "GetBodyInstance()",
    "kind": "Method",
    "detail": "Function (FBodyInstance*)",
    "insertText": "GetBodyInstance(FName BoneName = NAME_None, bool bGetWelded = true, int32 Index = INDEX_NONE)"
  },
  {
    "label": "OnCreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnCreatePhysicsState()"
  },
  {
    "label": "OnDestroyPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDestroyPhysicsState()"
  },
  {
    "label": "CanEditSimulatePhysics()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "CanEditSimulatePhysics()"
  },
  {
    "label": "CalcBounds()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds)",
    "insertText": "CalcBounds(const FTransform& BoundTransform)"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds()"
  },
  {
    "label": "SupportsStaticLighting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsStaticLighting()"
  },
  {
    "label": "GetStreamingBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetStreamingBounds()"
  },
  {
    "label": "GetLightAndShadowMapMemoryUsage()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "GetLightAndShadowMapMemoryUsage(int32& LightMapMemoryUsage, int32& ShadowMapMemoryUsage)"
  },
  {
    "label": "DoCustomNavigableGeometryExport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoCustomNavigableGeometryExport(FNavigableGeometryExport& GeomExport)"
  },
  {
    "label": "LineTraceComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LineTraceComponent(FHitResult& OutHit, const FVector Start, const FVector End, const FCollisionQueryParams& Params)"
  },
  {
    "label": "SweepComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SweepComponent(FHitResult& OutHit, const FVector Start, const FVector End, const FQuat& ShapRotation, const FCollisionShape& CollisionShape, bool bTraceComplex = false)"
  },
  {
    "label": "OverlapComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OverlapComponent(const FVector& Pos, const FQuat& Rot, const FCollisionShape& CollisionShape)"
  },
  {
    "label": "ComponentOverlapComponentImpl()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "ComponentOverlapComponentImpl(class UPrimitiveComponent* PrimComp, const FVector Pos, const FQuat& Quat, const FCollisionQueryParams& Params)"
  },
  {
    "label": "ComponentOverlapMultiImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComponentOverlapMultiImpl(TArray<struct FOverlapResult>& OutOverlaps, const class UWorld* InWorld, const FVector& Pos, const FQuat& Rot, ECollisionChannel TestChannel, const struct FComponentQueryParams& Params, const struct FCollisionObjectQueryParams& ObjectQueryParams = FCollisionObjectQueryParams::DefaultObjectQueryParam)"
  },
  {
    "label": "GetPhysicsObjectById()",
    "kind": "Method",
    "detail": "Function (public : Chaos::FPhysicsObject*)",
    "insertText": "GetPhysicsObjectById(Chaos::FPhysicsObjectId Id)"
  },
  {
    "label": "GetAllPhysicsObjects()",
    "kind": "Method",
    "detail": "Function (TArray<Chaos::FPhysicsObject*>)",
    "insertText": "GetAllPhysicsObjects()"
  },
  {
    "label": "CreateStaticMeshSceneProxy()",
    "kind": "Method",
    "detail": "Function (protected : FPrimitiveSceneProxy*)",
    "insertText": "CreateStaticMeshSceneProxy(Nanite::FMaterialAudit& NaniteMaterials, bool bCreateNanite)"
  },
  {
    "label": "GetNavigationData()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "GetNavigationData(FNavigationRelevantData& Data)"
  },
  {
    "label": "GetNavigationBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetNavigationBounds()"
  },
  {
    "label": "IsNavigationRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNavigationRelevant()"
  },
  {
    "label": "ShouldSkipDirtyAreaOnAddOrRemove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSkipDirtyAreaOnAddOrRemove()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeChainProperty(FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "BeginCacheForCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCacheForCookedPlatformData(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "IsCachedCookedPlatformDataLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCachedCookedPlatformDataLoaded(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "GetTranslatedInstanceSpaceOrigin()",
    "kind": "Method",
    "detail": "Function (# endif FVector)",
    "insertText": "GetTranslatedInstanceSpaceOrigin()"
  },
  {
    "label": "PreApplyComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PreApplyComponentInstanceData(struct FInstancedStaticMeshComponentInstanceData* ComponentInstanceData)"
  },
  {
    "label": "ApplyComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyComponentInstanceData(struct FInstancedStaticMeshComponentInstanceData* ComponentInstanceData)"
  },
  {
    "label": "IsInstanceSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstanceSelected(int32 InInstanceIndex)"
  },
  {
    "label": "SelectInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstance(bool bInSelected, int32 InInstanceIndex, int32 InInstanceCount = 1)"
  },
  {
    "label": "ClearInstanceSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInstanceSelection()"
  },
  {
    "label": "CollectPSOPrecacheData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPSOPrecacheData(const FPSOPrecacheParams& BasePrecachePSOParams, FMaterialInterfacePSOPrecacheParamsList& OutParams)"
  },
  {
    "label": "GetNumRenderInstances()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumRenderInstances()"
  },
  {
    "label": "PropagateLightingScenarioChange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PropagateLightingScenarioChange()"
  },
  {
    "label": "GetInstancesMinMaxScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstancesMinMaxScale(FVector& MinScale, FVector& MaxScale)"
  },
  {
    "label": "OnPostLoadPerInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostLoadPerInstanceData()"
  },
  {
    "label": "PartialNavigationUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartialNavigationUpdate(int32 InstanceIdx)"
  },
  {
    "label": "PartialNavigationUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartialNavigationUpdates(TConstArrayView<FTransform> InstanceTransforms)"
  },
  {
    "label": "GetOrCreateInstanceDataSceneProxy()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FISMCInstanceDataSceneProxy,ESPMode::ThreadSafe>)",
    "insertText": "GetOrCreateInstanceDataSceneProxy()"
  },
  {
    "label": "SetBakedLightingDataChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBakedLightingDataChanged(int32 InInstanceIndex)"
  },
  {
    "label": "SetBakedLightingDataChangedAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBakedLightingDataChangedAll()"
  },
  {
    "label": "InvalidateInstanceDataTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateInstanceDataTracking()"
  },
  {
    "label": "GetUsedMaterialPropertyDesc()",
    "kind": "Method",
    "detail": "Function (FPrimitiveMaterialPropertyDescriptor)",
    "insertText": "GetUsedMaterialPropertyDesc(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "ApplyInheritedPerInstanceData()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "ApplyInheritedPerInstanceData(const UInstancedStaticMeshComponent* InArchetype)"
  },
  {
    "label": "ShouldInheritPerInstanceData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldInheritPerInstanceData(const UInstancedStaticMeshComponent* InArchetype)"
  },
  {
    "label": "ShouldInheritPerInstanceData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldInheritPerInstanceData()"
  },
  {
    "label": "PartialNavigateUpdateForCurrentInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartialNavigateUpdateForCurrentInstances()"
  },
  {
    "label": "SetupNewInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupNewInstanceData(FInstancedStaticMeshInstanceData& InOutNewInstanceData, int32 InInstanceIndex, const FTransform& InInstanceTransform)"
  },
  {
    "label": "UpdateInstanceBodyTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstanceBodyTransform(int32 InstanceIndex, const FTransform& WorldSpaceInstanceTransform, bool bTeleport)"
  },
  {
    "label": "BatchUpdateInstancesTransformsInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransformsInternal(int32 StartInstanceIndex, TArrayView<const FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport)"
  },
  {
    "label": "CalcAndCacheNavigationBounds()",
    "kind": "Method",
    "detail": "Function (FPrimitiveInstanceDataManager PrimitiveInstanceDataManager ; void)",
    "insertText": "CalcAndCacheNavigationBounds()"
  },
  {
    "label": "CreateAllInstanceBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAllInstanceBodies()"
  },
  {
    "label": "ClearAllInstanceBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllInstanceBodies()"
  },
  {
    "label": "FullNavigationUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullNavigationUpdate()"
  },
  {
    "label": "CalcBoundsImpl()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds)",
    "insertText": "CalcBoundsImpl(const FTransform& BoundTransform, bool bForNavigation)"
  },
  {
    "label": "SupportsPartialNavigationUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsPartialNavigationUpdate()"
  },
  {
    "label": "AddInstancesInternal()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "AddInstancesInternal(TConstArrayView<FTransform> InstanceTransforms, bool bShouldReturnIndices, bool bWorldSpace, bool bUpdateNavigation = true)"
  },
  {
    "label": "RemoveInstanceInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInstanceInternal(int32 InstanceIndex, bool InstanceAlreadyRemoved, bool bForceRemoveAtSwap = false, bool bUpdateNavigation = true)"
  },
  {
    "label": "GetInstanceNavigationBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetInstanceNavigationBounds()"
  },
  {
    "label": "GetNavigationPerInstanceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNavigationPerInstanceTransforms(const FBox& AreaBox, TArray<FTransform>& InstanceData)"
  },
  {
    "label": "InitInstanceBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitInstanceBody(int32 InstanceIdx, FBodyInstance* InBodyInstance)"
  },
  {
    "label": "ApplyLightMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLightMapping(FStaticLightingTextureMapping_InstancedStaticMesh* InMapping, const FStaticLightingBuildContext* LightingContext)"
  },
  {
    "label": "CreateHitProxyData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateHitProxyData(TArray<TRefCountPtr<HHitProxy>>& HitProxies)"
  },
  {
    "label": "BuildLegacyRenderData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildLegacyRenderData(FStaticMeshInstanceData& OutData)"
  },
  {
    "label": "SerializeRenderData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeRenderData(FArchive& Ar)"
  },
  {
    "label": "BuildInstanceDataDeltaChangeSetCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInstanceDataDeltaChangeSetCommon(FISMInstanceUpdateChangeSet &ChangeSet)"
  },
  {
    "label": "BuildComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildComponentInstanceData(ERHIFeatureLevel::Type FeatureLevel, FInstanceUpdateComponentDesc& OutData)"
  },
  {
    "label": "CanEditSMInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditSMInstance(const FSMInstanceId& InstanceId)"
  },
  {
    "label": "CanMoveSMInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMoveSMInstance(const FSMInstanceId& InstanceId, const ETypedElementWorldType InWorldType)"
  },
  {
    "label": "GetSMInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSMInstanceTransform(const FSMInstanceId& InstanceId, FTransform& OutInstanceTransform, bool bWorldSpace = false)"
  },
  {
    "label": "SetSMInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSMInstanceTransform(const FSMInstanceId& InstanceId, const FTransform& InstanceTransform, bool bWorldSpace = false, bool bMarkRenderStateDirty = false, bool bTeleport = false)"
  },
  {
    "label": "NotifySMInstanceMovementStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySMInstanceMovementStarted(const FSMInstanceId& InstanceId)"
  },
  {
    "label": "NotifySMInstanceMovementOngoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySMInstanceMovementOngoing(const FSMInstanceId& InstanceId)"
  },
  {
    "label": "NotifySMInstanceMovementEnded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySMInstanceMovementEnded(const FSMInstanceId& InstanceId)"
  },
  {
    "label": "NotifySMInstanceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySMInstanceSelectionChanged(const FSMInstanceId& InstanceId, const bool bIsSelected)"
  },
  {
    "label": "DeleteSMInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteSMInstances(TArrayView<const FSMInstanceId> InstanceIds)"
  },
  {
    "label": "DuplicateSMInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateSMInstances(TArrayView<const FSMInstanceId> InstanceIds, TArray<FSMInstanceId>& OutNewInstanceIds)"
  },
  {
    "label": "DECLARE_HIT_PROXY()",
    "kind": "Method",
    "detail": "Function (FStaticLightingTextureMapping_InstancedStaticMesh ; FInstancedLightMap2D ; FInstancedShadowMap2D ; # if STATS TStatId StatId ; # endif } ; struct HInstancedStaticMeshInstance : public HHitProxy { TObjectPtr<UInstancedStaticMeshComponent> Component ; int32 InstanceIndex ;)",
    "insertText": "DECLARE_HIT_PROXY(ENGINE_API)"
  },
  {
    "label": "HInstancedStaticMeshInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HInstancedStaticMeshInstance(UInstancedStaticMeshComponent* InComponent, int32 InInstanceIndex) : HHitProxy(HPP_World), Component(InComponent), InstanceIndex(InInstanceIndex)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetElementHandle()",
    "kind": "Method",
    "detail": "Function (FTypedElementHandle)",
    "insertText": "GetElementHandle()"
  },
  {
    "label": "GetMouseCursor()",
    "kind": "Method",
    "detail": "Function (EMouseCursor::Type)",
    "insertText": "GetMouseCursor()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FInstancedStaticMeshComponentInstanceData()"
  },
  {
    "label": "FInstancedStaticMeshComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInstancedStaticMeshComponentInstanceData(const UInstancedStaticMeshComponent* InComponent) : FSceneComponentInstanceData(InComponent) , StaticMesh(InComponent->GetStaticMesh())"
  },
  {
    "label": "FInstancedStaticMeshComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FInstancedStaticMeshComponentInstanceData()"
  },
  {
    "label": "ContainsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsData()"
  },
  {
    "label": "UInstancedStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (CastChecked<)",
    "insertText": "UInstancedStaticMeshComponent(Component)->PreApplyComponentInstanceData(this)"
  },
  {
    "label": "ApplyToComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToComponent(Component, CacheApplyPhase)"
  },
  {
    "label": "UInstancedStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (CastChecked<)",
    "insertText": "UInstancedStaticMeshComponent(Component)->ApplyComponentInstanceData(this)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(Collector)"
  },
  {
    "label": "AddReferencedObject()",
    "kind": "Method",
    "detail": "Function (Collector .)",
    "insertText": "AddReferencedObject(StaticMesh)"
  }
]