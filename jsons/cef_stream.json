[
  {
    "label": "CefReadHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefReadHandler"
  },
  {
    "label": "CefStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefStreamReader"
  },
  {
    "label": "CefWriteHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefWriteHandler"
  },
  {
    "label": "CefStreamWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefStreamWriter"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_STREAM_H_ # define CEF_INCLUDE_CEF_STREAM_H_ # include \" include / cef_base . h \" class CefReadHandler : public CefBaseRefCounted { public : size_t)",
    "insertText": "Read(void* ptr, size_t size, size_t n)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Seek(int64 offset, int whence)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Tell()"
  },
  {
    "label": "Eof()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Eof()"
  },
  {
    "label": "MayBlock()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MayBlock()"
  },
  {
    "label": "CreateForFile()",
    "kind": "Method",
    "detail": "Function (} ; class CefStreamReader : public CefBaseRefCounted { public : CefRefPtr<CefStreamReader>)",
    "insertText": "CreateForFile(const CefString& fileName)"
  },
  {
    "label": "CreateForData()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefStreamReader>)",
    "insertText": "CreateForData(void* data, size_t size)"
  },
  {
    "label": "CreateForHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefStreamReader>)",
    "insertText": "CreateForHandler(CefRefPtr<CefReadHandler> handler)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (} ; class CefWriteHandler : public CefBaseRefCounted { public : size_t)",
    "insertText": "Write(const void* ptr, size_t size, size_t n)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Flush()"
  },
  {
    "label": "CreateForHandler()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefStreamWriter>)",
    "insertText": "CreateForHandler(CefRefPtr<CefWriteHandler> handler)"
  }
]