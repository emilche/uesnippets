[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "IEditableBookmarkProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableBookmarkProvider"
  },
  {
    "label": "ILogProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILogProvider"
  },
  {
    "label": "IEditableLogProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableLogProvider"
  },
  {
    "label": "FBookmarksAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBookmarksAnalyzer"
  },
  {
    "label": "FBookmarksAnalyzer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Trace / Analyzer . h \" # include \" Templates / SharedPointer . h \" # include \" ProfilingDebugging / MiscTrace . h \" # include \" Common / PagedArray . h \" namespace TraceServices { class IAnalysisSession ; class IEditableBookmarkProvider ; class ILogProvider ; class IEditableLogProvider ; class FBookmarksAnalyzer : public UE::Trace::IAnalyzer { public :)",
    "insertText": "FBookmarksAnalyzer(IAnalysisSession& Session, IEditableBookmarkProvider& EditableBookmarkProvider, IEditableLogProvider* InEditableLogProvider)"
  },
  {
    "label": "OnAnalysisBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnalysisBegin(const FOnAnalysisContext& Context)"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEvent(uint16 RouteId, EStyle Style, const FOnEventContext& Context)"
  },
  {
    "label": "uint64()",
    "kind": "Method",
    "detail": "Function (private : enum : uint16 { RouteId_BookmarkSpec,RouteId_Bookmark,} ; IAnalysisSession& Session ; IEditableBookmarkProvider& EditableBookmarkProvider ; IEditableLogProvider* EditableLogProvider ; uint64 BookmarkLogCategoryId =)",
    "insertText": "uint64(-1)"
  }
]