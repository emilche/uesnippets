[
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "FPacketWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Storage / BlobHandle . h \" # include \" Packet . h \" # include \" PacketHandle . h \" # include \" Storage / ChunkedBufferWriter . h \" class FPacketWriter { public :)",
    "insertText": "FPacketWriter(FBlobHandle InBundleHandle, FBlobHandle InPacketHandle)"
  },
  {
    "label": "FPacketWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPacketWriter(const FPacketWriter&)"
  },
  {
    "label": "FPacketWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPacketWriter()"
  },
  {
    "label": "GetLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetLength()"
  },
  {
    "label": "AddImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddImport(FBlobHandle Import)"
  },
  {
    "label": "GetImportCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetImportCount()"
  },
  {
    "label": "GetImport()",
    "kind": "Method",
    "detail": "Function (FBlobHandle)",
    "insertText": "GetImport(int ImportIdx)"
  },
  {
    "label": "GetOutputBuffer()",
    "kind": "Method",
    "detail": "Function (FMutableMemoryView)",
    "insertText": "GetOutputBuffer(size_t UsedSize, size_t DesiredSize)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(size_t Size)"
  },
  {
    "label": "CompleteBlob()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CompleteBlob(const FBlobType& Type)"
  },
  {
    "label": "GetExportCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetExportCount()"
  },
  {
    "label": "GetExport()",
    "kind": "Method",
    "detail": "Function (FBlob)",
    "insertText": "GetExport(int ExportIdx)"
  },
  {
    "label": "CompletePacket()",
    "kind": "Method",
    "detail": "Function (FPacket)",
    "insertText": "CompletePacket()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPacketWriter&)",
    "insertText": "operator(const FPacketWriter&)"
  },
  {
    "label": "GetOutputBufferInternal()",
    "kind": "Method",
    "detail": "Function (private : FBlobHandle BundleHandle ; FBlobHandle PacketHandle ; FSharedBuffer Buffer ; uint8* BufferBasePtr ; size_t Length ; size_t NextBlobLength ; TArray<int32> NextBlobImports ; TArray<FBlobType> Types ; TArray<uint32> ImportOffsets ; FChunkedBufferWriter ImportWriter ; TArray<FBlobHandle> ImportHandles ; TMap<FBlobHandle,int> ImportMap ; TArray<uint32> ExportOffsets ; FMutableMemoryView)",
    "insertText": "GetOutputBufferInternal(size_t UsedSize, size_t DesiredSize)"
  },
  {
    "label": "GetOutputSpanAndAdvance()",
    "kind": "Method",
    "detail": "Function (uint8*)",
    "insertText": "GetOutputSpanAndAdvance(size_t Length)"
  },
  {
    "label": "FindOrAddType()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddType(FBlobType Type)"
  },
  {
    "label": "FindOrAddImport()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddImport(const FBlobHandle& Handle)"
  },
  {
    "label": "WriteTypeTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteTypeTable()"
  },
  {
    "label": "WriteImportTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteImportTable()"
  },
  {
    "label": "WriteExportTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteExportTable()"
  },
  {
    "label": "Align()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Align(size_t Offset)"
  }
]