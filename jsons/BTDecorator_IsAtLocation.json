[
  {
    "label": "UBTDecorator_IsAtLocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator_IsAtLocation"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AITypes . h \" # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" DataProviders / AIDataProvider . h \" # include \" BehaviorTree / Decorators / BTDecorator_BlackboardBase . h \" # include \" BehaviorTree / ValueOrBBKey . h \" # include \" BTDecorator_IsAtLocation . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category = Condition, meta = (ClampMin = \"0.0\", EditCondition = \"!bUseParametrizedRadius\"))"
  },
  {
    "label": "CalculateRawConditionValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CalculateRawConditionValue(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "GetNodeIconName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FName)",
    "insertText": "GetNodeIconName()"
  },
  {
    "label": "GetGeometricDistanceSquared()",
    "kind": "Method",
    "detail": "Function (# endif protected : FVector::FReal)",
    "insertText": "GetGeometricDistanceSquared(const FVector& A, const FVector& B)"
  }
]