[
  {
    "label": "MacFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MacFile"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(OS_MACOSX)"
  },
  {
    "label": "GetFromPath()",
    "kind": "Method",
    "detail": "Function (public : enum { FS_HFS = 0,FS_UFS,FS_NFS } ; MacFile*)",
    "insertText": "GetFromPath(const char * path, OSErr * error)"
  },
  {
    "label": "GetFromFSRef()",
    "kind": "Method",
    "detail": "Function (MacFile*)",
    "insertText": "GetFromFSRef(const FSRef * ref, OSErr * error)"
  },
  {
    "label": "CreateFromPath()",
    "kind": "Method",
    "detail": "Function (MacFile*)",
    "insertText": "CreateFromPath(const char * path, Boolean isDirectory, OSErr * error)"
  },
  {
    "label": "CreateFromDirAndName()",
    "kind": "Method",
    "detail": "Function (MacFile*)",
    "insertText": "CreateFromDirAndName(const FSRef & dir, CFStringRef name, Boolean isDirectory, OSErr * outErr)"
  },
  {
    "label": "MacFile()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MacFile()"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "Delete()"
  },
  {
    "label": "GetFileSystemType()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetFileSystemType()"
  },
  {
    "label": "IsDir()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "IsDir()"
  },
  {
    "label": "GetFInfo()",
    "kind": "Method",
    "detail": "Function (const FInfo*)",
    "insertText": "GetFInfo()"
  },
  {
    "label": "SetFInfo()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SetFInfo(const FInfo *)"
  },
  {
    "label": "SwapFInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapFInfo(FInfo *)"
  },
  {
    "label": "GetFXInfo()",
    "kind": "Method",
    "detail": "Function (const FXInfo*)",
    "insertText": "GetFXInfo()"
  },
  {
    "label": "SetFXInfo()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SetFXInfo(const FXInfo *)"
  },
  {
    "label": "SwapFXInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwapFXInfo(FXInfo *)"
  },
  {
    "label": "IsHidden()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "IsHidden()"
  },
  {
    "label": "CreateBundle()",
    "kind": "Method",
    "detail": "Function (CFBundleRef)",
    "insertText": "CreateBundle()"
  },
  {
    "label": "IsUnbundledApp()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "IsUnbundledApp()"
  },
  {
    "label": "IsBundledApp()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "IsBundledApp()"
  },
  {
    "label": "IsLocked()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "IsLocked()"
  },
  {
    "label": "SetLocked()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SetLocked(Boolean lock)"
  },
  {
    "label": "GetTypeAndCreator()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "GetTypeAndCreator(UInt32 * type, UInt32 * creator)"
  },
  {
    "label": "SetTypeAndCreator()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SetTypeAndCreator(UInt32 type, UInt32 creator)"
  },
  {
    "label": "GetComment()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetComment(int *bufferLength)"
  },
  {
    "label": "SetComment()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SetComment(char * buffer, int bufferLength)"
  },
  {
    "label": "HasDataFork()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "HasDataFork()"
  },
  {
    "label": "GetDataForkSize()",
    "kind": "Method",
    "detail": "Function (ByteCount)",
    "insertText": "GetDataForkSize()"
  },
  {
    "label": "OpenDataFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "OpenDataFork(SInt8 permissions)"
  },
  {
    "label": "ReadDataFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "ReadDataFork(ByteCount requestCount, void * buffer, ByteCount * actualCount)"
  },
  {
    "label": "WriteDataFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "WriteDataFork(ByteCount requestCount, const void * buffer, ByteCount * actualCount)"
  },
  {
    "label": "SetDataForkPosition()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SetDataForkPosition(ByteCount offset)"
  },
  {
    "label": "CloseDataFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "CloseDataFork()"
  },
  {
    "label": "HasResourceFork()",
    "kind": "Method",
    "detail": "Function (Boolean)",
    "insertText": "HasResourceFork()"
  },
  {
    "label": "GetResourceForkSize()",
    "kind": "Method",
    "detail": "Function (ByteCount)",
    "insertText": "GetResourceForkSize()"
  },
  {
    "label": "OpenResourceFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "OpenResourceFork(SInt8 permissions)"
  },
  {
    "label": "ReadResourceFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "ReadResourceFork(ByteCount requestCount, void * buffer, ByteCount * actualCount)"
  },
  {
    "label": "WriteResourceFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "WriteResourceFork(ByteCount requestCount, const void * buffer, ByteCount * actualCount)"
  },
  {
    "label": "CloseResourceFork()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "CloseResourceFork()"
  },
  {
    "label": "GetPrintableFullPath()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetPrintableFullPath()"
  },
  {
    "label": "GetFSRef()",
    "kind": "Method",
    "detail": "Function (const FSRef*)",
    "insertText": "GetFSRef(FSRef * spec)"
  },
  {
    "label": "MacFile()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "MacFile(FSRef * file)"
  },
  {
    "label": "LoadCatalogInfo()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "LoadCatalogInfo()"
  },
  {
    "label": "SaveCatalogInfo()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "SaveCatalogInfo()"
  },
  {
    "label": "PreloadComment()",
    "kind": "Method",
    "detail": "Function (OSErr)",
    "insertText": "PreloadComment()"
  },
  {
    "label": "GetSystemFileSeparator()",
    "kind": "Method",
    "detail": "Function (char* fullPath ; FSRef* file ; FSCatalogInfo fileInfo ; FSCatalogInfoBitmap changedInfoBitmap ; P4IORefNum dataForkRef ; P4IORefNum rsrcForkRef ; char* comment ; short commentLength ; } ; UniChar)",
    "insertText": "GetSystemFileSeparator()"
  },
  {
    "label": "GetSystemPathStyle()",
    "kind": "Method",
    "detail": "Function (CFURLPathStyle)",
    "insertText": "GetSystemPathStyle()"
  },
  {
    "label": "FSRefToPath()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "FSRefToPath(const FSRef * ref)"
  }
]