[
  {
    "label": "UWorldPartitionLevelStreamingDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionLevelStreamingDynamic"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPtr . h \" # include \" Engine / LevelStreaming . h \" # include \" Engine / LevelStreamingDynamic . h \" # include \" WorldPartition / WorldPartition . h \" # include \" WorldPartition / WorldPartitionRuntimeLevelStreamingCell . h \" # if WITH_EDITOR # include \" WorldPartition / WorldPartitionLevelHelper . h \" # endif # include \" WorldPartitionLevelStreamingDynamic . generated . h \")",
    "insertText": "UCLASS(NotPlaceable, NotBlueprintable, HideDropdown, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() ENGINE_API void Load()"
  },
  {
    "label": "Unload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unload()"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate()"
  },
  {
    "label": "Deactivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deactivate()"
  },
  {
    "label": "GetStreamingWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetStreamingWorld()"
  },
  {
    "label": "SetShouldBeAlwaysLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldBeAlwaysLoaded(bool bInShouldBeAlwaysLoaded)"
  },
  {
    "label": "GetWorldPartitionRuntimeCell()",
    "kind": "Method",
    "detail": "Function (bShouldBeAlwaysLoaded = bInShouldBeAlwaysLoaded ; } const UWorldPartitionRuntimeCell*)",
    "insertText": "GetWorldPartitionRuntimeCell()"
  },
  {
    "label": "ShouldBeAlwaysLoaded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldBeAlwaysLoaded()"
  },
  {
    "label": "ShouldRequireFullVisibilityToRender()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRequireFullVisibilityToRender()"
  },
  {
    "label": "GetWorldPartitionCell()",
    "kind": "Method",
    "detail": "Function (const IWorldPartitionCell*)",
    "insertText": "GetWorldPartitionCell()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (} # if ! WITH_EDITOR void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "Initialize(const UWorldPartitionRuntimeLevelStreamingCell& InCell)"
  },
  {
    "label": "SetLevelTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelTransform(const FTransform& InLevelTransform)"
  },
  {
    "label": "GetOuterWorldPartition()",
    "kind": "Method",
    "detail": "Function (const FSoftObjectPath&)",
    "insertText": "GetOuterWorldPartition()"
  },
  {
    "label": "CanReplicateStreamingStatus()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanReplicateStreamingStatus()"
  },
  {
    "label": "UnloadFromEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadFromEditor(UWorldPartitionLevelStreamingDynamic* InLevelStreaming)"
  },
  {
    "label": "RequestLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequestLevel(UWorld* PersistentWorld, bool bAllowLevelLoadRequests, EReqLevelBlock BlockPolicy)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "GetFolderRootObject()",
    "kind": "Method",
    "detail": "Function (TOptional<FFolder::FRootObject>)",
    "insertText": "GetFolderRootObject()"
  },
  {
    "label": "GetLoadSucceeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLoadSucceeded()"
  },
  {
    "label": "CreateRuntimeLevel()",
    "kind": "Method",
    "detail": "Function (bShouldPerformStandardLevelLoading = bInShouldPerformStandardLevelLoading ; } private : void)",
    "insertText": "CreateRuntimeLevel()"
  },
  {
    "label": "IssueLoadRequests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IssueLoadRequests()"
  },
  {
    "label": "FinalizeRuntimeLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeRuntimeLevel()"
  },
  {
    "label": "OnCleanupLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCleanupLevel()"
  },
  {
    "label": "OnCurrentStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurrentStateChanged(ELevelStreamingState InPrevState, ELevelStreamingState InNewState)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UWorld* OuterWorld, const TArray<FWorldPartitionRuntimeCellObjectMapping>& InPackages)"
  },
  {
    "label": "UpdateShouldSkipMakingVisibilityTransactionRequest()",
    "kind": "Method",
    "detail": "Function (# endif FDelegateHandle OnCleanupLevelDelegateHandle ; bool bLoadRequestInProgress ; bool bLoadSucceeded ; FWorldPartitionLevelHelper::FPackageReferencer PackageReferencer ; # endif private : void)",
    "insertText": "UpdateShouldSkipMakingVisibilityTransactionRequest()"
  },
  {
    "label": "CanChangeVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChangeVisibility(bool bMakeVisible)"
  }
]