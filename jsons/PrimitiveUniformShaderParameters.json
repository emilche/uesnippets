[
  {
    "label": "FIdentityPrimitiveUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIdentityPrimitiveUniformBuffer"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / LargeWorldRenderPosition . h \" # include \" Engine / EngineTypes . h \" # include \" SceneTypes . h \" # include \" RenderResource . h \" # include \" ShaderParameters . h \" # include \" UniformBuffer . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_3 # include \" InstanceUniformShaderParameters . h \" # include \" LightmapUniformShaderParameters . h \" # include \" UnifiedBuffer . h \" # endif)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FPrimitiveUniformShaderParameters,ENGINE_API) SHADER_PARAMETER(uint32, Flags) SHADER_PARAMETER(uint32, InstanceSceneDataOffset) SHADER_PARAMETER(uint32, NumInstanceSceneDataEntries) SHADER_PARAMETER(int32, SingleCaptureIndex) SHADER_PARAMETER(FVector3f, PositionHigh) SHADER_PARAMETER(uint32, PrimitiveComponentId) SHADER_PARAMETER(FMatrix44f, LocalToRelativeWorld) SHADER_PARAMETER(FMatrix44f, RelativeWorldToLocal) SHADER_PARAMETER(FMatrix44f, PreviousLocalToRelativeWorld) SHADER_PARAMETER(FMatrix44f, PreviousRelativeWorldToLocal) SHADER_PARAMETER(FMatrix44f, WorldToPreviousWorld) SHADER_PARAMETER_EX(FVector3f, InvNonUniformScale, EShaderPrecisionModifier::Half) SHADER_PARAMETER(float, ObjectBoundsX) SHADER_PARAMETER(FVector4f, ObjectWorldPositionHighAndRadius) SHADER_PARAMETER(FVector3f, ObjectWorldPositionLow) SHADER_PARAMETER(float, MinMaterialDisplacement) SHADER_PARAMETER(FVector3f, ActorWorldPositionHigh) SHADER_PARAMETER(float, MaxMaterialDisplacement) SHADER_PARAMETER(FVector3f, ActorWorldPositionLow) SHADER_PARAMETER(uint32, LightmapUVIndex) SHADER_PARAMETER_EX(FVector3f, ObjectOrientation, EShaderPrecisionModifier::Half) SHADER_PARAMETER(uint32, LightmapDataIndex) SHADER_PARAMETER_EX(FVector4f, NonUniformScale, EShaderPrecisionModifier::Half) SHADER_PARAMETER(FVector3f, PreSkinnedLocalBoundsMin) SHADER_PARAMETER(uint32, NaniteResourceID) SHADER_PARAMETER(FVector3f, PreSkinnedLocalBoundsMax) SHADER_PARAMETER(uint32, NaniteHierarchyOffset) SHADER_PARAMETER(FVector3f, LocalObjectBoundsMin) SHADER_PARAMETER(float, ObjectBoundsY) SHADER_PARAMETER(FVector3f, LocalObjectBoundsMax) SHADER_PARAMETER(float, ObjectBoundsZ) SHADER_PARAMETER(FVector3f, InstanceLocalBoundsCenter) SHADER_PARAMETER(uint32, InstancePayloadDataOffset) SHADER_PARAMETER(FVector3f, InstanceLocalBoundsExtent) SHADER_PARAMETER(uint32, InstancePayloadDataStride) SHADER_PARAMETER(uint32, InstancePayloadExtensionSize) SHADER_PARAMETER(FVector2f, WireframeAndPrimitiveColor) SHADER_PARAMETER(uint32, PackedNaniteFlags) SHADER_PARAMETER(int32, PersistentPrimitiveIndex) SHADER_PARAMETER(FVector2f, InstanceDrawDistanceMinMaxSquared) SHADER_PARAMETER(float, InstanceWPODisableDistanceSquared) SHADER_PARAMETER(float, PixelProgrammableDistanceSquared) SHADER_PARAMETER(float, MaterialDisplacementFadeOutSize) SHADER_PARAMETER(FUintVector2, MeshPaintTextureDescriptor) SHADER_PARAMETER(uint32, NaniteRayTracingDataOffset) SHADER_PARAMETER(float, MaxWPOExtent) SHADER_PARAMETER(uint32, CustomStencilValueAndMask) SHADER_PARAMETER(uint32, VisibilityFlags) SHADER_PARAMETER_ARRAY(FVector4f, CustomPrimitiveData, [FCustomPrimitiveData::NumCustomPrimitiveDataFloat4s]) END_GLOBAL_SHADER_PARAMETER_STRUCT() ENGINE_API TUniformBufferRef<FPrimitiveUniformShaderParameters> CreatePrimitiveUniformBufferImmediate( const FMatrix& LocalToWorld, const FBoxSphereBounds& WorldBounds, const FBoxSphereBounds& LocalBounds, const FBoxSphereBounds& PreSkinnedLocalBounds, bool bReceivesDecals, bool bOutputVelocity)"
  },
  {
    "label": "GetIdentityPrimitiveParameters()",
    "kind": "Method",
    "detail": "Function (FPrimitiveUniformShaderParameters)",
    "insertText": "GetIdentityPrimitiveParameters()"
  },
  {
    "label": "InitContents()",
    "kind": "Method",
    "detail": "Function (class FIdentityPrimitiveUniformBuffer : public TUniformBuffer<FPrimitiveUniformShaderParameters> { public : void)",
    "insertText": "InitContents()"
  },
  {
    "label": "SetContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContents(FRenderResource::GetImmediateCommandList(), GetIdentityPrimitiveParameters())"
  }
]