[
  {
    "label": "SDL_BlitMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_BlitMap"
  },
  {
    "label": "SDL_Surface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Surface"
  },
  {
    "label": "SDL_Surface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Surface"
  },
  {
    "label": "SDL_Surface",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_Surface"
  },
  {
    "label": "SDL_CreateRGBSurface()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_CreateRGBSurface(Uint32 flags, int width, int height, int depth,\n     Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)"
  },
  {
    "label": "SDL_CreateRGBSurfaceWithFormat()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_CreateRGBSurfaceWithFormat(Uint32 flags, int width, int height, int depth, Uint32 format)"
  },
  {
    "label": "SDL_CreateRGBSurfaceFrom()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_CreateRGBSurfaceFrom(void *pixels,\n                                                              int width,\n                                                              int height,\n                                                              int depth,\n                                                              int pitch,\n                                                              Uint32 Rmask,\n                                                              Uint32 Gmask,\n                                                              Uint32 Bmask,\n                                                              Uint32 Amask)"
  },
  {
    "label": "SDL_CreateRGBSurfaceWithFormatFrom()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_CreateRGBSurfaceWithFormatFrom(void *pixels, int width, int height, int depth, int pitch, Uint32 format)"
  },
  {
    "label": "SDL_FreeSurface()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_FreeSurface(SDL_Surface * surface)"
  },
  {
    "label": "SDL_SetSurfacePalette()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetSurfacePalette(SDL_Surface * surface,\n                                                  SDL_Palette * palette)"
  },
  {
    "label": "SDL_LockSurface()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_LockSurface(SDL_Surface * surface)"
  },
  {
    "label": "SDL_UnlockSurface()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_UnlockSurface(SDL_Surface * surface)"
  },
  {
    "label": "SDL_LoadBMP_RW()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_LoadBMP_RW(SDL_RWops * src,\n                                                    int freesrc)"
  },
  {
    "label": "SDL_SaveBMP_RW()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SaveBMP_RW(SDL_Surface * surface, SDL_RWops * dst, int freedst)"
  },
  {
    "label": "SDL_SetSurfaceRLE()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetSurfaceRLE(SDL_Surface * surface,\n                                              int flag)"
  },
  {
    "label": "SDL_HasSurfaceRLE()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HasSurfaceRLE(SDL_Surface * surface)"
  },
  {
    "label": "SDL_SetColorKey()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetColorKey(SDL_Surface * surface,\n                                            int flag, Uint32 key)"
  },
  {
    "label": "SDL_HasColorKey()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_HasColorKey(SDL_Surface * surface)"
  },
  {
    "label": "SDL_GetColorKey()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetColorKey(SDL_Surface * surface,\n                                            Uint32 * key)"
  },
  {
    "label": "SDL_SetSurfaceColorMod()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetSurfaceColorMod(SDL_Surface * surface,\n                                                   Uint8 r, Uint8 g, Uint8 b)"
  },
  {
    "label": "SDL_GetSurfaceColorMod()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetSurfaceColorMod(SDL_Surface * surface,\n                                                   Uint8 * r, Uint8 * g,\n                                                   Uint8 * b)"
  },
  {
    "label": "SDL_SetSurfaceAlphaMod()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetSurfaceAlphaMod(SDL_Surface * surface,\n                                                   Uint8 alpha)"
  },
  {
    "label": "SDL_GetSurfaceAlphaMod()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetSurfaceAlphaMod(SDL_Surface * surface,\n                                                   Uint8 * alpha)"
  },
  {
    "label": "SDL_SetSurfaceBlendMode()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetSurfaceBlendMode(SDL_Surface * surface,\n                                                    SDL_BlendMode blendMode)"
  },
  {
    "label": "SDL_GetSurfaceBlendMode()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetSurfaceBlendMode(SDL_Surface * surface,\n                                                    SDL_BlendMode *blendMode)"
  },
  {
    "label": "SDL_SetClipRect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetClipRect(SDL_Surface * surface,\n                                                 const SDL_Rect * rect)"
  },
  {
    "label": "SDL_GetClipRect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetClipRect(SDL_Surface * surface,\n                                             SDL_Rect * rect)"
  },
  {
    "label": "SDL_DuplicateSurface()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_DuplicateSurface(SDL_Surface * surface)"
  },
  {
    "label": "SDL_ConvertSurface()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_ConvertSurface(SDL_Surface * src, const SDL_PixelFormat * fmt, Uint32 flags)"
  },
  {
    "label": "SDL_ConvertSurfaceFormat()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_ConvertSurfaceFormat(SDL_Surface * src, Uint32 pixel_format, Uint32 flags)"
  },
  {
    "label": "SDL_ConvertPixels()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_ConvertPixels(int width, int height,\n                                              Uint32 src_format,\n                                              const void * src, int src_pitch,\n                                              Uint32 dst_format,\n                                              void * dst, int dst_pitch)"
  },
  {
    "label": "SDL_PremultiplyAlpha()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_PremultiplyAlpha(int width, int height,\n                                                 Uint32 src_format,\n                                                 const void * src, int src_pitch,\n                                                 Uint32 dst_format,\n                                                 void * dst, int dst_pitch)"
  },
  {
    "label": "SDL_FillRect()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_FillRect(SDL_Surface * dst, const SDL_Rect * rect, Uint32 color)"
  },
  {
    "label": "SDL_FillRects()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_FillRects(SDL_Surface * dst, const SDL_Rect * rects, int count, Uint32 color)"
  },
  {
    "label": "SDL_UpperBlit()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_UpperBlit(SDL_Surface * src, const SDL_Rect * srcrect,\n     SDL_Surface * dst, SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_LowerBlit()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_LowerBlit(SDL_Surface * src, SDL_Rect * srcrect,\n     SDL_Surface * dst, SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_SoftStretch()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SoftStretch(SDL_Surface * src,\n                                            const SDL_Rect * srcrect,\n                                            SDL_Surface * dst,\n                                            const SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_SoftStretchLinear()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SoftStretchLinear(SDL_Surface * src,\n                                            const SDL_Rect * srcrect,\n                                            SDL_Surface * dst,\n                                            const SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_UpperBlitScaled()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_UpperBlitScaled(SDL_Surface * src, const SDL_Rect * srcrect,\n    SDL_Surface * dst, SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_LowerBlitScaled()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_LowerBlitScaled(SDL_Surface * src, SDL_Rect * srcrect,\n    SDL_Surface * dst, SDL_Rect * dstrect)"
  },
  {
    "label": "SDL_SetYUVConversionMode()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_SetYUVConversionMode(SDL_YUV_CONVERSION_MODE mode)"
  },
  {
    "label": "SDL_GetYUVConversionMode()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetYUVConversionMode(void)"
  },
  {
    "label": "SDL_GetYUVConversionModeForResolution()",
    "kind": "Method",
    "detail": "Function (SDLCALL)",
    "insertText": "SDL_GetYUVConversionModeForResolution(int width, int height)"
  }
]