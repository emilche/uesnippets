[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FClothTetherData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothTetherData"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "GenerateTethers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateTethers(\n\t\tconst TConstArrayView<FVector3f>& Points,  // Reference pose\n\t\tconst TConstArrayView<uint32>& Indices,  // Triangle mesh\n\t\tconst TConstArrayView<float>& MaxDistances,  // Mask for sorting the kinematic from the dynamic points\n\t\tbool bUseGeodesicDistance)"
  },
  {
    "label": "GenerateTethers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateTethers(\n\t\tconst TConstArrayView<FVector3f>& Points,  // Reference pose\n\t\tconst TConstArrayView<uint32>& Indices,  // Triangle mesh\n\t\tconst TSet<int32>& KinematicNodes,  // kinematic indices\n\t\tbool bUseGeodesicDistance)"
  },
  {
    "label": "GenerateTethers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateTethers(\n\t\tTArray<TArray<TPair<float, int32>>>&& PerDynamicNodeTethers)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Serialize(FArchive& Ar)"
  }
]