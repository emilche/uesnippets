[
  {
    "label": "RTC_OBJC_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_OBJC_TYPE"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (# import<Foundation / Foundation . h> # import \" RTCCertificate . h \" # import \" RTCCryptoOptions . h \" # import \" RTCMacros . h \" @ class)",
    "insertText": "RTC_OBJC_TYPE(RTCIceServer)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCIceTransportPolicy)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCIceTransportPolicyNone,RTCIceTransportPolicyRelay,RTCIceTransportPolicyNoHost,RTCIceTransportPolicyAll } ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCBundlePolicy)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCBundlePolicyBalanced,RTCBundlePolicyMaxCompat,RTCBundlePolicyMaxBundle } ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCRtcpMuxPolicy)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCRtcpMuxPolicyNegotiate,RTCRtcpMuxPolicyRequire } ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCTcpCandidatePolicy)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCTcpCandidatePolicyEnabled,RTCTcpCandidatePolicyDisabled } ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCCandidateNetworkPolicy)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCCandidateNetworkPolicyAll,RTCCandidateNetworkPolicyLowCost } ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCContinualGatheringPolicy)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCContinualGatheringPolicyGatherOnce,RTCContinualGatheringPolicyGatherContinually } ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCEncryptionKeyType)"
  },
  {
    "label": "NS_ENUM()",
    "kind": "Method",
    "detail": "Function (RTCEncryptionKeyTypeRSA,RTCEncryptionKeyTypeECDSA,} ; typedef)",
    "insertText": "NS_ENUM(NSInteger, RTCSdpSemantics)"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (RTCSdpSemanticsPlanB,RTCSdpSemanticsUnifiedPlan,} ; NS_ASSUME_NONNULL_BEGIN RTC_OBJC_EXPORT @ interface)",
    "insertText": "RTC_OBJC_TYPE(RTCConfiguration) : NSObject @property(nonatomic, assign)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, copy) NSArray<RTC_OBJC_TYPE(RTCIceServer)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, nullable) RTC_OBJC_TYPE(RTCCertificate)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, assign)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, copy, nullable)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, nullable) RTC_OBJC_TYPE(RTCCryptoOptions)"
  },
  {
    "label": "property()",
    "kind": "Method",
    "detail": "Function (@)",
    "insertText": "property(nonatomic, nullable, copy)"
  }
]