[
  {
    "label": "_cef_cookie_visitor_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cookie_visitor_t"
  },
  {
    "label": "_cef_delete_cookies_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_delete_cookies_callback_t"
  },
  {
    "label": "_cef_set_cookie_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_set_cookie_callback_t"
  },
  {
    "label": "_cef_cookie_manager_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cookie_manager_t"
  },
  {
    "label": "_cef_cookie_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_cookie_t"
  },
  {
    "label": "_cef_completion_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_completion_callback_t"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_COOKIE_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_COOKIE_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_callback_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_cookie_visitor_t ; struct _cef_delete_cookies_callback_t ; struct _cef_set_cookie_callback_t ; typedef struct _cef_cookie_manager_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* visit_all_cookies)(struct _cef_cookie_manager_t* self, struct _cef_cookie_visitor_t* visitor)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* visit_url_cookies)(struct _cef_cookie_manager_t* self, const cef_string_t* url, int includeHttpOnly, struct _cef_cookie_visitor_t* visitor)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* set_cookie)(struct _cef_cookie_manager_t* self, const cef_string_t* url, const struct _cef_cookie_t* cookie, struct _cef_set_cookie_callback_t* callback)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* delete_cookies)( struct _cef_cookie_manager_t* self, const cef_string_t* url, const cef_string_t* cookie_name, struct _cef_delete_cookies_callback_t* callback)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* flush_store)(struct _cef_cookie_manager_t* self, struct _cef_completion_callback_t* callback)"
  },
  {
    "label": "cef_cookie_manager_get_global_manager()",
    "kind": "Method",
    "detail": "Function (} cef_cookie_manager_t ; CEF_EXPORT cef_cookie_manager_t*)",
    "insertText": "cef_cookie_manager_get_global_manager(struct _cef_completion_callback_t* callback)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef struct _cef_cookie_visitor_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* visit)(struct _cef_cookie_visitor_t* self, const struct _cef_cookie_t* cookie, int count, int total, int* deleteCookie)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_cookie_visitor_t ; typedef struct _cef_set_cookie_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_complete)(struct _cef_set_cookie_callback_t* self, int success)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_set_cookie_callback_t ; typedef struct _cef_delete_cookies_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_complete)(struct _cef_delete_cookies_callback_t* self, int num_deleted)"
  }
]