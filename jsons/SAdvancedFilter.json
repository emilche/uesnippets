[
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FFilterConfigurator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfigurator"
  },
  {
    "label": "SFilterConfigurator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterConfigurator"
  },
  {
    "label": "TRACEINSIGHTSCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSCORE_API"
  },
  {
    "label": "SAdvancedFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STreeView . h \" # include \" InsightsCore / Filter / ViewModels / FilterConfiguratorNode . h \" # include \" InsightsCore / Filter / ViewModels / Filters . h \" class SDockTab ; namespace UE::Insights { class FFilterConfigurator ; class SFilterConfigurator ; class SAdvancedFilter : public SCompoundWidget { public :)",
    "insertText": "SAdvancedFilter()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SAdvancedFilter)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FFilterConfigurator> InFilterConfiguratorViewModel)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetParentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentTab(const TSharedPtr<SDockTab> InTab)"
  },
  {
    "label": "GetParentTab()",
    "kind": "Method",
    "detail": "Function (ParentTab = InTab ; } const TWeakPtr<SDockTab>)",
    "insertText": "GetParentTab()"
  },
  {
    "label": "InitCommandList()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitCommandList()"
  },
  {
    "label": "OK_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OK_OnClicked()"
  },
  {
    "label": "Cancel_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Cancel_OnClicked()"
  }
]