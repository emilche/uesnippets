[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UPhysicsAssetEditorSkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAssetEditorSkeletalMeshComponent"
  },
  {
    "label": "FPhysicsAssetEditorSharedData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAssetEditorSharedData"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" PhysicsEngine / ShapeElem . h \" # include \" Animation / DebugSkelMeshComponent . h \" # include \" PhysicsAssetEditorSkeletalMeshComponent . generated . h \" class FPrimitiveDrawInterface ; class UMaterialInterface ; class UMaterialInstanceDynamic ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "CreatePreviewInstance()",
    "kind": "Method",
    "detail": "Function (TArray<FTransform> AnimationSpaceBases ; TObjectPtr<UAnimPreviewInstance>)",
    "insertText": "CreatePreviewInstance()"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (FPrimitiveSceneProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "AddImpulseAtLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddImpulseAtLocation(FVector Impulse, FVector Location, FName BoneName = NAME_None)"
  },
  {
    "label": "ShouldCreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCreatePhysicsState()"
  },
  {
    "label": "RefreshBoneTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBoneTransforms(FActorComponentTickFunction* TickFunction = nullptr)"
  },
  {
    "label": "DebugDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugDraw(const FSceneView* View, FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "GetPrimitiveTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetPrimitiveTransform(const FTransform& BoneTM, const int32 BodyIndex, const EAggCollisionShape::Type PrimType, const int32 PrimIndex, const float Scale)"
  },
  {
    "label": "GetPrimitiveColor()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "GetPrimitiveColor(const int32 BodyIndex, const EAggCollisionShape::Type PrimitiveType, const int32 PrimitiveIndex)"
  },
  {
    "label": "GetPrimitiveMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetPrimitiveMaterial(const int32 BodyIndex, const EAggCollisionShape::Type PrimitiveType, const int32 PrimitiveIndex)"
  },
  {
    "label": "Grab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Grab(FName InBoneName, const FVector& Location, const FRotator& Rotation, bool bRotationConstrained)"
  },
  {
    "label": "Ungrab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Ungrab()"
  },
  {
    "label": "UpdateHandleTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHandleTransform(const FTransform& NewTransform)"
  },
  {
    "label": "UpdateDriveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDriveSettings(bool bLinearSoft, float LinearStiffness, float LinearDamping)"
  },
  {
    "label": "CreateSimulationFloor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSimulationFloor(FBodyInstance* FloorBodyInstance, const FTransform& Transform)"
  },
  {
    "label": "CanOverrideCollisionProfile()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "CanOverrideCollisionProfile()"
  }
]