[
  {
    "label": "Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Image"
  },
  {
    "label": "NormalMapFilter",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "NormalMapFilter"
  },
  {
    "label": "createNormalMap()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_IMAGE_NORMALMAP_H # define NV_IMAGE_NORMALMAP_H # include<nvmath / Vector . h> # include<nvimage / nvimage . h> # include<nvimage / FloatImage . h> namespace nv { class Image ; enum NormalMapFilter { NormalMapFilter_Sobel3x3,NormalMapFilter_Sobel5x5,NormalMapFilter_Sobel7x7,NormalMapFilter_Sobel9x9,} ; FloatImage*)",
    "insertText": "createNormalMap(const Image * img, FloatImage::WrapMode wm, Vector4::Arg heightWeights, NormalMapFilter filter = NormalMapFilter_Sobel3x3)"
  },
  {
    "label": "createNormalMap()",
    "kind": "Method",
    "detail": "Function (FloatImage*)",
    "insertText": "createNormalMap(const Image * img, FloatImage::WrapMode wm, Vector4::Arg heightWeights, Vector4::Arg filterWeights)"
  },
  {
    "label": "normalizeNormalMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "normalizeNormalMap(FloatImage * img)"
  }
]