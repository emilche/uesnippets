[
  {
    "label": "FrameDecodeScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameDecodeScheduler"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_FRAME_DECODE_SCHEDULER_H_ # define VIDEO_FRAME_DECODE_SCHEDULER_H_ # include<stdint . h> # include \" absl / functional / any_invocable . h \" # include \" absl / types / optional . h \" # include \" api / units / timestamp . h \" # include \" video / frame_decode_timing . h \" namespace webrtc { class FrameDecodeScheduler { public : using FrameReleaseCallback = absl::AnyInvocable<)",
    "insertText": "void(uint32_t rtp_timestamp, Timestamp render_time)"
  },
  {
    "label": "FrameDecodeScheduler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FrameDecodeScheduler()"
  },
  {
    "label": "ScheduledRtpTimestamp()",
    "kind": "Method",
    "detail": "Function (absl::optional<uint32_t>)",
    "insertText": "ScheduledRtpTimestamp()"
  },
  {
    "label": "ScheduleFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleFrame(uint32_t rtp, FrameDecodeTiming::FrameSchedule schedule, FrameReleaseCallback callback)"
  },
  {
    "label": "CancelOutstanding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelOutstanding()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  }
]