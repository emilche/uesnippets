[
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UMaterialExpressionComment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionComment"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Materials / MaterialExpression . h \" # include \" MaterialExpressionComment . generated . h \" struct FPropertyChangedEvent ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Modify(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesSearchQuery(const TCHAR* SearchQuery)"
  }
]