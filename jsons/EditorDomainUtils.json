[
  {
    "label": "FAssetPackageData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetPackageData"
  },
  {
    "label": "FBlake3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlake3"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "IAssetRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetRegistry"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FCacheKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheKey"
  },
  {
    "label": "FClassDigestData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassDigestData"
  },
  {
    "label": "FClassDigestMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassDigestMap"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" DerivedDataCache . h \" # include \" EditorDomain / EditorDomain . h \" # include \" HAL / CriticalSection . h \" # include \" Memory / MemoryFwd . h \" # include \" Misc / ConfigCacheIni . h \" # include \" Misc / EnumClassFlags . h \" # include \" ProfilingDebugging / CookStats . h \" # include \" Serialization / CustomVersion . h \" # include \" Templates / Function . h \" # include \" UObject / NameTypes . h \" # include \" UObject / TopLevelAssetPath . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogEditorDomainSave, Log, All)"
  },
  {
    "label": "LexToUtf8()",
    "kind": "Method",
    "detail": "Function (class FAssetPackageData ; class FBlake3 ; class FPackagePath ; class IAssetRegistry ; class UPackage ; namespace UE::DerivedData { struct FCacheKey ; } namespace UE::EditorDomain { struct FClassDigestData { public : FBlake3Hash InclusiveSchemaHash ; TArray<int32> CustomVersionHandles ; TArray<FTopLevelAssetPath> ConstructClasses ; FTopLevelAssetPath ClosestNative ; EDomainUse EditorDomainUse = EDomainUse::LoadEnabled | EDomainUse::SaveEnabled ; bool bNative : 1 = false ; bool bTargetIterativeEnabled : 1 = false ; bool bConstructed : 1 = false ; bool bConstructionComplete : 1 = false ; } ; struct FClassDigestMap { TMap<FTopLevelAssetPath,FClassDigestData> Map ; FRWLock Lock ; } ; enum class ESaveStorageResult { Valid,UnexpectedClass,UnexpectedCustomVersion,BulkDataTooLarge,InvalidCode,} ; FUtf8StringView)",
    "insertText": "LexToUtf8(UE::EditorDomain::ESaveStorageResult Result)"
  },
  {
    "label": "SaveStorageResultFromString()",
    "kind": "Method",
    "detail": "Function (ESaveStorageResult)",
    "insertText": "SaveStorageResultFromString(FUtf8StringView Text)"
  },
  {
    "label": "CalculatePackageDigest()",
    "kind": "Method",
    "detail": "Function (FPackageDigest)",
    "insertText": "CalculatePackageDigest(IAssetRegistry& AssetRegistry, FName PackageName)"
  },
  {
    "label": "CalculatePackageDigest()",
    "kind": "Method",
    "detail": "Function (FPackageDigest)",
    "insertText": "CalculatePackageDigest(const FAssetPackageData& PackageData, FName PackageName)"
  },
  {
    "label": "TryAppendClassDigests()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryAppendClassDigests(FBlake3& Writer, TConstArrayView<FTopLevelAssetPath> ClassPaths, FString* OutErrorMessage)"
  },
  {
    "label": "PrecacheClassDigests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrecacheClassDigests(TConstArrayView<FTopLevelAssetPath> ClassNames)"
  },
  {
    "label": "RequestEditorDomainPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestEditorDomainPackage(const FPackagePath& PackagePath, const FIoHash& EditorDomainHash, UE::DerivedData::ECachePolicy SkipFlags, UE::DerivedData::IRequestOwner& Owner, UE::DerivedData::FOnCacheGetComplete&& Callback)"
  },
  {
    "label": "GetEditorDomainPackageKey()",
    "kind": "Method",
    "detail": "Function (UE::DerivedData::FCacheKey)",
    "insertText": "GetEditorDomainPackageKey(const FIoHash& EditorDomainHash)"
  },
  {
    "label": "TrySavePackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySavePackage(UPackage* Package)"
  },
  {
    "label": "GetBulkDataList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBulkDataList(FName PackageName, UE::DerivedData::IRequestOwner& Owner, TUniqueFunction<void(FSharedBuffer Buffer)>&& Callback)"
  },
  {
    "label": "PutBulkDataList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutBulkDataList(FName PackageName, FSharedBuffer Buffer)"
  },
  {
    "label": "GetBulkDataPayloadId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBulkDataPayloadId(FName PackageName, const FGuid& BulkDataId, UE::DerivedData::IRequestOwner& Owner, TUniqueFunction<void(FSharedBuffer Buffer)> && Callback)"
  },
  {
    "label": "PutBulkDataPayloadId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutBulkDataPayloadId(FName PackageName, const FGuid& BulkDataId, FSharedBuffer Buffer)"
  },
  {
    "label": "GetClassDigests()",
    "kind": "Method",
    "detail": "Function (FClassDigestMap&)",
    "insertText": "GetClassDigests()"
  },
  {
    "label": "UtilsInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UtilsInitialize()"
  },
  {
    "label": "UtilsCookInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UtilsCookInitialize()"
  },
  {
    "label": "RemoveConfigComment()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "RemoveConfigComment(FStringView Line)"
  },
  {
    "label": "ConstructTargetIterativeClassBlockList()",
    "kind": "Method",
    "detail": "Function (TSet<FTopLevelAssetPath>)",
    "insertText": "ConstructTargetIterativeClassBlockList()"
  }
]