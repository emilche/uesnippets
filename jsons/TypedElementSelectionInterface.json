[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTypedElementIsSelectedOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementIsSelectedOptions"
  },
  {
    "label": "FTypedElementSelectionOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementSelectionOptions"
  },
  {
    "label": "ITypedElementTransactedElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedElementTransactedElement"
  },
  {
    "label": "UTypedElementSelectionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionInterface"
  },
  {
    "label": "ITypedElementSelectionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedElementSelectionInterface"
  },
  {
    "label": "TTypedElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTypedElement"
  },
  {
    "label": "GetElementImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetElementImpl()"
  },
  {
    "label": "IsElementSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsElementSelected(const FTypedElementHandle& InElementHandle, const FTypedElementListConstPtr& SelectionSetPtr, const FTypedElementIsSelectedOptions& InSelectionOptions)"
  },
  {
    "label": "SelectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElement(const FTypedElementHandle& InElementHandle, const FTypedElementListPtr& InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "DeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElement(const FTypedElementHandle& InElementHandle, const FTypedElementListPtr& InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "IsElementSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsElementSelected(const FScriptTypedElementHandle& InElementHandle, const FScriptTypedElementListProxy InSelectionSet, const FTypedElementIsSelectedOptions& InSelectionOptions)"
  },
  {
    "label": "CanSelectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSelectElement(const FScriptTypedElementHandle& InElementHandle, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "CanDeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeselectElement(const FScriptTypedElementHandle& InElementHandle, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "SelectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElement(const FScriptTypedElementHandle& InElementHandle, FScriptTypedElementListProxy InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "DeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElement(const FScriptTypedElementHandle& InElementHandle, FScriptTypedElementListProxy InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "AllowSelectionModifiers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowSelectionModifiers(const FScriptTypedElementHandle& InElementHandle, const FScriptTypedElementListProxy InSelectionSet)"
  },
  {
    "label": "GetSelectionElement()",
    "kind": "Method",
    "detail": "Function (FScriptTypedElementHandle)",
    "insertText": "GetSelectionElement(const FScriptTypedElementHandle& InElementHandle, const FScriptTypedElementListProxy InCurrentSelection, const ETypedElementSelectionMethod InSelectionMethod)"
  }
]