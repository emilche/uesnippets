[
  {
    "label": "GetElementPtrInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GetElementPtrInst"
  },
  {
    "label": "Loop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Loop"
  },
  {
    "label": "ScalarEvolution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScalarEvolution"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "isTriviallyVectorizable()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TRANSFORMS_UTILS_VECTORUTILS_H # define LLVM_TRANSFORMS_UTILS_VECTORUTILS_H # include \" llvm / Analysis / TargetLibraryInfo . h \" # include \" llvm / IR / IntrinsicInst . h \" # include \" llvm / IR / Intrinsics . h \" namespace llvm { class GetElementPtrInst ; class Loop ; class ScalarEvolution ; class Type ; class Value ; bool)",
    "insertText": "isTriviallyVectorizable(Intrinsic::ID ID)"
  },
  {
    "label": "hasVectorInstrinsicScalarOpd()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasVectorInstrinsicScalarOpd(Intrinsic::ID ID, unsigned ScalarOpdIdx)"
  },
  {
    "label": "checkUnaryFloatSignature()",
    "kind": "Method",
    "detail": "Function (Intrinsic::ID)",
    "insertText": "checkUnaryFloatSignature(const CallInst &I, Intrinsic::ID ValidIntrinsicID)"
  },
  {
    "label": "checkBinaryFloatSignature()",
    "kind": "Method",
    "detail": "Function (Intrinsic::ID)",
    "insertText": "checkBinaryFloatSignature(const CallInst &I, Intrinsic::ID ValidIntrinsicID)"
  },
  {
    "label": "getIntrinsicIDForCall()",
    "kind": "Method",
    "detail": "Function (Intrinsic::ID)",
    "insertText": "getIntrinsicIDForCall(CallInst *CI, const TargetLibraryInfo *TLI)"
  },
  {
    "label": "getGEPInductionOperand()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getGEPInductionOperand(const GetElementPtrInst *Gep)"
  },
  {
    "label": "stripGetElementPtr()",
    "kind": "Method",
    "detail": "Function (Value*)",
    "insertText": "stripGetElementPtr(Value *Ptr, ScalarEvolution *SE, Loop *Lp)"
  },
  {
    "label": "getUniqueCastUse()",
    "kind": "Method",
    "detail": "Function (Value*)",
    "insertText": "getUniqueCastUse(Value *Ptr, Loop *Lp, Type *Ty)"
  },
  {
    "label": "getStrideFromPointer()",
    "kind": "Method",
    "detail": "Function (Value*)",
    "insertText": "getStrideFromPointer(Value *Ptr, ScalarEvolution *SE, Loop *Lp)"
  },
  {
    "label": "findScalarElement()",
    "kind": "Method",
    "detail": "Function (Value*)",
    "insertText": "findScalarElement(Value *V, unsigned EltNo)"
  }
]