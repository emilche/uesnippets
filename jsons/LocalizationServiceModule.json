[
  {
    "label": "FLocalizationServiceModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLocalizationServiceModule"
  },
  {
    "label": "FLocalizationServiceModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleManager . h \" # include \" ILocalizationServiceModule . h \" # include \" LocalizationServiceSettings . h \" # include \" DefaultLocalizationServiceProvider . h \" class FLocalizationServiceModule : public ILocalizationServiceModule { public :)",
    "insertText": "FLocalizationServiceModule()"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetProvider()",
    "kind": "Method",
    "detail": "Function (ILocalizationServiceProvider&)",
    "insertText": "GetProvider()"
  },
  {
    "label": "SetProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProvider(const FName& InName)"
  },
  {
    "label": "GetUseGlobalSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseGlobalSettings()"
  },
  {
    "label": "SetUseGlobalSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseGlobalSettings(bool bIsUseGlobalSettings)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "GetNumLocalizationServiceProviders()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumLocalizationServiceProviders()"
  },
  {
    "label": "SetCurrentLocalizationServiceProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentLocalizationServiceProvider(int32 ProviderIndex)"
  },
  {
    "label": "GetLocalizationServiceProviderName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetLocalizationServiceProviderName(int32 ProviderIndex)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FLocalizationServiceModule&)",
    "insertText": "Get()"
  },
  {
    "label": "InitializeLocalizationServiceProviders()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "InitializeLocalizationServiceProviders()"
  },
  {
    "label": "ClearCurrentLocalizationServiceProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCurrentLocalizationServiceProvider()"
  },
  {
    "label": "SetCurrentLocalizationServiceProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentLocalizationServiceProvider(ILocalizationServiceProvider& InProvider)"
  },
  {
    "label": "HandleModularFeatureRegistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleModularFeatureRegistered(const FName& Type, IModularFeature* ModularFeature)"
  },
  {
    "label": "HandleModularFeatureUnregistered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleModularFeatureUnregistered(const FName& Type, IModularFeature* ModularFeature)"
  }
]