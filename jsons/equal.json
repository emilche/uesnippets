[
  {
    "label": "_InputIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator1"
  },
  {
    "label": "_InputIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator2"
  },
  {
    "label": "_BinaryPredicate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_BinaryPredicate"
  },
  {
    "label": "_RandomAccessIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_RandomAccessIterator1"
  },
  {
    "label": "_RandomAccessIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_RandomAccessIterator2"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_EQUAL_H # define _LIBCPP___ALGORITHM_EQUAL_H # include<__algorithm / comp . h> # include<__config> # include<__iterator / distance . h> # include<__iterator / iterator_traits . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _InputIterator1, class _InputIterator2, class _BinaryPredicate> _LIBCPP_NODISCARD_EXT inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _BinaryPredicate __pred)"
  },
  {
    "label": "equal()",
    "kind": "Method",
    "detail": "Function (typedef iterator_traits<_InputIterator1>::value_type __v1 ; typedef iterator_traits<_InputIterator2>::value_type __v2 ; return)",
    "insertText": "equal(__first1, __last1, __first2, __equal_to<__v1, __v2>())"
  },
  {
    "label": "__equal()",
    "kind": "Method",
    "detail": "Function (} # if _LIBCPP_STD_VER> 1 1 template<class _BinaryPredicate,class _InputIterator1,class _InputIterator2> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "__equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _BinaryPredicate __pred, input_iterator_tag, input_iterator_tag)"
  },
  {
    "label": "equal()",
    "kind": "Method",
    "detail": "Function (} template<class _InputIterator1,class _InputIterator2,class _BinaryPredicate> _LIBCPP_NODISCARD_EXT _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2, _BinaryPredicate __pred)"
  },
  {
    "label": "equal()",
    "kind": "Method",
    "detail": "Function (} template<class _InputIterator1,class _InputIterator2> _LIBCPP_NODISCARD_EXT _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 bool)",
    "insertText": "equal(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2 __first2, _InputIterator2 __last2)"
  },
  {
    "label": "__equal()",
    "kind": "Method",
    "detail": "Function (typedef iterator_traits<_InputIterator1>::value_type __v1 ; typedef iterator_traits<_InputIterator2>::value_type __v2 ; return)",
    "insertText": "__equal(__first1, __last1, __first2, __last2, __equal_to<__v1, __v2>(), typename iterator_traits<_InputIterator1>::iterator_category(), typename iterator_traits<_InputIterator2>::iterator_category())"
  }
]