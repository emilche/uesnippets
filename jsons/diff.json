[
  {
    "label": "DiffAnalyze",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiffAnalyze"
  },
  {
    "label": "DiffFlags",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiffFlags"
  },
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FileSys",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileSys"
  },
  {
    "label": "Sequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sequence"
  },
  {
    "label": "StrPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StrPtr"
  },
  {
    "label": "Diff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Diff"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Grid",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Grid"
  },
  {
    "label": "Diff()",
    "kind": "Method",
    "detail": "Function (class DiffAnalyze ; class DiffFlags ; class Error ; class FileSys ; class Sequence ; class StrPtr ; typedef signed int LineNo ; class Diff { public :)",
    "insertText": "Diff()"
  },
  {
    "label": "SetInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInput(FileSys *fx, FileSys *fy, const DiffFlags &flags, Error *e)"
  },
  {
    "label": "SetOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutput(const char *fout, Error *e)"
  },
  {
    "label": "SetOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutput(FILE *fout)"
  },
  {
    "label": "CloseOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseOutput(Error *e)"
  },
  {
    "label": "DiffWithFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffWithFlags(const DiffFlags &flags)"
  },
  {
    "label": "DiffContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffContext(int c = 0)"
  },
  {
    "label": "DiffUnified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffUnified(int c = 0)"
  },
  {
    "label": "DiffUnifiedDeleteFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffUnifiedDeleteFile(FileSys *f, Error *e)"
  },
  {
    "label": "DiffNorm()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffNorm()"
  },
  {
    "label": "DiffRcs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffRcs()"
  },
  {
    "label": "DiffHTML()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffHTML()"
  },
  {
    "label": "DiffSummary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffSummary()"
  },
  {
    "label": "DiffFast()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffFast()"
  },
  {
    "label": "GetChunkCnt()",
    "kind": "Method",
    "detail": "Function (fastMaxD = 1 ; } int)",
    "insertText": "GetChunkCnt()"
  },
  {
    "label": "IsIdentical()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "IsIdentical()"
  },
  {
    "label": "Walker()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Walker(const char *flags, Sequence *s, LineNo sx, LineNo sy)"
  },
  {
    "label": "DiffFlags()",
    "kind": "Method",
    "detail": "Function (Sequence* spx ; Sequence* spy ; FILE* out ; DiffAnalyze* diff ; const DiffFlags* flags ; int closeOut ; LineType lineType ; const char* newLines ; int fastMaxD ; int chunkCnt ; } ; class DiffFlags { public :)",
    "insertText": "DiffFlags()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(\"\")"
  },
  {
    "label": "DiffFlags()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DiffFlags(const char *flags)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(flags)"
  },
  {
    "label": "DiffFlags()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DiffFlags(const StrPtr *flags)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init(const char *flags)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const StrPtr *flags)"
  }
]