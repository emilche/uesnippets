[
  {
    "label": "_cef_process_message_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_process_message_t"
  },
  {
    "label": "_cef_list_value_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_list_value_t"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_PROCESS_MESSAGE_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_PROCESS_MESSAGE_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_values_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_process_message_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_process_message_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_read_only)(struct _cef_process_message_t* self)"
  },
  {
    "label": "_cef_process_message_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_process_message_t(CEF_CALLBACK* copy)( struct _cef_process_message_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_name)( struct _cef_process_message_t* self)"
  },
  {
    "label": "_cef_list_value_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_list_value_t(CEF_CALLBACK* get_argument_list)( struct _cef_process_message_t* self)"
  },
  {
    "label": "cef_process_message_create()",
    "kind": "Method",
    "detail": "Function (} cef_process_message_t ; CEF_EXPORT cef_process_message_t*)",
    "insertText": "cef_process_message_create(const cef_string_t* name)"
  }
]