[
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "DynamicLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DynamicLibrary"
  },
  {
    "label": "DynamicLibrary()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_DYNAMICLIBRARY_H # define LLVM_SUPPORT_DYNAMICLIBRARY_H # include<string> namespace llvm { class StringRef ; namespace sys { class DynamicLibrary { char Invalid ; void* Data ; public :)",
    "insertText": "DynamicLibrary(void *data = &Invalid) : Data(data)"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isValid()"
  },
  {
    "label": "getPermanentLibrary()",
    "kind": "Method",
    "detail": "Function (DynamicLibrary)",
    "insertText": "getPermanentLibrary(const char *filename, std::string *errMsg = nullptr)"
  },
  {
    "label": "LoadLibraryPermanently()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadLibraryPermanently(const char *Filename, std::string *ErrMsg = nullptr)"
  },
  {
    "label": "SearchForAddressOfSymbol()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "SearchForAddressOfSymbol(const char *symbolName)"
  },
  {
    "label": "SearchForAddressOfSymbol()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "SearchForAddressOfSymbol(const std::string &symbolName)"
  },
  {
    "label": "AddSymbol()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddSymbol(StringRef symbolName, void *symbolValue)"
  }
]