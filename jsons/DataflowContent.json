[
  {
    "label": "FDataflowEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataflowEditorToolkit"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UDataflowBaseContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataflowBaseContent"
  },
  {
    "label": "FPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewScene"
  },
  {
    "label": "UAnimSingleNodeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSingleNodeInstance"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UDataflowContentOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataflowContentOwner"
  },
  {
    "label": "DATAFLOWENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATAFLOWENGINE_API"
  },
  {
    "label": "CreateNewDataflowContent()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DataflowContextObject . h \" # include \" UObject / Interface . h \" # include \" Templates / SharedPointer . h \" # include \" GameFramework / Actor . h \" # include \" DataflowContent . generated . h \" class FDataflowEditorToolkit ; class USkeletalMesh ; class USkeleton ; class USkeletalMeshComponent ; class UAnimationAsset ; class UDataflowBaseContent ; class FPreviewScene ; class UAnimSingleNodeInstance ; namespace UE::DataflowContextHelpers { template<class T> TObjectPtr<T>)",
    "insertText": "CreateNewDataflowContent(const TObjectPtr<UObject>& ContentOwner)"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IDataflowContentOwner { public :)",
    "insertText": "GENERATED_BODY() TObjectPtr<UDataflowBaseContent> BuildDataflowContent()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnContentOwnerChanged)"
  },
  {
    "label": "InvalidateDataflowContents()",
    "kind": "Method",
    "detail": "Function (FOnContentOwnerChanged OnContentOwnerChanged ; void)",
    "insertText": "InvalidateDataflowContents()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnContentOwnerChanged .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "WriteDataflowContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteDataflowContent(const TObjectPtr<UDataflowBaseContent>& DataflowContent)"
  },
  {
    "label": "ReadDataflowContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadDataflowContent(const TObjectPtr<UDataflowBaseContent>& DataflowContent)"
  },
  {
    "label": "CreateDataflowContent()",
    "kind": "Method",
    "detail": "Function (protected : TObjectPtr<UDataflowBaseContent>)",
    "insertText": "CreateDataflowContent()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UDataflowBaseContent()"
  },
  {
    "label": "UDataflowBaseContent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UDataflowBaseContent()"
  },
  {
    "label": "IsConstructionDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConstructionDirty()"
  },
  {
    "label": "IsSimulationDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSimulationDirty()"
  },
  {
    "label": "SetLastModifiedTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastModifiedTimestamp(UE::Dataflow::FTimestamp InTimestamp, bool bMakeDirty =true)"
  },
  {
    "label": "GetLastModifiedTimestamp()",
    "kind": "Method",
    "detail": "Function (const UE::Dataflow::FTimestamp&)",
    "insertText": "GetLastModifiedTimestamp()"
  },
  {
    "label": "UpdateContentDatas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateContentDatas()"
  },
  {
    "label": "AddContentObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddContentObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "SetActorProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetActorProperties(TObjectPtr<AActor>& PreviewActor)"
  },
  {
    "label": "SetDataflowOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataflowOwner(const TObjectPtr<UObject>& InOwner)"
  },
  {
    "label": "GetDataflowOwner()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UObject>)",
    "insertText": "GetDataflowOwner()"
  },
  {
    "label": "SetDataflowAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataflowAsset(const TObjectPtr<UDataflow>& InAsset)"
  },
  {
    "label": "SetDataflowTerminal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataflowTerminal(const FString& InPath)"
  },
  {
    "label": "SetConstructionDirty()",
    "kind": "Method",
    "detail": "Function (DataflowTerminal = InPath ;)",
    "insertText": "SetConstructionDirty(true)"
  },
  {
    "label": "SetSimulationDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSimulationDirty(true)"
  },
  {
    "label": "GetDataflowTerminal()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetDataflowTerminal()"
  },
  {
    "label": "GetTerminalAsset()",
    "kind": "Method",
    "detail": "Function (} const TObjectPtr<UObject>&)",
    "insertText": "GetTerminalAsset()"
  },
  {
    "label": "GetPreviewClass()",
    "kind": "Method",
    "detail": "Function (} const TSubclassOf<AActor>&)",
    "insertText": "GetPreviewClass()"
  },
  {
    "label": "IsSaved()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSaved()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (bIsSaved = bInSaved ; } void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OverrideActorProperty()",
    "kind": "Method",
    "detail": "Function (bool bIsSaved = false ; TSubclassOf<AActor> PreviewClass = nullptr ; void)",
    "insertText": "OverrideActorProperty(const TObjectPtr<AActor>& PreviewActor, TObjectPtr<UObject> PropertyValue, const FName& PropertyName)"
  },
  {
    "label": "OverrideStructProperty()",
    "kind": "Method",
    "detail": "Function (template<StructType> void)",
    "insertText": "OverrideStructProperty(const TObjectPtr<AActor>& PreviewActor, const StructType& PropertyValue, const FName& PropertyName)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UDataflowSkeletalContent()"
  },
  {
    "label": "UDataflowSkeletalContent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UDataflowSkeletalContent()"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "SetSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkeletalMesh(const TObjectPtr<USkeletalMesh>& InMesh, const bool bHideAsset = false)"
  },
  {
    "label": "GetSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (const TObjectPtr<USkeletalMesh>&)",
    "insertText": "GetSkeletalMesh()"
  },
  {
    "label": "GetAnimationAsset()",
    "kind": "Method",
    "detail": "Function (const TObjectPtr<UAnimationAsset>&)",
    "insertText": "GetAnimationAsset()"
  }
]