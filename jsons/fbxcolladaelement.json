[
  {
    "label": "ElementContentAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ElementContentAccessor"
  },
  {
    "label": "SourceElementContentAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SourceElementContentAccessor"
  },
  {
    "label": "ElementBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ElementBase"
  },
  {
    "label": "TypeToArrayTag()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_FILEIO_COLLADA_ELEMENT_H_ # define _FBXSDK_FILEIO_COLLADA_ELEMENT_H_ # include<fbxsdk . h> # include<fbxsdk / fbxsdk_nsbegin . h> template<T> const FbxString)",
    "insertText": "TypeToArrayTag()"
  },
  {
    "label": "ElementContentAccessor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ElementContentAccessor(xmlNode * pElement)"
  },
  {
    "label": "ElementContentAccessor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ElementContentAccessor()"
  },
  {
    "label": "GetNext()",
    "kind": "Method",
    "detail": "Function (template<TYPE> bool)",
    "insertText": "GetNext(TYPE * pData)"
  },
  {
    "label": "GetArray()",
    "kind": "Method",
    "detail": "Function (} template<TYPE> int)",
    "insertText": "GetArray(TYPE * pArray, int pArraySize, int pSourceUnitOffset = 0, int pSourceUnitValidCount = 1, int pSourceUnitSize = 1, int pDestUnitOffset = 0, int pDestUnitValidCount = 1, int pDestUnitSize = 1, TYPE pDefaultValue = TYPE())"
  },
  {
    "label": "SourceElementContentAccessor()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } xmlChar* mContent ; const char* mPointer ; } ; template<TYPE> struct SourceElementContentAccessor : public ElementContentAccessor {)",
    "insertText": "SourceElementContentAccessor(xmlNode * pSourceElement) : mCount(0), mStride(1), mOffset(0)"
  },
  {
    "label": "DAE_FindChildElementByTag()",
    "kind": "Method",
    "detail": "Function (bool lReadCount = true ; xmlNode* lTechniqueElement =)",
    "insertText": "DAE_FindChildElementByTag(pSourceElement, COLLADA_TECHNIQUE_COMMON_ELEMENT)"
  },
  {
    "label": "DAE_FindChildElementByTag()",
    "kind": "Method",
    "detail": "Function (xmlNode* lAccessorElement =)",
    "insertText": "DAE_FindChildElementByTag(lTechniqueElement, COLLADA_ACCESSOR_STRUCTURE)"
  },
  {
    "label": "DAE_GetElementAttributeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_GetElementAttributeValue(lAccessorElement, COLLADA_COUNT_PROPERTY, mCount)"
  },
  {
    "label": "DAE_GetElementAttributeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_GetElementAttributeValue(lAccessorElement, COLLADA_STRIDE_PROPERTY, mStride)"
  },
  {
    "label": "DAE_GetElementAttributeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_GetElementAttributeValue(lAccessorElement, COLLADA_OFFSET_PROPERTY, mOffset)"
  },
  {
    "label": "DAE_FindChildElementByTag()",
    "kind": "Method",
    "detail": "Function (} lReadCount = false ; } xmlNode* lDataArrayElement =)",
    "insertText": "DAE_FindChildElementByTag(pSourceElement, TypeToArrayTag<TYPE>())"
  },
  {
    "label": "FBX_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT(lDataArrayElement)"
  },
  {
    "label": "xmlNodeGetContent()",
    "kind": "Method",
    "detail": "Function (mContent =)",
    "insertText": "xmlNodeGetContent(lDataArrayElement)"
  },
  {
    "label": "mPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mPointer(const char *)"
  },
  {
    "label": "ElementBase()",
    "kind": "Method",
    "detail": "Function (} int mCount ; int mStride ; int mOffset ; } ; class ElementBase { public : enum { MATRIX_STRIDE = 1 6,} ; const char* smID_PROPERTY_NAME ;)",
    "insertText": "ElementBase()"
  },
  {
    "label": "SetXMLElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetXMLElement(xmlNode * pElement)"
  },
  {
    "label": "GetXMLElement()",
    "kind": "Method",
    "detail": "Function (mXMLElement = pElement ; } xmlNode*)",
    "insertText": "GetXMLElement()"
  },
  {
    "label": "GetUnit()",
    "kind": "Method",
    "detail": "Function (const FbxSystemUnit*)",
    "insertText": "GetUnit()"
  },
  {
    "label": "URL()",
    "kind": "Method",
    "detail": "Function (private : xmlNode* mXMLElement ; FbxString* mID ; FbxSystemUnit* mUnit ; } ; const FbxString)",
    "insertText": "URL(const FbxString & pID)"
  },
  {
    "label": "AddSourceElement()",
    "kind": "Method",
    "detail": "Function (} template<T> xmlNode*)",
    "insertText": "AddSourceElement(xmlNode * pParentElement, const char * pID, const T * pData, int pCount, int pStride = 1)"
  },
  {
    "label": "FBX_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT(pParentElement && pData)"
  },
  {
    "label": "DAE_AddChildElement()",
    "kind": "Method",
    "detail": "Function (xmlNode* lSourceElement =)",
    "insertText": "DAE_AddChildElement(pParentElement, COLLADA_SOURCE_STRUCTURE)"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lSourceElement, COLLADA_ID_PROPERTY, pID)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (FbxString lContent ; const int lDataCount = pCount* pStride ;)",
    "insertText": "for(int lIndex = 0; lIndex < lDataCount; ++lIndex)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (lContent + =)",
    "insertText": "ToString(pData[lIndex])"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (} const FbxString lArrayID =)",
    "insertText": "FbxString(pID)"
  },
  {
    "label": "DAE_AddChildElement()",
    "kind": "Method",
    "detail": "Function (xmlNode* lArrayElement =)",
    "insertText": "DAE_AddChildElement(lSourceElement, TypeToArrayTag<T>(), lContent)"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lArrayElement, COLLADA_ID_PROPERTY, lArrayID)"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lArrayElement, COLLADA_COUNT_PROPERTY, lDataCount)"
  },
  {
    "label": "DAE_AddChildElement()",
    "kind": "Method",
    "detail": "Function (xmlNode* lTechniqueCommonElement =)",
    "insertText": "DAE_AddChildElement(lSourceElement, COLLADA_TECHNIQUE_COMMON_ELEMENT)"
  },
  {
    "label": "DAE_AddChildElement()",
    "kind": "Method",
    "detail": "Function (xmlNode* lAccessElement =)",
    "insertText": "DAE_AddChildElement(lTechniqueCommonElement, COLLADA_ACCESSOR_STRUCTURE)"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lAccessElement, COLLADA_SOURCE_PROPERTY, URL(lArrayID))"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lAccessElement, COLLADA_COUNT_PROPERTY, pCount)"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lAccessElement, COLLADA_STRIDE_PROPERTY, pStride)"
  },
  {
    "label": "DAE_AddChildElement()",
    "kind": "Method",
    "detail": "Function (xmlNode* lParamElement =)",
    "insertText": "DAE_AddChildElement(lAccessElement, COLLADA_PARAMETER_STRUCTURE)"
  },
  {
    "label": "DAE_AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DAE_AddAttribute(lParamElement, COLLADA_TYPE_PROPERTY, TypeToParameterTag<T>())"
  },
  {
    "label": "PopulateLayerElementDirectArray()",
    "kind": "Method",
    "detail": "Function (} return lSourceElement ; } template<TYPE> FbxLayerElementArray*)",
    "insertText": "PopulateLayerElementDirectArray(FbxLayerElement * pLayerElement, xmlNode * pSourceElement, int pSize)"
  },
  {
    "label": "lSourceElementAccessor()",
    "kind": "Method",
    "detail": "Function (SourceElementContentAccessor<TYPE>)",
    "insertText": "lSourceElementAccessor(pSourceElement)"
  },
  {
    "label": "lLayerElement()",
    "kind": "Method",
    "detail": "Function (FbxLayerElementTemplate<TYPE>*)",
    "insertText": "lLayerElement(FbxLayerElementTemplate<TYPE> *)"
  },
  {
    "label": "SetMappingMode()",
    "kind": "Method",
    "detail": "Function (lLayerElement ->)",
    "insertText": "SetMappingMode(FbxLayerElement::eByPolygonVertex)"
  },
  {
    "label": "SetReferenceMode()",
    "kind": "Method",
    "detail": "Function (lLayerElement ->)",
    "insertText": "SetReferenceMode(FbxLayerElement::eIndexToDirect)"
  },
  {
    "label": "GetDirectArray()",
    "kind": "Method",
    "detail": "Function (lLayerElement ->)",
    "insertText": "GetDirectArray().SetCount(lSourceElementAccessor.mCount)"
  },
  {
    "label": "GetDirectArray()",
    "kind": "Method",
    "detail": "Function (TYPE* lArray = NULL ; lArray = lLayerElement ->)",
    "insertText": "GetDirectArray().GetLocked(lArray)"
  },
  {
    "label": "GetArray()",
    "kind": "Method",
    "detail": "Function (lSourceElementAccessor .)",
    "insertText": "GetArray((double *)lArray, lSourceElementAccessor.mCount*pSize, 0, pSize, lSourceElementAccessor.mStride, 0, pSize, sizeof(TYPE)/sizeof(double), 1.0)"
  },
  {
    "label": "GetDirectArray()",
    "kind": "Method",
    "detail": "Function (lLayerElement ->)",
    "insertText": "GetDirectArray().Release(&lArray, lArray)"
  }
]