[
  {
    "label": "FFrameRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameRate"
  },
  {
    "label": "FKeyHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHandle"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "FMovieSceneIntegerChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneIntegerChannel"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "TMovieSceneChannelTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMovieSceneChannelTraits"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Channels / MovieSceneChannelEditorData . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Math / Range . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / FrameNumber . h \" # include \" Misc / FrameTime . h \" # include \" Misc / Optional . h \" # include \" MovieSceneChannel . h \" # include \" MovieSceneChannelData . h \" # include \" MovieSceneChannelTraits . h \" # include \" Serialization / StructuredArchive . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" Curves / RealCurve . h \" # include \" MovieSceneIntegerChannel . generated . h \" struct FFrameRate ; struct FKeyHandle ; struct FPropertyTag ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneIntegerChannel() : PreInfinityExtrap(RCCE_Constant) , PostInfinityExtrap(RCCE_Constant) , bInterpolateLinearKeys(false) , DefaultValue(0) , bHasDefaultValue(false)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SerializeFromMismatchedTag(const FPropertyTag& Tag, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (} TMovieSceneChannelData<const int32>)",
    "insertText": "GetData()"
  },
  {
    "label": "GetTimes()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FFrameNumber>)",
    "insertText": "GetTimes()"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Evaluate(FFrameTime InTime, int32& OutValue)"
  },
  {
    "label": "EvaluateInterp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvaluateInterp(FFrameTime InTime, double& OutValue)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Times =)",
    "insertText": "MoveTemp(InTimes)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Values =)",
    "insertText": "MoveTemp(InValues)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (KeyHandles .)",
    "insertText": "Reset()"
  },
  {
    "label": "AllocateHandle()",
    "kind": "Method",
    "detail": "Function (KeyHandles .)",
    "insertText": "AllocateHandle(Index)"
  },
  {
    "label": "AddKeys()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "AddKeys(const TArray<FFrameNumber>& InTimes, const TArray<int32>& InValues)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (int32 Index = Times .)",
    "insertText": "Num()"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Times .)",
    "insertText": "Append(InTimes)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Values .)",
    "insertText": "Append(InValues)"
  },
  {
    "label": "GetKeys()",
    "kind": "Method",
    "detail": "Function (} } public : void)",
    "insertText": "GetKeys(const TRange<FFrameNumber>& WithinRange, TArray<FFrameNumber>* OutKeyTimes, TArray<FKeyHandle>* OutKeyHandles)"
  },
  {
    "label": "GetKeyTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetKeyTimes(TArrayView<const FKeyHandle> InHandles, TArrayView<FFrameNumber> OutKeyTimes)"
  },
  {
    "label": "SetKeyTimes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyTimes(TArrayView<const FKeyHandle> InHandles, TArrayView<const FFrameNumber> InKeyTimes)"
  },
  {
    "label": "DuplicateKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateKeys(TArrayView<const FKeyHandle> InHandles, TArrayView<FKeyHandle> OutNewHandles)"
  },
  {
    "label": "DeleteKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteKeys(TArrayView<const FKeyHandle> InHandles)"
  },
  {
    "label": "DeleteKeysFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteKeysFrom(FFrameNumber InTime, bool bDeleteKeysBefore)"
  },
  {
    "label": "ChangeFrameResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeFrameResolution(FFrameRate SourceRate, FFrameRate DestinationRate)"
  },
  {
    "label": "ComputeEffectiveRange()",
    "kind": "Method",
    "detail": "Function (TRange<FFrameNumber>)",
    "insertText": "ComputeEffectiveRange()"
  },
  {
    "label": "GetNumKeys()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumKeys()"
  },
  {
    "label": "Offset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Offset(FFrameNumber DeltaPosition)"
  },
  {
    "label": "Optimize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Optimize(const FKeyDataOptimizationParams& InParameters)"
  },
  {
    "label": "ClearDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDefault()"
  },
  {
    "label": "GetHandle()",
    "kind": "Method",
    "detail": "Function (FKeyHandle)",
    "insertText": "GetHandle(int32 Index)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetIndex(FKeyHandle Handle)"
  },
  {
    "label": "SetDefault()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetDefault(int32 InDefaultValue)"
  },
  {
    "label": "GetDefault()",
    "kind": "Method",
    "detail": "Function (bHasDefaultValue = true ; DefaultValue = InDefaultValue ; } TOptional<int32>)",
    "insertText": "GetDefault()"
  },
  {
    "label": "RemoveDefault()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveDefault()"
  }
]