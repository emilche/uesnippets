[
  {
    "label": "PixelLimitResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PixelLimitResource"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_ADAPTATION_PIXEL_LIMIT_RESOURCE_H_ # define VIDEO_ADAPTATION_PIXEL_LIMIT_RESOURCE_H_ # include<string> # include \" absl / types / optional . h \" # include \" api / adaptation / resource . h \" # include \" api / scoped_refptr . h \" # include \" call / adaptation / video_stream_input_state_provider . h \" # include \" rtc_base / task_utils / repeating_task . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { class PixelLimitResource : public Resource { public : rtc::scoped_refptr<PixelLimitResource>)",
    "insertText": "Create(TaskQueueBase* task_queue, VideoStreamInputStateProvider* input_state_provider)"
  },
  {
    "label": "PixelLimitResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PixelLimitResource(TaskQueueBase* task_queue, VideoStreamInputStateProvider* input_state_provider)"
  },
  {
    "label": "PixelLimitResource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "PixelLimitResource()"
  },
  {
    "label": "SetMaxPixels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxPixels(int max_pixels)"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "Name()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : TaskQueueBase* const task_queue_ ; VideoStreamInputStateProvider* const input_state_provider_ ; absl::optional<int> max_pixels_)",
    "insertText": "RTC_GUARDED_BY(task_queue_)"
  }
]