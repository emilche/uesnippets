[
  {
    "label": "ETypeKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETypeKind"
  },
  {
    "label": "FType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FType"
  },
  {
    "label": "EScalarKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EScalarKind"
  },
  {
    "label": "FPrimitiveType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveType"
  },
  {
    "label": "FTextureType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureType"
  },
  {
    "label": "TypeKindToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Materials / MaterialIRCommon . h \" # include \" Shader / ShaderTypes . h \" # include \" MaterialValueType . h \" # if WITH_EDITOR namespace UE::MIR { enum ETypeKind { TK_Void,TK_Primitive,TK_Texture,} ; const TCHAR*)",
    "insertText": "TypeKindToString(ETypeKind Kind)"
  },
  {
    "label": "FromShaderType()",
    "kind": "Method",
    "detail": "Function (struct FType { ETypeKind Kind ; FTypePtr)",
    "insertText": "FromShaderType(const UE::Shader::FType& InShaderType)"
  },
  {
    "label": "FromMaterialValueType()",
    "kind": "Method",
    "detail": "Function (FTypePtr)",
    "insertText": "FromMaterialValueType(EMaterialValueType Type)"
  },
  {
    "label": "GetVoid()",
    "kind": "Method",
    "detail": "Function (FTypePtr)",
    "insertText": "GetVoid()"
  },
  {
    "label": "IsBoolScalar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBoolScalar()"
  },
  {
    "label": "AsPrimitive()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "AsPrimitive()"
  },
  {
    "label": "AsScalar()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "AsScalar()"
  },
  {
    "label": "AsVector()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "AsVector()"
  },
  {
    "label": "AsMatrix()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "AsMatrix()"
  },
  {
    "label": "GetSpelling()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetSpelling()"
  },
  {
    "label": "ToValueType()",
    "kind": "Method",
    "detail": "Function (UE::Shader::EValueType)",
    "insertText": "ToValueType()"
  },
  {
    "label": "ScalarKindToString()",
    "kind": "Method",
    "detail": "Function (} ; enum EScalarKind { SK_Bool,SK_Int,SK_Float,} ; const TCHAR*)",
    "insertText": "ScalarKindToString(EScalarKind Kind)"
  },
  {
    "label": "GetBool1()",
    "kind": "Method",
    "detail": "Function (struct FPrimitiveType : FType { FStringView Spelling ; EScalarKind ScalarKind ; int NumRows ; int NumColumns ; FPrimitiveTypePtr)",
    "insertText": "GetBool1()"
  },
  {
    "label": "GetInt1()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetInt1()"
  },
  {
    "label": "GetFloat1()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetFloat1()"
  },
  {
    "label": "GetFloat2()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetFloat2()"
  },
  {
    "label": "GetFloat3()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetFloat3()"
  },
  {
    "label": "GetFloat4()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetFloat4()"
  },
  {
    "label": "GetScalar()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetScalar(EScalarKind InScalarKind)"
  },
  {
    "label": "GetVector()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetVector(EScalarKind InScalarKind, int NumRows)"
  },
  {
    "label": "GetMatrix()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "GetMatrix(EScalarKind InScalarKind, int NumColumns, int NumRows)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FPrimitiveTypePtr)",
    "insertText": "Get(EScalarKind InScalarKind, int NumRows, int NumColumns)"
  },
  {
    "label": "GetNumComponents()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNumComponents()"
  },
  {
    "label": "IsVector()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsVector()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} ; struct FTextureType : FType { FTypePtr)",
    "insertText": "Get()"
  }
]