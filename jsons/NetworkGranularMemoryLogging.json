[
  {
    "label": "FScopeMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeMarker"
  },
  {
    "label": "FNetworkMemoryTrackingScopeStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkMemoryTrackingScopeStack"
  },
  {
    "label": "UE_WITH_NETWORK_GRANULAR_MEM_TRACKING()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # ifndef UE_WITH_NETWORK_GRANULAR_MEM_TRACKING # define)",
    "insertText": "UE_WITH_NETWORK_GRANULAR_MEM_TRACKING(UE_BUILD_SHIPPING || UE_BUILD_TEST)"
  },
  {
    "label": "FScopeMarker()",
    "kind": "Method",
    "detail": "Function (struct FScopeMarker {)",
    "insertText": "FScopeMarker(FArchive& InAr, FString&& InScopeName)"
  },
  {
    "label": "FScopeMarker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FScopeMarker()"
  },
  {
    "label": "BeginWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginWork()"
  },
  {
    "label": "EndWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndWork(const FString& WorkName)"
  },
  {
    "label": "LogCustomWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogCustomWork(const FString& WorkName, const uint64 Bytes)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GRANULAR_NETWORK_MEMORY_TRACKING_TRACK()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "GRANULAR_NETWORK_MEMORY_TRACKING_TRACK(Id, Work)"
  },
  {
    "label": "EndWork()",
    "kind": "Method",
    "detail": "Function (\\ Work ; \\ GranularNetworkMemoryScope .)",
    "insertText": "EndWork(Id)"
  },
  {
    "label": "GRANULAR_NETWORK_MEMORY_TRACKING_CUSTOM_WORK()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "GRANULAR_NETWORK_MEMORY_TRACKING_CUSTOM_WORK(Id, Value) GranularNetworkMemoryScope.LogCustomWork(Id, Value)"
  },
  {
    "label": "GRANULAR_NETWORK_MEMORY_TRACKING_INIT()",
    "kind": "Method",
    "detail": "Function (# else # define)",
    "insertText": "GRANULAR_NETWORK_MEMORY_TRACKING_INIT(Archive, ScopeName) #define GRANULAR_NETWORK_MEMORY_TRACKING_TRACK(Id, Work)"
  }
]