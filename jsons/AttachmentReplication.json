[
  {
    "label": "UPartialNetObjectAttachmentHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPartialNetObjectAttachmentHandler"
  },
  {
    "label": "FNetBlobHandlerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBlobHandlerManager"
  },
  {
    "label": "FNetObjectAttachmentsReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectAttachmentsReader"
  },
  {
    "label": "FNetObjectAttachmentsWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectAttachmentsWriter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetObjectAttachmentSendQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectAttachmentSendQueue"
  },
  {
    "label": "FUnreliableReplicationRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnreliableReplicationRecord"
  },
  {
    "label": "FCommitRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommitRecord"
  },
  {
    "label": "FReliableSendQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReliableSendQueue"
  },
  {
    "label": "FNetObjectAttachmentReceiveQueueInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetObjectAttachmentReceiveQueueInitParams"
  },
  {
    "label": "FNetObjectAttachmentReceiveQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectAttachmentReceiveQueue"
  },
  {
    "label": "FDeferredProcessingQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeferredProcessingQueue"
  },
  {
    "label": "EDeferredProcessingQueue",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDeferredProcessingQueue"
  },
  {
    "label": "FNetObjectAttachmentsReaderInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetObjectAttachmentsReaderInitParams"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Net / Core / Misc / ResizableCircularQueue . h \" # include \" Iris / ReplicationSystem / NetBlob / NetBlob . h \" # include \" Iris / ReplicationSystem / NetBlob / ReliableNetBlobQueue . h \" # include \" Containers / Map . h \" class UPartialNetObjectAttachmentHandler ; namespace UE::Net::Private { class FNetBlobHandlerManager ; class FNetObjectAttachmentsReader ; class FNetObjectAttachmentsWriter ; } namespace UE::Net::Private { enum class ENetObjectAttachmentType : uint32 { Normal,OutOfBand,HugeObject,InternalCount } ; enum class EAttachmentWriteStatus : unsigned { Success,NoAttachments,ReliableWindowFull,BitstreamOverflow,} ; class FNetObjectAttachmentSendQueue { public : typedef FReliableNetBlobQueue::FReplicationRecord FReliableReplicationRecord ; struct FUnreliableReplicationRecord { bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FNetObjectAttachmentSendQueue()",
    "kind": "Method",
    "detail": "Function (} FReliableReplicationRecord ReliableReplicationRecord ; FUnreliableReplicationRecord UnreliableCommitRecord ; } ; public :)",
    "insertText": "FNetObjectAttachmentSendQueue()"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Enqueue(TArrayView<const TRefCountPtr<FNetBlob>> Attachments)"
  },
  {
    "label": "DropUnreliable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropUnreliable(bool &bOutHasUnsentAttachments)"
  },
  {
    "label": "HasUnsent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnsent()"
  },
  {
    "label": "HasUnsentUnreliable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnsentUnreliable()"
  },
  {
    "label": "IsSafeToDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSafeToDestroy()"
  },
  {
    "label": "IsAllSentAndAcked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllSentAndAcked()"
  },
  {
    "label": "IsAllReliableSentAndAcked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllReliableSentAndAcked()"
  },
  {
    "label": "CanSendMoreReliableAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSendMoreReliableAttachments()"
  },
  {
    "label": "SetUnreliableQueueCapacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUnreliableQueueCapacity(uint32 QueueCapacity)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (private : FNetObjectAttachmentsWriter ; class FReliableSendQueue ; EAttachmentWriteStatus)",
    "insertText": "Serialize(FNetSerializationContext& Context, FNetRefHandle RefHandle, FCommitRecord& OutRecord, bool& bOutHasUnprocessedAttachments)"
  },
  {
    "label": "SerializeReliable()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "SerializeReliable(FNetSerializationContext& Context, FNetRefHandle RefHandle, FReliableReplicationRecord& OutRecord)"
  },
  {
    "label": "SerializeUnreliable()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "SerializeUnreliable(FNetSerializationContext& Context, FNetRefHandle RefHandle, FUnreliableReplicationRecord& OutRecord)"
  },
  {
    "label": "CommitReplicationRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitReplicationRecord(const FCommitRecord& Record)"
  },
  {
    "label": "ProcessPacketDeliveryStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPacketDeliveryStatus(EPacketDeliveryStatus Status, const FReliableReplicationRecord& Record)"
  },
  {
    "label": "Enqueue()",
    "kind": "Method",
    "detail": "Function (FReliableSendQueue* ReliableQueue ; TResizableCircularQueue<TRefCountPtr<FNetBlob>> UnreliableQueue ; uint32 MaxUnreliableCount ; } ; class FNetObjectAttachmentsWriter { public : typedef FNetObjectAttachmentSendQueue::FCommitRecord FCommitRecord ; typedef FNetObjectAttachmentSendQueue::FReliableReplicationRecord FReliableReplicationRecord ; public : bool)",
    "insertText": "Enqueue(ENetObjectAttachmentType Type, uint32 ObjectIndex, TArrayView<const TRefCountPtr<FNetBlob>> Attachments)"
  },
  {
    "label": "HasUnsentAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnsentAttachments(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "HasUnsentUnreliableAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnsentUnreliableAttachments(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "IsAllSentAndAcked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllSentAndAcked(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "IsAllReliableSentAndAcked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllReliableSentAndAcked(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "AreAllObjectsReliableSentAndAcked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreAllObjectsReliableSentAndAcked()"
  },
  {
    "label": "CanSendMoreReliableAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSendMoreReliableAttachments(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "IsSafeToDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSafeToDestroy(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "DropAllAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropAllAttachments(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "DropUnreliableAttachments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropUnreliableAttachments(ENetObjectAttachmentType Type, uint32 ObjectIndex, bool& bOutHasUnsentAttachments)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (EAttachmentWriteStatus)",
    "insertText": "Serialize(FNetSerializationContext& Context, ENetObjectAttachmentType Type, uint32 ObjectIndex, FNetRefHandle RefHandle, FCommitRecord& OutRecord, bool& bOutHasUnsentAttachments)"
  },
  {
    "label": "CommitReplicationRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitReplicationRecord(ENetObjectAttachmentType Type, uint32 ObjectIndex, const FCommitRecord& Record)"
  },
  {
    "label": "ProcessPacketDeliveryStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPacketDeliveryStatus(EPacketDeliveryStatus Status, ENetObjectAttachmentType Type, uint32 ObjectIndex, const FReliableReplicationRecord& Record)"
  },
  {
    "label": "NetBlobMightNeedSplitting()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "NetBlobMightNeedSplitting(const TRefCountPtr<FNetObjectAttachment>& Attachment)"
  },
  {
    "label": "GetQueue()",
    "kind": "Method",
    "detail": "Function (FNetObjectAttachmentSendQueue*)",
    "insertText": "GetQueue(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "GetOrCreateQueue()",
    "kind": "Method",
    "detail": "Function (FNetObjectAttachmentSendQueue*)",
    "insertText": "GetOrCreateQueue(ENetObjectAttachmentType Reason, uint32 ObjectIndex)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (TMap<uint32,FNetObjectAttachmentSendQueue> ObjectToQueue ; TUniquePtr<FNetObjectAttachmentSendQueue> SpecialQueues [)",
    "insertText": "uint32(ENetObjectAttachmentType::InternalCount)"
  },
  {
    "label": "FNetObjectAttachmentReceiveQueue()",
    "kind": "Method",
    "detail": "Function (} ; struct FNetObjectAttachmentReceiveQueueInitParams { const UPartialNetObjectAttachmentHandler* PartialNetObjectAttachmentHandler = nullptr ; } ; class FNetObjectAttachmentReceiveQueue { public :)",
    "insertText": "FNetObjectAttachmentReceiveQueue()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FNetObjectAttachmentReceiveQueueInitParams& InitParams)"
  },
  {
    "label": "HasUnprocessed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnprocessed()"
  },
  {
    "label": "PeekReliable()",
    "kind": "Method",
    "detail": "Function (const TRefCountPtr<FNetBlob>*)",
    "insertText": "PeekReliable()"
  },
  {
    "label": "PopReliable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopReliable()"
  },
  {
    "label": "PeekUnreliable()",
    "kind": "Method",
    "detail": "Function (const TRefCountPtr<FNetBlob>*)",
    "insertText": "PeekUnreliable()"
  },
  {
    "label": "PopUnreliable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopUnreliable()"
  },
  {
    "label": "IsDeferredProcessingQueueEmpty()",
    "kind": "Method",
    "detail": "Function (private : FNetObjectAttachmentsReader ; class FDeferredProcessingQueue ; enum EDeferredProcessingQueue : unsigned { Unreliable,Reliable,} ; bool)",
    "insertText": "IsDeferredProcessingQueueEmpty(EDeferredProcessingQueue Queue)"
  },
  {
    "label": "IsDeferredProcessingQueueSafeToDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDeferredProcessingQueueSafeToDestroy(EDeferredProcessingQueue Queue)"
  },
  {
    "label": "HasDeferredProcessingQueueUnprocessed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDeferredProcessingQueueUnprocessed(EDeferredProcessingQueue Queue)"
  },
  {
    "label": "IsPartialNetBlob()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPartialNetBlob(const TRefCountPtr<FNetBlob>& Blob)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deserialize(FNetSerializationContext& Context, FNetRefHandle RefHandle)"
  },
  {
    "label": "DeserializeReliable()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "DeserializeReliable(FNetSerializationContext& Context, FNetRefHandle RefHandle)"
  },
  {
    "label": "DeserializeUnreliable()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "DeserializeUnreliable(FNetSerializationContext& Context, FNetRefHandle RefHandle)"
  },
  {
    "label": "FNetObjectAttachmentsReader()",
    "kind": "Method",
    "detail": "Function (FReliableNetBlobQueue* ReliableQueue = nullptr ; FDeferredProcessingQueue* DeferredProcessingQueues [ 2 ] = { } ; const UPartialNetObjectAttachmentHandler* PartialNetObjectAttachmentHandler = nullptr ; uint32 MaxUnreliableCount = 0 ; FNetBlobType PartialNetBlobType = InvalidNetBlobType ; } ; struct FNetObjectAttachmentsReaderInitParams { const UPartialNetObjectAttachmentHandler* PartialNetObjectAttachmentHandler = nullptr ; } ; class FNetObjectAttachmentsReader { public :)",
    "insertText": "FNetObjectAttachmentsReader()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FNetObjectAttachmentsReaderInitParams& InitParams)"
  },
  {
    "label": "HasUnprocessedAttachments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnprocessedAttachments(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deserialize(FNetSerializationContext& Context, ENetObjectAttachmentType Type, uint32 ObjectIndex, FNetRefHandle RefHandle)"
  },
  {
    "label": "GetOrCreateQueue()",
    "kind": "Method",
    "detail": "Function (FNetObjectAttachmentReceiveQueue*)",
    "insertText": "GetOrCreateQueue(ENetObjectAttachmentType Type, uint32 ObjectIndex)"
  }
]