[
  {
    "label": "MemoryPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryPool"
  },
  {
    "label": "MemPoolPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MemPoolPolicy"
  },
  {
    "label": "MemPoolPolicy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MemPoolPolicy"
  },
  {
    "label": "MemPoolError",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MemPoolError"
  },
  {
    "label": "scalable_allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "scalable_allocator"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "rebind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rebind"
  },
  {
    "label": "scalable_allocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "scalable_allocator"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "rebind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rebind"
  },
  {
    "label": "scalable_resource_impl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "scalable_resource_impl"
  },
  {
    "label": "bool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "bool"
  },
  {
    "label": "scalable_malloc()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_malloc(size_t size)"
  },
  {
    "label": "scalable_free()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_free(void* ptr)"
  },
  {
    "label": "scalable_realloc()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_realloc(void* ptr, size_t size)"
  },
  {
    "label": "scalable_calloc()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_calloc(size_t nobj, size_t size)"
  },
  {
    "label": "scalable_posix_memalign()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_posix_memalign(void** memptr, size_t alignment, size_t size)"
  },
  {
    "label": "scalable_aligned_malloc()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_aligned_malloc(size_t size, size_t alignment)"
  },
  {
    "label": "scalable_aligned_realloc()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_aligned_realloc(void* ptr, size_t size, size_t alignment)"
  },
  {
    "label": "scalable_aligned_free()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_aligned_free(void* ptr)"
  },
  {
    "label": "scalable_msize()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_msize(void* ptr)"
  },
  {
    "label": "scalable_allocation_mode()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_allocation_mode(int param, intptr_t value)"
  },
  {
    "label": "scalable_allocation_command()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "scalable_allocation_command(int cmd, void *param)"
  },
  {
    "label": "pool_create_v1()",
    "kind": "Method",
    "detail": "Function (MemPoolError)",
    "insertText": "pool_create_v1(intptr_t pool_id, const MemPoolPolicy *policy,\n                            rml::MemoryPool **pool)"
  },
  {
    "label": "pool_destroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "pool_destroy(MemoryPool* memPool)"
  },
  {
    "label": "pool_reset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "pool_reset(MemoryPool* memPool)"
  },
  {
    "label": "pool_free()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "pool_free(MemoryPool *memPool, void *object)"
  },
  {
    "label": "pool_msize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "pool_msize(MemoryPool *memPool, void *object)"
  }
]