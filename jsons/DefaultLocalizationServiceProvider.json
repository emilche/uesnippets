[
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "ULocalizationTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalizationTarget"
  },
  {
    "label": "ULocalizationTargetSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalizationTargetSet"
  },
  {
    "label": "FDefaultLocalizationServiceProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultLocalizationServiceProvider"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / MultiBox / MultiBoxExtender . h \" # include \" ILocalizationServiceOperation . h \" # include \" ILocalizationServiceState . h \" # include \" ILocalizationServiceProvider . h \" class IDetailCategoryBuilder ; class ULocalizationTarget ; class ULocalizationTargetSet ; class FDefaultLocalizationServiceProvider : public ILocalizationServiceProvider { public : void)",
    "insertText": "Init(bool bForceConnection = true)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "GetStatusText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetStatusText()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FName&)",
    "insertText": "GetName(void)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (const FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (ELocalizationServiceOperationCommandResult::Type)",
    "insertText": "GetState(const TArray<FLocalizationServiceTranslationIdentifier>& InTranslationIds, TArray< TSharedRef<ILocalizationServiceState, ESPMode::ThreadSafe> >& OutState, ELocalizationServiceCacheUsage::Type InStateCacheUsage)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (ELocalizationServiceOperationCommandResult::Type)",
    "insertText": "Execute(const TSharedRef<ILocalizationServiceOperation, ESPMode::ThreadSafe>& InOperation, const TArray<FLocalizationServiceTranslationIdentifier>& InTranslationIds, ELocalizationServiceOperationConcurrency::Type InConcurrency = ELocalizationServiceOperationConcurrency::Synchronous, const FLocalizationServiceOperationComplete& InOperationCompleteDelegate = FLocalizationServiceOperationComplete())"
  },
  {
    "label": "CanCancelOperation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCancelOperation(const TSharedRef<ILocalizationServiceOperation, ESPMode::ThreadSafe>& InOperation)"
  },
  {
    "label": "CancelOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelOperation(const TSharedRef<ILocalizationServiceOperation, ESPMode::ThreadSafe>& InOperation)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick()"
  },
  {
    "label": "CustomizeSettingsDetails()",
    "kind": "Method",
    "detail": "Function (# if LOCALIZATION_SERVICES_WITH_SLATE void)",
    "insertText": "CustomizeSettingsDetails(IDetailCategoryBuilder& DetailCategoryBuilder)"
  },
  {
    "label": "CustomizeTargetDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeTargetDetails(IDetailCategoryBuilder& DetailCategoryBuilder, TWeakObjectPtr<ULocalizationTarget> LocalizationTarget)"
  },
  {
    "label": "CustomizeTargetToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeTargetToolbar(TSharedRef<FExtender>& MenuExtender, TWeakObjectPtr<ULocalizationTarget> LocalizationTarget)"
  },
  {
    "label": "CustomizeTargetSetToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeTargetSetToolbar(TSharedRef<FExtender>& MenuExtender, TWeakObjectPtr<ULocalizationTargetSet> LocalizationTargetSet)"
  }
]