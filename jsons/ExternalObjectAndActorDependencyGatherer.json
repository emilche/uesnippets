[
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "FExternalObjectAndActorDependencyGatherer()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" AssetRegistry / AssetDependencyGatherer . h \" # include \" AssetRegistry / AssetData . h \" # include \" Engine / World . h \" class FExternalObjectAndActorDependencyGatherer : public IAssetDependencyGatherer { public :)",
    "insertText": "FExternalObjectAndActorDependencyGatherer()"
  },
  {
    "label": "GatherDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDependencies(const FAssetData& AssetData, const FAssetRegistryState& AssetRegistryState, TFunctionRef<FARCompiledFilter(const FARFilter&)> CompileFilterFunc, TArray<IAssetDependencyGatherer::FGathereredDependency>& OutDependencies, TArray<FString>& OutDependencyDirectories)"
  }
]