[
  {
    "label": "INTCExtensionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCExtensionContext"
  },
  {
    "label": "INTCDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCDeviceInfo"
  },
  {
    "label": "INTCExtensionVersion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCExtensionVersion"
  },
  {
    "label": "INTCExtensionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCExtensionInfo"
  },
  {
    "label": "INTCExtensionAppInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCExtensionAppInfo"
  },
  {
    "label": "INTCAppInfoVersion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCAppInfoVersion"
  },
  {
    "label": "INTCExtensionAppInfo1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTCExtensionAppInfo1"
  },
  {
    "label": "INTC_D3D11_TEXTURE2D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D11_TEXTURE2D_DESC"
  },
  {
    "label": "INTC_D3D12_COMMAND_QUEUE_THROTTLE_POLICY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "INTC_D3D12_COMMAND_QUEUE_THROTTLE_POLICY"
  },
  {
    "label": "INTC_D3D12_COMMAND_QUEUE_DESC_0001",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_COMMAND_QUEUE_DESC_0001"
  },
  {
    "label": "INTC_D3D12_SHADER_INPUT_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "INTC_D3D12_SHADER_INPUT_TYPE"
  },
  {
    "label": "INTC_D3D12_COMPUTE_PIPELINE_STATE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_COMPUTE_PIPELINE_STATE_DESC"
  },
  {
    "label": "INTC_D3D12_RESOURCE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_RESOURCE_DESC"
  },
  {
    "label": "INTC_D3D12_RESOURCE_DESC_0001",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_RESOURCE_DESC_0001"
  },
  {
    "label": "INTC_D3D12_RESOURCE_DESC_0002",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_RESOURCE_DESC_0002"
  },
  {
    "label": "INTC_D3D12_HEAP_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_HEAP_DESC"
  },
  {
    "label": "INTC_D3D12_STATE_OBJECT_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_STATE_OBJECT_DESC"
  },
  {
    "label": "INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_TYPE"
  },
  {
    "label": "INTC_D3D12_INSTANCE_COMPARISON_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_INSTANCE_COMPARISON_DATA"
  },
  {
    "label": "INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA"
  },
  {
    "label": "INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC"
  },
  {
    "label": "INTC_D3D12_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILDINFO_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILDINFO_DESC"
  },
  {
    "label": "INTC_D3D12_FEATURE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_FEATURE"
  },
  {
    "label": "INTC_D3D12_FEATURES",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "INTC_D3D12_FEATURES"
  },
  {
    "label": "INTC_D3D12_FEATURE_DATA_D3D12_OPTIONS1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_FEATURE_DATA_D3D12_OPTIONS1"
  },
  {
    "label": "INTC_D3D12_FEATURE_DATA_D3D12_OPTIONS2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "INTC_D3D12_FEATURE_DATA_D3D12_OPTIONS2"
  },
  {
    "label": "warning()",
    "kind": "Method",
    "detail": "Function (# ifndef _IGDEXTAPI_H_ # define _IGDEXTAPI_H_ # include \" stdint . h \" # pragma)",
    "insertText": "warning(push) #pragma warning(disable: 4201)"
  },
  {
    "label": "INTC_D3D11_BeginUAVOverlap()",
    "kind": "Method",
    "detail": "Function (# endif struct INTCExtensionContext ; struct INTCDeviceInfo { uint32_t GPUMaxFreq ; uint32_t GPUMinFreq ; uint32_t GTGeneration ; uint32_t EUCount ; uint32_t PackageTDP ; uint32_t MaxFillRate ; wchar_t GTGenerationName [ 6 4 ] ; } ; struct INTCExtensionVersion { uint32_t HWFeatureLevel ; uint32_t APIVersion ; uint32_t Revision ; } ; struct INTCExtensionInfo { INTCExtensionVersion RequestedExtensionVersion ; INTCDeviceInfo IntelDeviceInfo ; const wchar_t* pDeviceDriverDesc ; const wchar_t* pDeviceDriverVersion ; uint32_t DeviceDriverBuildNumber ; } ; struct INTCExtensionAppInfo { const wchar_t* pApplicationName ; uint32_t ApplicationVersion ; const wchar_t* pEngineName ; uint32_t EngineVersion ; } ; struct INTCAppInfoVersion { union { struct { uint32_t major ; uint32_t minor ; uint32_t patch ; uint32_t reserved ; } ; uint8_t raw [ 1 6 ] ; } ; } ; struct INTCExtensionAppInfo1 { const wchar_t* pApplicationName ; INTCAppInfoVersion ApplicationVersion ; const wchar_t* pEngineName ; INTCAppInfoVersion EngineVersion ; } ; # ifdef INTC_IGDEXT_D3D11 struct INTC_D3D11_TEXTURE2D_DESC { union { D3D11_TEXTURE2D_DESC* pD3D11Desc ; } ; BOOL EmulatedTyped64bitAtomics ; } ; # endif # ifdef INTC_IGDEXT_D3D12 enum INTC_D3D12_COMMAND_QUEUE_THROTTLE_POLICY { INTC_D3D12_COMMAND_QUEUE_THROTTLE_DYNAMIC = 0,INTC_D3D12_COMMAND_QUEUE_THROTTLE_MAX_PERFORMANCE = 2 5 5 } ; struct INTC_D3D12_COMMAND_QUEUE_DESC_0001 { union { D3D12_COMMAND_QUEUE_DESC* pD3D12Desc ; } ; INTC_D3D12_COMMAND_QUEUE_THROTTLE_POLICY CommandThrottlePolicy ; } ; using INTC_D3D12_COMMAND_QUEUE_DESC = INTC_D3D12_COMMAND_QUEUE_DESC_0001 ; enum INTC_D3D12_SHADER_INPUT_TYPE { NONE = 0,CM = 1,CM_SPIRV = 2,OpenCL = 3,SPIRV = 4,HLSL = 5,CL_BIN = 6,ESIMD_SPIRV = 7,ZEBIN_ELF = 8 } ; struct INTC_D3D12_COMPUTE_PIPELINE_STATE_DESC { union { D3D12_COMPUTE_PIPELINE_STATE_DESC* pD3D12Desc ; } ; D3D12_SHADER_BYTECODE CS ; INTC_D3D12_SHADER_INPUT_TYPE ShaderInputType ; void* CompileOptions ; void* InternalOptions ; } ; struct INTC_D3D12_RESOURCE_DESC { union { D3D12_RESOURCE_DESC* pD3D12Desc ; } ; BOOL Texture2DArrayMipPack ; } ; struct INTC_D3D12_RESOURCE_DESC_0001 : INTC_D3D12_RESOURCE_DESC { BOOL EmulatedTyped64bitAtomics ; } ; struct INTC_D3D12_RESOURCE_DESC_0002 : INTC_D3D12_RESOURCE_DESC_0001 { BOOL ResourceFlagCpuVisibleVideoMemory ; } ; struct INTC_D3D12_HEAP_DESC { union { D3D12_HEAP_DESC* pD3D12Desc ; } ; BOOL HeapFlagCpuVisibleVideoMemory ; } ; struct INTC_D3D12_STATE_OBJECT_DESC { union { D3D12_STATE_OBJECT_DESC* pD3D12Desc ; } ; D3D12_SHADER_BYTECODE* DXILLibrary ; unsigned int numLibraries ; } ; enum INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_TYPE { D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_EXT_INSTANCE_COMPARISON = 0,} ; struct INTC_D3D12_INSTANCE_COMPARISON_DATA { UINT InstanceValue : 8 ; UINT InstanceComparisonOperator : 8 ; } ; struct INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA { void* pNext ; UINT ExtType ; D3D12_GPU_VIRTUAL_ADDRESS InstanceComparisonData ; } ; struct INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC { union { D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC* pDesc ; } ; INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA* pCompDataDesc ; } ; struct INTC_D3D12_GET_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILDINFO_DESC { union { D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS* pDesc ; } ; INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA* pCompDataDesc ; } ; struct INTC_D3D12_FEATURE { BOOL EmulatedTyped64bitAtomics ; } ; enum INTC_D3D12_FEATURES { INTC_D3D12_FEATURE_D3D12_OPTIONS1,INTC_D3D12_FEATURE_D3D12_OPTIONS2 } ; struct INTC_D3D12_FEATURE_DATA_D3D12_OPTIONS1 { BOOL XMXEnabled ; BOOL DLBoostEnabled ; BOOL EmulatedTyped64bitAtomics ; } ; struct INTC_D3D12_FEATURE_DATA_D3D12_OPTIONS2 { BOOL SIMD16Required ; BOOL LSCSupported ; BOOL LegacyTranslationRequired ; } ; # endif # ifdef INTC_IGDEXT_D3D11 HRESULT)",
    "insertText": "INTC_D3D11_BeginUAVOverlap(INTCExtensionContext* pExtensionContext)"
  },
  {
    "label": "INTC_D3D11_EndUAVOverlap()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D11_EndUAVOverlap(INTCExtensionContext* pExtensionContext)"
  },
  {
    "label": "INTC_D3D11_MultiDrawInstancedIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D11_MultiDrawInstancedIndirect(INTCExtensionContext* pExtensionContext, ID3D11DeviceContext* pDeviceContext, UINT drawCount, ID3D11Buffer* pBufferForArgs, UINT alignedByteOffsetForArgs, UINT byteStrideForArgs)"
  },
  {
    "label": "INTC_D3D11_MultiDrawIndexedInstancedIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D11_MultiDrawIndexedInstancedIndirect(INTCExtensionContext* pExtensionContext, ID3D11DeviceContext* pDeviceContext, UINT drawCount, ID3D11Buffer* pBufferForArgs, UINT alignedByteOffsetForArgs, UINT byteStrideForArgs)"
  },
  {
    "label": "INTC_D3D11_MultiDrawInstancedIndirectCountIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D11_MultiDrawInstancedIndirectCountIndirect(INTCExtensionContext* pExtensionContext, ID3D11DeviceContext* pDeviceContext, ID3D11Buffer* pBufferForDrawCount, UINT alignedByteOffsetForDrawCount, UINT maxCount, ID3D11Buffer* pBufferForArgs, UINT alignedByteOffsetForArgs, UINT byteStrideForArgs)"
  },
  {
    "label": "INTC_D3D11_MultiDrawIndexedInstancedIndirectCountIndirect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D11_MultiDrawIndexedInstancedIndirectCountIndirect(INTCExtensionContext* pExtensionContext, ID3D11DeviceContext* pDeviceContext, ID3D11Buffer* pBufferForDrawCount, UINT alignedByteOffsetForDrawCount, UINT maxCount, ID3D11Buffer* pBufferForArgs, UINT alignedByteOffsetForArgs, UINT byteStrideForArgs)"
  },
  {
    "label": "INTC_D3D11_SetDepthBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D11_SetDepthBounds(INTCExtensionContext* pExtensionContext, BOOL bEnable, FLOAT Min, FLOAT Max)"
  },
  {
    "label": "INTC_D3D11_CreateTexture2D()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D11_CreateTexture2D(INTCExtensionContext* pExtensionContext, const INTC_D3D11_TEXTURE2D_DESC* pDesc, const D3D11_SUBRESOURCE_DATA* pInitialData, ID3D11Texture2D** ppTexture2D)"
  },
  {
    "label": "INTC_D3D12_CreateCommandQueue()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef INTC_IGDEXT_D3D12 HRESULT)",
    "insertText": "INTC_D3D12_CreateCommandQueue(INTCExtensionContext* pExtensionContext, const INTC_D3D12_COMMAND_QUEUE_DESC* pDesc, REFIID riid, void** ppCommandQueue)"
  },
  {
    "label": "INTC_D3D12_CreateComputePipelineState()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateComputePipelineState(INTCExtensionContext* pExtensionContext, const INTC_D3D12_COMPUTE_PIPELINE_STATE_DESC* pDesc, REFIID riid, void** ppPipelineState)"
  },
  {
    "label": "INTC_D3D12_CreateReservedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateReservedResource(INTCExtensionContext* pExtensionContext, const INTC_D3D12_RESOURCE_DESC* pDesc, D3D12_RESOURCE_STATES InitialState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, REFIID riid, void** ppvResource)"
  },
  {
    "label": "INTC_D3D12_CreateCommittedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateCommittedResource(INTCExtensionContext* pExtensionContext, const D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, const INTC_D3D12_RESOURCE_DESC_0001* pDesc, D3D12_RESOURCE_STATES InitialResourceState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, REFIID riidResource, void** ppvResource)"
  },
  {
    "label": "INTC_D3D12_CreateCommittedResource1()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateCommittedResource1(INTCExtensionContext* pExtensionContext, const D3D12_HEAP_PROPERTIES* pHeapProperties, D3D12_HEAP_FLAGS HeapFlags, const INTC_D3D12_RESOURCE_DESC_0002* pDesc, D3D12_RESOURCE_STATES InitialResourceState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, REFIID riidResource, void** ppvResource)"
  },
  {
    "label": "INTC_D3D12_CreateHeap()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateHeap(INTCExtensionContext* pExtensionContext, const INTC_D3D12_HEAP_DESC* pDesc, REFIID riid, void** ppvHeap)"
  },
  {
    "label": "INTC_D3D12_CreatePlacedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreatePlacedResource(INTCExtensionContext* pExtensionContext, ID3D12Heap* pHeap, UINT64 HeapOffset, const INTC_D3D12_RESOURCE_DESC_0001* pDesc, D3D12_RESOURCE_STATES InitialState, const D3D12_CLEAR_VALUE* pOptimizedClearValue, REFIID riid, void** ppvResource)"
  },
  {
    "label": "INTC_D3D12_CreateHostRTASResource()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateHostRTASResource(INTCExtensionContext* pExtensionContext, size_t SizeInBytes, DWORD Flags, REFIID riidResource, void** ppvResource)"
  },
  {
    "label": "INTC_D3D12_BuildRaytracingAccelerationStructure_Host()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_BuildRaytracingAccelerationStructure_Host(INTCExtensionContext* pExtensionContext, const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC* pDesc, const D3D12_GPU_VIRTUAL_ADDRESS* pInstanceGPUVAs, UINT NumInstances)"
  },
  {
    "label": "INTC_D3D12_CopyRaytracingAccelerationStructure_Host()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_CopyRaytracingAccelerationStructure_Host(INTCExtensionContext* pExtensionContext, void* DestAccelerationStructureData, const void* SourceAccelerationStructureData, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode)"
  },
  {
    "label": "INTC_D3D12_EmitRaytracingAccelerationStructurePostbuildInfo_Host()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_EmitRaytracingAccelerationStructurePostbuildInfo_Host(INTCExtensionContext* pExtensionContext, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_TYPE InfoType, void* DestBuffer, const void* SourceRTAS)"
  },
  {
    "label": "INTC_D3D12_GetRaytracingAccelerationStructurePrebuildInfo_Host()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_GetRaytracingAccelerationStructurePrebuildInfo_Host(INTCExtensionContext* pExtensionContext, const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS* pDesc, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO* pInfo)"
  },
  {
    "label": "INTC_D3D12_TransferHostRTAS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_TransferHostRTAS(INTCExtensionContext* pExtensionContext, ID3D12GraphicsCommandList* pCommandList, D3D12_GPU_VIRTUAL_ADDRESS DestAccelerationStructureData, D3D12_GPU_VIRTUAL_ADDRESS SrcAccelerationStructureData, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_COPY_MODE Mode)"
  },
  {
    "label": "INTC_D3D12_SetDriverEventMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_SetDriverEventMetadata(INTCExtensionContext* pExtensionContext, ID3D12GraphicsCommandList* pCommandList, UINT64 Metadata)"
  },
  {
    "label": "INTC_D3D12_QueryCpuVisibleVidmem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_QueryCpuVisibleVidmem(INTCExtensionContext* pExtensionContext, UINT64* pTotalBytes, UINT64* pFreeBytes)"
  },
  {
    "label": "INTC_D3D12_CreateStateObject()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateStateObject(INTCExtensionContext* pExtensionContext, const INTC_D3D12_STATE_OBJECT_DESC* pDesc, REFIID riid, void** ppPipelineState)"
  },
  {
    "label": "INTC_D3D12_BuildRaytracingAccelerationStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_BuildRaytracingAccelerationStructure(INTCExtensionContext* pExtensionContext, ID3D12GraphicsCommandList* pCommandList, const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC* pDesc, UINT NumPostbuildInfoDescs, const D3D12_RAYTRACING_ACCELERATION_STRUCTURE_POSTBUILD_INFO_DESC* pPostbuildInfoDescs, const INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA* pComparisonDataDesc)"
  },
  {
    "label": "INTC_D3D12_GetRaytracingAccelerationStructurePrebuildInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_D3D12_GetRaytracingAccelerationStructurePrebuildInfo(INTCExtensionContext* pExtensionContext, const D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_INPUTS* pDesc, D3D12_RAYTRACING_ACCELERATION_STRUCTURE_PREBUILD_INFO* pInfo, const INTC_D3D12_BUILD_RAYTRACING_ACCELERATION_STRUCTURE_DESC_INSTANCE_COMPARISON_DATA* pComparisonDataDesc)"
  },
  {
    "label": "INTC_D3D12_SetFeatureSupport()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_SetFeatureSupport(INTCExtensionContext* pExtensionContext, INTC_D3D12_FEATURE* pFeature)"
  },
  {
    "label": "INTC_D3D12_GetResourceAllocationInfo()",
    "kind": "Method",
    "detail": "Function (D3D12_RESOURCE_ALLOCATION_INFO)",
    "insertText": "INTC_D3D12_GetResourceAllocationInfo(INTCExtensionContext* pExtensionContext, UINT visibleMask, UINT numResourceDescs, const INTC_D3D12_RESOURCE_DESC_0001* pResourceDescs)"
  },
  {
    "label": "INTC_D3D12_CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CheckFeatureSupport(INTCExtensionContext* pExtensionContext, INTC_D3D12_FEATURES Feature, void* pFeatureSupportData, UINT FeatureSupportDataSize)"
  },
  {
    "label": "INTC_D3D12_AddShaderCachePath()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_AddShaderCachePath(INTCExtensionContext* pExtensionContext, const wchar_t* filePath)"
  },
  {
    "label": "INTC_D3D12_RemoveShaderCachePath()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_RemoveShaderCachePath(INTCExtensionContext* pExtensionContext, const wchar_t* filePath)"
  },
  {
    "label": "INTC_D3D12_SetApplicationInfo()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_SetApplicationInfo(INTCExtensionAppInfo1* pExtensionAppInfo)"
  },
  {
    "label": "INTC_D3D12_GetApplicationInfo()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_GetApplicationInfo(INTCExtensionAppInfo1* pExtensionAppInfo)"
  },
  {
    "label": "INTC_LoadExtensionsLibrary()",
    "kind": "Method",
    "detail": "Function (# endif HRESULT)",
    "insertText": "INTC_LoadExtensionsLibrary(bool useCurrentProcessDir = false, size_t VendorID = 0, size_t DeviceID = 0)"
  },
  {
    "label": "INTC_UnloadExtensionsLibrary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INTC_UnloadExtensionsLibrary()"
  },
  {
    "label": "INTC_D3D11_GetSupportedVersions()",
    "kind": "Method",
    "detail": "Function (# ifdef INTC_IGDEXT_D3D11 HRESULT)",
    "insertText": "INTC_D3D11_GetSupportedVersions(ID3D11Device* pDevice, INTCExtensionVersion* pSupportedExtVersions, uint32_t* pSupportedExtVersionsCount)"
  },
  {
    "label": "INTC_D3D11_CreateDeviceExtensionContext()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D11_CreateDeviceExtensionContext(ID3D11Device* pDevice, INTCExtensionContext** ppExtensionContext, INTCExtensionInfo* pExtensionInfo, INTCExtensionAppInfo* pExtensionAppInfo)"
  },
  {
    "label": "INTC_D3D12_GetSupportedVersions()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef INTC_IGDEXT_D3D12 HRESULT)",
    "insertText": "INTC_D3D12_GetSupportedVersions(ID3D12Device* pDevice, INTCExtensionVersion* pSupportedExtVersions, uint32_t* pSupportedExtVersionsCount)"
  },
  {
    "label": "INTC_D3D12_CreateDeviceExtensionContext()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateDeviceExtensionContext(ID3D12Device* pDevice, INTCExtensionContext** ppExtensionContext, INTCExtensionInfo* pExtensionInfo, INTCExtensionAppInfo* pExtensionAppInfo)"
  },
  {
    "label": "INTC_D3D12_CreateDeviceExtensionContext1()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "INTC_D3D12_CreateDeviceExtensionContext1(ID3D12Device* pDevice, INTCExtensionContext** ppExtensionContext, INTCExtensionInfo* pExtensionInfo, INTCExtensionAppInfo1* pExtensionAppInfo)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(INTC_IGDEXT_D3D11) && defined(INTC_IGDEXT_D3D12) HRESULT INTC_CreateDeviceExtensionContext( ID3D11Device* pD3D11Device, ID3D12Device* pD3D12Device, INTCExtensionContext** ppExtensionContext, INTCExtensionInfo* pExtensionInfo, INTCExtensionAppInfo* pExtensionAppInfo)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "defined(INTC_IGDEXT_D3D11) || defined(INTC_IGDEXT_D3D12) HRESULT INTC_DestroyDeviceExtensionContext( INTCExtensionContext** ppExtensionContext)"
  }
]