[
  {
    "label": "FDebugTraceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugTraceInfo"
  },
  {
    "label": "UCheatManagerExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCheatManagerExtension"
  },
  {
    "label": "UCheatManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCheatManager"
  },
  {
    "label": "ADebugCameraController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADebugCameraController"
  },
  {
    "label": "ADebugCameraController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADebugCameraController"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "FDebugTraceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugTraceInfo"
  },
  {
    "label": "FDebugTraceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugTraceInfo"
  },
  {
    "label": "aClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "aClass"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "aClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "aClass"
  },
  {
    "label": "APawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APawn"
  },
  {
    "label": "DesiredClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DesiredClass"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "AddedToCheatManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddedToCheatManager()"
  },
  {
    "label": "AddedToCheatManager_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddedToCheatManager_Implementation()"
  },
  {
    "label": "RemovedFromCheatManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovedFromCheatManager()"
  },
  {
    "label": "RemovedFromCheatManager_Implementation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovedFromCheatManager_Implementation()"
  },
  {
    "label": "DoExtensionSpecificBugItLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoExtensionSpecificBugItLog(FOutputDevice& OutputFile)"
  },
  {
    "label": "FreezeFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreezeFrame(float Delay)"
  },
  {
    "label": "Teleport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Teleport()"
  },
  {
    "label": "ChangeSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeSize(float F)"
  },
  {
    "label": "Fly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fly()"
  },
  {
    "label": "Walk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Walk()"
  },
  {
    "label": "Ghost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Ghost()"
  },
  {
    "label": "God()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "God()"
  },
  {
    "label": "Slomo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Slomo(float NewTimeDilation)"
  },
  {
    "label": "DamageTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DamageTarget(float DamageAmount)"
  },
  {
    "label": "DestroyTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyTarget()"
  },
  {
    "label": "DestroyAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAll(TSubclassOf<class AActor>  aClass)"
  },
  {
    "label": "DestroyAllPawnsExceptTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAllPawnsExceptTarget()"
  },
  {
    "label": "DestroyPawns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPawns(TSubclassOf<class APawn> aClass)"
  },
  {
    "label": "Summon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Summon(const FString& ClassName)"
  },
  {
    "label": "PlayersOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PlayersOnly()"
  },
  {
    "label": "ViewSelf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewSelf()"
  },
  {
    "label": "ViewPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewPlayer(const FString& S)"
  },
  {
    "label": "ViewActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewActor(FName ActorName)"
  },
  {
    "label": "ViewClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewClass(TSubclassOf<class AActor> DesiredClass)"
  },
  {
    "label": "StreamLevelIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamLevelIn(FName PackageName)"
  },
  {
    "label": "OnlyLoadLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnlyLoadLevel(FName PackageName)"
  },
  {
    "label": "StreamLevelOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamLevelOut(FName PackageName)"
  },
  {
    "label": "ToggleDebugCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleDebugCamera()"
  },
  {
    "label": "ToggleAILogging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleAILogging()"
  },
  {
    "label": "ServerToggleAILogging()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerToggleAILogging()"
  },
  {
    "label": "DebugCapsuleSweep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweep()"
  },
  {
    "label": "DebugCapsuleSweepSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweepSize(float HalfHeight, float Radius)"
  },
  {
    "label": "DebugCapsuleSweepChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweepChannel(enum ECollisionChannel Channel)"
  },
  {
    "label": "DebugCapsuleSweepComplex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweepComplex(bool bTraceComplex)"
  },
  {
    "label": "DebugCapsuleSweepCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweepCapture()"
  },
  {
    "label": "DebugCapsuleSweepPawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweepPawn()"
  },
  {
    "label": "DebugCapsuleSweepClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCapsuleSweepClear()"
  },
  {
    "label": "TestCollisionDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestCollisionDistance()"
  },
  {
    "label": "DumpOnlineSessionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpOnlineSessionState()"
  },
  {
    "label": "DumpPartyState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpPartyState()"
  },
  {
    "label": "DumpChatState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpChatState()"
  },
  {
    "label": "DumpVoiceMutingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpVoiceMutingState()"
  },
  {
    "label": "BugItGo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BugItGo(float X, float Y, float Z, float Pitch, float Yaw, float Roll)"
  },
  {
    "label": "BugItGoString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BugItGoString(const FString& TheLocation, const FString& TheRotation)"
  },
  {
    "label": "BugItStringCreator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BugItStringCreator(FVector ViewLocation, FRotator ViewRotation, FString& GoString, FString& LocString)"
  },
  {
    "label": "FlushLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushLog()"
  },
  {
    "label": "LogLoc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogLoc()"
  },
  {
    "label": "SetWorldOrigin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWorldOrigin()"
  },
  {
    "label": "SetMouseSensitivityToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMouseSensitivityToDefault()"
  },
  {
    "label": "InvertMouse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvertMouse()"
  },
  {
    "label": "CheatScript()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheatScript(FString ScriptName)"
  },
  {
    "label": "SpawnServerStatReplicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnServerStatReplicator()"
  },
  {
    "label": "DestroyServerStatReplicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyServerStatReplicator()"
  },
  {
    "label": "ToggleServerStatReplicatorClientOverwrite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleServerStatReplicatorClientOverwrite()"
  },
  {
    "label": "ToggleServerStatReplicatorUpdateStatNet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleServerStatReplicatorUpdateStatNet()"
  },
  {
    "label": "UpdateSafeArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSafeArea()"
  },
  {
    "label": "OnPlayerEndPlayed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPlayerEndPlayed(AActor* Player, EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "BugItWorker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BugItWorker( FVector TheLocation, FRotator TheRotation )"
  },
  {
    "label": "LogOutBugItGoToLogFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogOutBugItGoToLogFile( const FString& InScreenShotDesc, const FString& InScreenShotPath, const FString& InGoString, const FString& InLocString )"
  },
  {
    "label": "TickCollisionDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickCollisionDebug()"
  },
  {
    "label": "AddCapsuleSweepDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCapsuleSweepDebugInfo(\n\t\tconst FVector& LineTraceStart, \n\t\tconst FVector& LineTraceEnd, \n\t\tconst FVector& HitImpactLocation, \n\t\tconst FVector& HitNormal, \n\t\tconst FVector& HitImpactNormal, \n\t\tconst FVector& HitLocation, \n\t\tfloat CapsuleHalfheight, \n\t\tfloat CapsuleRadius, \n\t\tbool bTracePawn, \n\t\tbool bInsideOfObject )"
  },
  {
    "label": "SetLevelStreamingStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelStreamingStatus(FName PackageName, bool bShouldBeLoaded, bool bShouldBeVisible)"
  },
  {
    "label": "ReceiveInitCheatManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveInitCheatManager()"
  },
  {
    "label": "InitCheatManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCheatManager()"
  },
  {
    "label": "ReceiveEndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveEndPlay()"
  },
  {
    "label": "AddCheatManagerExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCheatManagerExtension(UCheatManagerExtension* CheatObject)"
  },
  {
    "label": "RemoveCheatManagerExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCheatManagerExtension(UCheatManagerExtension* CheatObject)"
  },
  {
    "label": "RegisterForOnCheatManagerCreated()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterForOnCheatManagerCreated(FOnCheatManagerCreated::FDelegate&& Delegate)"
  },
  {
    "label": "UnregisterFromOnCheatManagerCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterFromOnCheatManagerCreated(FDelegateHandle DelegateHandle)"
  },
  {
    "label": "DoGameSpecificBugItLog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoGameSpecificBugItLog(FOutputDevice& OutputFile)"
  },
  {
    "label": "EnableDebugCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableDebugCamera()"
  },
  {
    "label": "DisableDebugCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableDebugCamera()"
  }
]