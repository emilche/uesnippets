[
  {
    "label": "NetworkClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkClient"
  },
  {
    "label": "SessionClientCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SessionClientCreateInfo"
  },
  {
    "label": "SessionClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SessionClient"
  },
  {
    "label": "InternalProcessStartInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalProcessStartInfo"
  },
  {
    "label": "ModuleInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ModuleInfo"
  },
  {
    "label": "ApplicationEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ApplicationEnvironment"
  },
  {
    "label": "NameRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NameRec"
  },
  {
    "label": "HashRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HashRec"
  },
  {
    "label": "ActiveUpdateDirectoryEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ActiveUpdateDirectoryEntry"
  },
  {
    "label": "SessionClientCreateInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaNetwork . h \" # include \" UbaSession . h \" namespace uba { class NetworkClient ; struct SessionClientCreateInfo : SessionCreateInfo {)",
    "insertText": "SessionClientCreateInfo(Storage& s, NetworkClient& c, LogWriter& writer = g_consoleLogWriter) : SessionCreateInfo(s, writer), client(c)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} NetworkClient& client ; StringBuffer<1 2 8> name ; u32 maxProcessCount = 1 ; u32 defaultPriorityClass = 0 x00004000 ; u32 outputStatsThresholdMs = 0 ; u32 maxIdleSeconds = ~ 0 u ; u8 memWaitLoadPercent = 8 0 ; u8 memKillLoadPercent = 9 0 ; bool dedicated = false ; bool disableCustomAllocator = false ; bool useBinariesAsVersion = false ; bool killRandom = false ; bool useStorage = true ; Function<)",
    "insertText": "void(const ProcessHandle&)"
  },
  {
    "label": "SessionClient()",
    "kind": "Method",
    "detail": "Function (} ; class SessionClient final : public Session { public :)",
    "insertText": "SessionClient(const SessionClientCreateInfo& info)"
  },
  {
    "label": "SessionClient()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SessionClient()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Wait(u32 milliseconds = 0xFFFFFFFF, Event* wakeupEvent = nullptr)"
  },
  {
    "label": "SendSummary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendSummary(const Function<void(Logger&)>& extraInfo)"
  },
  {
    "label": "SetIsTerminating()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsTerminating(const tchar* reason = TC(\"Terminating\"), u64 delayMs = 0)"
  },
  {
    "label": "SetMaxProcessCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxProcessCount(u32 count)"
  },
  {
    "label": "SetAllowSpawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowSpawn(bool allow)"
  },
  {
    "label": "GetBestPing()",
    "kind": "Method",
    "detail": "Function (u64)",
    "insertText": "GetBestPing()"
  },
  {
    "label": "RetrieveCasFile()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "RetrieveCasFile(CasKey& outNewKey, u64& outSize, const CasKey& casKey, const tchar* hint, bool storeUncompressed, bool allowProxy = true)"
  },
  {
    "label": "PrepareProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareProcess(ProcessStartInfoHolder& startInfo, bool isChild, StringBufferBase& outRealApplication, const tchar*& outRealWorkingDir)"
  },
  {
    "label": "GetProcessEnvironmentVariables()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetProcessEnvironmentVariables()"
  },
  {
    "label": "CreateFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateFile(CreateFileResponse& out, const CreateFileMessage& msg)"
  },
  {
    "label": "DeleteFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteFile(DeleteFileResponse& out, const DeleteFileMessage& msg)"
  },
  {
    "label": "CopyFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyFile(CopyFileResponse& out, const CopyFileMessage& msg)"
  },
  {
    "label": "MoveFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveFile(MoveFileResponse& out, const MoveFileMessage& msg)"
  },
  {
    "label": "Chmod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Chmod(ChmodResponse& out, const ChmodMessage& msg)"
  },
  {
    "label": "CreateDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateDirectory(CreateDirectoryResponse& out, const CreateDirectoryMessage& msg)"
  },
  {
    "label": "RemoveDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveDirectory(RemoveDirectoryResponse& out, const RemoveDirectoryMessage& msg)"
  },
  {
    "label": "GetFullFileName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFullFileName(GetFullFileNameResponse& out, const GetFullFileNameMessage& msg)"
  },
  {
    "label": "GetLongPathName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLongPathName(GetLongPathNameResponse& out, const GetLongPathNameMessage& msg)"
  },
  {
    "label": "GetListDirectoryInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetListDirectoryInfo(ListDirectoryResponse& out, tchar* dirName, const StringKey& dirKey)"
  },
  {
    "label": "WriteFilesToDisk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteFilesToDisk(ProcessImpl& process, WrittenFile** files, u32 fileCount)"
  },
  {
    "label": "AllocFailed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocFailed(Process& process, const tchar* allocType, u32 error)"
  },
  {
    "label": "PrintSessionStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintSessionStats(Logger& logger)"
  },
  {
    "label": "GetNextProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNextProcess(Process& process, bool& outNewProcess, NextProcessInfo& outNextProcess, u32 prevExitCode, BinaryReader& statsReader)"
  },
  {
    "label": "CustomMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CustomMessage(Process& process, BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "SHGetKnownFolderPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SHGetKnownFolderPath(Process& process, BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "HostRun()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HostRun(BinaryReader& reader, BinaryWriter& writer)"
  },
  {
    "label": "FlushWrittenFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FlushWrittenFiles(ProcessImpl& process)"
  },
  {
    "label": "UpdateEnvironment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateEnvironment(ProcessImpl& process, const tchar* reason, bool resetStats)"
  },
  {
    "label": "LogLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LogLine(ProcessImpl& process, const tchar* line, LogEntryType logType)"
  },
  {
    "label": "TraceSessionUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceSessionUpdate()"
  },
  {
    "label": "GetCasKeyForFile()",
    "kind": "Method",
    "detail": "Function (struct InternalProcessStartInfo ; struct ModuleInfo ; bool)",
    "insertText": "GetCasKeyForFile(CasKey& out, u32 processId, const StringBufferBase& fileName, const StringKey& fileNameKey)"
  },
  {
    "label": "ReadModules()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadModules(List<ModuleInfo>& outModules, u32 processId, const tchar* application)"
  },
  {
    "label": "EnsureBinaryFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnsureBinaryFile(StringBufferBase& out, StringBufferBase& outVirtual, u32 processId, const StringBufferBase& fileName, const StringKey& fileNameKey, const tchar* applicationDir, const u8* loaderPaths, u32 loaderPathsSize)"
  },
  {
    "label": "WriteBinFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteBinFile(StringBufferBase& out, const tchar* binaryName, const CasKey& casKey, const KeyToString& applicationDir, u32 fileAttributes)"
  },
  {
    "label": "SendFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendFiles(ProcessImpl& process, Timer& sendFiles)"
  },
  {
    "label": "SendFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendFile(WrittenFile& source, const tchar* destination, u32 processId, bool keepMappingInMemory)"
  },
  {
    "label": "SendUpdateDirectoryTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendUpdateDirectoryTable(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "UpdateDirectoryTableFromServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateDirectoryTableFromServer(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "SendUpdateNameToHashTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendUpdateNameToHashTable(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "UpdateNameToHashTableFromServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateNameToHashTableFromServer(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Connect()"
  },
  {
    "label": "BuildEnvironmentVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildEnvironmentVariables(BinaryReader& reader)"
  },
  {
    "label": "SendProcessAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendProcessAvailable(Vector<InternalProcessStartInfo>& out, float availableWeight)"
  },
  {
    "label": "SendReturnProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendReturnProcess(u32 processId, const tchar* reason)"
  },
  {
    "label": "SendProcessInputs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendProcessInputs(ProcessImpl& process)"
  },
  {
    "label": "SendProcessFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendProcessFinished(ProcessImpl& process, u32 exitCode)"
  },
  {
    "label": "SendPing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPing(u64 memAvail, u64 memTotal)"
  },
  {
    "label": "SendLogFileToServer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendLogFileToServer(ProcessImpl& pi)"
  },
  {
    "label": "GetLogFileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLogFileName(StringBufferBase& out, const tchar* logFile, const tchar* arguments, u32 processId)"
  },
  {
    "label": "CountLogLines()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "CountLogLines(ProcessImpl& process)"
  },
  {
    "label": "WriteLogLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLogLines(BinaryWriter& writer, ProcessImpl& process)"
  },
  {
    "label": "ThreadCreateProcessLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadCreateProcessLoop()"
  }
]