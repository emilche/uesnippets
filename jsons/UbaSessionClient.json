[
  {
    "label": "NetworkClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkClient"
  },
  {
    "label": "SessionClientCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SessionClientCreateInfo"
  },
  {
    "label": "SessionClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SessionClient"
  },
  {
    "label": "InternalProcessStartInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalProcessStartInfo"
  },
  {
    "label": "ModuleInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ModuleInfo"
  },
  {
    "label": "ApplicationEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ApplicationEnvironment"
  },
  {
    "label": "NameRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NameRec"
  },
  {
    "label": "HashRec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HashRec"
  },
  {
    "label": "ActiveUpdateDirectoryEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ActiveUpdateDirectoryEntry"
  },
  {
    "label": "SessionClient()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SessionClient(const SessionClientCreateInfo& info)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Wait(u32 milliseconds = 0xFFFFFFFF, Event* wakeupEvent = nullptr)"
  },
  {
    "label": "SetMaxProcessCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxProcessCount(u32 count)"
  },
  {
    "label": "SetAllowSpawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowSpawn(bool allow)"
  },
  {
    "label": "GetBestPing()",
    "kind": "Method",
    "detail": "Function (u64)",
    "insertText": "GetBestPing()"
  },
  {
    "label": "RetrieveCasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RetrieveCasFile(CasKey& outNewKey, u64& outSize, const CasKey& casKey, const tchar* hint, bool storeUncompressed, bool allowProxy = true)"
  },
  {
    "label": "GetCasKeyForFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCasKeyForFile(CasKey& out, u32 processId, const StringBufferBase& fileName, const StringKey& fileNameKey)"
  },
  {
    "label": "ReadModules()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadModules(List<ModuleInfo>& outModules, u32 processId, const tchar* application)"
  },
  {
    "label": "EnsureBinaryFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnsureBinaryFile(StringBufferBase& out, StringBufferBase& outVirtual, u32 processId, const StringBufferBase& fileName, const StringKey& fileNameKey, const tchar* applicationDir, const u8* loaderPaths, u32 loaderPathsSize)"
  },
  {
    "label": "WriteBinFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteBinFile(StringBufferBase& out, const tchar* binaryName, const CasKey& casKey, const KeyToString& applicationDir, u32 fileAttributes)"
  },
  {
    "label": "SendFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendFiles(ProcessImpl& process, Timer& sendFiles)"
  },
  {
    "label": "SendFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendFile(WrittenFile& source, const tchar* destination, u32 processId, bool keepMappingInMemory)"
  },
  {
    "label": "SendUpdateDirectoryTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendUpdateDirectoryTable(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "UpdateDirectoryTableFromServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateDirectoryTableFromServer(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "SendUpdateNameToHashTable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendUpdateNameToHashTable(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "UpdateNameToHashTableFromServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateNameToHashTableFromServer(StackBinaryReader<SendMaxSize>& reader)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Connect()"
  },
  {
    "label": "BuildEnvironmentVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildEnvironmentVariables(BinaryReader& reader)"
  },
  {
    "label": "SendProcessAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendProcessAvailable(Vector<InternalProcessStartInfo>& out, float availableWeight)"
  },
  {
    "label": "SendReturnProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendReturnProcess(u32 processId, const tchar* reason)"
  },
  {
    "label": "SendProcessInputs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendProcessInputs(ProcessImpl& process)"
  },
  {
    "label": "SendProcessFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendProcessFinished(ProcessImpl& process, u32 exitCode)"
  },
  {
    "label": "SendPing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPing(u64 memAvail, u64 memTotal)"
  },
  {
    "label": "SendLogFileToServer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendLogFileToServer(ProcessImpl& pi)"
  },
  {
    "label": "GetLogFileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLogFileName(StringBufferBase& out, const tchar* logFile, const tchar* arguments, u32 processId)"
  },
  {
    "label": "CountLogLines()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "CountLogLines(ProcessImpl& process)"
  },
  {
    "label": "WriteLogLines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLogLines(BinaryWriter& writer, ProcessImpl& process)"
  },
  {
    "label": "ThreadCreateProcessLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadCreateProcessLoop()"
  }
]