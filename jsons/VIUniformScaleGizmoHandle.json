[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "VIEWPORTINTERACTION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VIEWPORTINTERACTION_API"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" VIGizmoHandle . h \" # include \" VIUniformScaleGizmoHandle . generated . h \" enum class EGizmoHandleTypes : uint8 ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UUniformScaleGizmoHandleGroup()"
  },
  {
    "label": "UpdateGizmoHandleGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGizmoHandleGroup(const FTransform& LocalToWorld, const FBox& LocalBounds, const FVector ViewLocation, const bool bAllHandlesVisible, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles, float AnimationAlpha, float GizmoScale, const float GizmoHoverScale, const float GizmoHoverAnimationDuration, bool& bOutIsHoveringOrDraggingThisHandleGroup)"
  },
  {
    "label": "GetHandleType()",
    "kind": "Method",
    "detail": "Function (EGizmoHandleTypes)",
    "insertText": "GetHandleType()"
  },
  {
    "label": "SetUsePivotPointAsLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsePivotPointAsLocation(const bool bInUsePivotAsLocation)"
  }
]