[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" class FString ; namespace ELogVerbosity { enum Type : uint8 { NoLogging = 0,Fatal,Error,Warning,Display,Log,Verbose,VeryVerbose,All = VeryVerbose,NumVerbosity,VerbosityMask = 0 xf,SetColor = 0 x40,BreakOnLog = 0 x80 } ; })",
    "insertText": "static_assert(ELogVerbosity::NumVerbosity - 1 < ELogVerbosity::VerbosityMask, \"Bad verbosity mask.\")"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ToString(ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "ParseLogVerbosityFromString()",
    "kind": "Method",
    "detail": "Function (ELogVerbosity::Type)",
    "insertText": "ParseLogVerbosityFromString(const FString& VerbosityString)"
  }
]