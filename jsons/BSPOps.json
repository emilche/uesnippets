[
  {
    "label": "AVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AVolume"
  },
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "FBSPOps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBSPOps"
  },
  {
    "label": "EBspOptimization",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBspOptimization"
  },
  {
    "label": "ENodePlace",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENodePlace"
  },
  {
    "label": "EBspOptimization",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBspOptimization"
  },
  {
    "label": "ENodePlace",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENodePlace"
  },
  {
    "label": "FBspPointsKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBspPointsKey"
  },
  {
    "label": "FBspIndexedPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBspIndexedPoint"
  },
  {
    "label": "FBspPointsGridItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBspPointsGridItem"
  },
  {
    "label": "FBspPointsGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBspPointsGrid"
  },
  {
    "label": "csgPrepMovingBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "csgPrepMovingBrush( ABrush* Actor )"
  },
  {
    "label": "csgCopyBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "csgCopyBrush( ABrush* Dest, ABrush* Src, uint32 PolyFlags, EObjectFlags ResFlags, bool bNeedsPrep, bool bCopyPosRotScale, bool bAllowEmpty = false )"
  },
  {
    "label": "bspAddVector()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "bspAddVector( UModel* Model, const FVector* V, bool Exact )"
  },
  {
    "label": "bspAddPoint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "bspAddPoint( UModel* Model, const FVector* V, bool Exact )"
  },
  {
    "label": "bspBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspBuild( UModel* Model, enum EBspOptimization Opt, int32 Balance, int32 PortalBias, int32 RebuildSimplePolys, int32 iNode )"
  },
  {
    "label": "bspRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspRefresh( UModel* Model, bool NoRemapSurfs )"
  },
  {
    "label": "bspBuildBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspBuildBounds( UModel* Model )"
  },
  {
    "label": "bspValidateBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspValidateBrush( UModel* Brush, bool ForceValidate, bool DoStatusUpdate )"
  },
  {
    "label": "bspUnlinkPolys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bspUnlinkPolys( UModel* Brush )"
  },
  {
    "label": "bspAddNode()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "bspAddNode( UModel* Model, int32 iParent, enum ENodePlace ENodePlace, uint32 NodeFlags, FPoly* EdPoly )"
  },
  {
    "label": "RebuildBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildBrush(UModel* Brush)"
  },
  {
    "label": "BuildInfiniteFPoly()",
    "kind": "Method",
    "detail": "Function (FPoly)",
    "insertText": "BuildInfiniteFPoly( UModel* Model, int32 iNode )"
  },
  {
    "label": "HandleVolumeShapeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleVolumeShapeChanged(AVolume& Volume)"
  },
  {
    "label": "RotateBrushVerts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RotateBrushVerts(ABrush* Brush, const FRotator& Rotation, bool bClearComponents)"
  },
  {
    "label": "SplitPolyList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitPolyList(\n\t\tUModel\t\t\t\t*Model,\n\t\tint32               iParent,\n\t\tENodePlace\t\t\tNodePlace,\n\t\tint32               NumPolys,\n\t\tFPoly\t\t\t\t**PolyList,\n\t\tEBspOptimization\tOpt,\n\t\tint32\t\t\t\tBalance,\n\t\tint32\t\t\t\tPortalBias,\n\t\tint32\t\t\t\tRebuildSimplePolys\n\t)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear(int32 InitialSize = 0)"
  },
  {
    "label": "FindOrAddPoint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddPoint(const FVector& Point, int32 Index, float Threshold)"
  }
]