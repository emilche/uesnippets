[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UInterchangeBaseNodeContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeBaseNodeContainer"
  },
  {
    "label": "UInterchangeResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeResult"
  },
  {
    "label": "UInterchangeSourceData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeSourceData"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInterchangePipelineContextParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterchangePipelineContextParams"
  },
  {
    "label": "FInterchangePipelinePropertyStatePerContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterchangePipelinePropertyStatePerContext"
  },
  {
    "label": "FInterchangePipelinePropertyStates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterchangePipelinePropertyStates"
  },
  {
    "label": "FInterchangeConflictInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterchangeConflictInfo"
  },
  {
    "label": "SInterchangeBaseConflictWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInterchangeBaseConflictWidget"
  },
  {
    "label": "UInterchangePipelineBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangePipelineBase"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function"
  },
  {
    "label": "function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "function"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ComputeDesiredSize(ApplicationScale)"
  },
  {
    "label": "GetPipelineDisplayName()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPipelineDisplayName()"
  },
  {
    "label": "ScriptedExecutePipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScriptedExecutePipeline(UInterchangeBaseNodeContainer* BaseNodeContainer, const TArray<UInterchangeSourceData*>& SourceDatas, const FString& ContentBasePath)"
  },
  {
    "label": "ExecutePipeline()",
    "kind": "Method",
    "detail": "Function (execution)",
    "insertText": "ExecutePipeline(BaseNodeContainer, SourceDatas, ContentBasePath)"
  },
  {
    "label": "ScriptedExecutePostFactoryPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScriptedExecutePostFactoryPipeline(const UInterchangeBaseNodeContainer* BaseNodeContainer, const FString& FactoryNodeKey, UObject* CreatedAsset, bool bIsAReimport)"
  },
  {
    "label": "ExecutePostFactoryPipeline()",
    "kind": "Method",
    "detail": "Function (execution)",
    "insertText": "ExecutePostFactoryPipeline(BaseNodeContainer, FactoryNodeKey, CreatedAsset, bIsAReimport)"
  },
  {
    "label": "ScriptedExecutePostImportPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScriptedExecutePostImportPipeline(const UInterchangeBaseNodeContainer* BaseNodeContainer, const FString& FactoryNodeKey, UObject* CreatedAsset, bool bIsAReimport)"
  },
  {
    "label": "ExecutePostImportPipeline()",
    "kind": "Method",
    "detail": "Function (execution)",
    "insertText": "ExecutePostImportPipeline(BaseNodeContainer, FactoryNodeKey, CreatedAsset, bIsAReimport)"
  },
  {
    "label": "ScriptedExecutePostBroadcastPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScriptedExecutePostBroadcastPipeline(const UInterchangeBaseNodeContainer* BaseNodeContainer, const FString& FactoryNodeKey, UObject* CreatedAsset, bool bIsAReimport)"
  },
  {
    "label": "ExecutePostBroadcastPipeline()",
    "kind": "Method",
    "detail": "Function (execution)",
    "insertText": "ExecutePostBroadcastPipeline(BaseNodeContainer, FactoryNodeKey, CreatedAsset, bIsAReimport)"
  },
  {
    "label": "ScriptedExecuteExportPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScriptedExecuteExportPipeline(UInterchangeBaseNodeContainer* BaseNodeContainer)"
  },
  {
    "label": "CanExecuteOnAnyThread()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CanExecuteOnAnyThread(PipelineTask)"
  },
  {
    "label": "ScriptedSetReimportSourceIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScriptedSetReimportSourceIndex(UClass* ReimportObjectClass, const int32 SourceFileIndex)"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettings(const FName PipelineStackName, bool bResetPreDialog = false)"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettings(const FName PipelineStackName)"
  },
  {
    "label": "AdjustSettingsForContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustSettingsForContext(const FInterchangePipelineContextParams& ContextParams)"
  },
  {
    "label": "AdjustSettingsFromCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustSettingsFromCache()"
  },
  {
    "label": "TransferAdjustSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferAdjustSettings(const UInterchangePipelineBase* SourcePipeline)"
  },
  {
    "label": "GetPropertiesStatesPropertyName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetPropertiesStatesPropertyName()"
  },
  {
    "label": "GetResultsPropertyName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetResultsPropertyName()"
  },
  {
    "label": "UpdateWeakObjectPtrs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWeakObjectPtrs()"
  },
  {
    "label": "LoadSettingsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSettingsInternal(const FName PipelineStackName, const FString& ConfigFilename, TMap<FName, FInterchangePipelinePropertyStates>& ParentPropertiesStates, bool bResetPreDialog)"
  },
  {
    "label": "SaveSettingsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettingsInternal(const FName PipelineStackName, const FString& ConfigFilename)"
  },
  {
    "label": "InternalToggleVisibilityPropertiesOfMetaDataValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalToggleVisibilityPropertiesOfMetaDataValue(UInterchangePipelineBase* OuterMostPipeline, UInterchangePipelineBase* Pipeline, bool bDoTransientSubPipeline, const FString& MetaDataKey, const FString& MetaDataValue, const bool bVisibilityState)"
  },
  {
    "label": "HidePropertiesOfCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HidePropertiesOfCategory(UInterchangePipelineBase* OuterMostPipeline, UInterchangePipelineBase* Pipeline, const FString& HideCategoryName, bool bDoTransientSubPipeline = false)"
  },
  {
    "label": "HidePropertiesOfSubCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HidePropertiesOfSubCategory(UInterchangePipelineBase* OuterMostPipeline, UInterchangePipelineBase* Pipeline, const FString& HideSubCategoryName, bool bDoTransientSubPipeline = false)"
  },
  {
    "label": "HideProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideProperty(UInterchangePipelineBase* OuterMostPipeline, UInterchangePipelineBase* Pipeline, const FName& HidePropertyName)"
  }
]