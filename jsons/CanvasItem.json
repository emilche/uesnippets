[
  {
    "label": "FBatchedElementParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBatchedElementParameters"
  },
  {
    "label": "FBatchedElements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBatchedElements"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "FCanvasItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasItem"
  },
  {
    "label": "FCanvasTileItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasTileItem"
  },
  {
    "label": "FCanvasBorderItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasBorderItem"
  },
  {
    "label": "FCanvasTextItemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasTextItemBase"
  },
  {
    "label": "FTextEffect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextEffect"
  },
  {
    "label": "FCanvasSimpleTextItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasSimpleTextItem"
  },
  {
    "label": "operates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "operates"
  },
  {
    "label": "FCanvasTextItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasTextItem"
  },
  {
    "label": "operates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "operates"
  },
  {
    "label": "FCanvasTextStringViewItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasTextStringViewItem"
  },
  {
    "label": "FCanvasShapedTextItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasShapedTextItem"
  },
  {
    "label": "FCanvasLineItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasLineItem"
  },
  {
    "label": "FCanvasBoxItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasBoxItem"
  },
  {
    "label": "FCanvasTriangleItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasTriangleItem"
  },
  {
    "label": "FCanvasNGonItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasNGonItem"
  },
  {
    "label": "FCanvasItemTestbed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasItemTestbed"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "LineVars",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LineVars"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FTexture* InTexture, const FLinearColor& InColor )"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FTexture* InTexture, const FVector2D& InSize, const FLinearColor& InColor )"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FVector2D& InSize, const FLinearColor& InColor )"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FTexture* InTexture, const FVector2D& InUV0, const FVector2D& InUV1, const FLinearColor& InColor )"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FTexture* InTexture, const FVector2D& InSize, const FVector2D& InUV0, const FVector2D& InUV1, const FLinearColor& InColor )"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FMaterialRenderProxy* InMaterialRenderProxy, const FVector2D& InSize )"
  },
  {
    "label": "FCanvasTileItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTileItem( const FVector2D& InPosition, const FMaterialRenderProxy* InMaterialRenderProxy, const FVector2D& InSize, const FVector2D& InUV0, const FVector2D& InUV1 )"
  },
  {
    "label": "RenderMaterialTile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMaterialTile( FCanvas* InCanvas, const FVector2D& InPosition )"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (valid)",
    "insertText": "check( InBorderTexture )"
  },
  {
    "label": "FCanvasTextItemBase()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTextItemBase( const FVector2D& InPosition, const FLinearColor& InColor )"
  },
  {
    "label": "DrawStringInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStringInternal(FCanvas* InCanvas, FStringView Text, const FVector2D& DrawPos, const FLinearColor& DrawColor, TArrayView<FTextEffect> TextEffects)"
  },
  {
    "label": "DrawStringInternal_OfflineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStringInternal_OfflineCache(FCanvas* InCanvas, FStringView Text, const FVector2D& DrawPos, const FLinearColor& DrawColor, TArrayView<FTextEffect> TextEffects)"
  },
  {
    "label": "DrawStringInternal_RuntimeCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStringInternal_RuntimeCache(FCanvas* InCanvas, FStringView Text, const FVector2D& DrawPos, const FLinearColor& DrawColor, TArrayView<FTextEffect> TextEffects)"
  },
  {
    "label": "FCanvasTextItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTextItem(const FVector2D& InPosition, const FText& InText, const UFont* InFont, const FLinearColor& InColor)"
  },
  {
    "label": "FCanvasTextItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasTextItem(const FVector2D& InPosition, const FText& InText, const FSlateFontInfo& InFontInfo, const FLinearColor& InColor)"
  },
  {
    "label": "DrawStringInternal_OfflineCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStringInternal_OfflineCache(FCanvas* InCanvas, const FVector2D& DrawPos, const FLinearColor& DrawColor, TArrayView<FTextEffect> TextEffects)"
  },
  {
    "label": "DrawStringInternal_RuntimeCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStringInternal_RuntimeCache(FCanvas* InCanvas, const FVector2D& DrawPos, const FLinearColor& DrawColor, TArrayView<FTextEffect> TextEffects)"
  },
  {
    "label": "SetupBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupBox()"
  },
  {
    "label": "FCanvasNGonItem()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasNGonItem( const FVector2D& InPosition, const FVector2D& InRadius, int32 InNumSides, const FLinearColor& InColor )"
  },
  {
    "label": "FCanvasTriangleItem()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "FCanvasTriangleItem( TriangleList, Texture )"
  },
  {
    "label": "FCanvasItemTestbed()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCanvasItemTestbed()"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw( class FViewport* Viewport, FCanvas* Canvas )"
  }
]