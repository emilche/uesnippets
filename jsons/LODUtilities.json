[
  {
    "label": "FClothingAssetMeshBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClothingAssetMeshBinding"
  },
  {
    "label": "FSkeletalMeshUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshUpdateContext"
  },
  {
    "label": "FInlineReductionDataParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInlineReductionDataParameter"
  },
  {
    "label": "FSkeletalMeshImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshImportData"
  },
  {
    "label": "SKELETALMESHUTILITIESCOMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SKELETALMESHUTILITIESCOMMON_API"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FThreadSafeBool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FThreadSafeBool"
  },
  {
    "label": "FMorphTargetLodBackupData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMorphTargetLodBackupData"
  },
  {
    "label": "FSkeletalMeshMatchImportedMaterialsParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshMatchImportedMaterialsParameters"
  },
  {
    "label": "FImportedSkinWeightProfileData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportedSkinWeightProfileData"
  },
  {
    "label": "ProcessImportMeshInfluences()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" MeshBuild . h \" # include \" MeshUtilities . h \" # include \" Engine / SkeletalMesh . h \" # include \" Rendering / SkeletalMeshLODImporterData . h \" # include \" Rendering / SkeletalMeshLODModel . h \" # include \" Framework / Commands / UIAction . h \" # include \" Animation / MorphTarget . h \" namespace ClothingAssetUtils { struct FClothingAssetMeshBinding ; } struct FSkeletalMeshUpdateContext { USkeletalMesh* SkeletalMesh ; TArray<UActorComponent*> AssociatedComponents ; FExecuteAction OnLODChanged ; } ; struct FInlineReductionDataParameter { bool bIsDataValid = false ; FSkeletalMeshLODModel InlineOriginalSrcModel ; TMap<FString,TArray<FMorphTargetDelta>> InlineOriginalSrcMorphTargetData ; } ; class FSkeletalMeshImportData ; class FLODUtilities { public : void)",
    "insertText": "ProcessImportMeshInfluences(const int32 VertexCount, TArray<SkeletalMeshImportData::FRawBoneInfluence>& Influences, const FString& MeshName)"
  },
  {
    "label": "RegenerateLOD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegenerateLOD(USkeletalMesh* SkeletalMesh, const class ITargetPlatform* TargetPlatform, int32 NewLODCount = 0, bool bRegenerateEvenIfImported = false, bool bGenerateBaseLOD = false)"
  },
  {
    "label": "RemoveLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLOD(FSkeletalMeshUpdateContext& UpdateContext, int32 DesiredLOD)"
  },
  {
    "label": "RemoveLODs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLODs(FSkeletalMeshUpdateContext& UpdateContext, const TArray<int32>& DesiredLODs)"
  },
  {
    "label": "SetCustomLOD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCustomLOD(USkeletalMesh* DestinationSkeletalMesh, USkeletalMesh* SourceSkeletalMesh, const int32 LodIndex, const FString& SourceDataFilename)"
  },
  {
    "label": "SimplifySkeletalMeshLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimplifySkeletalMeshLOD(FSkeletalMeshUpdateContext& UpdateContext, int32 DesiredLOD, const class ITargetPlatform* TargetPlatform, bool bRestoreClothing = false, class FThreadSafeBool* OutNeedsPackageDirtied = nullptr)"
  },
  {
    "label": "RestoreSkeletalMeshLODImportedData_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestoreSkeletalMeshLODImportedData_DEPRECATED(USkeletalMesh* SkeletalMesh, int32 LodIndex)"
  },
  {
    "label": "RefreshLODChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshLODChange(const USkeletalMesh* SkeletalMesh)"
  },
  {
    "label": "RegenerateDependentLODs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateDependentLODs(USkeletalMesh* SkeletalMesh, int32 LODIndex, const class ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "BuildMorphTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMorphTargets(USkeletalMesh* SkeletalMesh, class FSkeletalMeshImportData &ImportData, int32 LODIndex, bool ShouldImportNormals, bool ShouldImportTangents, bool bUseMikkTSpace, const FOverlappingThresholds& Thresholds)"
  },
  {
    "label": "BuildMorphTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMorphTargets(USkeletalMesh* SkeletalMesh, const FMeshDescription& SkeletalMeshModel, FSkeletalMeshImportData& ImportData, int32 LODIndex, bool ShouldImportNormals, bool ShouldImportTangents, bool bUseMikkTSpace, const FOverlappingThresholds& Thresholds)"
  },
  {
    "label": "UpdateAlternateSkinWeights()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAlternateSkinWeights(USkeletalMesh* SkeletalMeshDest, const FName& ProfileNameDest, USkeletalMesh* SkeletalMeshSrc, int32 LODIndexDest, int32 LODIndexSrc, const IMeshUtilities::MeshBuildOptions& Options)"
  },
  {
    "label": "UpdateAlternateSkinWeights()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAlternateSkinWeights(USkeletalMesh* SkeletalMeshDest, const FName& ProfileNameDest, int32 LODIndexDest, const IMeshUtilities::MeshBuildOptions& Options)"
  },
  {
    "label": "UpdateAlternateSkinWeights()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateAlternateSkinWeights(FSkeletalMeshLODModel& LODModelDest, FSkeletalMeshImportData& ImportDataDest, USkeletalMesh* SkeletalMeshDest, const FReferenceSkeleton& RefSkeleton, const FName& ProfileNameDest, int32 LODIndexDest, const IMeshUtilities::MeshBuildOptions& Options)"
  },
  {
    "label": "UpdateLODInfoVertexAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateLODInfoVertexAttributes(USkeletalMesh *InSkeletalMesh, int32 InSourceLODIndex, int32 InTargetLODIndex, bool bInCopyAttributeValues)"
  },
  {
    "label": "RegenerateAllImportSkinWeightProfileData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateAllImportSkinWeightProfileData(FSkeletalMeshLODModel& LODModelDest, int32 BoneInfluenceLimit = 0, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "UnbindClothingAndBackup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindClothingAndBackup(USkeletalMesh* SkeletalMesh, TArray<ClothingAssetUtils::FClothingAssetMeshBinding>& ClothingBindings)"
  },
  {
    "label": "UnbindClothingAndBackup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnbindClothingAndBackup(USkeletalMesh* SkeletalMesh, TArray<ClothingAssetUtils::FClothingAssetMeshBinding>& ClothingBindings, const int32 LODIndex)"
  },
  {
    "label": "RestoreClothingFromBackup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreClothingFromBackup(USkeletalMesh* SkeletalMesh, TArray<ClothingAssetUtils::FClothingAssetMeshBinding>& ClothingBindings)"
  },
  {
    "label": "RestoreClothingFromBackup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreClothingFromBackup(USkeletalMesh* SkeletalMesh, TArray<ClothingAssetUtils::FClothingAssetMeshBinding>& ClothingBindings, const int32 LODIndex)"
  },
  {
    "label": "BackupCustomImportedMorphTargetData()",
    "kind": "Method",
    "detail": "Function (struct FMorphTargetLodBackupData { bool bIsEmpty = true ; TArray<FVector3f> MorphPositionDeltas ; TArray<FVector3f> MorphNormalDeltas ; } ; void)",
    "insertText": "BackupCustomImportedMorphTargetData(USkeletalMesh* SkeletalMesh, TMap<FString, TArray<FMorphTargetLodBackupData>>& BackupImportedMorphTargetData)"
  },
  {
    "label": "RestoreCustomImportedMorphTargetData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RestoreCustomImportedMorphTargetData(USkeletalMesh* SkeletalMesh, const int32 LodIndex, FMeshDescription& LodMeshDescription, const TMap<FString, TArray<FMorphTargetLodBackupData>>& BackupImportedMorphTargetData)"
  },
  {
    "label": "AdjustImportDataFaceMaterialIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustImportDataFaceMaterialIndex(const TArray<FSkeletalMaterial>& Materials, TArray<SkeletalMeshImportData::FMaterial>& RawMeshMaterials, TArray<SkeletalMeshImportData::FMeshFace>& LODFaces, int32 LODIndex)"
  },
  {
    "label": "MatchImportedMaterials()",
    "kind": "Method",
    "detail": "Function (struct FSkeletalMeshMatchImportedMaterialsParameters { USkeletalMesh* SkeletalMesh = nullptr ; int32 LodIndex = 0 ; bool bIsReImport = false ; const TArray<SkeletalMeshImportData::FMaterial>* ImportedMaterials = nullptr ; const TArray<FName>* ExistingOriginalPerSectionMaterialImportName = nullptr ; FSkeletalMeshLODModel* CustomImportedLODModel = nullptr ; } ; void)",
    "insertText": "MatchImportedMaterials(FSkeletalMeshMatchImportedMaterialsParameters& Parameters)"
  },
  {
    "label": "ReorderMaterialSlotToBaseLod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReorderMaterialSlotToBaseLod(USkeletalMesh* SkeletalMesh)"
  },
  {
    "label": "RemoveUnusedMaterialSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedMaterialSlot(USkeletalMesh* SkeletalMesh)"
  },
  {
    "label": "StripLODGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StripLODGeometry(USkeletalMesh* SkeletalMesh, const int32 LODIndex, UTexture2D* TextureMask, const float Threshold)"
  },
  {
    "label": "FLODUtilities()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FLODUtilities()"
  },
  {
    "label": "GenerateImportedSkinWeightProfileData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateImportedSkinWeightProfileData(FSkeletalMeshLODModel& LODModelDest, struct FImportedSkinWeightProfileData& ImportedProfileData, int32 BoneInfluenceLimit, const class ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "SimplifySkeletalMeshLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimplifySkeletalMeshLOD(USkeletalMesh* SkeletalMesh, int32 DesiredLOD, const class ITargetPlatform* TargetPlatform, bool bRestoreClothing = false, class FThreadSafeBool* OutNeedsPackageDirtied = nullptr)"
  },
  {
    "label": "ApplyMorphTargetsToLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMorphTargetsToLOD(USkeletalMesh* SkeletalMesh, int32 SourceLOD, int32 DestinationLOD, const FInlineReductionDataParameter& InlineApplyMorphTargetParameter)"
  },
  {
    "label": "ClearGeneratedMorphTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearGeneratedMorphTarget(USkeletalMesh* SkeletalMesh, int32 DesiredLOD)"
  }
]