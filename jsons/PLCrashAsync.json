[
  {
    "label": "plcrash_async_byteorder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plcrash_async_byteorder"
  },
  {
    "label": "plcrash_async_file",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plcrash_async_file"
  },
  {
    "label": "plcrash_async_address_apply_offset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "plcrash_async_address_apply_offset(pl_vm_address_t base_address, pl_vm_off_t offset, pl_vm_address_t *result)"
  },
  {
    "label": "pl_mach_thread_self()",
    "kind": "Method",
    "detail": "Function (thread_t)",
    "insertText": "pl_mach_thread_self(void)"
  },
  {
    "label": "swap16()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "swap16(v)"
  },
  {
    "label": "swap32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "swap32(v)"
  },
  {
    "label": "swap64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "swap64(v)"
  },
  {
    "label": "plcrash_async_task_memcpy()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_task_memcpy(mach_port_t task, pl_vm_address_t address, pl_vm_off_t offset, void *dest, pl_vm_size_t len)"
  },
  {
    "label": "plcrash_async_task_read_uint8()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_task_read_uint8(task_t task, pl_vm_address_t address, pl_vm_off_t offset, uint8_t *result)"
  },
  {
    "label": "plcrash_async_task_read_uint16()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_task_read_uint16(task_t task, const plcrash_async_byteorder_t *byteorder,\n                                                pl_vm_address_t address, pl_vm_off_t offset, uint16_t *result)"
  },
  {
    "label": "plcrash_async_task_read_uint32()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_task_read_uint32(task_t task, const plcrash_async_byteorder_t *byteorder,\n                                                pl_vm_address_t address, pl_vm_off_t offset, uint32_t *result)"
  },
  {
    "label": "plcrash_async_task_read_uint64()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_task_read_uint64(task_t task, const plcrash_async_byteorder_t *byteorder,\n                                                pl_vm_address_t address, pl_vm_off_t offset, uint64_t *result)"
  },
  {
    "label": "plcrash_async_strcmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "plcrash_async_strcmp(const char *s1, const char *s2)"
  },
  {
    "label": "plcrash_async_strncmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "plcrash_async_strncmp(const char *s1, const char *s2, size_t n)"
  },
  {
    "label": "plcrash_async_writen()",
    "kind": "Method",
    "detail": "Function (ssize_t)",
    "insertText": "plcrash_async_writen(int fd, const void *data, size_t len)"
  },
  {
    "label": "plcrash_async_file_init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "plcrash_async_file_init(plcrash_async_file_t *file, int fd, off_t output_limit)"
  },
  {
    "label": "plcrash_async_file_write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "plcrash_async_file_write(plcrash_async_file_t *file, const void *data, size_t len)"
  },
  {
    "label": "plcrash_async_file_flush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "plcrash_async_file_flush(plcrash_async_file_t *file)"
  },
  {
    "label": "plcrash_async_file_close()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "plcrash_async_file_close(plcrash_async_file_t *file)"
  }
]