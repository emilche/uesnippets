[
  {
    "label": "UUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UDynamicEntryBoxBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDynamicEntryBoxBase"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FDynamicEntryBoxBaseDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicEntryBoxBaseDetails"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / Widget . h \" # include \" Blueprint / UserWidgetPool . h \" # include \" RadialBoxSettings . h \" # include \" Widgets / SPanel . h \" # include \" DynamicEntryBoxBase . generated . h \" class UUserWidget ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Horizontal,Vertical,Wrap,VerticalWrap,Radial,Overlay } ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UE_DEPRECATED(5.2, \"Direct access to EntrySpacing is deprecated. Please use the getter or setter.\") UPROPERTY(EditAnywhere, BlueprintReadWrite, Getter, Setter, BlueprintSetter = \"SetEntrySpacing\", Category = EntryLayout)"
  },
  {
    "label": "UDynamicEntryBoxBase()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UDynamicEntryBoxBase(const FObjectInitializer& Initializer)"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "GetBoxType()",
    "kind": "Method",
    "detail": "Function (EDynamicBoxType)",
    "insertText": "GetBoxType()"
  },
  {
    "label": "GetEntrySpacing()",
    "kind": "Method",
    "detail": "Function (const FVector2D&)",
    "insertText": "GetEntrySpacing()"
  },
  {
    "label": "GetEntrySizeRule()",
    "kind": "Method",
    "detail": "Function (const FSlateChildSize&)",
    "insertText": "GetEntrySizeRule()"
  },
  {
    "label": "GetRadialBoxSettings()",
    "kind": "Method",
    "detail": "Function (const FRadialBoxSettings&)",
    "insertText": "GetRadialBoxSettings()"
  },
  {
    "label": "GetTypedEntries()",
    "kind": "Method",
    "detail": "Function (template<EntryWidgetT = UUserWidget> TArray<EntryWidgetT*>)",
    "insertText": "GetTypedEntries()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (TArray<EntryWidgetT*> TypedEntries ;)",
    "insertText": "for(UUserWidget* Entry : GetAllEntries())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TypedEntries .)",
    "insertText": "Add(TypedEntry)"
  },
  {
    "label": "GetEntryVerticalAlignment()",
    "kind": "Method",
    "detail": "Function (EVerticalAlignment)",
    "insertText": "GetEntryVerticalAlignment()"
  },
  {
    "label": "GetEntryHorizontalAlignment()",
    "kind": "Method",
    "detail": "Function (EHorizontalAlignment)",
    "insertText": "GetEntryHorizontalAlignment()"
  },
  {
    "label": "GetMaxElementSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxElementSize()"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "AddEntryChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEntryChild(UUserWidget& ChildWidget)"
  },
  {
    "label": "IsEntryClassValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEntryClassValid(TSubclassOf<UUserWidget> InEntryClass)"
  },
  {
    "label": "CreateEntryInternal()",
    "kind": "Method",
    "detail": "Function (UUserWidget*)",
    "insertText": "CreateEntryInternal(TSubclassOf<UUserWidget> InEntryClass)"
  },
  {
    "label": "RemoveEntryInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEntryInternal(UUserWidget* EntryWidget, bool bReleaseSlate = false)"
  },
  {
    "label": "BuildEntryPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "BuildEntryPadding(const FVector2D& DesiredSpacing)"
  },
  {
    "label": "ResetInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetInternal(bool bDeleteWidgets = false)"
  },
  {
    "label": "ResetInternal()",
    "kind": "Method",
    "detail": "Function (template<WidgetT = UUserWidget> void)",
    "insertText": "ResetInternal(TFunctionRef<void(WidgetT&)> ResetEntryFunc, bool bDeleteWidgets = false)"
  },
  {
    "label": "ResetEntryFunc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEntryFunc(*TypedEntry)"
  },
  {
    "label": "ResetInternal()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "ResetInternal(bDeleteWidgets)"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "InitEntryBoxType()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "InitEntryBoxType(EDynamicBoxType InEntryBoxType)"
  },
  {
    "label": "InitEntrySizeRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitEntrySizeRule(FSlateChildSize InEntrySizeRule)"
  },
  {
    "label": "InitEntryHorizontalAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitEntryHorizontalAlignment(EHorizontalAlignment InEntryHorizontalAlignment)"
  },
  {
    "label": "InitEntryVerticalAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitEntryVerticalAlignment(EVerticalAlignment InEntryVerticalAlignment)"
  },
  {
    "label": "InitMaxElementSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMaxElementSize(int32 InMaxElementSize)"
  }
]