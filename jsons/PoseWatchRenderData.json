[
  {
    "label": "FReferenceSkeleton",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceSkeleton"
  },
  {
    "label": "FAnimNodePoseWatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNodePoseWatch"
  },
  {
    "label": "UPoseWatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatch"
  },
  {
    "label": "UPoseWatchPoseElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatchPoseElement"
  },
  {
    "label": "TAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TAllocator"
  },
  {
    "label": "FAnimNodePoseWatch()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_EDITORONLY_DATA # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" BoneIndices . h \" # include \" Animation / AnimCurveTypes . h \" struct FReferenceSkeleton ; struct FAnimNodePoseWatch { public :)",
    "insertText": "FAnimNodePoseWatch()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (const UObject* Object ; class UPoseWatch* PoseWatch ; class UPoseWatchPoseElement* PoseWatchPoseElement ; int32 NodeID ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "SetCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurves(const FBlendedCurve& InCurves)"
  },
  {
    "label": "SetPose()",
    "kind": "Method",
    "detail": "Function (template<class TAllocator> bool)",
    "insertText": "SetPose(const TArray<FBoneIndexType>& InRequiredBones, const TArray<FTransform, TAllocator>& InBoneTransforms)"
  },
  {
    "label": "SetWorldTransform()",
    "kind": "Method",
    "detail": "Function (RequiredBones = InRequiredBones ; BoneTransforms = InBoneTransforms ; return true ; } void)",
    "insertText": "SetWorldTransform(const FTransform& InWorldTransform)"
  },
  {
    "label": "CopyPoseWatchData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPoseWatchData(const FReferenceSkeleton& RefSkeleton)"
  },
  {
    "label": "GetRequiredBones()",
    "kind": "Method",
    "detail": "Function (const TArray<FBoneIndexType>&)",
    "insertText": "GetRequiredBones()"
  },
  {
    "label": "GetBoneTransforms()",
    "kind": "Method",
    "detail": "Function (const TArray<FTransform>&)",
    "insertText": "GetBoneTransforms()"
  },
  {
    "label": "GetCurves()",
    "kind": "Method",
    "detail": "Function (const FBlendedHeapCurve&)",
    "insertText": "GetCurves()"
  },
  {
    "label": "GetWorldTransform()",
    "kind": "Method",
    "detail": "Function (const FTransform&)",
    "insertText": "GetWorldTransform()"
  },
  {
    "label": "GetBoneColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetBoneColor()"
  },
  {
    "label": "GetViewportOffset()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetViewportOffset()"
  },
  {
    "label": "GetViewportAllowList()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>&)",
    "insertText": "GetViewportAllowList()"
  },
  {
    "label": "GetParentIndices()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>&)",
    "insertText": "GetParentIndices()"
  }
]