[
  {
    "label": "FZenStoreWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FZenStoreWriter"
  },
  {
    "label": "IPackageStoreWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPackageStoreWriter"
  },
  {
    "label": "FOplogCookInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOplogCookInfo"
  },
  {
    "label": "FAttachment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttachment"
  },
  {
    "label": "FEntryCreatedEventArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntryCreatedEventArgs"
  },
  {
    "label": "FCommitEventArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommitEventArgs"
  },
  {
    "label": "FMarkUpToDateEventArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkUpToDateEventArgs"
  },
  {
    "label": "AsPackageStoreWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IO / PackageStore . h \" # include \" Serialization / PackageWriter . h \" class FZenStoreWriter ; class IPackageStoreWriter : public ICookedPackageWriter { public : IPackageStoreWriter*)",
    "insertText": "AsPackageStoreWriter()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (struct FEntryCreatedEventArgs { FName PlatformName ; const FPackageStoreEntryResource& Entry ; } ;)",
    "insertText": "DECLARE_EVENT_OneParam(IPackageStoreWriter, FEntryCreatedEvent, const FEntryCreatedEventArgs&)"
  },
  {
    "label": "OnEntryCreated()",
    "kind": "Method",
    "detail": "Function (FEntryCreatedEvent&)",
    "insertText": "OnEntryCreated()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (struct FCommitEventArgs { FName PlatformName ; FName PackageName ; int32 EntryIndex = INDEX_NONE ; TArrayView<const FPackageStoreEntryResource> Entries ; TArrayView<const FOplogCookInfo> CookInfos ; TArray<FAdditionalFileInfo> AdditionalFiles ; } ;)",
    "insertText": "DECLARE_EVENT_OneParam(IPackageStoreWriter, FCommitEvent, const FCommitEventArgs&)"
  },
  {
    "label": "OnCommit()",
    "kind": "Method",
    "detail": "Function (FCommitEvent&)",
    "insertText": "OnCommit()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (struct FMarkUpToDateEventArgs { FName PlatformName ; TArray<int32> PackageIndexes ; TArrayView<const FPackageStoreEntryResource> Entries ; TArrayView<const FOplogCookInfo> CookInfos ; TArray<FAdditionalFileInfo> AdditionalFiles ; } ;)",
    "insertText": "DECLARE_EVENT_OneParam(IPackageStoreWriter, FMarkUpToDateEvent, const FMarkUpToDateEventArgs&)"
  },
  {
    "label": "OnMarkUpToDate()",
    "kind": "Method",
    "detail": "Function (FMarkUpToDateEvent&)",
    "insertText": "OnMarkUpToDate()"
  }
]