[
  {
    "label": "GetTotalMaxBitrate()",
    "kind": "Method",
    "detail": "Function (webrtc::DataRate)",
    "insertText": "GetTotalMaxBitrate(\n    const std::vector<webrtc::VideoStream>& streams)"
  },
  {
    "label": "BoostMaxSimulcastLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BoostMaxSimulcastLayer(webrtc::DataRate max_bitrate,\n                            std::vector<webrtc::VideoStream>* layers)"
  },
  {
    "label": "NormalizeSimulcastSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NormalizeSimulcastSize(int size, size_t simulcast_layers)"
  },
  {
    "label": "GetSimulcastConfig()",
    "kind": "Method",
    "detail": "Function (std::vector<webrtc::VideoStream>)",
    "insertText": "GetSimulcastConfig(\n    size_t min_layers,\n    size_t max_layers,\n    int width,\n    int height,\n    double bitrate_priority,\n    int max_qp,\n    bool is_screenshare_with_conference_mode,\n    bool temporal_layers_supported,\n    const webrtc::FieldTrialsView& trials)"
  },
  {
    "label": "GetNormalSimulcastLayers()",
    "kind": "Method",
    "detail": "Function (std::vector<webrtc::VideoStream>)",
    "insertText": "GetNormalSimulcastLayers(\n    size_t max_layers,\n    int width,\n    int height,\n    double bitrate_priority,\n    int max_qp,\n    bool temporal_layers_supported,\n    bool base_heavy_tl3_rate_alloc,\n    const webrtc::FieldTrialsView& trials)"
  },
  {
    "label": "GetScreenshareLayers()",
    "kind": "Method",
    "detail": "Function (std::vector<webrtc::VideoStream>)",
    "insertText": "GetScreenshareLayers(\n    size_t max_layers,\n    int width,\n    int height,\n    double bitrate_priority,\n    int max_qp,\n    bool temporal_layers_supported,\n    bool base_heavy_tl3_rate_alloc,\n    const webrtc::FieldTrialsView& trials)"
  }
]