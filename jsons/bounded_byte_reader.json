[
  {
    "label": "BoundedByteReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BoundedByteReader"
  },
  {
    "label": "LoadBigEndian8()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PACKET_BOUNDED_BYTE_READER_H_ # define NET_DCSCTP_PACKET_BOUNDED_BYTE_READER_H_ # include<cstdint> # include \" api / array_view . h \" namespace dcsctp { namespace internal { uint8_t)",
    "insertText": "LoadBigEndian8(const uint8_t* data)"
  },
  {
    "label": "LoadBigEndian32()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "LoadBigEndian32(const uint8_t* data)"
  },
  {
    "label": "BoundedByteReader()",
    "kind": "Method",
    "detail": "Function (} } template<int FixedSize> class BoundedByteReader { public :)",
    "insertText": "BoundedByteReader(rtc::ArrayView<const uint8_t> data) : data_(data)"
  },
  {
    "label": "RTC_CHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK(data.size() >= FixedSize)"
  },
  {
    "label": "Load8()",
    "kind": "Method",
    "detail": "Function (} template<size_t offset> uint8_t)",
    "insertText": "Load8()"
  },
  {
    "label": "Load16()",
    "kind": "Method",
    "detail": "Function (} template<size_t offset> uint16_t)",
    "insertText": "Load16()"
  },
  {
    "label": "Load32()",
    "kind": "Method",
    "detail": "Function (} template<size_t offset> uint32_t)",
    "insertText": "Load32()"
  },
  {
    "label": "sub_reader()",
    "kind": "Method",
    "detail": "Function (} template<size_t SubSize> BoundedByteReader<SubSize>)",
    "insertText": "sub_reader(size_t variable_offset)"
  },
  {
    "label": "RTC_CHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_CHECK(FixedSize + variable_offset + SubSize <= data_.size())"
  },
  {
    "label": "subview()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<const uint8_t> sub_span = data_ .)",
    "insertText": "subview(FixedSize + variable_offset, SubSize)"
  },
  {
    "label": "variable_data_size()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "variable_data_size()"
  },
  {
    "label": "variable_data()",
    "kind": "Method",
    "detail": "Function (} rtc::ArrayView<const uint8_t>)",
    "insertText": "variable_data()"
  }
]