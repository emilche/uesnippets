[
  {
    "label": "FSlateD3DVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateD3DVertexBuffer"
  },
  {
    "label": "FSlateD3DVertexBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / RefCounting . h \" # include \" StandaloneRendererPlatformHeaders . h \" class FSlateD3DVertexBuffer { public :)",
    "insertText": "FSlateD3DVertexBuffer()"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBuffer(uint32 InStride)"
  },
  {
    "label": "DestroyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBuffer()"
  },
  {
    "label": "GetBufferSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBufferSize()"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Lock(uint32 Offset)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unlock()"
  },
  {
    "label": "GetResource()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<ID3D11Buffer>)",
    "insertText": "GetResource()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FSlateD3DVertexBuffer&)"
  }
]