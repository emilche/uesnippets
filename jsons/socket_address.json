[
  {
    "label": "sockaddr_in",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "sockaddr_in"
  },
  {
    "label": "sockaddr_storage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "sockaddr_storage"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "SetIP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIP(uint32_t ip_as_host_order_integer)"
  },
  {
    "label": "SetIP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIP(const IPAddress& ip)"
  },
  {
    "label": "SetIP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIP(absl::string_view hostname)"
  },
  {
    "label": "SetResolvedIP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResolvedIP(uint32_t ip_as_host_order_integer)"
  },
  {
    "label": "SetResolvedIP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResolvedIP(const IPAddress& ip)"
  },
  {
    "label": "SetPort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPort(int port)"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromString(absl::string_view str)"
  },
  {
    "label": "FromSockAddr()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromSockAddr(const sockaddr_in& saddr)"
  },
  {
    "label": "SocketAddressFromSockAddrStorage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SocketAddressFromSockAddrStorage(const sockaddr_storage& saddr,\n                                                 SocketAddress* out)"
  },
  {
    "label": "EmptySocketAddressWithFamily()",
    "kind": "Method",
    "detail": "Function (SocketAddress)",
    "insertText": "EmptySocketAddressWithFamily(int family)"
  }
]