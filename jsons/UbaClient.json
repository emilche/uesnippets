[
  {
    "label": "ClientInitInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ClientInitInfo"
  },
  {
    "label": "Client",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Client"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# include \" UbaNetworkBackendMemory . h \" # include \" UbaNetworkServer . h \" # include \" UbaSessionClient . h \" # include \" UbaStorageClient . h \" # include \" UbaStorageProxy . h \" namespace uba { struct ClientInitInfo { LogWriter& logWriter ; NetworkBackend& networkBackend ; const tchar* rootDir = nullptr ; const tchar* host = nullptr ; u16 port = 0 ; const tchar* zone = nullptr ; u32 maxProcessorCount = 0 ; u32 index = 0 ; bool createSession = true ; bool addDirSuffix = true ; } ; class Client { public : bool)",
    "insertText": "Init(const ClientInitInfo& info)"
  },
  {
    "label": "NetworkBackendMemory()",
    "kind": "Method",
    "detail": "Function (networkBackend =& info . networkBackend ; networkBackendMem = new)",
    "insertText": "NetworkBackendMemory(info.logWriter)"
  },
  {
    "label": "NetworkClient()",
    "kind": "Method",
    "detail": "Function (bool ctorSuccess = true ; networkClient = new)",
    "insertText": "NetworkClient(ctorSuccess, { info.logWriter })"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (StringBuffer<> clientRootDir ; clientRootDir .)",
    "insertText": "Append(info.rootDir)"
  },
  {
    "label": "storageClientInfo()",
    "kind": "Method",
    "detail": "Function (StorageClientCreateInfo)",
    "insertText": "storageClientInfo(*networkClient, clientRootDir.data)"
  },
  {
    "label": "getProxyBackendCallback()",
    "kind": "Method",
    "detail": "Function (NetworkBackend&)",
    "insertText": "getProxyBackendCallback(void* ud, const tchar* h)"
  },
  {
    "label": "startProxyCallback()",
    "kind": "Method",
    "detail": "Function (} ; storageClientInfo . getProxyBackendUserData = this ; storageClientInfo .)",
    "insertText": "startProxyCallback(void* ud, u16 p, const Guid& ssu)"
  },
  {
    "label": "StorageClient()",
    "kind": "Method",
    "detail": "Function (} ; storageClientInfo . startProxyUserData = this ; storageClient = new)",
    "insertText": "StorageClient(storageClientInfo)"
  },
  {
    "label": "LoadCasTable()",
    "kind": "Method",
    "detail": "Function (storageClient ->)",
    "insertText": "LoadCasTable(false)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (storageClient ->)",
    "insertText": "Start()"
  },
  {
    "label": "sessionClientInfo()",
    "kind": "Method",
    "detail": "Function (SessionClientCreateInfo)",
    "insertText": "sessionClientInfo(*storageClient, *networkClient, info.logWriter)"
  },
  {
    "label": "SessionClient()",
    "kind": "Method",
    "detail": "Function (sessionClientInfo . maxProcessCount = info . maxProcessorCount ; sessionClientInfo . rootDir = clientRootDir . data ; sessionClientInfo . deleteSessionsOlderThanSeconds = 1 ; sessionClient = new)",
    "insertText": "SessionClient(sessionClientInfo)"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (} return networkClient ->)",
    "insertText": "Connect(*networkBackend, info.host, info.port)"
  },
  {
    "label": "StartProxy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StartProxy(u16 proxyPort, const Guid& storageServerUid)"
  },
  {
    "label": "nsci()",
    "kind": "Method",
    "detail": "Function (NetworkServerCreateInfo)",
    "insertText": "nsci(networkClient->GetLogWriter())"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (nsci . workerCount = 1 9 2 ; nsci . receiveTimeoutSeconds = 6 0 ; StringBuffer<2 5 6> prefix ; prefix .)",
    "insertText": "Append(TC(\"UbaProxyServer (\")).Append(GuidToString(networkClient->GetUid()).str).Append(')')"
  },
  {
    "label": "NetworkServer()",
    "kind": "Method",
    "detail": "Function (serverPrefix = prefix . data ; bool ctorSuccess = true ; proxyNetworkServer = new)",
    "insertText": "NetworkServer(ctorSuccess, nsci, serverPrefix.c_str())"
  },
  {
    "label": "StorageProxy()",
    "kind": "Method",
    "detail": "Function (delete proxyNetworkServer ; return false ; } proxyStorage = new)",
    "insertText": "StorageProxy(*proxyNetworkServer, *networkClient, storageServerUid, TC(\"Wooohoo\"), storageClient)"
  },
  {
    "label": "StartListen()",
    "kind": "Method",
    "detail": "Function (proxyNetworkServer ->)",
    "insertText": "StartListen(*networkBackendMem, proxyPort)"
  },
  {
    "label": "StartListen()",
    "kind": "Method",
    "detail": "Function (proxyNetworkServer ->)",
    "insertText": "StartListen(*networkBackend, proxyPort)"
  },
  {
    "label": "Client()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "Client()"
  }
]