[
  {
    "label": "BranchProbabilityInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BranchProbabilityInfo"
  },
  {
    "label": "BlockT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockT"
  },
  {
    "label": "BlockFrequencyInfoImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockFrequencyInfoImpl"
  },
  {
    "label": "BlockFrequencyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockFrequencyInfo"
  },
  {
    "label": "BlockFrequencyInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_ANALYSIS_BLOCKFREQUENCYINFO_H # define LLVM_ANALYSIS_BLOCKFREQUENCYINFO_H # include \" llvm / Pass . h \" # include \" llvm / Support / BlockFrequency . h \" # include<climits> namespace llvm { class BranchProbabilityInfo ; template<class BlockT> class BlockFrequencyInfoImpl ; class BlockFrequencyInfo : public FunctionPass { typedef BlockFrequencyInfoImpl<BasicBlock> ImplType ; std::unique_ptr<ImplType> BFI ; public : char ID ;)",
    "insertText": "BlockFrequencyInfo()"
  },
  {
    "label": "getAnalysisUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getAnalysisUsage(AnalysisUsage &AU)"
  },
  {
    "label": "runOnFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "runOnFunction(Function &F)"
  },
  {
    "label": "releaseMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "releaseMemory()"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &O, const Module *M)"
  },
  {
    "label": "getFunction()",
    "kind": "Method",
    "detail": "Function (const Function*)",
    "insertText": "getFunction()"
  },
  {
    "label": "view()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "view()"
  },
  {
    "label": "getBlockFreq()",
    "kind": "Method",
    "detail": "Function (BlockFrequency)",
    "insertText": "getBlockFreq(const BasicBlock *BB)"
  },
  {
    "label": "printBlockFreq()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "printBlockFreq(raw_ostream &OS, const BlockFrequency Freq)"
  },
  {
    "label": "printBlockFreq()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "printBlockFreq(raw_ostream &OS, const BasicBlock *BB)"
  },
  {
    "label": "getEntryFreq()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "getEntryFreq()"
  }
]