[
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "FEvolution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvolution"
  },
  {
    "label": "TArrayRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TArrayRange"
  },
  {
    "label": "FSoftBodies",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftBodies"
  },
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "FCollisionBodyRanges",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionBodyRanges"
  },
  {
    "label": "struct",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "struct"
  },
  {
    "label": "FGroups",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGroups"
  },
  {
    "label": "FLinearSystemParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearSystemParameters"
  },
  {
    "label": "FEvolution()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FEvolution(const FCollectionPropertyConstFacade& Properties)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "AdvanceOneTimeStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceOneTimeStep(const FSolverReal Dt, const FSolverReal TimeDependentIterationMultiplier)"
  },
  {
    "label": "AddSoftBody()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddSoftBody(uint32 GroupId, int32 NumParticles, bool bEnable)"
  },
  {
    "label": "RemoveSoftBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSoftBody(int32 SoftBodyId)"
  },
  {
    "label": "SetSoftBodyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSoftBodyProperties(int32 SoftBodyId, const FCollectionPropertyConstFacade& PropertyCollection,\n\t\tconst TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps)"
  },
  {
    "label": "ActivateSoftBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateSoftBody(int32 SoftBodyId, bool bActivate)"
  },
  {
    "label": "AddCollisionParticleRange()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddCollisionParticleRange(uint32 GroupId, int32 NumParticles, bool bEnable)"
  },
  {
    "label": "RemoveCollisionParticleRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCollisionParticleRange(int32 CollisionRangeId)"
  },
  {
    "label": "ActivateCollisionParticleRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateCollisionParticleRange(int32 CollisionRangeId, bool bEnable)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PreSubstepParallelInits)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PBDExternalForceRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PostInitialGuessParallelInits)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PreSubstepConstraintRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PerIterationPBDConstraintRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PerIterationCollisionPBDConstraintRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PerIterationPostCollisionsPBDConstraintRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.UpdateLinearSystemRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.UpdateLinearSystemCollisionsRules)"
  },
  {
    "label": "AllocateRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateRules(SoftBodyId, NumRules, SoftBodies.PostSubstepConstraintRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PreSubstepParallelInits)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PBDExternalForceRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PostInitialGuessParallelInits)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PreSubstepConstraintRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PerIterationPBDConstraintRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PerIterationCollisionPBDConstraintRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PerIterationPostCollisionsPBDConstraintRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.UpdateLinearSystemRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.UpdateLinearSystemCollisionsRules)"
  },
  {
    "label": "GetRules()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetRules(SoftBodyId, SoftBodies.PostSubstepConstraintRules)"
  },
  {
    "label": "SetSolverProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSolverProperties(const FCollectionPropertyConstFacade& PropertyCollection)"
  },
  {
    "label": "AdvanceOneTimeStepInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceOneTimeStepInternal(const FSolverReal Dt, const int32 TimeDependentNumIterations, uint32 GroupId)"
  }
]