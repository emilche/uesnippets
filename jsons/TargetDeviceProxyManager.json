[
  {
    "label": "FMessageEndpoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMessageEndpoint"
  },
  {
    "label": "FTargetDeviceProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTargetDeviceProxy"
  },
  {
    "label": "IMessageContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageContext"
  },
  {
    "label": "FTargetDeviceServicePong",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetDeviceServicePong"
  },
  {
    "label": "FTargetDeviceProxyManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTargetDeviceProxyManager"
  },
  {
    "label": "FTargetDeviceProxyManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Map . h \" # include \" Containers / Ticker . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" Templates / SharedPointer . h \" # include \" ITargetDeviceProxyManager . h \" class FMessageEndpoint ; class FTargetDeviceProxy ; class IMessageContext ; struct FTargetDeviceServicePong ; class FTargetDeviceProxyManager : public ITargetDeviceProxyManager { public :)",
    "insertText": "FTargetDeviceProxyManager()"
  },
  {
    "label": "FindOrAddProxy()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<ITargetDeviceProxy>)",
    "insertText": "FindOrAddProxy(const FString& Name)"
  },
  {
    "label": "FindProxy()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITargetDeviceProxy>)",
    "insertText": "FindProxy(const FString& Name)"
  },
  {
    "label": "FindProxyDeviceForTargetDevice()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITargetDeviceProxy>)",
    "insertText": "FindProxyDeviceForTargetDevice(const FString& DeviceId)"
  },
  {
    "label": "GetProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetProxies(FName TargetPlatformName, bool IncludeUnshared, TArray<TSharedPtr<ITargetDeviceProxy>>& OutProxies)"
  },
  {
    "label": "GetAllProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllProxies(FName TargetPlatformName, TArray<TSharedPtr<ITargetDeviceProxy>>& OutProxies)"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FTargetDeviceProxyManager, ITargetDeviceProxyManager::FOnTargetDeviceProxyAdded, FOnTargetDeviceProxyAdded)"
  },
  {
    "label": "OnProxyAdded()",
    "kind": "Method",
    "detail": "Function (FOnTargetDeviceProxyAdded&)",
    "insertText": "OnProxyAdded()"
  },
  {
    "label": "OnProxyRemoved()",
    "kind": "Method",
    "detail": "Function (FOnTargetDeviceProxyRemoved&)",
    "insertText": "OnProxyRemoved()"
  },
  {
    "label": "SendPing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendPing()"
  },
  {
    "label": "HandlePongMessage()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandlePongMessage(const FTargetDeviceServicePong& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "AddProxyFromPongMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddProxyFromPongMessage(const FTargetDeviceServicePong& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context, bool InIsAggregated)"
  },
  {
    "label": "HandleTicker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTicker(float DeltaTime)"
  },
  {
    "label": "GetProxyList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetProxyList(FName TargetPlatformName, bool IncludeUnshared, bool bIncludeAggregate, TArray<TSharedPtr<ITargetDeviceProxy>>& OutProxies)"
  }
]