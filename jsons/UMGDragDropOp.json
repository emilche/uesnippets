[
  {
    "label": "SObjectWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SObjectWidget"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UDragDropOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDragDropOperation"
  },
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "FUMGDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUMGDragDropOp"
  },
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / CursorReply . h \" # include \" Input / DragAndDrop . h \" # include \" UObject / GCObject . h \" class SObjectWidget ; class SWidget ; class UDragDropOperation ; class UGameViewportClient ; class FUMGDragDropOp : public FGameDragDropOperation,public FGCObject { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FUMGDragDropOp, FGameDragDropOperation) static TSharedRef<FUMGDragDropOp> New(UDragDropOperation* Operation, const int32 PointerIndex, const FVector2D &CursorPosition, const FVector2D &ScreenPositionOfNode, float DPIScale, TSharedPtr<SObjectWidget> SourceUserWidget)"
  },
  {
    "label": "FUMGDragDropOp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FUMGDragDropOp()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "AffectedByPointerEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AffectedByPointerEvent(const FPointerEvent& PointerEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDrop(bool bDropWasHandled, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnDragged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragged(const class FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnCursorQuery()",
    "kind": "Method",
    "detail": "Function (FCursorReply)",
    "insertText": "OnCursorQuery()"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "GetOperation()",
    "kind": "Method",
    "detail": "Function (UDragDropOperation*)",
    "insertText": "GetOperation()"
  }
]