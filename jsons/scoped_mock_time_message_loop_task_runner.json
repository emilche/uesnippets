[
  {
    "label": "SingleThreadTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SingleThreadTaskRunner"
  },
  {
    "label": "ScopedMockTimeMessageLoopTaskRunner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedMockTimeMessageLoopTaskRunner"
  },
  {
    "label": "ScopedMockTimeMessageLoopTaskRunner()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_SCOPED_MOCK_TIME_MESSAGE_LOOP_TASK_RUNNER_H_ # define BASE_TEST_SCOPED_MOCK_TIME_MESSAGE_LOOP_TASK_RUNNER_H_ # include \" base / memory / ref_counted . h \" # include \" base / test / test_mock_time_task_runner . h \" namespace base { class SingleThreadTaskRunner ; class ScopedMockTimeMessageLoopTaskRunner { public :)",
    "insertText": "ScopedMockTimeMessageLoopTaskRunner()"
  },
  {
    "label": "ScopedMockTimeMessageLoopTaskRunner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedMockTimeMessageLoopTaskRunner(const ScopedMockTimeMessageLoopTaskRunner&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedMockTimeMessageLoopTaskRunner&)",
    "insertText": "operator(const ScopedMockTimeMessageLoopTaskRunner&)"
  },
  {
    "label": "task_runner()",
    "kind": "Method",
    "detail": "Function (TestMockTimeTaskRunner*)",
    "insertText": "task_runner()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} TestMockTimeTaskRunner*)",
    "insertText": "operator()"
  }
]