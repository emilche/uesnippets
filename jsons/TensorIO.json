[
  {
    "label": "TensorPrinter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TensorPrinter"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CXX11_TENSOR_TENSOR_IO_H # define EIGEN_CXX11_TENSOR_TENSOR_IO_H namespace Eigen { namespace internal { template<Tensor,int Rank> struct TensorPrinter { void)",
    "insertText": "run(std::ostream& os, const Tensor& tensor)"
  },
  {
    "label": "array_prod()",
    "kind": "Method",
    "detail": "Function (typedef internal::remove_const<Tensor::Scalar>::type Scalar ; typedef Tensor::Index Index ; const Index total_size =)",
    "insertText": "array_prod(tensor.dimensions())"
  },
  {
    "label": "array_get()",
    "kind": "Method",
    "detail": "Function (const Index first_dim = Eigen::)",
    "insertText": "array_get(tensor.dimensions())"
  },
  {
    "label": "matrix()",
    "kind": "Method",
    "detail": "Function (const int layout = Tensor::Layout ; Map<const Array<Scalar,Dynamic,Dynamic,layout>>)",
    "insertText": "matrix(const_cast<Scalar*>(tensor.data()), first_dim, total_size/first_dim)"
  },
  {
    "label": "array()",
    "kind": "Method",
    "detail": "Function (Map<const Array<Scalar,Dynamic,1>>)",
    "insertText": "array(const_cast<Scalar*>(tensor.data()), total_size)"
  },
  {
    "label": "coeff()",
    "kind": "Method",
    "detail": "Function (os<<tensor .)",
    "insertText": "coeff(0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; } template<T> std::ostream&)",
    "insertText": "operator(std::ostream& os, const TensorBase<T, ReadOnlyAccessors>& expr)"
  },
  {
    "label": "eval()",
    "kind": "Method",
    "detail": "Function (typedef TensorEvaluator<const TensorForcedEvalOp<const T>,DefaultDevice> Evaluator ; typedef Evaluator::Dimensions Dimensions ; TensorForcedEvalOp<const T> eval = expr .)",
    "insertText": "eval()"
  },
  {
    "label": "tensor()",
    "kind": "Method",
    "detail": "Function (Evaluator)",
    "insertText": "tensor(eval, DefaultDevice())"
  },
  {
    "label": "evalSubExprsIfNeeded()",
    "kind": "Method",
    "detail": "Function (tensor .)",
    "insertText": "evalSubExprsIfNeeded(NULL)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (const int rank = internal::array_size<Dimensions>::value ; internal::TensorPrinter<Evaluator,rank)",
    "insertText": "run(os, tensor)"
  },
  {
    "label": "cleanup()",
    "kind": "Method",
    "detail": "Function (tensor .)",
    "insertText": "cleanup()"
  }
]