[
  {
    "label": "FPBDSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDSpringConstraints"
  },
  {
    "label": "FPBDEdgeSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDEdgeSpringConstraints"
  },
  {
    "label": "FPBDBendingSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDBendingSpringConstraints"
  },
  {
    "label": "FPBDSpringConstraints()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / PBDSpringConstraintsBase . h \" # include \" Chaos / CollectionPropertyFacade . h \" namespace Chaos::Softs { class FPBDSpringConstraints : public FPBDSpringConstraintsBase { public : template<int32 Valence>)",
    "insertText": "FPBDSpringConstraints(const FSolverParticlesRange& Particles, const TArray<TVector<int32, Valence>>& InConstraints, const TConstArrayView<FRealSingle>& StiffnessMultipliers, const FSolverVec2& InStiffness, bool bTrimKinematicConstraints = false, typename TEnableIf<Valence >= 2 && Valence <= 4>::Type* = nullptr) : Base( Particles, InConstraints, StiffnessMultipliers, InStiffness, bTrimKinematicConstraints)"
  },
  {
    "label": "InitColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitColor(Particles)"
  },
  {
    "label": "FPBDSpringConstraints()",
    "kind": "Method",
    "detail": "Function (} template<int32 Valence>)",
    "insertText": "FPBDSpringConstraints(const FSolverParticles& Particles, int32 InParticleOffset, int32 InParticleCount, const TArray<TVector<int32, Valence>>& InConstraints, const TConstArrayView<FRealSingle>& StiffnessMultipliers, const FSolverVec2& InStiffness, bool bTrimKinematicConstraints = false, typename TEnableIf<Valence >= 2 && Valence <= 4>::Type* = nullptr) : Base( Particles, InParticleOffset, InParticleCount, InConstraints, StiffnessMultipliers, InStiffness, bTrimKinematicConstraints)"
  },
  {
    "label": "FPBDSpringConstraints()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FPBDSpringConstraints()"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} template<SolverParticlesOrRange> void)",
    "insertText": "Apply(SolverParticlesOrRange& Particles, const FSolverReal Dt)"
  },
  {
    "label": "GetConstraintsPerColorStartIndex()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>&)",
    "insertText": "GetConstraintsPerColorStartIndex()"
  },
  {
    "label": "ApplyHelper()",
    "kind": "Method",
    "detail": "Function (template<SolverParticlesOrRange> void)",
    "insertText": "ApplyHelper(SolverParticlesOrRange& Particles, const FSolverReal Dt, const int32 ConstraintIndex, const FSolverReal ExpStiffnessValue)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (private : TArray<int32> ConstraintsPerColorStartIndex ; } ; class FPBDEdgeSpringConstraints final : public FPBDSpringConstraints { public : bool)",
    "insertText": "IsEnabled(const FCollectionPropertyConstFacade& PropertyCollection)"
  },
  {
    "label": "FPBDEdgeSpringConstraints()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPBDEdgeSpringConstraints(const FSolverParticlesRange& Particles, const TArray<TVec3<int32>>& InConstraints, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps, const FCollectionPropertyConstFacade& PropertyCollection, bool bTrimKinematicConstraints = false) : FPBDSpringConstraints( Particles, InConstraints, WeightMaps.FindRef(GetEdgeSpringStiffnessString(PropertyCollection, EdgeSpringStiffnessName.ToString())), FSolverVec2(GetWeightedFloatEdgeSpringStiffness(PropertyCollection, 1.f)), bTrimKinematicConstraints) , EdgeSpringStiffnessIndex(PropertyCollection)"
  },
  {
    "label": "FPBDEdgeSpringConstraints()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPBDEdgeSpringConstraints(const FSolverParticles& Particles, int32 ParticleOffset, int32 ParticleCount, const TArray<TVec3<int32>>& InConstraints, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps, const FCollectionPropertyConstFacade& PropertyCollection, bool bTrimKinematicConstraints = false) : FPBDSpringConstraints( Particles, ParticleOffset, ParticleCount, InConstraints, WeightMaps.FindRef(GetEdgeSpringStiffnessString(PropertyCollection, EdgeSpringStiffnessName.ToString())), FSolverVec2(GetWeightedFloatEdgeSpringStiffness(PropertyCollection, 1.f)), bTrimKinematicConstraints) , EdgeSpringStiffnessIndex(PropertyCollection)"
  },
  {
    "label": "FPBDEdgeSpringConstraints()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FPBDEdgeSpringConstraints()"
  },
  {
    "label": "SetProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProperties(const FCollectionPropertyConstFacade& PropertyCollection, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps)"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (private : using FPBDSpringConstraints::ParticleCount ;)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(EdgeSpringStiffness, float)"
  },
  {
    "label": "FPBDBendingSpringConstraints()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPBDBendingSpringConstraints(const FSolverParticlesRange& Particles, const TArray<TVec2<int32>>& InConstraints, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps, const FCollectionPropertyConstFacade& PropertyCollection, bool bTrimKinematicConstraints = false) : FPBDSpringConstraints( Particles, InConstraints, WeightMaps.FindRef(GetBendingSpringStiffnessString(PropertyCollection, BendingSpringStiffnessName.ToString())), FSolverVec2(GetWeightedFloatBendingSpringStiffness(PropertyCollection, 1.f)), bTrimKinematicConstraints) , BendingSpringStiffnessIndex(PropertyCollection)"
  },
  {
    "label": "FPBDBendingSpringConstraints()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPBDBendingSpringConstraints(const FSolverParticles& Particles, int32 ParticleOffset, int32 ParticleCount, const TArray<TVec2<int32>>& InConstraints, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps, const FCollectionPropertyConstFacade& PropertyCollection, bool bTrimKinematicConstraints = false) : FPBDSpringConstraints( Particles, ParticleOffset, ParticleCount, InConstraints, WeightMaps.FindRef(GetBendingSpringStiffnessString(PropertyCollection, BendingSpringStiffnessName.ToString())), FSolverVec2(GetWeightedFloatBendingSpringStiffness(PropertyCollection, 1.f)), bTrimKinematicConstraints) , BendingSpringStiffnessIndex(PropertyCollection)"
  },
  {
    "label": "FPBDBendingSpringConstraints()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FPBDBendingSpringConstraints()"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (private : using FPBDSpringConstraints::ParticleCount ;)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(BendingSpringStiffness, float)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} ; } # if !)",
    "insertText": "defined(CHAOS_SPRING_ISPC_ENABLED_DEFAULT)"
  }
]