[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "UPreviewMeshCollectionFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPreviewMeshCollectionFactory"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FPersonaModeComboEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersonaModeComboEntry"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FPreviewSceneDescriptionCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewSceneDescriptionCustomization"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "UClothingSimulationFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingSimulationFactory"
  },
  {
    "label": "UClothingSimulationFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingSimulationFactory"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "IPersonaToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaToolkit"
  },
  {
    "label": "FAnimationEditorPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationEditorPreviewScene"
  },
  {
    "label": "IEditableSkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEditableSkeleton"
  },
  {
    "label": "available",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "available"
  },
  {
    "label": "UClothingSimulationFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClothingSimulationFactory"
  },
  {
    "label": "FPreviewMeshCollectionEntryCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewMeshCollectionEntryCustomization"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "FPreviewSceneDescriptionCustomization()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FPreviewSceneDescriptionCustomization(const FString& InSkeletonName, const TSharedRef<class IPersonaToolkit>& InPersonaToolkit)"
  },
  {
    "label": "OnSaveCollectionClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnSaveCollectionClicked(TSharedRef<IPropertyHandle> InAdditionalMeshesProperty, IDetailLayoutBuilder* DetailLayoutBuilder)"
  },
  {
    "label": "HandleShouldFilterAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleShouldFilterAsset(const FAssetData& InAssetData, FName InTag, bool bCanUseDifferentSkeleton)"
  },
  {
    "label": "HandleShouldFilterAdditionalMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleShouldFilterAdditionalMesh(const FAssetData& InAssetData, bool bCanUseDifferentSkeleton)"
  },
  {
    "label": "OnComboSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComboSelectionChanged(TSharedPtr<FPersonaModeComboEntry> InSelectedItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "HandlePreviewControllerPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePreviewControllerPropertyChanged()"
  },
  {
    "label": "HandleMeshChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMeshChanged(const FAssetData& InAssetData)"
  },
  {
    "label": "HandlePreviewAnimBlueprintChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePreviewAnimBlueprintChanged(const FAssetData& InAssetData)"
  },
  {
    "label": "HandleAnimBlueprintCompiled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAnimBlueprintCompiled(UBlueprint* Blueprint)"
  },
  {
    "label": "HandleAdditionalMeshesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAdditionalMeshesChanged(const FAssetData& InAssetData, IDetailLayoutBuilder* DetailLayoutBuilder)"
  },
  {
    "label": "HandleAllowDifferentSkeletonsCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAllowDifferentSkeletonsCheckedStateChanged(ECheckBoxState CheckState)"
  },
  {
    "label": "HandleUseCustomAnimBPCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUseCustomAnimBPCheckedStateChanged(ECheckBoxState CheckState)"
  },
  {
    "label": "ReinitializePreviewController()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReinitializePreviewController()"
  },
  {
    "label": "OnResetToBaseClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToBaseClicked(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnResetAdditionalMeshes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetAdditionalMeshes()"
  },
  {
    "label": "HandleShouldFilterAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleShouldFilterAsset(const FAssetData& InAssetData, FString SkeletonName, USkeleton* Skeleton)"
  },
  {
    "label": "HandleMeshChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMeshChanged(const FAssetData& InAssetData)"
  },
  {
    "label": "HandleMeshesArrayChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMeshesArrayChanged(TSharedPtr<IPropertyUtilities> PropertyUtilities)"
  }
]