[
  {
    "label": "FPawnIteratorObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPawnIteratorObject"
  },
  {
    "label": "FConstPawnIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstPawnIterator"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EngineUtils . h \" # include \" GameFramework / Pawn . h \" struct FPawnIteratorObject { APawn*)",
    "insertText": "operator()"
  },
  {
    "label": "FPawnIteratorObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPawnIteratorObject(APawn* InPawn) : Pawn(InPawn)"
  },
  {
    "label": "Cast()",
    "kind": "Method",
    "detail": "Function (} APawn* Pawn ; class FConstPawnIterator ; } ; template<class T> T*)",
    "insertText": "Cast(const FPawnIteratorObject& Src)"
  },
  {
    "label": "FConstPawnIterator()",
    "kind": "Method",
    "detail": "Function (} class FConstPawnIterator { private :)",
    "insertText": "FConstPawnIterator(UWorld* World)"
  },
  {
    "label": "FConstPawnIterator()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "FConstPawnIterator()"
  },
  {
    "label": "FConstPawnIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConstPawnIterator(FConstPawnIterator&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FConstPawnIterator&)",
    "insertText": "operator(FConstPawnIterator&&)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FConstPawnIterator&)",
    "insertText": "operator(int)"
  }
]