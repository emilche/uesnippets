[
  {
    "label": "rc5_key_st",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "rc5_key_st"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_RC5_H # define HEADER_RC5_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_RC5 # ifdef __cplusplus \" C \" { # endif # define RC5_ENCRYPT 1 # define RC5_DECRYPT 0 # define RC5_32_INT unsigned int # define RC5_32_BLOCK 8 # define RC5_32_KEY_LENGTH 1 6 # define RC5_8_ROUNDS 8 # define RC5_12_ROUNDS 1 2 # define RC5_16_ROUNDS 1 6 typedef struct rc5_key_st { int rounds ; RC5_32_INT)",
    "insertText": "data(RC5_16_ROUNDS + 1)"
  },
  {
    "label": "RC5_32_set_key()",
    "kind": "Method",
    "detail": "Function (} RC5_32_KEY ; void)",
    "insertText": "RC5_32_set_key(RC5_32_KEY *key, int len, const unsigned char *data, int rounds)"
  },
  {
    "label": "RC5_32_ecb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RC5_32_ecb_encrypt(const unsigned char *in, unsigned char *out, RC5_32_KEY *key, int enc)"
  },
  {
    "label": "RC5_32_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RC5_32_encrypt(unsigned long *data, RC5_32_KEY *key)"
  },
  {
    "label": "RC5_32_decrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RC5_32_decrypt(unsigned long *data, RC5_32_KEY *key)"
  },
  {
    "label": "RC5_32_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RC5_32_cbc_encrypt(const unsigned char *in, unsigned char *out, long length, RC5_32_KEY *ks, unsigned char *iv, int enc)"
  },
  {
    "label": "RC5_32_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RC5_32_cfb64_encrypt(const unsigned char *in, unsigned char *out, long length, RC5_32_KEY *schedule, unsigned char *ivec, int *num, int enc)"
  },
  {
    "label": "RC5_32_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RC5_32_ofb64_encrypt(const unsigned char *in, unsigned char *out, long length, RC5_32_KEY *schedule, unsigned char *ivec, int *num)"
  }
]