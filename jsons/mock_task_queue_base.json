[
  {
    "label": "MockTaskQueueBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockTaskQueueBase"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TASK_QUEUE_TEST_MOCK_TASK_QUEUE_BASE_H_ # define API_TASK_QUEUE_TEST_MOCK_TASK_QUEUE_BASE_H_ # include \" absl / functional / any_invocable . h \" # include \" api / task_queue / task_queue_base . h \" # include \" api / units / time_delta . h \" # include \" test / gmock . h \" namespace webrtc { class MockTaskQueueBase : public TaskQueueBase { public :)",
    "insertText": "MOCK_METHOD(void, Delete, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, PostTask, (absl::AnyInvocable<void() &&>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, PostDelayedTask, (absl::AnyInvocable<void() &&>, TimeDelta), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, PostDelayedHighPrecisionTask, (absl::AnyInvocable<void() &&>, TimeDelta), (override))"
  }
]