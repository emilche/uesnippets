[
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "STimingProfilerToolbar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingProfilerToolbar"
  },
  {
    "label": "STimingProfilerToolbar()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FExtender ; namespace UE::Insights::TimingProfiler { class STimingProfilerToolbar : public SCompoundWidget { public :)",
    "insertText": "STimingProfilerToolbar()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(STimingProfilerToolbar)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FExtender>, ToolbarExtender)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  }
]