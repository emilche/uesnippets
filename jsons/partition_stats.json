[
  {
    "label": "ThreadCacheStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThreadCacheStats"
  },
  {
    "label": "PartitionMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PartitionMemoryStats"
  },
  {
    "label": "PartitionBucketMemoryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PartitionBucketMemoryStats"
  },
  {
    "label": "PA_COMPONENT_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_COMPONENT_EXPORT"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_STATS_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_PARTITION_STATS_H_ # include<cstddef> # include<cstdint> # include \" base / allocator / partition_allocator / partition_alloc_base / component_export . h \" # include \" base / allocator / partition_allocator / partition_alloc_buildflags . h \" # include \" base / allocator / partition_allocator / partition_alloc_config . h \" # include \" base / allocator / partition_allocator / partition_alloc_constants . h \" namespace partition_alloc { struct ThreadCacheStats { uint64_t alloc_count ; uint64_t alloc_hits ; uint64_t alloc_misses ; uint64_t alloc_miss_empty ; uint64_t alloc_miss_too_large ; uint64_t cache_fill_count ; uint64_t cache_fill_hits ; uint64_t cache_fill_misses ; uint64_t batch_fill_count ; uint32_t bucket_total_memory ; uint32_t metadata_overhead ; # if)",
    "insertText": "defined(PA_THREAD_CACHE_ALLOC_STATS)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct PartitionMemoryStats { size_t total_mmapped_bytes ; size_t total_committed_bytes ; size_t max_committed_bytes ; size_t total_allocated_bytes ; size_t max_allocated_bytes ; size_t total_resident_bytes ; size_t total_active_bytes ; size_t total_active_count ; size_t total_decommittable_bytes ; size_t total_discardable_bytes ; # if)",
    "insertText": "BUILDFLAG(ENABLE_BACKUP_REF_PTR_SUPPORT)"
  },
  {
    "label": "PA_COMPONENT_EXPORT()",
    "kind": "Method",
    "detail": "Function (size_t total_brp_quarantined_count ; size_t cumulative_brp_quarantined_bytes ; size_t cumulative_brp_quarantined_count ; # endif bool has_thread_cache ; ThreadCacheStats current_thread_cache_stats ; ThreadCacheStats all_thread_caches_stats ; uint64_t syscall_count ; uint64_t syscall_total_time_ns ; } ; struct PartitionBucketMemoryStats { bool is_valid ; bool is_direct_map ; uint32_t bucket_slot_size ; uint32_t allocated_slot_span_size ; uint32_t active_bytes ; uint32_t active_count ; uint32_t resident_bytes ; uint32_t decommittable_bytes ; uint32_t discardable_bytes ; uint32_t num_full_slot_spans ; uint32_t num_active_slot_spans ; uint32_t num_empty_slot_spans ; uint32_t num_decommitted_slot_spans ; } ; class)",
    "insertText": "PA_COMPONENT_EXPORT(PARTITION_ALLOC)"
  },
  {
    "label": "PartitionDumpTotals()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "PartitionDumpTotals(const char* partition_name, const PartitionMemoryStats*)"
  },
  {
    "label": "PartitionsDumpBucketStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartitionsDumpBucketStats(const char* partition_name, const PartitionBucketMemoryStats*)"
  },
  {
    "label": "SimplePartitionStatsDumper()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SimplePartitionStatsDumper()"
  },
  {
    "label": "PartitionDumpTotals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartitionDumpTotals(const char* partition_name, const PartitionMemoryStats* memory_stats)"
  },
  {
    "label": "stats()",
    "kind": "Method",
    "detail": "Function (} const PartitionMemoryStats&)",
    "insertText": "stats()"
  }
]