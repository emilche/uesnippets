[
  {
    "label": "FAutomationFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationFilter"
  },
  {
    "label": "FAutomationGroupFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationGroupFilter"
  },
  {
    "label": "FAutomatedTestFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomatedTestFilter"
  },
  {
    "label": "FAutomationTestPresetManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationTestPresetManager"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "SAutomationWindowCommandBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindowCommandBar"
  },
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "FAutomationTestPreset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationTestPreset"
  },
  {
    "label": "TTextFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TTextFilter"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "IAutomationReport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAutomationReport"
  },
  {
    "label": "FAutomationOutputMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationOutputMessage"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "SAutomationWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAutomationWindow"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const IAutomationControllerManagerRef& AutomationController, const TSharedRef<ISessionManager>& InSessionManager)"
  },
  {
    "label": "SaveExpandedTestNames()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "SaveExpandedTestNames(TSet<TSharedPtr<IAutomationReport>> ExpandedItems)"
  },
  {
    "label": "ExpandItemsInList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandItemsInList(TSharedPtr<STreeView<TSharedPtr<IAutomationReport>>> InTestTable, TSharedPtr<IAutomationReport> InReport, TArray<FString> ItemsToExpand)"
  },
  {
    "label": "ChangeTheSelectionToThisRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeTheSelectionToThisRow(TSharedPtr< IAutomationReport > ThisRow)"
  },
  {
    "label": "IsRowSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRowSelected(TSharedPtr< IAutomationReport >  ThisRow)"
  },
  {
    "label": "SetAllSelectedTestsChecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllSelectedTestsChecked( bool InChecked )"
  },
  {
    "label": "IsAnySelectedRowEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnySelectedRowEnabled()"
  },
  {
    "label": "HandleItemCheckBoxCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemCheckBoxCheckedStateChanged( TSharedPtr< IAutomationReport > TestStatus )"
  },
  {
    "label": "CreateCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCommands()"
  },
  {
    "label": "GenerateRequestedFilterComboItem()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateRequestedFilterComboItem(TSharedPtr<FString> InItem)"
  },
  {
    "label": "GenerateGroupComboItem()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateGroupComboItem(TSharedPtr<FString> InItem)"
  },
  {
    "label": "OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpansionChanged(TSharedPtr<IAutomationReport> InItem, bool bExpanded)"
  },
  {
    "label": "ExpandSingleItemSubgroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandSingleItemSubgroups(TSharedPtr<IAutomationReport> InItem, bool bExpanded)"
  },
  {
    "label": "OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildren(TSharedPtr<IAutomationReport> InItem, TArray<TSharedPtr<IAutomationReport> >& OutItems)"
  },
  {
    "label": "OnTestExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestExpansionRecursive(TSharedPtr<IAutomationReport> InTreeNode, bool bInIsItemExpanded)"
  },
  {
    "label": "OnTestSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestSelectionChanged(TSharedPtr<IAutomationReport> Selection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "UpdateTestLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTestLog(TSharedPtr<IAutomationReport> Selection)"
  },
  {
    "label": "HeaderCheckboxStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HeaderCheckboxStateChange(ECheckBoxState InCheckboxState)"
  },
  {
    "label": "RebuildPlatformIcons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildPlatformIcons()"
  },
  {
    "label": "CreateDeviceTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "CreateDeviceTooltip(int32 ClusterIndex)"
  },
  {
    "label": "ClearAutomationUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAutomationUI()"
  },
  {
    "label": "OnGenerateWidgetForTest()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateWidgetForTest(TSharedPtr<IAutomationReport> InItem, const TSharedRef<STableViewBase>& OwnerTable )"
  },
  {
    "label": "OnGenerateWidgetForLog()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateWidgetForLog(TSharedPtr<FAutomationOutputMessage> Message, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnRefreshTestCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRefreshTestCallback()"
  },
  {
    "label": "FindWorkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindWorkers()"
  },
  {
    "label": "ListTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ListTests()"
  },
  {
    "label": "RunTests()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "RunTests()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& InFilterText )"
  },
  {
    "label": "OnToggleDeveloperDirectoryIncluded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleDeveloperDirectoryIncluded()"
  },
  {
    "label": "OnToggleExcludedTestsFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleExcludedTestsFilter()"
  },
  {
    "label": "OnToggleSmokeTestFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSmokeTestFilter()"
  },
  {
    "label": "OnToggleWarningFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleWarningFilter()"
  },
  {
    "label": "OnToggleErrorFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleErrorFilter()"
  },
  {
    "label": "HandleSendAnalyticsBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSendAnalyticsBoxCheckStateChanged(ECheckBoxState CheckBoxState)"
  },
  {
    "label": "HandleKeepPIEOpenBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleKeepPIEOpenBoxCheckStateChanged(ECheckBoxState CheckBoxState)"
  },
  {
    "label": "HandleAutoExpandSingleItemSubgroupsCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAutoExpandSingleItemSubgroupsCheckStateChanged(ECheckBoxState CheckBoxState)"
  },
  {
    "label": "HandleDeviceGroupCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeviceGroupCheckStateChanged(ECheckBoxState CheckBoxState, const int32 DeviceGroupFlag)"
  },
  {
    "label": "HandlePresetCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePresetCheckStateChanged(ECheckBoxState CheckBoxState, const int32 EntryIndex, TSharedPtr<TArray<TSharedPtr<SCheckBox>>> CheckBoxes)"
  },
  {
    "label": "OnChangeRepeatCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeRepeatCount(int32 InNewValue)"
  },
  {
    "label": "UpdateTestListBackgroundStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTestListBackgroundStyle()"
  },
  {
    "label": "ExpandTreeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandTreeView( TSharedPtr< IAutomationReport > InReport, const bool ShouldExpand )"
  },
  {
    "label": "HandleSessionManagerCanSelectSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSessionManagerCanSelectSession( const TSharedPtr<ISessionInfo>& Session, bool& CanSelect )"
  },
  {
    "label": "HandleSessionManagerSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSessionManagerSelectionChanged( const TSharedPtr<ISessionInfo>& SelectedSession )"
  },
  {
    "label": "HandleSessionManagerInstanceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSessionManagerInstanceChanged()"
  },
  {
    "label": "OnTestAvailableCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestAvailableCallback( EAutomationControllerModuleState::Type InAutomationControllerState )"
  },
  {
    "label": "OnTestsCompleteCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestsCompleteCallback()"
  },
  {
    "label": "CopyLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyLog()"
  },
  {
    "label": "HandleAutomationListContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "HandleAutomationListContextMenuOpening( )"
  },
  {
    "label": "RunSelectedTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunSelectedTests()"
  },
  {
    "label": "FindTestReportsForCurrentEditorLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindTestReportsForCurrentEditorLevel(TArray<TSharedPtr<IAutomationReport>>& OutLevelReports)"
  },
  {
    "label": "CanExecuteRunLevelTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteRunLevelTest()"
  },
  {
    "label": "OnRunLevelTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRunLevelTest()"
  },
  {
    "label": "ScrollToTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollToTest(TSharedPtr<IAutomationReport> InReport)"
  },
  {
    "label": "ExpandToTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpandToTest(TSharedPtr<IAutomationReport> InRoot, TSharedPtr<IAutomationReport> InReport)"
  },
  {
    "label": "HandleSavePresetClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleSavePresetClicked()"
  },
  {
    "label": "OnNewPresetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewPresetClicked()"
  },
  {
    "label": "OnRemovePresetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemovePresetClicked()"
  },
  {
    "label": "OnRenamePresetClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenamePresetClicked()"
  },
  {
    "label": "HandlePresetTextCommited()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePresetTextCommited( const FText& CommittedText, ETextCommit::Type CommitType )"
  },
  {
    "label": "HandleRequesteFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequesteFilterChanged(TSharedPtr<FString> Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "HandleGroupChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGroupChanged(TSharedPtr<FString> Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "ExpandEnabledTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandEnabledTests( TSharedPtr< IAutomationReport > InReport )"
  },
  {
    "label": "HandleCommandBarCopyLogClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleCommandBarCopyLogClicked()"
  },
  {
    "label": "HandleLogListSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleLogListSelectionChanged( TSharedPtr<FAutomationOutputMessage> InItem, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "HandleResultDisplayTypeStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleResultDisplayTypeStateChanged( ECheckBoxState NewRadioState, EAutomationGrapicalDisplayType::Type NewDisplayType )"
  },
  {
    "label": "OnAssetRegistryFilesLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRegistryFilesLoaded()"
  }
]