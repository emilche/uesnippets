[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrVertex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrVertex"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrHalfedge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHalfedge"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrFace"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrMesh"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrHierarchicalEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHierarchicalEdit"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrFacePath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HbrFacePath"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrFaceChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrFaceChildren"
  },
  {
    "label": "HbrAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrAllocator"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrFace"
  },
  {
    "label": "HbrAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrAllocator"
  },
  {
    "label": "HbrHalfedge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrHalfedge"
  },
  {
    "label": "PatchType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "PatchType"
  },
  {
    "label": "TransitionType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TransitionType"
  },
  {
    "label": "AdaptiveFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AdaptiveFlags"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "HbrFaceOperator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HbrFaceOperator"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(HbrMesh<T>* mesh, HbrFace<T>* parent, int childindex, int id, int uindex, int nvertices, HbrVertex<T>** vertices, int fvarwidth = 0, int depth = 0)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "SetChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetChild(int index, HbrFace<T>* face)"
  },
  {
    "label": "Refine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refine()"
  },
  {
    "label": "Unrefine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Unrefine()"
  },
  {
    "label": "HasLimit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLimit()"
  },
  {
    "label": "MarkUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkUsage()"
  },
  {
    "label": "ClearUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUsage()"
  },
  {
    "label": "SetHierarchicalEdits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHierarchicalEdits(HbrHierarchicalEdit<T>** edits)"
  },
  {
    "label": "GetSupportingVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSupportingVertices(std::vector<int> &support)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(HbrFace<T>)"
  }
]