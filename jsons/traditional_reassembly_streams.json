[
  {
    "label": "TraditionalReassemblyStreams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TraditionalReassemblyStreams"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "StreamBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StreamBase"
  },
  {
    "label": "UnorderedStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnorderedStream"
  },
  {
    "label": "OrderedStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OrderedStream"
  },
  {
    "label": "TraditionalReassemblyStreams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TraditionalReassemblyStreams(absl::string_view log_prefix,\n                               OnAssembledMessage on_assembled_message)"
  },
  {
    "label": "AssembleMessage()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "AssembleMessage(ChunkMap::iterator start, ChunkMap::iterator end)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Add(UnwrappedTSN tsn, Data data)"
  },
  {
    "label": "EraseTo()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "EraseTo(UnwrappedTSN tsn)"
  },
  {
    "label": "TryToAssembleMessage()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "TryToAssembleMessage(ChunkMap::iterator iter)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Add(UnwrappedTSN tsn, Data data)"
  },
  {
    "label": "EraseTo()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "EraseTo(SSN ssn)"
  },
  {
    "label": "TryToAssembleMessage()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "TryToAssembleMessage()"
  },
  {
    "label": "TryToAssembleMessages()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "TryToAssembleMessages()"
  }
]