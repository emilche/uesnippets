[
  {
    "label": "FCbFieldViewIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbFieldViewIterator"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FLogTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogTemplate"
  },
  {
    "label": "CreateLogTemplate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # define class FCbFieldViewIterator ; class FText ; namespace UE { class FLogTemplate ; } namespace UE { FLogTemplate*)",
    "insertText": "CreateLogTemplate(const TCHAR* Format)"
  },
  {
    "label": "CreateLogTemplate()",
    "kind": "Method",
    "detail": "Function (FLogTemplate*)",
    "insertText": "CreateLogTemplate(const TCHAR* TextNamespace, const TCHAR* TextKey, const TCHAR* Format)"
  },
  {
    "label": "DestroyLogTemplate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyLogTemplate(FLogTemplate* Template)"
  },
  {
    "label": "FormatLogTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatLogTo(FUtf8StringBuilderBase& Out, const FLogTemplate* Template, const FCbFieldViewIterator& Fields)"
  },
  {
    "label": "FormatLogTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatLogTo(FWideStringBuilderBase& Out, const FLogTemplate* Template, const FCbFieldViewIterator& Fields)"
  },
  {
    "label": "FormatLogToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "FormatLogToText(const FLogTemplate* Template, const FCbFieldViewIterator& Fields)"
  }
]