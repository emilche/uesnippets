[
  {
    "label": "subclass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "subclass"
  },
  {
    "label": "ArrayType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayType"
  },
  {
    "label": "IntegerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntegerType"
  },
  {
    "label": "StructType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StructType"
  },
  {
    "label": "PointerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PointerType"
  },
  {
    "label": "VectorType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VectorType"
  },
  {
    "label": "SequentialType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequentialType"
  },
  {
    "label": "ConstantExprKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantExprKeyType"
  },
  {
    "label": "ConstantClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantClass"
  },
  {
    "label": "ConstantAggrKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantAggrKeyType"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ConstantInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantInt"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "ConstantFP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantFP"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "ConstantAggregateZero",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantAggregateZero"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "ConstantArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantArray"
  },
  {
    "label": "ConstantAggrKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantAggrKeyType"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "OperandTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OperandTraits"
  },
  {
    "label": "ConstantStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantStruct"
  },
  {
    "label": "ConstantAggrKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantAggrKeyType"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "OperandTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OperandTraits"
  },
  {
    "label": "ConstantVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantVector"
  },
  {
    "label": "ConstantAggrKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantAggrKeyType"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "OperandTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OperandTraits"
  },
  {
    "label": "ConstantPointerNull",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantPointerNull"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ConstantDataSequential",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantDataSequential"
  },
  {
    "label": "LLVMContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContextImpl"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "ConstantDataArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantDataArray"
  },
  {
    "label": "ConstantDataSequential",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantDataSequential"
  },
  {
    "label": "ConstantDataVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantDataVector"
  },
  {
    "label": "ConstantDataSequential",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantDataSequential"
  },
  {
    "label": "BlockAddress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockAddress"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "OperandTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OperandTraits"
  },
  {
    "label": "uses",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "uses"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ConstantExpr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantExpr"
  },
  {
    "label": "ConstantExprKeyType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ConstantExprKeyType"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "field",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "field"
  },
  {
    "label": "OperandTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OperandTraits"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "UndefValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UndefValue"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "type"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "isValueValidForType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValueValidForType(Type *Ty, uint64_t V)"
  },
  {
    "label": "isValueValidForType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValueValidForType(Type *Ty, int64_t V)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "ConstantFP()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "ConstantFP(Type *Ty, const APFloat& V)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "isValueValidForType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValueValidForType(Type *Ty, const APFloat &V)"
  },
  {
    "label": "FV()",
    "kind": "Method",
    "detail": "Function (APFloat)",
    "insertText": "FV(V)"
  },
  {
    "label": "isExactlyValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isExactlyValue(FV)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "ConstantArray()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "ConstantArray(ArrayType *T, ArrayRef<Constant *> Val)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "ConstantStruct()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "ConstantStruct(StructType *T, ArrayRef<Constant *> Val)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "ConstantVector()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "ConstantVector(VectorType *T, ArrayRef<Constant *> Val)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "isElementTypeCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isElementTypeCompatible(const Type *Ty)"
  },
  {
    "label": "getRawDataValues()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getRawDataValues()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "array()",
    "kind": "Method",
    "detail": "Function (the)",
    "insertText": "array(increasing the length of the string by\n  /// one more than the StringRef would normally indicate.  Pass AddNull=false\n  /// to disable this behavior.\n  static Constant *getString(LLVMContext &Context, StringRef Initializer,\n                             bool AddNull = true)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 2)"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "getNeg()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getNeg(C, false, true)"
  },
  {
    "label": "getNeg()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getNeg(C, true, false)"
  },
  {
    "label": "getAdd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getAdd(C1, C2, false, true)"
  },
  {
    "label": "getAdd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getAdd(C1, C2, true, false)"
  },
  {
    "label": "getSub()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getSub(C1, C2, false, true)"
  },
  {
    "label": "getSub()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getSub(C1, C2, true, false)"
  },
  {
    "label": "getMul()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getMul(C1, C2, false, true)"
  },
  {
    "label": "getMul()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getMul(C1, C2, true, false)"
  },
  {
    "label": "getShl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getShl(C1, C2, false, true)"
  },
  {
    "label": "getShl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getShl(C1, C2, true, false)"
  },
  {
    "label": "getSDiv()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getSDiv(C1, C2, true)"
  },
  {
    "label": "getUDiv()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getUDiv(C1, C2, true)"
  },
  {
    "label": "getAShr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getAShr(C1, C2, true)"
  },
  {
    "label": "getLShr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getLShr(C1, C2, true)"
  },
  {
    "label": "getGetElementPtr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getGetElementPtr(Ty, C, IdxList, true)"
  },
  {
    "label": "getGetElementPtr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getGetElementPtr(Ty, C, Idx, true)"
  },
  {
    "label": "getGetElementPtr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getGetElementPtr(Ty, C, IdxList, true)"
  },
  {
    "label": "getSubclassDataFromValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getSubclassDataFromValue()"
  },
  {
    "label": "destroyConstantImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroyConstantImpl()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "new(s, 0)"
  }
]