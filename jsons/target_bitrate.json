[
  {
    "label": "TargetBitrate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetBitrate"
  },
  {
    "label": "BitrateItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BitrateItem"
  },
  {
    "label": "BitrateItem()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_TARGET_BITRATE_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_TARGET_BITRATE_H_ # include<stddef . h> # include<stdint . h> # include<vector> namespace webrtc { namespace rtcp { class TargetBitrate { public : uint8_t kBlockType = 4 2 ; const size_t kBitrateItemSizeBytes ; struct BitrateItem {)",
    "insertText": "BitrateItem()"
  },
  {
    "label": "BitrateItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BitrateItem(uint8_t spatial_layer, uint8_t temporal_layer, uint32_t target_bitrate_kbps)"
  },
  {
    "label": "TargetBitrate()",
    "kind": "Method",
    "detail": "Function (uint8_t spatial_layer ; uint8_t temporal_layer ; uint32_t target_bitrate_kbps ; } ;)",
    "insertText": "TargetBitrate()"
  },
  {
    "label": "TargetBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TargetBitrate(const TargetBitrate&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TargetBitrate&)",
    "insertText": "operator(const TargetBitrate&)"
  },
  {
    "label": "AddTargetBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTargetBitrate(uint8_t spatial_layer, uint8_t temporal_layer, uint32_t target_bitrate_kbps)"
  },
  {
    "label": "GetTargetBitrates()",
    "kind": "Method",
    "detail": "Function (const std::vector<BitrateItem>&)",
    "insertText": "GetTargetBitrates()"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Parse(const uint8_t* block, uint16_t block_length)"
  },
  {
    "label": "BlockLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "BlockLength()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Create(uint8_t* buffer)"
  }
]