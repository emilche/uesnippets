[
  {
    "label": "FStaticLightingTextureMapping_InstancedStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingTextureMapping_InstancedStaticMesh"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FClusterNode_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterNode_DEPRECATED"
  },
  {
    "label": "FClusterNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterNode"
  },
  {
    "label": "UHierarchicalInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHierarchicalInstancedStaticMeshComponent"
  },
  {
    "label": "ALightWeightInstanceStaticMeshManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALightWeightInstanceStaticMeshManager"
  },
  {
    "label": "FClusterTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterTree"
  },
  {
    "label": "FClusterBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClusterBuilder"
  },
  {
    "label": "FRunPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRunPair"
  },
  {
    "label": "FSortPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortPair"
  },
  {
    "label": "FInstancedStaticMeshComponentInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshComponentInstanceData"
  },
  {
    "label": "PrintLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrintLevel(int32 NodeIndex, int32 Level, int32 CurrentLevel, int32 Parent)"
  },
  {
    "label": "FClusterBuilder()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FClusterBuilder(TArray<FMatrix> InTransforms, TArray<float> InCustomDataFloats, int32 InNumCustomDataFloats, const FBox& InInstBox, int32 InMaxInstancesPerLeaf, float InDensityScaling, int32 InInstancingRandomSeed, bool InGenerateInstanceScalingRange)"
  },
  {
    "label": "BuildTreeAndBufferAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTreeAndBufferAsync(ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "BuildTreeAndBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTreeAndBuffer()"
  },
  {
    "label": "BuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTree()"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Split(int32 InNum)"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Split(int32 Start, int32 End)"
  },
  {
    "label": "BuildInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInstanceBuffer()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "ApplyBuildTreeAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBuildTreeAsync(ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent, TSharedRef<FClusterBuilder, ESPMode::ThreadSafe> Builder, double StartTime)"
  },
  {
    "label": "BuildTreeIfOutdated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildTreeIfOutdated(bool Async, bool ForceUpdate)"
  },
  {
    "label": "DesiredInstancesPerLeaf()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DesiredInstancesPerLeaf()"
  },
  {
    "label": "UpdateDensityScaling()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDensityScaling()"
  },
  {
    "label": "BuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTree()"
  },
  {
    "label": "BuildTreeAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTreeAsync()"
  },
  {
    "label": "ApplyBuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBuildTree(FClusterBuilder& Builder, const bool bWasAsyncBuild)"
  },
  {
    "label": "ApplyEmpty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyEmpty()"
  },
  {
    "label": "SetPerInstanceLightMapAndEditorData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerInstanceLightMapAndEditorData(FStaticMeshInstanceData& PerInstanceData, const TArray<TRefCountPtr<HHitProxy>>& HitProxies)"
  },
  {
    "label": "InitializeInstancingRandomSeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeInstancingRandomSeed()"
  },
  {
    "label": "RemoveInstancesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstancesInternal(TConstArrayView<int32> InstanceIndices)"
  },
  {
    "label": "GetVertsForLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVertsForLOD(int32 LODIndex)"
  },
  {
    "label": "ActualInstancesPerLeaf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ActualInstancesPerLeaf()"
  },
  {
    "label": "PostBuildStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostBuildStats()"
  },
  {
    "label": "GetClusterTreeBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetClusterTreeBounds(TArray<FClusterNode> const& InClusterTree, const FVector& InOffset)"
  },
  {
    "label": "FlushAccumulatedNavigationUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAccumulatedNavigationUpdates()"
  },
  {
    "label": "BatchUpdateInstancesTransformsInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransformsInternal(int32 StartInstanceIndex, TArrayView<const FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport)"
  }
]