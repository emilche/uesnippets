[
  {
    "label": "FStaticLightingTextureMapping_InstancedStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticLightingTextureMapping_InstancedStaticMesh"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FClusterNode_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterNode_DEPRECATED"
  },
  {
    "label": "FClusterNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterNode"
  },
  {
    "label": "UHierarchicalInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHierarchicalInstancedStaticMeshComponent"
  },
  {
    "label": "ALightWeightInstanceStaticMeshManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALightWeightInstanceStaticMeshManager"
  },
  {
    "label": "FClusterTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterTree"
  },
  {
    "label": "FClusterBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClusterBuilder"
  },
  {
    "label": "FRunPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRunPair"
  },
  {
    "label": "FSortPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSortPair"
  },
  {
    "label": "FInstancedStaticMeshComponentInstanceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstancedStaticMeshComponentInstanceData"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Stats / Stats . h \" # include \" UObject / ObjectMacros . h \" # include \" Async / AsyncWork . h \" # include \" Components / InstancedStaticMeshComponent . h \" # include \" StaticMeshResources . h \" # include \" HierarchicalInstancedStaticMeshComponent . generated . h \" class FStaticLightingTextureMapping_InstancedStaticMesh ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Grass,Foliage,HISM } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FClusterNode_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FClusterNode_DEPRECATED() : BoundMin(MAX_flt, MAX_flt, MAX_flt) , FirstChild(-1) , BoundMax(MIN_flt, MIN_flt, MIN_flt) , LastChild(-1) , FirstInstance(-1) , LastInstance(-1)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FClusterNode_DEPRECATED& NodeData)"
  },
  {
    "label": "FClusterNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FClusterNode() : BoundMin(MAX_flt, MAX_flt, MAX_flt) , FirstChild(-1) , BoundMax(MIN_flt, MIN_flt, MIN_flt) , LastChild(-1) , FirstInstance(-1) , LastInstance(-1) , MinInstanceScale(MAX_flt) , MaxInstanceScale(-MAX_flt)"
  },
  {
    "label": "FClusterNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FClusterNode(const FClusterNode_DEPRECATED& OldNode) : BoundMin(OldNode.BoundMin) , FirstChild(OldNode.FirstChild) , BoundMax(OldNode.BoundMax) , LastChild(OldNode.LastChild) , FirstInstance(OldNode.FirstChild) , LastInstance(OldNode.LastInstance) , MinInstanceScale(MAX_flt) , MaxInstanceScale(-MAX_flt)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FClusterNode& NodeData)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Ar<<NodeData . BoundMin ; Ar<<NodeData . FirstChild ; Ar<<NodeData . BoundMax ; Ar<<NodeData . LastChild ; Ar<<NodeData . FirstInstance ; Ar<<NodeData . LastInstance ; Ar<<NodeData . MinInstanceScale ; Ar<<NodeData . MaxInstanceScale ; return Ar ; } } ;)",
    "insertText": "UCLASS(ClassGroup=Rendering, meta=(BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "UHierarchicalInstancedStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UHierarchicalInstancedStaticMeshComponent()"
  },
  {
    "label": "PrintLevel()",
    "kind": "Method",
    "detail": "Function (bool bIsAsyncBuilding : 1 ; bool bIsOutOfDate : 1 ; bool bConcurrentChanges : 1 ; bool bAutoRebuildTreeOnInstanceChanges : 1 ; # if WITH_EDITOR bool bCanEnableDensityScaling : 1 ; # endif public : struct FClusterTree { TArray<FClusterNode> Nodes ; TArray<int32> SortedInstances ; TArray<int32> InstanceReorderTable ; int32 OutOcclusionLayerNum = 0 ; bool)",
    "insertText": "PrintLevel(int32 NodeIndex, int32 Level, int32 CurrentLevel, int32 Parent)"
  },
  {
    "label": "FClusterBuilder()",
    "kind": "Method",
    "detail": "Function (} ; class FClusterBuilder { public :)",
    "insertText": "FClusterBuilder(TArray<FMatrix> InTransforms, TArray<float> InCustomDataFloats, int32 InNumCustomDataFloats, const FBox& InInstBox, int32 InMaxInstancesPerLeaf, float InDensityScaling, int32 InInstancingRandomSeed, bool InGenerateInstanceScalingRange)"
  },
  {
    "label": "BuildTreeAndBufferAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTreeAndBufferAsync(ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "BuildTreeAndBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTreeAndBuffer()"
  },
  {
    "label": "BuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTree()"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Split(int32 InNum)"
  },
  {
    "label": "Split()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Split(int32 Start, int32 End)"
  },
  {
    "label": "BuildInstanceBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildInstanceBuffer()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "FRunPair()",
    "kind": "Method",
    "detail": "Function (public : TUniquePtr<FClusterTree> Result ; TUniquePtr<FStaticMeshInstanceData> BuiltInstanceData ; protected : int32 OriginalNum ; int32 Num ; FBox InstBox ; int32 BranchingFactor ; int32 InternalNodeBranchingFactor ; int32 OcclusionLayerTarget ; int32 MaxInstancesPerLeaf ; int32 NumRoots ; int32 InstancingRandomSeed ; float DensityScaling ; bool GenerateInstanceScalingRange ; TArray<int32> SortIndex ; TArray<FVector> SortPoints ; TArray<FMatrix> Transforms ; TArray<float> CustomDataFloats ; int32 NumCustomDataFloats ; struct FRunPair { int32 Start ; int32 Num ;)",
    "insertText": "FRunPair(int32 InStart, int32 InNum) : Start(InStart) , Num(InNum)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FRunPair& Other)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditImport()"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (FPrimitiveSceneProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "CalcBounds()",
    "kind": "Method",
    "detail": "Function (FBoxSphereBounds)",
    "insertText": "CalcBounds(const FTransform& BoundTransform)"
  },
  {
    "label": "PostStaticMeshCompilation()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostStaticMeshCompilation()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeChainProperty(FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "AddInstance()",
    "kind": "Method",
    "detail": "Function (# endif int32)",
    "insertText": "AddInstance(const FTransform& InstanceTransform, bool bWorldSpace = false)"
  },
  {
    "label": "AddInstances()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "AddInstances(const TArray<FTransform>& InstanceTransforms, bool bShouldReturnIndices, bool bWorldSpace = false, bool bUpdateNavigation = true)"
  },
  {
    "label": "RemoveInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInstance(int32 InstanceIndex)"
  },
  {
    "label": "RemoveInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInstances(const TArray<int32>& InstancesToRemove)"
  },
  {
    "label": "RemoveInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveInstances(const TArray<int32>& InstancesToRemove, bool bInstanceArrayAlreadySortedInReverseOrder)"
  },
  {
    "label": "UpdateInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateInstanceTransform(int32 InstanceIndex, const FTransform& NewInstanceTransform, bool bWorldSpace, bool bMarkRenderStateDirty = false, bool bTeleport = false)"
  },
  {
    "label": "SetCustomDataValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCustomDataValue(int32 InstanceIndex, int32 CustomDataIndex, float CustomDataValue, bool bMarkRenderStateDirty = false)"
  },
  {
    "label": "SetCustomData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCustomData(int32 InstanceIndex, TArrayView<const float> InCustomData, bool bMarkRenderStateDirty = false)"
  },
  {
    "label": "BatchUpdateInstancesTransforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransforms(int32 StartInstanceIndex, const TArray<FTransform>& NewInstancesTransforms, bool bWorldSpace=false, bool bMarkRenderStateDirty=false, bool bTeleport=false)"
  },
  {
    "label": "BatchUpdateInstancesTransforms()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransforms(int32 StartInstanceIndex, TArrayView<const FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport)"
  },
  {
    "label": "BatchUpdateInstancesTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesTransform(int32 StartInstanceIndex, int32 NumInstances, const FTransform& NewInstancesTransform, bool bWorldSpace=false, bool bMarkRenderStateDirty=false, bool bTeleport=false)"
  },
  {
    "label": "BatchUpdateInstancesData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BatchUpdateInstancesData(int32 StartInstanceIndex, int32 NumInstances, FInstancedStaticMeshInstanceData* StartInstanceData, bool bMarkRenderStateDirty = false, bool bTeleport = false)"
  },
  {
    "label": "ClearInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearInstances()"
  },
  {
    "label": "GetInstancesOverlappingSphere()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "GetInstancesOverlappingSphere(const FVector& Center, float Radius, bool bSphereInWorldSpace = true)"
  },
  {
    "label": "GetInstancesOverlappingBox()",
    "kind": "Method",
    "detail": "Function (TArray<int32>)",
    "insertText": "GetInstancesOverlappingBox(const FBox& Box, bool bBoxInWorldSpace = true)"
  },
  {
    "label": "PreAllocateInstancesMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreAllocateInstancesMemory(int32 AddedInstanceCount)"
  },
  {
    "label": "SupportsRemoveSwap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsRemoveSwap()"
  },
  {
    "label": "GetOverlappingBoxCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetOverlappingBoxCount(const FBox& Box)"
  },
  {
    "label": "GetOverlappingBoxTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOverlappingBoxTransforms(const FBox& Box, TArray<FTransform>& OutTransforms)"
  },
  {
    "label": "BuildTreeIfOutdated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildTreeIfOutdated(bool Async, bool ForceUpdate)"
  },
  {
    "label": "IsAsyncBuilding()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAsyncBuilding()"
  },
  {
    "label": "GetAverageScale()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAverageScale()"
  },
  {
    "label": "DesiredInstancesPerLeaf()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DesiredInstancesPerLeaf()"
  },
  {
    "label": "ApplyComponentInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyComponentInstanceData(struct FInstancedStaticMeshComponentInstanceData* InstancedMeshData)"
  },
  {
    "label": "GetNumRenderInstances()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumRenderInstances()"
  },
  {
    "label": "UpdateDensityScaling()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateDensityScaling()"
  },
  {
    "label": "PropagateLightingScenarioChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateLightingScenarioChange()"
  },
  {
    "label": "GetViewRelevanceType()",
    "kind": "Method",
    "detail": "Function (EHISMViewRelevanceType)",
    "insertText": "GetViewRelevanceType()"
  },
  {
    "label": "BuildTreeAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildTreeAsync()"
  },
  {
    "label": "ApplyBuildTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBuildTree(FClusterBuilder& Builder, const bool bWasAsyncBuild)"
  },
  {
    "label": "ApplyEmpty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyEmpty()"
  },
  {
    "label": "SetPerInstanceLightMapAndEditorData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerInstanceLightMapAndEditorData(FStaticMeshInstanceData& PerInstanceData, const TArray<TRefCountPtr<HHitProxy>>& HitProxies)"
  },
  {
    "label": "CalcTranslatedInstanceSpaceOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "CalcTranslatedInstanceSpaceOrigin()"
  },
  {
    "label": "GetInstanceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstanceTransforms(TArray<FMatrix>& InstanceTransforms, FVector const& Offset)"
  },
  {
    "label": "InitializeInstancingRandomSeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeInstancingRandomSeed()"
  },
  {
    "label": "RemoveInstancesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstancesInternal(TConstArrayView<int32> InstanceIndices)"
  },
  {
    "label": "GetVertsForLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVertsForLOD(int32 LODIndex)"
  },
  {
    "label": "ActualInstancesPerLeaf()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ActualInstancesPerLeaf()"
  },
  {
    "label": "PostBuildStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostBuildStats()"
  },
  {
    "label": "OnPostLoadPerInstanceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostLoadPerInstanceData()"
  },
  {
    "label": "CreateStaticMeshSceneProxy()",
    "kind": "Method",
    "detail": "Function (FPrimitiveSceneProxy*)",
    "insertText": "CreateStaticMeshSceneProxy(Nanite::FMaterialAudit& NaniteMaterials, bool bCreateNanite)"
  },
  {
    "label": "GetTranslatedInstanceSpaceOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetTranslatedInstanceSpaceOrigin()"
  },
  {
    "label": "BatchUpdateInstancesTransformsInternal()",
    "kind": "Method",
    "detail": "Function (FGraphEventArray BuildTreeAsyncTasks ; EHISMViewRelevanceType ViewRelevanceType = EHISMViewRelevanceType::HISM ; private : bool)",
    "insertText": "BatchUpdateInstancesTransformsInternal(int32 StartInstanceIndex, TArrayView<const FTransform> NewInstancesTransforms, bool bWorldSpace, bool bMarkRenderStateDirty, bool bTeleport)"
  }
]