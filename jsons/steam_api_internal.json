[
  {
    "label": "CCallbackBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CCallbackBase"
  },
  {
    "label": "CCallbackInternal_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CCallbackInternal_"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "P",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "P"
  },
  {
    "label": "CallbackMsg_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CallbackMsg_t"
  },
  {
    "label": "callbackname",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "callbackname"
  },
  {
    "label": "ISteamClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamClient"
  },
  {
    "label": "ISteamUser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamUser"
  },
  {
    "label": "ISteamGameServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamGameServer"
  },
  {
    "label": "ISteamFriends",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamFriends"
  },
  {
    "label": "ISteamUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamUtils"
  },
  {
    "label": "ISteamMatchmaking",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamMatchmaking"
  },
  {
    "label": "ISteamContentServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamContentServer"
  },
  {
    "label": "ISteamMatchmakingServers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamMatchmakingServers"
  },
  {
    "label": "ISteamUserStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamUserStats"
  },
  {
    "label": "ISteamApps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamApps"
  },
  {
    "label": "ISteamNetworking",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamNetworking"
  },
  {
    "label": "ISteamRemoteStorage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamRemoteStorage"
  },
  {
    "label": "ISteamScreenshots",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamScreenshots"
  },
  {
    "label": "ISteamMusic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamMusic"
  },
  {
    "label": "ISteamMusicRemote",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamMusicRemote"
  },
  {
    "label": "ISteamGameServerStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamGameServerStats"
  },
  {
    "label": "ISteamPS3OverlayRender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamPS3OverlayRender"
  },
  {
    "label": "ISteamHTTP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamHTTP"
  },
  {
    "label": "ISteamController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamController"
  },
  {
    "label": "ISteamUGC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamUGC"
  },
  {
    "label": "ISteamAppList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamAppList"
  },
  {
    "label": "ISteamHTMLSurface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamHTMLSurface"
  },
  {
    "label": "ISteamInventory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamInventory"
  },
  {
    "label": "ISteamVideo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamVideo"
  },
  {
    "label": "ISteamParentalSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamParentalSettings"
  },
  {
    "label": "ISteamGameSearch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamGameSearch"
  },
  {
    "label": "ISteamInput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamInput"
  },
  {
    "label": "ISteamParties",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamParties"
  },
  {
    "label": "ISteamRemotePlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISteamRemotePlay"
  },
  {
    "label": "SteamNetworkingIdentity",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SteamNetworkingIdentity"
  },
  {
    "label": "CSteamAPIContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSteamAPIContext"
  },
  {
    "label": "CSteamGameServerAPIContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSteamGameServerAPIContext"
  },
  {
    "label": "SteamAPI_GetHSteamPipe()",
    "kind": "Method",
    "detail": "Function (# ifdef STEAM_CALLBACK_BEGIN # error \" This file should only be included from steam_api_common . h \" # endif # include<string . h> HSteamPipe S_CALLTYPE)",
    "insertText": "SteamAPI_GetHSteamPipe()"
  },
  {
    "label": "SteamAPI_GetHSteamUser()",
    "kind": "Method",
    "detail": "Function (HSteamUser S_CALLTYPE)",
    "insertText": "SteamAPI_GetHSteamUser()"
  },
  {
    "label": "SteamGameServer_GetHSteamPipe()",
    "kind": "Method",
    "detail": "Function (HSteamPipe S_CALLTYPE)",
    "insertText": "SteamGameServer_GetHSteamPipe()"
  },
  {
    "label": "SteamGameServer_GetHSteamUser()",
    "kind": "Method",
    "detail": "Function (HSteamUser S_CALLTYPE)",
    "insertText": "SteamGameServer_GetHSteamUser()"
  },
  {
    "label": "SteamInternal_ContextInit()",
    "kind": "Method",
    "detail": "Function (void* S_CALLTYPE)",
    "insertText": "SteamInternal_ContextInit(void *pContextInitData)"
  },
  {
    "label": "SteamInternal_CreateInterface()",
    "kind": "Method",
    "detail": "Function (void* S_CALLTYPE)",
    "insertText": "SteamInternal_CreateInterface(const char *ver)"
  },
  {
    "label": "SteamInternal_FindOrCreateUserInterface()",
    "kind": "Method",
    "detail": "Function (void* S_CALLTYPE)",
    "insertText": "SteamInternal_FindOrCreateUserInterface(HSteamUser hSteamUser, const char *pszVersion)"
  },
  {
    "label": "SteamInternal_FindOrCreateGameServerInterface()",
    "kind": "Method",
    "detail": "Function (void* S_CALLTYPE)",
    "insertText": "SteamInternal_FindOrCreateGameServerInterface(HSteamUser hSteamUser, const char *pszVersion)"
  },
  {
    "label": "STEAM_DEFINE_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "STEAM_DEFINE_INTERFACE_ACCESSOR(type, name, expr, kind, version ) \\ inline void S_CALLTYPE SteamInternal_Init_ ## name( type *p)"
  },
  {
    "label": "p()",
    "kind": "Method",
    "detail": "Function (*)",
    "insertText": "p(type)( expr)"
  },
  {
    "label": "STEAM_CLANG_ATTR()",
    "kind": "Method",
    "detail": "Function (} \\)",
    "insertText": "STEAM_CLANG_ATTR(\"interface_accessor_kind:\" kind \";interface_accessor_version:\" version \";\" ) \\ inline type name()"
  },
  {
    "label": "s_CallbackCounterAndContext()",
    "kind": "Method",
    "detail": "Function (\\ void*)",
    "insertText": "s_CallbackCounterAndContext(void*)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "return(type*)SteamInternal_ContextInit( s_CallbackCounterAndContext)"
  },
  {
    "label": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "STEAM_DEFINE_USER_INTERFACE_ACCESSOR(type, name, version ) \\ STEAM_DEFINE_INTERFACE_ACCESSOR( type, name, SteamInternal_FindOrCreateUserInterface( SteamAPI_GetHSteamUser(), version ), \"user\", version ) #define STEAM_DEFINE_GAMESERVER_INTERFACE_ACCESSOR( type, name, version ) \\ STEAM_DEFINE_INTERFACE_ACCESSOR( type, name, SteamInternal_FindOrCreateGameServerInterface( SteamGameServer_GetHSteamUser(), version ), \"gameserver\", version ) S_API void S_CALLTYPE SteamAPI_RegisterCallback( class CCallbackBase *pCallback, int iCallback)"
  },
  {
    "label": "SteamAPI_UnregisterCallback()",
    "kind": "Method",
    "detail": "Function (void S_CALLTYPE)",
    "insertText": "SteamAPI_UnregisterCallback(class CCallbackBase *pCallback)"
  },
  {
    "label": "SteamAPI_RegisterCallResult()",
    "kind": "Method",
    "detail": "Function (void S_CALLTYPE)",
    "insertText": "SteamAPI_RegisterCallResult(class CCallbackBase *pCallback, SteamAPICall_t hAPICall)"
  },
  {
    "label": "SteamAPI_UnregisterCallResult()",
    "kind": "Method",
    "detail": "Function (void S_CALLTYPE)",
    "insertText": "SteamAPI_UnregisterCallResult(class CCallbackBase *pCallback, SteamAPICall_t hAPICall)"
  },
  {
    "label": "_STEAM_CALLBACK_AUTO_HOOK()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "_STEAM_CALLBACK_AUTO_HOOK(thisclass, func, param ) #define _STEAM_CALLBACK_HELPER( _1, _2, SELECTED, ... ) _STEAM_CALLBACK_##SELECTED #define _STEAM_CALLBACK_SELECT( X, Y ) _STEAM_CALLBACK_HELPER X Y #define _STEAM_CALLBACK_3( extra_code, thisclass, func, param ) \\ struct CCallbackInternal_ ## func : private CCallbackImpl< sizeof( param)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (\\ CCallbackInternal_ # #)",
    "insertText": "func()"
  },
  {
    "label": "SteamAPI_RegisterCallback()",
    "kind": "Method",
    "detail": "Function (extra_code)",
    "insertText": "SteamAPI_RegisterCallback(this, param::k_iCallback)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (} \\ CCallbackInternal_ # #)",
    "insertText": "func(const CCallbackInternal_ ## func &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} \\ CCallbackInternal_ # # func&)",
    "insertText": "operator(const CCallbackInternal_ ## func &)"
  },
  {
    "label": "_STEAM_CALLBACK_AUTO_HOOK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_STEAM_CALLBACK_AUTO_HOOK(thisclass, func, param ) \\ thisclass *pOuter = reinterpret_cast<thisclass*>( reinterpret_cast<char*>(this) - offsetof( thisclass, m_steamcallback_ ## func ))"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (\\ pOuter ->)",
    "insertText": "func(reinterpret_cast<param*>( pvParam ))"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } m_steamcallback_ # # func ; void)",
    "insertText": "func(param *pParam ) #define _STEAM_CALLBACK_4( _, thisclass, func, param, var)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "func(param *pParam ) #define _STEAM_CALLBACK_GS( _, thisclass, func, param, var)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "func(param *pParam ) #ifndef API_GEN template< class T, class P > inline CCallResult<T, P>::CCallResult()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (m_hAPICall = k_uAPICallInvalid ; m_pObj = nullptr ; m_Func = nullptr ; m_iCallback = P::k_iCallback ; } template<class T,class P> void CCallResult<T,P)",
    "insertText": "Set(SteamAPICall_t hAPICall, T *p, func_t func)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (m_hAPICall = hAPICall ; m_pObj = p ; m_Func = func ;)",
    "insertText": "if(hAPICall ) SteamAPI_RegisterCallResult( this, hAPICall)"
  },
  {
    "label": "IsActive()",
    "kind": "Method",
    "detail": "Function (} template<class T,class P> bool CCallResult<T,P)",
    "insertText": "IsActive()"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (} template<class T,class P> void CCallResult<T,P)",
    "insertText": "Cancel()"
  },
  {
    "label": "SteamAPI_UnregisterCallResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SteamAPI_UnregisterCallResult(this, m_hAPICall)"
  },
  {
    "label": "CCallResult()",
    "kind": "Method",
    "detail": "Function (m_hAPICall = k_uAPICallInvalid ; } } template<class T,class P> CCallResult<T,P>::~)",
    "insertText": "CCallResult()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} template<class T,class P> void CCallResult<T,P)",
    "insertText": "Run(void *pvParam)"
  },
  {
    "label": "k_uAPICallInvalid()",
    "kind": "Method",
    "detail": "Function (m_hAPICall =)",
    "insertText": "k_uAPICallInvalid(m_pObj->*m_Func)((P *)pvParam, false)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} template<class T,class P> void CCallResult<T,P)",
    "insertText": "Run(void *pvParam, bool bIOFailure, SteamAPICall_t hSteamAPICall)"
  },
  {
    "label": "k_uAPICallInvalid()",
    "kind": "Method",
    "detail": "Function (m_hAPICall =)",
    "insertText": "k_uAPICallInvalid(m_pObj->*m_Func)((P *)pvParam, bIOFailure)"
  },
  {
    "label": "CCallback()",
    "kind": "Method",
    "detail": "Function (} } template<class T,class P,bool bGameserver> CCallback<T,P,bGameserver)",
    "insertText": "CCallback(T *pObj, func_t func ) : m_pObj( nullptr ), m_Func( nullptr)"
  },
  {
    "label": "SetGameserverFlag()",
    "kind": "Method",
    "detail": "Function (this ->)",
    "insertText": "SetGameserverFlag()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Register(pObj, func)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (} template<class T,class P,bool bGameserver> void CCallback<T,P,bGameserver)",
    "insertText": "Register(T *pObj, func_t func)"
  },
  {
    "label": "SteamAPI_RegisterCallback()",
    "kind": "Method",
    "detail": "Function (m_pObj = pObj ; m_Func = func ;)",
    "insertText": "SteamAPI_RegisterCallback(this, P::k_iCallback)"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (} template<class T,class P,bool bGameserver> void CCallback<T,P,bGameserver)",
    "insertText": "Unregister()"
  },
  {
    "label": "SteamAPI_UnregisterCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SteamAPI_UnregisterCallback(this)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} # endif # if)",
    "insertText": "defined(VALVE_CALLBACK_PACK_SMALL ) #pragma pack( push, 4 ) #elif defined( VALVE_CALLBACK_PACK_LARGE ) #pragma pack( push, 8)"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (HSteamUser m_hSteamUser ; int m_iCallback ; uint8* m_pubParam ; int m_cubParam ; } ; # pragma)",
    "insertText": "pack(pop ) #ifdef STEAM_CALLBACK_INSPECTION_ENABLED #include \"../../clientdll/steam_api_callback_inspection.h\" #else #define STEAM_CALLBACK_BEGIN( callbackname, callbackid)"
  },
  {
    "label": "STEAM_CALLBACK_MEMBER()",
    "kind": "Method",
    "detail": "Function (enum { k_iCallback = callbackid } ; # define)",
    "insertText": "STEAM_CALLBACK_MEMBER(varidx, vartype, varname)"
  },
  {
    "label": "STEAM_CALLBACK_MEMBER_ARRAY()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "STEAM_CALLBACK_MEMBER_ARRAY(varidx, vartype, varname, varcount)"
  },
  {
    "label": "STEAM_CALLBACK_END()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "STEAM_CALLBACK_END(nArgs)"
  },
  {
    "label": "STEAM_CLANG_ATTR()",
    "kind": "Method",
    "detail": "Function (# endif class ISteamClient ; class ISteamUser ; class ISteamGameServer ; class ISteamFriends ; class ISteamUtils ; class ISteamMatchmaking ; class ISteamContentServer ; class ISteamMatchmakingServers ; class ISteamUserStats ; class ISteamApps ; class ISteamNetworking ; class ISteamRemoteStorage ; class ISteamScreenshots ; class ISteamMusic ; class ISteamMusicRemote ; class ISteamGameServerStats ; class ISteamPS3OverlayRender ; class ISteamHTTP ; class ISteamController ; class ISteamUGC ; class ISteamAppList ; class ISteamHTMLSurface ; class ISteamInventory ; class ISteamVideo ; class ISteamParentalSettings ; class ISteamGameSearch ; class ISteamInput ; class ISteamParties ; class ISteamRemotePlay ; struct SteamNetworkingIdentity ; enum { k_iSteamUserCallbacks = 1 0 0 } ; enum { k_iSteamGameServerCallbacks = 2 0 0 } ; enum { k_iSteamFriendsCallbacks = 3 0 0 } ; enum { k_iSteamBillingCallbacks = 4 0 0 } ; enum { k_iSteamMatchmakingCallbacks = 5 0 0 } ; enum { k_iSteamContentServerCallbacks = 6 0 0 } ; enum { k_iSteamUtilsCallbacks = 7 0 0 } ; enum { k_iSteamAppsCallbacks = 1 0 0 0 } ; enum { k_iSteamUserStatsCallbacks = 1 1 0 0 } ; enum { k_iSteamNetworkingCallbacks = 1 2 0 0 } ; enum { k_iSteamNetworkingSocketsCallbacks = 1 2 2 0 } ; enum { k_iSteamNetworkingMessagesCallbacks = 1 2 5 0 } ; enum { k_iSteamNetworkingUtilsCallbacks = 1 2 8 0 } ; enum { k_iSteamRemoteStorageCallbacks = 1 3 0 0 } ; enum { k_iSteamGameServerItemsCallbacks = 1 5 0 0 } ; enum { k_iSteamGameCoordinatorCallbacks = 1 7 0 0 } ; enum { k_iSteamGameServerStatsCallbacks = 1 8 0 0 } ; enum { k_iSteam2AsyncCallbacks = 1 9 0 0 } ; enum { k_iSteamGameStatsCallbacks = 2 0 0 0 } ; enum { k_iSteamHTTPCallbacks = 2 1 0 0 } ; enum { k_iSteamScreenshotsCallbacks = 2 3 0 0 } ; enum { k_iSteamStreamLauncherCallbacks = 2 6 0 0 } ; enum { k_iSteamControllerCallbacks = 2 8 0 0 } ; enum { k_iSteamUGCCallbacks = 3 4 0 0 } ; enum { k_iSteamStreamClientCallbacks = 3 5 0 0 } ; enum { k_iSteamAppListCallbacks = 3 9 0 0 } ; enum { k_iSteamMusicCallbacks = 4 0 0 0 } ; enum { k_iSteamMusicRemoteCallbacks = 4 1 0 0 } ; enum { k_iSteamGameNotificationCallbacks = 4 4 0 0 } ; enum { k_iSteamHTMLSurfaceCallbacks = 4 5 0 0 } ; enum { k_iSteamVideoCallbacks = 4 6 0 0 } ; enum { k_iSteamInventoryCallbacks = 4 7 0 0 } ; enum { k_ISteamParentalSettingsCallbacks = 5 0 0 0 } ; enum { k_iSteamGameSearchCallbacks = 5 2 0 0 } ; enum { k_iSteamPartiesCallbacks = 5 3 0 0 } ; enum { k_iSteamSTARCallbacks = 5 5 0 0 } ; enum { k_iSteamRemotePlayCallbacks = 5 7 0 0 } ; enum { k_iSteamChatCallbacks = 5 9 0 0 } ; # ifdef API_GEN # define)",
    "insertText": "STEAM_CLANG_ATTR(ATTR) __attribute__((annotate( ATTR ))) #else # define STEAM_CLANG_ATTR(ATTR) #endif #define STEAM_OUT_STRUCT() STEAM_CLANG_ATTR( \"out_struct: ;\" ) #define STEAM_OUT_STRING() STEAM_CLANG_ATTR( \"out_string: ;\" ) #define STEAM_OUT_ARRAY_CALL(COUNTER,FUNCTION,PARAMS) STEAM_CLANG_ATTR( \"out_array_call:\" #COUNTER \",\" #FUNCTION \",\" #PARAMS \";\" ) #define STEAM_OUT_ARRAY_COUNT(COUNTER, DESC) STEAM_CLANG_ATTR( \"out_array_count:\" #COUNTER \";desc:\" #DESC ) #define STEAM_ARRAY_COUNT(COUNTER) STEAM_CLANG_ATTR( \"array_count:\" #COUNTER \";\" ) #define STEAM_ARRAY_COUNT_D(COUNTER, DESC) STEAM_CLANG_ATTR( \"array_count:\" #COUNTER \";desc:\" #DESC ) #define STEAM_BUFFER_COUNT(COUNTER) STEAM_CLANG_ATTR( \"buffer_count:\" #COUNTER \";\" ) #define STEAM_OUT_BUFFER_COUNT(COUNTER) STEAM_CLANG_ATTR( \"out_buffer_count:\" #COUNTER \";\" ) #define STEAM_OUT_STRING_COUNT(COUNTER) STEAM_CLANG_ATTR( \"out_string_count:\" #COUNTER \";\" ) #define STEAM_DESC(DESC) STEAM_CLANG_ATTR(\"desc:\" #DESC \";\") #define STEAM_CALL_RESULT(RESULT_TYPE) STEAM_CLANG_ATTR(\"callresult:\" #RESULT_TYPE \";\") #define STEAM_CALL_BACK(RESULT_TYPE) STEAM_CLANG_ATTR(\"callback:\" #RESULT_TYPE \";\") #define STEAM_FLAT_NAME(NAME) STEAM_CLANG_ATTR(\"flat_name:\" #NAME \";\")"
  },
  {
    "label": "CSteamAPIContext()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CSteamAPIContext()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "memset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memset(this, 0, sizeof(*this))"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init()"
  },
  {
    "label": "SteamClient()",
    "kind": "Method",
    "detail": "Function (ISteamClient*)",
    "insertText": "SteamClient()"
  }
]