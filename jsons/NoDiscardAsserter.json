[
  {
    "label": "FNoDiscardAsserter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNoDiscardAsserter"
  },
  {
    "label": "ExpectError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectError(FString Error, int32 Count = 1)"
  },
  {
    "label": "ExpectErrorRegex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpectErrorRegex(FString Error, int32 Count = 1)"
  },
  {
    "label": "Fail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fail(FString error)"
  },
  {
    "label": "IsTrue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrue(bool Condition)"
  },
  {
    "label": "IsTrue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrue(bool Condition, const char* FailureMessage)"
  },
  {
    "label": "IsTrue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrue(bool Condition, const TCHAR* FailureMessage)"
  },
  {
    "label": "IsTrue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrue(bool Condition, const FString& FailureMessage)"
  },
  {
    "label": "IsFalse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFalse(bool Condition)"
  },
  {
    "label": "IsFalse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFalse(bool Condition, const char* FailureMessage)"
  },
  {
    "label": "IsFalse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFalse(bool Condition, const TCHAR* FailureMessage)"
  },
  {
    "label": "IsFalse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFalse(bool Condition, const FString& FailureMessage)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNull(const T& Ptr)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNull(const T& Ptr, const char* FailureMessage)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNull(const T& Ptr, const TCHAR* FailureMessage)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNull(const T& Ptr, const FString& FailureMessage)"
  },
  {
    "label": "IsNotNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNotNull(const T& Ptr)"
  },
  {
    "label": "IsNotNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNotNull(const T& Ptr, const char* FailureMessage)"
  },
  {
    "label": "IsNotNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNotNull(const T& Ptr, const TCHAR* FailureMessage)"
  },
  {
    "label": "IsNotNull()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNotNull(const T& Ptr, const FString& FailureMessage)"
  },
  {
    "label": "AreEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqual(const TExpected& Expected, const TActual& Actual)"
  },
  {
    "label": "AreEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqual(const TExpected& Expected, const TActual& Actual, const char* FailureMessage)"
  },
  {
    "label": "AreEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqual(const TExpected& Expected, const TActual& Actual, const TCHAR* FailureMessage)"
  },
  {
    "label": "AreEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqual(const TExpected& Expected, const TActual& Actual, const FString& FailureMessage)"
  },
  {
    "label": "AreEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqualIgnoreCase(const FString& Expected, const FString& Actual)"
  },
  {
    "label": "AreEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqualIgnoreCase(const FString& Expected, const FString& Actual, const char* FailureMessage)"
  },
  {
    "label": "AreEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqualIgnoreCase(const FString& Expected, const FString& Actual, const TCHAR* FailureMessage)"
  },
  {
    "label": "AreEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreEqualIgnoreCase(const FString& Expected, const FString& Actual, const FString& FailureMessage)"
  },
  {
    "label": "AreNotEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqualIgnoreCase(const FString& Expected, const FString& Actual)"
  },
  {
    "label": "AreNotEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqualIgnoreCase(const FString& Expected, const FString& Actual, const char* FailureMessage)"
  },
  {
    "label": "AreNotEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqualIgnoreCase(const FString& Expected, const FString& Actual, const TCHAR* FailureMessage)"
  },
  {
    "label": "AreNotEqualIgnoreCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqualIgnoreCase(const FString& Expected, const FString& Actual, const FString& FailureMessage)"
  },
  {
    "label": "AreNotEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqual(const TExpected& Expected, const TActual& Actual)"
  },
  {
    "label": "AreNotEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqual(const TExpected& Expected, const TActual& Actual, const char* FailureMessage)"
  },
  {
    "label": "AreNotEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqual(const TExpected& Expected, const TActual& Actual, const TCHAR* FailureMessage)"
  },
  {
    "label": "AreNotEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreNotEqual(const TExpected& Expected, const TActual& Actual, const FString& FailureMessage)"
  },
  {
    "label": "IsNear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNear(TExpected Expected, TActual Actual, TEpsilon Epsilon)"
  },
  {
    "label": "IsNear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNear(TExpected Expected, TActual Actual, TEpsilon Epsilon, const char* FailureMessage)"
  },
  {
    "label": "IsNear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNear(TExpected Expected, TActual Actual, TEpsilon Epsilon, const TCHAR* FailureMessage)"
  },
  {
    "label": "IsNear()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNear(TExpected Expected, TActual Actual, TEpsilon Epsilon, const FString& FailureMessage)"
  }
]