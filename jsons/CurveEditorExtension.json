[
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "SCurveEditorPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorPanel"
  },
  {
    "label": "SCurveEditorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorTree"
  },
  {
    "label": "SCurveEditorTreeFilterStatusBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorTreeFilterStatusBar"
  },
  {
    "label": "FTimeSliderArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeSliderArgs"
  },
  {
    "label": "FSequencerEditorViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerEditorViewModel"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "FCurveEditorIntegrationExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditorIntegrationExtension"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MVVM / ViewModels / ViewModel . h \" # include \" MVVM / ViewModelPtr . h \" # include \" MVVM / Extensions / DynamicExtensionContainer . h \" # include \" MVVM / Extensions / ICurveEditorTreeItemExtension . h \" # include \" CurveDataAbstraction . h \" # include \" CurveEditorTypes . h \" # include \" Tree / ICurveEditorTreeItem . h \" # include \" STemporarilyFocusedSpinBox . h \" class ISequencer ; class IPropertyTypeCustomization ; class SCurveEditorPanel ; class SCurveEditorTree ; class SCurveEditorTreeFilterStatusBar ; struct FTimeSliderArgs ; namespace UE { namespace Sequencer { class FSequencerEditorViewModel ; class FCurveEditorExtension : public IDynamicExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID(FCurveEditorExtension) FCurveEditorExtension()"
  },
  {
    "label": "OnCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreated(TSharedRef<FViewModel> InWeakOwner)"
  },
  {
    "label": "CreateCurveEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCurveEditor(const FTimeSliderArgs& TimeSliderArgs)"
  },
  {
    "label": "GetCurveEditor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCurveEditor>)",
    "insertText": "GetCurveEditor()"
  },
  {
    "label": "IsCurveEditorOpen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurveEditorOpen()"
  },
  {
    "label": "CloseCurveEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseCurveEditor()"
  },
  {
    "label": "GetCurveEditorTreeView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SCurveEditorTree>)",
    "insertText": "GetCurveEditorTreeView()"
  },
  {
    "label": "GetDefaultKeyAttributes()",
    "kind": "Method",
    "detail": "Function (public : const FName CurveEditorTabName ; private : FKeyAttributes)",
    "insertText": "GetDefaultKeyAttributes()"
  },
  {
    "label": "SyncSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncSelection()"
  },
  {
    "label": "FilterClassChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterClassChanged()"
  }
]