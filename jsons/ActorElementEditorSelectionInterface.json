[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "ITypedElementTransactedElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedElementTransactedElement"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "FTypedElementIsSelectedOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementIsSelectedOptions"
  },
  {
    "label": "UActorElementEditorSelectionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorElementEditorSelectionInterface"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Actor / ActorElementSelectionInterface . h \" # include \" Elements / Framework / TypedElementListFwd . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" ActorElementEditorSelectionInterface . generated . h \" class AActor ; class ITypedElementTransactedElement ; class UObject ; struct FTypedElementHandle ; struct FTypedElementIsSelectedOptions ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UNREALED_API virtual bool SelectElement(const FTypedElementHandle& InElementHandle, const FTypedElementListPtr& InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "DeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElement(const FTypedElementHandle& InElementHandle, const FTypedElementListPtr& InSelectionSet, const FTypedElementSelectionOptions& InSelectionOptions)"
  },
  {
    "label": "IsElementSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsElementSelected(const FTypedElementHandle& InElementHandle, const FTypedElementListConstPtr& SelectionSetPtr, const FTypedElementIsSelectedOptions& InSelectionOptions)"
  },
  {
    "label": "ShouldPreventTransactions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldPreventTransactions(const FTypedElementHandle& InElementHandle)"
  },
  {
    "label": "CreateTransactedElementImpl()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<ITypedElementTransactedElement>)",
    "insertText": "CreateTransactedElementImpl()"
  },
  {
    "label": "IsActorSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorSelected(const AActor* InActor, FTypedElementListConstRef InSelectionSet, const FTypedElementIsSelectedOptions& InSelectionOptions)"
  }
]