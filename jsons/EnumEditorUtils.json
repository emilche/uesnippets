[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "FEnumEditorUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEnumEditorUtils"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "EEnumEditorChangeInfo",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEnumEditorChangeInfo"
  },
  {
    "label": "FEnumEditorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEnumEditorManager"
  },
  {
    "label": "ListenerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListenerType"
  },
  {
    "label": "in",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "in"
  },
  {
    "label": "can",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "can"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "index",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "index"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "PrepareForChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForChange(UUserDefinedEnum* Enum)"
  },
  {
    "label": "BroadcastChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastChanges(const UUserDefinedEnum* Enum, const TArray<TPair<FName, int64>>& OldNames, bool bResolveData = true)"
  },
  {
    "label": "CopyEnumeratorsWithoutMax()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyEnumeratorsWithoutMax(const UEnum* Enum, TArray<TPair<FName, int64>>& OutEnumNames)"
  },
  {
    "label": "IsNameAvailebleForUserDefinedEnum()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNameAvailebleForUserDefinedEnum(FName Name)"
  },
  {
    "label": "UpdateAfterPathChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAfterPathChanged(UEnum* Enum)"
  },
  {
    "label": "AddNewEnumeratorForUserDefinedEnum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewEnumeratorForUserDefinedEnum(class UUserDefinedEnum* Enum)"
  },
  {
    "label": "RemoveEnumeratorFromUserDefinedEnum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEnumeratorFromUserDefinedEnum(class UUserDefinedEnum* Enum, int32 EnumeratorIndex)"
  },
  {
    "label": "MoveEnumeratorInUserDefinedEnum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveEnumeratorInUserDefinedEnum(class UUserDefinedEnum* Enum, int32 InitialEnumeratorIndex, int32 TargetIndex)"
  },
  {
    "label": "IsEnumeratorBitflagsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnumeratorBitflagsType(class UUserDefinedEnum* Enum)"
  },
  {
    "label": "SetEnumeratorBitflagsTypeState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnumeratorBitflagsTypeState(class UUserDefinedEnum* Enum, bool bBitflagsType)"
  },
  {
    "label": "IsProperNameForUserDefinedEnumerator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProperNameForUserDefinedEnumerator(const UEnum* Enum, FString NewName)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo(UUserDefinedEnum* Enum)"
  },
  {
    "label": "ResolveEnumerator()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "ResolveEnumerator(const UEnum* Enum, FArchive& Ar, int64 EnumeratorValue)"
  },
  {
    "label": "SetEnumeratorDisplayName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEnumeratorDisplayName(UUserDefinedEnum* Enum, int32 EnumeratorIndex, FText NewDisplayName)"
  },
  {
    "label": "IsEnumeratorDisplayNameValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnumeratorDisplayNameValid(const UUserDefinedEnum* Enum, int32 EnumeratorIndex, FText NewDisplayName)"
  },
  {
    "label": "EnsureAllDisplayNamesExist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureAllDisplayNamesExist(class UUserDefinedEnum* Enum)"
  },
  {
    "label": "UpgradeDisplayNamesFromMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpgradeDisplayNamesFromMetaData(class UUserDefinedEnum* Enum)"
  }
]