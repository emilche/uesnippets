[
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FSolverBody",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverBody"
  },
  {
    "label": "FSolverBodyContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverBodyContainer"
  },
  {
    "label": "FPBDCollisionContainerSolverJacobi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionContainerSolverJacobi"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UE_NONCOPYABLE(FPBDCollisionContainerSolverJacobi)"
  },
  {
    "label": "NumSolvers()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "NumSolvers()"
  },
  {
    "label": "AddConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConstraint(FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "UpdatePositionShockPropagation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePositionShockPropagation(const FReal Dt, const int32 It, const int32 NumIts, const int32 BeginIndex, const int32 EndIndex, const FPBDCollisionSolverSettings& SolverSettings)"
  },
  {
    "label": "UpdateVelocityShockPropagation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVelocityShockPropagation(const FReal Dt, const int32 It, const int32 NumIts, const int32 BeginIndex, const int32 EndIndex, const FPBDCollisionSolverSettings& SolverSettings)"
  },
  {
    "label": "SolvePositionImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SolvePositionImpl(const FReal Dt, const int32 It, const int32 NumIts, const int32 BeginIndex, const int32 EndIndex, const FPBDCollisionSolverSettings& SolverSettings)"
  },
  {
    "label": "SolveVelocityImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SolveVelocityImpl(const FReal Dt, const int32 It, const int32 NumIts, const int32 BeginIndex, const int32 EndIndex, const FPBDCollisionSolverSettings& SolverSettings)"
  },
  {
    "label": "UpdateCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCollisions(const FReal InDt, const int32 BeginIndex, const int32 EndIndex)"
  }
]