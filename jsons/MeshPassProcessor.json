[
  {
    "label": "FGPUScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUScene"
  },
  {
    "label": "FInstanceCullingDrawParams",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInstanceCullingDrawParams"
  },
  {
    "label": "FRayTracingLocalShaderBindingWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingLocalShaderBindingWriter"
  },
  {
    "label": "FMeshProcessorShaders",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshProcessorShaders"
  },
  {
    "label": "FSceneTexturesConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTexturesConfig"
  },
  {
    "label": "FVisibleMeshDrawCommandStatsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisibleMeshDrawCommandStatsData"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FMeshPassMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshPassMask"
  },
  {
    "label": "FMinimalBoundShaderStateInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalBoundShaderStateInput"
  },
  {
    "label": "affects",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "affects"
  },
  {
    "label": "FGraphicsMinimalPipelineStateInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphicsMinimalPipelineStateInitializer"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FHashKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHashKey"
  },
  {
    "label": "FGraphicsMinimalPipelineStateId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphicsMinimalPipelineStateId"
  },
  {
    "label": "FRefCountedGraphicsMinimalPipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRefCountedGraphicsMinimalPipelineState"
  },
  {
    "label": "FShaderBindingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderBindingState"
  },
  {
    "label": "FMeshProcessorShaders",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshProcessorShaders"
  },
  {
    "label": "FMeshDrawCommandDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandDebugData"
  },
  {
    "label": "FMeshDrawCommandStatsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandStatsData"
  },
  {
    "label": "FMeshDrawCommandStateCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawCommandStateCache"
  },
  {
    "label": "FMeshDrawShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawShaderBindings"
  },
  {
    "label": "FShaderBindingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderBindingState"
  },
  {
    "label": "FShaderBindingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderBindingState"
  },
  {
    "label": "FShaderBindingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderBindingState"
  },
  {
    "label": "FShaderBindingState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderBindingState"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "entirely",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "entirely"
  },
  {
    "label": "FData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FData"
  },
  {
    "label": "FReadOnlyMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReadOnlyMeshDrawSingleShaderBindings"
  },
  {
    "label": "FReadOnlyMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReadOnlyMeshDrawSingleShaderBindings"
  },
  {
    "label": "FReadOnlyMeshDrawSingleShaderBindings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReadOnlyMeshDrawSingleShaderBindings"
  },
  {
    "label": "FMeshDrawCommandOverrideArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandOverrideArgs"
  },
  {
    "label": "FMeshDrawCommandSceneArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandSceneArgs"
  },
  {
    "label": "FMeshDrawCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawCommand"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FHashKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHashKey"
  },
  {
    "label": "FMeshDrawCommandStateCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawCommandStateCache"
  },
  {
    "label": "FMeshDrawCommandSortKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshDrawCommandSortKey"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPersistentPrimitiveIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPersistentPrimitiveIndex"
  },
  {
    "label": "FMeshDrawCommandPrimitiveIdInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandPrimitiveIdInfo"
  },
  {
    "label": "FMeshDrawCommandCullingPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandCullingPayload"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMeshPassDrawListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshPassDrawListContext"
  },
  {
    "label": "FDynamicMeshDrawCommandStorage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMeshDrawCommandStorage"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FVisibleMeshDrawCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisibleMeshDrawCommand"
  },
  {
    "label": "FCompareFMeshDrawCommands",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompareFMeshDrawCommands"
  },
  {
    "label": "TUseBitwiseSwap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TUseBitwiseSwap"
  },
  {
    "label": "FDynamicPassMeshDrawListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicPassMeshDrawListContext"
  },
  {
    "label": "FCachedMeshDrawCommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedMeshDrawCommandInfo"
  },
  {
    "label": "FCachedPassMeshDrawList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedPassMeshDrawList"
  },
  {
    "label": "FMeshDrawCommandCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawCommandCount"
  },
  {
    "label": "MeshDrawCommandKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MeshDrawCommandKeyFuncs"
  },
  {
    "label": "FCachedPassMeshDrawListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedPassMeshDrawListContext"
  },
  {
    "label": "FMeshPassScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshPassScope"
  },
  {
    "label": "FCachedPassMeshDrawListContextImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedPassMeshDrawListContextImmediate"
  },
  {
    "label": "FCachedPassMeshDrawListContextDeferred",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCachedPassMeshDrawListContextDeferred"
  },
  {
    "label": "TMeshProcessorShaders",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMeshProcessorShaders"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMeshPassProcessorRenderState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshPassProcessorRenderState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FMeshPassProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshPassProcessor"
  },
  {
    "label": "FMeshDrawingPolicyOverrideSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDrawingPolicyOverrideSettings"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPassProcessorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPassProcessorManager"
  },
  {
    "label": "value",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "value"
  },
  {
    "label": "FRegisterPassProcessorCreateFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRegisterPassProcessorCreateFunction"
  },
  {
    "label": "FRegisterPassProcessorCreateFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRegisterPassProcessorCreateFunction"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"DepthPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SecondStageDepthPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"BasePass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"AnisotropyPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SkyPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SingleLayerWaterPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SingleLayerWaterDepthPrepass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"CSMShadowDepth\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"VSMShadowDepth\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"OnePassPointLightShadowDepth\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Distortion\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Velocity\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucentVelocity\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyStandard\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyStandardModulate\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyAfterDOF\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyAfterDOFModulate\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyAfterMotionBlur\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyHoldout\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"TranslucencyAll\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"LightmapDensity\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"DebugViewMode\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"CustomDepth\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"MobileBasePassCSM\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"VirtualTexture\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"LumenCardCapture\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"LumenCardNanite\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"LumenTranslucencyRadianceCacheMark\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"LumenFrontLayerTranslucencyGBuffer\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"DitheredLODFadingOutMaskPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"NaniteMeshPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"MeshDecal_DBuffer\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"MeshDecal_SceneColorAndGBuffer\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"MeshDecal_SceneColorAndGBufferNoNormal\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"MeshDecal_SceneColor\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"MeshDecal_AmbientOcclusion\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"WaterInfoTextureDepthPass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"WaterInfoTexturePass\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"HitProxy\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"HitProxyOpaqueOnly\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"EditorLevelInstance\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"EditorSelection\")"
  },
  {
    "label": "FBoundShaderStateInput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FBoundShaderStateInput(CachedMeshShader, nullptr, CachedPixelShader)"
  },
  {
    "label": "FBoundShaderStateInput()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FBoundShaderStateInput(VertexDeclarationRHI\n\t\t\t\t, CachedVertexShader\n\t\t\t\t, CachedPixelShader\n#if PLATFORM_SUPPORTS_GEOMETRY_SHADERS\n\t\t\t\t, CachedGeometryShader\n#endif\n\t\t\t)"
  },
  {
    "label": "SetupBoundShaderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupBoundShaderState(FRHIVertexDeclaration* VertexDeclaration, const FMeshProcessorShaders& Shaders)"
  },
  {
    "label": "ComputeStatePrecachePSOHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeStatePrecachePSOHash()"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (FRWScopeLock)",
    "insertText": "ReadLock(PersistentIdTableLock, SLT_ReadOnly)"
  },
  {
    "label": "InitializePersistentIds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializePersistentIds()"
  },
  {
    "label": "GetPersistentId()",
    "kind": "Method",
    "detail": "Function (FGraphicsMinimalPipelineStateId)",
    "insertText": "GetPersistentId(const FGraphicsMinimalPipelineStateInitializer& InPipelineState)"
  },
  {
    "label": "RemovePersistentId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePersistentId(FGraphicsMinimalPipelineStateId Id)"
  },
  {
    "label": "GetPipelineStateId()",
    "kind": "Method",
    "detail": "Function (FGraphicsMinimalPipelineStateId)",
    "insertText": "GetPipelineStateId(const FGraphicsMinimalPipelineStateInitializer& InPipelineState, FGraphicsMinimalPipelineStateSet& InOutPassSet, bool& NeedsShaderInitialisation)"
  },
  {
    "label": "ResetLocalPipelineIdTableSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetLocalPipelineIdTableSize()"
  },
  {
    "label": "AddSizeToLocalPipelineIdTableSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSizeToLocalPipelineIdTableSize(SIZE_T Size)"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (FRWScopeLock)",
    "insertText": "ReadLock(PersistentIdTableLock, SLT_ReadOnly)"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (FRWScopeLock)",
    "insertText": "ReadLock(PersistentIdTableLock, SLT_ReadOnly)"
  },
  {
    "label": "FreezeIdTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreezeIdTable(bool bEnable)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (changes)",
    "insertText": "for(int32 FrequencyIndex = 0; FrequencyIndex < UE_ARRAY_COUNT(ShaderBindings)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const FMeshProcessorShaders& Shaders)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const TShaderRef<FShader>& Shader)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize(const FMeshProcessorShaders* ShadersForDebugging)"
  },
  {
    "label": "GetSingleShaderBindings()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetSingleShaderBindings(Frequency, DataOffset)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (overflow)",
    "insertText": "check(Size == InSize)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(const FMeshDrawShaderBindings& Other)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "SetShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBindings(\n\t\tFRHIBatchedShaderParameters& BatchedParameters,\n\t\tconst class FReadOnlyMeshDrawSingleShaderBindings& RESTRICT SingleShaderBindings,\n\t\tFShaderBindingState& RESTRICT ShaderBindingState)"
  },
  {
    "label": "SetShaderBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShaderBindings(\n\t\tFRHIBatchedShaderParameters& BatchedParameters,\n\t\tconst class FReadOnlyMeshDrawSingleShaderBindings& RESTRICT SingleShaderBindings)"
  },
  {
    "label": "SetDrawParametersAndFinalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawParametersAndFinalize(\n\t\tconst FMeshBatch& MeshBatch, \n\t\tint32 BatchElementIndex,\n\t\tFGraphicsMinimalPipelineStateId PipelineId,\n\t\tconst FMeshProcessorShaders* ShadersForDebugging)"
  },
  {
    "label": "SubmitDrawBegin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SubmitDrawBegin(\n\t\tconst FMeshDrawCommand& RESTRICT MeshDrawCommand,\n\t\tconst FGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet,\n\t\tconst FMeshDrawCommandSceneArgs& SceneArgs,\n\t\tuint32 InstanceFactor,\n\t\tFRHICommandList& RHICmdList,\n\t\tFMeshDrawCommandStateCache& RESTRICT StateCache,\n\t\tbool bAllowSkipDrawCommand)"
  },
  {
    "label": "SubmitDrawEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitDrawEnd(const FMeshDrawCommand& MeshDrawCommand, const FMeshDrawCommandSceneArgs& SceneArgs, uint32 InstanceFactor, FRHICommandList& RHICmdList)"
  },
  {
    "label": "SubmitDrawIndirectBegin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SubmitDrawIndirectBegin(\n\t\tconst FMeshDrawCommand& RESTRICT MeshDrawCommand,\n\t\tconst FGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet,\n\t\tconst FMeshDrawCommandSceneArgs& SceneArgs,\n\t\tuint32 InstanceFactor,\n\t\tFRHICommandList& RHICmdList,\n\t\tFMeshDrawCommandStateCache& RESTRICT StateCache,\n\t\tbool bAllowSkipDrawCommand)"
  },
  {
    "label": "SubmitDrawIndirectEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitDrawIndirectEnd(const FMeshDrawCommand& MeshDrawCommand, const FMeshDrawCommandSceneArgs& SceneArgs, uint32 InstanceFactor, FRHICommandList& RHICmdList)"
  },
  {
    "label": "SubmitDraw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SubmitDraw(\n\t\tconst FMeshDrawCommand& RESTRICT MeshDrawCommand,\n\t\tconst FGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet,\n\t\tconst FMeshDrawCommandSceneArgs& SceneArgs,\n\t\tuint32 InstanceFactor,\n\t\tFRHICommandList& CommandList,\n\t\tclass FMeshDrawCommandStateCache& RESTRICT StateCache)"
  },
  {
    "label": "SetDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugData(const FPrimitiveSceneProxy* PrimitiveSceneProxy, const FMaterial* Material, const FMaterialRenderProxy* MaterialRenderProxy, const FMeshProcessorShaders& UntypedShaders, const FVertexFactory* VertexFactory, const FMeshBatch& MeshBatch, int32 PSOCollectorIndex)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sizeof(DebugData)"
  },
  {
    "label": "SetStatsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStatsData(const FPrimitiveSceneProxy* PrimitiveSceneProxy)"
  },
  {
    "label": "BeginMeshPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginMeshPass(EMeshPass::Type MeshPass)"
  },
  {
    "label": "EndMeshPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndMeshPass()"
  },
  {
    "label": "BeginMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginMesh(int32 SceneInfoIndex, int32 MeshIndex)"
  },
  {
    "label": "EndMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndMesh()"
  },
  {
    "label": "GetCommandInfoAndReset()",
    "kind": "Method",
    "detail": "Function (FCachedMeshDrawCommandInfo)",
    "insertText": "GetCommandInfoAndReset()"
  },
  {
    "label": "FinalizeCommandCommon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeCommandCommon(\n\t\tconst FMeshBatch& MeshBatch, \n\t\tint32 BatchElementIndex,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode,\n\t\tFMeshDrawCommandSortKey SortKey,\n\t\tEFVisibleMeshDrawCommandFlags Flags,\n\t\tconst FGraphicsMinimalPipelineStateInitializer& PipelineState,\n\t\tconst FMeshProcessorShaders* ShadersForDebugging,\n\t\tFMeshDrawCommand& MeshDrawCommand)"
  },
  {
    "label": "DeferredFinalizeMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredFinalizeMeshDrawCommands(const TArrayView<FPrimitiveSceneInfo*>& SceneInfos, int32 Start, int32 End)"
  },
  {
    "label": "FMeshPassProcessor()",
    "kind": "Method",
    "detail": "Function (RENDERER_API)",
    "insertText": "FMeshPassProcessor(EMeshPass::Type InMeshPassType, const FScene* InScene, ERHIFeatureLevel::Type InFeatureLevel, const FSceneView* InViewIfDynamicMeshCommand, FMeshPassDrawListContext* InDrawListContext)"
  },
  {
    "label": "FMeshPassProcessor()",
    "kind": "Method",
    "detail": "Function (RENDERER_API)",
    "insertText": "FMeshPassProcessor(const TCHAR* InMeshPassName, const FScene* InScene, ERHIFeatureLevel::Type InFeatureLevel, const FSceneView* InViewIfDynamicMeshCommand, FMeshPassDrawListContext* InDrawListContext)"
  },
  {
    "label": "ComputeMeshOverrideSettings()",
    "kind": "Method",
    "detail": "Function (FMeshDrawingPolicyOverrideSettings)",
    "insertText": "ComputeMeshOverrideSettings(const FPSOPrecacheParams& PrecachePSOParams)"
  },
  {
    "label": "ComputeMeshOverrideSettings()",
    "kind": "Method",
    "detail": "Function (FMeshDrawingPolicyOverrideSettings)",
    "insertText": "ComputeMeshOverrideSettings(const FMeshBatch& Mesh)"
  },
  {
    "label": "ComputeMeshFillMode()",
    "kind": "Method",
    "detail": "Function (ERasterizerFillMode)",
    "insertText": "ComputeMeshFillMode(const FMaterial& InMaterialResource, const FMeshDrawingPolicyOverrideSettings& InOverrideSettings)"
  },
  {
    "label": "ComputeMeshCullMode()",
    "kind": "Method",
    "detail": "Function (ERasterizerCullMode)",
    "insertText": "ComputeMeshCullMode(const FMaterial& InMaterialResource, const FMeshDrawingPolicyOverrideSettings& InOverrideSettings)"
  },
  {
    "label": "BuildMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMeshDrawCommands(\n\t\tconst FMeshBatch& RESTRICT MeshBatch,\n\t\tuint64 BatchElementMask,\n\t\tconst FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy,\n\t\tconst FMaterialRenderProxy& RESTRICT MaterialRenderProxy,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tconst FMeshPassProcessorRenderState& RESTRICT DrawRenderState,\n\t\tconst PassShadersType& PassShaders,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode,\n\t\tFMeshDrawCommandSortKey SortKey,\n\t\tEMeshPassFeatures MeshPassFeatures,\n\t\tconst ShaderElementDataType& ShaderElementData)"
  },
  {
    "label": "AddGraphicsPipelineStateInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGraphicsPipelineStateInitializer(\n\t\tconst FPSOPrecacheVertexFactoryData& VertexFactoryData,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tconst FMeshPassProcessorRenderState& RESTRICT DrawRenderState,\n\t\tconst FGraphicsPipelineRenderTargetsInfo& RESTRICT RenderTargetsInfo,\n\t\tconst PassShadersType& PassShaders,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode,\n\t\tEPrimitiveType PrimitiveType,\n\t\tEMeshPassFeatures MeshPassFeatures,\n\t\tbool bRequired,\n\t\tTArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "AddGraphicsPipelineStateInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGraphicsPipelineStateInitializer(\n\t\tconst FPSOPrecacheVertexFactoryData& VertexFactoryData,\n\t\tconst FMaterial& RESTRICT MaterialResource,\n\t\tconst FMeshPassProcessorRenderState& RESTRICT DrawRenderState,\n\t\tconst FGraphicsPipelineRenderTargetsInfo& RESTRICT RenderTargetsInfo,\n\t\tconst PassShadersType& PassShaders,\n\t\tERasterizerFillMode MeshFillMode,\n\t\tERasterizerCullMode MeshCullMode,\n\t\tEPrimitiveType PrimitiveType,\n\t\tEMeshPassFeatures MeshPassFeatures,\n\t\tESubpassHint SubpassHint,\n\t\tuint8 SubpassIndex,\n\t\tbool bRequired,\n\t\tint32 PSOCollectorIndex,\n\t\tTArray<FPSOPrecacheData>& PSOInitializers)"
  },
  {
    "label": "GetShadersOnlyInitializer()",
    "kind": "Method",
    "detail": "Function (FGraphicsMinimalPipelineStateInitializer)",
    "insertText": "GetShadersOnlyInitializer(const FGraphicsMinimalPipelineStateInitializer& Initializer)"
  },
  {
    "label": "PatchMinimalPipelineStateToCheck()",
    "kind": "Method",
    "detail": "Function (FGraphicsMinimalPipelineStateInitializer)",
    "insertText": "PatchMinimalPipelineStateToCheck(const FGraphicsMinimalPipelineStateInitializer& Initializer)"
  },
  {
    "label": "GetPSOPrecacheHash()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetPSOPrecacheHash(const FGraphicsMinimalPipelineStateInitializer& Initializer)"
  },
  {
    "label": "CheckShaderOnlyStateInCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckShaderOnlyStateInCache(const FGraphicsMinimalPipelineStateInitializer& Initializer, const FMaterial& Material, const FVertexFactoryType* VFType, const FPrimitiveSceneProxy* PrimitiveSceneProxy, int32 PSOCollectorIndex)"
  },
  {
    "label": "CheckMinimalPipelineStateInCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckMinimalPipelineStateInCache(const FGraphicsMinimalPipelineStateInitializer& Initializer, const FMaterial& Material, const FVertexFactoryType* VFType, const FPrimitiveSceneProxy* PrimitiveSceneProxy, int32 PSOCollectorIndex)"
  },
  {
    "label": "SetPassFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPassFlags(EShadingPath ShadingPath, EMeshPass::Type PassType, EMeshPassFlags NewFlags)"
  },
  {
    "label": "MeshPassProcessorCreateFunction()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MeshPassProcessorCreateFunction(FeatureLevel, nullptr, nullptr, nullptr)"
  },
  {
    "label": "SubmitMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitMeshDrawCommands(\n\tconst FMeshCommandOneFrameArray& VisibleMeshDrawCommands,\n\tconst FGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet, \n\tconst FMeshDrawCommandSceneArgs& SceneArgs,\n\tuint32 PrimitiveIdBufferStride,\n\tbool bDynamicInstancing,\n\tuint32 InstanceFactor,\n\tFRHICommandList& RHICmdList)"
  },
  {
    "label": "SubmitMeshDrawCommandsRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitMeshDrawCommandsRange(\n\tconst FMeshCommandOneFrameArray& VisibleMeshDrawCommands,\n\tconst FGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet,\n\tconst FMeshDrawCommandSceneArgs& SceneArgs,\n\tuint32 PrimitiveIdBufferStride,\n\tbool bDynamicInstancing,\n\tint32 StartIndex,\n\tint32 NumMeshDrawCommands,\n\tuint32 InstanceFactor,\n\tFRHICommandList& RHICmdList)"
  },
  {
    "label": "ApplyViewOverridesToMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyViewOverridesToMeshDrawCommands(\n\tconst FSceneView& View,\n\tFMeshCommandOneFrameArray& VisibleMeshDrawCommands,\n\tFDynamicMeshDrawCommandStorage& DynamicMeshDrawCommandStorage,\n\tFGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet,\n\tbool& NeedsShaderInitialisation)"
  },
  {
    "label": "DrawDynamicMeshPassPrivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDynamicMeshPassPrivate(\n\tconst FSceneView& View,\n\tFRHICommandList& RHICmdList,\n\tFMeshCommandOneFrameArray& VisibleMeshDrawCommands,\n\tFDynamicMeshDrawCommandStorage& DynamicMeshDrawCommandStorage,\n\tFGraphicsMinimalPipelineStateSet& GraphicsMinimalPipelineStateSet,\n\tbool& InNeedsShaderInitialisation,\n\tuint32 InstanceFactor)"
  },
  {
    "label": "CalculateMeshStaticSortKey()",
    "kind": "Method",
    "detail": "Function (FMeshDrawCommandSortKey)",
    "insertText": "CalculateMeshStaticSortKey(const FMeshMaterialShader* VertexShader, const FMeshMaterialShader* PixelShader)"
  },
  {
    "label": "AddRenderTargetInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRenderTargetInfo(EPixelFormat PixelFormat, ETextureCreateFlags CreateFlags, FGraphicsPipelineRenderTargetsInfo& RenderTargetsInfo)"
  },
  {
    "label": "SetupDepthStencilInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDepthStencilInfo(EPixelFormat DepthStencilFormat, ETextureCreateFlags DepthStencilCreateFlags, ERenderTargetLoadAction DepthTargetLoadAction, ERenderTargetLoadAction StencilTargetLoadAction, FExclusiveDepthStencil DepthStencilAccess, FGraphicsPipelineRenderTargetsInfo& RenderTargetsInfo)"
  },
  {
    "label": "SetupGBufferRenderTargetInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupGBufferRenderTargetInfo(const FSceneTexturesConfig& SceneTexturesConfig, FGraphicsPipelineRenderTargetsInfo& RenderTargetsInfo, bool bSetupDepthStencil)"
  },
  {
    "label": "ApplyTargetsInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyTargetsInfo(FGraphicsPipelineStateInitializer& GraphicsPSOInit, const FGraphicsPipelineRenderTargetsInfo& RenderTargetsInfo)"
  },
  {
    "label": "GetSubpassHint()",
    "kind": "Method",
    "detail": "Function (ESubpassHint)",
    "insertText": "GetSubpassHint(const FStaticShaderPlatform Platform, bool bIsUsingGBuffers, bool bMultiViewRendering, uint32 NumSamples)"
  }
]