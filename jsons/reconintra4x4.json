[
  {
    "label": "intra_prediction_down_copy()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_COMMON_RECONINTRA4X4_H_ # define VPX_VP8_COMMON_RECONINTRA4X4_H_ # include \" vp8 / common / blockd . h \" # ifdef __cplusplus \" C \" { # endif void)",
    "insertText": "intra_prediction_down_copy(MACROBLOCKD *xd, unsigned char *above_right_src)"
  },
  {
    "label": "src_ptr()",
    "kind": "Method",
    "detail": "Function (int dst_stride = xd -> dst . y_stride ; unsigned char* above_right_dst = xd -> dst . y_buffer - dst_stride + 1 6 ; unsigned int*)",
    "insertText": "src_ptr(unsigned int *)"
  },
  {
    "label": "dst_ptr0()",
    "kind": "Method",
    "detail": "Function (unsigned int*)",
    "insertText": "dst_ptr0(unsigned int *)(above_right_dst + 4 * dst_stride)"
  },
  {
    "label": "dst_ptr1()",
    "kind": "Method",
    "detail": "Function (unsigned int*)",
    "insertText": "dst_ptr1(unsigned int *)(above_right_dst + 8 * dst_stride)"
  },
  {
    "label": "dst_ptr2()",
    "kind": "Method",
    "detail": "Function (unsigned int*)",
    "insertText": "dst_ptr2(unsigned int *)(above_right_dst + 12 * dst_stride)"
  },
  {
    "label": "vp8_intra4x4_predict()",
    "kind": "Method",
    "detail": "Function (* dst_ptr0 =* src_ptr ;* dst_ptr1 =* src_ptr ;* dst_ptr2 =* src_ptr ; } void)",
    "insertText": "vp8_intra4x4_predict(unsigned char *above, unsigned char *yleft, int left_stride, B_PREDICTION_MODE b_mode, unsigned char *dst, int dst_stride, unsigned char top_left)"
  },
  {
    "label": "vp8_init_intra4x4_predictors_internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_init_intra4x4_predictors_internal(void)"
  }
]