[
  {
    "label": "FInterval1i",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterval1i"
  },
  {
    "label": "FAxisAlignedBox2i",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAxisAlignedBox2i"
  },
  {
    "label": "FAxisAlignedBox3i",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAxisAlignedBox3i"
  },
  {
    "label": "FInterval1i()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IntVectorTypes . h \" namespace UE { namespace Geometry { struct FInterval1i { int32 Min ; int32 Max ;)",
    "insertText": "FInterval1i() : FInterval1i(Empty())"
  },
  {
    "label": "FInterval1i()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInterval1i(const int32& Min, const int32& Max)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (this -> Min = Min ; this -> Max = Max ; } FInterval1i)",
    "insertText": "Empty()"
  },
  {
    "label": "Center()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Center()"
  },
  {
    "label": "Extent()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Extent()"
  },
  {
    "label": "Length()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Length()"
  },
  {
    "label": "Contain()",
    "kind": "Method",
    "detail": "Function (Max + = Radius ; Min - = Radius ; } void)",
    "insertText": "Contain(int32 V)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Min = V ; })",
    "insertText": "if(V > Max)"
  },
  {
    "label": "FAxisAlignedBox2i()",
    "kind": "Method",
    "detail": "Function (Max = V ; } } } ; struct FAxisAlignedBox2i { FVector2i Min ; FVector2i Max ;)",
    "insertText": "FAxisAlignedBox2i() : FAxisAlignedBox2i(Empty())"
  },
  {
    "label": "FAxisAlignedBox2i()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAxisAlignedBox2i(const FVector2i& Min, const FVector2i& Max) : Min(Min), Max(Max)"
  },
  {
    "label": "FAxisAlignedBox2i()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAxisAlignedBox2i(int32 SquareSize) : Min((int32)0, (int32)0), Max(SquareSize, SquareSize)"
  },
  {
    "label": "FAxisAlignedBox2i()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAxisAlignedBox2i(int32 Width, int32 Height) : Min((int32)0, (int32)0), Max(Width, Height)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FAxisAlignedBox2i& Other)"
  },
  {
    "label": "X()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "X((Index % 3) == 0) ? (Min.X) : (Max.X)"
  },
  {
    "label": "Y()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Y((Index & 2) == 0) ? (Min.Y) : (Max.Y)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Area()",
    "kind": "Method",
    "detail": "Function (Max . X + = Radius ; Max . Y + = Radius ; Min . X - = Radius ; Min . Y - = Radius ; } int32)",
    "insertText": "Area()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (const int32 XLength = TMathUtil<int32)",
    "insertText": "Max(Max.X - Min.X, 0)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (const int32 YLength = TMathUtil<int32)",
    "insertText": "Max(Max.Y - Min.Y, 0)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Contains(const FVector2i& V)"
  },
  {
    "label": "Contain()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Contain(const FVector2i& V)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Min . X = V . X ; })",
    "insertText": "if(V.X > Max.X)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Max . X = V . X ; })",
    "insertText": "if(V.Y < Min.Y)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Min . Y = V . Y ; })",
    "insertText": "if(V.Y > Max.Y)"
  },
  {
    "label": "FAxisAlignedBox3i()",
    "kind": "Method",
    "detail": "Function (Max . Y = V . Y ; } } } ; struct FAxisAlignedBox3i { FVector3i Min ; FVector3i Max ;)",
    "insertText": "FAxisAlignedBox3i() : FAxisAlignedBox3i(FAxisAlignedBox3i::Empty())"
  },
  {
    "label": "FAxisAlignedBox3i()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAxisAlignedBox3i(const FVector3i& Min, const FVector3i& Max)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (this -> Min = Min ; this -> Max = Max ; } bool)",
    "insertText": "operator(const FAxisAlignedBox3i& Other)"
  },
  {
    "label": "Height()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Height()"
  },
  {
    "label": "Depth()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Depth()"
  },
  {
    "label": "Volume()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Volume()"
  },
  {
    "label": "Diagonal()",
    "kind": "Method",
    "detail": "Function (} FVector3i)",
    "insertText": "Diagonal()"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Contains(const FVector3i& V)"
  },
  {
    "label": "Contain()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Contain(const FVector3i& V)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Max . Y = V . Y ; })",
    "insertText": "if(V.Z < Min.Z)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Min . Z = V . Z ; })",
    "insertText": "if(V.Z > Max.Z)"
  },
  {
    "label": "GetCorner()",
    "kind": "Method",
    "detail": "Function (Max . Z = V . Z ; } } FVector3i)",
    "insertText": "GetCorner(int Index)"
  },
  {
    "label": "X()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "X(((Index & 1) != 0) ^ ((Index & 2) != 0)) ? (Max.X) : (Min.X)"
  },
  {
    "label": "Y()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Y((Index / 2) % 2 == 0) ? (Min.Y) : (Max.Y)"
  },
  {
    "label": "Z()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Z(Index < 4) ? (Min.Z) : (Max.Z)"
  },
  {
    "label": "Infinite()",
    "kind": "Method",
    "detail": "Function (} FAxisAlignedBox3i)",
    "insertText": "Infinite()"
  }
]