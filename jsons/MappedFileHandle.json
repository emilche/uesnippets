[
  {
    "label": "IMappedFileRegion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMappedFileRegion"
  },
  {
    "label": "IMappedFileHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMappedFileHandle"
  },
  {
    "label": "DECLARE_MEMORY_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" Stats / Stats . h \")",
    "insertText": "DECLARE_MEMORY_STAT_EXTERN(TEXT(\"Mapped File Handle Memory\"), STAT_MappedFileMemory, STATGROUP_Memory, CORE_API)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Num Mapped File Handles\"), STAT_MappedFileHandles, STATGROUP_Memory, CORE_API)"
  },
  {
    "label": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DWORD_ACCUMULATOR_STAT_EXTERN(TEXT(\"Num Mapped File Regions\"), STAT_MappedFileRegions, STATGROUP_Memory, CORE_API)"
  },
  {
    "label": "CheckInvariants()",
    "kind": "Method",
    "detail": "Function (class IMappedFileRegion { const uint8* MappedPtr ; size_t MappedSize ; FString DebugFilename ; size_t DebugOffsetRelativeToFile ; void)",
    "insertText": "CheckInvariants()"
  },
  {
    "label": "IMappedFileRegion()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "IMappedFileRegion(const uint8* InMappedPtr, size_t InMappedSize, const FString& InDebugFilename, size_t InDebugOffsetRelativeToFile) : MappedPtr(InMappedPtr) , MappedSize(InMappedSize) , DebugFilename(InDebugFilename) , DebugOffsetRelativeToFile(InDebugOffsetRelativeToFile)"
  },
  {
    "label": "INC_DWORD_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INC_DWORD_STAT(STAT_MappedFileRegions)"
  },
  {
    "label": "INC_MEMORY_STAT_BY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INC_MEMORY_STAT_BY(STAT_MappedFileMemory, MappedSize)"
  },
  {
    "label": "IMappedFileRegion()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "IMappedFileRegion()"
  },
  {
    "label": "DEC_MEMORY_STAT_BY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEC_MEMORY_STAT_BY(STAT_MappedFileMemory, MappedSize)"
  },
  {
    "label": "DEC_DWORD_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEC_DWORD_STAT(STAT_MappedFileRegions)"
  },
  {
    "label": "GetMappedPtr()",
    "kind": "Method",
    "detail": "Function (} const uint8*)",
    "insertText": "GetMappedPtr()"
  },
  {
    "label": "IMappedFileRegion()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IMappedFileRegion(const IMappedFileRegion&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMappedFileRegion&)",
    "insertText": "operator(const IMappedFileRegion&)"
  },
  {
    "label": "IMappedFileHandle()",
    "kind": "Method",
    "detail": "Function (} ; class IMappedFileHandle { size_t MappedFileSize ; public :)",
    "insertText": "IMappedFileHandle(size_t InFileSize) : MappedFileSize(InFileSize)"
  },
  {
    "label": "INC_DWORD_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "INC_DWORD_STAT(STAT_MappedFileHandles)"
  },
  {
    "label": "IMappedFileHandle()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "IMappedFileHandle()"
  },
  {
    "label": "DEC_DWORD_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEC_DWORD_STAT(STAT_MappedFileHandles)"
  },
  {
    "label": "GetFileSize()",
    "kind": "Method",
    "detail": "Function (} int64)",
    "insertText": "GetFileSize()"
  },
  {
    "label": "IMappedFileHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IMappedFileHandle(const IMappedFileHandle&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMappedFileHandle&)",
    "insertText": "operator(const IMappedFileHandle&)"
  }
]