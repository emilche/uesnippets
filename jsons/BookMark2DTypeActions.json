[
  {
    "label": "FBookMark2DTypeActions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBookMark2DTypeActions"
  },
  {
    "label": "UBookmarkBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBookmarkBase"
  },
  {
    "label": "FBookmarkBaseJumpToSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBookmarkBaseJumpToSettings"
  },
  {
    "label": "GetBookmarkClass()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Bookmarks / IBookmarkTypeActions . h \" # include \" EditorViewportClient . h \" # include \" Editor . h \" # include \" Editor / EditorEngine . h \" # include \" Engine / BookMark2D . h \" # include \" Engine / LevelStreaming . h \" # include \" Engine / World . h \" # include \" LevelEditorViewport . h \" class FBookMark2DTypeActions : public IBookmarkTypeActions { public : TSubclassOf<class UBookmarkBase>)",
    "insertText": "GetBookmarkClass()"
  },
  {
    "label": "InitFromViewport()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitFromViewport(UBookmarkBase* InBookmark, FEditorViewportClient& InViewportClient)"
  },
  {
    "label": "GetViewLocation()",
    "kind": "Method",
    "detail": "Function (FVector Location = InViewportClient .)",
    "insertText": "GetViewLocation()"
  },
  {
    "label": "FIntPoint()",
    "kind": "Method",
    "detail": "Function (Bookmark -> Zoom2D = Location . X ; Bookmark -> Location =)",
    "insertText": "FIntPoint(Location.Y, Location.Z)"
  },
  {
    "label": "JumpToBookmark()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "JumpToBookmark(UBookmarkBase* InBookmark, const TSharedPtr<struct FBookmarkBaseJumpToSettings> InSettings, FEditorViewportClient& InViewportClient)"
  },
  {
    "label": "Location()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "Location(Bookmark->Zoom2D, Bookmark->Location.X, Bookmark->Location.Y)"
  },
  {
    "label": "SetViewLocation()",
    "kind": "Method",
    "detail": "Function (ViewportClient ->)",
    "insertText": "SetViewLocation(Location)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (ViewportClient ->)",
    "insertText": "Invalidate()"
  }
]