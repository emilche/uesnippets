[
  {
    "label": "StackBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StackBuffer"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Delegate()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PROFILER_STACK_COPIER_H_ # define BASE_PROFILER_STACK_COPIER_H_ # include<stdint . h> # include \" base / base_export . h \" # include \" base / profiler / register_context . h \" # include \" base / time / time . h \" namespace base { class StackBuffer ; class BASE_EXPORT StackCopier { public : class BASE_EXPORT Delegate { public : ~)",
    "insertText": "Delegate()"
  },
  {
    "label": "OnStackCopy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnStackCopy()"
  },
  {
    "label": "StackCopier()",
    "kind": "Method",
    "detail": "Function (} ; ~)",
    "insertText": "StackCopier()"
  },
  {
    "label": "CopyStack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyStack(StackBuffer* stack_buffer, uintptr_t* stack_top, TimeTicks* timestamp, RegisterContext* thread_context, Delegate* delegate)"
  },
  {
    "label": "RewritePointerIfInOriginalStack()",
    "kind": "Method",
    "detail": "Function (protected : uintptr_t)",
    "insertText": "RewritePointerIfInOriginalStack(const uint8_t* original_stack_bottom, const uintptr_t* original_stack_top, const uint8_t* stack_copy_bottom, uintptr_t pointer)"
  },
  {
    "label": "CopyStackContentsAndRewritePointers()",
    "kind": "Method",
    "detail": "Function (const uint8_t*)",
    "insertText": "CopyStackContentsAndRewritePointers(const uint8_t* original_stack_bottom, const uintptr_t* original_stack_top, size_t platform_stack_alignment, uintptr_t* stack_buffer_bottom)"
  }
]