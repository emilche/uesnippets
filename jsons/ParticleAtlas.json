[
  {
    "label": "ParticleArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParticleArray"
  },
  {
    "label": "ParticleAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParticleAtlas"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Iterator"
  },
  {
    "label": "ParticleAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParticleAtlas"
  },
  {
    "label": "ParticleAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParticleAtlas"
  },
  {
    "label": "ParticleAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParticleAtlas"
  },
  {
    "label": "ComputeExtremas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ComputeExtremas"
  },
  {
    "label": "ComputeExtremas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ComputeExtremas"
  },
  {
    "label": "SplittableParticleArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SplittableParticleArray"
  },
  {
    "label": "MaskParticles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MaskParticles"
  },
  {
    "label": "MaskParticles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MaskParticles"
  },
  {
    "label": "SplittableParticleArray",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SplittableParticleArray"
  },
  {
    "label": "RemapIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemapIndices"
  },
  {
    "label": "RemapIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemapIndices"
  },
  {
    "label": "RadialRangeFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RadialRangeFilter"
  },
  {
    "label": "RadialRangeFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RadialRangeFilter"
  },
  {
    "label": "BBoxFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BBoxFilter"
  },
  {
    "label": "BBoxFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BBoxFilter"
  },
  {
    "label": "construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "construct(const ParticleArrayType& particles, double minVoxelSize, size_t maxLevels = 50)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (Ptr)",
    "insertText": "create(const ParticleArrayType& particles,\n        double minVoxelSize, size_t maxLevels = 50)"
  },
  {
    "label": "ParticleAtlas()",
    "kind": "Method",
    "detail": "Function (copying)",
    "insertText": "ParticleAtlas(const ParticleAtlas&)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "Iterator(const ParticleAtlas& atlas)"
  },
  {
    "label": "worldSpaceSearchAndUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "worldSpaceSearchAndUpdate(const Vec3d& center, double radius,\n        const ParticleArrayType& particles)"
  },
  {
    "label": "worldSpaceSearchAndUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "worldSpaceSearchAndUpdate(const BBoxd& bbox, const ParticleArrayType& particles)"
  },
  {
    "label": "updateFromLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateFromLevel(size_t level)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "increment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "increment()"
  },
  {
    "label": "next()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "next()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "Iterator(const Iterator& rhs)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "Ptr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Ptr()"
  },
  {
    "label": "Ptr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Ptr()"
  },
  {
    "label": "SplittableParticleArray()",
    "kind": "Method",
    "detail": "Function (copying)",
    "insertText": "SplittableParticleArray(const SplittableParticleArray&)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (ComputeExtremas<SplittableParticleArray>)",
    "insertText": "op(*this)"
  },
  {
    "label": "RadialRangeFilter()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "RadialRangeFilter(const RadialRangeFilter&)"
  },
  {
    "label": "BBoxFilter()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "BBoxFilter(const BBoxFilter&)"
  },
  {
    "label": "extremas()",
    "kind": "Method",
    "detail": "Function (particle_atlas_internal::ComputeExtremas<ParticleArrayType>)",
    "insertText": "extremas(particles)"
  },
  {
    "label": "ibMin()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "ibMin(center[0] - iRadius, center[1] - iRadius, center[2] - iRadius)"
  },
  {
    "label": "ibMax()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "ibMax(center[0] + iRadius, center[1] + iRadius, center[2] + iRadius)"
  },
  {
    "label": "bMin()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "bMin(center[0] - radius, center[1] - radius, center[2] - radius)"
  },
  {
    "label": "bMax()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "bMax(center[0] + radius, center[1] + radius, center[2] + radius)"
  },
  {
    "label": "filter()",
    "kind": "Method",
    "detail": "Function (FilterType)",
    "insertText": "filter(mRangeList, filteredIndices, pos, dist, particles, uniformRadius)"
  },
  {
    "label": "filter()",
    "kind": "Method",
    "detail": "Function (FilterType)",
    "insertText": "filter(mRangeList, filteredIndices, bbox, particles, uniformRadius)"
  }
]