[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UActorDescContainerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainerInstance"
  },
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "FWorldPartitionHandleImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionHandleImpl"
  },
  {
    "label": "FWorldPartitionReferenceImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionReferenceImpl"
  },
  {
    "label": "FWorldPartitionActorDescUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorDescUtils"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "UActorDescContainerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainerInstance"
  },
  {
    "label": "FWorldPartitionLoadingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionLoadingContext"
  },
  {
    "label": "FWorldPartitionActorDescUnitTestAcccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorDescUnitTestAcccessor"
  },
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "FWorldPartitionLoadingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionLoadingContext"
  },
  {
    "label": "IWorldPartitionActorLoaderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionActorLoaderInterface"
  },
  {
    "label": "UWorldPartitionEditorSpatialHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionEditorSpatialHash"
  },
  {
    "label": "ILoaderAdapterSpatial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILoaderAdapterSpatial"
  },
  {
    "label": "FWorldPartitionActorDescInstance()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FWorldPartitionActorDescInstance()"
  },
  {
    "label": "FWorldPartitionActorDescInstance()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FWorldPartitionActorDescInstance(UActorDescContainerInstance* InContainerInstance, FWorldPartitionActorDesc* InActorDesc)"
  },
  {
    "label": "StartAsyncLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartAsyncLoad()"
  },
  {
    "label": "MarkUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkUnload()"
  },
  {
    "label": "UpdateActorDesc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateActorDesc(FWorldPartitionActorDesc* InActorDesc)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "RegisterChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterChildContainerInstance()"
  },
  {
    "label": "UnregisterChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterChildContainerInstance()"
  },
  {
    "label": "UpdateChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChildContainerInstance()"
  }
]