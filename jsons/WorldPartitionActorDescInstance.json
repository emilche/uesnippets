[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UActorDescContainerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainerInstance"
  },
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "FWorldPartitionHandleImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionHandleImpl"
  },
  {
    "label": "FWorldPartitionReferenceImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionReferenceImpl"
  },
  {
    "label": "FWorldPartitionActorDescUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorDescUtils"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FWorldPartitionLoadingContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionLoadingContext"
  },
  {
    "label": "FWorldPartitionActorDescUnitTestAcccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionActorDescUnitTestAcccessor"
  },
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "IWorldPartitionActorLoaderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionActorLoaderInterface"
  },
  {
    "label": "UWorldPartitionEditorSpatialHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionEditorSpatialHash"
  },
  {
    "label": "ILoaderAdapterSpatial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILoaderAdapterSpatial"
  },
  {
    "label": "FWorldPartitionActorDescInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_EDITOR # include \" WorldPartition / WorldPartitionActorDesc . h \" # include \" WorldPartition / DataLayer / DataLayerInstanceNames . h \" # include \" UObject / WeakObjectPtr . h \" class AActor ; class UWorldPartition ; class UActorDescContainerInstance ; # endif class FWorldPartitionActorDescInstance { # if WITH_EDITOR struct FWorldPartitionHandleImpl ; struct FWorldPartitionReferenceImpl ; struct FWorldPartitionActorDescUtils ; class FWorldPartitionActorDesc ; class UActorDescContainerInstance ; class FWorldPartitionLoadingContext ; struct FWorldPartitionActorDescUnitTestAcccessor ; class UDataLayerManager ; class UWorldPartition ; class FWorldPartitionLoadingContext ; class IWorldPartitionActorLoaderInterface ; class UWorldPartitionEditorSpatialHash ; class ILoaderAdapterSpatial ; protected :)",
    "insertText": "FWorldPartitionActorDescInstance()"
  },
  {
    "label": "FWorldPartitionActorDescInstance()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FWorldPartitionActorDescInstance(UActorDescContainerInstance* InContainerInstance, FWorldPartitionActorDesc* InActorDesc)"
  },
  {
    "label": "GetGuid()",
    "kind": "Method",
    "detail": "Function (} const FGuid&)",
    "insertText": "GetGuid()"
  },
  {
    "label": "GetBaseClass()",
    "kind": "Method",
    "detail": "Function (} FTopLevelAssetPath)",
    "insertText": "GetBaseClass()"
  },
  {
    "label": "GetNativeClass()",
    "kind": "Method",
    "detail": "Function (} FTopLevelAssetPath)",
    "insertText": "GetNativeClass()"
  },
  {
    "label": "GetActorNativeClass()",
    "kind": "Method",
    "detail": "Function (} UClass*)",
    "insertText": "GetActorNativeClass()"
  },
  {
    "label": "GetRuntimeGrid()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetRuntimeGrid()"
  },
  {
    "label": "GetIsSpatiallyLoaded()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetIsSpatiallyLoaded()"
  },
  {
    "label": "GetActorIsEditorOnly()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetActorIsEditorOnly()"
  },
  {
    "label": "GetActorIsRuntimeOnly()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetActorIsRuntimeOnly()"
  },
  {
    "label": "IsRuntimeRelevant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRuntimeRelevant()"
  },
  {
    "label": "IsEditorRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditorRelevant()"
  },
  {
    "label": "IsUsingDataLayerAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingDataLayerAsset()"
  },
  {
    "label": "GetDataLayers()",
    "kind": "Method",
    "detail": "Function (} TArray<FName>)",
    "insertText": "GetDataLayers()"
  },
  {
    "label": "GetActorIsHLODRelevant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetActorIsHLODRelevant()"
  },
  {
    "label": "GetHLODLayer()",
    "kind": "Method",
    "detail": "Function (} FSoftObjectPath)",
    "insertText": "GetHLODLayer()"
  },
  {
    "label": "GetTags()",
    "kind": "Method",
    "detail": "Function (} const TArray<FName>&)",
    "insertText": "GetTags()"
  },
  {
    "label": "GetActorPackage()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetActorPackage()"
  },
  {
    "label": "GetActorSoftPath()",
    "kind": "Method",
    "detail": "Function (} FSoftObjectPath)",
    "insertText": "GetActorSoftPath()"
  },
  {
    "label": "GetActorLabel()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetActorLabel()"
  },
  {
    "label": "GetActorName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetActorName()"
  },
  {
    "label": "GetFolderPath()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFolderPath()"
  },
  {
    "label": "GetFolderGuid()",
    "kind": "Method",
    "detail": "Function (} const FGuid&)",
    "insertText": "GetFolderGuid()"
  },
  {
    "label": "GetActorTransform()",
    "kind": "Method",
    "detail": "Function (} const FTransform&)",
    "insertText": "GetActorTransform()"
  },
  {
    "label": "GetEditorBounds()",
    "kind": "Method",
    "detail": "Function (} FBox)",
    "insertText": "GetEditorBounds()"
  },
  {
    "label": "GetRuntimeBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetRuntimeBounds()"
  },
  {
    "label": "GetProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetProperty(FName PropertyName, FName* PropertyValue)"
  },
  {
    "label": "HasProperty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasProperty(FName PropertyName)"
  },
  {
    "label": "GetReferences()",
    "kind": "Method",
    "detail": "Function (} const TArray<FGuid>&)",
    "insertText": "GetReferences()"
  },
  {
    "label": "GetEditorOnlyReferences()",
    "kind": "Method",
    "detail": "Function (} const TArray<FGuid>&)",
    "insertText": "GetEditorOnlyReferences()"
  },
  {
    "label": "IsEditorOnlyReference()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEditorOnlyReference(const FGuid& ReferenceGuid)"
  },
  {
    "label": "GetParentActor()",
    "kind": "Method",
    "detail": "Function (} const FGuid&)",
    "insertText": "GetParentActor()"
  },
  {
    "label": "GetContentBundleGuid()",
    "kind": "Method",
    "detail": "Function (} FGuid)",
    "insertText": "GetContentBundleGuid()"
  },
  {
    "label": "GetExternalDataLayerAsset()",
    "kind": "Method",
    "detail": "Function (} const FSoftObjectPath&)",
    "insertText": "GetExternalDataLayerAsset()"
  },
  {
    "label": "IsChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsChildContainerInstance()"
  },
  {
    "label": "GetChildContainerPackage()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetChildContainerPackage()"
  },
  {
    "label": "GetChildContainerName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetChildContainerName()"
  },
  {
    "label": "GetChildContainerFilterType()",
    "kind": "Method",
    "detail": "Function (} EWorldPartitionActorFilterType)",
    "insertText": "GetChildContainerFilterType()"
  },
  {
    "label": "GetChildContainerFilter()",
    "kind": "Method",
    "detail": "Function (} const FWorldPartitionActorFilter*)",
    "insertText": "GetChildContainerFilter()"
  },
  {
    "label": "GetChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetChildContainerInstance(FWorldPartitionActorDesc::FContainerInstance& OutContainerInstance)"
  },
  {
    "label": "IsMainWorldOnly()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsMainWorldOnly()"
  },
  {
    "label": "IsListedInSceneOutliner()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsListedInSceneOutliner()"
  },
  {
    "label": "GetSceneOutlinerParent()",
    "kind": "Method",
    "detail": "Function (} const FGuid&)",
    "insertText": "GetSceneOutlinerParent()"
  },
  {
    "label": "GetActorDesc()",
    "kind": "Method",
    "detail": "Function (} const FWorldPartitionActorDesc*)",
    "insertText": "GetActorDesc()"
  },
  {
    "label": "GetDataLayerInstanceNames()",
    "kind": "Method",
    "detail": "Function (} const FDataLayerInstanceNames&)",
    "insertText": "GetDataLayerInstanceNames()"
  },
  {
    "label": "IsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoaded(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "GetActor()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetActor(bool bEvenIfPendingKill = true, bool bEvenIfUnreachable = false)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString(FWorldPartitionActorDesc::EToStringMode Mode = FWorldPartitionActorDesc::EToStringMode::Compact)"
  },
  {
    "label": "GetContainerInstance()",
    "kind": "Method",
    "detail": "Function (UActorDescContainerInstance*)",
    "insertText": "GetContainerInstance()"
  },
  {
    "label": "GetChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (} UActorDescContainerInstance*)",
    "insertText": "GetChildContainerInstance()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "SetForceNonSpatiallyLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetForceNonSpatiallyLoaded(bool bForce)"
  },
  {
    "label": "GetForceNonSpatiallyLoaded()",
    "kind": "Method",
    "detail": "Function (bIsForcedNonSpatiallyLoaded = bForce ; } bool)",
    "insertText": "GetForceNonSpatiallyLoaded()"
  },
  {
    "label": "GetDisplayClassName()",
    "kind": "Method",
    "detail": "Function (UnloadedReason = InUnloadedReason ; } FName)",
    "insertText": "GetDisplayClassName()"
  },
  {
    "label": "GetUnloadedReason()",
    "kind": "Method",
    "detail": "Function (} const FText&)",
    "insertText": "GetUnloadedReason()"
  },
  {
    "label": "GetActorNameString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetActorNameString()"
  },
  {
    "label": "GetActorLabelString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetActorLabelString()"
  },
  {
    "label": "GetDisplayClassNameString()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetDisplayClassNameString()"
  },
  {
    "label": "GetLocalEditorBounds()",
    "kind": "Method",
    "detail": "Function (protected : FBox)",
    "insertText": "GetLocalEditorBounds()"
  },
  {
    "label": "StartAsyncLoad()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StartAsyncLoad()"
  },
  {
    "label": "FlushAsyncLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncLoad()"
  },
  {
    "label": "AsyncLoadFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncLoadFinished(const FName& ActorPackage, const FName& PackageName, UPackage* Package, bool bSuccessful)"
  },
  {
    "label": "MarkUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkUnload()"
  },
  {
    "label": "GetLoadedChildWorldPartition()",
    "kind": "Method",
    "detail": "Function (UWorldPartition*)",
    "insertText": "GetLoadedChildWorldPartition()"
  },
  {
    "label": "UpdateActorDesc()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateActorDesc(FWorldPartitionActorDesc* InActorDesc)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "IncSoftRefCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "IncSoftRefCount()"
  },
  {
    "label": "RegisterChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (ResolvedDataLayerInstanceNames = InDataLayerInstanceNames ; } void)",
    "insertText": "RegisterChildContainerInstance()"
  },
  {
    "label": "UnregisterChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterChildContainerInstance()"
  },
  {
    "label": "UpdateChildContainerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChildContainerInstance()"
  }
]