[
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "IoCounters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IoCounters"
  },
  {
    "label": "PageFaultCounts",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PageFaultCounts"
  },
  {
    "label": "timeval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "timeval"
  },
  {
    "label": "exposes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "exposes"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ThreadTimeInState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ThreadTimeInState"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TimeValToMicroseconds()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "TimeValToMicroseconds(const struct timeval& tv)"
  },
  {
    "label": "CreateProcessMetrics()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<ProcessMetrics>)",
    "insertText": "CreateProcessMetrics(\n      ProcessHandle process)"
  },
  {
    "label": "CreateProcessMetrics()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<ProcessMetrics>)",
    "insertText": "CreateProcessMetrics(\n      ProcessHandle process,\n      PortProvider* port_provider)"
  },
  {
    "label": "CreateCurrentProcessMetrics()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<ProcessMetrics>)",
    "insertText": "CreateCurrentProcessMetrics()"
  },
  {
    "label": "GetPlatformIndependentCPUUsage()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetPlatformIndependentCPUUsage(TimeDelta cumulative_cpu)"
  },
  {
    "label": "GetPlatformIndependentCPUUsage()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetPlatformIndependentCPUUsage()"
  },
  {
    "label": "GetCumulativeCPUUsage()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "GetCumulativeCPUUsage()"
  },
  {
    "label": "GetPreciseCPUUsage()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetPreciseCPUUsage(TimeDelta cumulative_cpu)"
  },
  {
    "label": "GetPreciseCPUUsage()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetPreciseCPUUsage()"
  },
  {
    "label": "GetPreciseCumulativeCPUUsage()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "GetPreciseCumulativeCPUUsage()"
  },
  {
    "label": "GetCumulativeCPUUsagePerThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCumulativeCPUUsagePerThread(CPUUsagePerThread&)"
  },
  {
    "label": "GetPerThreadCumulativeCPUTimeInState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPerThreadCumulativeCPUTimeInState(TimeInStatePerThread&)"
  },
  {
    "label": "ParseProcTimeInState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseProcTimeInState(const std::string& content,\n                            PlatformThreadId tid,\n                            TimeInStatePerThread& time_in_state_per_thread)"
  },
  {
    "label": "GetIdleWakeupsPerSecond()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetIdleWakeupsPerSecond()"
  },
  {
    "label": "GetPackageIdleWakeupsPerSecond()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetPackageIdleWakeupsPerSecond()"
  },
  {
    "label": "GetEnergyImpact()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetEnergyImpact()"
  },
  {
    "label": "GetCumulativeDiskUsageInBytes()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "GetCumulativeDiskUsageInBytes()"
  },
  {
    "label": "GetMallocUsage()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetMallocUsage()"
  },
  {
    "label": "ProcessMetrics()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ProcessMetrics(ProcessHandle process)"
  },
  {
    "label": "ProcessMetrics()",
    "kind": "Method",
    "detail": "Function (else)",
    "insertText": "ProcessMetrics(ProcessHandle process, PortProvider* port_provider)"
  },
  {
    "label": "CalculateIdleWakeupsPerSecond()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CalculateIdleWakeupsPerSecond(uint64_t absolute_idle_wakeups)"
  },
  {
    "label": "CalculatePackageIdleWakeupsPerSecond()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "CalculatePackageIdleWakeupsPerSecond(\n      uint64_t absolute_package_idle_wakeups)"
  },
  {
    "label": "GetCoreType()",
    "kind": "Method",
    "detail": "Function (CPU::CoreType)",
    "insertText": "GetCoreType(uint32_t core_index)"
  },
  {
    "label": "GetSystemCommitCharge()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetSystemCommitCharge()"
  },
  {
    "label": "GetMaxFds()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetMaxFds()"
  },
  {
    "label": "GetHandleLimit()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetHandleLimit()"
  },
  {
    "label": "IncreaseFdLimitTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncreaseFdLimitTo(unsigned int max_descriptors)"
  },
  {
    "label": "GetSystemMemoryInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSystemMemoryInfo(SystemMemoryInfoKB* meminfo)"
  },
  {
    "label": "ParseProcStatCPU()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "ParseProcStatCPU(StringPiece input)"
  },
  {
    "label": "GetNumberOfThreads()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "GetNumberOfThreads(ProcessHandle process)"
  },
  {
    "label": "ParseProcMeminfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseProcMeminfo(StringPiece input,\n                                  SystemMemoryInfoKB* meminfo)"
  },
  {
    "label": "GetVmStatInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVmStatInfo(VmStatInfo* vmstat)"
  },
  {
    "label": "ParseProcVmstat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseProcVmstat(StringPiece input, VmStatInfo* vmstat)"
  },
  {
    "label": "IsValidDiskName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidDiskName(StringPiece candidate)"
  },
  {
    "label": "GetSystemDiskInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSystemDiskInfo(SystemDiskInfo* diskinfo)"
  },
  {
    "label": "GetUserCpuTimeSinceBoot()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "GetUserCpuTimeSinceBoot()"
  },
  {
    "label": "ParseZramMmStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseZramMmStat(StringPiece mm_stat_data, SwapInfo* swap_info)"
  },
  {
    "label": "ParseZramStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseZramStat(StringPiece stat_data, SwapInfo* swap_info)"
  },
  {
    "label": "GetSwapInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSwapInfo(SwapInfo* swap_info)"
  },
  {
    "label": "GetGraphicsMemoryInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGraphicsMemoryInfo(GraphicsMemoryInfoKB* gpu_meminfo)"
  },
  {
    "label": "GetSystemPerformanceInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSystemPerformanceInfo(SystemPerformanceInfo* info)"
  },
  {
    "label": "SystemMetrics()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SystemMetrics()"
  },
  {
    "label": "Sample()",
    "kind": "Method",
    "detail": "Function (SystemMetrics)",
    "insertText": "Sample()"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(SystemMetricsTest, SystemMetrics)"
  },
  {
    "label": "GetTopInfo()",
    "kind": "Method",
    "detail": "Function (MachVMRegionResult)",
    "insertText": "GetTopInfo(mach_port_t task,\n                                          mach_vm_size_t* size,\n                                          mach_vm_address_t* address,\n                                          vm_region_top_info_data_t* info)"
  },
  {
    "label": "GetBasicInfo()",
    "kind": "Method",
    "detail": "Function (MachVMRegionResult)",
    "insertText": "GetBasicInfo(mach_port_t task,\n                                            mach_vm_size_t* size,\n                                            mach_vm_address_t* address,\n                                            vm_region_basic_info_64* info)"
  }
]