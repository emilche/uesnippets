[
  {
    "label": "Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Image"
  },
  {
    "label": "Stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Stream"
  },
  {
    "label": "ColorBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ColorBlock"
  },
  {
    "label": "NVIMAGE_CLASS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVIMAGE_CLASS"
  },
  {
    "label": "DDSHeader()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_IMAGE_DIRECTDRAWSURFACE_H # define NV_IMAGE_DIRECTDRAWSURFACE_H # include<nvimage / nvimage . h> namespace nv { class Image ; class Stream ; struct ColorBlock ; struct NVIMAGE_CLASS DDSPixelFormat { uint size ; uint flags ; uint fourcc ; uint bitcount ; uint rmask ; uint gmask ; uint bmask ; uint amask ; } ; struct NVIMAGE_CLASS DDSCaps { uint caps1 ; uint caps2 ; uint caps3 ; uint caps4 ; } ; struct NVIMAGE_CLASS DDSHeader10 { uint dxgiFormat ; uint resourceDimension ; uint miscFlag ; uint arraySize ; uint reserved ; } ; struct NVIMAGE_CLASS DDSHeader { uint fourcc ; uint size ; uint flags ; uint height ; uint width ; uint pitch ; uint depth ; uint mipmapcount ; uint reserved [ 1 1 ] ; DDSPixelFormat pf ; DDSCaps caps ; uint notused ; DDSHeader10 header10 ;)",
    "insertText": "DDSHeader()"
  },
  {
    "label": "setWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setWidth(uint w)"
  },
  {
    "label": "setHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setHeight(uint h)"
  },
  {
    "label": "setDepth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDepth(uint d)"
  },
  {
    "label": "setMipmapCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMipmapCount(uint count)"
  },
  {
    "label": "setTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTexture2D()"
  },
  {
    "label": "setTexture3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTexture3D()"
  },
  {
    "label": "setTextureCube()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTextureCube()"
  },
  {
    "label": "setLinearSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLinearSize(uint size)"
  },
  {
    "label": "setPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPitch(uint pitch)"
  },
  {
    "label": "setFourCC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFourCC(uint8 c0, uint8 c1, uint8 c2, uint8 c3)"
  },
  {
    "label": "setPixelFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPixelFormat(uint bitcount, uint rmask, uint gmask, uint bmask, uint amask)"
  },
  {
    "label": "setDX10Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDX10Format(uint format)"
  },
  {
    "label": "setNormalFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setNormalFlag(bool b)"
  },
  {
    "label": "swapBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "swapBytes()"
  },
  {
    "label": "hasDX10Header()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasDX10Header()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; Stream&)",
    "insertText": "operator(Stream & s, DDSHeader & header)"
  },
  {
    "label": "DirectDrawSurface()",
    "kind": "Method",
    "detail": "Function (class NVIMAGE_CLASS DirectDrawSurface { public :)",
    "insertText": "DirectDrawSurface(const char * file)"
  },
  {
    "label": "DirectDrawSurface()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DirectDrawSurface()"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValid()"
  },
  {
    "label": "isSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isSupported()"
  },
  {
    "label": "mipmapCount()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "mipmapCount()"
  },
  {
    "label": "width()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "width()"
  },
  {
    "label": "height()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "height()"
  },
  {
    "label": "depth()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "depth()"
  },
  {
    "label": "isTexture1D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isTexture1D()"
  },
  {
    "label": "isTexture2D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isTexture2D()"
  },
  {
    "label": "isTexture3D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isTexture3D()"
  },
  {
    "label": "isTextureCube()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isTextureCube()"
  },
  {
    "label": "mipmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mipmap(Image * img, uint f, uint m)"
  },
  {
    "label": "printInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "printInfo()"
  },
  {
    "label": "blockSize()",
    "kind": "Method",
    "detail": "Function (private : uint)",
    "insertText": "blockSize()"
  },
  {
    "label": "faceSize()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "faceSize()"
  },
  {
    "label": "mipmapSize()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "mipmapSize(uint m)"
  },
  {
    "label": "offset()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "offset(uint f, uint m)"
  },
  {
    "label": "readLinearImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readLinearImage(Image * img)"
  },
  {
    "label": "readBlockImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readBlockImage(Image * img)"
  },
  {
    "label": "readBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readBlock(ColorBlock * rgba)"
  }
]