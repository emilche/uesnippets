[
  {
    "label": "Image",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Image"
  },
  {
    "label": "Stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Stream"
  },
  {
    "label": "ColorBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ColorBlock"
  },
  {
    "label": "NVIMAGE_CLASS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVIMAGE_CLASS"
  },
  {
    "label": "NVIMAGE_CLASS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVIMAGE_CLASS"
  },
  {
    "label": "NVIMAGE_CLASS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVIMAGE_CLASS"
  },
  {
    "label": "NVIMAGE_CLASS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NVIMAGE_CLASS"
  },
  {
    "label": "NVIMAGE_CLASS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NVIMAGE_CLASS"
  },
  {
    "label": "setWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setWidth(uint w)"
  },
  {
    "label": "setHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setHeight(uint h)"
  },
  {
    "label": "setDepth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDepth(uint d)"
  },
  {
    "label": "setMipmapCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMipmapCount(uint count)"
  },
  {
    "label": "setTexture2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTexture2D()"
  },
  {
    "label": "setTexture3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTexture3D()"
  },
  {
    "label": "setTextureCube()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTextureCube()"
  },
  {
    "label": "setLinearSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLinearSize(uint size)"
  },
  {
    "label": "setPitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPitch(uint pitch)"
  },
  {
    "label": "setFourCC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setFourCC(uint8 c0, uint8 c1, uint8 c2, uint8 c3)"
  },
  {
    "label": "setPixelFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPixelFormat(uint bitcount, uint rmask, uint gmask, uint bmask, uint amask)"
  },
  {
    "label": "setDX10Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDX10Format(uint format)"
  },
  {
    "label": "setNormalFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setNormalFlag(bool b)"
  },
  {
    "label": "swapBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "swapBytes()"
  },
  {
    "label": "DirectDrawSurface()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DirectDrawSurface(const char * file)"
  },
  {
    "label": "setNormalFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setNormalFlag(bool b)"
  },
  {
    "label": "mipmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mipmap(Image * img, uint f, uint m)"
  },
  {
    "label": "mipmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mipmap(FloatImage * img, uint f, uint m)"
  },
  {
    "label": "offset()",
    "kind": "Method",
    "detail": "Function (uint)",
    "insertText": "offset(uint f, uint m)"
  },
  {
    "label": "readLinearImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readLinearImage(Image * img)"
  },
  {
    "label": "readBlockImage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readBlockImage(Image * img)"
  },
  {
    "label": "readBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "readBlock(ColorBlock * rgba)"
  }
]