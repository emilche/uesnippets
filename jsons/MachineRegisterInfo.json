[
  {
    "label": "PSetIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PSetIterator"
  },
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "Delegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Delegate"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "defusechain_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defusechain_iterator"
  },
  {
    "label": "defusechain_instr_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defusechain_instr_iterator"
  },
  {
    "label": "defusechain_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defusechain_iterator"
  },
  {
    "label": "defusechain_instr_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defusechain_instr_iterator"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "exists",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "exists"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "defusechain_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defusechain_iterator"
  },
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "defusechain_instr_iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "defusechain_instr_iterator"
  },
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "PSetIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PSetIterator"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "anchor()"
  },
  {
    "label": "MachineRegisterInfo()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "MachineRegisterInfo(const MachineFunction *MF)"
  },
  {
    "label": "addRegOperandToUseList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addRegOperandToUseList(MachineOperand *MO)"
  },
  {
    "label": "removeRegOperandFromUseList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeRegOperandFromUseList(MachineOperand *MO)"
  },
  {
    "label": "moveOperands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "moveOperands(MachineOperand *Dst, MachineOperand *Src, unsigned NumOps)"
  },
  {
    "label": "reg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "reg_iterator(nullptr)"
  },
  {
    "label": "reg_instr_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "reg_instr_iterator(nullptr)"
  },
  {
    "label": "reg_bundle_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "reg_bundle_iterator(nullptr)"
  },
  {
    "label": "reg_nodbg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "reg_nodbg_iterator(nullptr)"
  },
  {
    "label": "reg_instr_nodbg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "reg_instr_nodbg_iterator(nullptr)"
  },
  {
    "label": "reg_bundle_nodbg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "reg_bundle_nodbg_iterator(nullptr)"
  },
  {
    "label": "def_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "def_iterator(nullptr)"
  },
  {
    "label": "def_instr_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "def_instr_iterator(nullptr)"
  },
  {
    "label": "def_bundle_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "def_bundle_iterator(nullptr)"
  },
  {
    "label": "use_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_iterator(nullptr)"
  },
  {
    "label": "use_instr_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_instr_iterator(nullptr)"
  },
  {
    "label": "use_bundle_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_bundle_iterator(nullptr)"
  },
  {
    "label": "use_nodbg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_nodbg_iterator(nullptr)"
  },
  {
    "label": "use_instr_nodbg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_instr_nodbg_iterator(nullptr)"
  },
  {
    "label": "use_bundle_nodbg_iterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "use_bundle_nodbg_iterator(nullptr)"
  },
  {
    "label": "replaceRegWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replaceRegWith(unsigned FromReg, unsigned ToReg)"
  },
  {
    "label": "setRegClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setRegClass(unsigned Reg, const TargetRegisterClass *RC)"
  },
  {
    "label": "recomputeRegClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "recomputeRegClass(unsigned Reg)"
  },
  {
    "label": "createVirtualRegister()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "createVirtualRegister(const TargetRegisterClass *RegClass)"
  },
  {
    "label": "clearVirtRegs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clearVirtRegs()"
  },
  {
    "label": "freezeReservedRegs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "freezeReservedRegs(const MachineFunction&)"
  },
  {
    "label": "EmitLiveInCopies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLiveInCopies(MachineBasicBlock *EntryMBB,\n                        const TargetRegisterInfo &TRI,\n                        const TargetInstrInfo &TII)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (Preincrement)",
    "insertText": "assert(Op && \"Cannot increment end iterator!\")"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (Preincrement)",
    "insertText": "assert(Op && \"Cannot increment end iterator!\")"
  },
  {
    "label": "PSetIterator()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "PSetIterator(RegUnit, this)"
  }
]