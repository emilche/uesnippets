[
  {
    "label": "FStreamingTextureLevelContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingTextureLevelContext"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FStreamingRenderAssetPrimitiveInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingRenderAssetPrimitiveInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRenderAssetInstanceState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetInstanceState"
  },
  {
    "label": "FRenderAssetLinkIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetLinkIterator"
  },
  {
    "label": "FRenderAssetIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetIterator"
  },
  {
    "label": "FRenderAssetInstanceStateTaskSync",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetInstanceStateTaskSync"
  },
  {
    "label": "FRenderAssetDynamicInstanceStateTaskSync",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderAssetDynamicInstanceStateTaskSync"
  },
  {
    "label": "FRenderAssetInstanceState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" TextureInstanceView . h \" # include \" Streaming / TextureStreamingHelpers . h \" # include \" Containers / ArrayView . h \" class FStreamingTextureLevelContext ; class ULevel ; class UPrimitiveComponent ; struct FStreamingRenderAssetPrimitiveInfo ; enum class EAddComponentResult : uint8 { Fail,Fail_UIDensityConstraint,Success } ; class FRenderAssetInstanceState : public FRenderAssetInstanceView { public :)",
    "insertText": "FRenderAssetInstanceState(bool bForDynamicInstances)"
  },
  {
    "label": "AddComponent()",
    "kind": "Method",
    "detail": "Function (EAddComponentResult)",
    "insertText": "AddComponent(const UPrimitiveComponent* Component, FStreamingTextureLevelContext& LevelContext, float MaxAllowedUIDensity)"
  },
  {
    "label": "AddComponentIgnoreBounds()",
    "kind": "Method",
    "detail": "Function (EAddComponentResult)",
    "insertText": "AddComponentIgnoreBounds(const UPrimitiveComponent* Component, FStreamingTextureLevelContext& LevelContext)"
  },
  {
    "label": "RemoveComponent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveComponent(const UPrimitiveComponent* Component, FRemovedRenderAssetArray* RemovedRenderAssets)"
  },
  {
    "label": "RemoveComponentReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveComponentReferences(const UPrimitiveComponent* Component)"
  },
  {
    "label": "FlushPendingRemoveComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPendingRemoveComponents(FRemovedRenderAssetArray& RemovedRenderAssets)"
  },
  {
    "label": "GetReferencedComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencedComponents(TArray<const UPrimitiveComponent*>& Components)"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBounds(const UPrimitiveComponent* Component)"
  },
  {
    "label": "UpdateBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateBounds(int32 BoundIndex)"
  },
  {
    "label": "ConditionalUpdateBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConditionalUpdateBounds(int32 BoundIndex)"
  },
  {
    "label": "UpdateLastRenderTimeAndMaxDrawDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLastRenderTimeAndMaxDrawDistance(int32 BoundIndex)"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "CompileElements()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CompileElements()"
  },
  {
    "label": "CheckRegistrationAndUnpackBounds()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CheckRegistrationAndUnpackBounds(TArray<const UPrimitiveComponent*>& RemovedComponents)"
  },
  {
    "label": "MoveBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MoveBound(int32 SrcBoundIndex, int32 DstBoundIndex)"
  },
  {
    "label": "TrimBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimBounds()"
  },
  {
    "label": "OffsetBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OffsetBounds(const FVector& Offset)"
  },
  {
    "label": "HasComponent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasComponent(int32 BoundIndex)"
  },
  {
    "label": "AddElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddElement(const UPrimitiveComponent* Component, const UStreamableRenderAsset* Asset, int BoundsIndex, float TexelFactor, bool bForceLoad, int32*& ComponentLink)"
  },
  {
    "label": "RemoveElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveElement(int32 ElementIndex, int32& NextComponentLink, int32& BoundsIndex, const UStreamableRenderAsset*& Asset)"
  },
  {
    "label": "AddBounds()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddBounds(const FBoxSphereBounds& Bounds, uint32 PackedRelativeBox, const UPrimitiveComponent* Component, float LastRenderTime, const FVector4& RangeOrigin, float MinDistanceSq, float MinRangeSq, float MaxRangeSq)"
  },
  {
    "label": "RemoveBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBounds(int32 Index)"
  },
  {
    "label": "AddRenderAssetElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRenderAssetElements(const UPrimitiveComponent* Component, const TArrayView<FStreamingRenderAssetPrimitiveInfo>& RenderAssetInstanceInfos, int32 BoundsIndex, int32*& ComponentLink)"
  },
  {
    "label": "FRenderAssetInstanceStateTaskSync()",
    "kind": "Method",
    "detail": "Function (private : const bool bIsDynamicInstanceState ; TArray<const UPrimitiveComponent*> Bounds4Components ; TArray<int32> FreeBoundIndices ; TArray<int32> FreeElementIndices ; TArray<int32> BoundsToUnpack ; TArray<FRemovedComponentHandle> PendingRemoveComponents ; TMap<const UPrimitiveComponent*,int32> ComponentMap ; class FRenderAssetLinkIterator ; class FRenderAssetIterator ; } ; template<TTasks> class FRenderAssetInstanceStateTaskSync { public :)",
    "insertText": "FRenderAssetInstanceStateTaskSync() : FRenderAssetInstanceStateTaskSync(false)"
  },
  {
    "label": "Sync()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Sync()"
  },
  {
    "label": "SyncResults()",
    "kind": "Method",
    "detail": "Function (Tasks .)",
    "insertText": "SyncResults()"
  },
  {
    "label": "SyncAndGetState()",
    "kind": "Method",
    "detail": "Function (} FRenderAssetInstanceState*)",
    "insertText": "SyncAndGetState()"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (} const FRenderAssetInstanceState*)",
    "insertText": "GetState()"
  },
  {
    "label": "GetStateUnsafe()",
    "kind": "Method",
    "detail": "Function (} FRenderAssetInstanceState*)",
    "insertText": "GetStateUnsafe()"
  },
  {
    "label": "GetTasks()",
    "kind": "Method",
    "detail": "Function (} TTasks&)",
    "insertText": "GetTasks()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (} TRefCountPtr<FRenderAssetInstanceState> State ; TTasks Tasks ; } ; template<TTasks> class FRenderAssetDynamicInstanceStateTaskSync : public FRenderAssetInstanceStateTaskSync<TTasks> { public : using Super = FRenderAssetInstanceStateTaskSync<TTasks> ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSyncDone, const FRemovedRenderAssetArray&)"
  },
  {
    "label": "FRenderAssetDynamicInstanceStateTaskSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRenderAssetDynamicInstanceStateTaskSync(FOnSyncDone&& InOnSyncDoneDelegate) : Super(true) , OnSyncDoneDelegate(InOnSyncDoneDelegate)"
  }
]