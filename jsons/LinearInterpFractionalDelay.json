[
  {
    "label": "FLinearInterpFractionalDelay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinearInterpFractionalDelay"
  },
  {
    "label": "FLinearInterpFractionalDelay()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / AlignedBlockBuffer . h \" namespace Audio { class FLinearInterpFractionalDelay { public :)",
    "insertText": "FLinearInterpFractionalDelay(int32 InMaxDelay, int32 InMaxNumInternalBufferSamples)"
  },
  {
    "label": "FLinearInterpFractionalDelay()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLinearInterpFractionalDelay()"
  },
  {
    "label": "ProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudio(const FAlignedFloatBuffer& InSamples, const FAlignedFloatBuffer& InDelays, FAlignedFloatBuffer& OutSamples)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ProcessAudioBlock()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ProcessAudioBlock(const float* InSamples, const float* InDelays, const int32 InNum, float* OutSamples)"
  }
]