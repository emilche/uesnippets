[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "IPropertyTypeCustomizationUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomizationUtils"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SColorPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorPicker"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "DETAILCUSTOMIZATIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DETAILCUSTOMIZATIONS_API"
  },
  {
    "label": "FLinearOrSrgbColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearOrSrgbColor"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" IPropertyTypeCustomization . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" MathStructCustomizations . h \" # include \" Misc / Optional . h \" # include \" PropertyEditorModule . h \" # include \" PropertyHandle . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / SWidget . h \" class FDetailWidgetRow ; class IPropertyHandle ; class IPropertyTypeCustomization ; class IPropertyTypeCustomizationUtils ; class SBorder ; class SColorPicker ; class SWidget ; class SWindow ; struct FGeometry ; struct FPointerEvent ; class FColorStructCustomization : public FMathStructCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FColorStructCustomization()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FColorStructCustomization()"
  },
  {
    "label": "FColorStructCustomization()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FColorStructCustomization() : bIgnoreAlpha(false) , bIsInlineColorPickerVisible(false) , bIsInteractive(false) , bDontUpdateWhileEditing(false)"
  },
  {
    "label": "GetColorAsLinear()",
    "kind": "Method",
    "detail": "Function (} protected : struct FLinearOrSrgbColor ; FPropertyAccess::Result)",
    "insertText": "GetColorAsLinear(FLinearColor& InColor)"
  },
  {
    "label": "TypeSupportsAlpha()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TypeSupportsAlpha()"
  },
  {
    "label": "SetLastPickerColorString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastPickerColorString(const FLinearColor NewColor)"
  },
  {
    "label": "ConvertToPerObjectColors()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "ConvertToPerObjectColors(const TArray<FLinearOrSrgbColor>& Colors)"
  },
  {
    "label": "CreateColorWidget()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "CreateColorWidget(TWeakPtr<IPropertyHandle>)"
  },
  {
    "label": "GetMultipleValuesTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetMultipleValuesTextVisibility()"
  },
  {
    "label": "CreateColorPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateColorPicker(bool bUseAlpha)"
  },
  {
    "label": "CreateInlineColorPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SColorPicker>)",
    "insertText": "CreateInlineColorPicker(TWeakPtr<IPropertyHandle>)"
  },
  {
    "label": "OnSetColorFromColorPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetColorFromColorPicker(FLinearColor NewColor)"
  },
  {
    "label": "ResetColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetColors()"
  },
  {
    "label": "OnColorPickerCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerCancelled(FLinearColor OriginalColor)"
  },
  {
    "label": "OnColorPickerWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerWindowClosed(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "OnColorPickerInteractiveBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerInteractiveBegin()"
  },
  {
    "label": "OnColorPickerInteractiveEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerInteractiveEnd()"
  },
  {
    "label": "OnGetColorForColorBlock()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "OnGetColorForColorBlock()"
  },
  {
    "label": "OnGetSlateColorForBlock()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "OnGetSlateColorForBlock()"
  },
  {
    "label": "GetColorWidgetBorderColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorWidgetBorderColor()"
  },
  {
    "label": "OnMouseButtonDownColorBlock()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDownColorBlock(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnOpenFullColorPickerClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnOpenFullColorPickerClicked()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "MakeHeaderRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeHeaderRow(TSharedRef<IPropertyHandle>& InStructPropertyHandle, FDetailWidgetRow& Row)"
  },
  {
    "label": "GetSortedChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSortedChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, TArray< TSharedRef<IPropertyHandle> >& OutChildren)"
  },
  {
    "label": "FLinearOrSrgbColor()",
    "kind": "Method",
    "detail": "Function (protected : struct FLinearOrSrgbColor {)",
    "insertText": "FLinearOrSrgbColor(const FLinearColor& InLinearColor) : LinearColor(InLinearColor)"
  },
  {
    "label": "FLinearOrSrgbColor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FLinearOrSrgbColor(const FColor& InSrgbColor) : SrgbColor(InSrgbColor)"
  },
  {
    "label": "GetLinear()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetLinear()"
  }
]