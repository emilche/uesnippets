[
  {
    "label": "FBlackboardDecoratorDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlackboardDecoratorDetails"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBehaviorTreeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeComponent"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UBlackboardData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardData"
  },
  {
    "label": "UBlackboardKeyType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardKeyType"
  },
  {
    "label": "UBTAuxiliaryNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTAuxiliaryNode"
  },
  {
    "label": "UBTCompositeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTCompositeNode"
  },
  {
    "label": "UBTNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTNode"
  },
  {
    "label": "UBTTaskNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTTaskNode"
  },
  {
    "label": "FBehaviorTreeSearchData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeSearchData"
  },
  {
    "label": "TIsValidVariadicFunctionArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsValidVariadicFunctionArg"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FBehaviorTreeParallelTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeParallelTask"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FBehaviorTreeDebuggerInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeDebuggerInstance"
  },
  {
    "label": "FNodeFlowData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeFlowData"
  },
  {
    "label": "FBehaviorTreeExecutionStep",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeExecutionStep"
  },
  {
    "label": "FBehaviorTreeInstanceId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeInstanceId"
  },
  {
    "label": "FBehaviorTreeSearchData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeSearchData"
  },
  {
    "label": "FBehaviorTreeInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeInstance"
  },
  {
    "label": "FBTNodeIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTNodeIndex"
  },
  {
    "label": "FBTNodeIndexRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTNodeIndexRange"
  },
  {
    "label": "FBehaviorTreeSearchUpdate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeSearchUpdate"
  },
  {
    "label": "FBehaviorTreeSearchUpdateNotify",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeSearchUpdateNotify"
  },
  {
    "label": "FBehaviorTreeSearchData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreeSearchData"
  },
  {
    "label": "FBehaviorTreePropertyMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBehaviorTreePropertyMemory"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FBlackboardKeySelector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlackboardKeySelector"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UBehaviorTreeTypes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeTypes"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FScopedBTLoggingContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedBTLoggingContext"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (defines)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnBlackboardChange, const UBlackboardComponent&, FBlackboard::FKey /*key ID*/)"
  },
  {
    "label": "FBehaviorTreeInstance()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FBehaviorTreeInstance()"
  },
  {
    "label": "FBehaviorTreeInstance()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FBehaviorTreeInstance(const FBehaviorTreeInstance& Other)"
  },
  {
    "label": "FBehaviorTreeInstance()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FBehaviorTreeInstance(FBehaviorTreeInstance&& Other)"
  },
  {
    "label": "FBehaviorTreeInstance()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "FBehaviorTreeInstance(int32 MemorySize)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UBehaviorTreeComponent& OwnerComp, UBTCompositeNode& Node, int32& InstancedIndex, EBTMemoryInit::Type InitType)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup(UBehaviorTreeComponent& OwnerComp, EBTMemoryClear::Type CleanupType)"
  },
  {
    "label": "DeactivateNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateNodes(FBehaviorTreeSearchData& SearchData, uint16 InstanceIndex)"
  },
  {
    "label": "AddToActiveAuxNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToActiveAuxNodes(UBTAuxiliaryNode* AuxNode)"
  },
  {
    "label": "AddToActiveAuxNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToActiveAuxNodes(UBehaviorTreeComponent& OwnerComp, UBTAuxiliaryNode* AuxNode)"
  },
  {
    "label": "RemoveFromActiveAuxNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromActiveAuxNodes(UBTAuxiliaryNode* AuxNode)"
  },
  {
    "label": "RemoveFromActiveAuxNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromActiveAuxNodes(UBehaviorTreeComponent& OwnerComp, UBTAuxiliaryNode* AuxNode)"
  },
  {
    "label": "ResetActiveAuxNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetActiveAuxNodes()"
  },
  {
    "label": "AddToParallelTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToParallelTasks(FBehaviorTreeParallelTask&& ParallelTask)"
  },
  {
    "label": "RemoveParallelTaskAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveParallelTaskAt(int32 TaskIndex)"
  },
  {
    "label": "MarkParallelTaskAsAbortingAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkParallelTaskAsAbortingAt(int32 TaskIndex)"
  },
  {
    "label": "SetInstanceMemory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceMemory(const TArray<uint8>& Memory)"
  },
  {
    "label": "CleanupNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupNodes(UBehaviorTreeComponent& OwnerComp, UBTCompositeNode& Node, EBTMemoryClear::Type CleanupType)"
  },
  {
    "label": "AddToActiveAuxNodesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToActiveAuxNodesImpl(UBTAuxiliaryNode* AuxNode)"
  },
  {
    "label": "RemoveFromActiveAuxNodesImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromActiveAuxNodesImpl(UBTAuxiliaryNode* AuxNode)"
  },
  {
    "label": "AddUniqueUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUniqueUpdate(const FBehaviorTreeSearchUpdate& UpdateInfo)"
  },
  {
    "label": "AssignSearchId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignSearchId()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "InitSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSelection(const UBlackboardData& BlackboardAsset)"
  },
  {
    "label": "ResolveSelectedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveSelectedKey(const UBlackboardData& BlackboardAsset)"
  },
  {
    "label": "AddObjectFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectFilter(UObject* Owner, FName PropertyName, TSubclassOf<UObject> AllowedClass)"
  },
  {
    "label": "AddClassFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClassFilter(UObject* Owner, FName PropertyName, TSubclassOf<UObject> AllowedClass)"
  },
  {
    "label": "AddEnumFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEnumFilter(UObject* Owner, FName PropertyName, UEnum* AllowedEnum)"
  },
  {
    "label": "AddNativeEnumFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNativeEnumFilter(UObject* Owner, FName PropertyName, const FString& AllowedEnumName)"
  },
  {
    "label": "AddIntFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIntFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddFloatFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFloatFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddBoolFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBoolFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddVectorFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVectorFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddRotatorFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRotatorFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddStringFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStringFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddNameFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNameFilter(UObject* Owner, FName PropertyName)"
  },
  {
    "label": "AddStructFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStructFilter(UObject* Owner, FName PropertyName, const UScriptStruct* AllowedStruct)"
  },
  {
    "label": "DescribeNodeHelper()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeNodeHelper(const UBTNode* Node)"
  },
  {
    "label": "DescribeNodeResult()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeNodeResult(EBTNodeResult::Type NodeResult)"
  },
  {
    "label": "DescribeFlowAbortMode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeFlowAbortMode(EBTFlowAbortMode::Type FlowAbortMode)"
  },
  {
    "label": "DescribeActiveNode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeActiveNode(EBTActiveNode::Type ActiveNodeType)"
  },
  {
    "label": "DescribeTaskStatus()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeTaskStatus(EBTTaskStatus::Type TaskStatus)"
  },
  {
    "label": "DescribeNodeUpdateMode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DescribeNodeUpdateMode(EBTNodeUpdateMode::Type UpdateMode)"
  },
  {
    "label": "GetShortTypeName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetShortTypeName(const UObject* Ob)"
  },
  {
    "label": "SetBTLoggingContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBTLoggingContext(const UBTNode* NewBTLoggingContext)"
  }
]