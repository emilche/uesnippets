[
  {
    "label": "FBlueprintActionDatabaseRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionDatabaseRegistrar"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UK2Node_SwitchEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_SwitchEnum"
  },
  {
    "label": "UEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnum"
  },
  {
    "label": "FSearchTagDataPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchTagDataPair"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" EdGraph / EdGraphNode . h \" # include \" EdGraph / EdGraphNodeUtils . h \" # include \" EdGraph / EdGraphPin . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node . h \" # include \" K2Node_Switch . h \" # include \" NodeDependingOnEnumInterface . h \" # include \" UObject / Class . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_SwitchEnum . generated . h \" class FBlueprintActionDatabaseRegistrar ; class FName ; class FString ; class UObject ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "GetEnum()",
    "kind": "Method",
    "detail": "Function (class UEnum*)",
    "insertText": "GetEnum()"
  },
  {
    "label": "ShouldBeReconstructedAfterEnumChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldBeReconstructedAfterEnumChanged()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "AddPinSearchMetaDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPinSearchMetaDataInfo(const UEdGraphPin* Pin, TArray<struct FSearchTagDataPair>& OutTaggedMetaData)"
  },
  {
    "label": "ValidateNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateNodeDuringCompilation(FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "IsConnectionDisallowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionDisallowed(const UEdGraphPin* MyPin, const UEdGraphPin* OtherPin, FString& OutReason)"
  },
  {
    "label": "GetMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "CanEverRemoveExecutionPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEverRemoveExecutionPin()"
  },
  {
    "label": "GetPinType()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "GetPinType()"
  },
  {
    "label": "AddPinToSwitchNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPinToSwitchNode()"
  },
  {
    "label": "RemovePinFromSwitchNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePinFromSwitchNode(UEdGraphPin* TargetPin)"
  },
  {
    "label": "DoPinsMatchForReconstruction()",
    "kind": "Method",
    "detail": "Function (ERedirectType)",
    "insertText": "DoPinsMatchForReconstruction(const UEdGraphPin* NewPin, int32 NewPinIndex, const UEdGraphPin* OldPin, int32 OldPinIndex)"
  },
  {
    "label": "SupportsAddPinButton()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsAddPinButton()"
  },
  {
    "label": "CreateCasePins()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CreateCasePins()"
  },
  {
    "label": "CreateSelectionPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSelectionPin()"
  },
  {
    "label": "RemovePin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePin(UEdGraphPin* TargetPin)"
  }
]