[
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FPrimitiveSceneShaderData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveSceneShaderData"
  },
  {
    "label": "FSinglePrimitiveStructured",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSinglePrimitiveStructured"
  },
  {
    "label": "FPrimitiveSceneShaderData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneDefinitions . h \" # include \" Containers / StaticArray . h \" # include \" InstanceUniformShaderParameters . h \" # include \" LightmapUniformShaderParameters . h \" # if ! UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_3 # include \" PrimitiveUniformShaderParameters . h \" # endif class FPrimitiveSceneProxy ; struct FPrimitiveSceneShaderData { const uint32 DataStrideInFloat4s = PRIMITIVE_SCENE_DATA_STRIDE ; TStaticArray<FVector4f,DataStrideInFloat4s> Data ;)",
    "insertText": "FPrimitiveSceneShaderData() : Data(InPlace, NoInit)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(GetIdentityPrimitiveParameters())"
  },
  {
    "label": "FPrimitiveSceneShaderData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPrimitiveSceneShaderData(const FPrimitiveUniformShaderParameters& PrimitiveUniformShaderParameters) : Data(InPlace, NoInit)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(PrimitiveUniformShaderParameters)"
  },
  {
    "label": "FPrimitiveSceneShaderData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPrimitiveSceneShaderData(const FPrimitiveSceneProxy* RESTRICT Proxy)"
  },
  {
    "label": "BuildDataFromProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildDataFromProxy(const FPrimitiveSceneProxy* RESTRICT Proxy, FVector4f* RESTRICT OutData)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(const FPrimitiveUniformShaderParameters& PrimitiveUniformShaderParameters, FVector4f* RESTRICT OutData)"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(const FPrimitiveUniformShaderParameters& PrimitiveUniformShaderParameters)"
  },
  {
    "label": "FSinglePrimitiveStructured()",
    "kind": "Method",
    "detail": "Function (} ; class FSinglePrimitiveStructured : public FRenderResource { public :)",
    "insertText": "FSinglePrimitiveStructured()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (SkyIrradianceEnvironmentMapRHI .)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "UploadToGPU()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UploadToGPU(FRHICommandListBase& RHICmdList)"
  }
]