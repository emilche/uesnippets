[
  {
    "label": "FAVIWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAVIWriter"
  },
  {
    "label": "FCapturePin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCapturePin"
  },
  {
    "label": "FCaptureSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCaptureSource"
  },
  {
    "label": "warning()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / ThreadSafeBool . h \" class FAVIWriter ; # if PLATFORM_WINDOWS&& WITH_UNREAL_DEVELOPER_TOOLS typedef TCHAR* PTCHAR ; # pragma)",
    "insertText": "warning(push) #pragma warning(disable : 4263) #pragma warning(disable : 4264) #if USING_CODE_ANALYSIS #pragma warning(disable:6509) #pragma warning(disable:6101) #pragma warning(disable:28204) #endif #include \"Windows/AllowWindowsPlatformTypes.h\" THIRD_PARTY_INCLUDES_START #include <streams.h> THIRD_PARTY_INCLUDES_END #include \"Windows/HideWindowsPlatformTypes.h\" #pragma warning(pop)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (class FAVIWriter ;)",
    "insertText": "DEFINE_GUID(CLSID_ViewportCaptureSource, 0xf817f8a7, 0xde00, 0x42cf, 0x82, 0x6a, 0x7a, 0x56, 0x54, 0x60, 0x2d, 0x8e)"
  },
  {
    "label": "FCaptureSource()",
    "kind": "Method",
    "detail": "Function (class FCaptureSource : public CSource { public :)",
    "insertText": "FCaptureSource(const FAVIWriter& Writer)"
  },
  {
    "label": "FCaptureSource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCaptureSource()"
  },
  {
    "label": "StopCapturing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopCapturing()"
  },
  {
    "label": "OnFinishedCapturing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinishedCapturing()"
  },
  {
    "label": "ShouldCapture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCapture()"
  }
]