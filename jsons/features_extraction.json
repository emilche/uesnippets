[
  {
    "label": "FeaturesExtractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FeaturesExtractor"
  },
  {
    "label": "FeaturesExtractor()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_FEATURES_EXTRACTION_H_ # define MODULES_AUDIO_PROCESSING_AGC2_RNN_VAD_FEATURES_EXTRACTION_H_ # include<vector> # include \" api / array_view . h \" # include \" modules / audio_processing / agc2 / biquad_filter . h \" # include \" modules / audio_processing / agc2 / rnn_vad / common . h \" # include \" modules / audio_processing / agc2 / rnn_vad / pitch_search . h \" # include \" modules / audio_processing / agc2 / rnn_vad / sequence_buffer . h \" # include \" modules / audio_processing / agc2 / rnn_vad / spectral_features . h \" namespace webrtc { namespace rnn_vad { class FeaturesExtractor { public :)",
    "insertText": "FeaturesExtractor(const AvailableCpuFeatures& cpu_features)"
  },
  {
    "label": "FeaturesExtractor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FeaturesExtractor(const FeaturesExtractor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FeaturesExtractor&)",
    "insertText": "operator(const FeaturesExtractor&)"
  },
  {
    "label": "FeaturesExtractor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FeaturesExtractor()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "CheckSilenceComputeFeatures()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckSilenceComputeFeatures(rtc::ArrayView<const float, kFrameSize10ms24kHz> samples, rtc::ArrayView<float, kFeatureVectorSize> feature_vector)"
  }
]