[
  {
    "label": "SPrivateAssetsDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPrivateAssetsDialog"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AssetPrivatizeModel . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Types / SlateStructs . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Layout / SBorder . h \" class SPrivateAssetsDialog : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPrivateAssetsDialog)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr<SWindow>, ParentWindow) SLATE_END_ARGS() public: virtual ~SPrivateAssetsDialog()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FAssetPrivatizeModel> InPrivatizeModel)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "BuildProgressDialog()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "BuildProgressDialog()"
  },
  {
    "label": "BuildPrivatizeDialog()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildPrivatizeDialog()"
  },
  {
    "label": "BuildAssetViewForReferencerAssets()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildAssetViewForReferencerAssets()"
  },
  {
    "label": "TickPrivatizeModel()",
    "kind": "Method",
    "detail": "Function (private : EActiveTimerReturnType)",
    "insertText": "TickPrivatizeModel(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "HandlePrivatizeModelStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePrivatizeModelStateChanged(FAssetPrivatizeModel::EState NewState)"
  },
  {
    "label": "OnShouldFilterAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnShouldFilterAsset(const FAssetData& InAssetData)"
  },
  {
    "label": "Privatize()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Privatize()"
  },
  {
    "label": "ForcePrivatize()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ForcePrivatize()"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Cancel()"
  },
  {
    "label": "GetWarningText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWarningText()"
  },
  {
    "label": "GetWarningTextVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetWarningTextVisibility()"
  },
  {
    "label": "GetAssetReferencesVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetAssetReferencesVisibility()"
  },
  {
    "label": "ScanningText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ScanningText()"
  },
  {
    "label": "ScanningProgressFraction()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "ScanningProgressFraction()"
  },
  {
    "label": "HandleGenerateAssetRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleGenerateAssetRow(TSharedPtr<FPendingPrivateAsset> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  }
]