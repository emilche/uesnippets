[
  {
    "label": "EtwMofEventBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EtwMofEventBase"
  },
  {
    "label": "EtwMofEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EtwMofEvent"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "EtwMofEvent()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_WIN_EVENT_TRACE_PROVIDER_H_ # define BASE_WIN_EVENT_TRACE_PROVIDER_H_ # include<windows . h> # include<cguid . h> # include<evntrace . h> # include<stddef . h> # include<stdint . h> # include<wmistr . h> # include<limits> # include \" base / base_export . h \" namespace base { namespace win { using EtwEventClass = GUID ; using EtwEventType = UCHAR ; using EtwEventLevel = UCHAR ; using EtwEventVersion = USHORT ; using EtwEventFlags = ULONG ; template<size_t N> struct EtwMofEventBase { EVENT_TRACE_HEADER header ; MOF_FIELD fields [ N ] ; } ; template<size_t N> class EtwMofEvent : public EtwMofEventBase<N> { public : using Super = EtwMofEventBase<N> ; using EtwMofEventBase<N>::header ; using EtwMofEventBase<N>::fields ;)",
    "insertText": "EtwMofEvent()"
  },
  {
    "label": "memset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memset(static_cast<Super*>(this), 0, sizeof(Super))"
  },
  {
    "label": "EtwMofEvent()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "EtwMofEvent(const EtwEventClass& event_class, EtwEventType type, EtwEventLevel level)"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (header . Size =)",
    "insertText": "sizeof(Super)"
  },
  {
    "label": "EtwMofEvent()",
    "kind": "Method",
    "detail": "Function (header . Guid = event_class ; header . Class . Type = type ; header . Class . Level = level ; header . Flags = WNODE_FLAG_TRACED_GUID | WNODE_FLAG_USE_MOF_PTR ; })",
    "insertText": "EtwMofEvent(const EtwEventClass& event_class, EtwEventType type, EtwEventVersion version, EtwEventLevel level)"
  },
  {
    "label": "EtwMofEvent()",
    "kind": "Method",
    "detail": "Function (header . Guid = event_class ; header . Class . Type = type ; header . Class . Version = version ; header . Class . Level = level ; header . Flags = WNODE_FLAG_TRACED_GUID | WNODE_FLAG_USE_MOF_PTR ; })",
    "insertText": "EtwMofEvent(const EtwMofEvent&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EtwMofEvent&)",
    "insertText": "operator(const EtwMofEvent&)"
  },
  {
    "label": "SetField()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetField(size_t field, size_t size, const void* data)"
  },
  {
    "label": "ULONG64()",
    "kind": "Method",
    "detail": "Function (fields [ field ] . DataPtr = reinterpret_cast<)",
    "insertText": "ULONG64(data)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (fields [ field ] . Length = static_cast<)",
    "insertText": "ULONG(size)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} } EVENT_TRACE_HEADER*)",
    "insertText": "get()"
  },
  {
    "label": "EtwTraceProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EtwTraceProvider()"
  },
  {
    "label": "EtwTraceProvider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EtwTraceProvider(const EtwTraceProvider&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EtwTraceProvider&)",
    "insertText": "operator(const EtwTraceProvider&)"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (ULONG)",
    "insertText": "Register()"
  },
  {
    "label": "Unregister()",
    "kind": "Method",
    "detail": "Function (ULONG)",
    "insertText": "Unregister()"
  },
  {
    "label": "set_provider_name()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "set_provider_name(const GUID& provider_name)"
  },
  {
    "label": "provider_name()",
    "kind": "Method",
    "detail": "Function (provider_name_ = provider_name ; } const GUID&)",
    "insertText": "provider_name()"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (} ULONG)",
    "insertText": "Log(const EtwEventClass& event_class, EtwEventType type, EtwEventLevel level, const char* message)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (ULONG)",
    "insertText": "Log(const EtwEventClass& event_class, EtwEventType type, EtwEventLevel level, const wchar_t* message)"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (ULONG)",
    "insertText": "Log(EVENT_TRACE_HEADER* event)"
  },
  {
    "label": "OnEventsEnabled()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnEventsEnabled()"
  },
  {
    "label": "OnEventsDisabled()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnEventsDisabled()"
  },
  {
    "label": "PostEventsDisabled()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostEventsDisabled()"
  },
  {
    "label": "EnableEvents()",
    "kind": "Method",
    "detail": "Function (} private : ULONG)",
    "insertText": "EnableEvents(PVOID buffer)"
  },
  {
    "label": "DisableEvents()",
    "kind": "Method",
    "detail": "Function (ULONG)",
    "insertText": "DisableEvents()"
  },
  {
    "label": "Callback()",
    "kind": "Method",
    "detail": "Function (ULONG)",
    "insertText": "Callback(WMIDPREQUESTCODE request, PVOID buffer)"
  },
  {
    "label": "ControlCallback()",
    "kind": "Method",
    "detail": "Function (ULONG WINAPI)",
    "insertText": "ControlCallback(WMIDPREQUESTCODE request, PVOID context, ULONG* reserved, PVOID buffer)"
  }
]