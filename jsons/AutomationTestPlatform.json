[
  {
    "label": "UAutomationTestPlatformSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAutomationTestPlatformSettings"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / SubclassOf . h \" # include \" AutomationTestPlatform . generated . h \")",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UAutomationTestPlatformSettings()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} UAutomationTestPlatformSettings*)",
    "insertText": "Create(TSubclassOf<UAutomationTestPlatformSettings> SettingsClass, const FString PlatformName)"
  },
  {
    "label": "OverrideConfigSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideConfigSection(FString& SectionName)"
  },
  {
    "label": "GetConfigOverridePlatform()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetConfigOverridePlatform()"
  },
  {
    "label": "LoadConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadConfig()"
  },
  {
    "label": "GetConfigFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetConfigFilename()"
  },
  {
    "label": "GetPlatformName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetPlatformName()"
  },
  {
    "label": "InitializeSettingsDefault()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "InitializeSettingsDefault()"
  },
  {
    "label": "GetSectionName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetSectionName()"
  },
  {
    "label": "GetAllAvailablePlatformNames()",
    "kind": "Method",
    "detail": "Function (} private : FString PlatformName ; } ; namespace AutomationTestPlatform { const TSet<FName>&)",
    "insertText": "GetAllAvailablePlatformNames()"
  },
  {
    "label": "GetAllPlatformsSettings()",
    "kind": "Method",
    "detail": "Function (TArray<UAutomationTestPlatformSettings*>&)",
    "insertText": "GetAllPlatformsSettings(TSubclassOf<UAutomationTestPlatformSettings> SettingsClass)"
  }
]