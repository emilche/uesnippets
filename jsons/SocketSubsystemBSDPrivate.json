[
  {
    "label": "timeval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "timeval"
  },
  {
    "label": "closesocket()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SocketSubsystem . h \" # if PLATFORM_HAS_BSD_SOCKET_FEATURE_WINSOCKETS # include \" Windows / AllowWindowsPlatformTypes . h \" # include<winsock2 . h> # include<ws2tcpip . h> typedef int32 SOCKLEN ; # include \" Windows / HideWindowsPlatformTypes . h \" # else # ifdef UE_SOCKET_API_WRAPPER # include UE_SOCKET_API_WRAPPER # else # include<unistd . h> # include<sys / socket . h> # if PLATFORM_HAS_BSD_SOCKET_FEATURE_IOCTL # include<fcntl . h> # include<sys / types . h> # include<sys / ioctl . h> # endif # if PLATFORM_HAS_BSD_SOCKET_FEATURE_POLL # include<poll . h> # endif # include<netinet / in . h> # include<arpa / inet . h> # if PLATFORM_HAS_BSD_SOCKET_FEATURE_GETHOSTNAME # include<netdb . h> # endif # if PLATFORM_HAS_BSD_SOCKET_FEATURE_NODELAY # include<netinet / tcp . h> # endif # define ioctlsocket ioctl # endif # define SOCKET_ERROR - 1 # define INVALID_SOCKET - 1 typedef socklen_t SOCKLEN ; typedef int32 SOCKET ; typedef sockaddr_in SOCKADDR_IN ; typedef struct timeval TIMEVAL ; int32)",
    "insertText": "closesocket(SOCKET Socket)"
  },
  {
    "label": "shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "shutdown(Socket, SHUT_RDWR)"
  },
  {
    "label": "TranslateFlags()",
    "kind": "Method",
    "detail": "Function (} # endif int)",
    "insertText": "TranslateFlags(ESocketReceiveFlags::Type Flags)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int TranslatedFlags = 0 ;)",
    "insertText": "if(Flags & ESocketReceiveFlags::Peek)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (TranslatedFlags | = MSG_PEEK ; # if PLATFORM_HAS_BSD_SOCKET_FEATURE_MSG_DONTWAIT TranslatedFlags | = MSG_DONTWAIT ; # endif })",
    "insertText": "if(Flags & ESocketReceiveFlags::WaitAll)"
  }
]