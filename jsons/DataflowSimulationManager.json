[
  {
    "label": "FDataflowSimulationProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowSimulationProxy"
  },
  {
    "label": "IDataflowSimulationInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDataflowSimulationInterface"
  },
  {
    "label": "FDataflowSimulationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataflowSimulationData"
  },
  {
    "label": "DATAFLOWSIMULATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATAFLOWSIMULATION_API"
  },
  {
    "label": "UDataflowSimulationActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataflowSimulationActor"
  },
  {
    "label": "IDataflowSimulationActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDataflowSimulationActor"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Interface . h \" # include \" Subsystems / WorldSubsystem . h \" # include \" Templates / SharedPointer . h \" # include \" Dataflow / DataflowSimulationContext . h \" # include \" DataflowSimulationManager . generated . h \" struct FDataflowSimulationProxy ; class IDataflowSimulationInterface ; namespace UE::Dataflow { namespace Private { struct FDataflowSimulationData { TMap<FString,TSet<IDataflowSimulationInterface*>> SimulationInterfaces ; TSharedPtr<UE::Dataflow::FDataflowSimulationContext> SimulationContext ; bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "UnregisterSimulationInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterSimulationInterface(const TObjectPtr<UObject>& SimulationObject)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UDataflowSimulationManager()"
  },
  {
    "label": "UDataflowSimulationManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UDataflowSimulationManager()"
  },
  {
    "label": "OnStartup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStartup()"
  },
  {
    "label": "OnShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShutdown()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "IsTickableInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickableInEditor()"
  },
  {
    "label": "DoesSupportWorldType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSupportWorldType(const EWorldType::Type WorldType)"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubsystemCollectionBase& Collection)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "AdvanceSimulationProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdvanceSimulationProxies(const float DeltaTime, const float SimulationTime)"
  },
  {
    "label": "HasSimulationInterface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSimulationInterface(const IDataflowSimulationInterface* SimulationInterface)"
  },
  {
    "label": "AddSimulationInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSimulationInterface(IDataflowSimulationInterface* SimulationInterface)"
  },
  {
    "label": "RemoveSimulationInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSimulationInterface(const IDataflowSimulationInterface* SimulationInterface)"
  },
  {
    "label": "ReadSimulationInterfaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadSimulationInterfaces(const float DeltaTime, const bool bAsyncTask)"
  },
  {
    "label": "WriteSimulationInterfaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteSimulationInterfaces(const float DeltaTime, const bool bAsyncTask)"
  },
  {
    "label": "InitSimulationInterfaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSimulationInterfaces()"
  },
  {
    "label": "ResetSimulationInterfaces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSimulationInterfaces()"
  },
  {
    "label": "CompleteSimulationTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteSimulationTasks()"
  },
  {
    "label": "StartSimulationTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartSimulationTasks(const float DeltaTime, const float SimulationTime)"
  },
  {
    "label": "SetSimulationEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSimulationEnabled(const bool bSimulationEnabled)"
  },
  {
    "label": "SetSimulationStepping()",
    "kind": "Method",
    "detail": "Function (bIsSimulationEnabled = bSimulationEnabled ; } void)",
    "insertText": "SetSimulationStepping(const bool bSimulationStepping)"
  },
  {
    "label": "GetSimulationContext()",
    "kind": "Method",
    "detail": "Function (bStepSimulationScene = bSimulationStepping ; } TSharedPtr<UE::Dataflow::FDataflowSimulationContext>)",
    "insertText": "GetSimulationContext(const TObjectPtr<UDataflow>& DataflowAsset)"
  },
  {
    "label": "PreProcessSimulation()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PreProcessSimulation(const float DeltaTime)"
  },
  {
    "label": "PostProcessSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostProcessSimulation(const float DeltaTime)"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle OnObjectPropertyChangedHandle ; FDelegateHandle OnWorldPostActorTick ; FDelegateHandle OnCreatePhysicsStateHandle ; FDelegateHandle OnDestroyPhysicsStateHandle ; TMap<TObjectPtr<UDataflow>,UE::Dataflow::Private::FDataflowSimulationData> SimulationData ; TArray<FGraphEventRef> SimulationTasks ; bool bIsSimulationEnabled = true ; bool bStepSimulationScene = false ; } ;)",
    "insertText": "UINTERFACE(MinimalAPI, Blueprintable)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class IDataflowSimulationActor {)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, BlueprintNativeEvent, Category=\"Dataflow\") void PreDataflowSimulationTick(const float SimulationTime, const float DeltaTime)"
  }
]