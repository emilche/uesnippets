[
  {
    "label": "SampleDistribution",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleDistribution"
  },
  {
    "label": "Method",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Method"
  },
  {
    "label": "Distribution",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Distribution"
  },
  {
    "label": "Sample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Sample"
  },
  {
    "label": "SampleDistribution()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_MATH_MONTECARLO_H # define NV_MATH_MONTECARLO_H # include<nvmath / Vector . h> # include<nvmath / Random . h> namespace nv { class SampleDistribution { public : enum Method { Method_Random,Method_Stratified,Method_NRook } ; enum Distribution { Distribution_Uniform,Distribution_Cosine } ;)",
    "insertText": "SampleDistribution(int num)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (m_sampleArray .)",
    "insertText": "resize(num)"
  },
  {
    "label": "redistribute()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "redistribute(Method method=Method_NRook, Distribution dist=Distribution_Cosine)"
  },
  {
    "label": "sample()",
    "kind": "Method",
    "detail": "Function (Vector2)",
    "insertText": "sample(int i)"
  },
  {
    "label": "redistributeRandom()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "redistributeRandom(const Distribution dist)"
  },
  {
    "label": "redistributeStratified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "redistributeStratified(const Distribution dist)"
  },
  {
    "label": "multiStageNRooks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "multiStageNRooks(const int size, int* cells)"
  },
  {
    "label": "redistributeNRook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "redistributeNRook(const Distribution dist)"
  },
  {
    "label": "setDir()",
    "kind": "Method",
    "detail": "Function (struct Sample { void)",
    "insertText": "setDir(float x, float y, float z)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (dir .)",
    "insertText": "set(x, y, z)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (uv .)",
    "insertText": "set(acosf(z), atan2f(y, x))"
  },
  {
    "label": "setUV()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setUV(float u, float v)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (uv .)",
    "insertText": "set(u, v)"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (dir .)",
    "insertText": "set(sinf(u) * cosf(v), sinf(u) * sinf(v), cosf(u))"
  }
]