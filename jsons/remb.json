[
  {
    "label": "CommonHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommonHeader"
  },
  {
    "label": "Remb",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Remb"
  },
  {
    "label": "Remb()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_REMB_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_REMB_H_ # include<vector> # include \" modules / rtp_rtcp / source / rtcp_packet / psfb . h \" namespace webrtc { namespace rtcp { class CommonHeader ; class Remb : public Psfb { public : size_t kMaxNumberOfSsrcs = 0 xff ;)",
    "insertText": "Remb()"
  },
  {
    "label": "Remb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remb(const Remb&)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const CommonHeader& packet)"
  },
  {
    "label": "SetSsrcs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSsrcs(std::vector<uint32_t> ssrcs)"
  },
  {
    "label": "SetBitrateBps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBitrateBps(int64_t bitrate_bps)"
  },
  {
    "label": "bitrate_bps()",
    "kind": "Method",
    "detail": "Function (bitrate_bps_ = bitrate_bps ; } int64_t)",
    "insertText": "bitrate_bps()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(uint8_t* packet, size_t* index, size_t max_length, PacketReadyCallback callback)"
  },
  {
    "label": "SetMediaSsrc()",
    "kind": "Method",
    "detail": "Function (private : uint32_t kUniqueIdentifier = 0 x52454D42 ; void)",
    "insertText": "SetMediaSsrc(uint32_t)"
  },
  {
    "label": "media_ssrc()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "media_ssrc()"
  }
]