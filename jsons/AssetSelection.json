[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "IAssetFactoryInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetFactoryInterface"
  },
  {
    "label": "UActorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFactory"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UActorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFactory"
  },
  {
    "label": "AssetMarshalDefs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AssetMarshalDefs"
  },
  {
    "label": "FSelectedActorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectedActorInfo"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FActorFactoryAssetProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorFactoryAssetProxy"
  },
  {
    "label": "FMenuItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMenuItem"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FExtraPlaceAssetOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtraPlaceAssetOptions"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"UnrealEd/Assets\")"
  },
  {
    "label": "ExtractAssetDataFromDrag()",
    "kind": "Method",
    "detail": "Function (TArray<FAssetData>)",
    "insertText": "ExtractAssetDataFromDrag( const FDragDropEvent& DragDropEvent )"
  },
  {
    "label": "ExtractAssetDataFromDrag()",
    "kind": "Method",
    "detail": "Function (TArray<FAssetData>)",
    "insertText": "ExtractAssetDataFromDrag(const TSharedPtr<const FDragDropOperation>& Operation)"
  },
  {
    "label": "CanHandleAssetDrag()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "CanHandleAssetDrag( const FDragDropEvent &DragDropEvent )"
  },
  {
    "label": "IsClassPlaceable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassPlaceable(const UClass* Class)"
  },
  {
    "label": "IsChildBlueprintPlaceable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildBlueprintPlaceable(const UClass* Class)"
  },
  {
    "label": "GetSelectedAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedAssets( TArray<FAssetData>& OutSelectedAssets )"
  },
  {
    "label": "BuildSelectedActorInfo()",
    "kind": "Method",
    "detail": "Function (FSelectedActorInfo)",
    "insertText": "BuildSelectedActorInfo( const TArray<AActor*>& SelectedActors )"
  },
  {
    "label": "GetSelectedActorInfo()",
    "kind": "Method",
    "detail": "Function (FSelectedActorInfo)",
    "insertText": "GetSelectedActorInfo()"
  },
  {
    "label": "GetNumSelectedSurfaces()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSelectedSurfaces( UWorld* InWorld )"
  },
  {
    "label": "IsAnySurfaceSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnySurfaceSelected( UWorld* InWorld )"
  },
  {
    "label": "IsBuilderBrushSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBuilderBrushSelected()"
  },
  {
    "label": "IsLevelValidForActorPlacement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLevelValidForActorPlacement(ULevel* Level, TArray<FTransform>& InActorTransforms)"
  },
  {
    "label": "GenerateActorFactoryMenuItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateActorFactoryMenuItems( const FAssetData& AssetData, TArray<FMenuItem>* OutMenuItems, bool ExcludeStandAloneFactories )"
  },
  {
    "label": "IsActorValidForMaterialApplication()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorValidForMaterialApplication( AActor* TargetActor )"
  },
  {
    "label": "ApplyMaterialToActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyMaterialToActor( AActor* TargetActor, UMaterialInterface* MaterialToApply, int32 OptionalMaterialSlot = -1 )"
  },
  {
    "label": "PlaceAssetInCurrentLevel()",
    "kind": "Method",
    "detail": "Function (TArray<FTypedElementHandle>)",
    "insertText": "PlaceAssetInCurrentLevel(UObject* AssetObj, const FExtraPlaceAssetOptions& ExtraParams)"
  }
]