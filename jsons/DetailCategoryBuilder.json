[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailGroup"
  },
  {
    "label": "IDetailPropertyRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailPropertyRow"
  },
  {
    "label": "IDetailLayoutRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutRow"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "GetRowName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" Framework / SlateDelegates . h \" # include \" UObject / StructOnScope . h \" # include \" PropertyHandle . h \" # include \" IDetailCustomNodeBuilder . h \" # include \" DetailBuilderTypes . h \" # include \" PropertyEditorCopyPaste . h \" class FDetailWidgetRow ; class IDetailGroup ; class IDetailPropertyRow ; class IDetailLayoutRow { public : FName)",
    "insertText": "GetRowName()"
  },
  {
    "label": "GetCustomResetToDefault()",
    "kind": "Method",
    "detail": "Function (TOptional<FResetToDefaultOverride>)",
    "insertText": "GetCustomResetToDefault()"
  },
  {
    "label": "IDetailCategoryBuilder()",
    "kind": "Method",
    "detail": "Function (} ; namespace EPropertyLocation { enum Type { Common,Advanced,Default,} ; } class IDetailCategoryBuilder { public : ~)",
    "insertText": "IDetailCategoryBuilder()"
  },
  {
    "label": "InitiallyCollapsed()",
    "kind": "Method",
    "detail": "Function (} IDetailCategoryBuilder&)",
    "insertText": "InitiallyCollapsed(bool bShouldBeInitiallyCollapsed)"
  },
  {
    "label": "OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "OnExpansionChanged(FOnBooleanValueChanged InOnExpansionChanged)"
  },
  {
    "label": "RestoreExpansionState()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "RestoreExpansionState(bool bRestore)"
  },
  {
    "label": "HeaderContent()",
    "kind": "Method",
    "detail": "Function (IDetailCategoryBuilder&)",
    "insertText": "HeaderContent(TSharedRef<SWidget> InHeaderContent, bool bWholeRowContent = false)"
  },
  {
    "label": "GetSortOrder()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSortOrder()"
  },
  {
    "label": "SetSortOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSortOrder(int32 InSortOrder)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow&)",
    "insertText": "AddProperty(FName PropertyPath, UClass* ClassOutermost = nullptr, FName InstanceName = NAME_None, EPropertyLocation::Type Location = EPropertyLocation::Default)"
  },
  {
    "label": "AddProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow&)",
    "insertText": "AddProperty(TSharedPtr<IPropertyHandle> PropertyHandle, EPropertyLocation::Type Location = EPropertyLocation::Default)"
  },
  {
    "label": "AddExternalObjects()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalObjects(const TArray<UObject*>& Objects, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddExternalObjectProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalObjectProperty(const TArray<UObject*>& Objects, FName PropertyName, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddExternalStructure()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalStructure(TSharedPtr<FStructOnScope> StructData, EPropertyLocation::Type Location = EPropertyLocation::Default)"
  },
  {
    "label": "AddExternalStructureProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalStructureProperty(TSharedPtr<FStructOnScope> StructData, FName PropertyName, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddExternalStructureProperty()",
    "kind": "Method",
    "detail": "Function (IDetailPropertyRow*)",
    "insertText": "AddExternalStructureProperty(TSharedPtr<IStructureDataProvider> StructData, FName PropertyName, EPropertyLocation::Type Location = EPropertyLocation::Default, const FAddPropertyParams& Params = FAddPropertyParams())"
  },
  {
    "label": "AddAllExternalStructureProperties()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "AddAllExternalStructureProperties(TSharedRef<FStructOnScope> StructData, EPropertyLocation::Type Location = EPropertyLocation::Default, TArray<IDetailPropertyRow*>* OutPropertiesRow = nullptr)"
  },
  {
    "label": "AddAllExternalStructureProperties()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IPropertyHandle>>)",
    "insertText": "AddAllExternalStructureProperties(TSharedPtr<IStructureDataProvider> StructProvider, EPropertyLocation::Type Location = EPropertyLocation::Default, TArray<IDetailPropertyRow*>* OutPropertiesRow = nullptr)"
  },
  {
    "label": "AddCustomRow()",
    "kind": "Method",
    "detail": "Function (FDetailWidgetRow&)",
    "insertText": "AddCustomRow(const FText& FilterString, bool bForAdvanced = false)"
  },
  {
    "label": "AddCustomBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomBuilder(TSharedRef<IDetailCustomNodeBuilder> InCustomBuilder, bool bForAdvanced = false)"
  },
  {
    "label": "AddGroup()",
    "kind": "Method",
    "detail": "Function (IDetailGroup&)",
    "insertText": "AddGroup(FName GroupName, const FText& LocalizedDisplayName, bool bForAdvanced = false, bool bStartExpanded = false)"
  },
  {
    "label": "GetDefaultProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDefaultProperties(TArray<TSharedRef<IPropertyHandle> >& OutAllProperties, bool bSimpleProperties = true, bool bAdvancedProperties = true)"
  },
  {
    "label": "GetParentLayout()",
    "kind": "Method",
    "detail": "Function (class IDetailLayoutBuilder&)",
    "insertText": "GetParentLayout()"
  },
  {
    "label": "IsParentLayoutValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParentLayoutValid()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (const FText&)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "SetDisplayName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplayName(const FText& DisplayName)"
  },
  {
    "label": "GetToolTip()",
    "kind": "Method",
    "detail": "Function (const TOptional<FText>&)",
    "insertText": "GetToolTip()"
  },
  {
    "label": "SetToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToolTip(const FText& ToolTip)"
  },
  {
    "label": "SetCategoryVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategoryVisibility(bool bVisible)"
  },
  {
    "label": "SetShowAdvanced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowAdvanced(bool bShowAdvanced)"
  },
  {
    "label": "AddPropertyDisableInstancedReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPropertyDisableInstancedReference(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "OnPasteFromText()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FOnPasteFromText>)",
    "insertText": "OnPasteFromText()"
  }
]