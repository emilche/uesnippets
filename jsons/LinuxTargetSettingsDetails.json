[
  {
    "label": "FShaderFormatsPropertyDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderFormatsPropertyDetails"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLinuxTargetSettingsDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinuxTargetSettingsDetails"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" IDetailCustomization . h \" # include \" Internationalization / Text . h \" # include \" Styling / SlateColor . h \" # include \" TargetPlatformAudioCustomization . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" class FShaderFormatsPropertyDetails ; class IDetailLayoutBuilder ; class IPropertyHandle ; class SWidget ; enum class ECheckBoxState : uint8 ; class FLinuxTargetSettingsDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "HandlePreExternalIconCopy()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "HandlePreExternalIconCopy(const FString& InChosenImage)"
  },
  {
    "label": "GetPickerPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPickerPath()"
  },
  {
    "label": "HandlePostExternalIconCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePostExternalIconCopy(const FString& InChosenImage)"
  },
  {
    "label": "HandleAudioDeviceSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAudioDeviceSelected(FString AudioDeviceName, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "HandleAudioDeviceBoxForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "HandleAudioDeviceBoxForegroundColor(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "HandleAudioDeviceTextBoxText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleAudioDeviceTextBoxText(TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "HandleAudioDeviceTextBoxTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAudioDeviceTextBoxTextChanged(const FText& InText, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "HandleAudioDeviceTextBoxTextComitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAudioDeviceTextBoxTextComitted(const FText& InText, ETextCommit::Type CommitType, TSharedPtr<IPropertyHandle> PropertyHandle)"
  },
  {
    "label": "IsValidAudioDeviceName()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "IsValidAudioDeviceName(const FString& InDeviceName)"
  },
  {
    "label": "MakeAudioDeviceMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAudioDeviceMenu(const TSharedPtr<IPropertyHandle>& PropertyHandle)"
  }
]