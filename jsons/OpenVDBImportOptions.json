[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FOpenVDBSparseVolumeComponentMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBSparseVolumeComponentMapping"
  },
  {
    "label": "FOpenVDBSparseVolumeAttributesDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBSparseVolumeAttributesDesc"
  },
  {
    "label": "FOpenVDBImportOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBImportOptions"
  },
  {
    "label": "FOpenVDBGridInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBGridInfo"
  },
  {
    "label": "FOpenVDBGridComponentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBGridComponentInfo"
  },
  {
    "label": "FOpenVDBPreviewData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOpenVDBPreviewData"
  },
  {
    "label": "SPARSEVOLUMETEXTURE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPARSEVOLUMETEXTURE_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / StaticArray . h \" # include \" OpenVDBImportOptions . generated . h \" enum class ESparseVolumeAttributesFormat : uint8 { Unorm8 = 0,Float16 = 1,Float32 = 2,} ; struct FOpenVDBSparseVolumeComponentMapping { int32 SourceGridIndex = INDEX_NONE ; int32 SourceComponentIndex = INDEX_NONE ; } ; struct FOpenVDBSparseVolumeAttributesDesc { TStaticArray<FOpenVDBSparseVolumeComponentMapping,4> Mappings ; ESparseVolumeAttributesFormat Format = ESparseVolumeAttributesFormat::Unorm8 ; } ; struct FOpenVDBImportOptions { TStaticArray<FOpenVDBSparseVolumeAttributesDesc,2> Attributes ; bool bIsSequence = false ; } ; enum class EOpenVDBGridType : uint8 { Unknown = 0,Half,Half2,Half3,Half4,Float,Float2,Float3,Float4,Double,Double2,Double3,Double4,} ; struct FOpenVDBGridInfo { FTransform Transform ; FIntVector3 VolumeActiveAABBMin ; FIntVector3 VolumeActiveAABBMax ; FIntVector3 VolumeActiveDim ; FString Name ; FString DisplayString ; uint32 Index ; uint32 NumComponents ; EOpenVDBGridType Type ; bool bIsInWorldSpace ; } ; struct FOpenVDBGridComponentInfo { uint32 Index ; uint32 ComponentIndex ; FString Name ; FString DisplayString ; } ; struct FOpenVDBPreviewData { TArray64<uint8> LoadedFile ; TArray<FOpenVDBGridInfo> GridInfo ; TArray<TSharedPtr<FOpenVDBGridInfo>> GridInfoPtrs ; TArray<TSharedPtr<FOpenVDBGridComponentInfo>> GridComponentInfoPtrs ; TArray<FString> SequenceFilenames ; FOpenVDBImportOptions DefaultImportOptions ; } ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  }
]