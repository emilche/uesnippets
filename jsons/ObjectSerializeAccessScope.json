[
  {
    "label": "FObjectSerializeAccessScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectSerializeAccessScope"
  },
  {
    "label": "FSuspendScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSuspendScope"
  },
  {
    "label": "FObjectSerializeAccessScopeImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectSerializeAccessScopeImpl"
  },
  {
    "label": "FObjectSerializeAccessScope()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectHandleTracking . h \" # if UE_WITH_OBJECT_HANDLE_TRACKING namespace UE::CoreUObject::Private { struct FObjectSerializeAccessScope {)",
    "insertText": "FObjectSerializeAccessScope(const UObject& Object)"
  },
  {
    "label": "FObjectSerializeAccessScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FObjectSerializeAccessScope()"
  },
  {
    "label": "FObjectSerializeAccessScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectSerializeAccessScope(const FObjectSerializeAccessScope&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FObjectSerializeAccessScope&)",
    "insertText": "operator(const FObjectSerializeAccessScope&)"
  },
  {
    "label": "FSuspendScope()",
    "kind": "Method",
    "detail": "Function (struct FSuspendScope {)",
    "insertText": "FSuspendScope()"
  },
  {
    "label": "FSuspendScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSuspendScope(const FSuspendScope&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSuspendScope&)",
    "insertText": "operator(const FSuspendScope&)"
  }
]