[
  {
    "label": "ALandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscape"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FLandscapeToolSplines",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeToolSplines"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "ULandscapeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeComponent"
  },
  {
    "label": "ULandscapeEditorObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditorObject"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "ULandscapeEditLayerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditLayerBase"
  },
  {
    "label": "FHeightmapToolTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeightmapToolTarget"
  },
  {
    "label": "FViewportActionKeyInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportActionKeyInput"
  },
  {
    "label": "FViewportClick",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportClick"
  },
  {
    "label": "ToolTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ToolTarget"
  },
  {
    "label": "FLandscapeToolCopyPaste",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeToolCopyPaste"
  },
  {
    "label": "ULandscapeEditorObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeEditorObject"
  },
  {
    "label": "ULandscapeLayerInfoObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULandscapeLayerInfoObject"
  },
  {
    "label": "FLandscapeToolSplines",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeToolSplines"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "FViewportActionKeyInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewportActionKeyInput"
  },
  {
    "label": "FHeightmapToolTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeightmapToolTarget"
  },
  {
    "label": "FLandscapeToolCopyPaste",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeToolCopyPaste"
  },
  {
    "label": "FLandscapeToolMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeToolMode"
  },
  {
    "label": "FLandscapeTargetListInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeTargetListInfo"
  },
  {
    "label": "ALandscapeProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeProxy"
  },
  {
    "label": "UMaterialInstanceConstant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceConstant"
  },
  {
    "label": "FLandscapeListInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeListInfo"
  },
  {
    "label": "FGizmoHistory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGizmoHistory"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEdModeLandscape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdModeLandscape"
  },
  {
    "label": "FProcessLandscapeTraceHitsResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProcessLandscapeTraceHitsResult"
  },
  {
    "label": "FLandscapeLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayer"
  },
  {
    "label": "FLandscapeLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLandscapeLayer"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "ALandscapeBlueprintBrushBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALandscapeBlueprintBrushBase"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "CopyDataToGizmo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDataToGizmo()"
  },
  {
    "label": "PasteDataFromGizmo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteDataFromGizmo()"
  },
  {
    "label": "ShowSplineProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowSplineProperties()"
  },
  {
    "label": "FlipSelectedSplineSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlipSelectedSplineSegments()"
  },
  {
    "label": "SelectAllSplineControlPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllSplineControlPoints()"
  },
  {
    "label": "SelectAllSplineSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllSplineSegments()"
  },
  {
    "label": "SelectAllConnectedSplineControlPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllConnectedSplineControlPoints()"
  },
  {
    "label": "SelectAllConnectedSplineSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllConnectedSplineSegments()"
  },
  {
    "label": "SplineMoveToCurrentLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplineMoveToCurrentLevel()"
  },
  {
    "label": "UpdateSplineMeshLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSplineMeshLevels()"
  },
  {
    "label": "SetbUseAutoRotateOnJoin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetbUseAutoRotateOnJoin(bool InbAutoRotateOnJoin)"
  },
  {
    "label": "GetbUseAutoRotateOnJoin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetbUseAutoRotateOnJoin()"
  },
  {
    "label": "SetbAlwaysRotateForward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetbAlwaysRotateForward(bool InbAlwaysRotateForward)"
  },
  {
    "label": "GetbAlwaysRotateForward()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetbAlwaysRotateForward()"
  },
  {
    "label": "ApplyRampTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyRampTool()"
  },
  {
    "label": "CanApplyRampTool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanApplyRampTool()"
  },
  {
    "label": "ResetRampTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRampTool()"
  },
  {
    "label": "ApplyMirrorTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMirrorTool()"
  },
  {
    "label": "CenterMirrorTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CenterMirrorTool()"
  },
  {
    "label": "InitializeBrushes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeBrushes()"
  },
  {
    "label": "InitializeTool_Paint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Paint()"
  },
  {
    "label": "InitializeTool_Smooth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Smooth()"
  },
  {
    "label": "InitializeTool_Flatten()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Flatten()"
  },
  {
    "label": "InitializeTool_Erosion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Erosion()"
  },
  {
    "label": "InitializeTool_HydraErosion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_HydraErosion()"
  },
  {
    "label": "InitializeTool_Noise()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Noise()"
  },
  {
    "label": "InitializeTool_Retopologize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Retopologize()"
  },
  {
    "label": "InitializeTool_NewLandscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_NewLandscape()"
  },
  {
    "label": "InitializeTool_ResizeLandscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_ResizeLandscape()"
  },
  {
    "label": "InitializeTool_ImportExport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_ImportExport()"
  },
  {
    "label": "InitializeTool_Select()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Select()"
  },
  {
    "label": "InitializeTool_AddComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_AddComponent()"
  },
  {
    "label": "InitializeTool_DeleteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_DeleteComponent()"
  },
  {
    "label": "InitializeTool_MoveToLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_MoveToLevel()"
  },
  {
    "label": "InitializeTool_Mask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Mask()"
  },
  {
    "label": "InitializeTool_CopyPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_CopyPaste()"
  },
  {
    "label": "InitializeTool_Visibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Visibility()"
  },
  {
    "label": "InitializeTool_Splines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Splines()"
  },
  {
    "label": "InitializeTool_Ramp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Ramp()"
  },
  {
    "label": "InitializeTool_Mirror()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_Mirror()"
  },
  {
    "label": "InitializeTool_BlueprintBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeTool_BlueprintBrush()"
  },
  {
    "label": "UpdateToolModes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateToolModes()"
  },
  {
    "label": "ChangeBrushSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeBrushSize(bool bIncrease)"
  },
  {
    "label": "ChangeBrushFalloff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeBrushFalloff(bool bIncrease)"
  },
  {
    "label": "ChangeBrushStrength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeBrushStrength(bool bIncrease)"
  },
  {
    "label": "ChangeAlphaBrushRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeAlphaBrushRotation(bool bIncrease)"
  },
  {
    "label": "ForceRealTimeViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRealTimeViewports(const bool bEnable)"
  },
  {
    "label": "LandscapeMouseTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapeMouseTrace(FEditorViewportClient* ViewportClient, float& OutHitX, float& OutHitY)"
  },
  {
    "label": "LandscapeMouseTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapeMouseTrace(FEditorViewportClient* ViewportClient, FVector& OutHitLocation)"
  },
  {
    "label": "LandscapeMouseTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapeMouseTrace(FEditorViewportClient* ViewportClient, int32 MouseX, int32 MouseY, float& OutHitX, float& OutHitY)"
  },
  {
    "label": "LandscapeMouseTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapeMouseTrace(FEditorViewportClient* ViewportClient, int32 MouseX, int32 MouseY, FVector& OutHitLocation)"
  },
  {
    "label": "LandscapePlaneTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapePlaneTrace(FEditorViewportClient* ViewportClient, const FPlane& Plane, FVector& OutHitLocation)"
  },
  {
    "label": "LandscapePlaneTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapePlaneTrace(FEditorViewportClient* ViewportClient, int32 MouseX, int32 MouseY, const FPlane& Plane, FVector& OutHitLocation)"
  },
  {
    "label": "LandscapeTrace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LandscapeTrace(const FVector& InRayOrigin, const FVector& InRayEnd, const FVector& InDirection, FVector& OutHitLocation)"
  },
  {
    "label": "ProcessLandscapeTraceHits()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessLandscapeTraceHits(const TArray<FHitResult>& InResults, FProcessLandscapeTraceHitsResult& OutLandscapeTraceHitsResult)"
  },
  {
    "label": "SetCurrentToolMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentToolMode(FName ToolModeName, bool bRestoreCurrentTool = true)"
  },
  {
    "label": "SetCurrentTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentTool(FName ToolName, FName TargetLayerName = NAME_None)"
  },
  {
    "label": "SetCurrentTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentTool(int32 ToolIdx, FName TargetLayerName = NAME_None)"
  },
  {
    "label": "SetCurrentTargetLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentTargetLayer(FName TargetLayerName, TWeakObjectPtr<ULandscapeLayerInfoObject> LayerInfo)"
  },
  {
    "label": "SetCurrentBrushSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentBrushSet(FName BrushSetName)"
  },
  {
    "label": "SetCurrentBrushSet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentBrushSet(int32 BrushSetIndex)"
  },
  {
    "label": "SetCurrentBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentBrush(FName BrushName)"
  },
  {
    "label": "SetCurrentBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentBrush(int32 BrushIndex)"
  },
  {
    "label": "UpdateBrushList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBrushList()"
  },
  {
    "label": "UpdateLandscapeList()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "UpdateLandscapeList()"
  },
  {
    "label": "UpdateTargetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTargetList()"
  },
  {
    "label": "SetTargetLandscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetLandscape(const TWeakObjectPtr<ULandscapeInfo>& InLandscapeInfo)"
  },
  {
    "label": "UpdateTargetLayerDisplayOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTargetLayerDisplayOrder(ELandscapeLayerDisplayMode InTargetDisplayOrder)"
  },
  {
    "label": "MoveTargetLayerDisplayOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveTargetLayerDisplayOrder(int32 IndexToMove, int32 IndexToDestination)"
  },
  {
    "label": "RequestUpdateLayerUsageInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateLayerUsageInformation()"
  },
  {
    "label": "UpdateLayerUsageInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLayerUsageInformation(TWeakObjectPtr<ULandscapeLayerInfoObject>* LayerInfoObjectThatChanged = nullptr)"
  },
  {
    "label": "OnLandscapeMaterialChangedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLandscapeMaterialChangedDelegate()"
  },
  {
    "label": "RefreshDetailPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshDetailPanel()"
  },
  {
    "label": "SetCurrentLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentLayer(int32 InLayerIndex)"
  },
  {
    "label": "SetLayerName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerName(int32 InLayerIndex, const FName& InName)"
  },
  {
    "label": "CanRenameLayerTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameLayerTo(int32 InLayerIndex, const FName& InNewName)"
  },
  {
    "label": "SetLayerAlpha()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerAlpha(int32 InLayerIndex, float InAlpha)"
  },
  {
    "label": "SetLayerVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerVisibility(bool InVisible, int32 InLayerIndex)"
  },
  {
    "label": "SetLayerLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLayerLocked(int32 InLayerIndex, bool bInLocked)"
  },
  {
    "label": "SetCurrentLayerSubstractiveBlendStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentLayerSubstractiveBlendStatus(bool InStatus, const TWeakObjectPtr<ULandscapeLayerInfoObject>& InLayerInfoObj)"
  },
  {
    "label": "UpdateLandscapeSplines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLandscapeSplines(bool bUpdateOnlySelected = false)"
  },
  {
    "label": "AutoUpdateDirtyLandscapeSplines()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoUpdateDirtyLandscapeSplines()"
  },
  {
    "label": "CanEditLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditLayer(FText* Reason = nullptr, const FLandscapeLayer* InLayer = nullptr)"
  },
  {
    "label": "AddBrushToCurrentLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBrushToCurrentLayer(class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "RemoveBrushFromCurrentLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBrushFromCurrentLayer(int32 InBrushIndex)"
  },
  {
    "label": "ShowOnlySelectedBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowOnlySelectedBrush(class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "DuplicateBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateBrush(class ALandscapeBlueprintBrushBase* InBrush)"
  },
  {
    "label": "RequestLayersContentUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestLayersContentUpdate(ELandscapeLayerUpdateMode InUpdateMode)"
  },
  {
    "label": "RequestLayersContentUpdateForceAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestLayersContentUpdateForceAll(ELandscapeLayerUpdateMode InUpdateMode = ELandscapeLayerUpdateMode::Update_All)"
  },
  {
    "label": "OnLevelActorAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorAdded(AActor* InActor)"
  },
  {
    "label": "OnLevelActorRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorRemoved(AActor* InActor)"
  },
  {
    "label": "OnPreSaveWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSaveWorld(class UWorld* InWorld, FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "HandleLevelsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleLevelsChanged()"
  },
  {
    "label": "OnMaterialCompilationFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialCompilationFinished(UMaterialInterface* MaterialInterface)"
  },
  {
    "label": "ReimportData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReimportData(const FLandscapeTargetListInfo& TargetInfo)"
  },
  {
    "label": "ImportData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportData(const FLandscapeTargetListInfo& TargetInfo, const FString& Filename)"
  },
  {
    "label": "DeleteLandscapeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteLandscapeComponents(ULandscapeInfo* LandscapeInfo, TSet<ULandscapeComponent*> ComponentsToDelete)"
  },
  {
    "label": "SetLandscapeInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLandscapeInfo(ULandscapeInfo* InLandscapeInfo)"
  }
]