[
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTLIST_H__ # define __FTLIST_H__ # include<ft2build . h> # include FT_FREETYPE_H # ifdef FREETYPE_H # error \" freetype . h of FreeType 1 has been loaded ! \" # error \" Please fix the directory search order for header files \" # error \" so that freetype . h of FreeType 2 is found first . \" # endif FT_BEGIN_HEADER)",
    "insertText": "FT_EXPORT(FT_ListNode ) FT_List_Find( FT_List list, void* data)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(void ) FT_List_Add( FT_List list, FT_ListNode node)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(void ) FT_List_Insert( FT_List list, FT_ListNode node)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(void ) FT_List_Remove( FT_List list, FT_ListNode node)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(void ) FT_List_Up( FT_List list, FT_ListNode node)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_List_Iterator)( FT_ListNode node, void* user)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(FT_Error ) FT_List_Iterate( FT_List list, FT_List_Iterator iterator, void* user)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FT_List_Destructor)( FT_Memory memory, void* data, void* user)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(void ) FT_List_Finalize( FT_List list, FT_List_Destructor destroy, FT_Memory memory, void* user)"
  }
]