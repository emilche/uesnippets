[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "UGizmoElementRectangle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoElementRectangle"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" BaseGizmos / GizmoElementLineBase . h \" # include \" InputState . h \" # include \" UObject / ObjectMacros . h \" # include \" GizmoElementRectangle . generated . h \" class FPrimitiveDrawInterface ; class FMaterialRenderProxy ;)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API virtual void Render(IToolsContextRenderAPI* RenderAPI, const FRenderTraversalState& RenderState)"
  },
  {
    "label": "LineTrace()",
    "kind": "Method",
    "detail": "Function (FInputRayHit)",
    "insertText": "LineTrace(const UGizmoViewContext* ViewContext, const FLineTraceTraversalState& LineTraceState, const FVector& RayOrigin, const FVector& RayDirection)"
  },
  {
    "label": "SetCenter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCenter(FVector InCenter)"
  },
  {
    "label": "GetCenter()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetCenter()"
  },
  {
    "label": "SetWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidth(float InWidth)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWidth()"
  },
  {
    "label": "SetHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeight(float InHeight)"
  },
  {
    "label": "GetHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHeight()"
  },
  {
    "label": "SetUpDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpDirection(const FVector& InUpDirection)"
  },
  {
    "label": "GetUpDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetUpDirection()"
  },
  {
    "label": "SetSideDirection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSideDirection(const FVector& InSideDirection)"
  },
  {
    "label": "GetSideDirection()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetSideDirection()"
  },
  {
    "label": "SetDrawMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawMesh(bool InDrawMesh)"
  },
  {
    "label": "GetDrawMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDrawMesh()"
  },
  {
    "label": "SetDrawLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawLine(bool InDrawLine)"
  },
  {
    "label": "GetDrawLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDrawLine()"
  },
  {
    "label": "SetHitMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHitMesh(bool InHitMesh)"
  },
  {
    "label": "GetHitMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHitMesh()"
  },
  {
    "label": "SetHitLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHitLine(bool InHitLine)"
  },
  {
    "label": "GetHitLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHitLine()"
  }
]