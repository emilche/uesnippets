[
  {
    "label": "FWidgetPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetPath"
  },
  {
    "label": "SMenuPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuPanel"
  },
  {
    "label": "FMenuBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBase"
  },
  {
    "label": "FPopupTransitionEffect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPopupTransitionEffect"
  },
  {
    "label": "ESlideDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESlideDirection"
  },
  {
    "label": "FMenuStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuStack"
  },
  {
    "label": "FPrePushArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrePushArgs"
  },
  {
    "label": "FPrePushResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrePushResults"
  },
  {
    "label": "FMenuBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBase"
  },
  {
    "label": "FMenuBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBase"
  },
  {
    "label": "FMenuBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBase"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IMenu>)",
    "insertText": "Push(const TSharedPtr<IMenu>& InParentMenu, const TSharedRef<SWidget>& InContent, const UE::Slate::FDeprecateVector2DParameter& SummonLocation, const FPopupTransitionEffect& TransitionEffect, const bool bFocusImmediately = true, const UE::Slate::FDeprecateVector2DParameter& SummonLocationSize = FVector2f::ZeroVector, const bool bIsCollapsedByParent = true, const bool bEnablePerPixelTransparency = false)"
  },
  {
    "label": "PushHosted()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IMenu>)",
    "insertText": "PushHosted(const FWidgetPath& InOwnerPath, const TSharedRef<IMenuHost>& InMenuHost, const TSharedRef<SWidget>& InContent, TSharedPtr<SWidget>& OutWrappedContent, const FPopupTransitionEffect& TransitionEffect, EShouldThrottle ShouldThrottle, const bool bIsCollapsedByParent = true)"
  },
  {
    "label": "PushHosted()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IMenu>)",
    "insertText": "PushHosted(const TSharedPtr<IMenu>& InParentMenu, const TSharedRef<IMenuHost>& InMenuHost, const TSharedRef<SWidget>& InContent, TSharedPtr<SWidget>& OutWrappedContent, const FPopupTransitionEffect& TransitionEffect, EShouldThrottle ShouldThrottle, const bool bIsCollapsedByParent = true)"
  },
  {
    "label": "DismissFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DismissFrom(const TSharedPtr<IMenu>& InFromMenu)"
  },
  {
    "label": "DismissAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DismissAll()"
  },
  {
    "label": "OnWindowDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowDestroyed(TSharedRef<SWindow> InWindow)"
  },
  {
    "label": "OnWindowActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowActivated( TSharedRef<SWindow> ActivatedWindow )"
  },
  {
    "label": "QueryPopupMethod()",
    "kind": "Method",
    "detail": "Function (FPopupMethodReply)",
    "insertText": "QueryPopupMethod(const FWidgetPath& PathToQuery)"
  },
  {
    "label": "DismissInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DismissInternal(int32 FirstStackIndexToRemove)"
  },
  {
    "label": "SetHostPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHostPath(const FWidgetPath& InOwnerPath)"
  },
  {
    "label": "OnMenuDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuDestroyed(TSharedRef<IMenu> InMenu)"
  },
  {
    "label": "OnMenuContentLostFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuContentLostFocus(const FWidgetPath& InFocussedPath)"
  },
  {
    "label": "PrePush()",
    "kind": "Method",
    "detail": "Function (FPrePushResults)",
    "insertText": "PrePush(const FPrePushArgs& InArgs)"
  },
  {
    "label": "PushInternal()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IMenu>)",
    "insertText": "PushInternal(const TSharedPtr<IMenu>& InParentMenu, const TSharedRef<SWidget>& InContent, FSlateRect Anchor, const FPopupTransitionEffect& TransitionEffect, const bool bFocusImmediately, EShouldThrottle ShouldThrottle, const bool bIsCollapsedByParent, const bool bEnablePerPixelTransparency)"
  },
  {
    "label": "PushNewWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FMenuBase>)",
    "insertText": "PushNewWindow(TSharedPtr<IMenu> InParentMenu, const FPrePushResults& InPrePushResults, const bool bEnablePerPixelTransparency)"
  },
  {
    "label": "PushPopup()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FMenuBase>)",
    "insertText": "PushPopup(TSharedPtr<IMenu> InParentMenu, const FPrePushResults& InPrePushResults)"
  },
  {
    "label": "PostPush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPush(TSharedPtr<IMenu> InParentMenu, TSharedRef<FMenuBase> InMenu, EShouldThrottle ShouldThrottle, bool bInInsertAfterDismiss=false)"
  }
]