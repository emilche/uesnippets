[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidget"
  },
  {
    "label": "FAbsoluteMovementParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAbsoluteMovementParams"
  },
  {
    "label": "FThickArcParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThickArcParams"
  },
  {
    "label": "HWidgetAxis",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HWidgetAxis"
  },
  {
    "label": "SetUsesEditorModeTools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsesEditorModeTools(FEditorModeTools* InEditorModeTools)"
  },
  {
    "label": "DrawHUD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawHUD(FCanvas* Canvas)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render(const FSceneView* View, FPrimitiveDrawInterface* PDI, FEditorViewportClient* ViewportClient)"
  },
  {
    "label": "ConvertMouseMovementToAxisMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertMouseMovementToAxisMovement(FSceneView* InView, FEditorViewportClient* InViewportClient,\n\t                                        bool bInUsedDragModifier, FVector& InDiff, FVector& OutDrag,\n\t                                        FRotator& OutRotation, FVector& OutScale)"
  },
  {
    "label": "AbsoluteTranslationConvertMouseMovementToAxisMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbsoluteTranslationConvertMouseMovementToAxisMovement(FSceneView* InView,\n\t                                                           FEditorViewportClient* InViewportClient,\n\t                                                           const FVector& InLocation,\n\t                                                           const FVector2D& InMousePosition, FVector& OutDrag,\n\t                                                           FRotator& OutRotation, FVector& OutScale)"
  },
  {
    "label": "AllowsAbsoluteTranslationMovement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowsAbsoluteTranslationMovement(UE::Widget::EWidgetMode WidgetMode)"
  },
  {
    "label": "AllowsAbsoluteRotationMovement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowsAbsoluteRotationMovement(UE::Widget::EWidgetMode WidgetMode, EAxisList::Type InAxisType)"
  },
  {
    "label": "UpdateDeltaRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDeltaRotation()"
  },
  {
    "label": "ConvertMouseToAxis_Rotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertMouseToAxis_Rotate(FVector2D TangentDir, FVector2D DragDir, FSceneView* InView,\n\t                               FEditorViewportClient* InViewportClient, FVector& InOutDelta, FRotator& OutRotation)"
  },
  {
    "label": "ConvertMouseToAxis_Scale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertMouseToAxis_Scale(FVector2D DragDir, FVector& InOutDelta, FVector& OutScale)"
  },
  {
    "label": "ConvertMouseToAxis_TranslateRotateZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertMouseToAxis_TranslateRotateZ(FVector2D TangentDir, FVector2D DragDir, FVector& InOutDelta,\n\t                                         FVector& OutDrag, FRotator& OutRotation)"
  },
  {
    "label": "ConvertMouseToAxis_WM_2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertMouseToAxis_WM_2D(FVector2D TangentDir, FVector2D DragDir, FVector& InOutDelta, FVector& OutDrag,\n\t                              FRotator& OutRotation)"
  },
  {
    "label": "AbsoluteConvertMouseToAxis_Translate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbsoluteConvertMouseToAxis_Translate(FSceneView* InView, const FMatrix& InputCoordSystem,\n\t                                          FAbsoluteMovementParams& InOutParams, FVector& OutDrag)"
  },
  {
    "label": "AbsoluteConvertMouseToAxis_WM_2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbsoluteConvertMouseToAxis_WM_2D(const FMatrix& InputCoordSystem, FAbsoluteMovementParams& InOutParams,\n\t                                      FVector& OutDrag, FRotator& OutRotation)"
  },
  {
    "label": "AbsoluteConvertMouseToAxis_TranslateRotateZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbsoluteConvertMouseToAxis_TranslateRotateZ(const FMatrix& InputCoordSystem,\n\t                                                 FAbsoluteMovementParams& InOutParams, FVector& OutDrag,\n\t                                                 FRotator& OutRotation)"
  },
  {
    "label": "RenderGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderGrid(const FSceneView* View, FPrimitiveDrawInterface* PDI, FEditorViewportClient* ViewportClient)"
  },
  {
    "label": "Render_Axis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_Axis(const FSceneView* View, FPrimitiveDrawInterface* PDI, EAxisList::Type InAxis, FMatrix& InMatrix,\n\t                 UMaterialInterface* InMaterial, const FLinearColor& InColor, FVector2D& OutAxisDir,\n\t                 const FVector& InScale, bool bDrawWidget, bool bCubeHead = false, float AxisLengthOffset = 0)"
  },
  {
    "label": "Render_Cube()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_Cube(FPrimitiveDrawInterface* PDI, const FMatrix& InMatrix, const UMaterialInterface* InMaterial,\n\t                 const FVector& InScale)"
  },
  {
    "label": "Render_Translate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_Translate(const FSceneView* View, FPrimitiveDrawInterface* PDI,\n\t                                   FEditorViewportClient* ViewportClient, const FVector& InLocation,\n\t                                   bool bDrawWidget)"
  },
  {
    "label": "Render_Rotate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_Rotate(const FSceneView* View, FPrimitiveDrawInterface* PDI,\n\t                                FEditorViewportClient* ViewportClient, const FVector& InLocation, bool bDrawWidget)"
  },
  {
    "label": "Render_Scale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_Scale(const FSceneView* View, FPrimitiveDrawInterface* PDI, FEditorViewportClient* ViewportClient,\n\t                  const FVector& InLocation, bool bDrawWidget)"
  },
  {
    "label": "Render_TranslateRotateZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_TranslateRotateZ(const FSceneView* View, FPrimitiveDrawInterface* PDI,\n\t                             FEditorViewportClient* ViewportClient, const FVector& InLocation, bool bDrawWidget)"
  },
  {
    "label": "Render_2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render_2D(const FSceneView* View, FPrimitiveDrawInterface* PDI, FEditorViewportClient* ViewportClient,\n\t               const FVector& InLocation, bool bDrawWidget)"
  },
  {
    "label": "GetAbsoluteTranslationDelta()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAbsoluteTranslationDelta(const FAbsoluteMovementParams& InParams)"
  },
  {
    "label": "GetAbsoluteTranslationInitialOffset()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAbsoluteTranslationInitialOffset(const FVector& InNewPosition, const FVector& InCurrentPosition)"
  },
  {
    "label": "DrawRotationArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawRotationArc(const FSceneView* View, FPrimitiveDrawInterface* PDI, EAxisList::Type InAxis,\n\t                     const FVector& InLocation, const FVector& Axis0, const FVector& Axis1,\n\t                     const FVector& InDirectionToWidget, const FColor& InColor, const float InScale,\n\t                     FVector2D& OutAxisEnd)"
  },
  {
    "label": "DrawPartialRotationArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawPartialRotationArc(const FSceneView* View, FPrimitiveDrawInterface* PDI, EAxisList::Type InAxis,\n\t                            const FVector& InLocation, const FVector& Axis0, const FVector& Axis1,\n\t                            const float InStartAngle, const float InEndAngle, const FColor& InColor,\n\t                            const float InScale, const FVector& InDirectionToWidget)"
  },
  {
    "label": "DrawThickArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawThickArc(const FThickArcParams& InParams, const FVector& Axis0, const FVector& Axis1,\n\t                  const float InStartAngle, const float InEndAngle, const FColor& InColor,\n\t                  const FVector& InDirectionToWidget, bool bIsOrtho)"
  },
  {
    "label": "DrawSnapMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawSnapMarker(FPrimitiveDrawInterface* PDI, const FVector& InLocation, const FVector& Axis0,\n\t                    const FVector& Axis1, const FColor& InColor, const float InScale,\n\t                    const float InWidthPercent = 0.0f, const float InPercentSize = 1.0f)"
  },
  {
    "label": "DrawStartStopMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStartStopMarker(FPrimitiveDrawInterface* PDI, const FVector& InLocation, const FVector& Axis0,\n\t                         const FVector& Axis1, const float InAngle, const FColor& InColor, const float InScale)"
  },
  {
    "label": "CacheRotationHUDText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheRotationHUDText(const FSceneView* View, FPrimitiveDrawInterface* PDI, const FVector& InLocation,\n\t                          const FVector& Axis0, const FVector& Axis1, const float AngleOfChange,\n\t                          const float InScale)"
  },
  {
    "label": "DrawColoredSphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawColoredSphere(FPrimitiveDrawInterface* PDI, const FVector& Center, const FRotator& Orientation,\n\t                       FColor Color, const FVector& Radii, int32 NumSides, int32 NumRings,\n\t                       const FMaterialRenderProxy* MaterialRenderProxy, uint8 DepthPriority,\n\t                       bool bDisableBackfaceCulling)"
  },
  {
    "label": "HWidgetAxis()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "HWidgetAxis(EAxisList::Type InAxis, bool InbDisabled = false, EHitProxyPriority InHitProxy = HPP_UI)"
  }
]