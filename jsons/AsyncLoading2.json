[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FIoDispatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoDispatcher"
  },
  {
    "label": "IAsyncPackageLoader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncPackageLoader"
  },
  {
    "label": "IEDLBootNotificationManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEDLBootNotificationManager"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FPackageImportReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageImportReference"
  },
  {
    "label": "FPackageObjectIndex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageObjectIndex"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "FPublicExportKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPublicExportKey"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FZenPackageVersioningInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZenPackageVersioningInfo"
  },
  {
    "label": "FZenPackageImportedPackageNamesContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZenPackageImportedPackageNamesContainer"
  },
  {
    "label": "FZenPackageSummary",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FZenPackageSummary"
  },
  {
    "label": "FExportBundleEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExportBundleEntry"
  },
  {
    "label": "EExportCommandType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EExportCommandType"
  },
  {
    "label": "FDependencyBundleEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDependencyBundleEntry"
  },
  {
    "label": "FDependencyBundleHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDependencyBundleHeader"
  },
  {
    "label": "FScriptObjectEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScriptObjectEntry"
  },
  {
    "label": "FExportMapEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExportMapEntry"
  },
  {
    "label": "FBulkDataMapEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBulkDataMapEntry"
  },
  {
    "label": "GenerateImportHashFromObjectPath()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GenerateImportHashFromObjectPath(const FStringView& ObjectPath)"
  },
  {
    "label": "FPackageObjectIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FPackageObjectIndex(Export, Index)"
  },
  {
    "label": "FPackageObjectIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FPackageObjectIndex(PackageImport, Id)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(TypeAndId)"
  },
  {
    "label": "FPackageImportReference()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FPackageImportReference(ImportedPackageIndex, ExportHash)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(Value.TypeAndId)"
  },
  {
    "label": "MakeKey()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeKey(PackageId, ExportHash)"
  },
  {
    "label": "FindAllRuntimeScriptPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAllRuntimeScriptPackages(TArray<UPackage*>& OutPackages)"
  }
]