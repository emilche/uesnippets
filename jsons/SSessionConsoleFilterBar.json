[
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "SSessionConsoleFilterBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSessionConsoleFilterBar"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "FilterLogMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FilterLogMessage(const TSharedRef<FSessionLogMessage>& LogMessage)"
  },
  {
    "label": "ResetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFilter()"
  },
  {
    "label": "AddCategoryFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCategoryFilter(const FName& Category)"
  },
  {
    "label": "AddVerbosityFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVerbosityFilter(ELogVerbosity::Type Verbosity, const FString& Name, const FName& Icon)"
  },
  {
    "label": "HandleCategoryFilterGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleCategoryFilterGenerateRow(FSessionConsoleCategoryFilterPtr Filter, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleCategoryFilterStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCategoryFilterStateChanged(const FName& ChangedCategory, bool Enabled)"
  },
  {
    "label": "HandleFilterStringTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFilterStringTextChanged(const FText& NewText)"
  },
  {
    "label": "HandleHighlightOnlyCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHighlightOnlyCheckBoxCheckStateChanged(ECheckBoxState CheckedState)"
  },
  {
    "label": "HandleVerbosityFilterGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleVerbosityFilterGenerateRow(FSessionConsoleVerbosityFilterPtr Filter, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleVerbosityFilterStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleVerbosityFilterStateChanged(ELogVerbosity::Type Verbosity, bool Enabled)"
  }
]