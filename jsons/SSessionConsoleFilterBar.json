[
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "SSessionConsoleFilterBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSessionConsoleFilterBar"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" SessionLogMessage . h \" # include \" Models / SessionConsoleCategoryFilter . h \" # include \" Models / SessionConsoleVerbosityFilter . h \" class SCheckBox ; class SSessionConsoleFilterBar : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSessionConsoleFilterBar)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FSimpleDelegate, OnFilterChanged) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "FilterLogMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FilterLogMessage(const TSharedRef<FSessionLogMessage>& LogMessage)"
  },
  {
    "label": "GetFilterText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterText()"
  },
  {
    "label": "ResetFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFilter()"
  },
  {
    "label": "AddCategoryFilter()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AddCategoryFilter(const FName& Category)"
  },
  {
    "label": "AddVerbosityFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVerbosityFilter(ELogVerbosity::Type Verbosity, const FString& Name, const FName& Icon)"
  },
  {
    "label": "HandleCategoryFilterGenerateRow()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "HandleCategoryFilterGenerateRow(FSessionConsoleCategoryFilterPtr Filter, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleCategoryFilterGetRowText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleCategoryFilterGetRowText(FSessionConsoleCategoryFilterPtr Filter)"
  },
  {
    "label": "HandleCategoryFilterStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCategoryFilterStateChanged(const FName& ChangedCategory, bool Enabled)"
  },
  {
    "label": "HandleFilterStringTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFilterStringTextChanged(const FText& NewText)"
  },
  {
    "label": "HandleHighlightOnlyCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHighlightOnlyCheckBoxCheckStateChanged(ECheckBoxState CheckedState)"
  },
  {
    "label": "HandleVerbosityFilterGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleVerbosityFilterGenerateRow(FSessionConsoleVerbosityFilterPtr Filter, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleVerbosityFilterGetRowText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleVerbosityFilterGetRowText(FSessionConsoleVerbosityFilterPtr Filter)"
  },
  {
    "label": "HandleVerbosityFilterStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleVerbosityFilterStateChanged(ELogVerbosity::Type Verbosity, bool Enabled)"
  }
]