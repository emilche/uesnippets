[
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "UCanvasPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvasPanel"
  },
  {
    "label": "UCanvasPanelSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvasPanelSlot"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCanvasSlotExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasSlotExtension"
  },
  {
    "label": "FCanvasSlotExtension()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FCanvasSlotExtension()"
  },
  {
    "label": "HandleAnchorBeginDrag()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleAnchorBeginDrag(const FGeometry& Geometry, const FPointerEvent& Event, EAnchorWidget AnchorType)"
  },
  {
    "label": "HandleAnchorEndDrag()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleAnchorEndDrag(const FGeometry& Geometry, const FPointerEvent& Event, EAnchorWidget AnchorType)"
  },
  {
    "label": "HandleAnchorDragging()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleAnchorDragging(const FGeometry& Geometry, const FPointerEvent& Event, EAnchorWidget AnchorType)"
  },
  {
    "label": "MakeAnchorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAnchorWidget(EAnchorWidget AnchorType, float Width, float Height)"
  },
  {
    "label": "OnMouseEnterAnchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnterAnchor()"
  },
  {
    "label": "OnMouseLeaveAnchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeaveAnchor()"
  },
  {
    "label": "GetCollisionSegmentsForSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCollisionSegmentsForSlot(UCanvasPanel* Canvas, int32 SlotIndex, TArray<FVector2D>& Segments)"
  },
  {
    "label": "GetCollisionSegmentsForSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCollisionSegmentsForSlot(UCanvasPanel* Canvas, UCanvasPanelSlot* Slot, TArray<FVector2D>& Segments)"
  },
  {
    "label": "GetCollisionSegmentsFromGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCollisionSegmentsFromGeometry(FGeometry ArrangedGeometry, TArray<FVector2D>& Segments)"
  },
  {
    "label": "ProximitySnapValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProximitySnapValue(float SnapFrequency, float SnapProximity, FVector2D::FReal& Value)"
  }
]