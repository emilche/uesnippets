[
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FCapsule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCapsule"
  },
  {
    "label": "TGeometryParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticle"
  },
  {
    "label": "FMassProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMassProperties"
  },
  {
    "label": "FPerShapeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerShapeData"
  },
  {
    "label": "FPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicalMaterial"
  },
  {
    "label": "FPhysicalMaterialMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicalMaterialMask"
  },
  {
    "label": "THandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "THandle"
  },
  {
    "label": "FMaterialHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialHandle"
  },
  {
    "label": "FMaterialMaskHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialMaskHandle"
  },
  {
    "label": "FChaosPhysicsMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosPhysicsMaterial"
  },
  {
    "label": "FChaosPhysicsMaterialMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosPhysicsMaterialMask"
  },
  {
    "label": "FDummyPhysType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyPhysType"
  },
  {
    "label": "FDummyPhysActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyPhysActor"
  },
  {
    "label": "FDummyCallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummyCallback"
  },
  {
    "label": "FScopedSceneReadLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedSceneReadLock"
  },
  {
    "label": "FChaosSceneId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosSceneId"
  },
  {
    "label": "FPhysInterface_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysInterface_Chaos"
  },
  {
    "label": "FPhysicsConstraintReference_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsConstraintReference_Chaos"
  },
  {
    "label": "FPhysicsAggregateReference_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsAggregateReference_Chaos"
  },
  {
    "label": "FPhysicsShapeReference_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsShapeReference_Chaos"
  },
  {
    "label": "FPhysScene_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysScene_Chaos"
  },
  {
    "label": "FPhysicsShapeAdapter_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsShapeAdapter_Chaos"
  },
  {
    "label": "FPhysicsGeometryCollection_Chaos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPhysicsGeometryCollection_Chaos"
  },
  {
    "label": "FPhysicsUserData_Chaos",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPhysicsUserData_Chaos"
  },
  {
    "label": "DefaultPhysicsActorHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # define MAX_PHYSICS_FIELD_TARGETS 3 2 # include \" ChaosSQTypes . h \" # include \" Chaos / ShapeInstanceFwd . h \" # include \" PhysicsProxy / SingleParticlePhysicsProxyFwd . h \" namespace Chaos { class FImplicitObject ; class FCapsule ; template<T,int d> class TGeometryParticle ; using FGeometryParticle = TGeometryParticle<FReal,3> ; struct FMassProperties ; class FPerShapeData ; class FPhysicalMaterial ; class FPhysicalMaterialMask ; template<,uint32,uint32> class THandle ; struct FMaterialHandle ; struct FMaterialMaskHandle ; class FChaosPhysicsMaterial ; class FChaosPhysicsMaterialMask ; } namespace ChaosInterface { struct FDummyPhysType ; struct FDummyPhysActor ; template<T> struct FDummyCallback ; struct FScopedSceneReadLock ; } using FPhysTypeDummy = ChaosInterface::FDummyPhysType ; using FPhysActorDummy = ChaosInterface::FDummyPhysActor ; template<T> using FCallbackDummy = ChaosInterface::FDummyCallback<T> ; using FHitLocation = ChaosInterface::FLocationHit ; using FHitSweep = ChaosInterface::FSweepHit ; using FHitRaycast = ChaosInterface::FRaycastHit ; using FHitOverlap = ChaosInterface::FOverlapHit ; using FPhysicsQueryHit = ChaosInterface::FQueryHit ; using FPhysicsTransform = FTransform ; using FPhysicsShape = Chaos::FPerShapeData ; using FPhysicsGeometry = Chaos::FImplicitObject ; using FPhysicsCapsuleGeometry = Chaos::FCapsule ; using FPhysicsMaterial = Chaos::FChaosPhysicsMaterial ; using FPhysicsMaterialMask = Chaos::FChaosPhysicsMaterialMask ; using FPhysicsActor = Chaos::FGeometryParticle ; template<T> using FPhysicsHitCallback = ChaosInterface::FSQHitBuffer<T> ; template<T> using FSingleHitBuffer = ChaosInterface::FSQSingleHitBuffer<T> ; template<T> using FDynamicHitBuffer = ChaosInterface::FSQHitBuffer<T> ; using FPhysicsActorHandle = Chaos::FSingleParticlePhysicsProxy* ; class FChaosSceneId ; class FPhysInterface_Chaos ; class FPhysicsConstraintReference_Chaos ; class FPhysicsAggregateReference_Chaos ; class FPhysicsShapeReference_Chaos ; class FPhysScene_Chaos ; class FPhysicsShapeAdapter_Chaos ; struct FPhysicsGeometryCollection_Chaos ; class FPhysicsUserData_Chaos ; typedef FPhysicsConstraintReference_Chaos FPhysicsConstraintHandle ; typedef FPhysInterface_Chaos FPhysicsInterface ; typedef FPhysScene_Chaos FPhysScene ; typedef FPhysicsAggregateReference_Chaos FPhysicsAggregateHandle ; typedef FPhysInterface_Chaos FPhysicsCommand ; typedef FPhysicsShapeReference_Chaos FPhysicsShapeHandle ; typedef FPhysicsGeometryCollection_Chaos FPhysicsGeometryCollection ; typedef Chaos::FMaterialHandle FPhysicsMaterialHandle ; typedef Chaos::FMaterialMaskHandle FPhysicsMaterialMaskHandle ; typedef FPhysicsShapeAdapter_Chaos FPhysicsShapeAdapter ; typedef FPhysicsUserData_Chaos FPhysicsUserData ; FPhysicsActorHandle)",
    "insertText": "DefaultPhysicsActorHandle()"
  }
]