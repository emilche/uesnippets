[
  {
    "label": "ExtensionDataClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExtensionDataClient"
  },
  {
    "label": "ExtensionDataClient()",
    "kind": "Method",
    "detail": "Function (# ifdef HAS_EXTENSIONS # include<map> # include<string> # include<vector> # include<p4_optional . h> # include<functional> # include<unordered_map> # include<unordered_set> # include<p4script . h> class ExtensionDataClient : public ExtensionData { public :)",
    "insertText": "ExtensionDataClient(const StrBuf& archiveFile, p4_std_optional::optional< StrBuf > unzipPath, Error* e)"
  },
  {
    "label": "ExtensionDataClient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtensionDataClient(const StrBuf& depotFile, const int& depotRev, const StrBuf& srvExtsDir, const p4_std_optional::optional< StrBuf > archiveFile, Error* e)"
  },
  {
    "label": "ExtensionDataClient()",
    "kind": "Method",
    "detail": "Function (const std::string nameDelimiter ; private : } ; # else class ExtensionDataClient { public :)",
    "insertText": "ExtensionDataClient(const StrBuf& archiveFile, Error* e)"
  },
  {
    "label": "ExtensionDataClient()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ExtensionDataClient(const StrBuf& depotFile, const int& depotRev, const StrBuf& srvExtsDir, StrBuf archiveFile, Error* e)"
  }
]