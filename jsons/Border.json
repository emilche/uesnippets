[
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "USlateBrushAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USlateBrushAsset"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBorder"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "SetContentColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentColorAndOpacity(FLinearColor InContentColorAndOpacity)"
  },
  {
    "label": "SetPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPadding(FMargin InPadding)"
  },
  {
    "label": "SetHorizontalAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)"
  },
  {
    "label": "SetVerticalAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)"
  },
  {
    "label": "SetBrushColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrushColor(FLinearColor InBrushColor)"
  },
  {
    "label": "SetBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrush(const FSlateBrush& InBrush)"
  },
  {
    "label": "SetBrushFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrushFromAsset(USlateBrushAsset* Asset)"
  },
  {
    "label": "SetBrushFromTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrushFromTexture(UTexture2D* Texture)"
  },
  {
    "label": "SetBrushFromMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBrushFromMaterial(UMaterialInterface* Material)"
  },
  {
    "label": "SetShowEffectWhenDisabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowEffectWhenDisabled(bool bInShowEffectWhenDisabled)"
  },
  {
    "label": "SetDesiredSizeScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDesiredSizeScale(FVector2D InScale)"
  },
  {
    "label": "HandleMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleMouseButtonDown(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleMouseButtonUp(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleMouseMove()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleMouseMove(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleMouseDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleMouseDoubleClick(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  }
]