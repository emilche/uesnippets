[
  {
    "label": "TransientDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransientDetector"
  },
  {
    "label": "TransientSuppressorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransientSuppressorImpl"
  },
  {
    "label": "TransientSuppressorImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_SUPPRESSOR_IMPL_H_ # define MODULES_AUDIO_PROCESSING_TRANSIENT_TRANSIENT_SUPPRESSOR_IMPL_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include \" modules / audio_processing / transient / transient_suppressor . h \" # include \" modules / audio_processing / transient / voice_probability_delay_unit . h \" # include \" rtc_base / gtest_prod_util . h \" namespace webrtc { class TransientDetector ; class TransientSuppressorImpl : public TransientSuppressor { public :)",
    "insertText": "TransientSuppressorImpl(VadMode vad_mode, int sample_rate_hz, int detector_rate_hz, int num_channels)"
  },
  {
    "label": "TransientSuppressorImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TransientSuppressorImpl()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(int sample_rate_hz, int detector_rate_hz, int num_channels)"
  },
  {
    "label": "Suppress()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Suppress(float* data, size_t data_length, int num_channels, const float* detection_data, size_t detection_length, const float* reference_data, size_t reference_length, float voice_probability, bool key_pressed)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(TransientSuppressorVadModeParametrization, TypingDetectionLogicWorksAsExpectedForMono)"
  },
  {
    "label": "Suppress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Suppress(float* in_ptr, float* spectral_mean, float* out_ptr)"
  },
  {
    "label": "UpdateKeypress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateKeypress(bool key_pressed)"
  },
  {
    "label": "UpdateRestoration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRestoration(float voice_probability)"
  },
  {
    "label": "UpdateBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBuffers(float* data)"
  },
  {
    "label": "HardRestoration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HardRestoration(float* spectral_mean)"
  },
  {
    "label": "SoftRestoration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SoftRestoration(float* spectral_mean)"
  }
]