[
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "IDeviceManagerCustomPlatformWidgetCreator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDeviceManagerCustomPlatformWidgetCreator"
  },
  {
    "label": "IPlugin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPlugin"
  },
  {
    "label": "FDataDrivenPlatformInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDataDrivenPlatformInfo"
  },
  {
    "label": "FTargetPlatformInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetPlatformInfo"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FTargetPlatform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTargetPlatform"
  },
  {
    "label": "FTargetPlatformSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTargetPlatformSet"
  },
  {
    "label": "GetTargetPlatformControls()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformMisc . h \" # include \" Interfaces / ITargetDevice . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" Interfaces / ITargetPlatformSettings . h \" # include \" Interfaces / ITargetPlatformControls . h \" class FConfigCacheIni ; class IDeviceManagerCustomPlatformWidgetCreator ; class IPlugin ; struct FDataDrivenPlatformInfo ; namespace PlatformInfo { struct FTargetPlatformInfo ; } class ITargetPlatform : public ITargetPlatformSettings,public ITargetPlatformControls { public : const ITargetPlatformControls*)",
    "insertText": "GetTargetPlatformControls()"
  },
  {
    "label": "GetPlatformFromOrdinal()",
    "kind": "Method",
    "detail": "Function (} const ITargetPlatform*)",
    "insertText": "GetPlatformFromOrdinal(int32 Ordinal)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(ITargetPlatform, FOnTargetDeviceDiscovered, ITargetDeviceRef)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(ITargetPlatform, FOnTargetDeviceLost, ITargetDeviceRef)"
  },
  {
    "label": "ITargetPlatform()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "ITargetPlatform()"
  },
  {
    "label": "AssignPlatformOrdinal()",
    "kind": "Method",
    "detail": "Function (} protected : int32)",
    "insertText": "AssignPlatformOrdinal(const ITargetPlatform& Platform)"
  },
  {
    "label": "FTargetPlatform()",
    "kind": "Method",
    "detail": "Function (} ; struct FTargetPlatform {)",
    "insertText": "FTargetPlatform(const ITargetPlatform& Platform)"
  },
  {
    "label": "GetPlatformOrdinal()",
    "kind": "Method",
    "detail": "Function (Ordinal = Platform .)",
    "insertText": "GetPlatformOrdinal()"
  },
  {
    "label": "GetOrdinal()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetOrdinal()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} private : uint32 Ordinal = 0 ; } ; class FTargetPlatformSet { public : void)",
    "insertText": "Add(const FTargetPlatform& Platform)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (Mask | = 1 ull<<Ordinal ; } void)",
    "insertText": "Remove(const FTargetPlatform& Platform)"
  },
  {
    "label": "Mask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mask(1ull << Ordinal)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Remove(const FTargetPlatformSet& Platforms)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (Mask& = ~ Platforms . Mask ; } bool)",
    "insertText": "Contains(const FTargetPlatform& Platform)"
  },
  {
    "label": "ContainsAny()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ContainsAny(const FTargetPlatformSet& Other)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (Mask | = Other . Mask ; } void)",
    "insertText": "Clear()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Mask = 0 ; } bool)",
    "insertText": "operator(const FTargetPlatformSet& Other)"
  },
  {
    "label": "ForEach()",
    "kind": "Method",
    "detail": "Function (} template<Func> void)",
    "insertText": "ForEach(Func&& Callback)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (uint64 IterMask = Mask ; int Ordinal = 0 ;)",
    "insertText": "while(IterMask)"
  },
  {
    "label": "Callback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Callback(ITargetPlatform::GetPlatformFromOrdinal(Ordinal))"
  }
]