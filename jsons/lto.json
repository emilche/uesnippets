[
  {
    "label": "LLVMOpaqueLTOModule",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LLVMOpaqueLTOModule"
  },
  {
    "label": "LLVMOpaqueLTOCodeGenerator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LLVMOpaqueLTOCodeGenerator"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_C_LTO_H # define LLVM_C_LTO_H # include<stddef . h> # include<sys / types . h> # ifndef __cplusplus # if !)",
    "insertText": "defined(_MSC_VER)"
  },
  {
    "label": "lto_get_version()",
    "kind": "Method",
    "detail": "Function (# else typedef unsigned char lto_bool_t ; # endif # else typedef bool lto_bool_t ; # endif # define LTO_API_VERSION 1 7 typedef enum { LTO_SYMBOL_ALIGNMENT_MASK = 0 x0000001F,LTO_SYMBOL_PERMISSIONS_MASK = 0 x000000E0,LTO_SYMBOL_PERMISSIONS_CODE = 0 x000000A0,LTO_SYMBOL_PERMISSIONS_DATA = 0 x000000C0,LTO_SYMBOL_PERMISSIONS_RODATA = 0 x00000080,LTO_SYMBOL_DEFINITION_MASK = 0 x00000700,LTO_SYMBOL_DEFINITION_REGULAR = 0 x00000100,LTO_SYMBOL_DEFINITION_TENTATIVE = 0 x00000200,LTO_SYMBOL_DEFINITION_WEAK = 0 x00000300,LTO_SYMBOL_DEFINITION_UNDEFINED = 0 x00000400,LTO_SYMBOL_DEFINITION_WEAKUNDEF = 0 x00000500,LTO_SYMBOL_SCOPE_MASK = 0 x00003800,LTO_SYMBOL_SCOPE_INTERNAL = 0 x00000800,LTO_SYMBOL_SCOPE_HIDDEN = 0 x00001000,LTO_SYMBOL_SCOPE_PROTECTED = 0 x00002000,LTO_SYMBOL_SCOPE_DEFAULT = 0 x00001800,LTO_SYMBOL_SCOPE_DEFAULT_CAN_BE_HIDDEN = 0 x00002800,LTO_SYMBOL_COMDAT = 0 x00004000,LTO_SYMBOL_ALIAS = 0 x00008000 } lto_symbol_attributes ; typedef enum { LTO_DEBUG_MODEL_NONE = 0,LTO_DEBUG_MODEL_DWARF = 1 } lto_debug_model ; typedef enum { LTO_CODEGEN_PIC_MODEL_STATIC = 0,LTO_CODEGEN_PIC_MODEL_DYNAMIC = 1,LTO_CODEGEN_PIC_MODEL_DYNAMIC_NO_PIC = 2,LTO_CODEGEN_PIC_MODEL_DEFAULT = 3 } lto_codegen_model ; typedef struct LLVMOpaqueLTOModule* lto_module_t ; typedef struct LLVMOpaqueLTOCodeGenerator* lto_code_gen_t ; # ifdef __cplusplus \" C \" { # endif const char*)",
    "insertText": "lto_get_version(void)"
  },
  {
    "label": "lto_get_error_message()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "lto_get_error_message(void)"
  },
  {
    "label": "lto_module_is_object_file()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_module_is_object_file(const char* path)"
  },
  {
    "label": "lto_module_is_object_file_for_target()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_module_is_object_file_for_target(const char* path, const char* target_triple_prefix)"
  },
  {
    "label": "lto_module_is_object_file_in_memory()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_module_is_object_file_in_memory(const void* mem, size_t length)"
  },
  {
    "label": "lto_module_is_object_file_in_memory_for_target()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_module_is_object_file_in_memory_for_target(const void* mem, size_t length, const char* target_triple_prefix)"
  },
  {
    "label": "lto_module_create()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create(const char* path)"
  },
  {
    "label": "lto_module_create_from_memory()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create_from_memory(const void* mem, size_t length)"
  },
  {
    "label": "lto_module_create_from_memory_with_path()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create_from_memory_with_path(const void* mem, size_t length, const char *path)"
  },
  {
    "label": "lto_module_create_in_local_context()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create_in_local_context(const void *mem, size_t length, const char *path)"
  },
  {
    "label": "lto_module_create_in_codegen_context()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create_in_codegen_context(const void *mem, size_t length, const char *path, lto_code_gen_t cg)"
  },
  {
    "label": "lto_module_create_from_fd()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create_from_fd(int fd, const char *path, size_t file_size)"
  },
  {
    "label": "lto_module_create_from_fd_at_offset()",
    "kind": "Method",
    "detail": "Function (lto_module_t)",
    "insertText": "lto_module_create_from_fd_at_offset(int fd, const char *path, size_t file_size, size_t map_size, off_t offset)"
  },
  {
    "label": "lto_module_dispose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_module_dispose(lto_module_t mod)"
  },
  {
    "label": "lto_module_get_target_triple()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "lto_module_get_target_triple(lto_module_t mod)"
  },
  {
    "label": "lto_module_set_target_triple()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_module_set_target_triple(lto_module_t mod, const char *triple)"
  },
  {
    "label": "lto_module_get_num_symbols()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "lto_module_get_num_symbols(lto_module_t mod)"
  },
  {
    "label": "lto_module_get_symbol_name()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "lto_module_get_symbol_name(lto_module_t mod, unsigned int index)"
  },
  {
    "label": "lto_module_get_symbol_attribute()",
    "kind": "Method",
    "detail": "Function (lto_symbol_attributes)",
    "insertText": "lto_module_get_symbol_attribute(lto_module_t mod, unsigned int index)"
  },
  {
    "label": "lto_module_get_linkeropts()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "lto_module_get_linkeropts(lto_module_t mod)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef enum { LTO_DS_ERROR = 0,LTO_DS_WARNING = 1,LTO_DS_REMARK = 3,LTO_DS_NOTE = 2 } lto_codegen_diagnostic_severity_t ; typedef)",
    "insertText": "void(*lto_diagnostic_handler_t)( lto_codegen_diagnostic_severity_t severity, const char *diag, void *ctxt)"
  },
  {
    "label": "lto_codegen_set_diagnostic_handler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_diagnostic_handler(lto_code_gen_t, lto_diagnostic_handler_t, void *)"
  },
  {
    "label": "lto_codegen_create()",
    "kind": "Method",
    "detail": "Function (lto_code_gen_t)",
    "insertText": "lto_codegen_create(void)"
  },
  {
    "label": "lto_codegen_create_in_local_context()",
    "kind": "Method",
    "detail": "Function (lto_code_gen_t)",
    "insertText": "lto_codegen_create_in_local_context(void)"
  },
  {
    "label": "lto_codegen_dispose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_dispose(lto_code_gen_t)"
  },
  {
    "label": "lto_codegen_add_module()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_codegen_add_module(lto_code_gen_t cg, lto_module_t mod)"
  },
  {
    "label": "lto_codegen_set_module()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_module(lto_code_gen_t cg, lto_module_t mod)"
  },
  {
    "label": "lto_codegen_set_debug_model()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_codegen_set_debug_model(lto_code_gen_t cg, lto_debug_model)"
  },
  {
    "label": "lto_codegen_set_pic_model()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_codegen_set_pic_model(lto_code_gen_t cg, lto_codegen_model)"
  },
  {
    "label": "lto_codegen_set_cpu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_cpu(lto_code_gen_t cg, const char *cpu)"
  },
  {
    "label": "lto_codegen_set_assembler_path()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_assembler_path(lto_code_gen_t cg, const char* path)"
  },
  {
    "label": "lto_codegen_set_assembler_args()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_assembler_args(lto_code_gen_t cg, const char **args, int nargs)"
  },
  {
    "label": "lto_codegen_add_must_preserve_symbol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_add_must_preserve_symbol(lto_code_gen_t cg, const char* symbol)"
  },
  {
    "label": "lto_codegen_write_merged_modules()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_codegen_write_merged_modules(lto_code_gen_t cg, const char* path)"
  },
  {
    "label": "lto_codegen_compile()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "lto_codegen_compile(lto_code_gen_t cg, size_t* length)"
  },
  {
    "label": "lto_codegen_compile_to_file()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_codegen_compile_to_file(lto_code_gen_t cg, const char** name)"
  },
  {
    "label": "lto_codegen_optimize()",
    "kind": "Method",
    "detail": "Function (lto_bool_t)",
    "insertText": "lto_codegen_optimize(lto_code_gen_t cg)"
  },
  {
    "label": "lto_codegen_compile_optimized()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "lto_codegen_compile_optimized(lto_code_gen_t cg, size_t* length)"
  },
  {
    "label": "lto_api_version()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "lto_api_version(void)"
  },
  {
    "label": "lto_codegen_debug_options()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_debug_options(lto_code_gen_t cg, const char *)"
  },
  {
    "label": "lto_initialize_disassembler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_initialize_disassembler(void)"
  },
  {
    "label": "lto_codegen_set_should_internalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_should_internalize(lto_code_gen_t cg, lto_bool_t ShouldInternalize)"
  },
  {
    "label": "lto_codegen_set_should_embed_uselists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "lto_codegen_set_should_embed_uselists(lto_code_gen_t cg, lto_bool_t ShouldEmbedUselists)"
  }
]