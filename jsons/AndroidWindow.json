[
  {
    "label": "FAndroidWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidWindow"
  },
  {
    "label": "FAndroidApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAndroidApplication"
  },
  {
    "label": "FAndroidWindow()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericWindow . h \" # include \" GenericPlatform / GenericApplication . h \" # include \" GenericPlatform / GenericPlatformMisc . h \" # include<android / native_window . h> # if USE_ANDROID_JNI # include<android / native_window_jni . h> # endif class FAndroidWindow : public FGenericWindow { public : ~)",
    "insertText": "FAndroidWindow()"
  },
  {
    "label": "Make()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FAndroidWindow>)",
    "insertText": "Make()"
  },
  {
    "label": "GetOSWindowHandle()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetOSWindowHandle()"
  },
  {
    "label": "GetFullScreenInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFullScreenInfo(int32& X, int32& Y, int32& Width, int32& Height)"
  },
  {
    "label": "SetOSWindowHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOSWindowHandle(void*)"
  },
  {
    "label": "GetScreenRect()",
    "kind": "Method",
    "detail": "Function (FPlatformRect)",
    "insertText": "GetScreenRect(bool bUseEventThreadWindow = false)"
  },
  {
    "label": "InvalidateCachedScreenRect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCachedScreenRect()"
  },
  {
    "label": "CalculateSurfaceSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateSurfaceSize(int32_t& SurfaceWidth, int32_t& SurfaceHeight, bool bUseEventThreadWindow = false)"
  },
  {
    "label": "OnWindowOrientationChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnWindowOrientationChanged(EDeviceScreenOrientation DeviceScreenOrientation)"
  },
  {
    "label": "GetDepthBufferPreference()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDepthBufferPreference()"
  },
  {
    "label": "AcquireWindowRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireWindowRef(ANativeWindow* InWindow)"
  },
  {
    "label": "ReleaseWindowRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseWindowRef(ANativeWindow* InWindow)"
  },
  {
    "label": "GetHardwareWindow_EventThread()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetHardwareWindow_EventThread()"
  },
  {
    "label": "SetHardwareWindow_EventThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHardwareWindow_EventThread(void* InWindow)"
  },
  {
    "label": "WaitForHardwareWindow()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "WaitForHardwareWindow()"
  },
  {
    "label": "IsPortraitOrientation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPortraitOrientation()"
  },
  {
    "label": "GetSafezone()",
    "kind": "Method",
    "detail": "Function (FVector4)",
    "insertText": "GetSafezone(bool bPortrait)"
  },
  {
    "label": "SetWindowDimensions_EventThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowDimensions_EventThread(ANativeWindow* DimensionWindow)"
  },
  {
    "label": "EventManagerUpdateWindowDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventManagerUpdateWindowDimensions(int32 Width, int32 Height)"
  },
  {
    "label": "GetNativeWindowResolution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNativeWindowResolution(int32_t& OutWidth, int32_t& OutHeight)"
  },
  {
    "label": "GetWindowMode()",
    "kind": "Method",
    "detail": "Function (protected : EWindowMode::Type)",
    "insertText": "GetWindowMode()"
  },
  {
    "label": "WaitForWindowDimensions()",
    "kind": "Method",
    "detail": "Function (FAndroidApplication* OwningApplication ; int32 RegionX ; int32 RegionY ; void* NativeWindow ; bool)",
    "insertText": "WaitForWindowDimensions()"
  }
]