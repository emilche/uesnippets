[
  {
    "label": "StarScanSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StarScanSnapshot"
  },
  {
    "label": "ViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ViewBase"
  },
  {
    "label": "ClearingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ClearingView"
  },
  {
    "label": "ScanningView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScanningView"
  },
  {
    "label": "SweepingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SweepingView"
  },
  {
    "label": "UnprotectingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnprotectingView"
  },
  {
    "label": "VisitConcurrently()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_STARSCAN_SNAPSHOT_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_STARSCAN_SNAPSHOT_H_ # include<memory> # include<utility> # include \" base / allocator / partition_allocator / starscan / pcscan_internal . h \" # include \" base / allocator / partition_allocator / starscan / raceful_worklist . h \" namespace partition_alloc::internal { class StarScanSnapshot final : public AllocatedOnPCScanMetadataPartition { public : using SuperPageBase = uintptr_t ; using SuperPagesWorklist = RacefulWorklist<SuperPageBase> ; class ViewBase { public : template<Function> void)",
    "insertText": "VisitConcurrently(Function)"
  },
  {
    "label": "VisitNonConcurrently()",
    "kind": "Method",
    "detail": "Function (template<Function> void)",
    "insertText": "VisitNonConcurrently(Function)"
  },
  {
    "label": "ViewBase()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "ViewBase(SuperPagesWorklist& worklist) : worklist_(worklist)"
  },
  {
    "label": "ClearingView()",
    "kind": "Method",
    "detail": "Function (} private : SuperPagesWorklist& worklist_ ; } ; class ClearingView : public ViewBase { public :)",
    "insertText": "ClearingView(StarScanSnapshot& snapshot)"
  },
  {
    "label": "ScanningView()",
    "kind": "Method",
    "detail": "Function (} ; class ScanningView : public ViewBase { public :)",
    "insertText": "ScanningView(StarScanSnapshot& snapshot)"
  },
  {
    "label": "SweepingView()",
    "kind": "Method",
    "detail": "Function (} ; class SweepingView : public ViewBase { public :)",
    "insertText": "SweepingView(StarScanSnapshot& snapshot)"
  },
  {
    "label": "UnprotectingView()",
    "kind": "Method",
    "detail": "Function (} ; class UnprotectingView : public ViewBase { public :)",
    "insertText": "UnprotectingView(StarScanSnapshot& snapshot)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; std::unique_ptr<StarScanSnapshot>)",
    "insertText": "Create(const PCScanInternal&)"
  },
  {
    "label": "StarScanSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StarScanSnapshot(const StarScanSnapshot&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StarScanSnapshot&)",
    "insertText": "operator(const StarScanSnapshot&)"
  },
  {
    "label": "StarScanSnapshot()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StarScanSnapshot()"
  },
  {
    "label": "StarScanSnapshot()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "StarScanSnapshot(const PCScanInternal&)"
  },
  {
    "label": "VisitConcurrently()",
    "kind": "Method",
    "detail": "Function (SuperPagesWorklist clear_worklist_ ; SuperPagesWorklist scan_worklist_ ; SuperPagesWorklist unprotect_worklist_ ; SuperPagesWorklist sweep_worklist_ ; } ; template<Function> void StarScanSnapshot::)",
    "insertText": "VisitConcurrently(Function f)"
  },
  {
    "label": "view()",
    "kind": "Method",
    "detail": "Function (SuperPagesWorklist::RandomizedView)",
    "insertText": "view(worklist_)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (view .)",
    "insertText": "Visit(std::move(f))"
  },
  {
    "label": "VisitNonConcurrently()",
    "kind": "Method",
    "detail": "Function (} template<Function> void StarScanSnapshot::)",
    "insertText": "VisitNonConcurrently(Function f)"
  },
  {
    "label": "VisitNonConcurrently()",
    "kind": "Method",
    "detail": "Function (worklist_ .)",
    "insertText": "VisitNonConcurrently(std::move(f))"
  },
  {
    "label": "ClearingView()",
    "kind": "Method",
    "detail": "Function (} StarScanSnapshot::)",
    "insertText": "ClearingView(StarScanSnapshot& snapshot) : StarScanSnapshot::ViewBase(snapshot.clear_worklist_)"
  },
  {
    "label": "ScanningView()",
    "kind": "Method",
    "detail": "Function (} StarScanSnapshot::)",
    "insertText": "ScanningView(StarScanSnapshot& snapshot) : StarScanSnapshot::ViewBase(snapshot.scan_worklist_)"
  },
  {
    "label": "SweepingView()",
    "kind": "Method",
    "detail": "Function (} StarScanSnapshot::)",
    "insertText": "SweepingView(StarScanSnapshot& snapshot) : StarScanSnapshot::ViewBase(snapshot.sweep_worklist_)"
  },
  {
    "label": "UnprotectingView()",
    "kind": "Method",
    "detail": "Function (} StarScanSnapshot::)",
    "insertText": "UnprotectingView(StarScanSnapshot& snapshot) : StarScanSnapshot::ViewBase(snapshot.unprotect_worklist_)"
  }
]