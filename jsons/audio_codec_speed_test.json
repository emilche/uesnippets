[
  {
    "label": "AudioCodecSpeedTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioCodecSpeedTest"
  },
  {
    "label": "AudioCodecSpeedTest()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_TOOLS_AUDIO_CODEC_SPEED_TEST_H_ # define MODULES_AUDIO_CODING_CODECS_TOOLS_AUDIO_CODEC_SPEED_TEST_H_ # include<memory> # include<string> # include \" test / gtest . h \" namespace webrtc { typedef std::tuple<size_t,int,std::string,std::string,bool> coding_param ; class AudioCodecSpeedTest : public::testing::TestWithParam<coding_param> { protected :)",
    "insertText": "AudioCodecSpeedTest(int block_duration_ms, int input_sampling_khz, int output_sampling_khz)"
  },
  {
    "label": "SetUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUp()"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "EncodeABlock()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "EncodeABlock(int16_t* in_data, uint8_t* bit_stream, size_t max_bytes, size_t* encoded_bytes)"
  },
  {
    "label": "DecodeABlock()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "DecodeABlock(const uint8_t* bit_stream, size_t encoded_bytes, int16_t* out_data)"
  },
  {
    "label": "EncodeDecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeDecode(size_t audio_duration)"
  }
]