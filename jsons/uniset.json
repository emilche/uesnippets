[
  {
    "label": "BMPSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BMPSet"
  },
  {
    "label": "ParsePosition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ParsePosition"
  },
  {
    "label": "RBBIRuleScanner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RBBIRuleScanner"
  },
  {
    "label": "SymbolTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SymbolTable"
  },
  {
    "label": "UnicodeSetStringSpan",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnicodeSetStringSpan"
  },
  {
    "label": "UVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVector"
  },
  {
    "label": "RuleCharacterIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RuleCharacterIterator"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "ESerialization",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESerialization"
  },
  {
    "label": "description",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "description"
  },
  {
    "label": "description",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "description"
  },
  {
    "label": "description",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "description"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "USetAccess",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USetAccess"
  },
  {
    "label": "RBBIRuleScanner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RBBIRuleScanner"
  },
  {
    "label": "UnicodeSetIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnicodeSetIterator"
  },
  {
    "label": "setToBogus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setToBogus()"
  },
  {
    "label": "resemblesPattern()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "resemblesPattern(const UnicodeString& pattern,\n                                  int32_t pos)"
  },
  {
    "label": "matches()",
    "kind": "Method",
    "detail": "Function (UMatchDegree)",
    "insertText": "matches(const Replaceable& text,\n                         int32_t& offset,\n                         int32_t limit,\n                         UBool incremental)"
  },
  {
    "label": "matchRest()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "matchRest(const Replaceable& text,\n                             int32_t start, int32_t limit,\n                             const UnicodeString& s)"
  },
  {
    "label": "getSingleCP()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getSingleCP(const UnicodeString& s)"
  },
  {
    "label": "_add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_add(const UnicodeString& s)"
  },
  {
    "label": "createFrom()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createFrom(const UnicodeString& s)"
  },
  {
    "label": "createFromAll()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createFromAll(const UnicodeString& s)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "applyPatternIgnoreSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyPatternIgnoreSpace(const UnicodeString& pattern,\n                                 ParsePosition& pos,\n                                 const SymbolTable* symbols,\n                                 UErrorCode& status)"
  },
  {
    "label": "nextCapacity()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "nextCapacity(int32_t minCapacity)"
  },
  {
    "label": "ensureCapacity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ensureCapacity(int32_t newLen)"
  },
  {
    "label": "ensureBufferCapacity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ensureBufferCapacity(int32_t newLen)"
  },
  {
    "label": "swapBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "swapBuffers(void)"
  },
  {
    "label": "allocateStrings()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "allocateStrings(UErrorCode &status)"
  },
  {
    "label": "_appendToPat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_appendToPat(UnicodeString& buf, const UnicodeString& s, UBool escapeUnprintable)"
  },
  {
    "label": "_appendToPat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_appendToPat(UnicodeString& buf, UChar32 c, UBool escapeUnprintable)"
  },
  {
    "label": "exclusiveOr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "exclusiveOr(const UChar32* other, int32_t otherLen, int8_t polarity)"
  },
  {
    "label": "add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "add(const UChar32* other, int32_t otherLen, int8_t polarity)"
  },
  {
    "label": "retain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "retain(const UChar32* other, int32_t otherLen, int8_t polarity)"
  },
  {
    "label": "resemblesPropertyPattern()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "resemblesPropertyPattern(const UnicodeString& pattern,\n                                          int32_t pos)"
  },
  {
    "label": "resemblesPropertyPattern()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "resemblesPropertyPattern(RuleCharacterIterator& chars,\n                                          int32_t iterOpts)"
  },
  {
    "label": "applyPropertyPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyPropertyPattern(RuleCharacterIterator& chars,\n                              UnicodeString& rebuiltPat,\n                              UErrorCode& ec)"
  },
  {
    "label": "applyFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyFilter(Filter filter,\n                     void* context,\n                     const UnicodeSet* inclusions,\n                     UErrorCode &status)"
  },
  {
    "label": "applyIntPropertyValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyIntPropertyValue(const UCPMap *map,\n                               UCPMapValueFilter *filter, const void *context,\n                               UErrorCode &errorCode)"
  },
  {
    "label": "setPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPattern(const char16_t *newPat, int32_t newPatLen)"
  },
  {
    "label": "releasePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "releasePattern()"
  }
]