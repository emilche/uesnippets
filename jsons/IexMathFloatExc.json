[
  {
    "label": "IEX_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEX_EXPORT_TYPE"
  },
  {
    "label": "mathExcOn()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IEXMATHFLOATEXC_H # define INCLUDED_IEXMATHFLOATEXC_H # include \" IexExport . h \" # include \" IexNamespace . h \" # include \" IexMathIeeeExc . h \" IEX_INTERNAL_NAMESPACE_HEADER_ENTER IEX_EXPORT void)",
    "insertText": "mathExcOn(int when = (IEEE_OVERFLOW | IEEE_DIVZERO | IEEE_INVALID))"
  },
  {
    "label": "getMathExcOn()",
    "kind": "Method",
    "detail": "Function (IEX_EXPORT int)",
    "insertText": "getMathExcOn()"
  },
  {
    "label": "MathExcOn()",
    "kind": "Method",
    "detail": "Function (class IEX_EXPORT_TYPE MathExcOn { public : IEX_EXPORT)",
    "insertText": "MathExcOn(int when)"
  },
  {
    "label": "MathExcOn()",
    "kind": "Method",
    "detail": "Function (IEX_EXPORT ~)",
    "insertText": "MathExcOn()"
  },
  {
    "label": "MathExcOn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MathExcOn(const MathExcOn&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MathExcOn&)",
    "insertText": "operator(const MathExcOn&)"
  },
  {
    "label": "MathExcOn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MathExcOn(MathExcOn&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (MathExcOn&)",
    "insertText": "operator(MathExcOn&&)"
  },
  {
    "label": "handleOutstandingExceptions()",
    "kind": "Method",
    "detail": "Function (IEX_EXPORT void)",
    "insertText": "handleOutstandingExceptions()"
  }
]