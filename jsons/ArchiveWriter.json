[
  {
    "label": "NewArchiveIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NewArchiveIterator"
  },
  {
    "label": "NewArchiveIterator()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_OBJECT_ARCHIVEWRITER_H # define LLVM_OBJECT_ARCHIVEWRITER_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / Object / Archive . h \" # include \" llvm / Support / FileSystem . h \" namespace llvm { class NewArchiveIterator { bool IsNewMember ; StringRef Name ; object::Archive::child_iterator OldI ; StringRef NewFilename ; public :)",
    "insertText": "NewArchiveIterator(object::Archive::child_iterator I, StringRef Name)"
  },
  {
    "label": "NewArchiveIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NewArchiveIterator(StringRef I, StringRef Name)"
  },
  {
    "label": "isNewMember()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isNewMember()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "getName()"
  },
  {
    "label": "getOld()",
    "kind": "Method",
    "detail": "Function (object::Archive::child_iterator)",
    "insertText": "getOld()"
  },
  {
    "label": "getNew()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "getNew()"
  },
  {
    "label": "getFD()",
    "kind": "Method",
    "detail": "Function (llvm::ErrorOr<int>)",
    "insertText": "getFD(sys::fs::file_status &NewStatus)"
  },
  {
    "label": "getStatus()",
    "kind": "Method",
    "detail": "Function (const sys::fs::file_status&)",
    "insertText": "getStatus()"
  },
  {
    "label": "writeArchive()",
    "kind": "Method",
    "detail": "Function (} ; std::pair<StringRef,std::error_code>)",
    "insertText": "writeArchive(StringRef ArcName, std::vector<NewArchiveIterator> &NewMembers, bool WriteSymtab, object::Archive::Kind Kind, bool Deterministic)"
  }
]