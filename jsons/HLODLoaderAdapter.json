[
  {
    "label": "FHLODActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLODActorDesc"
  },
  {
    "label": "FLoaderAdapterHLOD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoaderAdapterHLOD"
  },
  {
    "label": "FLoaderAdapterHLOD()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" WorldPartition / WorldPartitionActorLoaderInterface . h \" class FHLODActorDesc ; class FLoaderAdapterHLOD : public IWorldPartitionActorLoaderInterface::ILoaderAdapter { public :)",
    "insertText": "FLoaderAdapterHLOD(UWorld* InWorld)"
  },
  {
    "label": "ForEachActor()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ForEachActor(TFunctionRef<void(const FWorldPartitionHandle&)> InOperation)"
  },
  {
    "label": "PassActorDescFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassActorDescFilter(const FWorldPartitionHandle& ActorHandle)"
  },
  {
    "label": "ShouldLoadHLOD()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ShouldLoadHLOD(const FHLODActorDesc& HLODActorDesc)"
  }
]