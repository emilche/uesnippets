[
  {
    "label": "IAudioModulationManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioModulationManager"
  },
  {
    "label": "ISoundModulatable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISoundModulatable"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USoundModulatorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundModulatorBase"
  },
  {
    "label": "FAudioPluginInitializationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioPluginInitializationParams"
  },
  {
    "label": "FAudioPluginSourceInputData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioPluginSourceInputData"
  },
  {
    "label": "FAudioPluginSourceOutputData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioPluginSourceOutputData"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FCommonViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCommonViewportClient"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "FModulationParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FModulationParameter"
  },
  {
    "label": "IModulatorSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModulatorSettings"
  },
  {
    "label": "FModulatorHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FModulatorHandle"
  },
  {
    "label": "IAudioModulationManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioModulationManager"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "USoundModulatorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundModulatorBase"
  },
  {
    "label": "FSoundModulatorAssetProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundModulatorAssetProxy"
  },
  {
    "label": "FSoundModulationParameterAssetProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundModulationParameterAssetProxy"
  },
  {
    "label": "ISoundModulatable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISoundModulatable"
  },
  {
    "label": "FModulationParameter()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulationParameter()"
  },
  {
    "label": "FModulationParameter()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulationParameter(const FModulationParameter& InParam)"
  },
  {
    "label": "FModulationParameter()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulationParameter(FModulationParameter&& InParam)"
  },
  {
    "label": "IsModulationParameterRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModulationParameterRegistered(FName InName)"
  },
  {
    "label": "RegisterModulationParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterModulationParameter(FName InName, FModulationParameter&& InParameter)"
  },
  {
    "label": "UnregisterModulationParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterModulationParameter(FName InName)"
  },
  {
    "label": "UnregisterAllModulationParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAllModulationParameters()"
  },
  {
    "label": "FModulatorHandle()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulatorHandle(Audio::FModulationParameter&& InParameter)"
  },
  {
    "label": "FModulatorHandle()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulatorHandle(IAudioModulationManager& InModulation, const Audio::IModulatorSettings& InModulatorSettings, Audio::FModulationParameter&& InParameter)"
  },
  {
    "label": "FModulatorHandle()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulatorHandle(const FModulatorHandle& InOther)"
  },
  {
    "label": "FModulatorHandle()",
    "kind": "Method",
    "detail": "Function (AUDIOEXTENSIONS_API)",
    "insertText": "FModulatorHandle(FModulatorHandle&& InOther)"
  },
  {
    "label": "HashCombineFast()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "HashCombineFast(InModulatorHandle.HandleId, InModulatorHandle.ModulatorId)"
  },
  {
    "label": "IMPL_AUDIOPROXY_CLASS()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "IMPL_AUDIOPROXY_CLASS(FSoundModulatorAssetProxy)"
  },
  {
    "label": "IMPL_AUDIOPROXY_CLASS()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "IMPL_AUDIOPROXY_CLASS(FSoundModulationParameterAssetProxy)"
  }
]