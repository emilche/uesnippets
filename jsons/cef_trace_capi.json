[
  {
    "label": "_cef_end_tracing_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_end_tracing_callback_t"
  },
  {
    "label": "_cef_completion_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_completion_callback_t"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_TRACE_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_TRACE_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_callback_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_end_tracing_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* on_end_tracing_complete)( struct _cef_end_tracing_callback_t* self, const cef_string_t* tracing_file)"
  },
  {
    "label": "cef_begin_tracing()",
    "kind": "Method",
    "detail": "Function (} cef_end_tracing_callback_t ; CEF_EXPORT int)",
    "insertText": "cef_begin_tracing(const cef_string_t* categories, struct _cef_completion_callback_t* callback)"
  },
  {
    "label": "cef_end_tracing()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_end_tracing(const cef_string_t* tracing_file, cef_end_tracing_callback_t* callback)"
  },
  {
    "label": "cef_now_from_system_trace_time()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int64)",
    "insertText": "cef_now_from_system_trace_time()"
  }
]