[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FResourceSizeEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourceSizeEx"
  },
  {
    "label": "FResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" UObject / NameTypes . h \" class FName ; class FOutputDevice ; namespace EResourceSizeMode { enum Type { Exclusive,EstimatedTotal,} ; } ; struct FResourceSizeEx { public :)",
    "insertText": "FResourceSizeEx()"
  },
  {
    "label": "FResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResourceSizeEx(const EResourceSizeMode::Type InResourceSizeMode)"
  },
  {
    "label": "FResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResourceSizeEx(const EResourceSizeMode::Type InResourceSizeMode, const SIZE_T InDedicatedSystemMemoryBytes, const SIZE_T InDedicatedVideoMemoryBytes)"
  },
  {
    "label": "FResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FResourceSizeEx(const EResourceSizeMode::Type InResourceSizeMode, const SIZE_T InUnknownMemoryBytes)"
  },
  {
    "label": "LogSummary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogSummary(FOutputDevice& Ar)"
  },
  {
    "label": "GetResourceSizeMode()",
    "kind": "Method",
    "detail": "Function (EResourceSizeMode::Type)",
    "insertText": "GetResourceSizeMode()"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "AddDedicatedSystemMemoryBytes(const FName& Tag, const SIZE_T InMemoryBytes)"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "AddDedicatedSystemMemoryBytes(const SIZE_T InMemoryBytes)"
  },
  {
    "label": "GetDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetDedicatedSystemMemoryBytes()"
  },
  {
    "label": "AddDedicatedVideoMemoryBytes()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "AddDedicatedVideoMemoryBytes(const FName& Tag, const SIZE_T InMemoryBytes)"
  },
  {
    "label": "AddDedicatedVideoMemoryBytes()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "AddDedicatedVideoMemoryBytes(const SIZE_T InMemoryBytes)"
  },
  {
    "label": "GetDedicatedVideoMemoryBytes()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetDedicatedVideoMemoryBytes()"
  },
  {
    "label": "AddUnknownMemoryBytes()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "AddUnknownMemoryBytes(const FName& Tag, const SIZE_T InMemoryBytes)"
  },
  {
    "label": "AddUnknownMemoryBytes()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "AddUnknownMemoryBytes(const SIZE_T InMemoryBytes)"
  },
  {
    "label": "GetUnknownMemoryBytes()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetUnknownMemoryBytes()"
  },
  {
    "label": "GetTotalMemoryBytes()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetTotalMemoryBytes()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FResourceSizeEx&)",
    "insertText": "operator(const FResourceSizeEx& InRHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : EResourceSizeMode::Type ResourceSizeMode ; TMap<FName,SIZE_T> DedicatedSystemMemoryBytesMap ; TMap<FName,SIZE_T> DedicatedVideoMemoryBytesMap ; TMap<FName,SIZE_T> UnknownMemoryBytesMap ; } ; FResourceSizeEx)",
    "insertText": "operator(FResourceSizeEx InLHS, const FResourceSizeEx& InRHS)"
  }
]