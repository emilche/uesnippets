[
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "FWidgetDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetDecorator"
  },
  {
    "label": "FTextLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextLayout"
  },
  {
    "label": "FImageDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImageDecorator"
  },
  {
    "label": "FHyperlinkDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHyperlinkDecorator"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateGlobals . h \" # include \" Framework / Text / ISlateRun . h \" # include \" Framework / Text / SlateHyperlinkRun . h \" # include \" Framework / Text / ITextDecorator . h \" # include \" Framework / Text / SlateWidgetRun . h \" class ISlateStyle ; # if WITH_FANCY_TEXT class FWidgetDecorator : public ITextDecorator { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FSlateWidgetRun::FWidgetRunInfo, FCreateWidget, const FTextRunInfo& , const ISlateStyle* ) public: static SLATE_API TSharedRef< FWidgetDecorator > Create( FString InRunName, const FCreateWidget& InCreateWidgetDelegate)"
  },
  {
    "label": "FWidgetDecorator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FWidgetDecorator()"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "Supports(const FTextRunParseResults& RunParseResult, const FString& Text)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISlateRun>)",
    "insertText": "Create(const TSharedRef<class FTextLayout>& TextLayout, const FTextRunParseResults& RunParseResult, const FString& OriginalText, const TSharedRef< FString >& InOutModelText, const ISlateStyle* Style)"
  },
  {
    "label": "FWidgetDecorator()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FWidgetDecorator(FString InRunName, const FCreateWidget& InCreateWidgetDelegate)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (private : FString RunName ; FCreateWidget CreateWidgetDelegate ; } ; class FImageDecorator : public ITextDecorator { public : TSharedRef<FImageDecorator>)",
    "insertText": "Create(FString InRunName, const ISlateStyle* const InOverrideStyle = NULL)"
  },
  {
    "label": "FImageDecorator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FImageDecorator()"
  },
  {
    "label": "FImageDecorator()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FImageDecorator(FString InRunName, const ISlateStyle* const InOverrideStyle)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (private : FString RunName ; const ISlateStyle* OverrideStyle ; } ; class FHyperlinkDecorator : public ITextDecorator { public : TSharedRef<FHyperlinkDecorator>)",
    "insertText": "Create(FString Id, const FSlateHyperlinkRun::FOnClick& NavigateDelegate, const FSlateHyperlinkRun::FOnGetTooltipText& InToolTipTextDelegate = FSlateHyperlinkRun::FOnGetTooltipText(), const FSlateHyperlinkRun::FOnGenerateTooltip& InToolTipDelegate = FSlateHyperlinkRun::FOnGenerateTooltip())"
  },
  {
    "label": "FHyperlinkDecorator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FHyperlinkDecorator()"
  },
  {
    "label": "FHyperlinkDecorator()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FHyperlinkDecorator(FString InId, const FSlateHyperlinkRun::FOnClick& InNavigateDelegate, const FSlateHyperlinkRun::FOnGetTooltipText& InToolTipTextDelegate, const FSlateHyperlinkRun::FOnGenerateTooltip& InToolTipDelegate)"
  }
]