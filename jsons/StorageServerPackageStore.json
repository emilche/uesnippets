[
  {
    "label": "FStorageServerConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStorageServerConnection"
  },
  {
    "label": "FFilePackageStoreEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFilePackageStoreEntry"
  },
  {
    "label": "FStorageServerPackageStoreBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStorageServerPackageStoreBackend"
  },
  {
    "label": "FStoreEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStoreEntry"
  },
  {
    "label": "FStorageServerPackageStoreBackend()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IO / PackageStore . h \" # if ! UE_BUILD_SHIPPING class FStorageServerConnection ; struct FFilePackageStoreEntry ; class FStorageServerPackageStoreBackend : public IPackageStoreBackend { public :)",
    "insertText": "FStorageServerPackageStoreBackend(FStorageServerConnection& Connection)"
  },
  {
    "label": "FStorageServerPackageStoreBackend()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStorageServerPackageStoreBackend()"
  },
  {
    "label": "OnMounted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMounted(TSharedRef<const FPackageStoreBackendContext> Context)"
  },
  {
    "label": "BeginRead()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginRead()"
  },
  {
    "label": "EndRead()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndRead()"
  },
  {
    "label": "GetPackageStoreEntry()",
    "kind": "Method",
    "detail": "Function (} EPackageStoreEntryStatus)",
    "insertText": "GetPackageStoreEntry(FPackageId PackageIde, FName PackageName, FPackageStoreEntry& OutPackageStoreEntry)"
  },
  {
    "label": "GetPackageRedirectInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPackageRedirectInfo(FPackageId PackageId, FName& OutSourcePackageName, FPackageId& OutRedirectedToPackageId)"
  }
]