[
  {
    "label": "AudioEncoderCopyRed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioEncoderCopyRed"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "Config()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_RED_AUDIO_ENCODER_COPY_RED_H_ # define MODULES_AUDIO_CODING_CODECS_RED_AUDIO_ENCODER_COPY_RED_H_ # include<stddef . h> # include<stdint . h> # include<list> # include<memory> # include<utility> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / audio_codecs / audio_encoder . h \" # include \" api / field_trials_view . h \" # include \" api / units / time_delta . h \" # include \" rtc_base / buffer . h \" namespace webrtc { class AudioEncoderCopyRed final : public AudioEncoder { public : struct Config {)",
    "insertText": "Config()"
  },
  {
    "label": "Config()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Config(Config&&)"
  },
  {
    "label": "AudioEncoderCopyRed()",
    "kind": "Method",
    "detail": "Function (int payload_type ; std::unique_ptr<AudioEncoder> speech_encoder ; } ;)",
    "insertText": "AudioEncoderCopyRed(Config&& config, const FieldTrialsView& field_trials)"
  },
  {
    "label": "AudioEncoderCopyRed()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AudioEncoderCopyRed()"
  },
  {
    "label": "AudioEncoderCopyRed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioEncoderCopyRed(const AudioEncoderCopyRed&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioEncoderCopyRed&)",
    "insertText": "operator(const AudioEncoderCopyRed&)"
  },
  {
    "label": "SampleRateHz()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SampleRateHz()"
  },
  {
    "label": "NumChannels()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "NumChannels()"
  },
  {
    "label": "RtpTimestampRateHz()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RtpTimestampRateHz()"
  },
  {
    "label": "Num10MsFramesInNextPacket()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Num10MsFramesInNextPacket()"
  },
  {
    "label": "Max10MsFramesInAPacket()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Max10MsFramesInAPacket()"
  },
  {
    "label": "GetTargetBitrate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTargetBitrate()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetFec()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetFec(bool enable)"
  },
  {
    "label": "SetDtx()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDtx(bool enable)"
  },
  {
    "label": "GetDtx()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDtx()"
  },
  {
    "label": "SetApplication()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetApplication(Application application)"
  },
  {
    "label": "SetMaxPlaybackRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxPlaybackRate(int frequency_hz)"
  },
  {
    "label": "EnableAudioNetworkAdaptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableAudioNetworkAdaptor(const std::string& config_string, RtcEventLog* event_log)"
  },
  {
    "label": "DisableAudioNetworkAdaptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableAudioNetworkAdaptor()"
  },
  {
    "label": "OnReceivedUplinkPacketLossFraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedUplinkPacketLossFraction(float uplink_packet_loss_fraction)"
  },
  {
    "label": "OnReceivedUplinkBandwidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedUplinkBandwidth(int target_audio_bitrate_bps, absl::optional<int64_t> bwe_period_ms)"
  },
  {
    "label": "OnReceivedUplinkAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedUplinkAllocation(BitrateAllocationUpdate update)"
  },
  {
    "label": "OnReceivedRtt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedRtt(int rtt_ms)"
  },
  {
    "label": "OnReceivedOverhead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedOverhead(size_t overhead_bytes_per_packet)"
  },
  {
    "label": "SetReceiverFrameLengthRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReceiverFrameLengthRange(int min_frame_length_ms, int max_frame_length_ms)"
  },
  {
    "label": "GetANAStats()",
    "kind": "Method",
    "detail": "Function (ANAStats)",
    "insertText": "GetANAStats()"
  },
  {
    "label": "GetFrameLengthRange()",
    "kind": "Method",
    "detail": "Function (absl::optional<std::pair<TimeDelta,TimeDelta>>)",
    "insertText": "GetFrameLengthRange()"
  },
  {
    "label": "ReclaimContainedEncoders()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<std::unique_ptr<AudioEncoder>>)",
    "insertText": "ReclaimContainedEncoders()"
  },
  {
    "label": "EncodeImpl()",
    "kind": "Method",
    "detail": "Function (protected : EncodedInfo)",
    "insertText": "EncodeImpl(uint32_t rtp_timestamp, rtc::ArrayView<const int16_t> audio, rtc::Buffer* encoded)"
  }
]