[
  {
    "label": "MCFixup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCFixup"
  },
  {
    "label": "MCInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCInst"
  },
  {
    "label": "MCSubtargetInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSubtargetInfo"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "SmallVectorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallVectorImpl"
  },
  {
    "label": "MCCodeEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCCodeEmitter"
  },
  {
    "label": "MCCodeEmitter()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCCODEEMITTER_H # define LLVM_MC_MCCODEEMITTER_H # include \" llvm / Support / Compiler . h \" namespace llvm { class MCFixup ; class MCInst ; class MCSubtargetInfo ; class raw_ostream ; template<T> class SmallVectorImpl ; class MCCodeEmitter { private :)",
    "insertText": "MCCodeEmitter(const MCCodeEmitter &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const MCCodeEmitter &)"
  },
  {
    "label": "MCCodeEmitter()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "MCCodeEmitter()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "encodeInstruction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "encodeInstruction(const MCInst &Inst, raw_ostream &OS, SmallVectorImpl<MCFixup> &Fixups, const MCSubtargetInfo &STI)"
  }
]