[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "IModuleProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModuleProvider"
  },
  {
    "label": "FCallstacksProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCallstacksProvider"
  },
  {
    "label": "FCallstacksProvider()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" TraceServices / Model / Callstack . h \" # include \" HAL / CriticalSection . h \" # include \" Common / PagedArray . h \" # include \" Containers / Map . h \" namespace TraceServices { class IAnalysisSession ; class IModuleProvider ; class FCallstacksProvider : public ICallstacksProvider { public :)",
    "insertText": "FCallstacksProvider(IAnalysisSession& Session)"
  },
  {
    "label": "FCallstacksProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCallstacksProvider()"
  },
  {
    "label": "GetCallstack()",
    "kind": "Method",
    "detail": "Function (} const FCallstack*)",
    "insertText": "GetCallstack(uint32 CallstackId)"
  },
  {
    "label": "GetCallstacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCallstacks(const TArrayView<uint32>& CallstackIds, FCallstack const** OutCallstacks)"
  },
  {
    "label": "AddCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCallstack(uint32 CallstackId, const uint64* Frames, uint8 FrameCount)"
  },
  {
    "label": "AddCallstackWithHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AddCallstackWithHash(uint64 CallstackHash, const uint64* Frames, uint8 FrameCount)"
  },
  {
    "label": "GetCallstackIdForHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCallstackIdForHash(uint64 CallstackHash)"
  }
]