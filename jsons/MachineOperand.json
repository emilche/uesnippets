[
  {
    "label": "BlockAddress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockAddress"
  },
  {
    "label": "ConstantFP",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantFP"
  },
  {
    "label": "ConstantInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantInt"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "MachineBasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineBasicBlock"
  },
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "ModuleSlotTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ModuleSlotTracker"
  },
  {
    "label": "TargetMachine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetMachine"
  },
  {
    "label": "TargetRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetRegisterInfo"
  },
  {
    "label": "hash_code",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hash_code"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "isn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "isn"
  },
  {
    "label": "MachineOperand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineOperand"
  },
  {
    "label": "MachineOperandType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "MachineOperandType"
  },
  {
    "label": "contains",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "contains"
  },
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "MachineRegisterInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineRegisterInfo"
  },
  {
    "label": "setReg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setReg(unsigned Reg)"
  },
  {
    "label": "substVirtReg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "substVirtReg(unsigned Reg, unsigned SubIdx, const TargetRegisterInfo&)"
  },
  {
    "label": "substPhysReg()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "substPhysReg(unsigned Reg, const TargetRegisterInfo&)"
  },
  {
    "label": "setIsDef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setIsDef(bool Val = true)"
  },
  {
    "label": "hash_value()",
    "kind": "Method",
    "detail": "Function (hash_code)",
    "insertText": "hash_value(const MachineOperand &MO)"
  },
  {
    "label": "ChangeToImmediate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeToImmediate(int64_t ImmVal)"
  },
  {
    "label": "ChangeToFPImmediate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeToFPImmediate(const ConstantFP *FPImm)"
  },
  {
    "label": "ChangeToES()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeToES(const char *SymName, unsigned char TargetFlags = 0)"
  },
  {
    "label": "ChangeToMCSymbol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeToMCSymbol(MCSymbol *Sym)"
  },
  {
    "label": "ChangeToRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeToRegister(unsigned Reg, bool isDef, bool isImp = false,\n                        bool isKill = false, bool isDead = false,\n                        bool isUndef = false, bool isDebug = false)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_Immediate)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_CImmediate)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_FPImmediate)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_Register)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_MachineBasicBlock)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_FrameIndex)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_ConstantPoolIndex)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_TargetIndex)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_JumpTableIndex)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_GlobalAddress)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_ExternalSymbol)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_BlockAddress)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_RegisterMask)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_RegisterLiveOut)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_Metadata)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_MCSymbol)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (MachineOperand)",
    "insertText": "Op(MachineOperand::MO_CFIIndex)"
  },
  {
    "label": "removeRegFromUses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeRegFromUses()"
  },
  {
    "label": "hash_value()",
    "kind": "Method",
    "detail": "Function (hash_code)",
    "insertText": "hash_value(const MachineOperand &MO)"
  }
]