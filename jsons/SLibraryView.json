[
  {
    "label": "FWidgetTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetTemplate"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "SLibraryView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLibraryView"
  },
  {
    "label": "FLibraryViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLibraryViewModel"
  },
  {
    "label": "FWidgetViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetViewModel"
  },
  {
    "label": "FWidgetTemplateViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetTemplateViewModel"
  },
  {
    "label": "SLibraryViewItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLibraryViewItem"
  },
  {
    "label": "FWidgetBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditor"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" WidgetBlueprintEditor . h \" # include \" Misc / DelegateFilter . h \" # include \" Widgets / Views / STreeView . h \" # include \" Framework / Views / TreeFilterHandler . h \" # include \" IContentBrowserSingleton . h \" class FWidgetTemplate ; class UWidgetBlueprint ; class SLibraryView ; class FLibraryViewModel ; class FWidgetViewModel ; class FWidgetTemplateViewModel ; class SLibraryViewItem : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SLibraryViewItem)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FText, HighlightText) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FWidgetTemplateViewModel> InWidgetViewModel)"
  },
  {
    "label": "GetFavoriteToggleToolTipText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetFavoriteToggleToolTipText()"
  },
  {
    "label": "GetFavoritedState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetFavoritedState()"
  },
  {
    "label": "OnFavoriteToggled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFavoriteToggled(ECheckBoxState InNewState)"
  },
  {
    "label": "GetFavoritedStateVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFavoritedStateVisibility()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FWidgetTemplateViewModel> WidgetViewModel ; } ; class SLibraryView : public SCompoundWidget { public : typedef TDelegateFilter<TSharedPtr<FWidgetViewModel>> WidgetViewModelDelegateFilter ; public :)",
    "insertText": "SLATE_BEGIN_ARGS(SLibraryView)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FWidgetBlueprintEditor> InBlueprintEditor)"
  },
  {
    "label": "SLibraryView()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SLibraryView()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "WidgetLibrary_OnClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WidgetLibrary_OnClick(TSharedPtr<FWidgetViewModel> SelectedItem)"
  },
  {
    "label": "ConstructViewOptions()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "ConstructViewOptions()"
  },
  {
    "label": "OnGetChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildren(TSharedPtr<FWidgetViewModel> Item, TArray< TSharedPtr<FWidgetViewModel> >& Children)"
  },
  {
    "label": "OnGenerateWidgetTemplateLibrary()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateWidgetTemplateLibrary(TSharedPtr<FWidgetViewModel> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnSearchChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSearchChanged(const FText& InFilterText)"
  },
  {
    "label": "OnViewModelUpdating()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewModelUpdating()"
  },
  {
    "label": "OnViewModelUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewModelUpdated()"
  },
  {
    "label": "LoadItemExpansion()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "LoadItemExpansion()"
  },
  {
    "label": "SaveItemExpansion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveItemExpansion()"
  },
  {
    "label": "HandleFilterWidgetView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFilterWidgetView(TSharedPtr<FWidgetViewModel> WidgetViewModel)"
  },
  {
    "label": "SetCurrentViewTypeFromMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentViewTypeFromMenu(EAssetViewType::Type ViewType)"
  },
  {
    "label": "IsCurrentViewType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurrentViewType(EAssetViewType::Type ViewType)"
  },
  {
    "label": "OnThumbnailSizeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThumbnailSizeChanged(EThumbnailSize InThumbnailSize)"
  },
  {
    "label": "IsThumbnailSizeChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThumbnailSizeChecked(EThumbnailSize InThumbnailSize)"
  }
]