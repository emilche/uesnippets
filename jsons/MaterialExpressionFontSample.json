[
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "FTextureValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureValue"
  },
  {
    "label": "UMaterialExpressionFontSample",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionFontSample"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Materials / MaterialExpression . h \" # include \" MaterialExpressionFontSample . generated . h \" class UTexture ; namespace UE { namespace Shader { struct FTextureValue ; } })",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=MaterialExpressionFontSample)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesSearchQuery(const TCHAR* SearchQuery)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidth()"
  },
  {
    "label": "GetLabelPadding()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLabelPadding()"
  },
  {
    "label": "GetReferencedTexture()",
    "kind": "Method",
    "detail": "Function (# endif UObject*)",
    "insertText": "GetReferencedTexture()"
  },
  {
    "label": "CanReferenceTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReferenceTexture()"
  }
]