[
  {
    "label": "IDXGIAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIAdapter"
  },
  {
    "label": "IDXGISwapChain",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGISwapChain"
  },
  {
    "label": "DXGI_SWAP_CHAIN_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_SWAP_CHAIN_DESC"
  },
  {
    "label": "D3D_DRIVER_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D_DRIVER_TYPE"
  },
  {
    "label": "D3D_FEATURE_LEVEL",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D_FEATURE_LEVEL"
  },
  {
    "label": "D3D_PRIMITIVE_TOPOLOGY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D_PRIMITIVE_TOPOLOGY"
  },
  {
    "label": "ID3D11Device",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Device"
  },
  {
    "label": "ID3D11DeviceContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11DeviceContext"
  },
  {
    "label": "ID3D11Resource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Resource"
  },
  {
    "label": "ID3D11Buffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Buffer"
  },
  {
    "label": "ID3D11Texture1D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Texture1D"
  },
  {
    "label": "ID3D11Texture2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Texture2D"
  },
  {
    "label": "ID3D11Texture3D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11Texture3D"
  },
  {
    "label": "D3D11_BUFFER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D11_BUFFER_DESC"
  },
  {
    "label": "D3D11_TEXTURE1D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D11_TEXTURE1D_DESC"
  },
  {
    "label": "D3D11_TEXTURE2D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D11_TEXTURE2D_DESC"
  },
  {
    "label": "D3D11_TEXTURE3D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D11_TEXTURE3D_DESC"
  },
  {
    "label": "D3D11_SUBRESOURCE_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D11_SUBRESOURCE_DATA"
  },
  {
    "label": "tagRECT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tagRECT"
  },
  {
    "label": "ID3D12Device",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12Device"
  },
  {
    "label": "ID3D12GraphicsCommandList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D12GraphicsCommandList"
  },
  {
    "label": "AGSReturnCode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AGSReturnCode"
  },
  {
    "label": "AGSContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSContext"
  },
  {
    "label": "AGSRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSRect"
  },
  {
    "label": "AGSDisplayInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDisplayInfo"
  },
  {
    "label": "AGSDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDeviceInfo"
  },
  {
    "label": "AsicFamily",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AsicFamily"
  },
  {
    "label": "AGSConfiguration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSConfiguration"
  },
  {
    "label": "AGSGPUInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSGPUInfo"
  },
  {
    "label": "AGSDisplaySettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDisplaySettings"
  },
  {
    "label": "Mode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Mode"
  },
  {
    "label": "AGSDriverVersionResult",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AGSDriverVersionResult"
  },
  {
    "label": "AGSDX12DeviceCreationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDX12DeviceCreationParams"
  },
  {
    "label": "AGSDX12ExtensionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDX12ExtensionParams"
  },
  {
    "label": "AGSDX12ReturnedParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDX12ReturnedParams"
  },
  {
    "label": "ExtensionsSupported",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ExtensionsSupported"
  },
  {
    "label": "AGSCrossfireMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AGSCrossfireMode"
  },
  {
    "label": "AGSDX11DeviceCreationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDX11DeviceCreationParams"
  },
  {
    "label": "AGSDX11ExtensionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDX11ExtensionParams"
  },
  {
    "label": "AGSDX11ReturnedParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSDX11ReturnedParams"
  },
  {
    "label": "AGSBreadcrumbMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSBreadcrumbMarker"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "AGSPrimitiveTopology",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AGSPrimitiveTopology"
  },
  {
    "label": "AGSClipRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AGSClipRect"
  },
  {
    "label": "AGSAfrTransferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AGSAfrTransferType"
  },
  {
    "label": "AGSAfrTransferEngine",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "AGSAfrTransferEngine"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef AMD_AGS_H # define AMD_AGS_H # define AMD_AGS_VERSION_MAJOR 6 # define AMD_AGS_VERSION_MINOR 0 # define AMD_AGS_VERSION_PATCH 1 # ifdef __cplusplus \" C \" { # endif # if)",
    "insertText": "defined(AGS_GCC) #define AMD_AGS_API #else #define AMD_AGS_API __declspec(dllexport) #endif #define AGS_MAKE_VERSION( major, minor, patch ) ( ( major << 22 ) | ( minor << 12 ) | patch ) #define AGS_UNSPECIFIED_VERSION 0xFFFFAD00 #if !defined (AGS_DIRECTX_TYPES_INCLUDED)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct IDXGISwapChain ; struct DXGI_SWAP_CHAIN_DESC ; enum D3D_DRIVER_TYPE ; enum D3D_FEATURE_LEVEL ; enum D3D_PRIMITIVE_TOPOLOGY ; struct ID3D11Device ; struct ID3D11DeviceContext ; struct ID3D11Resource ; struct ID3D11Buffer ; struct ID3D11Texture1D ; struct ID3D11Texture2D ; struct ID3D11Texture3D ; struct D3D11_BUFFER_DESC ; struct D3D11_TEXTURE1D_DESC ; struct D3D11_TEXTURE2D_DESC ; struct D3D11_TEXTURE3D_DESC ; struct D3D11_SUBRESOURCE_DATA ; struct tagRECT ; typedef tagRECT D3D11_RECT ; struct ID3D12Device ; struct ID3D12GraphicsCommandList ; # endif typedef enum AGSReturnCode { AGS_SUCCESS,AGS_FAILURE,AGS_INVALID_ARGS,AGS_OUT_OF_MEMORY,AGS_MISSING_D3D_DLL,AGS_LEGACY_DRIVER,AGS_NO_AMD_DRIVER_INSTALLED,AGS_EXTENSION_NOT_SUPPORTED,AGS_ADL_FAILURE,AGS_DX_FAILURE } AGSReturnCode ; struct AGSContext ; typedef struct AGSRect { int offsetX ; int offsetY ; int width ; int height ; } AGSRect ; typedef struct AGSDisplayInfo { char name [ 2 5 6 ] ; char displayDeviceName [ 3 2 ] ; unsigned int isPrimaryDisplay : 1 ; unsigned int HDR10 : 1 ; unsigned int dolbyVision : 1 ; unsigned int freesync : 1 ; unsigned int freesyncHDR : 1 ; unsigned int eyefinityInGroup : 1 ; unsigned int eyefinityPreferredDisplay : 1 ; unsigned int eyefinityInPortraitMode : 1 ; unsigned int reservedPadding : 2 4 ; int maxResolutionX ; int maxResolutionY ; float maxRefreshRate ; AGSRect currentResolution ; AGSRect visibleResolution ; float currentRefreshRate ; int eyefinityGridCoordX ; int eyefinityGridCoordY ; double chromaticityRedX ; double chromaticityRedY ; double chromaticityGreenX ; double chromaticityGreenY ; double chromaticityBlueX ; double chromaticityBlueY ; double chromaticityWhitePointX ; double chromaticityWhitePointY ; double screenDiffuseReflectance ; double screenSpecularReflectance ; double minLuminance ; double maxLuminance ; double avgLuminance ; int logicalDisplayIndex ; int adlAdapterIndex ; int reserved ; } AGSDisplayInfo ; typedef struct AGSDeviceInfo { typedef enum AsicFamily { AsicFamily_Unknown,AsicFamily_PreGCN,AsicFamily_GCN1,AsicFamily_GCN2,AsicFamily_GCN3,AsicFamily_GCN4,AsicFamily_Vega,AsicFamily_RDNA,AsicFamily_RDNA2,AsicFamily_Count } AsicFamily ; const char* adapterString ; AsicFamily asicFamily ; unsigned int isAPU : 1 ; unsigned int isPrimaryDevice : 1 ; unsigned int isExternal : 1 ; unsigned int reservedPadding : 2 9 ; int vendorId ; int deviceId ; int revisionId ; int numCUs ; int numWGPs ; int numROPs ; int coreClock ; int memoryClock ; int memoryBandwidth ; float teraFlops ; unsigned long long localMemoryInBytes ; unsigned long long sharedMemoryInBytes ; int numDisplays ; AGSDisplayInfo* displays ; int eyefinityEnabled ; int eyefinityGridWidth ; int eyefinityGridHeight ; int eyefinityResolutionX ; int eyefinityResolutionY ; int eyefinityBezelCompensated ; int adlAdapterIndex ; int reserved ; } AGSDeviceInfo ; typedef)",
    "insertText": "void(__stdcall *AGS_ALLOC_CALLBACK)( size_t allocationSize)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(__stdcall *AGS_FREE_CALLBACK)( void* allocationPtr)"
  },
  {
    "label": "agsCheckDriverVersion()",
    "kind": "Method",
    "detail": "Function (typedef struct AGSConfiguration { AGS_ALLOC_CALLBACK allocCallback ; AGS_FREE_CALLBACK freeCallback ; } AGSConfiguration ; typedef struct AGSGPUInfo { const char* driverVersion ; const char* radeonSoftwareVersion ; int numDevices ; AGSDeviceInfo* devices ; } AGSGPUInfo ; typedef struct AGSDisplaySettings { typedef enum Mode { Mode_SDR,Mode_HDR10_PQ,Mode_HDR10_scRGB,Mode_FreesyncHDR_scRGB,Mode_FreesyncHDR_Gamma22,Mode_DolbyVision,Mode_Count } Mode ; Mode mode ; double chromaticityRedX ; double chromaticityRedY ; double chromaticityGreenX ; double chromaticityGreenY ; double chromaticityBlueX ; double chromaticityBlueY ; double chromaticityWhitePointX ; double chromaticityWhitePointY ; double minLuminance ; double maxLuminance ; double maxContentLightLevel ; double maxFrameAverageLightLevel ; unsigned int disableLocalDimming : 1 ; unsigned int reservedPadding : 3 1 ; } AGSDisplaySettings ; typedef enum AGSDriverVersionResult { AGS_SOFTWAREVERSIONCHECK_OK,AGS_SOFTWAREVERSIONCHECK_OLDER,AGS_SOFTWAREVERSIONCHECK_UNDEFINED } AGSDriverVersionResult ; AGSDriverVersionResult)",
    "insertText": "agsCheckDriverVersion(const char* radeonSoftwareVersionReported, unsigned int radeonSoftwareVersionRequired)"
  },
  {
    "label": "agsGetVersionNumber()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "agsGetVersionNumber()"
  },
  {
    "label": "agsInitialize()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsInitialize(int agsVersion, const AGSConfiguration* config, AGSContext** context, AGSGPUInfo* gpuInfo)"
  },
  {
    "label": "agsDeInitialize()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDeInitialize(AGSContext* context)"
  },
  {
    "label": "agsSetDisplayMode()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsSetDisplayMode(AGSContext* context, int deviceIndex, int displayIndex, const AGSDisplaySettings* settings)"
  },
  {
    "label": "agsDriverExtensionsDX12_CreateDevice()",
    "kind": "Method",
    "detail": "Function (typedef struct AGSDX12DeviceCreationParams { IDXGIAdapter* pAdapter ; IID iid ; D3D_FEATURE_LEVEL FeatureLevel ; } AGSDX12DeviceCreationParams ; typedef struct AGSDX12ExtensionParams { const WCHAR* pAppName ; const WCHAR* pEngineName ; unsigned int appVersion ; unsigned int engineVersion ; unsigned int uavSlot ; } AGSDX12ExtensionParams ; typedef struct AGSDX12ReturnedParams { ID3D12Device* pDevice ; typedef struct ExtensionsSupported { unsigned int intrinsics16 : 1 ; unsigned int intrinsics17 : 1 ; unsigned int userMarkers : 1 ; unsigned int appRegistration : 1 ; unsigned int UAVBindSlot : 1 ; unsigned int intrinsics19 : 1 ; unsigned int baseVertex : 1 ; unsigned int baseInstance : 1 ; unsigned int getWaveSize : 1 ; unsigned int floatConversion : 1 ; unsigned int readLaneAt : 1 ; unsigned int rayHitToken : 1 ; unsigned int padding : 2 0 ; } ExtensionsSupported ; ExtensionsSupported extensionsSupported ; } AGSDX12ReturnedParams ; const unsigned int AGS_DX12_SHADER_INSTRINSICS_SPACE_ID = 0 x7FFF0ADE ; AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX12_CreateDevice(AGSContext* context, const AGSDX12DeviceCreationParams* creationParams, const AGSDX12ExtensionParams* extensionParams, AGSDX12ReturnedParams* returnedParams)"
  },
  {
    "label": "agsDriverExtensionsDX12_DestroyDevice()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX12_DestroyDevice(AGSContext* context, ID3D12Device* device, unsigned int* deviceReferences)"
  },
  {
    "label": "agsDriverExtensionsDX12_PushMarker()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX12_PushMarker(AGSContext* context, ID3D12GraphicsCommandList* commandList, const char* data)"
  },
  {
    "label": "agsDriverExtensionsDX12_PopMarker()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX12_PopMarker(AGSContext* context, ID3D12GraphicsCommandList* commandList)"
  },
  {
    "label": "agsDriverExtensionsDX12_SetMarker()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX12_SetMarker(AGSContext* context, ID3D12GraphicsCommandList* commandList, const char* data)"
  },
  {
    "label": "agsDriverExtensionsDX11_CreateDevice()",
    "kind": "Method",
    "detail": "Function (typedef enum AGSCrossfireMode { AGS_CROSSFIRE_MODE_DRIVER_AFR = 0,AGS_CROSSFIRE_MODE_EXPLICIT_AFR,AGS_CROSSFIRE_MODE_DISABLE } AGSCrossfireMode ; typedef struct AGSDX11DeviceCreationParams { IDXGIAdapter* pAdapter ; D3D_DRIVER_TYPE DriverType ; HMODULE Software ; UINT Flags ; const D3D_FEATURE_LEVEL* pFeatureLevels ; UINT FeatureLevels ; UINT SDKVersion ; const DXGI_SWAP_CHAIN_DESC* pSwapChainDesc ; } AGSDX11DeviceCreationParams ; typedef struct AGSDX11ExtensionParams { const WCHAR* pAppName ; const WCHAR* pEngineName ; unsigned int appVersion ; unsigned int engineVersion ; unsigned int numBreadcrumbMarkers ; unsigned int uavSlot ; AGSCrossfireMode crossfireMode ; } AGSDX11ExtensionParams ; typedef struct AGSDX11ReturnedParams { ID3D11Device* pDevice ; ID3D11DeviceContext* pImmediateContext ; IDXGISwapChain* pSwapChain ; D3D_FEATURE_LEVEL featureLevel ; typedef struct ExtensionsSupported { unsigned int quadList : 1 ; unsigned int screenRectList : 1 ; unsigned int uavOverlap : 1 ; unsigned int depthBoundsTest : 1 ; unsigned int multiDrawIndirect : 1 ; unsigned int multiDrawIndirectCountIndirect : 1 ; unsigned int crossfireAPI : 1 ; unsigned int createShaderControls : 1 ; unsigned int intrinsics16 : 1 ; unsigned int multiView : 1 ; unsigned int intrinsics17 : 1 ; unsigned int appRegistration : 1 ; unsigned int breadcrumbMarkers : 1 ; unsigned int MDIDeferredContexts : 1 ; unsigned int UAVOverlapDeferredContexts : 1 ; unsigned int depthBoundsDeferredContexts : 1 ; unsigned int intrinsics19 : 1 ; unsigned int getWaveSize : 1 ; unsigned int baseVertex : 1 ; unsigned int baseInstance : 1 ; unsigned int padding : 1 2 ; } ExtensionsSupported ; ExtensionsSupported extensionsSupported ; unsigned int crossfireGPUCount ; void* breadcrumbBuffer ; } AGSDX11ReturnedParams ; AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_CreateDevice(AGSContext* context, const AGSDX11DeviceCreationParams* creationParams, const AGSDX11ExtensionParams* extensionParams, AGSDX11ReturnedParams* returnedParams)"
  },
  {
    "label": "agsDriverExtensionsDX11_DestroyDevice()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_DestroyDevice(AGSContext* context, ID3D11Device* device, unsigned int* deviceReferences, ID3D11DeviceContext* immediateContext, unsigned int* immediateContextReferences)"
  },
  {
    "label": "agsDriverExtensionsDX11_WriteBreadcrumb()",
    "kind": "Method",
    "detail": "Function (typedef struct AGSBreadcrumbMarker { typedef enum Type { TopOfPipe = 0,BottomOfPipe = 1 } Type ; unsigned long long markerData ; Type type ; unsigned int index ; } AGSBreadcrumbMarker ; AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_WriteBreadcrumb(AGSContext* context, const AGSBreadcrumbMarker* marker)"
  },
  {
    "label": "agsDriverExtensionsDX11_IASetPrimitiveTopology()",
    "kind": "Method",
    "detail": "Function (typedef enum AGSPrimitiveTopology { AGS_PRIMITIVE_TOPOLOGY_QUADLIST = 7,AGS_PRIMITIVE_TOPOLOGY_SCREENRECTLIST = 9 } AGSPrimitiveTopology ; AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_IASetPrimitiveTopology(AGSContext* context, D3D_PRIMITIVE_TOPOLOGY topology)"
  },
  {
    "label": "agsDriverExtensionsDX11_BeginUAVOverlap()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_BeginUAVOverlap(AGSContext* context, ID3D11DeviceContext* dxContext)"
  },
  {
    "label": "agsDriverExtensionsDX11_EndUAVOverlap()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_EndUAVOverlap(AGSContext* context, ID3D11DeviceContext* dxContext)"
  },
  {
    "label": "agsDriverExtensionsDX11_SetDepthBounds()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_SetDepthBounds(AGSContext* context, ID3D11DeviceContext* dxContext, bool enabled, float minDepth, float maxDepth)"
  },
  {
    "label": "agsDriverExtensionsDX11_MultiDrawInstancedIndirect()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_MultiDrawInstancedIndirect(AGSContext* context, ID3D11DeviceContext* dxContext, unsigned int drawCount, ID3D11Buffer* pBufferForArgs, unsigned int alignedByteOffsetForArgs, unsigned int byteStrideForArgs)"
  },
  {
    "label": "agsDriverExtensionsDX11_MultiDrawIndexedInstancedIndirect()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_MultiDrawIndexedInstancedIndirect(AGSContext* context, ID3D11DeviceContext* dxContext, unsigned int drawCount, ID3D11Buffer* pBufferForArgs, unsigned int alignedByteOffsetForArgs, unsigned int byteStrideForArgs)"
  },
  {
    "label": "agsDriverExtensionsDX11_MultiDrawInstancedIndirectCountIndirect()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_MultiDrawInstancedIndirectCountIndirect(AGSContext* context, ID3D11DeviceContext* dxContext, ID3D11Buffer* pBufferForDrawCount, unsigned int alignedByteOffsetForDrawCount, ID3D11Buffer* pBufferForArgs, unsigned int alignedByteOffsetForArgs, unsigned int byteStrideForArgs)"
  },
  {
    "label": "agsDriverExtensionsDX11_MultiDrawIndexedInstancedIndirectCountIndirect()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_MultiDrawIndexedInstancedIndirectCountIndirect(AGSContext* context, ID3D11DeviceContext* dxContext, ID3D11Buffer* pBufferForDrawCount, unsigned int alignedByteOffsetForDrawCount, ID3D11Buffer* pBufferForArgs, unsigned int alignedByteOffsetForArgs, unsigned int byteStrideForArgs)"
  },
  {
    "label": "agsDriverExtensionsDX11_SetMaxAsyncCompileThreadCount()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_SetMaxAsyncCompileThreadCount(AGSContext* context, unsigned int numberOfThreads)"
  },
  {
    "label": "agsDriverExtensionsDX11_NumPendingAsyncCompileJobs()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_NumPendingAsyncCompileJobs(AGSContext* context, unsigned int* numberOfJobs)"
  },
  {
    "label": "agsDriverExtensionsDX11_SetDiskShaderCacheEnabled()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_SetDiskShaderCacheEnabled(AGSContext* context, int enable)"
  },
  {
    "label": "agsDriverExtensionsDX11_SetViewBroadcastMasks()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_SetViewBroadcastMasks(AGSContext* context, unsigned long long vpMask, unsigned long long rtSliceMask, int vpMaskPerRtSliceEnabled)"
  },
  {
    "label": "agsDriverExtensionsDX11_GetMaxClipRects()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_GetMaxClipRects(AGSContext* context, unsigned int* maxRectCount)"
  },
  {
    "label": "agsDriverExtensionsDX11_SetClipRects()",
    "kind": "Method",
    "detail": "Function (typedef struct AGSClipRect { typedef enum Mode { ClipRectIncluded = 0,ClipRectExcluded = 1 } Mode ; Mode mode ; AGSRect rect ; } AGSClipRect ; AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_SetClipRects(AGSContext* context, unsigned int clipRectCount, const AGSClipRect* clipRects)"
  },
  {
    "label": "agsDriverExtensionsDX11_CreateBuffer()",
    "kind": "Method",
    "detail": "Function (typedef enum AGSAfrTransferType { AGS_AFR_TRANSFER_DEFAULT = 0,AGS_AFR_TRANSFER_DISABLE = 1,AGS_AFR_TRANSFER_1STEP_P2P = 2,AGS_AFR_TRANSFER_2STEP_NO_BROADCAST = 3,AGS_AFR_TRANSFER_2STEP_WITH_BROADCAST = 4,} AGSAfrTransferType ; typedef enum AGSAfrTransferEngine { AGS_AFR_TRANSFERENGINE_DEFAULT = 0,AGS_AFR_TRANSFERENGINE_3D_ENGINE = 1,AGS_AFR_TRANSFERENGINE_COPY_ENGINE = 2,} AGSAfrTransferEngine ; AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_CreateBuffer(AGSContext* context, const D3D11_BUFFER_DESC* desc, const D3D11_SUBRESOURCE_DATA* initialData, ID3D11Buffer** buffer, AGSAfrTransferType transferType, AGSAfrTransferEngine transferEngine)"
  },
  {
    "label": "agsDriverExtensionsDX11_CreateTexture1D()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_CreateTexture1D(AGSContext* context, const D3D11_TEXTURE1D_DESC* desc, const D3D11_SUBRESOURCE_DATA* initialData, ID3D11Texture1D** texture1D, AGSAfrTransferType transferType, AGSAfrTransferEngine transferEngine)"
  },
  {
    "label": "agsDriverExtensionsDX11_CreateTexture2D()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_CreateTexture2D(AGSContext* context, const D3D11_TEXTURE2D_DESC* desc, const D3D11_SUBRESOURCE_DATA* initialData, ID3D11Texture2D** texture2D, AGSAfrTransferType transferType, AGSAfrTransferEngine transferEngine)"
  },
  {
    "label": "agsDriverExtensionsDX11_CreateTexture3D()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_CreateTexture3D(AGSContext* context, const D3D11_TEXTURE3D_DESC* desc, const D3D11_SUBRESOURCE_DATA* initialData, ID3D11Texture3D** texture3D, AGSAfrTransferType transferType, AGSAfrTransferEngine transferEngine)"
  },
  {
    "label": "agsDriverExtensionsDX11_NotifyResourceEndWrites()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_NotifyResourceEndWrites(AGSContext* context, ID3D11Resource* resource, const D3D11_RECT* transferRegions, const unsigned int* subresourceArray, unsigned int numSubresources)"
  },
  {
    "label": "agsDriverExtensionsDX11_NotifyResourceBeginAllAccess()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_NotifyResourceBeginAllAccess(AGSContext* context, ID3D11Resource* resource)"
  },
  {
    "label": "agsDriverExtensionsDX11_NotifyResourceEndAllAccess()",
    "kind": "Method",
    "detail": "Function (AGSReturnCode)",
    "insertText": "agsDriverExtensionsDX11_NotifyResourceEndAllAccess(AGSContext* context, ID3D11Resource* resource)"
  },
  {
    "label": "AGSDriverVersionResult()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSDriverVersionResult(*AGS_CHECKDRIVERVERSION)( const char*, unsigned int)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*AGS_GETVERSIONNUMBER)()"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_INITIALIZE)( int, const AGSConfiguration*, AGSContext**, AGSGPUInfo*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DEINITIALIZE)( AGSContext*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_SETDISPLAYMODE)( AGSContext*, int, int, const AGSDisplaySettings*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX12_CREATEDEVICE)( AGSContext*, const AGSDX12DeviceCreationParams*, const AGSDX12ExtensionParams*, AGSDX12ReturnedParams*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX12_DESTROYDEVICE)( AGSContext*, ID3D12Device*, unsigned int*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX12_PUSHMARKER)( AGSContext*, ID3D12GraphicsCommandList*, const char*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX12_POPMARKER)( AGSContext*, ID3D12GraphicsCommandList*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX12_SETMARKER)( AGSContext*, ID3D12GraphicsCommandList*, const char*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_CREATEDEVICE)( AGSContext*, const AGSDX11DeviceCreationParams*, const AGSDX11ExtensionParams*, AGSDX11ReturnedParams*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_DESTROYDEVICE)( AGSContext*, ID3D11Device*, unsigned int*, ID3D11DeviceContext*, unsigned int*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_WRITEBREADCRUMB)( AGSContext*, const AGSBreadcrumbMarker*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_IASETPRIMITIVETOPOLOGY)( AGSContext*, enum D3D_PRIMITIVE_TOPOLOGY)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_BEGINUAVOVERLAP)( AGSContext*, ID3D11DeviceContext*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_ENDUAVOVERLAP)( AGSContext*, ID3D11DeviceContext*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_SETDEPTHBOUNDS)( AGSContext*, ID3D11DeviceContext*, bool, float, float)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_MULTIDRAWINSTANCEDINDIRECT)( AGSContext*, ID3D11DeviceContext*, unsigned int, ID3D11Buffer*, unsigned int, unsigned int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_MULTIDRAWINDEXEDINSTANCEDINDIRECT)( AGSContext*, ID3D11DeviceContext*, unsigned int, ID3D11Buffer*, unsigned int, unsigned int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_MULTIDRAWINSTANCEDINDIRECTCOUNTINDIRECT)( AGSContext*, ID3D11DeviceContext*, ID3D11Buffer*, unsigned int, ID3D11Buffer*, unsigned int, unsigned int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_MULTIDRAWINDEXEDINSTANCEDINDIRECTCOUNTINDIRECT)( AGSContext*, ID3D11DeviceContext*, ID3D11Buffer*, unsigned int, ID3D11Buffer*, unsigned int, unsigned int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_SETMAXASYNCCOMPILETHREADCOUNT)( AGSContext*, unsigned int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_NUMPENDINGASYNCOMPILEJOBS)( AGSContext*, unsigned int*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_SETDISKSHADERCACHEENABLED)( AGSContext*, int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_SETVIEWBROADCASTMASKS)( AGSContext*, unsigned long long, unsigned long long, int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_GETMAXCLIPRECTS)( AGSContext*, unsigned int*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_SETCLIPRECTS)( AGSContext*, unsigned int, const AGSClipRect*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_CREATEBUFFER)( AGSContext*, const D3D11_BUFFER_DESC*, const D3D11_SUBRESOURCE_DATA*, ID3D11Buffer**, AGSAfrTransferType, AGSAfrTransferEngine)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_CREATETEXTURE1D)( AGSContext*, const D3D11_TEXTURE1D_DESC*, const D3D11_SUBRESOURCE_DATA*, ID3D11Texture1D**, AGSAfrTransferType, AGSAfrTransferEngine)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_CREATETEXTURE2D)( AGSContext*, const D3D11_TEXTURE2D_DESC*, const D3D11_SUBRESOURCE_DATA*, ID3D11Texture2D**, AGSAfrTransferType, AGSAfrTransferEngine)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_CREATETEXTURE3D)( AGSContext*, const D3D11_TEXTURE3D_DESC*, const D3D11_SUBRESOURCE_DATA*, ID3D11Texture3D**, AGSAfrTransferType, AGSAfrTransferEngine)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_NOTIFYRESOURCEENDWRITES)( AGSContext*, ID3D11Resource*, const D3D11_RECT*, const unsigned int*, unsigned int)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_NOTIFYRESOURCEBEGINALLACCESS)( AGSContext*, ID3D11Resource*)"
  },
  {
    "label": "AGSReturnCode()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "AGSReturnCode(*AGS_DRIVEREXTENSIONSDX11_NOTIFYRESOURCEENDALLACCESS)( AGSContext*, ID3D11Resource*)"
  }
]