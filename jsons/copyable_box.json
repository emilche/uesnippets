[
  {
    "label": "_Tp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Tp"
  },
  {
    "label": "__copyable_box",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "__copyable_box"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___RANGES_COPYABLE_BOX_H # define _LIBCPP___RANGES_COPYABLE_BOX_H # include<__config> # include<__memory / addressof . h> # include<__memory / construct_at . h> # include<__utility / move . h> # include<concepts> # include<optional> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER > 17 && !defined(_LIBCPP_HAS_NO_INCOMPLETE_RANGES)"
  },
  {
    "label": "__copyable_box()",
    "kind": "Method",
    "detail": "Function (namespace ranges { template<__copy_constructible_object _Tp> class __copyable_box { _LIBCPP_NO_UNIQUE_ADDRESS optional<_Tp> __val_ ; public : template<class . . . _Args> requires is_constructible_v<_Tp,_Args . . .> _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "__copyable_box(in_place_t, _Args&& ...__args) noexcept(is_nothrow_constructible_v<_Tp, _Args...>) : __val_(in_place, std::forward<_Args>(__args)...)"
  },
  {
    "label": "__copyable_box()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "__copyable_box() noexcept(is_nothrow_default_constructible_v<_Tp>) requires default_initializable<_Tp> : __val_(in_place)"
  },
  {
    "label": "__copyable_box()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "__copyable_box(__copyable_box const&)"
  },
  {
    "label": "__copyable_box()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI)",
    "insertText": "__copyable_box(__copyable_box&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI __copyable_box&)",
    "insertText": "operator(__copyable_box const& __other) noexcept(is_nothrow_copy_constructible_v<_Tp>)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return* this ; } _LIBCPP_HIDE_FROM_ABI __copyable_box&)",
    "insertText": "operator(__copyable_box&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI __copyable_box&)",
    "insertText": "operator(__copyable_box&& __other) noexcept(is_nothrow_move_constructible_v<_Tp>)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return* this ; } _LIBCPP_HIDE_FROM_ABI _Tp const&)",
    "insertText": "operator()"
  },
  {
    "label": "__has_value()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "__has_value()"
  },
  {
    "label": "__copyable_box()",
    "kind": "Method",
    "detail": "Function (} } ; template<class _Tp> concept __doesnt_need_empty_state_for_copy = copyable<_Tp> | | is_nothrow_copy_constructible_v<_Tp> ; template<class _Tp> concept __doesnt_need_empty_state_for_move = movable<_Tp> | | is_nothrow_move_constructible_v<_Tp> ; template<__copy_constructible_object _Tp> requires __doesnt_need_empty_state_for_copy<_Tp>&& __doesnt_need_empty_state_for_move<_Tp> class __copyable_box<_Tp> { _LIBCPP_NO_UNIQUE_ADDRESS _Tp __val_ ; public : template<class . . . _Args> requires is_constructible_v<_Tp,_Args . . .> _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "__copyable_box(in_place_t, _Args&& ...__args) noexcept(is_nothrow_constructible_v<_Tp, _Args...>) : __val_(std::forward<_Args>(__args)...)"
  },
  {
    "label": "__copyable_box()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "__copyable_box() noexcept(is_nothrow_default_constructible_v<_Tp>) requires default_initializable<_Tp> : __val_()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI __copyable_box&)",
    "insertText": "operator(__copyable_box const&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI __copyable_box&)",
    "insertText": "operator(__copyable_box const& __other)"
  },
  {
    "label": "destroy_at()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "destroy_at(std::addressof(__val_))"
  },
  {
    "label": "construct_at()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "construct_at(std::addressof(__val_), __other.__val_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} return* this ; } _LIBCPP_HIDE_FROM_ABI __copyable_box&)",
    "insertText": "operator(__copyable_box&& __other)"
  },
  {
    "label": "construct_at()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "construct_at(std::addressof(__val_), std::move(__other.__val_))"
  }
]