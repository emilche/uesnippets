[
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FMovieSceneBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBinding"
  },
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FInitialValueCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialValueCache"
  },
  {
    "label": "FSystemInterrogatorEntityTracker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSystemInterrogatorEntityTracker"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInterrogationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInterrogationParams"
  },
  {
    "label": "FInterrogationChannels",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInterrogationChannels"
  },
  {
    "label": "FSystemInterrogator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSystemInterrogator"
  },
  {
    "label": "FExtraMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtraMetaData"
  },
  {
    "label": "FInterrogationParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / SparseArray . h \" # include \" Containers / SortedMap . h \" # include \" Evaluation / MovieSceneEvaluationField . h \" # include \" MovieSceneTracksComponentTypes . h \" # include \" UObject / GCObject . h \" # include \" UObject / ObjectKey . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" EntitySystem / MovieSceneEntitySystemLinkerExtension . h \" # include \" EntitySystem / Interrogation / MovieSceneInterrogationExtension . h \" struct FGuid ; struct FMovieSceneBinding ; class UMovieSceneTrack ; class IMovieScenePlayer ; class UMovieSceneEntitySystemLinker ; namespace UE { namespace MovieScene { struct FInitialValueCache ; struct FSystemInterrogatorEntityTracker ; enum class EEntitySystemCategory : uint32 ; struct FInterrogationParams { FFrameTime Time ;)",
    "insertText": "FInterrogationParams(FFrameTime InTime) : Time(InTime)"
  },
  {
    "label": "FInterrogationParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInterrogationParams(FFrameNumber InTime) : Time(InTime)"
  },
  {
    "label": "FInterrogationChannels()",
    "kind": "Method",
    "detail": "Function (} } ; class FInterrogationChannels { public :)",
    "insertText": "FInterrogationChannels()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetSparseChannelInfo()",
    "kind": "Method",
    "detail": "Function (const FSparseInterrogationChannelInfo&)",
    "insertText": "GetSparseChannelInfo()"
  },
  {
    "label": "AllocateChannel()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "AllocateChannel(UObject* Object, const FMovieScenePropertyBinding& PropertyBinding)"
  },
  {
    "label": "AllocateChannel()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "AllocateChannel(UObject* Object, FInterrogationChannel ParentChannel, const FMovieScenePropertyBinding& PropertyBinding)"
  },
  {
    "label": "AllocateUnboundChannel()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "AllocateUnboundChannel(FInterrogationChannel ParentChannel, const FTransform& CurrentValueLocalSpace)"
  },
  {
    "label": "ImportTransformHierarchy()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "ImportTransformHierarchy(USceneComponent* SceneComponent)"
  },
  {
    "label": "FindChannel()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "FindChannel(UObject* Object)"
  },
  {
    "label": "ActivateChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateChannel(FInterrogationChannel InChannel)"
  },
  {
    "label": "DeactivateChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateChannel(FInterrogationChannel InChannel)"
  },
  {
    "label": "AddInterrogation()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddInterrogation(const FInterrogationParams& Params)"
  },
  {
    "label": "GetNumChannels()",
    "kind": "Method",
    "detail": "Function (public : int32)",
    "insertText": "GetNumChannels()"
  },
  {
    "label": "GetInterrogations()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FInterrogationParams>)",
    "insertText": "GetInterrogations()"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryLocalSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, FInterrogationChannel InChannel, TArray<FIntermediate3DTransform>& OutTransforms)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryLocalSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, TSparseArray<TArray<FIntermediate3DTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryLocalSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, const TBitArray<>& ChannelsToQuery, TSparseArray<TArray<FIntermediate3DTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "QueryWorldSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, USceneComponent* SceneComponent, TArray<FTransform>& OutTransforms)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryWorldSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, FInterrogationChannel InChannel, TArray<FTransform>& OutTransforms)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryWorldSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, TSparseArray<TArray<FTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryWorldSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, const TBitArray<>& ChannelsToQuery, TSparseArray<TArray<FTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (private : template<GetOutputForChannelType> void)",
    "insertText": "QueryWorldSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, const TBitArray<>& ChannelsToQuery, GetOutputForChannelType&& OnGetOutputForChannel)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (template<GetOutputForChannelType> void)",
    "insertText": "QueryLocalSpaceTransforms(UMovieSceneEntitySystemLinker* Linker, const TBitArray<>& ChannelsToQuery, GetOutputForChannelType&& OnGetOutputForChannel)"
  },
  {
    "label": "FSystemInterrogator()",
    "kind": "Method",
    "detail": "Function (protected : TMap<FObjectKey,FInterrogationChannel> ObjectToChannel ; FSparseInterrogationChannelInfo SparseChannelInfo ; TBitArray<> ActiveChannelBits ; TArray<FInterrogationParams> Interrogations ; } ; class FSystemInterrogator : FGCObject,IInterrogationExtension { public :)",
    "insertText": "FSystemInterrogator()"
  },
  {
    "label": "GetInterrogationCategory()",
    "kind": "Method",
    "detail": "Function (EEntitySystemCategory)",
    "insertText": "GetInterrogationCategory()"
  },
  {
    "label": "GetExcludedFromInterrogationCategory()",
    "kind": "Method",
    "detail": "Function (EEntitySystemCategory)",
    "insertText": "GetExcludedFromInterrogationCategory()"
  },
  {
    "label": "ImportTrack()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ImportTrack(UMovieSceneTrack* Track, FInterrogationChannel InChannel)"
  },
  {
    "label": "ImportTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportTrack(UMovieSceneTrack* Track, const FGuid& ObjectBindingID, FInterrogationChannel InChannel)"
  },
  {
    "label": "ImportTransformHierarchy()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "ImportTransformHierarchy(USceneComponent* SceneComponent, IMovieScenePlayer* InPlayer, FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "ImportLocalTransforms()",
    "kind": "Method",
    "detail": "Function (FInterrogationChannel)",
    "insertText": "ImportLocalTransforms(USceneComponent* SceneComponent, IMovieScenePlayer* InPlayer, FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "ImportTracks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportTracks(TArrayView<UMovieSceneTrack* const> Tracks, FInterrogationChannel InChannel)"
  },
  {
    "label": "ImportTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportTrack(Track, InChannel)"
  },
  {
    "label": "ImportTracks()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ImportTracks(TArrayView<UMovieSceneTrack* const> Tracks, const FGuid& ObjectBindingID, FInterrogationChannel InChannel)"
  },
  {
    "label": "ImportTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportTrack(Track, ObjectBindingID, InChannel)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update()"
  },
  {
    "label": "TrackImportedEntities()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "TrackImportedEntities(bool bInTrackImportedEntities)"
  },
  {
    "label": "FindEntityFromOwner()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEntityID)",
    "insertText": "FindEntityFromOwner(FInterrogationKey InterrogationKey, UObject* Owner, uint32 EntityID)"
  },
  {
    "label": "GetLinker()",
    "kind": "Method",
    "detail": "Function (UMovieSceneEntitySystemLinker*)",
    "insertText": "GetLinker()"
  },
  {
    "label": "FindPropertyOutputEntityIDs()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "FindPropertyOutputEntityIDs(const FPropertyDefinition& PropertyDefinition, FInterrogationChannel Channel, TArray<FMovieSceneEntityID>& OutEntityIDs)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "QueryLocalSpaceTransforms(USceneComponent* SceneComponent, TArray<FIntermediate3DTransform>& OutTransforms)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryLocalSpaceTransforms(Linker, SceneComponent, OutTransforms)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueryLocalSpaceTransforms(FInterrogationChannel InChannel, TArray<FIntermediate3DTransform>& OutTransforms)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryLocalSpaceTransforms(Linker, InChannel, OutTransforms)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueryLocalSpaceTransforms(TSparseArray<TArray<FIntermediate3DTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryLocalSpaceTransforms(Linker, OutTransformsByChannel)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueryLocalSpaceTransforms(const TBitArray<>& ChannelsToQuery, TSparseArray<TArray<FIntermediate3DTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryLocalSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryLocalSpaceTransforms(Linker, ChannelsToQuery, OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "QueryWorldSpaceTransforms(USceneComponent* SceneComponent, TArray<FTransform>& OutTransforms)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryWorldSpaceTransforms(Linker, SceneComponent, OutTransforms)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueryWorldSpaceTransforms(FInterrogationChannel InChannel, TArray<FTransform>& OutTransforms)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryWorldSpaceTransforms(Linker, InChannel, OutTransforms)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueryWorldSpaceTransforms(TSparseArray<TArray<FTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryWorldSpaceTransforms(Linker, OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "QueryWorldSpaceTransforms(const TBitArray<>& ChannelsToQuery, TSparseArray<TArray<FTransform>>& OutTransformsByChannel)"
  },
  {
    "label": "QueryWorldSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (Channels .)",
    "insertText": "QueryWorldSpaceTransforms(Linker, ChannelsToQuery, OutTransformsByChannel)"
  },
  {
    "label": "QueryPropertyValues()",
    "kind": "Method",
    "detail": "Function (} template<PropertyTraits> void)",
    "insertText": "QueryPropertyValues(const TPropertyComponents<PropertyTraits>& InPropertyComponents, TArray<typename PropertyTraits::StorageType>& OutValues)"
  },
  {
    "label": "QueryPropertyValues()",
    "kind": "Method",
    "detail": "Function (} template<PropertyTraits> void)",
    "insertText": "QueryPropertyValues(const TPropertyComponents<PropertyTraits>& InPropertyComponents, FInterrogationChannel InChannel, TArray<typename PropertyTraits::StorageType>& OutValues)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FBuiltInComponentTypes* Components =)",
    "insertText": "Get()"
  },
  {
    "label": "GetDefinition()",
    "kind": "Method",
    "detail": "Function (const FPropertyDefinition& PropertyDefinition = Components -> PropertyRegistry .)",
    "insertText": "GetDefinition(InPropertyComponents.CompositeID)"
  },
  {
    "label": "GetComposites()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FPropertyCompositeDefinition> PropertyComposites = Components -> PropertyRegistry .)",
    "insertText": "GetComposites(PropertyDefinition)"
  },
  {
    "label": "FindPropertyOutputEntityIDs()",
    "kind": "Method",
    "detail": "Function (TArray<FMovieSceneEntityID> ValueEntityIDs ;)",
    "insertText": "FindPropertyOutputEntityIDs(PropertyDefinition, InChannel, ValueEntityIDs)"
  },
  {
    "label": "GetInterrogations()",
    "kind": "Method",
    "detail": "Function (const int32 NumPropertyValues = Channels .)",
    "insertText": "GetInterrogations().Num()"
  },
  {
    "label": "SetNum()",
    "kind": "Method",
    "detail": "Function (OutValues .)",
    "insertText": "SetNum(NumPropertyValues)"
  },
  {
    "label": "RebuildOperational()",
    "kind": "Method",
    "detail": "Function (PropertyDefinition . Handler ->)",
    "insertText": "RebuildOperational(PropertyDefinition, PropertyComposites, ValueEntityIDs, Linker, OutValues)"
  },
  {
    "label": "ImportTransformTracks()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "ImportTransformTracks(const FMovieSceneBinding& Binding, FInterrogationChannel Channel)"
  },
  {
    "label": "InterrogateEntity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InterrogateEntity(int32 InterrogationIndex, const FMovieSceneEvaluationFieldEntityQuery& Query)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  }
]