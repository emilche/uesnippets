[
  {
    "label": "UnscaledCycleClockWrapperForGetCurrentTime",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnscaledCycleClockWrapperForGetCurrentTime"
  },
  {
    "label": "CycleClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CycleClock"
  },
  {
    "label": "UnscaledCycleClockWrapperForInitializeFrequency",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnscaledCycleClockWrapperForInitializeFrequency"
  },
  {
    "label": "UnscaledCycleClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnscaledCycleClock"
  },
  {
    "label": "base_internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base_internal"
  },
  {
    "label": "time_internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "time_internal"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_BASE_INTERNAL_UNSCALEDCYCLECLOCK_H_ # define ABSL_BASE_INTERNAL_UNSCALEDCYCLECLOCK_H_ # include<cstdint> # if)",
    "insertText": "defined(__APPLE__)"
  },
  {
    "label": "UnscaledCycleClock()",
    "kind": "Method",
    "detail": "Function (ABSL_NAMESPACE_BEGIN namespace time_internal { class UnscaledCycleClockWrapperForGetCurrentTime ; } namespace base_internal { class CycleClock ; class UnscaledCycleClockWrapperForInitializeFrequency ; class UnscaledCycleClock { private :)",
    "insertText": "UnscaledCycleClock()"
  },
  {
    "label": "Now()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "Now()"
  },
  {
    "label": "Frequency()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "Frequency()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (class base_internal::CycleClock ; class time_internal::UnscaledCycleClockWrapperForGetCurrentTime ; class base_internal::UnscaledCycleClockWrapperForInitializeFrequency ; } ; # if)",
    "insertText": "defined(__x86_64__) inline int64_t UnscaledCycleClock::Now()"
  },
  {
    "label": "volatile()",
    "kind": "Method",
    "detail": "Function (uint64_t low,high ; __asm__)",
    "insertText": "volatile(\"rdtsc\" : \"=a\"(low), \"=d\"(high))"
  }
]