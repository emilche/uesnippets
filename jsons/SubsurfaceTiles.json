[
  {
    "label": "FSubsurfaceTiles",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubsurfaceTiles"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSubsurfaceTilePassVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubsurfaceTilePassVS"
  },
  {
    "label": "FSubsurfaceTileFallbackScreenPassVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubsurfaceTileFallbackScreenPassVS"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "uint32(Type)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FGlobalShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "DECLARE_GLOBAL_SHADER()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_GLOBAL_SHADER(FSubsurfaceTileFallbackScreenPassVS)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FGlobalShaderPermutationParameters& Parameters)"
  },
  {
    "label": "GetSubsurfaceTileParameters()",
    "kind": "Method",
    "detail": "Function (FSubsurfaceTilePassVS::FParameters)",
    "insertText": "GetSubsurfaceTileParameters(const FScreenPassTextureViewport& TileViewport, const FSubsurfaceTiles& InTile, FSubsurfaceTiles::ETileType TileType)"
  },
  {
    "label": "FallBackVertexShader()",
    "kind": "Method",
    "detail": "Function (TShaderMapRef<FSubsurfaceTileFallbackScreenPassVS>)",
    "insertText": "FallBackVertexShader(View.ShaderMap)"
  },
  {
    "label": "AddConditionalClearBlackUAVPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddConditionalClearBlackUAVPass(FRDGBuilder& GraphBuilder, FRDGEventName&& PassName, \n\tFRDGTextureRef Texture, const FScreenPassTextureViewport& ScreenPassViewport, FRDGBufferRef ConditionBuffer, uint32 Offset)"
  }
]