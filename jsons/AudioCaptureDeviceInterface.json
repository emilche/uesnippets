[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCaptureDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCaptureDeviceInfo"
  },
  {
    "label": "FAudioCaptureDeviceParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioCaptureDeviceParams"
  },
  {
    "label": "IAudioCaptureStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioCaptureStream"
  },
  {
    "label": "IAudioCaptureFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioCaptureFactory"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef TFunction<)",
    "insertText": "void(const void* InAudio, int32 NumFrames, int32 NumChannels, int32 SampleRate, double StreamTime, bool bOverFlow)"
  },
  {
    "label": "IAudioCaptureStream()",
    "kind": "Method",
    "detail": "Function (class IAudioCaptureStream : public IModularFeature { public :)",
    "insertText": "IAudioCaptureStream()"
  },
  {
    "label": "RegisterUser()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RegisterUser(const TCHAR* UserId)"
  },
  {
    "label": "InOnCapture()",
    "kind": "Method",
    "detail": "Function (FOnAudioCaptureFunction OnCaptureCallback = [)",
    "insertText": "InOnCapture(const void* InBuffer, int32 InNumFrames, int32 InNumChannels, int32 InSampleRate, double InStreamTime, bool bInOverflow)"
  },
  {
    "label": "InOnCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InOnCapture((const float*)InBuffer, InNumFrames, InNumChannels, InSampleRate, InStreamTime, bInOverflow)"
  },
  {
    "label": "OpenAudioCaptureStream()",
    "kind": "Method",
    "detail": "Function (} ; return)",
    "insertText": "OpenAudioCaptureStream(InParams, OnCaptureCallback, NumFramesDesired)"
  },
  {
    "label": "OpenAudioCaptureStream()",
    "kind": "Method",
    "detail": "Function (} PRAGMA_ENABLE_DEPRECATION_WARNINGS bool)",
    "insertText": "OpenAudioCaptureStream(const FAudioCaptureDeviceParams& InParams, FOnAudioCaptureFunction InOnCapture, uint32 NumFramesDesired)"
  },
  {
    "label": "CloseStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseStream()"
  },
  {
    "label": "StartStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartStream()"
  },
  {
    "label": "StopStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StopStream()"
  },
  {
    "label": "AbortStream()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AbortStream()"
  },
  {
    "label": "GetStreamTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetStreamTime(double& OutStreamTime)"
  },
  {
    "label": "GetSampleRate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSampleRate()"
  },
  {
    "label": "IsStreamOpen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStreamOpen()"
  },
  {
    "label": "IsCapturing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCapturing()"
  },
  {
    "label": "OnAudioCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAudioCapture(void* InBuffer, uint32 InBufferFrames, double StreamTime, bool bOverflow)"
  },
  {
    "label": "GetInputDevicesAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetInputDevicesAvailable(TArray<FCaptureDeviceInfo>& OutDevices)"
  },
  {
    "label": "GetIfHardwareFeatureIsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIfHardwareFeatureIsSupported(EHardwareInputFeature FeatureType)"
  },
  {
    "label": "IAudioCaptureFactory()",
    "kind": "Method",
    "detail": "Function (} } ; class IAudioCaptureFactory : public IModularFeature { public :)",
    "insertText": "IAudioCaptureFactory()"
  },
  {
    "label": "GetModularFeatureName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetModularFeatureName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (FName AudioCaptureFeatureName =)",
    "insertText": "FName(TEXT(\"AudioCaptureStream\"))"
  }
]