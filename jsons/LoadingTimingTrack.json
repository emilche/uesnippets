[
  {
    "label": "FLoadTimeProfilerCpuEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadTimeProfilerCpuEvent"
  },
  {
    "label": "FFilterConfigurator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFilterConfigurator"
  },
  {
    "label": "FTimingEventSearchParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimingEventSearchParameters"
  },
  {
    "label": "FLoadingSharedState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoadingSharedState"
  },
  {
    "label": "STimingView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STimingView"
  },
  {
    "label": "FLoadingTimingTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoadingTimingTrack"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Framework / Commands / Commands . h \" # include \" Insights / ViewModels / TimingEventsTrack . h \" namespace TraceServices { struct FLoadTimeProfilerCpuEvent ; } namespace UE::Insights { class FFilterConfigurator ; } class FTimingEventSearchParameters ; namespace UE::Insights::LoadingProfiler { class FLoadingSharedState ; class STimingView ; class FLoadingTimingTrack : public FTimingEventsTrack {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FLoadingTimingTrack, FTimingEventsTrack) public: explicit FLoadingTimingTrack(FLoadingSharedState& InSharedState, uint32 InTimelineIndex, const FString& InName) : FTimingEventsTrack(InName) , SharedState(InSharedState) , TimelineIndex(InTimelineIndex)"
  },
  {
    "label": "FLoadingTimingTrack()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FLoadingTimingTrack()"
  },
  {
    "label": "BuildDrawState()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BuildDrawState(ITimingEventsTrackDrawStateBuilder& Builder, const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "BuildFilteredDrawState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFilteredDrawState(ITimingEventsTrackDrawStateBuilder& Builder, const ITimingTrackUpdateContext& Context)"
  },
  {
    "label": "InitTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTooltip(FTooltipDrawState& InOutTooltip, const ITimingEvent& InTooltipEvent)"
  },
  {
    "label": "SearchEvent()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<const ITimingEvent>)",
    "insertText": "SearchEvent(const FTimingEventSearchParameters& InSearchParameters)"
  },
  {
    "label": "SetFilterConfigurator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterConfigurator(TSharedPtr<UE::Insights::FFilterConfigurator> InFilterConfigurator)"
  },
  {
    "label": "FindLoadTimeProfilerCpuEvent()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "FindLoadTimeProfilerCpuEvent(const FTimingEventSearchParameters& InParameters, TFunctionRef<void(double, double, uint32, const TraceServices::FLoadTimeProfilerCpuEvent&)> InFoundPredicate)"
  },
  {
    "label": "HasCustomFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCustomFilter()"
  }
]