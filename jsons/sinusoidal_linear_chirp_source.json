[
  {
    "label": "SinusoidalLinearChirpSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SinusoidalLinearChirpSource"
  },
  {
    "label": "SinusoidalLinearChirpSource()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_RESAMPLER_SINUSOIDAL_LINEAR_CHIRP_SOURCE_H_ # define COMMON_AUDIO_RESAMPLER_SINUSOIDAL_LINEAR_CHIRP_SOURCE_H_ # include \" common_audio / resampler / sinc_resampler . h \" namespace webrtc { class SinusoidalLinearChirpSource : public SincResamplerCallback { public :)",
    "insertText": "SinusoidalLinearChirpSource(int sample_rate, size_t samples, double max_frequency, double delay_samples)"
  },
  {
    "label": "SinusoidalLinearChirpSource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SinusoidalLinearChirpSource()"
  },
  {
    "label": "SinusoidalLinearChirpSource()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SinusoidalLinearChirpSource(const SinusoidalLinearChirpSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SinusoidalLinearChirpSource&)",
    "insertText": "operator(const SinusoidalLinearChirpSource&)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Run(size_t frames, float* destination)"
  }
]