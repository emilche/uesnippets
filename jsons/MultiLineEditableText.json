[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "SMultiLineEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableText"
  },
  {
    "label": "UMultiLineEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMultiLineEditableText"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnMultiLineEditableTextChangedEvent, const FText&, Text)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(FText InText)"
  },
  {
    "label": "SetHintText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHintText(FText InHintText)"
  },
  {
    "label": "SetSelectAllTextWhenFocused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectAllTextWhenFocused(bool bSelectAllTextWhenFocused)"
  },
  {
    "label": "SetClearTextSelectionOnFocusLoss()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearTextSelectionOnFocusLoss(bool bClearTextSelectionOnFocusLoss)"
  },
  {
    "label": "SetRevertTextOnEscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRevertTextOnEscape(bool bRevertTextOnEscape)"
  },
  {
    "label": "SetClearKeyboardFocusOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearKeyboardFocusOnCommit(bool bClearKeyboardFocusOnCommit)"
  },
  {
    "label": "SetIsReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReadOnly(bool bReadOnly)"
  },
  {
    "label": "SetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidgetStyle(const FTextBlockStyle& InWidgetStyle)"
  },
  {
    "label": "SetFont()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFont(FSlateFontInfo InFontInfo)"
  },
  {
    "label": "SetFontMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFontMaterial(UMaterialInterface* InMaterial)"
  },
  {
    "label": "SetFontOutlineMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFontOutlineMaterial(UMaterialInterface* InMaterial)"
  },
  {
    "label": "HandleOnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnTextChanged(const FText& Text)"
  },
  {
    "label": "HandleOnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnTextCommitted(const FText& Text, ETextCommit::Type CommitMethod)"
  },
  {
    "label": "SetTextInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTextInternal(const FText& InText)"
  }
]