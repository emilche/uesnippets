[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "SMultiLineEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableText"
  },
  {
    "label": "UMultiLineEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMultiLineEditableText"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / SlateTypes . h \" # include \" Widgets / SWidget . h \" # include \" Components / TextWidgetTypes . h \" # include \" Widgets / Text / ISlateEditableTextWidget . h \" # include \" MultiLineEditableText . generated . h \" class UMaterialInterface ; class SMultiLineEditableText ;)",
    "insertText": "UCLASS(meta=( DisplayName=\"Editable Text (Multi-Line)\" ), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FOnMultiLineEditableTextChangedEvent, const FText&, Text)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnMultiLineEditableTextCommittedEvent, const FText&, Text, ETextCommit::Type, CommitMethod)"
  },
  {
    "label": "SetSelectAllTextWhenFocused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectAllTextWhenFocused(bool bSelectAllTextWhenFocused)"
  },
  {
    "label": "GetSelectAllTextWhenFocused()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSelectAllTextWhenFocused()"
  },
  {
    "label": "SetClearTextSelectionOnFocusLoss()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearTextSelectionOnFocusLoss(bool bClearTextSelectionOnFocusLoss)"
  },
  {
    "label": "GetClearTextSelectionOnFocusLoss()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetClearTextSelectionOnFocusLoss()"
  },
  {
    "label": "SetRevertTextOnEscape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRevertTextOnEscape(bool bRevertTextOnEscape)"
  },
  {
    "label": "GetRevertTextOnEscape()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRevertTextOnEscape()"
  },
  {
    "label": "SetClearKeyboardFocusOnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClearKeyboardFocusOnCommit(bool bClearKeyboardFocusOnCommit)"
  },
  {
    "label": "GetClearKeyboardFocusOnCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetClearKeyboardFocusOnCommit()"
  },
  {
    "label": "GetIsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsReadOnly()"
  }
]