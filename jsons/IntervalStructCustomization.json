[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FIntervalStructCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIntervalStructCustomization"
  },
  {
    "label": "FIntervalStructCustomization()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IPropertyTypeCustomization . h \" # include \" Misc / Optional . h \" # include \" PropertyHandle . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" class FDetailWidgetRow ; class IDetailChildrenBuilder ; enum class EIntervalField { Min,Max } ; template<NumericType> class FIntervalStructCustomization : public IPropertyTypeCustomization { public :)",
    "insertText": "FIntervalStructCustomization() : bIsUsingSlider(false)"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, IDetailChildrenBuilder& StructBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "OnGetValue()",
    "kind": "Method",
    "detail": "Function (protected : TOptional<NumericType>)",
    "insertText": "OnGetValue(EIntervalField Field)"
  },
  {
    "label": "OnGetMinValue()",
    "kind": "Method",
    "detail": "Function (TOptional<NumericType>)",
    "insertText": "OnGetMinValue()"
  },
  {
    "label": "OnGetMinSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<NumericType>)",
    "insertText": "OnGetMinSliderValue()"
  },
  {
    "label": "OnGetMaxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<NumericType>)",
    "insertText": "OnGetMaxValue()"
  },
  {
    "label": "OnGetMaxSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<NumericType>)",
    "insertText": "OnGetMaxSliderValue()"
  },
  {
    "label": "OnValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueCommitted(NumericType NewValue, ETextCommit::Type CommitType, EIntervalField Field)"
  },
  {
    "label": "OnValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnValueChanged(NumericType NewValue, EIntervalField Field)"
  },
  {
    "label": "OnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginSliderMovement()"
  },
  {
    "label": "OnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndSliderMovement(NumericType NewValue)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(NumericType NewValue, EIntervalField Field, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "ShouldAllowSpin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAllowSpin()"
  },
  {
    "label": "IsPropertyEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyEnabled(EIntervalField Field)"
  }
]