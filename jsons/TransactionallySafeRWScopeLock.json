[
  {
    "label": "FTransactionallySafeReadScopeLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransactionallySafeReadScopeLock"
  },
  {
    "label": "FTransactionallySafeWriteScopeLock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTransactionallySafeWriteScopeLock"
  },
  {
    "label": "FTransactionallySafeRWScopeLock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransactionallySafeRWScopeLock"
  },
  {
    "label": "FTransactionallySafeReadScopeLock()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" TransactionallySafeRWLock . h \" # include \" ScopeRWLock . h \" class FTransactionallySafeReadScopeLock { public : UE_NODISCARD_CTOR)",
    "insertText": "FTransactionallySafeReadScopeLock(FTransactionallySafeRWLock& InLock) : Lock(InLock)"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "ReadLock()"
  },
  {
    "label": "FTransactionallySafeReadScopeLock()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTransactionallySafeReadScopeLock()"
  },
  {
    "label": "ReadUnlock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "ReadUnlock()"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "UE_NONCOPYABLE(FTransactionallySafeReadScopeLock)"
  },
  {
    "label": "FTransactionallySafeWriteScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeRWLock& Lock ; } ; class FTransactionallySafeWriteScopeLock { public : UE_NODISCARD_CTOR)",
    "insertText": "FTransactionallySafeWriteScopeLock(FTransactionallySafeRWLock& InLock) : Lock(InLock)"
  },
  {
    "label": "WriteLock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "WriteLock()"
  },
  {
    "label": "FTransactionallySafeWriteScopeLock()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTransactionallySafeWriteScopeLock()"
  },
  {
    "label": "WriteUnlock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "WriteUnlock()"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "UE_NONCOPYABLE(FTransactionallySafeWriteScopeLock)"
  },
  {
    "label": "FTransactionallySafeRWScopeLock()",
    "kind": "Method",
    "detail": "Function (FTransactionallySafeRWLock& Lock ; } ; struct FTransactionallySafeRWScopeLock final { UE_NODISCARD_CTOR)",
    "insertText": "FTransactionallySafeRWScopeLock(FTransactionallySafeRWLock& InLockObject, FRWScopeLockType InLockType) : LockObject(InLockObject), LockType(InLockType)"
  },
  {
    "label": "FTransactionallySafeRWScopeLock()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FTransactionallySafeRWScopeLock()"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (} } private :)",
    "insertText": "UE_NONCOPYABLE(FTransactionallySafeRWScopeLock)"
  }
]