[
  {
    "label": "SVisualLoggerFilterCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVisualLoggerFilterCheckBox"
  },
  {
    "label": "SetOnFilterDoubleClicked()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InputCoreTypes . h \" # include \" Input / Reply . h \" # include \" Widgets / Input / SCheckBox . h \" class SVisualLoggerFilterCheckBox : public SCheckBox { public : void)",
    "insertText": "SetOnFilterDoubleClicked(const FOnClicked& NewFilterDoubleClicked)"
  },
  {
    "label": "SetOnFilterMiddleButtonClicked()",
    "kind": "Method",
    "detail": "Function (OnFilterDoubleClicked = NewFilterDoubleClicked ; } void)",
    "insertText": "SetOnFilterMiddleButtonClicked(const FOnClicked& NewFilterMiddleButtonClicked)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (OnFilterMiddleButtonClicked = NewFilterMiddleButtonClicked ; } FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "OnMouseButtonDoubleClick(InMyGeometry, InMouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (} } FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "OnMouseButtonUp(InMyGeometry, InMouseEvent)"
  }
]