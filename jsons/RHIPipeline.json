[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TRHIPipelineArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRHIPipelineArray"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" Misc / EnumClassFlags . h \" # include \" Misc / EnumRange . h \" # include \" Containers / ArrayView . h \" # include \" Containers / StaticArray . h \" # include \" RHIGlobals . h \" enum class ERHIPipeline : uint8 { Graphics = 1<<0,AsyncCompute = 1<<1,None = 0,All = Graphics | AsyncCompute,Num = 2 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(ERHIPipeline) inline constexpr bool IsSingleRHIPipeline(ERHIPipeline Pipelines)"
  },
  {
    "label": "GetRHIPipelineIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetRHIPipelineIndex(ERHIPipeline Pipeline)"
  },
  {
    "label": "GetRHIPipelineCount()",
    "kind": "Method",
    "detail": "Function (default : case ERHIPipeline::Graphics : return 0 ; case ERHIPipeline::AsyncCompute : return 1 ; } } uint32)",
    "insertText": "GetRHIPipelineCount()"
  },
  {
    "label": "GetEnabledRHIPipelines()",
    "kind": "Method",
    "detail": "Function (} ERHIPipeline)",
    "insertText": "GetEnabledRHIPipelines()"
  },
  {
    "label": "Function()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Function(Pipeline)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (public : using Base::Base ; ElementType&)",
    "insertText": "operator(int32 Index)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ElementType&)",
    "insertText": "operator(ERHIPipeline Pipeline)"
  }
]