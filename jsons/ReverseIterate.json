[
  {
    "label": "TReversePointerIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TReversePointerIterator"
  },
  {
    "label": "TReverseIterationAdapter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TReverseIterationAdapter"
  },
  {
    "label": "TReversePointerIterator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include<iterator> template<T> struct TReversePointerIterator {)",
    "insertText": "TReversePointerIterator(T* InPtr UE_LIFETIMEBOUND) : Ptr(InPtr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} T&)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (- - Ptr ; return* this ; } bool)",
    "insertText": "operator(const TReversePointerIterator& Rhs)"
  },
  {
    "label": "TReverseIterationAdapter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TReverseIterationAdapter(TReverseIterationAdapter&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TReverseIterationAdapter&)",
    "insertText": "operator(TReverseIterationAdapter&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TReverseIterationAdapter&)",
    "insertText": "operator(const TReverseIterationAdapter&)"
  },
  {
    "label": "TReverseIterationAdapter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TReverseIterationAdapter(const TReverseIterationAdapter&)"
  },
  {
    "label": "TReverseIterationAdapter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TReverseIterationAdapter()"
  },
  {
    "label": "rbegin()",
    "kind": "Method",
    "detail": "Function (using std::rbegin ; return)",
    "insertText": "rbegin(Range)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} auto)",
    "insertText": "end()"
  },
  {
    "label": "rend()",
    "kind": "Method",
    "detail": "Function (using std::rend ; return)",
    "insertText": "rend(Range)"
  },
  {
    "label": "ElementType()",
    "kind": "Method",
    "detail": "Function (} private : RangeType& Range ; } ; template<ElementType,std::size_t N> struct TReverseIterationAdapter<)",
    "insertText": "ElementType(&)"
  },
  {
    "label": "TReverseIterationAdapter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TReverseIterationAdapter(ElementType* InArray UE_LIFETIMEBOUND) : Array(InArray)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (TReversePointerIterator<ElementType>)",
    "insertText": "begin()"
  },
  {
    "label": "ReverseIterate()",
    "kind": "Method",
    "detail": "Function (} private : ElementType* Array ; } ; } template<RangeType> UE::Core::Private::TReverseIterationAdapter<RangeType>)",
    "insertText": "ReverseIterate(RangeType&& Range UE_LIFETIMEBOUND)"
  }
]