[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "SctpTransportObserverInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SctpTransportObserverInterface"
  },
  {
    "label": "SctpTransportInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SctpTransportInterface"
  },
  {
    "label": "SctpTransportInformation()",
    "kind": "Method",
    "detail": "Function (# ifndef API_SCTP_TRANSPORT_INTERFACE_H_ # define API_SCTP_TRANSPORT_INTERFACE_H_ # include \" absl / types / optional . h \" # include \" api / dtls_transport_interface . h \" # include \" api / rtc_error . h \" # include \" api / scoped_refptr . h \" # include \" rtc_base / ref_count . h \" namespace webrtc { enum class SctpTransportState { kNew,kConnecting,kConnected,kClosed,kNumValues } ; class RTC_EXPORT SctpTransportInformation { public :)",
    "insertText": "SctpTransportInformation()"
  },
  {
    "label": "SctpTransportInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SctpTransportInformation(const SctpTransportInformation&)"
  },
  {
    "label": "SctpTransportInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SctpTransportInformation(SctpTransportState state)"
  },
  {
    "label": "SctpTransportInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SctpTransportInformation(SctpTransportState state, rtc::scoped_refptr<DtlsTransportInterface> dtls_transport, absl::optional<double> max_message_size, absl::optional<int> max_channels)"
  },
  {
    "label": "dtls_transport()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DtlsTransportInterface>)",
    "insertText": "dtls_transport()"
  },
  {
    "label": "SctpTransportObserverInterface()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "SctpTransportObserverInterface()"
  },
  {
    "label": "Information()",
    "kind": "Method",
    "detail": "Function (SctpTransportInformation)",
    "insertText": "Information()"
  },
  {
    "label": "RegisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObserver(SctpTransportObserverInterface* observer)"
  },
  {
    "label": "UnregisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObserver()"
  }
]