[
  {
    "label": "EIGEN_MAKE_CWISE_BINARY_OP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_MAKE_CWISE_BINARY_OP(operator-,difference) EIGEN_MAKE_CWISE_BINARY_OP(operator+,sum) template<typename CustomBinaryOp, typename OtherDerived> EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE const CwiseBinaryOp<CustomBinaryOp, const Derived, const OtherDerived> binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp())"
  },
  {
    "label": "EIGEN_MAKE_SCALAR_BINARY_OP()",
    "kind": "Method",
    "detail": "Function (} # ifndef EIGEN_PARSED_BY_DOXYGEN)",
    "insertText": "EIGEN_MAKE_SCALAR_BINARY_OP(operator*,product) #else template<typename T> const CwiseBinaryOp<internal::scalar_product_op<Scalar,T>,Derived,Constant<T> > operator*(const T& scalar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (template<T> const CwiseBinaryOp<internal::scalar_product_op<T,Scalar>,Constant<T>,Derived>)",
    "insertText": "operator(const T& scalar, const StorageBaseType& expr)"
  },
  {
    "label": "EIGEN_MAKE_SCALAR_BINARY_OP_ONTHERIGHT()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef EIGEN_PARSED_BY_DOXYGEN)",
    "insertText": "EIGEN_MAKE_SCALAR_BINARY_OP_ONTHERIGHT(operator/,quotient) #else template<typename T> const CwiseBinaryOp<internal::scalar_quotient_op<Scalar,T>,Derived,Constant<T> > operator/(const T& scalar)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif template<OtherDerived> EIGEN_DEVICE_FUNC const CwiseBinaryOp<internal::scalar_boolean_and_op,const Derived,const OtherDerived>)",
    "insertText": "operator(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT((internal::is_same<bool,Scalar>::value && internal::is_same<bool,typename OtherDerived::Scalar>::value), THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL)"
  }
]