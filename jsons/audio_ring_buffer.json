[
  {
    "label": "RingBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RingBuffer"
  },
  {
    "label": "AudioRingBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioRingBuffer"
  },
  {
    "label": "AudioRingBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_CODECS_OPUS_TEST_AUDIO_RING_BUFFER_H_ # define MODULES_AUDIO_CODING_CODECS_OPUS_TEST_AUDIO_RING_BUFFER_H_ # include<stddef . h> # include<memory> # include<vector> struct RingBuffer ; namespace webrtc { class AudioRingBuffer final { public :)",
    "insertText": "AudioRingBuffer(size_t channels, size_t max_frames)"
  },
  {
    "label": "AudioRingBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AudioRingBuffer()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Write(const float* const* data, size_t channels, size_t frames)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Read(float* const* data, size_t channels, size_t frames)"
  },
  {
    "label": "ReadFramesAvailable()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "ReadFramesAvailable()"
  },
  {
    "label": "WriteFramesAvailable()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "WriteFramesAvailable()"
  },
  {
    "label": "MoveReadPositionForward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveReadPositionForward(size_t frames)"
  },
  {
    "label": "MoveReadPositionBackward()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveReadPositionBackward(size_t frames)"
  }
]