[
  {
    "label": "FSocketSubsystemAndroid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketSubsystemAndroid"
  },
  {
    "label": "FSocketBSD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketBSD"
  },
  {
    "label": "InternalBSDSocketFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SocketSubsystem . h \" # include \" BSDSockets / SocketSubsystemBSD . h \" # include \" SocketSubsystemPackage . h \" class FSocketSubsystemAndroid : public FSocketSubsystemBSD { protected : FSocketSubsystemAndroid* SocketSingleton ; bool bTriedToInit ; class FSocketBSD*)",
    "insertText": "InternalBSDSocketFactory(SOCKET Socket, ESocketType SocketType, const FString& SocketDescription, const FName& SocketProtocol)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (public : FSocketSubsystemAndroid*)",
    "insertText": "Create()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "FSocketSubsystemAndroid()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FSocketSubsystemAndroid() : bTriedToInit(false)"
  },
  {
    "label": "FSocketSubsystemAndroid()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSocketSubsystemAndroid()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Init(FString& Error)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "HasNetworkDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasNetworkDevice()"
  },
  {
    "label": "GetSocketAPIName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetSocketAPIName()"
  },
  {
    "label": "GetAddressInfoHintFlag()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAddressInfoHintFlag(EAddressInfoFlags InFlags)"
  },
  {
    "label": "GetLocalAdapterAddresses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLocalAdapterAddresses(TArray<TSharedPtr<FInternetAddr>>& OutAddresses)"
  },
  {
    "label": "GetDefaultSocketProtocolFamily()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDefaultSocketProtocolFamily()"
  }
]