[
  {
    "label": "FGCObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGCObject"
  },
  {
    "label": "FGCObjectInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGCObjectInfo"
  },
  {
    "label": "FGCVerseCellInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGCVerseCellInfo"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "VCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VCell"
  },
  {
    "label": "FMemberId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemberId"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FReferenceToken",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceToken"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" class FGCObject ; class FGCObjectInfo ; class FGCVerseCellInfo ; class UObject ; namespace Verse { struct VCell ; } namespace UE { namespace GC { class FMemberId ; } } enum class EReferenceTokenType { None,Object,GCObject,VerseCell,GCObjectInfo,GCVerseCellInfo,Barrier = 1<<3,} ; struct FReferenceToken {)",
    "insertText": "FReferenceToken() : EncodedBits(0)"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferenceToken(const UObject* Object) : EncodedBits(BitCast<uint64>(Object) | static_cast<uint64>(EReferenceTokenType::Object))"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferenceToken(const FGCObject* GCObject) : EncodedBits(BitCast<uint64>(GCObject) | static_cast<uint64>(EReferenceTokenType::GCObject))"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferenceToken(const Verse::VCell* Cell) : EncodedBits(BitCast<uint64>(Cell) | static_cast<uint64>(EReferenceTokenType::VerseCell))"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferenceToken(const FGCObjectInfo* GCObjectInfo) : EncodedBits(BitCast<uint64>(GCObjectInfo) | static_cast<uint64>(EReferenceTokenType::GCObjectInfo))"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferenceToken(const FGCVerseCellInfo* GCVerseCellInfo) : EncodedBits(BitCast<uint64>(GCVerseCellInfo) | static_cast<uint64>(EReferenceTokenType::GCVerseCellInfo))"
  },
  {
    "label": "FReferenceToken()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FReferenceToken(EReferenceTokenType TokenType) : EncodedBits(static_cast<uint64>(TokenType))"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (} EReferenceTokenType)",
    "insertText": "GetType()"
  },
  {
    "label": "EReferenceTokenType()",
    "kind": "Method",
    "detail": "Function (EReferenceTokenType Type = static_cast<)",
    "insertText": "EReferenceTokenType(EncodedBits & EncodingBits)"
  },
  {
    "label": "IsObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsObject()"
  },
  {
    "label": "AsObject()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "AsObject()"
  },
  {
    "label": "IsGCObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsGCObject()"
  },
  {
    "label": "AsGCObject()",
    "kind": "Method",
    "detail": "Function (} FGCObject*)",
    "insertText": "AsGCObject()"
  },
  {
    "label": "IsGCObjectInfo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsGCObjectInfo()"
  },
  {
    "label": "AsGCObjectInfo()",
    "kind": "Method",
    "detail": "Function (} FGCObjectInfo*)",
    "insertText": "AsGCObjectInfo()"
  },
  {
    "label": "IsVerseCell()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsVerseCell()"
  },
  {
    "label": "AsVerseCell()",
    "kind": "Method",
    "detail": "Function (} Verse::VCell*)",
    "insertText": "AsVerseCell()"
  },
  {
    "label": "IsGCVerseCellInfo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsGCVerseCellInfo()"
  },
  {
    "label": "AsGCVerseCellInfo()",
    "kind": "Method",
    "detail": "Function (} FGCVerseCellInfo*)",
    "insertText": "AsGCVerseCellInfo()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDescription(FName PropertyName, const TCHAR* DefaultPropertyName)"
  },
  {
    "label": "GetMemberName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetMemberName(UE::GC::FMemberId& MemberId)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FReferenceToken& Other)"
  }
]