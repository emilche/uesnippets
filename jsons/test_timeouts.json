[
  {
    "label": "TestTimeouts",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestTimeouts"
  },
  {
    "label": "TestTimeouts()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_TEST_TIMEOUTS_H_ # define BASE_TEST_TEST_TIMEOUTS_H_ # include \" base / check . h \" # include \" base / time / time . h \" class TestTimeouts { public :)",
    "insertText": "TestTimeouts()"
  },
  {
    "label": "TestTimeouts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestTimeouts(const TestTimeouts&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TestTimeouts&)",
    "insertText": "operator(const TestTimeouts&)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "tiny_timeout()",
    "kind": "Method",
    "detail": "Function (base::TimeDelta)",
    "insertText": "tiny_timeout()"
  },
  {
    "label": "DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DCHECK(initialized_)"
  }
]