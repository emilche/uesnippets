[
  {
    "label": "VP8RateControlRtcConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8RateControlRtcConfig"
  },
  {
    "label": "VP8FrameParamsQpRTC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8FrameParamsQpRTC"
  },
  {
    "label": "VP8RateControlRTC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VP8RateControlRTC"
  },
  {
    "label": "VP8RateControlRtcConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_RATECTRL_RTC_H_ # define VPX_VP8_RATECTRL_RTC_H_ # include<cstdint> # include<memory> # include \" vp8 / encoder / onyx_int . h \" # include \" vp8 / common / common . h \" # include \" vpx / internal / vpx_ratectrl_rtc . h \" namespace libvpx { struct VP8RateControlRtcConfig : public VpxRateControlRtcConfig { public :)",
    "insertText": "VP8RateControlRtcConfig()"
  },
  {
    "label": "vp8_zero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_zero(layer_target_bitrate)"
  },
  {
    "label": "vp8_zero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp8_zero(ts_rate_decimator)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } ; struct VP8FrameParamsQpRTC { FRAME_TYPE frame_type ; int temporal_layer_id ; } ; class VP8RateControlRTC { public : std::unique_ptr<VP8RateControlRTC>)",
    "insertText": "Create(const VP8RateControlRtcConfig &cfg)"
  },
  {
    "label": "VP8RateControlRTC()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VP8RateControlRTC()"
  },
  {
    "label": "vpx_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_free(cpi_->gf_active_flags)"
  },
  {
    "label": "vpx_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vpx_free(cpi_)"
  },
  {
    "label": "UpdateRateControl()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "UpdateRateControl(const VP8RateControlRtcConfig &rc_cfg)"
  },
  {
    "label": "GetQP()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetQP()"
  },
  {
    "label": "ComputeQP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeQP(const VP8FrameParamsQpRTC &frame_params)"
  },
  {
    "label": "PostEncodeUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEncodeUpdate(uint64_t encoded_frame_size)"
  },
  {
    "label": "InitRateControl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitRateControl(const VP8RateControlRtcConfig &cfg)"
  }
]