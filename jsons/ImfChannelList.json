[
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Iterator"
  },
  {
    "label": "ConstIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstIterator"
  },
  {
    "label": "ChannelList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelList"
  },
  {
    "label": "Channel()",
    "kind": "Method",
    "detail": "Function (# ifndef INCLUDED_IMF_CHANNEL_LIST_H # define INCLUDED_IMF_CHANNEL_LIST_H # include \" ImfForward . h \" # include \" ImfName . h \" # include \" ImfPixelType . h \" # include<map> # include<set> # include<string> OPENEXR_IMF_INTERNAL_NAMESPACE_HEADER_ENTER struct IMF_EXPORT_TYPE Channel { PixelType type ; int xSampling ; int ySampling ; bool pLinear ; IMF_EXPORT)",
    "insertText": "Channel(PixelType type = HALF, int xSampling = 1, int ySampling = 1, bool pLinear = false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "operator(const Channel& other)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (} ; class IMF_EXPORT_TYPE ChannelList { public : IMF_EXPORT void)",
    "insertText": "insert(const char name[], const Channel& channel)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "insert(const std::string& name, const Channel& channel)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Channel&)",
    "insertText": "operator(const char name[])"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Channel&)",
    "insertText": "operator(const std::string& name)"
  },
  {
    "label": "findChannel()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Channel*)",
    "insertText": "findChannel(const char name[])"
  },
  {
    "label": "findChannel()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Channel*)",
    "insertText": "findChannel(const std::string& name)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (typedef std::map<Name,Channel> ChannelMap ; class Iterator ; class ConstIterator ; IMF_EXPORT Iterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Iterator)",
    "insertText": "end()"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Iterator)",
    "insertText": "find(const char name[])"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Iterator)",
    "insertText": "find(const std::string& name)"
  },
  {
    "label": "layers()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "layers(std::set<std::string>& layerNames)"
  },
  {
    "label": "channelsInLayer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "channelsInLayer(const std::string& layerName, Iterator& first, Iterator& last)"
  },
  {
    "label": "channelsInLayer()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "channelsInLayer(const std::string& layerName, ConstIterator& first, ConstIterator& last)"
  },
  {
    "label": "channelsWithPrefix()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "channelsWithPrefix(const char prefix[], Iterator& first, Iterator& last)"
  },
  {
    "label": "channelsWithPrefix()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "channelsWithPrefix(const char prefix[], ConstIterator& first, ConstIterator& last)"
  },
  {
    "label": "channelsWithPrefix()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "channelsWithPrefix(const std::string& prefix, Iterator& first, Iterator& last)"
  },
  {
    "label": "channelsWithPrefix()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT void)",
    "insertText": "channelsWithPrefix(const std::string& prefix, ConstIterator& first, ConstIterator& last)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT bool)",
    "insertText": "operator(const ChannelList& other)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (private : ChannelMap _map ; } ; class IMF_EXPORT_TYPE ChannelList::Iterator { public : IMF_EXPORT)",
    "insertText": "Iterator()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "Iterator(const ChannelList::ChannelMap::iterator& i)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Iterator&)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Iterator)",
    "insertText": "operator(int)"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT const char*)",
    "insertText": "name()"
  },
  {
    "label": "channel()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT Channel&)",
    "insertText": "channel()"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (private : class ChannelList::ConstIterator ; ChannelList::ChannelMap::iterator _i ; } ; class IMF_EXPORT_TYPE ChannelList::ConstIterator { public : IMF_EXPORT)",
    "insertText": "ConstIterator()"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "ConstIterator(const ChannelList::ChannelMap::const_iterator& i)"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "ConstIterator(const ChannelList::Iterator& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "operator(const ConstIterator&, const ConstIterator&)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (ChannelList::ChannelMap::const_iterator _i ; } ; ChannelList::)",
    "insertText": "Iterator() : _i ()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} ChannelList::)",
    "insertText": "Iterator(const ChannelList::ChannelMap::iterator& i) : _i (i)"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (} ChannelList::)",
    "insertText": "ConstIterator(const ChannelList::ChannelMap::const_iterator& i) : _i (i)"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (} ChannelList::)",
    "insertText": "ConstIterator(const ChannelList::Iterator& other) : _i (other._i)"
  }
]