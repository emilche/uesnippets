[
  {
    "label": "FDetailFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailFilter"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "FDetailFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PropertyPath . h \" struct FDetailFilter {)",
    "insertText": "FDetailFilter() : bShowOnlyModified(false) , bShowAllAdvanced(false) , bShowAllChildrenIfCategoryMatches(true) , bShowOnlyKeyable(false) , bShowOnlyAnimated(false) , bShowFavoritesCategory(false) , bShowOnlyAllowed(false) , bShowLooseProperties(false)"
  },
  {
    "label": "IsEmptyFilter()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEmptyFilter()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (} TArray<FString> FilterStrings ; bool bShowOnlyModified ; bool bShowAllAdvanced ; bool bShowAllChildrenIfCategoryMatches ; bool bShowOnlyKeyable ; bool bShowOnlyAnimated ; bool bShowFavoritesCategory ; bool bShowOnlyAllowed ; bool bShowLooseProperties ; TSet<FPropertyPath> PropertyAllowList ; TSet<FName> VisibleSections ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FShouldForceHideProperty, const TSharedRef<class FPropertyNode>&)"
  }
]