[
  {
    "label": "Vad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Vad"
  },
  {
    "label": "Aggressiveness",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Aggressiveness"
  },
  {
    "label": "Activity",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Activity"
  },
  {
    "label": "Vad()",
    "kind": "Method",
    "detail": "Function (# ifndef COMMON_AUDIO_VAD_INCLUDE_VAD_H_ # define COMMON_AUDIO_VAD_INCLUDE_VAD_H_ # include<memory> # include \" common_audio / vad / include / webrtc_vad . h \" # include \" rtc_base / checks . h \" namespace webrtc { class Vad { public : enum Aggressiveness { kVadNormal = 0,kVadLowBitrate = 1,kVadAggressive = 2,kVadVeryAggressive = 3 } ; enum Activity { kPassive = 0,kActive = 1,kError = - 1 } ; ~)",
    "insertText": "Vad()"
  },
  {
    "label": "VoiceActivity()",
    "kind": "Method",
    "detail": "Function (Activity)",
    "insertText": "VoiceActivity(const int16_t* audio, size_t num_samples, int sample_rate_hz)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "CreateVad()",
    "kind": "Method",
    "detail": "Function (} ; std::unique_ptr<Vad>)",
    "insertText": "CreateVad(Vad::Aggressiveness aggressiveness)"
  }
]