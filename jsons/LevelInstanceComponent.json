[
  {
    "label": "ULevelInstanceComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceComponent"
  },
  {
    "label": "FLevelInstanceActorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelInstanceActorImpl"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Components / SceneComponent . h \" # include \" WorldPartition / Filter / WorldPartitionActorFilter . h \" # include \" WorldPartition / WorldPartitionActorContainerID . h \" # include \" LevelInstanceComponent . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: #if WITH_EDITORONLY_DATA ENGINE_API virtual void Serialize(FArchive& Ar)"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnUpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateTransform(EUpdateTransformFlags UpdateTransformFlags, ETeleportType Teleport)"
  },
  {
    "label": "UpdateEditorInstanceActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEditorInstanceActor()"
  },
  {
    "label": "OnEdit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEdit()"
  },
  {
    "label": "OnEditOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEditOverrides()"
  },
  {
    "label": "OnCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommit()"
  },
  {
    "label": "OnCommitOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitOverrides()"
  },
  {
    "label": "GetFilter()",
    "kind": "Method",
    "detail": "Function (const FWorldPartitionActorFilter&)",
    "insertText": "GetFilter()"
  },
  {
    "label": "SetFilter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFilter(const FWorldPartitionActorFilter& InFilter, bool bNotify = true)"
  },
  {
    "label": "GetFilteredActorsPerContainer()",
    "kind": "Method",
    "detail": "Function (const TMap<FActorContainerID,TSet<FGuid>>&)",
    "insertText": "GetFilteredActorsPerContainer()"
  },
  {
    "label": "UpdateEditFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEditFilter()"
  },
  {
    "label": "ClearCachedFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedFilter()"
  },
  {
    "label": "ShouldShowSpriteComponent()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ShouldShowSpriteComponent()"
  },
  {
    "label": "OnFilterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterChanged()"
  },
  {
    "label": "SetActiveFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveFilter(const FWorldPartitionActorFilter& InFilter)"
  },
  {
    "label": "IsEditFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditFilter()"
  }
]