[
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FCompactBinaryTCPImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompactBinaryTCPImpl"
  },
  {
    "label": "FReceiveBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReceiveBuffer"
  },
  {
    "label": "FSendBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSendBuffer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMarshalledMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarshalledMessage"
  },
  {
    "label": "FReceiveBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReceiveBuffer"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FSendBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSendBuffer"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "FSoftObjectPathSerializationWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPathSerializationWrapper"
  },
  {
    "label": "TryReadPacket()",
    "kind": "Method",
    "detail": "Function (EConnectionStatus)",
    "insertText": "TryReadPacket(FSocket* Socket, FReceiveBuffer& Buffer,\n\tTArray<FMarshalledMessage>& Messages, uint64 MaxPacketSize=0)"
  },
  {
    "label": "TryWritePacket()",
    "kind": "Method",
    "detail": "Function (EConnectionStatus)",
    "insertText": "TryWritePacket(FSocket* Socket, FSendBuffer& Buffer,\n\tTArray<FMarshalledMessage>&& AppendMessages, uint64 MaxPacketSize = 0)"
  },
  {
    "label": "TryWritePacket()",
    "kind": "Method",
    "detail": "Function (EConnectionStatus)",
    "insertText": "TryWritePacket(FSocket* Socket, FSendBuffer& Buffer,\n\tFMarshalledMessage&& AppendMessage, uint64 MaxPacketSize = 0)"
  },
  {
    "label": "QueueMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueMessage(FSendBuffer& Buffer, FMarshalledMessage&& Message)"
  },
  {
    "label": "TryFlushBuffer()",
    "kind": "Method",
    "detail": "Function (EConnectionStatus)",
    "insertText": "TryFlushBuffer(FSocket* Socket, FSendBuffer& Buffer, uint64 MaxPacketSize = 0)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, UE::CompactBinaryTCP::FMarshalledMessage& Value)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetTypeHash(Wrapper.Inner)"
  },
  {
    "label": "LoadFromCompactBinary()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromCompactBinary(FCbFieldView Field, FSoftObjectPathSerializationWrapper& Path)"
  }
]