[
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Conditions / MovieSceneCondition . h \" # include \" MovieSceneSequenceID . h \" # include \" MovieSceneSignedObject . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Containers / Array . h \" # include \" MovieSceneGroupCondition . generated . h \" namespace UE { namespace MovieScene { struct FSharedPlaybackState ; } })",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (And,Or,Xor } ;)",
    "insertText": "UCLASS(BlueprintType, DefaultToInstanced, EditInlineNew, Meta=(DisplayName=\"Group Condition\"))"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Sequencer|Condition\")"
  },
  {
    "label": "ComputeCacheKey()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ComputeCacheKey(FGuid BindingGuid, FMovieSceneSequenceID SequenceID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState, UObject* EntityOwner)"
  },
  {
    "label": "EvaluateConditionInternal()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "EvaluateConditionInternal(FGuid BindingGuid, FMovieSceneSequenceID SequenceID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "CanCacheResult()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCacheResult(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  }
]