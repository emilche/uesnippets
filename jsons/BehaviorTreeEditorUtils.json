[
  {
    "label": "UBTDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator"
  },
  {
    "label": "UBehaviorTreeGraphNode_CompositeDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeGraphNode_CompositeDecorator"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPropertySelectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertySelectionInfo"
  },
  {
    "label": "FPropertySelectionInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Set . h \" class UBTDecorator ; class UBehaviorTreeGraphNode_CompositeDecorator ; class UObject ; namespace BehaviorTreeEditorUtils { struct FPropertySelectionInfo {)",
    "insertText": "FPropertySelectionInfo() : FoundGraphNode_CompDecorator(nullptr) , FoundDecorator(nullptr) , bInjectedNode(false) , bRootLevelNode(false)"
  },
  {
    "label": "GetSelectionForPropertyEditor()",
    "kind": "Method",
    "detail": "Function (} UBehaviorTreeGraphNode_CompositeDecorator* FoundGraphNode_CompDecorator ; UBTDecorator* FoundDecorator ; bool bInjectedNode ; bool bRootLevelNode ; } ; TArray<UObject*>)",
    "insertText": "GetSelectionForPropertyEditor(const TSet<UObject*>& InSelection, FPropertySelectionInfo& OutSelectionInfo)"
  }
]