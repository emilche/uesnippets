[
  {
    "label": "MockBlockProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockBlockProcessor"
  },
  {
    "label": "MockBlockProcessor()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_BLOCK_PROCESSOR_H_ # define MODULES_AUDIO_PROCESSING_AEC3_MOCK_MOCK_BLOCK_PROCESSOR_H_ # include<vector> # include \" modules / audio_processing / aec3 / block_processor . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockBlockProcessor : public BlockProcessor { public :)",
    "insertText": "MockBlockProcessor()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ProcessCapture, (bool level_change, bool saturated_microphone_signal, Block* linear_output, Block* capture_block), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, BufferRender, (const Block& block), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, UpdateEchoLeakageStatus, (bool leakage_detected), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, GetMetrics, (EchoControl::Metrics * metrics), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetAudioBufferDelay, (int delay_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetCaptureOutputUsage, (bool capture_output_used), (override))"
  }
]