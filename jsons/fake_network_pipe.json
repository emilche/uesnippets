[
  {
    "label": "Clock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Clock"
  },
  {
    "label": "PacketReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PacketReceiver"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "NetworkPacket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkPacket"
  },
  {
    "label": "FakeNetworkPipe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeNetworkPipe"
  },
  {
    "label": "StoredPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StoredPacket"
  },
  {
    "label": "NetworkPacket()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NetworkPacket(rtc::CopyOnWriteBuffer packet,\n                int64_t send_time,\n                int64_t arrival_time,\n                absl::optional<PacketOptions> packet_options,\n                bool is_rtcp,\n                MediaType media_type,\n                absl::optional<int64_t> packet_time_us,\n                Transport* transport)"
  },
  {
    "label": "SetClockOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetClockOffset(int64_t offset_ms)"
  },
  {
    "label": "AddActiveTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActiveTransport(Transport* transport)"
  },
  {
    "label": "RemoveActiveTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActiveTransport(Transport* transport)"
  },
  {
    "label": "SendRtp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRtp(const uint8_t* packet,\n               size_t length,\n               const PacketOptions& options)"
  },
  {
    "label": "SendRtcp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRtcp(const uint8_t* packet, size_t length)"
  },
  {
    "label": "SendRtp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRtp(const uint8_t* packet,\n               size_t length,\n               const PacketOptions& options,\n               Transport* transport)"
  },
  {
    "label": "SendRtcp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRtcp(const uint8_t* packet, size_t length, Transport* transport)"
  },
  {
    "label": "PercentageLoss()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "PercentageLoss()"
  },
  {
    "label": "DroppedPackets()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "DroppedPackets()"
  },
  {
    "label": "SentPackets()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "SentPackets()"
  },
  {
    "label": "ResetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetStats()"
  },
  {
    "label": "DeliverPacketWithLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeliverPacketWithLock(NetworkPacket* packet)"
  },
  {
    "label": "SetTimeToNextProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeToNextProcess(int64_t skip_us)"
  },
  {
    "label": "StoredPacket()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "StoredPacket(NetworkPacket&& packet)"
  },
  {
    "label": "EnqueuePacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnqueuePacket(rtc::CopyOnWriteBuffer packet,\n                     absl::optional<PacketOptions> options,\n                     bool is_rtcp,\n                     MediaType media_type,\n                     absl::optional<int64_t> packet_time_us)"
  },
  {
    "label": "EnqueuePacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnqueuePacket(rtc::CopyOnWriteBuffer packet,\n                     absl::optional<PacketOptions> options,\n                     bool is_rtcp,\n                     Transport* transport)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (receiver_)",
    "insertText": "RTC_GUARDED_BY(config_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (packets_in_flight_)",
    "insertText": "RTC_GUARDED_BY(process_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (clock_offset_ms_)",
    "insertText": "RTC_GUARDED_BY(config_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (dropped_packets_)",
    "insertText": "RTC_GUARDED_BY(process_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sent_packets_)",
    "insertText": "RTC_GUARDED_BY(process_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (total_packet_delay_us_)",
    "insertText": "RTC_GUARDED_BY(process_lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (active_transports_)",
    "insertText": "RTC_GUARDED_BY(config_lock_)"
  }
]