[
  {
    "label": "USkinnedAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkinnedAsset"
  },
  {
    "label": "FSkinnedAssetCompilationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetCompilationContext"
  },
  {
    "label": "FSkinnedAssetPostLoadContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetPostLoadContext"
  },
  {
    "label": "FSkinnedAssetBuildContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetBuildContext"
  },
  {
    "label": "FSkinnedMeshComponentRecreateRenderStateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedMeshComponentRecreateRenderStateContext"
  },
  {
    "label": "FSkinnedAsyncTaskContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAsyncTaskContext"
  },
  {
    "label": "FSkinnedAssetAsyncBuildScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetAsyncBuildScope"
  },
  {
    "label": "FSkinnedAssetAsyncBuildWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinnedAssetAsyncBuildWorker"
  },
  {
    "label": "FSkinnedAssetAsyncBuildTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinnedAssetAsyncBuildTask"
  },
  {
    "label": "FSkinnedAssetCompilationContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" Animation / MorphTarget . h \" # endif # include \" Async / AsyncWork . h \" # include \" SkeletalMeshTypes . h \" class USkinnedAsset ; class FSkinnedAssetCompilationContext { public :)",
    "insertText": "FSkinnedAssetCompilationContext()"
  },
  {
    "label": "FSkinnedAssetCompilationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkinnedAssetCompilationContext(const FSkinnedAssetCompilationContext&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSkinnedAssetCompilationContext&)",
    "insertText": "operator(const FSkinnedAssetCompilationContext&)"
  },
  {
    "label": "FSkinnedAssetCompilationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkinnedAssetCompilationContext(FSkinnedAssetCompilationContext&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSkinnedAssetCompilationContext&)",
    "insertText": "operator(FSkinnedAssetCompilationContext&&)"
  },
  {
    "label": "FSkinnedAsyncTaskContext()",
    "kind": "Method",
    "detail": "Function (bool bIsSerializeSaving = false ; # if WITH_EDITOR TUniquePtr<FFinishBuildMorphTargetData> FinishBuildMorphTargetData ; # endif } ; class FSkinnedAssetPostLoadContext : public FSkinnedAssetCompilationContext { public : bool bHasCachedDerivedData = false ; } ; class FSkinnedAssetBuildContext : public FSkinnedAssetCompilationContext { public : TUniquePtr<class FSkinnedMeshComponentRecreateRenderStateContext> RecreateRenderStateContext ; } ; class FSkinnedAsyncTaskContext : public FSkinnedAssetCompilationContext { public :)",
    "insertText": "FSkinnedAsyncTaskContext(FEvent* InEvent) : Event(InEvent)"
  },
  {
    "label": "FSkinnedAssetAsyncBuildScope()",
    "kind": "Method",
    "detail": "Function (} FEvent* Event = nullptr ; } ; # if WITH_EDITOR class FSkinnedAssetAsyncBuildScope { public :)",
    "insertText": "FSkinnedAssetAsyncBuildScope(const USkinnedAsset* SkinnedAsset)"
  },
  {
    "label": "FSkinnedAssetAsyncBuildScope()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSkinnedAssetAsyncBuildScope()"
  },
  {
    "label": "ShouldWaitOnLockedProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldWaitOnLockedProperties(const USkinnedAsset* SkinnedAsset)"
  },
  {
    "label": "FSkinnedAssetAsyncBuildWorker()",
    "kind": "Method",
    "detail": "Function (private : const USkinnedAsset* PreviousScope = nullptr ; thread_local const USkinnedAsset* SkinnedAssetBeingAsyncCompiled ; } ; class FSkinnedAssetAsyncBuildWorker : public FNonAbandonableTask { public : USkinnedAsset* SkinnedAsset ; TOptional<FSkinnedAssetPostLoadContext> PostLoadContext ; TOptional<FSkinnedAssetBuildContext> BuildContext ; TOptional<FSkinnedAsyncTaskContext> AsyncTaskContext ;)",
    "insertText": "FSkinnedAssetAsyncBuildWorker(USkinnedAsset* InSkinnedAsset, FSkinnedAssetBuildContext&& InBuildContext) : SkinnedAsset(InSkinnedAsset) , BuildContext(MoveTemp(InBuildContext))"
  },
  {
    "label": "FSkinnedAssetAsyncBuildWorker()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSkinnedAssetAsyncBuildWorker(USkinnedAsset* InSkinnedAsset, FSkinnedAssetPostLoadContext&& InPostLoadContext) : SkinnedAsset(InSkinnedAsset) , PostLoadContext(MoveTemp(InPostLoadContext))"
  },
  {
    "label": "FSkinnedAssetAsyncBuildWorker()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSkinnedAssetAsyncBuildWorker(USkinnedAsset* InSkinnedAsset, FSkinnedAsyncTaskContext&& InAsyncTaskContext) : SkinnedAsset(InSkinnedAsset) , AsyncTaskContext(MoveTemp(InAsyncTaskContext))"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (} TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoWork()"
  },
  {
    "label": "FSkinnedAssetAsyncBuildTask()",
    "kind": "Method",
    "detail": "Function (} ; struct FSkinnedAssetAsyncBuildTask : public FAsyncTask<FSkinnedAssetAsyncBuildWorker> {)",
    "insertText": "FSkinnedAssetAsyncBuildTask(USkinnedAsset* InSkinnedAsset, FSkinnedAssetPostLoadContext&& InPostLoadContext) : FAsyncTask<FSkinnedAssetAsyncBuildWorker>(InSkinnedAsset, MoveTemp(InPostLoadContext)) , SkinnedAsset(InSkinnedAsset)"
  },
  {
    "label": "FSkinnedAssetAsyncBuildTask()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSkinnedAssetAsyncBuildTask(USkinnedAsset* InSkinnedAsset, FSkinnedAssetBuildContext&& InBuildContext) : FAsyncTask<FSkinnedAssetAsyncBuildWorker>(InSkinnedAsset, MoveTemp(InBuildContext)) , SkinnedAsset(InSkinnedAsset)"
  },
  {
    "label": "FSkinnedAssetAsyncBuildTask()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSkinnedAssetAsyncBuildTask(USkinnedAsset* InSkinnedAsset, FSkinnedAsyncTaskContext&& InAsyncTaskContext) : FAsyncTask<FSkinnedAssetAsyncBuildWorker>(InSkinnedAsset, MoveTemp(InAsyncTaskContext)) , SkinnedAsset(InSkinnedAsset)"
  }
]