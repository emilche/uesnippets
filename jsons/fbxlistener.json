[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxListener()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_LISTENER_H_ # define _FBXSDK_CORE_LISTENER_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxemitter . h> # include<fbxsdk / core / fbxeventhandler . h> # include<fbxsdk / core / base / fbxintrusivelist . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxListener { public : ~)",
    "insertText": "FbxListener()"
  },
  {
    "label": "Bind()",
    "kind": "Method",
    "detail": "Function (} template<EventType,ListenerType> FbxEventHandler*)",
    "insertText": "Bind(FbxEmitter& pEmitter, void (ListenerType::*pFunc)(const EventType*))"
  },
  {
    "label": "ListenerType()",
    "kind": "Method",
    "detail": "Function (FbxMemberFuncEventHandler<EventType,ListenerType>* eventHandler = FbxNew<FbxMemberFuncEventHandler<EventType,)",
    "insertText": "ListenerType(static_cast<ListenerType*>(this),pFunc)"
  },
  {
    "label": "AddListener()",
    "kind": "Method",
    "detail": "Function (pEmitter .)",
    "insertText": "AddListener(*eventHandler)"
  },
  {
    "label": "PushBack()",
    "kind": "Method",
    "detail": "Function (mEventHandler .)",
    "insertText": "PushBack(*eventHandler)"
  },
  {
    "label": "EventType()",
    "kind": "Method",
    "detail": "Function (FbxFuncEventHandler<EventType>* eventHandler = FbxNew<FbxFuncEventHandler<)",
    "insertText": "EventType(this, pFunc)"
  }
]