[
  {
    "label": "ABrush",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABrush"
  },
  {
    "label": "ACameraActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACameraActor"
  },
  {
    "label": "ALight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALight"
  },
  {
    "label": "UModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UModel"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "FbxNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxNode"
  },
  {
    "label": "INodeNameAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INodeNameAdapter"
  },
  {
    "label": "FCinematicExporter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCinematicExporter"
  },
  {
    "label": "INodeNameAdapter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameFramework / Actor . h \" class ABrush ; class ACameraActor ; class ALight ; class UModel ; class UStaticMeshComponent ; class USkeletalMeshComponent ; namespace fbxsdk { class FbxNode ; } class INodeNameAdapter { public : ~)",
    "insertText": "INodeNameAdapter()"
  },
  {
    "label": "GetActorNodeName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetActorNodeName(const AActor* InActor)"
  },
  {
    "label": "AddFbxNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddFbxNode(UObject* InObject, fbxsdk::FbxNode* InFbxNode)"
  },
  {
    "label": "GetFbxNode()",
    "kind": "Method",
    "detail": "Function (} fbxsdk::FbxNode*)",
    "insertText": "GetFbxNode(UObject* InObject)"
  },
  {
    "label": "FillExportOptions()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FillExportOptions(bool bBatchMode, bool bShowOptionDialog, const FString& FullPath, bool& OutOperationCanceled, bool& bOutExportAll)"
  },
  {
    "label": "CreateDocument()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDocument()"
  },
  {
    "label": "SetTransformBaking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransformBaking(bool bBakeTransforms)"
  },
  {
    "label": "SetKeepHierarchy()",
    "kind": "Method",
    "detail": "Function (bBakeKeys = bBakeTransforms ; } void)",
    "insertText": "SetKeepHierarchy(bool bInKeepHierarchy)"
  },
  {
    "label": "ExportLevelMesh()",
    "kind": "Method",
    "detail": "Function (bKeepHierarchy = bInKeepHierarchy ; } void)",
    "insertText": "ExportLevelMesh(ULevel* Level, bool bSelectedOnly, INodeNameAdapter& NodeNameAdapter, bool bSaveAnimSeq = true)"
  },
  {
    "label": "ExportLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportLight(ALight* Actor, INodeNameAdapter& NodeNameAdapter)"
  },
  {
    "label": "ExportCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportCamera(ACameraActor* Actor, bool bExportComponents, INodeNameAdapter& NodeNameAdapter)"
  },
  {
    "label": "ExportBrush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportBrush(ABrush* Actor, UModel* Model, bool bConvertToStaticMesh, INodeNameAdapter& NodeNameAdapter)"
  },
  {
    "label": "ExportStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportStaticMesh(AActor* Actor, UStaticMeshComponent* StaticMeshComponent, INodeNameAdapter& NodeNameAdapter)"
  },
  {
    "label": "WriteToFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteToFile(const TCHAR* Filename)"
  },
  {
    "label": "CloseDocument()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDocument()"
  }
]