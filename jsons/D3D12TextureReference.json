[
  {
    "label": "FD3D12RHITextureReference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12RHITextureReference"
  },
  {
    "label": "TD3D12ResourceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TD3D12ResourceTraits"
  },
  {
    "label": "FD3D12RHITextureReference()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" D3D12RHIPrivate . h \" # include \" RHITextureReference . h \" class FD3D12RHITextureReference : public FD3D12DeviceChild,public FRHITextureReference,public FD3D12LinkedAdapterObject<FD3D12RHITextureReference> # if PLATFORM_SUPPORTS_BINDLESS_RENDERING,public FD3D12ShaderResourceRenameListener # endif { public :)",
    "insertText": "FD3D12RHITextureReference()"
  },
  {
    "label": "FD3D12RHITextureReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FD3D12RHITextureReference(FD3D12Device* InDevice, FD3D12Texture* InReferencedTexture, FD3D12RHITextureReference* FirstLinkedObject)"
  },
  {
    "label": "ResourceRenamed()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_SUPPORTS_BINDLESS_RENDERING void)",
    "insertText": "ResourceRenamed(FD3D12ContextArray const& Contexts, FD3D12BaseShaderResource* InRenamedResource, FD3D12ResourceLocation* InNewResourceLocation)"
  },
  {
    "label": "SwitchToNewTexture()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "SwitchToNewTexture(FD3D12ContextArray const& Contexts, FD3D12Texture* InNewTexture)"
  }
]