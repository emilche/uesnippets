[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "ParameterEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ParameterEntry"
  },
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "Connection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Connection"
  },
  {
    "label": "MaterialFlatten",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MaterialFlatten"
  },
  {
    "label": "MaterialFlatten()",
    "kind": "Method",
    "detail": "Function (manually)",
    "insertText": "MaterialFlatten()"
  },
  {
    "label": "MaterialFlatten()",
    "kind": "Method",
    "detail": "Function (materialSchema)",
    "insertText": "MaterialFlatten( IMaterialSchema iMaterialSchema )"
  },
  {
    "label": "MaterialFlatten()",
    "kind": "Method",
    "detail": "Function (append)",
    "insertText": "MaterialFlatten( IMaterial iMaterialObject )"
  },
  {
    "label": "append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "append( IMaterialSchema iMaterialSchema )"
  },
  {
    "label": "append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "append( IMaterial iMaterialObject )"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "empty()"
  },
  {
    "label": "getTargetNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getTargetNames( std::vector<std::string> & oTargetNames )"
  },
  {
    "label": "getShaderTypesForTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getShaderTypesForTarget( const std::string & iTargetName,\n                                  std::vector<std::string> & oShaderTypeNames )"
  },
  {
    "label": "getShader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getShader( const std::string & iTarget,\n                    const std::string & iShaderType,\n                    std::string & oResult )"
  },
  {
    "label": "getShaderParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getShaderParameters( const std::string & iTarget,\n                              const std::string & iShaderType,\n                              ParameterEntryVector & oResult )"
  },
  {
    "label": "getNetworkTerminalTargetNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNetworkTerminalTargetNames(std::vector<std::string> & iTargetNames)"
  },
  {
    "label": "getNetworkTerminalShaderTypesForTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNetworkTerminalShaderTypesForTarget(\n        const std::string & iTargetName,\n        std::vector<std::string> & oShaderTypeNames )"
  },
  {
    "label": "getNetworkTerminal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getNetworkTerminal( const std::string & iTarget,\n                             const std::string & iShaderType,\n                             std::string & oNodeName,\n                             std::string & oOutputName )"
  },
  {
    "label": "NetworkNode()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NetworkNode()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "valid()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "getName()"
  },
  {
    "label": "getTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getTarget( std::string & oResult )"
  },
  {
    "label": "getNodeType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "getNodeType( std::string & oResult )"
  },
  {
    "label": "getParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getParameters( ParameterEntryVector & oResult )"
  },
  {
    "label": "getConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getConnections( ConnectionVector & oResult )"
  },
  {
    "label": "getNumNetworkNodes()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumNetworkNodes()"
  },
  {
    "label": "getNetworkNode()",
    "kind": "Method",
    "detail": "Function (NetworkNode)",
    "insertText": "getNetworkNode( size_t iIndex )"
  },
  {
    "label": "getNetworkNode()",
    "kind": "Method",
    "detail": "Function (NetworkNode)",
    "insertText": "getNetworkNode( const std::string & iNodeName )"
  },
  {
    "label": "flattenNetwork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flattenNetwork()"
  }
]