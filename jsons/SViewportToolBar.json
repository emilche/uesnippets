[
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SViewportToolBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewportToolBar"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Animation / CurveSequence . h \" # include \" CoreMinimal . h \" # include \" Editor / UnrealEdTypes . h \" # include \" Engine / EngineBaseTypes . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SMenuAnchor ; struct FSlateBrush ; class SViewportToolBar : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SViewportToolBar)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() UNREALED_API void Construct( const FArguments& InArgs)"
  },
  {
    "label": "GetOpenMenu()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SMenuAnchor>)",
    "insertText": "GetOpenMenu()"
  },
  {
    "label": "SetOpenMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOpenMenu(TSharedPtr< SMenuAnchor >& NewMenu)"
  },
  {
    "label": "IsViewModeSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsViewModeSupported(EViewModeIndex ViewModeIndex)"
  },
  {
    "label": "GetCameraMenuLabelIconFromViewportType()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetCameraMenuLabelIconFromViewportType(const ELevelViewportType ViewportType)"
  }
]