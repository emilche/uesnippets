[
  {
    "label": "SaveNameBatch()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" UObject / NameTypes . h \" # include \" Templates / Function . h \" # define ALLOW_NAME_BATCH_SAVING PLATFORM_LITTLE_ENDIAN&& ! PLATFORM_TCHAR_IS_4_BYTES # if ALLOW_NAME_BATCH_SAVING void)",
    "insertText": "SaveNameBatch(TArrayView<const FDisplayNameEntryId> Names, TArray<uint8>& OutNameData, TArray<uint8>& OutHashData)"
  },
  {
    "label": "SaveNameBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveNameBatch(TArrayView<const FDisplayNameEntryId> Names, FArchive& Out)"
  },
  {
    "label": "ReserveNameBatch()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ReserveNameBatch(uint32 NameDataBytes, uint32 HashDataBytes)"
  },
  {
    "label": "LoadNameBatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadNameBatch(TArray<FDisplayNameEntryId>& OutNames, TArrayView<const uint8> NameData, TArrayView<const uint8> HashData)"
  },
  {
    "label": "LoadNameBatch()",
    "kind": "Method",
    "detail": "Function (TArray<FDisplayNameEntryId>)",
    "insertText": "LoadNameBatch(FArchive& Ar)"
  },
  {
    "label": "FDisplayNameEntryId()",
    "kind": "Method",
    "detail": "Function (TFunction<TArray<)",
    "insertText": "FDisplayNameEntryId()> LoadNameBatchAsync(FArchive& Ar, uint32 MaxWorkers)"
  }
]