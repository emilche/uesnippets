[
  {
    "label": "UToolTargetManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolTargetManager"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ToolTargets / ToolTarget . h \" # include \" ToolContextInterfaces . h \" # include \" ToolTargetManager . generated . h \")",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: bool IsActive()"
  },
  {
    "label": "FindFirstFactoryByPredicate()",
    "kind": "Method",
    "detail": "Function (UToolTargetFactory*)",
    "insertText": "FindFirstFactoryByPredicate(TFunctionRef<bool(UToolTargetFactory*)> Predicate)"
  },
  {
    "label": "FindFirstFactoryByType()",
    "kind": "Method",
    "detail": "Function (template<CastToType> CastToType*)",
    "insertText": "FindFirstFactoryByType()"
  },
  {
    "label": "FindFirstFactoryByPredicate()",
    "kind": "Method",
    "detail": "Function (UToolTargetFactory* Found =)",
    "insertText": "FindFirstFactoryByPredicate([](UToolTargetFactory* Factory) { return Cast<CastToType>(Factory) != nullptr; })"
  },
  {
    "label": "CanBuildTarget()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanBuildTarget(UObject* SourceObject, const FToolTargetTypeRequirements& TargetRequirements)"
  },
  {
    "label": "BuildTarget()",
    "kind": "Method",
    "detail": "Function (UToolTarget*)",
    "insertText": "BuildTarget(UObject* SourceObject, const FToolTargetTypeRequirements& TargetRequirements)"
  },
  {
    "label": "BuildTarget()",
    "kind": "Method",
    "detail": "Function (template<CastToType> CastToType*)",
    "insertText": "BuildTarget(UObject* SourceObject, const FToolTargetTypeRequirements& TargetType)"
  },
  {
    "label": "BuildTarget()",
    "kind": "Method",
    "detail": "Function (UToolTarget* Result =)",
    "insertText": "BuildTarget(SourceObject, TargetType)"
  },
  {
    "label": "CountSelectedAndTargetable()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "CountSelectedAndTargetable(const FToolBuilderState& SceneState, const FToolTargetTypeRequirements& TargetRequirements)"
  },
  {
    "label": "EnumerateSelectedAndTargetableComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateSelectedAndTargetableComponents(const FToolBuilderState& SceneState, const FToolTargetTypeRequirements& TargetRequirements, TFunctionRef<void(UActorComponent*)> ComponentFunc)"
  },
  {
    "label": "CountSelectedAndTargetableWithPredicate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CountSelectedAndTargetableWithPredicate(const FToolBuilderState& SceneState, const FToolTargetTypeRequirements& TargetRequirements, TFunctionRef<bool(UActorComponent&)> ComponentPred)"
  },
  {
    "label": "BuildFirstSelectedTargetable()",
    "kind": "Method",
    "detail": "Function (UToolTarget*)",
    "insertText": "BuildFirstSelectedTargetable(const FToolBuilderState& SceneState, const FToolTargetTypeRequirements& TargetRequirements)"
  },
  {
    "label": "BuildAllSelectedTargetable()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<UToolTarget>>)",
    "insertText": "BuildAllSelectedTargetable(const FToolBuilderState& SceneState, const FToolTargetTypeRequirements& TargetRequirements)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "AddFactoryToDeprecatedToolTargetManager()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AddFactoryToDeprecatedToolTargetManager(UToolTargetFactory* Factory)"
  },
  {
    "label": "UToolTargetManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UToolTargetManager()"
  }
]