[
  {
    "label": "UTextureRenderTarget2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureRenderTarget2D"
  },
  {
    "label": "UMaterialOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialOptions"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FExportMaterialProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExportMaterialProxy"
  },
  {
    "label": "FTextureRenderTargetResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderTargetResource"
  },
  {
    "label": "FMaterialData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialData"
  },
  {
    "label": "FMeshData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshData"
  },
  {
    "label": "FBakeOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBakeOutput"
  },
  {
    "label": "MATERIALBAKING_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MATERIALBAKING_API"
  },
  {
    "label": "FMaterialBakingProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialBakingProcessor"
  },
  {
    "label": "EPropertyColorSpace",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPropertyColorSpace"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Engine / TextureRenderTarget2D . h \" # include \" UObject / StrongObjectPtr . h \" # include \" Modules / ModuleInterface . h \" # include \" PixelFormat . h \" # include \" SceneTypes . h \" # include \" IMaterialBakingModule . h \" # include \" MaterialPropertyEx . h \" class UTextureRenderTarget2D ; class UMaterialOptions ; class UMaterialInterface ; class FExportMaterialProxy ; class FTextureRenderTargetResource ; struct FMaterialData ; struct FMeshData ; struct FBakeOutput ; class FMaterialBakingModule : public IMaterialBakingModule { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "BakeMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeMaterials(const TArray<FMaterialData*>& MaterialSettings, const TArray<FMeshData*>& MeshSettings, TArray<FBakeOutput>& Output)"
  },
  {
    "label": "BakeMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeMaterials(const TArray<FMaterialDataEx*>& MaterialSettings, const TArray<FMeshData*>& MeshSettings, TArray<FBakeOutputEx>& Output)"
  },
  {
    "label": "BakeMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeMaterials(const TArray<FMaterialData*>& MaterialSettings, const TArray<FMeshData*>& MeshSettings, FBakeOutput& Output)"
  },
  {
    "label": "BakeMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeMaterials(const TArray<FMaterialDataEx*>& MaterialSettings, const TArray<FMeshData*>& MeshSettings, FBakeOutputEx& Output)"
  },
  {
    "label": "SetupMaterialBakeSettings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupMaterialBakeSettings(TArray<TWeakObjectPtr<UObject>>& OptionObjects, int32 NumLODs)"
  },
  {
    "label": "SetEmissiveHDR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEmissiveHDR(bool bHDR)"
  },
  {
    "label": "SetLinearBake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinearBake(bool bCorrectLinear)"
  },
  {
    "label": "IsLinearBake()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLinearBake(FMaterialPropertyEx Property)"
  },
  {
    "label": "GetCRC()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCRC()"
  },
  {
    "label": "CreateRenderTarget()",
    "kind": "Method",
    "detail": "Function (protected : class FMaterialBakingProcessor ; UTextureRenderTarget2D*)",
    "insertText": "CreateRenderTarget(FMaterialPropertyEx InProperty, const FIntPoint& InTargetSize, bool bInUsePooledRenderTargets, const FColor& BackgroundColor)"
  },
  {
    "label": "CreateMaterialProxy()",
    "kind": "Method",
    "detail": "Function (FExportMaterialProxy*)",
    "insertText": "CreateMaterialProxy(const FMaterialDataEx* MaterialSettings, const FMaterialPropertyEx& Property)"
  },
  {
    "label": "CleanupMaterialProxies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMaterialProxies()"
  },
  {
    "label": "CleanupRenderTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupRenderTargets()"
  },
  {
    "label": "OnObjectModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectModified(UObject* Object)"
  },
  {
    "label": "OnPreGarbageCollect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreGarbageCollect()"
  }
]