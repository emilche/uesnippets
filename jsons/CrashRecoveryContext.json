[
  {
    "label": "CrashRecoveryContextCleanup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContextCleanup"
  },
  {
    "label": "CrashRecoveryContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContext"
  },
  {
    "label": "CrashRecoveryContextCleanupBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContextCleanupBase"
  },
  {
    "label": "CrashRecoveryContextDestructorCleanup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContextDestructorCleanup"
  },
  {
    "label": "CrashRecoveryContextDeleteCleanup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContextDeleteCleanup"
  },
  {
    "label": "CrashRecoveryContextReleaseRefCleanup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContextReleaseRefCleanup"
  },
  {
    "label": "CrashRecoveryContextCleanupRegistrar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CrashRecoveryContextCleanupRegistrar"
  },
  {
    "label": "CrashRecoveryContext()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_CRASHRECOVERYCONTEXT_H # define LLVM_SUPPORT_CRASHRECOVERYCONTEXT_H # include \" llvm / ADT / STLExtras . h \" # include<string> namespace llvm { class CrashRecoveryContextCleanup ; class CrashRecoveryContext { void* Impl ; CrashRecoveryContextCleanup* head ; public :)",
    "insertText": "CrashRecoveryContext() : Impl(nullptr), head(nullptr)"
  },
  {
    "label": "CrashRecoveryContext()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CrashRecoveryContext()"
  },
  {
    "label": "registerCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerCleanup(CrashRecoveryContextCleanup *cleanup)"
  },
  {
    "label": "unregisterCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unregisterCleanup(CrashRecoveryContextCleanup *cleanup)"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable()"
  },
  {
    "label": "Disable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Disable()"
  },
  {
    "label": "GetCurrent()",
    "kind": "Method",
    "detail": "Function (CrashRecoveryContext*)",
    "insertText": "GetCurrent()"
  },
  {
    "label": "isRecoveringFromCrash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRecoveringFromCrash()"
  },
  {
    "label": "RunSafely()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunSafely(function_ref<void()> Fn)"
  },
  {
    "label": "RunSafely()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunSafely(void (*Fn)(void*), void *UserData)"
  },
  {
    "label": "RunSafelyOnThread()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RunSafelyOnThread(function_ref<void()>, unsigned RequestedStackSize = 0)"
  },
  {
    "label": "RunSafelyOnThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunSafelyOnThread(void (*Fn)(void*), void *UserData, unsigned RequestedStackSize = 0)"
  },
  {
    "label": "HandleCrash()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HandleCrash()"
  },
  {
    "label": "getBacktrace()",
    "kind": "Method",
    "detail": "Function (const std::string&)",
    "insertText": "getBacktrace()"
  },
  {
    "label": "CrashRecoveryContextCleanup()",
    "kind": "Method",
    "detail": "Function (} ; class CrashRecoveryContextCleanup { protected : CrashRecoveryContext* context ;)",
    "insertText": "CrashRecoveryContextCleanup(CrashRecoveryContext *context) : context(context), cleanupFired(false)"
  },
  {
    "label": "CrashRecoveryContextCleanup()",
    "kind": "Method",
    "detail": "Function (} public : bool cleanupFired ; ~)",
    "insertText": "CrashRecoveryContextCleanup()"
  },
  {
    "label": "recoverResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recoverResources()"
  },
  {
    "label": "getContext()",
    "kind": "Method",
    "detail": "Function (CrashRecoveryContext*)",
    "insertText": "getContext()"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (} public : DERIVED*)",
    "insertText": "create(T *x)"
  },
  {
    "label": "CrashRecoveryContextDestructorCleanup()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } } ; template<T> class CrashRecoveryContextDestructorCleanup : public CrashRecoveryContextCleanupBase<CrashRecoveryContextDestructorCleanup<T>,T> { public :)",
    "insertText": "CrashRecoveryContextDestructorCleanup(CrashRecoveryContext *context, T *resource) : CrashRecoveryContextCleanupBase< CrashRecoveryContextDestructorCleanup<T>, T>(context, resource)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (this -> resource -> ~)",
    "insertText": "T()"
  },
  {
    "label": "CrashRecoveryContextDeleteCleanup()",
    "kind": "Method",
    "detail": "Function (} } ; template<T> class CrashRecoveryContextDeleteCleanup : public CrashRecoveryContextCleanupBase<CrashRecoveryContextDeleteCleanup<T>,T> { public :)",
    "insertText": "CrashRecoveryContextDeleteCleanup(CrashRecoveryContext *context, T *resource) : CrashRecoveryContextCleanupBase< CrashRecoveryContextDeleteCleanup<T>, T>(context, resource)"
  },
  {
    "label": "CrashRecoveryContextReleaseRefCleanup()",
    "kind": "Method",
    "detail": "Function (delete this -> resource ; } } ; template<T> class CrashRecoveryContextReleaseRefCleanup : public CrashRecoveryContextCleanupBase<CrashRecoveryContextReleaseRefCleanup<T>,T> { public :)",
    "insertText": "CrashRecoveryContextReleaseRefCleanup(CrashRecoveryContext *context, T *resource) : CrashRecoveryContextCleanupBase<CrashRecoveryContextReleaseRefCleanup<T>, T>(context, resource)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (this -> resource ->)",
    "insertText": "Release()"
  },
  {
    "label": "CrashRecoveryContextCleanupRegistrar()",
    "kind": "Method",
    "detail": "Function (} } ; template<T,Cleanup = CrashRecoveryContextDeleteCleanup<T>> class CrashRecoveryContextCleanupRegistrar { CrashRecoveryContextCleanup* cleanup ; public :)",
    "insertText": "CrashRecoveryContextCleanupRegistrar(T *x) : cleanup(Cleanup::create(x))"
  },
  {
    "label": "CrashRecoveryContextCleanupRegistrar()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CrashRecoveryContextCleanupRegistrar()"
  },
  {
    "label": "unregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unregister()"
  }
]