[
  {
    "label": "dtQuerySpecialLinkFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtQuerySpecialLinkFilter"
  },
  {
    "label": "dtQueryFilterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtQueryFilterData"
  },
  {
    "label": "dtQueryFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtQueryFilter"
  },
  {
    "label": "dtQueryResultPack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtQueryResultPack"
  },
  {
    "label": "dtQueryResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtQueryResult"
  },
  {
    "label": "dtNavMeshQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNavMeshQuery"
  },
  {
    "label": "dtNavMeshQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNavMeshQuery"
  },
  {
    "label": "dtNodePool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNodePool"
  },
  {
    "label": "dtNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtNode"
  },
  {
    "label": "dtQueryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtQueryData"
  },
  {
    "label": "dtNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtNode"
  },
  {
    "label": "dtNodePool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNodePool"
  },
  {
    "label": "dtNodePool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNodePool"
  },
  {
    "label": "dtNodeQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNodeQueue"
  },
  {
    "label": "dtQueryFilterData()",
    "kind": "Method",
    "detail": "Function (NAVMESH_API)",
    "insertText": "dtQueryFilterData()"
  },
  {
    "label": "copyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyFrom(const dtQueryFilterData* source)"
  },
  {
    "label": "passInlineFilter()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "passInlineFilter(ref, tile, poly)"
  },
  {
    "label": "getInlineCost()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "getInlineCost(pa, pb,\n\t\t\tprevRef, prevTile, prevPoly,\n\t\t\tcurRef, curTile, curPoly,\n\t\t\tnextRef, nextTile, nextPoly)"
  },
  {
    "label": "getPos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getPos(int idx, dtReal* pos)"
  },
  {
    "label": "copyRefs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyRefs(dtPolyRef* refs, int nmax)"
  },
  {
    "label": "copyCosts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyCosts(dtReal* costs, int nmax)"
  },
  {
    "label": "copyPos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyPos(dtReal* pos, int nmax)"
  },
  {
    "label": "copyFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyFlags(unsigned char* flags, int nmax)"
  },
  {
    "label": "copyFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyFlags(unsigned int* flags, int nmax)"
  },
  {
    "label": "setPos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setPos(int idx, const dtReal* pos)"
  },
  {
    "label": "dtNavMeshQuery()",
    "kind": "Method",
    "detail": "Function (NAVMESH_API)",
    "insertText": "dtNavMeshQuery()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "init(const dtNavMesh* nav, const int maxNodes, dtQuerySpecialLinkFilter* linkFilter = 0)"
  },
  {
    "label": "updateLinkFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateLinkFilter(dtQuerySpecialLinkFilter* linkFilter)"
  },
  {
    "label": "initSlicedFindPath()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "initSlicedFindPath(dtPolyRef startRef, dtPolyRef endRef,\n\t\t\t\t\t\t\t\tconst dtReal* startPos, const dtReal* endPos, const dtReal costLimit, const bool requireNavigableEndLocation, //@UE\n\t\t\t\t\t\t\t\tconst dtQueryFilter* filter)"
  },
  {
    "label": "updateSlicedFindPath()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "updateSlicedFindPath(const int maxIter, int* doneIters)"
  },
  {
    "label": "finalizeSlicedFindPath()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "finalizeSlicedFindPath(dtPolyRef* path, int* pathCount, const int maxPath)"
  },
  {
    "label": "finalizeSlicedFindPathPartial()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "finalizeSlicedFindPathPartial(const dtPolyRef* existing, const int existingSize,\n\t\t\t\t\t\t\t\t\t\t   dtPolyRef* path, int* pathCount, const int maxPath)"
  },
  {
    "label": "dtApplyEpsilon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtApplyEpsilon(dtReal* extents)"
  },
  {
    "label": "dtFreeNavMeshQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtFreeNavMeshQuery(dtNavMeshQuery* query)"
  }
]