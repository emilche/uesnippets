[
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "EBlendableLocation",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendableLocation"
  },
  {
    "label": "UBlendableInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendableInterface"
  },
  {
    "label": "IBlendableInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBlendableInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FPostProcessMaterialNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPostProcessMaterialNode"
  },
  {
    "label": "FCompare",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompare"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectMacros . h \" # include \" UObject / Interface . h \" # include \" BlendableInterface . generated . h \" class UMaterialInstanceDynamic ; class UMaterialInterface ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (BL_SceneColorBeforeDOF = 2)",
    "insertText": "UMETA(DisplayName=\"Scene Color Before DOF\"), BL_SceneColorAfterDOF = 1 UMETA(DisplayName = \"Scene Color After DOF\"), BL_TranslucencyAfterDOF = 5 UMETA(DisplayName = \"Translucency After DOF\"), BL_SSRInput = 4 UMETA(DisplayName = \"SSR Input\"), BL_SceneColorBeforeBloom = 6 UMETA(DisplayName = \"Scene Color Before Bloom\"), BL_ReplacingTonemapper = 3 UMETA(DisplayName=\"Replacing the Tonemapper\"), BL_SceneColorAfterTonemapping = 0 UMETA(DisplayName = \"Scene Color After Tonemapping\"), BL_MAX = 7 UMETA(Hidden), BL_BeforeTranslucency UE_DEPRECATED(5.4, \"Renamed to BL_SceneColorBeforeDOF\") = BL_SceneColorBeforeDOF UMETA(Hidden), BL_BeforeTonemapping UE_DEPRECATED(5.4, \"Renamed to BL_SceneColorAfterDOF\") = BL_SceneColorAfterDOF UMETA(Hidden), BL_AfterTonemapping UE_DEPRECATED(5.4, \"Renamed to BL_SceneColorAfterTonemapping\") = BL_SceneColorAfterTonemapping UMETA(Hidden)"
  },
  {
    "label": "UINTERFACE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINTERFACE(MinimalAPI)"
  },
  {
    "label": "GENERATED_UINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UINTERFACE_BODY()"
  },
  {
    "label": "GENERATED_IINTERFACE_BODY()",
    "kind": "Method",
    "detail": "Function (class IBlendableInterface {)",
    "insertText": "GENERATED_IINTERFACE_BODY() virtual void OverrideBlendableSettings(class FSceneView& View, float Weight)"
  },
  {
    "label": "FPostProcessMaterialNode()",
    "kind": "Method",
    "detail": "Function (} ; struct FPostProcessMaterialNode {)",
    "insertText": "FPostProcessMaterialNode() : MaterialInterface(0), bIsMID(false), Location(BL_MAX), Priority(0)"
  },
  {
    "label": "FPostProcessMaterialNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPostProcessMaterialNode(UMaterialInterface* InMaterialInterface, EBlendableLocation InLocation, int32 InPriority, bool InbIsBlendable) : MaterialInterface(InMaterialInterface), bIsMID(false), Location(InLocation), Priority(InPriority), bIsBlendable(InbIsBlendable)"
  },
  {
    "label": "FPostProcessMaterialNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPostProcessMaterialNode(UMaterialInstanceDynamic* InMID, EBlendableLocation InLocation, int32 InPriority, bool InbIsBlendable) : MaterialInterface((UMaterialInterface*)InMID), bIsMID(true), Location(InLocation), Priority(InPriority), bIsBlendable(InbIsBlendable)"
  },
  {
    "label": "GetMaterialInterface()",
    "kind": "Method",
    "detail": "Function (} UMaterialInterface*)",
    "insertText": "GetMaterialInterface()"
  },
  {
    "label": "GetFName()",
    "kind": "Method",
    "detail": "Function (} const FName&)",
    "insertText": "GetFName()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (const FName Name =)",
    "insertText": "FName(TEXT(\"FPostProcessMaterialNode\"))"
  }
]