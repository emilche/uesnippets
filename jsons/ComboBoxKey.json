[
  {
    "label": "UComboBoxKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UComboBoxKey"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Components / Widget . h \" # include \" Widgets / Input / SComboBox . h \" # include \" ComboBoxKey . generated . h \")",
    "insertText": "UCLASS(meta = (DisplayName = \"ComboBox (Key)\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UMG_API UComboBoxKey()"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnSelectionChangedEvent, FName, SelectedItem, ESelectInfo::Type, SelectionType)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnOpeningEvent)"
  },
  {
    "label": "DECLARE_DYNAMIC_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DYNAMIC_DELEGATE_RetVal_OneParam(UWidget*, FGenerateWidgetEvent, FName, Item)"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "SetContentPadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContentPadding(FMargin InPadding)"
  },
  {
    "label": "GetContentPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetContentPadding()"
  },
  {
    "label": "IsEnableGamepadNavigationMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnableGamepadNavigationMode()"
  },
  {
    "label": "SetEnableGamepadNavigationMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableGamepadNavigationMode(bool InEnableGamepadNavigationMode)"
  },
  {
    "label": "IsHasDownArrow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHasDownArrow()"
  },
  {
    "label": "SetHasDownArrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasDownArrow(bool InHasDownArrow)"
  },
  {
    "label": "GetMaxListHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxListHeight()"
  },
  {
    "label": "SetMaxListHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxListHeight(float InMaxHeight)"
  },
  {
    "label": "GetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (const FComboBoxStyle&)",
    "insertText": "GetWidgetStyle()"
  },
  {
    "label": "SetWidgetStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWidgetStyle(const FComboBoxStyle& InWidgetStyle)"
  },
  {
    "label": "GetItemStyle()",
    "kind": "Method",
    "detail": "Function (const FTableRowStyle&)",
    "insertText": "GetItemStyle()"
  },
  {
    "label": "SetItemStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemStyle(const FTableRowStyle& InItemStyle)"
  },
  {
    "label": "GetScrollBarStyle()",
    "kind": "Method",
    "detail": "Function (const FScrollBarStyle&)",
    "insertText": "GetScrollBarStyle()"
  },
  {
    "label": "IsFocusable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFocusable()"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "InitScrollBarStyle()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "InitScrollBarStyle(const FScrollBarStyle& InScrollBarStyle)"
  },
  {
    "label": "InitIsFocusable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitIsFocusable(bool InIsFocusable)"
  },
  {
    "label": "InitForegroundColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitForegroundColor(FSlateColor InForegroundColor)"
  },
  {
    "label": "GenerateContent()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GenerateContent()"
  },
  {
    "label": "HandleGenerateItemWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleGenerateItemWidget(FName Item)"
  },
  {
    "label": "HandleSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSelectionChanged(FName Item, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "HandleOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOpening()"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  }
]