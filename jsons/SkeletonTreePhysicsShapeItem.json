[
  {
    "label": "FSkeletonTreePhysicsShapeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletonTreePhysicsShapeItem"
  },
  {
    "label": "ISkeletonTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletonTree"
  },
  {
    "label": "SKELETON_TREE_ITEM_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" SkeletonTreeItem . h \" # include \" PhysicsEngine / BodySetup . h \" # include \" PhysicsEngine / ShapeElem . h \" # include \" PhysicsEngine / PhysicsAsset . h \" class FSkeletonTreePhysicsShapeItem : public FSkeletonTreeItem { public :)",
    "insertText": "SKELETON_TREE_ITEM_TYPE(FSkeletonTreePhysicsShapeItem, FSkeletonTreeItem) FSkeletonTreePhysicsShapeItem(USkeletalBodySetup* InBodySetup, const FName& InBoneName, int32 InBodySetupIndex, EAggCollisionShape::Type InShapeType, int32 InShapeIndex, const TSharedRef<class ISkeletonTree>& InSkeletonTree)"
  },
  {
    "label": "GenerateWidgetForNameColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateWidgetForNameColumn(TSharedPtr< SHorizontalBox > Box, const TAttribute<FText>& FilterText, FIsSelected InIsSelected)"
  },
  {
    "label": "GenerateWidgetForDataColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForDataColumn(const FName& DataColumnName, FIsSelected InIsSelected)"
  },
  {
    "label": "GetRowItemName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetRowItemName()"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObject()"
  },
  {
    "label": "CanRenameItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameItem()"
  },
  {
    "label": "RequestRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRename()"
  },
  {
    "label": "OnItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemDoubleClicked()"
  },
  {
    "label": "GetBodySetupIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetBodySetupIndex()"
  },
  {
    "label": "GetNameAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNameAsString()"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextCommitted(const FText& InText, ETextCommit::Type InCommitType)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "DECLARE_DELEGATE(FOnRenameRequested)"
  }
]