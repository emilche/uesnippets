[
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "USoundNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundNode"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "AUDIOEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AUDIOEDITOR_API"
  },
  {
    "label": "USoundCueGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundCueGraphSchema"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" CoreMinimal . h \" # include \" ClassViewerModule . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" SSoundCuePalette . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / SubclassOf . h \" # include \" Templates / UnrealTemplate . h \" # include \" SoundCueGraphSchema . generated . h \" class FString ; class UClass ; class UEdGraph ; class UEdGraphNode ; class UEdGraphPin ; class UObject ; class USoundNode ; struct FAssetData ; struct FEdGraphPinType ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "FSoundCueGraphSchemaAction_NewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSoundCueGraphSchemaAction_NewNode() : FEdGraphSchemaAction() , SoundNodeClass(NULL)"
  },
  {
    "label": "FSoundCueGraphSchemaAction_NewNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSoundCueGraphSchemaAction_NewNode(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping) , SoundNodeClass(NULL)"
  },
  {
    "label": "PerformAction()",
    "kind": "Method",
    "detail": "Function (} UEdGraphNode*)",
    "insertText": "PerformAction(class UEdGraph* ParentGraph, UEdGraphPin* FromPin, const FVector2D Location, bool bSelectNewNode = true)"
  },
  {
    "label": "ConnectToSelectedNodes()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ConnectToSelectedNodes(USoundNode* NewNodeclass, UEdGraph* ParentGraph)"
  },
  {
    "label": "FSoundCueGraphSchemaAction_NewFromSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSoundCueGraphSchemaAction_NewFromSelected() : FSoundCueGraphSchemaAction_NewNode()"
  },
  {
    "label": "FSoundCueGraphSchemaAction_NewFromSelected()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSoundCueGraphSchemaAction_NewFromSelected(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FSoundCueGraphSchemaAction_NewNode(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping)"
  },
  {
    "label": "FSoundCueGraphSchemaAction_NewComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSoundCueGraphSchemaAction_NewComment() : FEdGraphSchemaAction()"
  },
  {
    "label": "FSoundCueGraphSchemaAction_NewComment()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSoundCueGraphSchemaAction_NewComment(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping)"
  },
  {
    "label": "FSoundCueGraphSchemaAction_Paste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSoundCueGraphSchemaAction_Paste() : FEdGraphSchemaAction()"
  },
  {
    "label": "FSoundCueGraphSchemaAction_Paste()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FSoundCueGraphSchemaAction_Paste(FText InNodeCategory, FText InMenuDesc, FText InToolTip, const int32 InGrouping) : FEdGraphSchemaAction(MoveTemp(InNodeCategory), MoveTemp(InMenuDesc), MoveTemp(InToolTip), InGrouping)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() bool ConnectionCausesLoop(const UEdGraphPin* InputPin, const UEdGraphPin* OutputPin)"
  },
  {
    "label": "GetPaletteActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPaletteActions(FGraphActionMenuBuilder& ActionMenuBuilder)"
  },
  {
    "label": "TryConnectNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryConnectNodes(const TArray<USoundNode*>& OutputNodes, USoundNode* InputNode)"
  },
  {
    "label": "GetGraphContextActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGraphContextActions(FGraphContextMenuBuilder& ContextMenuBuilder)"
  },
  {
    "label": "GetContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetContextMenuActions(class UToolMenu* Menu, class UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "CreateDefaultNodesForGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultNodesForGraph(UEdGraph& Graph)"
  },
  {
    "label": "CanCreateConnection()",
    "kind": "Method",
    "detail": "Function (const FPinConnectionResponse)",
    "insertText": "CanCreateConnection(const UEdGraphPin* A, const UEdGraphPin* B)"
  },
  {
    "label": "TryCreateConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCreateConnection(UEdGraphPin* A, UEdGraphPin* B)"
  },
  {
    "label": "ShouldHidePinDefaultValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldHidePinDefaultValue(UEdGraphPin* Pin)"
  },
  {
    "label": "GetPinTypeColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetPinTypeColor(const FEdGraphPinType& PinType)"
  },
  {
    "label": "BreakNodeLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakNodeLinks(UEdGraphNode& TargetNode)"
  },
  {
    "label": "BreakPinLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakPinLinks(UEdGraphPin& TargetPin, bool bSendsNodeNotifcation)"
  },
  {
    "label": "GetAssetsGraphHoverMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsGraphHoverMessage(const TArray<FAssetData>& Assets, const UEdGraph* HoverGraph, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "DroppedAssetsOnGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnGraph(const TArray<struct FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraph* Graph)"
  },
  {
    "label": "DroppedAssetsOnNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnNode(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphNode* Node)"
  },
  {
    "label": "GetNodeSelectionCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNodeSelectionCount(const UEdGraph* Graph)"
  },
  {
    "label": "GetCreateCommentAction()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEdGraphSchemaAction>)",
    "insertText": "GetCreateCommentAction()"
  },
  {
    "label": "UpdateSoundNodeList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSoundNodeList(const SSoundCuePalette::FSoundNodeFilterData&)"
  },
  {
    "label": "GetAllSoundNodeActions()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GetAllSoundNodeActions(FGraphActionMenuBuilder& ActionMenuBuilder, bool bShowSelectedActions)"
  },
  {
    "label": "GetCommentAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCommentAction(FGraphActionMenuBuilder& ActionMenuBuilder, const UEdGraph* CurrentGraph = NULL)"
  }
]