[
  {
    "label": "stat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stat"
  },
  {
    "label": "MSFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MSFileSystem"
  },
  {
    "label": "IUnknown",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IUnknown"
  },
  {
    "label": "MSFileSystem()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_MSFILESYSTEM_H # define LLVM_SUPPORT_MSFILESYSTEM_H struct stat ; namespace llvm { namespace sys { namespace fs { class MSFileSystem { public : ~)",
    "insertText": "MSFileSystem()"
  },
  {
    "label": "FindNextFileW()",
    "kind": "Method",
    "detail": "Function (} ; BOOL)",
    "insertText": "FindNextFileW(HANDLE hFindFile, LPWIN32_FIND_DATAW lpFindFileData) throw()"
  },
  {
    "label": "FindFirstFileW()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "FindFirstFileW(LPCWSTR lpFileName, LPWIN32_FIND_DATAW lpFindFileData) throw()"
  },
  {
    "label": "FindClose()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindClose(HANDLE findHandle) throw()"
  },
  {
    "label": "CreateFileW()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "CreateFileW(LPCWSTR lpFileName, DWORD dwDesiredAccess, DWORD dwShareMode, DWORD dwCreationDisposition, DWORD dwFlagsAndAttributes) throw()"
  },
  {
    "label": "SetFileTime()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "SetFileTime(HANDLE hFile, const FILETIME *lpCreationTime, const FILETIME *lpLastAccessTime, const FILETIME *lpLastWriteTime) throw()"
  },
  {
    "label": "GetFileInformationByHandle()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "GetFileInformationByHandle(HANDLE hFile, LPBY_HANDLE_FILE_INFORMATION lpFileInformation) throw()"
  },
  {
    "label": "GetFileType()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "GetFileType(HANDLE hFile) throw()"
  },
  {
    "label": "CreateHardLinkW()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CreateHardLinkW(LPCWSTR lpFileName, LPCWSTR lpExistingFileName) throw()"
  },
  {
    "label": "MoveFileExW()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "MoveFileExW(LPCWSTR lpExistingFileName, LPCWSTR lpNewFileName, DWORD dwFlags) throw()"
  },
  {
    "label": "GetFileAttributesW()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "GetFileAttributesW(LPCWSTR lpFileName) throw()"
  },
  {
    "label": "CloseHandle()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CloseHandle(HANDLE hObject) throw()"
  },
  {
    "label": "DeleteFileW()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "DeleteFileW(LPCWSTR lpFileName) throw()"
  },
  {
    "label": "RemoveDirectoryW()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "RemoveDirectoryW(LPCWSTR lpFileName) throw()"
  },
  {
    "label": "CreateDirectoryW()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "CreateDirectoryW(LPCWSTR lpPathName) throw()"
  },
  {
    "label": "GetCurrentDirectoryW()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "GetCurrentDirectoryW(DWORD nBufferLength, LPWSTR lpBuffer) throw()"
  },
  {
    "label": "GetMainModuleFileNameW()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "GetMainModuleFileNameW(LPWSTR lpFilename, DWORD nSize) throw()"
  },
  {
    "label": "GetTempPathW()",
    "kind": "Method",
    "detail": "Function (DWORD)",
    "insertText": "GetTempPathW(DWORD nBufferLength, LPWSTR lpBuffer) throw()"
  },
  {
    "label": "CreateSymbolicLinkW()",
    "kind": "Method",
    "detail": "Function (BOOLEAN)",
    "insertText": "CreateSymbolicLinkW(LPCWSTR lpSymlinkFileName, LPCWSTR lpTargetFileName, DWORD dwFlags) throw()"
  },
  {
    "label": "SupportsCreateSymbolicLink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsCreateSymbolicLink() throw()"
  },
  {
    "label": "ReadFile()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "ReadFile(HANDLE hFile, LPVOID lpBuffer, DWORD nNumberOfBytesToRead, LPDWORD lpNumberOfBytesRead) throw()"
  },
  {
    "label": "CreateFileMappingW()",
    "kind": "Method",
    "detail": "Function (HANDLE)",
    "insertText": "CreateFileMappingW(HANDLE hFile, DWORD flProtect, DWORD dwMaximumSizeHigh, DWORD dwMaximumSizeLow) throw()"
  },
  {
    "label": "MapViewOfFile()",
    "kind": "Method",
    "detail": "Function (LPVOID)",
    "insertText": "MapViewOfFile(HANDLE hFileMappingObject, DWORD dwDesiredAccess, DWORD dwFileOffsetHigh, DWORD dwFileOffsetLow, SIZE_T dwNumberOfBytesToMap) throw()"
  },
  {
    "label": "UnmapViewOfFile()",
    "kind": "Method",
    "detail": "Function (BOOL)",
    "insertText": "UnmapViewOfFile(LPCVOID lpBaseAddress) throw()"
  },
  {
    "label": "FileDescriptorIsDisplayed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FileDescriptorIsDisplayed(int fd) throw()"
  },
  {
    "label": "GetColumnCount()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetColumnCount(DWORD nStdHandle) throw()"
  },
  {
    "label": "GetConsoleOutputTextAttributes()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetConsoleOutputTextAttributes() throw()"
  },
  {
    "label": "SetConsoleOutputTextAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConsoleOutputTextAttributes(unsigned) throw()"
  },
  {
    "label": "ResetConsoleOutputTextAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetConsoleOutputTextAttributes() throw()"
  },
  {
    "label": "open_osfhandle()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "open_osfhandle(intptr_t osfhandle, int flags) throw()"
  },
  {
    "label": "get_osfhandle()",
    "kind": "Method",
    "detail": "Function (intptr_t)",
    "insertText": "get_osfhandle(int fd) throw()"
  },
  {
    "label": "close()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "close(int fd) throw()"
  },
  {
    "label": "lseek()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "lseek(int fd, long offset, int origin) throw()"
  },
  {
    "label": "setmode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "setmode(int fd, int mode) throw()"
  },
  {
    "label": "resize_file()",
    "kind": "Method",
    "detail": "Function (errno_t)",
    "insertText": "resize_file(LPCWSTR path, uint64_t size) throw()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Read(int fd, void *buffer, unsigned int count) throw()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Write(int fd, const void *buffer, unsigned int count) throw()"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (# ifndef _WIN32 int)",
    "insertText": "Open(const char *lpFileName, int flags, mode_t mode = 0) throw()"
  },
  {
    "label": "Stat()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Stat(const char *lpFileName, struct stat *Status) throw()"
  },
  {
    "label": "Fstat()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Fstat(int FD, struct stat *Status) throw()"
  },
  {
    "label": "CreateMSFileSystemForDisk()",
    "kind": "Method",
    "detail": "Function (# endif } ; } } } HRESULT)",
    "insertText": "CreateMSFileSystemForDisk(::llvm::sys::fs::MSFileSystem **pResult) throw()"
  },
  {
    "label": "CreateMSFileSystemForIface()",
    "kind": "Method",
    "detail": "Function (struct IUnknown ; HRESULT)",
    "insertText": "CreateMSFileSystemForIface(IUnknown *pService, ::llvm::sys::fs::MSFileSystem **pResult) throw()"
  }
]