[
  {
    "label": "FClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilter"
  },
  {
    "label": "FClassViewerFilterOption",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterOption"
  },
  {
    "label": "FClassViewerNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerNode"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FTextFilterExpressionEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFilterExpressionEvaluator"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FDirectoryPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirectoryPath"
  },
  {
    "label": "FFocusEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFocusEvent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSoftClassPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftClassPath"
  },
  {
    "label": "SClassViewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SClassViewer"
  },
  {
    "label": "would",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "would"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "viewer"
  },
  {
    "label": "browser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "browser"
  },
  {
    "label": "count",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "count"
  },
  {
    "label": "filter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "filter"
  },
  {
    "label": "filter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "filter"
  },
  {
    "label": "paths",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "paths"
  },
  {
    "label": "dynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dynamic"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "picking",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "picking"
  },
  {
    "label": "currently",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "currently"
  },
  {
    "label": "currently",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "currently"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FClassViewerInitializationOptions& InInitOptions)"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetContent()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "RequestPopulateClassHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestPopulateClassHierarchy()"
  },
  {
    "label": "DestroyClassHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyClassHierarchy()"
  },
  {
    "label": "OnGetChildrenForClassViewerTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForClassViewerTree( TSharedPtr<FClassViewerNode> InParent, TArray< TSharedPtr< FClassViewerNode > >& OutChildren )"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged( const FText& InFilterText )"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnClassViewerSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassViewerSelectionChanged( TSharedPtr<FClassViewerNode> Item, ESelectInfo::Type SelectInfo )"
  },
  {
    "label": "OnClassViewerExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassViewerExpansionChanged(TSharedPtr<FClassViewerNode> Item, bool bExpanded)"
  },
  {
    "label": "MenuActorsOnly_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MenuActorsOnly_Execute()"
  },
  {
    "label": "MenuPlaceableOnly_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MenuPlaceableOnly_Execute()"
  },
  {
    "label": "MenuBlueprintBasesOnly_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MenuBlueprintBasesOnly_Execute()"
  },
  {
    "label": "FillFilterEntries()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "FillFilterEntries()"
  },
  {
    "label": "SetAllExpansionStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllExpansionStates(bool bInExpansionState)"
  },
  {
    "label": "SetAllExpansionStates_Helper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllExpansionStates_Helper(TSharedPtr< FClassViewerNode > InNode, bool bInExpansionState)"
  },
  {
    "label": "ToggleExpansionState_Helper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpansionState_Helper(TSharedPtr< FClassViewerNode > InNode)"
  },
  {
    "label": "OnOpenBlueprintTool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenBlueprintTool()"
  },
  {
    "label": "FindInContentBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindInContentBrowser()"
  },
  {
    "label": "ExpandFilteredInNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpandFilteredInNodes(TSharedPtr<FClassViewerNode> InNode)"
  },
  {
    "label": "MapExpansionStatesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapExpansionStatesInTree( TSharedPtr<FClassViewerNode> InItem )"
  },
  {
    "label": "SetExpansionStatesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpansionStatesInTree( TSharedPtr<FClassViewerNode> InItem )"
  },
  {
    "label": "Populate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Populate()"
  },
  {
    "label": "CreateNoneOption()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FClassViewerNode>)",
    "insertText": "CreateNoneOption()"
  },
  {
    "label": "ExpandRootNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandRootNodes()"
  },
  {
    "label": "GetViewButtonContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetViewButtonContent()"
  },
  {
    "label": "SetCurrentDeveloperViewType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentDeveloperViewType(EClassViewerDeveloperType NewType)"
  },
  {
    "label": "CreateCurrentDeveloperView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCurrentDeveloperView()"
  },
  {
    "label": "ToggleShowInternalClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowInternalClasses()"
  },
  {
    "label": "ToggleCustomFilterOption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleCustomFilterOption(TSharedRef<FClassViewerFilterOption> FilterOption)"
  },
  {
    "label": "CountTreeItems()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CountTreeItems(FClassViewerNode* Node)"
  },
  {
    "label": "HandleSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingChanged(FName PropertyName)"
  },
  {
    "label": "GetInternalOnlyClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInternalOnlyClasses(TArray<FSoftClassPath>& Classes)"
  },
  {
    "label": "GetInternalOnlyPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInternalOnlyPaths(TArray<FDirectoryPath>& Paths)"
  }
]