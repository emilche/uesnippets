[
  {
    "label": "TIsFixedWidthCharEncoding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsFixedWidthCharEncoding"
  },
  {
    "label": "IsFixedWidthEncodingImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<type_traits> # include \" Traits / IsCharType . h \" # ifndef PLATFORM_TCHAR_IS_CHAR16 # error \" Traits / IsFixedWidthCharEncoding . h should be included after platform headers \" # endif namespace UE::Core::Private { template<Encoding> bool)",
    "insertText": "IsFixedWidthEncodingImpl()"
  },
  {
    "label": "Encoding()",
    "kind": "Method",
    "detail": "Function (bool Value = UE::Core::Private::IsFixedWidthEncodingImpl<std::remove_cv_t<)",
    "insertText": "Encoding()"
  }
]