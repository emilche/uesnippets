[
  {
    "label": "ExecutablePatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExecutablePatcher"
  },
  {
    "label": "ExecutablePatcher()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" LC_Executable . h \" # include \" LC_ProcessTypes . h \" class ExecutablePatcher { public : # if LC_64_BIT const size_t INJECTED_CODE_SIZE = 3 u ; # else const size_t INJECTED_CODE_SIZE = 5 u ; # endif)",
    "insertText": "ExecutablePatcher(executable::Image* image, executable::ImageSectionDB* imageSections)"
  },
  {
    "label": "ExecutablePatcher()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutablePatcher(const uint8_t* entryPointCode)"
  },
  {
    "label": "DisableEntryPointInImage()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "DisableEntryPointInImage(executable::Image* image, executable::ImageSectionDB* imageSections)"
  },
  {
    "label": "DisableEntryPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableEntryPoint(Process::Handle processHandle, void* moduleBase, uint32_t entryPointRva)"
  },
  {
    "label": "RestoreEntryPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreEntryPoint(Process::Handle processHandle, void* moduleBase, uint32_t entryPointRva)"
  },
  {
    "label": "GetEntryPointCode()",
    "kind": "Method",
    "detail": "Function (const uint8_t*)",
    "insertText": "GetEntryPointCode(void)"
  }
]