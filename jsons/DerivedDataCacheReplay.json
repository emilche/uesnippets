[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCbObjectView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbObjectView"
  },
  {
    "label": "FCacheKeyFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheKeyFilter"
  },
  {
    "label": "FCacheMethodFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheMethodFilter"
  },
  {
    "label": "ILegacyCacheStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILegacyCacheStore"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCacheReplayReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheReplayReader"
  },
  {
    "label": "FState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FState"
  },
  {
    "label": "FCacheReplayReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / PimplPtr . h \" # define class FArchive ; class FCbObjectView ; namespace UE::DerivedData { class FCacheKeyFilter ; } namespace UE::DerivedData { class FCacheMethodFilter ; } namespace UE::DerivedData { class ILegacyCacheStore ; } namespace UE::DerivedData { enum class ECacheMethod : uint8 ; } namespace UE::DerivedData { enum class ECachePolicy : uint32 ; } namespace UE::DerivedData { enum class EPriority : uint8 ; } namespace UE::DerivedData { class FCacheReplayReader { public : uint64 DefaultScratchSize = 1 0 2 4 ;)",
    "insertText": "FCacheReplayReader(ILegacyCacheStore* TargetCache)"
  },
  {
    "label": "SetKeyFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyFilter(FCacheKeyFilter KeyFilter)"
  },
  {
    "label": "SetMethodFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMethodFilter(FCacheMethodFilter MethodFilter)"
  },
  {
    "label": "SetPolicyTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPolicyTransform(ECachePolicy AddFlags, ECachePolicy RemoveFlags)"
  },
  {
    "label": "SetPriorityOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPriorityOverride(EPriority Priority)"
  },
  {
    "label": "ReadFromFileAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadFromFileAsync(const TCHAR* ReplayPath, uint64 ScratchSize = DefaultScratchSize)"
  },
  {
    "label": "ReadFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadFromFile(const TCHAR* ReplayPath, uint64 ScratchSize = DefaultScratchSize)"
  },
  {
    "label": "ReadFromArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadFromArchive(FArchive& ReplayAr, uint64 ScratchSize = DefaultScratchSize)"
  },
  {
    "label": "ReadFromObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadFromObject(FCbObjectView Object)"
  }
]