[
  {
    "label": "FD3D12View",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12View"
  },
  {
    "label": "FD3D12DescriptorHeap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12DescriptorHeap"
  },
  {
    "label": "FD3D12OfflineDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12OfflineDescriptor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FD3D12DescriptorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DescriptorManager"
  },
  {
    "label": "FD3D12OnlineDescriptorBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12OnlineDescriptorBlock"
  },
  {
    "label": "FD3D12OnlineDescriptorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12OnlineDescriptorManager"
  },
  {
    "label": "FD3D12OfflineHeapFreeRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12OfflineHeapFreeRange"
  },
  {
    "label": "FD3D12OfflineHeapEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12OfflineHeapEntry"
  },
  {
    "label": "FD3D12OfflineDescriptorManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12OfflineDescriptorManager"
  },
  {
    "label": "FD3D12DescriptorHeapManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12DescriptorHeapManager"
  },
  {
    "label": "FPooledHeap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPooledHeap"
  },
  {
    "label": "Translate()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RHIDescriptorAllocator . h \" # include \" Containers / List . h \" # include \" Containers / Queue . h \" # include \" D3D12RHI . h \" # include \" D3D12RHICommon . h \" # include \" MultiGPU . h \" # include \" RHIPipeline . h \" # include \" Templates / RefCounting . h \" class FD3D12View ; struct FD3D12DescriptorHeap ; struct FD3D12OfflineDescriptor ; D3D12_DESCRIPTOR_HEAP_TYPE)",
    "insertText": "Translate(ERHIDescriptorHeapType InHeapType)"
  },
  {
    "label": "checkNoEntry()",
    "kind": "Method",
    "detail": "Function (default :)",
    "insertText": "checkNoEntry()"
  },
  {
    "label": "CopyDescriptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDescriptor(FD3D12Device* Device, FD3D12DescriptorHeap* TargetHeap, FRHIDescriptorHandle DstHandle, D3D12_CPU_DESCRIPTOR_HANDLE SrcCpuHandle)"
  },
  {
    "label": "CopyDescriptors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDescriptors(FD3D12Device* Device, FD3D12DescriptorHeap* TargetHeap, FD3D12DescriptorHeap* SourceHeap, uint32 FirstDescriptor, uint32 NumDescriptors)"
  },
  {
    "label": "CopyDescriptors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDescriptors(FD3D12Device* Device, FD3D12DescriptorHeap* TargetHeap, FD3D12DescriptorHeap* SourceHeap, TConstArrayView<FRHIDescriptorHandle> Handles)"
  },
  {
    "label": "CopyDescriptors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDescriptors(FD3D12Device* Device, FD3D12DescriptorHeap* TargetHeap, TConstArrayView<FRHIDescriptorHandle> DstHandles, TConstArrayView<FD3D12OfflineDescriptor> SrcOfflineDescriptors)"
  },
  {
    "label": "CreateOfflineCopy()",
    "kind": "Method",
    "detail": "Function (FD3D12OfflineDescriptor)",
    "insertText": "CreateOfflineCopy(FD3D12Device* Device, D3D12_CPU_DESCRIPTOR_HANDLE InDescriptor, ERHIDescriptorHeapType InType)"
  },
  {
    "label": "CreateOfflineCopy()",
    "kind": "Method",
    "detail": "Function (FD3D12OfflineDescriptor)",
    "insertText": "CreateOfflineCopy(FD3D12Device* Device, FD3D12DescriptorHeap* InHeap, FRHIDescriptorHandle InHandle)"
  },
  {
    "label": "FreeOfflineCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeOfflineCopy(FD3D12Device* Device, FD3D12OfflineDescriptor& InDescriptor, ERHIDescriptorHeapType InType)"
  },
  {
    "label": "FD3D12DescriptorHeap()",
    "kind": "Method",
    "detail": "Function (} struct FD3D12DescriptorHeap : public FD3D12DeviceChild,public FThreadSafeRefCountedObject { public :)",
    "insertText": "FD3D12DescriptorHeap()"
  },
  {
    "label": "FD3D12DescriptorHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FD3D12DescriptorHeap(FD3D12Device* InDevice, TRefCountPtr<ID3D12DescriptorHeap>&& InHeap, uint32 InNumDescriptors, ERHIDescriptorHeapType InType, ED3D12DescriptorHeapFlags InFlags, bool bInIsGlobal)"
  },
  {
    "label": "FD3D12DescriptorHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FD3D12DescriptorHeap(FD3D12DescriptorHeap* SubAllocateSourceHeap, uint32 InOffset, uint32 InNumDescriptors)"
  },
  {
    "label": "GetHeap()",
    "kind": "Method",
    "detail": "Function (ID3D12DescriptorHeap*)",
    "insertText": "GetHeap()"
  },
  {
    "label": "GetGPUSlotHandle()",
    "kind": "Method",
    "detail": "Function (} D3D12_GPU_DESCRIPTOR_HANDLE)",
    "insertText": "GetGPUSlotHandle(uint32 Slot)"
  },
  {
    "label": "CanBePooled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanBePooled()"
  },
  {
    "label": "FD3D12DescriptorManager()",
    "kind": "Method",
    "detail": "Function (} private : TRefCountPtr<ID3D12DescriptorHeap> Heap ; const CD3DX12_CPU_DESCRIPTOR_HANDLE CpuBase ; const CD3DX12_GPU_DESCRIPTOR_HANDLE GpuBase ; const uint32 Offset = 0 ; const uint32 NumDescriptors ; const uint32 DescriptorSize ; const ERHIDescriptorHeapType Type ; const ED3D12DescriptorHeapFlags Flags ; const bool bIsGlobal ; const bool bIsSuballocation ; } ; using FD3D12DescriptorHeapPtr = TRefCountPtr<FD3D12DescriptorHeap> ; class FD3D12DescriptorManager : public FD3D12DeviceChild,public FRHIHeapDescriptorAllocator { public :)",
    "insertText": "FD3D12DescriptorManager()"
  },
  {
    "label": "FD3D12DescriptorManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FD3D12DescriptorManager(FD3D12Device* Device, FD3D12DescriptorHeap* InHeap, TConstArrayView<TStatId> InStats)"
  },
  {
    "label": "HandlesAllocationWithFlags()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HandlesAllocationWithFlags(ERHIDescriptorHeapType InHeapType, ED3D12DescriptorHeapFlags InHeapFlags)"
  },
  {
    "label": "IsHeapAChild()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsHeapAChild(const FD3D12DescriptorHeap* InHeap)"
  },
  {
    "label": "FD3D12OnlineDescriptorBlock()",
    "kind": "Method",
    "detail": "Function (} private : FD3D12DescriptorHeapPtr Heap ; } ; struct FD3D12OnlineDescriptorBlock {)",
    "insertText": "FD3D12OnlineDescriptorBlock()"
  },
  {
    "label": "FD3D12OnlineDescriptorBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FD3D12OnlineDescriptorBlock(uint32 InBaseSlot, uint32 InSize) : BaseSlot(InBaseSlot) , Size(InSize)"
  },
  {
    "label": "FD3D12OnlineDescriptorManager()",
    "kind": "Method",
    "detail": "Function (} uint32 BaseSlot ; uint32 Size ; uint32 SizeUsed = 0 ; } ; class FD3D12OnlineDescriptorManager : public FD3D12DeviceChild { public :)",
    "insertText": "FD3D12OnlineDescriptorManager(FD3D12Device* Device)"
  },
  {
    "label": "FD3D12OnlineDescriptorManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FD3D12OnlineDescriptorManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InTotalSize, uint32 InBlockSize, bool bBindlessResources)"
  },
  {
    "label": "CleanupResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupResources()"
  },
  {
    "label": "AllocateHeapBlock()",
    "kind": "Method",
    "detail": "Function (FD3D12OnlineDescriptorBlock*)",
    "insertText": "AllocateHeapBlock()"
  },
  {
    "label": "FreeHeapBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeHeapBlock(FD3D12OnlineDescriptorBlock* InHeapBlock)"
  },
  {
    "label": "GetHeap()",
    "kind": "Method",
    "detail": "Function (ID3D12DescriptorHeap*)",
    "insertText": "GetHeap(ERHIPipeline Pipeline)"
  },
  {
    "label": "GetDescriptorHeap()",
    "kind": "Method",
    "detail": "Function (} FD3D12DescriptorHeap*)",
    "insertText": "GetDescriptorHeap(ERHIPipeline Pipeline)"
  },
  {
    "label": "GetCPUSlotHandle()",
    "kind": "Method",
    "detail": "Function (} D3D12_CPU_DESCRIPTOR_HANDLE)",
    "insertText": "GetCPUSlotHandle(ERHIPipeline Pipeline, FD3D12OnlineDescriptorBlock* InBlock)"
  },
  {
    "label": "GetGPUSlotHandle()",
    "kind": "Method",
    "detail": "Function (} D3D12_GPU_DESCRIPTOR_HANDLE)",
    "insertText": "GetGPUSlotHandle(ERHIPipeline Pipeline, FD3D12OnlineDescriptorBlock* InBlock)"
  },
  {
    "label": "Recycle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Recycle(FD3D12OnlineDescriptorBlock* Block)"
  },
  {
    "label": "FD3D12OfflineHeapEntry()",
    "kind": "Method",
    "detail": "Function (private : TRHIPipelineArray<FD3D12DescriptorHeapPtr> Heaps ; TQueue<FD3D12OnlineDescriptorBlock*> FreeBlocks ; FCriticalSection CriticalSection ; } ; struct FD3D12OfflineHeapFreeRange { size_t Start ; size_t End ; } ; struct FD3D12OfflineHeapEntry {)",
    "insertText": "FD3D12OfflineHeapEntry(FD3D12DescriptorHeap* InHeap, const D3D12_CPU_DESCRIPTOR_HANDLE& InHeapBase, size_t InSize) : Heap(InHeap)"
  },
  {
    "label": "AddTail()",
    "kind": "Method",
    "detail": "Function (FreeList .)",
    "insertText": "AddTail({ InHeapBase.ptr, InHeapBase.ptr + InSize })"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} TRefCountPtr<FD3D12DescriptorHeap> Heap ; TDoubleLinkedList<FD3D12OfflineHeapFreeRange> FreeList ; } ; struct FD3D12OfflineDescriptor : public D3D12_CPU_DESCRIPTOR_HANDLE { public : operator)",
    "insertText": "bool()"
  },
  {
    "label": "IncrementVersion()",
    "kind": "Method",
    "detail": "Function (ptr = 0 ; } void)",
    "insertText": "IncrementVersion()"
  },
  {
    "label": "GetVersion()",
    "kind": "Method",
    "detail": "Function (+ + Version ; } uint32)",
    "insertText": "GetVersion()"
  },
  {
    "label": "FD3D12OfflineDescriptorManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FD3D12OfflineDescriptorManager(FD3D12Device* InDevice, ERHIDescriptorHeapType InHeapType)"
  },
  {
    "label": "FD3D12OfflineDescriptorManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FD3D12OfflineDescriptorManager()"
  },
  {
    "label": "GetHeapType()",
    "kind": "Method",
    "detail": "Function (ERHIDescriptorHeapType)",
    "insertText": "GetHeapType()"
  },
  {
    "label": "FreeHeapSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeHeapSlot(FD3D12OfflineDescriptor& Descriptor)"
  },
  {
    "label": "AllocateHeap()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AllocateHeap()"
  },
  {
    "label": "FD3D12DescriptorHeapManager()",
    "kind": "Method",
    "detail": "Function (TArray<FD3D12OfflineHeapEntry> Heaps ; TDoubleLinkedList<uint32> FreeHeaps ; ERHIDescriptorHeapType HeapType ; uint32 NumDescriptorsPerHeap { } ; uint32 DescriptorSize { } ; FCriticalSection CriticalSection ; } ; class FD3D12DescriptorHeapManager : public FD3D12DeviceChild { public :)",
    "insertText": "FD3D12DescriptorHeapManager(FD3D12Device* InDevice)"
  },
  {
    "label": "FD3D12DescriptorHeapManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FD3D12DescriptorHeapManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InNumGlobalResourceDescriptors, uint32 InNumGlobalSamplerDescriptors)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "AllocateIndependentHeap()",
    "kind": "Method",
    "detail": "Function (FD3D12DescriptorHeap*)",
    "insertText": "AllocateIndependentHeap(const TCHAR* InDebugName, ERHIDescriptorHeapType InHeapType, uint32 InNumDescriptors, ED3D12DescriptorHeapFlags InHeapFlags)"
  },
  {
    "label": "AllocateHeap()",
    "kind": "Method",
    "detail": "Function (FD3D12DescriptorHeap*)",
    "insertText": "AllocateHeap(const TCHAR* InDebugName, ERHIDescriptorHeapType InHeapType, uint32 InNumDescriptors, ED3D12DescriptorHeapFlags InHeapFlags)"
  },
  {
    "label": "DeferredFreeHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredFreeHeap(FD3D12DescriptorHeap* InHeap)"
  },
  {
    "label": "ImmediateFreeHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImmediateFreeHeap(FD3D12DescriptorHeap* InHeap)"
  },
  {
    "label": "AddHeapToPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHeapToPool(TRefCountPtr<ID3D12DescriptorHeap>&& InHeap, ERHIDescriptorHeapType InType, uint32 InNumDescriptors, ED3D12DescriptorHeapFlags InFlags)"
  },
  {
    "label": "AcquirePooledHeap()",
    "kind": "Method",
    "detail": "Function (private : TRefCountPtr<ID3D12DescriptorHeap>)",
    "insertText": "AcquirePooledHeap(ERHIDescriptorHeapType InType, uint32 InNumDescriptors, ED3D12DescriptorHeapFlags InFlags)"
  },
  {
    "label": "FPooledHeap()",
    "kind": "Method",
    "detail": "Function (TArray<FD3D12DescriptorManager> GlobalHeaps ; struct FPooledHeap {)",
    "insertText": "FPooledHeap(TRefCountPtr<ID3D12DescriptorHeap>&& InHeap, ERHIDescriptorHeapType InType, uint32 InNumDescriptors, ED3D12DescriptorHeapFlags InFlags) : Heap(Forward<TRefCountPtr<ID3D12DescriptorHeap>>(InHeap)) , NumDescriptors(InNumDescriptors) , Type(InType) , Flags(InFlags)"
  }
]