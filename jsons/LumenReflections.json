[
  {
    "label": "FLumenCardTracingInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardTracingInputs"
  },
  {
    "label": "FLumenCardTracingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardTracingParameters"
  },
  {
    "label": "FLumenMeshSDFGridParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenMeshSDFGridParameters"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FSceneTextureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneTextureParameters"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FViewFamilyInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewFamilyInfo"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FLumenSceneFrameTemporaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenSceneFrameTemporaries"
  },
  {
    "label": "FSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTextures"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRadianceCacheInterpolationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheInterpolationParameters"
  },
  {
    "label": "ETraceCompactionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETraceCompactionMode"
  },
  {
    "label": "FLumenReflectionTracingParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenReflectionTracingParameters"
  },
  {
    "label": "FLumenReflectionTileParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenReflectionTileParameters"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" BlueNoise . h \" # include \" ShaderParameterMacros . h \" class FLumenCardTracingInputs ; class FLumenCardTracingParameters ; class FLumenMeshSDFGridParameters ; class FRDGBuilder ; class FScene ; class FSceneTextureParameters ; class FSceneView ; class FSceneViewFamily ; class FViewFamilyInfo ; class FViewInfo ; struct FLumenSceneFrameTemporaries ; struct FSceneTextures ; enum class EDiffuseIndirectMethod ; enum class ERDGPassFlags : uint16 ; namespace LumenRadianceCache { class FRadianceCacheInterpolationParameters ; } namespace LumenReflections {)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FCompositeParameters, ) SHADER_PARAMETER(float, MaxRoughnessToTrace) SHADER_PARAMETER(float, MaxRoughnessToTraceForFoliage) SHADER_PARAMETER(float, InvRoughnessFadeLength) END_SHADER_PARAMETER_STRUCT() void SetupCompositeParameters(const FViewInfo& View, LumenReflections::FCompositeParameters& OutParameters)"
  },
  {
    "label": "UseAsyncCompute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseAsyncCompute(const FViewFamilyInfo& ViewFamily)"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FLumenReflectionsVisualizeTracesParameters, ) SHADER_PARAMETER_RDG_BUFFER_UAV(RWBuffer<float4>, RWVisualizeTracesData) SHADER_PARAMETER(uint32, VisualizeTraceCoherency) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FLumenReflectionTracingParameters, ) SHADER_PARAMETER_STRUCT_INCLUDE(FLumenReflectionsVisualizeTracesParameters, VisualizeTracesParameters) SHADER_PARAMETER(uint32, ReflectionDownsampleFactor) SHADER_PARAMETER(FIntPoint, ReflectionTracingViewSize) SHADER_PARAMETER(FIntPoint, ReflectionTracingBufferSize) SHADER_PARAMETER(FVector2f, ReflectionTracingBufferInvSize) SHADER_PARAMETER(float, MaxRayIntensity) SHADER_PARAMETER(float, ReflectionSmoothBias) SHADER_PARAMETER(uint32, ReflectionPass) SHADER_PARAMETER(uint32, UseJitter) SHADER_PARAMETER(uint32, UseHighResSurface) SHADER_PARAMETER(uint32, MaxReflectionBounces) SHADER_PARAMETER(uint32, MaxRefractionBounces) SHADER_PARAMETER(uint32, ReflectionsStateFrameIndex) SHADER_PARAMETER(uint32, ReflectionsStateFrameIndexMod8) SHADER_PARAMETER(uint32, ReflectionsRayDirectionFrameIndex) SHADER_PARAMETER(float, NearFieldMaxTraceDistance) SHADER_PARAMETER(float, NearFieldMaxTraceDistanceDitherScale) SHADER_PARAMETER(float, NearFieldSceneRadius) SHADER_PARAMETER(float, FarFieldMaxTraceDistance) SHADER_PARAMETER_STRUCT_INCLUDE(LumenReflections::FCompositeParameters, ReflectionsCompositeParameters) SHADER_PARAMETER_TEXTURE(Texture2D, PreIntegratedGF) SHADER_PARAMETER_SAMPLER(SamplerState, PreIntegratedGFSampler) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<float4>, RayBuffer) SHADER_PARAMETER_RDG_TEXTURE(Texture2D<uint>, RayTraceDistance) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, DownsampledDepth) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, TraceHit) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, TraceRadiance) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, TraceMaterialId) SHADER_PARAMETER_RDG_TEXTURE(Texture2D, TraceBookmark) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2DArray<float3>, RWTraceRadiance) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2DArray<float>, RWTraceHit) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2DArray<uint>, RWTraceMaterialId) SHADER_PARAMETER_RDG_TEXTURE_UAV(RWTexture2DArray<uint2>, RWTraceBookmark) SHADER_PARAMETER_STRUCT_REF(FBlueNoise, BlueNoise) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FLumenReflectionTileParameters, ) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, ReflectionClearTileData) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, ReflectionResolveTileData) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, ReflectionTracingTileData) RDG_BUFFER_ACCESS(ClearIndirectArgs, ERHIAccess::IndirectArgs) RDG_BUFFER_ACCESS(ResolveIndirectArgs, ERHIAccess::IndirectArgs) RDG_BUFFER_ACCESS(TracingIndirectArgs, ERHIAccess::IndirectArgs) END_SHADER_PARAMETER_STRUCT() BEGIN_SHADER_PARAMETER_STRUCT(FCompactedReflectionTraceParameters, ) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, CompactedTraceTexelAllocator) SHADER_PARAMETER_RDG_BUFFER_SRV(Buffer<uint>, CompactedTraceTexelData) RDG_BUFFER_ACCESS(IndirectArgs, ERHIAccess::IndirectArgs) RDG_BUFFER_ACCESS(RayTraceDispatchIndirectArgs, ERHIAccess::IndirectArgs | ERHIAccess::SRVCompute) END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "UseFarField()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseFarField(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "UseHitLighting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseHitLighting(const FViewInfo& View, EDiffuseIndirectMethod DiffuseIndirectMethod)"
  },
  {
    "label": "UseTranslucentRayTracing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseTranslucentRayTracing(const FViewInfo& View)"
  },
  {
    "label": "IsHitLightingForceEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHitLightingForceEnabled(const FViewInfo& View, EDiffuseIndirectMethod DiffuseIndirectMethod)"
  },
  {
    "label": "UseSurfaceCacheFeedback()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseSurfaceCacheFeedback()"
  },
  {
    "label": "UseScreenTraces()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseScreenTraces(const FViewInfo& View)"
  },
  {
    "label": "UseDistantScreenTraces()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseDistantScreenTraces(const FViewInfo& View)"
  },
  {
    "label": "GetSampleSceneColorNormalTreshold()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSampleSceneColorNormalTreshold()"
  },
  {
    "label": "GetMaxReflectionBounces()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMaxReflectionBounces(const FViewInfo& View)"
  },
  {
    "label": "GetMaxRefractionBounces()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMaxRefractionBounces(const FViewInfo& View)"
  },
  {
    "label": "CompactTraces()",
    "kind": "Method",
    "detail": "Function (enum ETraceCompactionMode { Default,FarField,HitLighting,MAX } ; FCompactedReflectionTraceParameters)",
    "insertText": "CompactTraces(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FLumenCardTracingParameters& TracingParameters, const FLumenReflectionTracingParameters& ReflectionTracingParameters, const FLumenReflectionTileParameters& ReflectionTileParameters, bool bCullByDistanceFromCamera, float CompactionTracingEndDistanceFromCamera, float CompactionMaxTraceDistance, ERDGPassFlags ComputePassFlags, ETraceCompactionMode TraceCompactionMode = ETraceCompactionMode::Default, bool bSortByMaterial = false)"
  },
  {
    "label": "TraceReflections()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "TraceReflections(FRDGBuilder& GraphBuilder, const FScene* Scene, const FViewInfo& View, const FLumenSceneFrameTemporaries& FrameTemporaries, bool bTraceMeshObjects, const FSceneTextures& SceneTextures, const FLumenReflectionTracingParameters& ReflectionTracingParameters, const FLumenReflectionTileParameters& ReflectionTileParameters, const FLumenMeshSDFGridParameters& InMeshSDFGridParameters, bool bUseRadianceCache, EDiffuseIndirectMethod DiffuseIndirectMethod, const LumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters, ERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderLumenHardwareRayTracingReflections()",
    "kind": "Method",
    "detail": "Function (class FLumenReflectionTracingParameters ; class FLumenReflectionTileParameters ; void)",
    "insertText": "RenderLumenHardwareRayTracingReflections(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures, const FSceneTextureParameters& SceneTextureParameters, const FScene* Scene, const FViewInfo& View, const FLumenCardTracingParameters& TracingParameters, const FLumenReflectionTracingParameters& ReflectionTracingParameters, const FLumenReflectionTileParameters& ReflectionTileParameters, float MaxTraceDistance, bool bUseRadianceCache, const LumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters, bool bSampleSceneColorAtHit, EDiffuseIndirectMethod DiffuseIndirectMethod, ERDGPassFlags ComputePassFlags)"
  }
]