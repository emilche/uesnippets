[
  {
    "label": "FProfilerServiceCapture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceCapture"
  },
  {
    "label": "FProfilerServiceData2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceData2"
  },
  {
    "label": "FProfilerServiceFileChunk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceFileChunk"
  },
  {
    "label": "FProfilerServicePong",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServicePong"
  },
  {
    "label": "FProfilerServicePreview",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServicePreview"
  },
  {
    "label": "FProfilerServiceRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceRequest"
  },
  {
    "label": "FProfilerServiceSubscribe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceSubscribe"
  },
  {
    "label": "FProfilerServiceUnsubscribe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceUnsubscribe"
  },
  {
    "label": "FFileTransferRunnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFileTransferRunnable"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "FClientData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClientData"
  },
  {
    "label": "FProfilerServiceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerServiceManager"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "EnqueueFileToSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueFileToSend(const FString& StatFilename, const FMessageAddress& RecipientAddress, const FGuid& ServiceInstanceId)"
  },
  {
    "label": "EnqueueFileChunkToSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueFileChunkToSend(FProfilerServiceFileChunk* FileChunk, bool bTriggerWorkEvent = false)"
  },
  {
    "label": "PrepareFileForSending()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareFileForSending(FProfilerServiceFileChunk*& FileChunk)"
  },
  {
    "label": "FinalizeFileSending()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeFileSending(const FString& Filename)"
  },
  {
    "label": "AbortFileSending()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbortFileSending(const FMessageAddress& Recipient)"
  },
  {
    "label": "DeleteFileReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteFileReader(FReaderAndAddress& ReaderAndAddress)"
  },
  {
    "label": "ReadAndSetHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadAndSetHash(FProfilerServiceFileChunk* FileChunk, const FProfilerFileChunkHeader& FileChunkHeader, FArchive* Reader)"
  },
  {
    "label": "CreateSharedServiceManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IProfilerServiceManager>)",
    "insertText": "CreateSharedServiceManager()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "SetPreviewState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewState(const FMessageAddress& ClientAddress, const bool bRequestedPreviewState)"
  },
  {
    "label": "HandlePing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandlePing(float DeltaTime)"
  },
  {
    "label": "HandleServiceCaptureMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceCaptureMessage(const FProfilerServiceCapture& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServicePongMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServicePongMessage(const FProfilerServicePong& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServicePreviewMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServicePreviewMessage(const FProfilerServicePreview& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServiceRequestMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceRequestMessage(const FProfilerServiceRequest& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServiceFileChunkMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceFileChunkMessage(const FProfilerServiceFileChunk& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServiceSubscribeMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceSubscribeMessage(const FProfilerServiceSubscribe& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServiceUnsubscribeMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceUnsubscribeMessage(const FProfilerServiceUnsubscribe& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleNewFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNewFrame(int64 Frame)"
  },
  {
    "label": "CompressDataAndSendToGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompressDataAndSendToGame(TArray<uint8>* DataToTask, int64 Frame)"
  },
  {
    "label": "HandleNewFrameGT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNewFrameGT(FProfilerServiceData2* ToGameThread)"
  },
  {
    "label": "AddNewFrameHandleStatsPipe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewFrameHandleStatsPipe()"
  },
  {
    "label": "RemoveNewFrameHandleStatsPipe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNewFrameHandleStatsPipe()"
  }
]