[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FIoContainerHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoContainerHeader"
  },
  {
    "label": "IOnDemandPackageStoreBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOnDemandPackageStoreBackend"
  },
  {
    "label": "IOnDemandInstallCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOnDemandInstallCache"
  },
  {
    "label": "FOnDemandInternalContentHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOnDemandInternalContentHandle"
  },
  {
    "label": "FOnDemandChunkEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnDemandChunkEntry"
  },
  {
    "label": "FOnDemandTagSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnDemandTagSet"
  },
  {
    "label": "FOnDemandChunkEntryReferences",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnDemandChunkEntryReferences"
  },
  {
    "label": "FOnDemandContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnDemandContainer"
  },
  {
    "label": "FOnDemandChunkInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOnDemandChunkInfo"
  },
  {
    "label": "FOnDemandIoStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOnDemandIoStore"
  },
  {
    "label": "FMountRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMountRequest"
  },
  {
    "label": "FInstallRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstallRequest"
  },
  {
    "label": "FPurgeRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPurgeRequest"
  },
  {
    "label": "FOnDemandInternalContentHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Algo / BinarySearch . h \" # include \" Async / Async . h \" # include \" Async / Mutex . h \" # include \" Containers / AnsiString . h \" # include \" Containers / BitArray . h \" # include \" IO / IoBuffer . h \" # include \" IO / IoStoreOnDemand . h \" # include \" IO / IoHash . h \" # include \" IO / IoChunkEncoding . h \" # include \" IO / IoChunkId . h \" # include \" Misc / AES . h \" # include \" Misc / EnumClassFlags . h \" # include<atomic> enum class EForkProcessRole : uint8 ; struct FIoContainerHeader ; using FSharedContainerHeader = TSharedPtr<FIoContainerHeader> ; namespace UE::IoStore { class IOnDemandPackageStoreBackend ; class IOnDemandInstallCache ; using FSharedPackageStoreBackend = TSharedPtr<IOnDemandPackageStoreBackend> ; using FSharedInstallCache = TSharedPtr<IOnDemandInstallCache> ; using FWeakOnDemandIoStore = TWeakPtr<FOnDemandIoStore,ESPMode::ThreadSafe> ; class FOnDemandInternalContentHandle { public :)",
    "insertText": "FOnDemandInternalContentHandle() : DebugName(TEXT(\"NoName\"))"
  },
  {
    "label": "FOnDemandInternalContentHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOnDemandInternalContentHandle(FSharedString InDebugName) : DebugName(InDebugName)"
  },
  {
    "label": "FOnDemandInternalContentHandle()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FOnDemandInternalContentHandle()"
  },
  {
    "label": "HandleId()",
    "kind": "Method",
    "detail": "Function (UPTRINT)",
    "insertText": "HandleId()"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (} FSharedString DebugName ; FWeakOnDemandIoStore IoStore ; } ; FString)",
    "insertText": "LexToString(const FOnDemandInternalContentHandle& Handle)"
  },
  {
    "label": "PendingEncryptionKey()",
    "kind": "Method",
    "detail": "Function (enum class EOnDemandContainerFlags : uint8 { None = 0,)",
    "insertText": "PendingEncryptionKey(1 << 0), Mounted = (1 << 1), StreamOnDemand = (1 << 2), InstallOnDemand = (1 << 3), Encrypted = (1 << 4)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EOnDemandContainerFlags)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LexToString(EOnDemandContainerFlags Flags, FStringBuilderBase& Out)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LexToString(EOnDemandContainerFlags Flags)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (struct FOnDemandChunkEntry { const FOnDemandChunkEntry Null ; FIoHash Hash ; uint32 RawSize = 0 ; uint32 EncodedSize = 0 ; uint32 BlockOffset = ~)",
    "insertText": "uint32(0)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (uint32 BlockCount = 0 ; uint8 CompressionFormatIndex = 0 ; } ;)",
    "insertText": "static_assert(sizeof(FOnDemandChunkEntry) == 40)"
  },
  {
    "label": "UniqueName()",
    "kind": "Method",
    "detail": "Function (struct FOnDemandTagSet { FString Tag ; TArray<uint32> PackageIndicies ; } ; struct FOnDemandChunkEntryReferences { UPTRINT ContentHandleId = 0 ; TBitArray<> Indices ; } ; struct FOnDemandContainer { FString)",
    "insertText": "UniqueName()"
  },
  {
    "label": "FindChunkEntryIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindChunkEntryIndex(const FIoChunkId& ChunkId)"
  },
  {
    "label": "FindChunkEntry()",
    "kind": "Method",
    "detail": "Function (const FOnDemandChunkEntry*)",
    "insertText": "FindChunkEntry(const FIoChunkId& ChunkId)"
  },
  {
    "label": "FindOrAddChunkEntryReferences()",
    "kind": "Method",
    "detail": "Function (FOnDemandChunkEntryReferences&)",
    "insertText": "FindOrAddChunkEntryReferences(const FOnDemandInternalContentHandle& ContentHandle)"
  },
  {
    "label": "GetReferencedChunkEntries()",
    "kind": "Method",
    "detail": "Function (TBitArray<>)",
    "insertText": "GetReferencedChunkEntries()"
  },
  {
    "label": "SetNum()",
    "kind": "Method",
    "detail": "Function (NewRef . ContentHandleId = ContentHandleId ; NewRef . Indices .)",
    "insertText": "SetNum(ChunkEntries.Num(), false)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (TBitArray<> Indices ;)",
    "insertText": "for(const FOnDemandChunkEntryReferences& Refs : ChunkEntryReferences)"
  },
  {
    "label": "CombineWithBitwiseOR()",
    "kind": "Method",
    "detail": "Function (Indices .)",
    "insertText": "CombineWithBitwiseOR(Refs.Indices, EBitwiseOperatorFlags::MaxSize)"
  },
  {
    "label": "FOnDemandChunkInfo()",
    "kind": "Method",
    "detail": "Function (} return Indices ; } struct FOnDemandChunkInfo {)",
    "insertText": "FOnDemandChunkInfo() : Entry(FOnDemandChunkEntry::Null)"
  },
  {
    "label": "Hash()",
    "kind": "Method",
    "detail": "Function (} const FIoHash&)",
    "insertText": "Hash()"
  },
  {
    "label": "Blocks()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<uint32>)",
    "insertText": "Blocks()"
  },
  {
    "label": "BlockHashes()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<FIoBlockHash>)",
    "insertText": "BlockHashes()"
  },
  {
    "label": "ChunksDirectory()",
    "kind": "Method",
    "detail": "Function (FAnsiStringView)",
    "insertText": "ChunksDirectory()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (} FOnDemandChunkInfo)",
    "insertText": "Find(FSharedOnDemandContainer Container, const FIoChunkId& ChunkId)"
  },
  {
    "label": "FOnDemandChunkInfo()",
    "kind": "Method",
    "detail": "Function (private : class FOnDemandIoStore ;)",
    "insertText": "FOnDemandChunkInfo(FSharedOnDemandContainer InContainer, const FOnDemandChunkEntry& InEntry) : SharedContainer(InContainer) , Entry(InEntry)"
  },
  {
    "label": "FOnDemandChunkInfo()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "FOnDemandChunkInfo()"
  },
  {
    "label": "FOnDemandIoStore()",
    "kind": "Method",
    "detail": "Function (} class FOnDemandIoStore : public TSharedFromThis<FOnDemandIoStore,ESPMode::ThreadSafe> { struct FMountRequest { FOnDemandMountArgs Args ; FOnDemandMountCompleted OnCompleted ; double DurationInSeconds = 0 . 0 ; } ; using FSharedMountRequest = TSharedRef<FMountRequest> ; struct FInstallRequest { FOnDemandInstallArgs Args ; FOnDemandInstallCompleted OnCompleted ; FOnDemandInstallProgressed OnProgressed ; const FOnDemandCancellationToken* CancellationToken = nullptr ; } ; using FSharedInstallRequest = TSharedRef<FInstallRequest> ; struct FPurgeRequest { FOnDemandPurgeArgs Args ; FOnDemandPurgeCompleted OnCompleted ; } ; using FSharedPurgeRequest = TSharedRef<FPurgeRequest> ; public :)",
    "insertText": "FOnDemandIoStore()"
  },
  {
    "label": "FOnDemandIoStore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOnDemandIoStore(const FOnDemandIoStore&)"
  },
  {
    "label": "FOnDemandIoStore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOnDemandIoStore(FOnDemandIoStore&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FOnDemandIoStore&)",
    "insertText": "operator(const FOnDemandIoStore&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FOnDemandIoStore&)",
    "insertText": "operator(FOnDemandIoStore&&)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "Initialize()"
  },
  {
    "label": "Mount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mount(FOnDemandMountArgs&& Args, FOnDemandMountCompleted&& OnCompleted)"
  },
  {
    "label": "Install()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Install(FOnDemandInstallArgs&& Args, FOnDemandInstallCompleted&& OnCompleted, FOnDemandInstallProgressed&& OnProgress = nullptr, const FOnDemandCancellationToken* CancellationToken = nullptr)"
  },
  {
    "label": "Purge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Purge(FOnDemandPurgeArgs&& Args, FOnDemandPurgeCompleted&& OnCompleted)"
  },
  {
    "label": "Unmount()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "Unmount(FStringView MountId)"
  },
  {
    "label": "GetInstallSize()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<uint64>)",
    "insertText": "GetInstallSize(const FOnDemandGetInstallSizeArgs& Args)"
  },
  {
    "label": "GetInstallSizesByMountId()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "GetInstallSizesByMountId(const FOnDemandGetInstallSizeArgs& Args, TMap<FString, uint64>& OutSizesByMountId)"
  },
  {
    "label": "GetStreamingChunkInfo()",
    "kind": "Method",
    "detail": "Function (FOnDemandChunkInfo)",
    "insertText": "GetStreamingChunkInfo(const FIoChunkId& ChunkId)"
  },
  {
    "label": "GetInstalledChunkInfo()",
    "kind": "Method",
    "detail": "Function (FOnDemandChunkInfo)",
    "insertText": "GetInstalledChunkInfo(const FIoChunkId& ChunkId)"
  },
  {
    "label": "ReleaseContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseContent(FOnDemandInternalContentHandle& ContentHandle)"
  },
  {
    "label": "GetReferencedContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReferencedContent(TArray<FSharedOnDemandContainer>& OutContainers, TArray<TBitArray<>>& OutChunkEntryIndices)"
  },
  {
    "label": "GetCacheUsage()",
    "kind": "Method",
    "detail": "Function (FOnDemandCacheUsage)",
    "insertText": "GetCacheUsage()"
  },
  {
    "label": "GetContainersForInstall()",
    "kind": "Method",
    "detail": "Function (private : FIoStatus)",
    "insertText": "GetContainersForInstall(FStringView MountId, TSet<FSharedOnDemandContainer>& OutContainersForInstallation, TSet<FSharedOnDemandContainer>& OutContainersWithMountId)"
  },
  {
    "label": "GetContainersAndPackagesForInstall()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "GetContainersAndPackagesForInstall(FStringView MountId, const TArray<FString>& TagSets, const TArray<FPackageId>& PackageIds, TSet<FSharedOnDemandContainer>& OutContainersForInstallation, TSet<FPackageId>& OutPackageIdsToInstall)"
  },
  {
    "label": "OnPostFork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostFork(EForkProcessRole ProcessRole)"
  },
  {
    "label": "InitializeOnDemandInstallCache()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "InitializeOnDemandInstallCache()"
  },
  {
    "label": "GetChunkInfo()",
    "kind": "Method",
    "detail": "Function (FOnDemandChunkInfo)",
    "insertText": "GetChunkInfo(const FIoChunkId& ChunkId, EOnDemandContainerFlags ContainerFlags)"
  },
  {
    "label": "TryEnterTickLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryEnterTickLoop()"
  },
  {
    "label": "TickLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickLoop()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick()"
  },
  {
    "label": "TickMountRequest()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "TickMountRequest(FMountRequest& MountRequest)"
  },
  {
    "label": "CompleteMountRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteMountRequest(FMountRequest& MountRequest, FOnDemandMountResult&& MountResult)"
  },
  {
    "label": "TickInstallRequest()",
    "kind": "Method",
    "detail": "Function (FOnDemandInstallResult)",
    "insertText": "TickInstallRequest(const FInstallRequest& InstallRequest)"
  },
  {
    "label": "CompleteInstallRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteInstallRequest(FInstallRequest& InstallRequest, FOnDemandInstallResult&& InstallResult)"
  },
  {
    "label": "ProgressInstallRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProgressInstallRequest(const FInstallRequest& InstallRequest, const FOnDemandInstallProgress& Progress)"
  },
  {
    "label": "CompletePurgeRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompletePurgeRequest(FPurgeRequest& PurgeRequest, FOnDemandPurgeResult&& Result)"
  },
  {
    "label": "OnEncryptionKeyAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEncryptionKeyAdded(const FGuid& Id, const FAES::FAESKey& Key)"
  },
  {
    "label": "CreateContainersFromToc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateContainersFromToc(FStringView MountId, FStringView TocPath, FOnDemandToc& Toc, TArray<FSharedOnDemandContainer>& Out)"
  }
]