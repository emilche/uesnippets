[
  {
    "label": "UQuartzSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UQuartzSubsystem"
  },
  {
    "label": "UQuartzClockHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UQuartzClockHandle"
  },
  {
    "label": "FQuartzTickableObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuartzTickableObject"
  },
  {
    "label": "FQuartzTickableObjectsManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuartzTickableObjectsManager"
  },
  {
    "label": "FQuartzGameThreadSubscriber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuartzGameThreadSubscriber"
  },
  {
    "label": "FQuartzClockProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQuartzClockProxy"
  },
  {
    "label": "ListenerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ListenerType"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "FMetronomeDelegateGameThreadData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetronomeDelegateGameThreadData"
  },
  {
    "label": "FCommandDelegateGameThreadData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommandDelegateGameThreadData"
  },
  {
    "label": "FQuartzTickableObject()",
    "kind": "Method",
    "detail": "Function (} ; } using namespace Audio::Quartz ; class FQuartzTickableObject : public FQuartzSubscriberCommandQueue::TConsumerBase<IMetronomeEventListener,ICommandListener,IQueueCommandListener> { public :)",
    "insertText": "FQuartzTickableObject()"
  },
  {
    "label": "FQuartzTickableObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FQuartzTickableObject(const FQuartzTickableObject& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FQuartzTickableObject&)",
    "insertText": "operator(const FQuartzTickableObject&)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (FQuartzTickableObject*)",
    "insertText": "Init(UWorld* InWorldPtr)"
  },
  {
    "label": "QuartzTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QuartzTick(float DeltaTime)"
  },
  {
    "label": "QuartzIsTickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QuartzIsTickable()"
  },
  {
    "label": "AddMetronomeBpDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMetronomeBpDelegate(EQuartzCommandQuantization InQuantizationBoundary, const FOnQuartzMetronomeEventBP& OnQuantizationEvent)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "GetQuartzSubscriber()",
    "kind": "Method",
    "detail": "Function (} Audio::FQuartzGameThreadSubscriber)",
    "insertText": "GetQuartzSubscriber()"
  },
  {
    "label": "AddCommandDelegate()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddCommandDelegate(const FOnQuartzCommandEventBP& InDelegate)"
  },
  {
    "label": "OnCommandEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommandEvent(Data)"
  },
  {
    "label": "OnMetronomeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMetronomeEvent(Data)"
  },
  {
    "label": "OnQueueCommandEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnQueueCommandEvent(Data)"
  },
  {
    "label": "OnCommandEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCommandEvent(const Audio::FQuartzQuantizedCommandDelegateData& Data)"
  },
  {
    "label": "OnMetronomeEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMetronomeEvent(const Audio::FQuartzMetronomeDelegateData& Data)"
  },
  {
    "label": "OnQueueCommandEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnQueueCommandEvent(const Audio::FQuartzQueueCommandData& Data)"
  },
  {
    "label": "ProcessCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCommand(const Audio::FQuartzQuantizedCommandDelegateData& Data)"
  },
  {
    "label": "ProcessCommand()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessCommand(const Audio::FQuartzMetronomeDelegateData& Data)"
  },
  {
    "label": "ProcessCommand()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ProcessCommand(const Audio::FQuartzQueueCommandData& Data)"
  },
  {
    "label": "GetQuartzOffset()",
    "kind": "Method",
    "detail": "Function (} const Audio::FQuartzOffset&)",
    "insertText": "GetQuartzOffset()"
  },
  {
    "label": "SetNotificationAnticipationAmountMusicalDuration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNotificationAnticipationAmountMusicalDuration(const EQuartzCommandQuantization Duration, const double Multiplier)"
  },
  {
    "label": "QuartzUnsubscribe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QuartzUnsubscribe()"
  },
  {
    "label": "int32()",
    "kind": "Method",
    "detail": "Function (private : struct FMetronomeDelegateGameThreadData { FOnQuartzMetronomeEvent MulticastDelegate ; } ; struct FCommandDelegateGameThreadData { FOnQuartzCommandEvent MulticastDelegate ; FThreadSafeCounter RefCount ; } ; FMetronomeDelegateGameThreadData MetronomeDelegates [ static_cast<)",
    "insertText": "int32(EQuartzCommandQuantization::Count)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TArray<FCommandDelegateGameThreadData> QuantizedCommandDelegates ; TArray<TFunction<)",
    "insertText": "void(FQuartzTickableObject*)"
  }
]