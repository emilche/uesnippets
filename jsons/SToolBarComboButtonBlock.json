[
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "FToolBarComboButtonBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarComboButtonBlock"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IMultiBlockBaseWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMultiBlockBaseWidget"
  },
  {
    "label": "SToolBarComboButtonBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolBarComboButtonBlock"
  },
  {
    "label": "FToolBarComboButtonBlock()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Textures / SlateIcon . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Framework / MultiBox / MultiBox . h \" class SComboButton ; class FToolBarComboButtonBlock : public FMultiBlock { public :)",
    "insertText": "FToolBarComboButtonBlock(const FUIAction& InAction, const FOnGetContent& InMenuContentGenerator, const TAttribute<FText>& InLabel = TAttribute<FText>(), const TAttribute<FText>& InToolTip = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIcon = TAttribute<FSlateIcon>(), bool bInSimpleComboBox = false, TAttribute<FText> InToolbarLabelOverride = TAttribute<FText>())"
  },
  {
    "label": "CreateMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMenuEntry(class FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "HasIcon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasIcon()"
  },
  {
    "label": "SetLabelVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLabelVisibility(EVisibility InLabelVisibility)"
  },
  {
    "label": "SetForceSmallIcons()",
    "kind": "Method",
    "detail": "Function (LabelVisibility = InLabelVisibility ; } void)",
    "insertText": "SetForceSmallIcons(const bool InForceSmallIcons)"
  },
  {
    "label": "IsSimpleComboBox()",
    "kind": "Method",
    "detail": "Function (bForceSmallIcons = InForceSmallIcons ; } bool)",
    "insertText": "IsSimpleComboBox()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : class SToolBarComboButtonBlock ; FOnGetContent MenuContentGenerator ; TAttribute<FText> Label ; TAttribute<FText> ToolbarLabelOverride ; TAttribute<FText> ToolTip ; TAttribute<FSlateIcon> Icon ; TOptional<EVisibility> LabelVisibility ; bool bSimpleComboBox ; bool bForceSmallIcons ; } ; class SToolBarComboButtonBlock : public SMultiBlockBaseWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SToolBarComboButtonBlock ) : _ForceSmallIcons( false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TOptional< EVisibility >, LabelVisibility ) SLATE_ATTRIBUTE( FSlateIcon, Icon)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_ARGUMENT(bool, ForceSmallIcons ) SLATE_END_ARGS() SLATE_API virtual void BuildMultiBlockWidget(const ISlateStyle* StyleSet, const FName& StyleName)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnGetMenuContent()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<SWidget>)",
    "insertText": "OnGetMenuContent()"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetVisibility()"
  },
  {
    "label": "HasDynamicIcon()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "HasDynamicIcon()"
  },
  {
    "label": "GetIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIconBrush()"
  },
  {
    "label": "GetNormalIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetNormalIconBrush()"
  },
  {
    "label": "GetSmallIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetSmallIconBrush()"
  },
  {
    "label": "GetIconVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetIconVisibility(bool bIsASmallIcon)"
  },
  {
    "label": "GetIconForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetIconForegroundColor()"
  },
  {
    "label": "GetOverlayIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetOverlayIconBrush()"
  },
  {
    "label": "OnGetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "OnGetForegroundColor()"
  }
]