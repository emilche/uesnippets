[
  {
    "label": "IMessageLogListing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageLogListing"
  },
  {
    "label": "UFunctionalTestingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunctionalTestingManager"
  },
  {
    "label": "AFunctionalTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AFunctionalTest"
  },
  {
    "label": "APhasedAutomationActorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APhasedAutomationActorBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" GameFramework / Actor . h \" # include \" FunctionalTest . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" FunctionalTestingManager . generated . h \" class IMessageLogListing ; namespace FFunctionalTesting { const TCHAR* ReproStringTestSeparator ; const TCHAR* ReproStringParamsSeparator ; })",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Transient)"
  },
  {
    "label": "IsRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunning()"
  },
  {
    "label": "TickMe()",
    "kind": "Method",
    "detail": "Function (bLooped = bNewLooped ; } void)",
    "insertText": "TickMe(float DeltaTime)"
  },
  {
    "label": "GetManager()",
    "kind": "Method",
    "detail": "Function (protected : UFunctionalTestingManager*)",
    "insertText": "GetManager(UObject* WorldContext)"
  },
  {
    "label": "TriggerFirstValidTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TriggerFirstValidTest()"
  },
  {
    "label": "SetUpTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpTests()"
  },
  {
    "label": "OnTestDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestDone(class AFunctionalTest* FTest)"
  },
  {
    "label": "RunFirstValidTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunFirstValidTest()"
  },
  {
    "label": "NotifyTestDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTestDone(class AFunctionalTest* FTest)"
  },
  {
    "label": "SetReproString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReproString(FString ReproString)"
  },
  {
    "label": "AllTestsDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllTestsDone()"
  },
  {
    "label": "OnWorldCleanedUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldCleanedUp(UWorld* World, bool bSessionEnded, bool bCleanupResources)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (bool bIsRunning ; bool bFinished ; bool bLooped ; bool bInitialDelayApplied ; bool bIsTearingDown ; uint32 CurrentIteration ; FFunctionalTestDoneSignature TestFinishedObserver ; FString StartingReproString ; TArray<FString> TestReproStrings ; private : FTimerHandle TriggerFirstValidTestTimerHandle ; } ;)",
    "insertText": "UCLASS(abstract, Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintImplementableEvent, Category = \"Automation\") void OnFunctionalTestingComplete()"
  }
]