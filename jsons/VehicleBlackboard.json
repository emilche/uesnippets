[
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "BlackboardObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlackboardObject"
  },
  {
    "label": "ObjectContainerBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ObjectContainerBase"
  },
  {
    "label": "ObjectContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ObjectContainer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ObjectContainer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / UniquePtr . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / Casts . h \" class FVehicleBlackboard { private : class BlackboardObject { struct ObjectContainerBase { } ; template<T> struct ObjectContainer : ObjectContainerBase {)",
    "insertText": "ObjectContainer(const T& t) : Object(t)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} const T&)",
    "insertText": "Get()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (ObjectContainer<T>* TypedContainer = static_cast<ObjectContainer<)",
    "insertText": "T(ContainerPtr.Get())"
  },
  {
    "label": "GetMutable()",
    "kind": "Method",
    "detail": "Function (} template<T> T&)",
    "insertText": "GetMutable()"
  },
  {
    "label": "TryGet()",
    "kind": "Method",
    "detail": "Function (} private : TSharedPtr<ObjectContainerBase> ContainerPtr ; } ; public : enum class EInvalidationReason : uint8 { FullReset,Rollback,} ; template<T> bool)",
    "insertText": "TryGet(FName ObjName, T& OutFoundValue)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (OutFoundValue = ExistingObject ->)",
    "insertText": "Get()->Get<T>()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "Set(FName ObjName, T Obj)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (ObjectsByName .)",
    "insertText": "Emplace(ObjName, MakeShared<BlackboardObject>(Obj))"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Invalidate(FName ObjName)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(EInvalidationReason Reason)"
  },
  {
    "label": "InvalidateAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateAll()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(EInvalidationReason::FullReset)"
  }
]