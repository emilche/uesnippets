[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FTextFilterExpressionEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextFilterExpressionEvaluator"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "FStructViewerNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructViewerNode"
  },
  {
    "label": "SStructViewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SStructViewer"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Input / Reply . h \" # include \" StructViewerModule . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STreeView . h \" # include \" Settings / StructViewerSettings . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / SoftObjectPath . h \" class FMenuBuilder ; class FTextFilterExpressionEvaluator ; class UBlueprint ; class SComboButton ; class FStructViewerNode ; class FTextFilterExpressionEvaluator ; class SStructViewer : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SStructViewer)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FOnStructPicked, OnStructPickedDelegate) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const FStructViewerInitializationOptions& InInitOptions)"
  },
  {
    "label": "GetContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetContent()"
  },
  {
    "label": "SStructViewer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SStructViewer()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnFocusReceived()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFocusReceived(const FGeometry& MyGeometry, const FFocusEvent& InFocusEvent)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "IsStructAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStructAllowed(const UScriptStruct* InStruct)"
  },
  {
    "label": "DestroyStructHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyStructHierarchy()"
  },
  {
    "label": "OnGetChildrenForStructViewerTree()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnGetChildrenForStructViewerTree(TSharedPtr<FStructViewerNode> InParent, TArray<TSharedPtr<FStructViewerNode>>& OutChildren)"
  },
  {
    "label": "OnGenerateRowForStructViewer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForStructViewer(TSharedPtr<FStructViewerNode> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragDetected(const FGeometry& Geometry, const FPointerEvent& PointerEvent)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextCommitted(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnStructViewerSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStructViewerSelectionChanged(TSharedPtr<FStructViewerNode> Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnStructViewerExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStructViewerExpansionChanged(TSharedPtr<FStructViewerNode> Item, bool bExpanded)"
  },
  {
    "label": "SetAllExpansionStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllExpansionStates(bool bInExpansionState)"
  },
  {
    "label": "SetAllExpansionStates_Helper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllExpansionStates_Helper(TSharedPtr<FStructViewerNode> InNode, bool bInExpansionState)"
  },
  {
    "label": "ToggleExpansionState_Helper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpansionState_Helper(TSharedPtr<FStructViewerNode> InNode)"
  },
  {
    "label": "BuildMenuWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildMenuWidget()"
  },
  {
    "label": "ExpandFilteredInNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExpandFilteredInNodes(TSharedPtr<FStructViewerNode> InNode)"
  },
  {
    "label": "MapExpansionStatesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MapExpansionStatesInTree(TSharedPtr<FStructViewerNode> InItem)"
  },
  {
    "label": "SetExpansionStatesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExpansionStatesInTree(TSharedPtr<FStructViewerNode> InItem)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "Populate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Populate()"
  },
  {
    "label": "GetSelectedItems()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FStructViewerNode>>)",
    "insertText": "GetSelectedItems()"
  },
  {
    "label": "ExpandRootNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandRootNodes()"
  },
  {
    "label": "GetViewButtonForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetViewButtonForegroundColor()"
  },
  {
    "label": "GetViewButtonContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetViewButtonContent()"
  },
  {
    "label": "GetStructCountText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetStructCountText()"
  },
  {
    "label": "SetCurrentDeveloperViewType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentDeveloperViewType(EStructViewerDeveloperType NewType)"
  },
  {
    "label": "GetCurrentDeveloperViewType()",
    "kind": "Method",
    "detail": "Function (EStructViewerDeveloperType)",
    "insertText": "GetCurrentDeveloperViewType()"
  },
  {
    "label": "IsCurrentDeveloperViewType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCurrentDeveloperViewType(EStructViewerDeveloperType ViewType)"
  },
  {
    "label": "ToggleShowInternalStructs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowInternalStructs()"
  },
  {
    "label": "IsShowingInternalStructs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingInternalStructs()"
  },
  {
    "label": "IsToggleShowInternalStructsAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToggleShowInternalStructsAllowed()"
  },
  {
    "label": "GetNumItems()",
    "kind": "Method",
    "detail": "Function (const int)",
    "insertText": "GetNumItems()"
  },
  {
    "label": "CountTreeItems()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CountTreeItems(FStructViewerNode* Node)"
  },
  {
    "label": "HandleSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingChanged(FName PropertyName)"
  },
  {
    "label": "GetInternalOnlyStructs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInternalOnlyStructs(TArray<TSoftObjectPtr<const UScriptStruct>>& Structs)"
  },
  {
    "label": "GetInternalOnlyPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInternalOnlyPaths(TArray<FDirectoryPath>& Paths)"
  }
]