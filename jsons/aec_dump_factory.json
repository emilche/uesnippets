[
  {
    "label": "TaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueue"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC_DUMP_AEC_DUMP_FACTORY_H_ # define MODULES_AUDIO_PROCESSING_AEC_DUMP_AEC_DUMP_FACTORY_H_ # include<memory> # include \" absl / strings / string_view . h \" # include \" modules / audio_processing / include / aec_dump . h \" # include \" rtc_base / system / file_wrapper . h \" # include \" rtc_base / system / rtc_export . h \" namespace rtc { class TaskQueue ; } namespace webrtc { class RTC_EXPORT AecDumpFactory { public : std::unique_ptr<AecDump>)",
    "insertText": "Create(webrtc::FileWrapper file, int64_t max_log_size_bytes, rtc::TaskQueue* worker_queue)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<AecDump>)",
    "insertText": "Create(absl::string_view file_name, int64_t max_log_size_bytes, rtc::TaskQueue* worker_queue)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<AecDump>)",
    "insertText": "Create(FILE* handle, int64_t max_log_size_bytes, rtc::TaskQueue* worker_queue)"
  }
]