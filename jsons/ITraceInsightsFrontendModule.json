[
  {
    "label": "FCreateFrontendWindowParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreateFrontendWindowParams"
  },
  {
    "label": "FInsightsFrontendTabs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInsightsFrontendTabs"
  },
  {
    "label": "STraceStoreWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STraceStoreWindow"
  },
  {
    "label": "SConnectionWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SConnectionWindow"
  },
  {
    "label": "TRACEINSIGHTSFRONTEND_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSFRONTEND_API"
  },
  {
    "label": "ITraceInsightsFrontendModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SharedPointer . h \" # define INSIGHTS_ENABLE_AUTOMATION ! WITH_EDITOR namespace UE::Insights { struct FCreateFrontendWindowParams { bool bAllowDebugTools = false ; bool bInitializeTesting = false ; bool bStartProcessWithStompMalloc = false ; bool bDisableFramerateThrottle = false ; bool bAutoQuit = false ; } ; struct FInsightsFrontendTabs { const FName TraceStoreTabId ; const FName ConnectionTabId ; } ; class STraceStoreWindow ; class SConnectionWindow ; } class ITraceInsightsFrontendModule : public IModuleInterface { public : ~)",
    "insertText": "ITraceInsightsFrontendModule()"
  },
  {
    "label": "ConnectToStore()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ConnectToStore(const TCHAR* InStoreHost, uint32 InStorePort = 0)"
  },
  {
    "label": "CreateFrontendWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFrontendWindow(const UE::Insights::FCreateFrontendWindowParams& Params)"
  },
  {
    "label": "GetTraceStoreWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<UE::Insights::STraceStoreWindow>)",
    "insertText": "GetTraceStoreWindow()"
  },
  {
    "label": "GetConnectionWindow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<UE::Insights::SConnectionWindow>)",
    "insertText": "GetConnectionWindow()"
  },
  {
    "label": "RunAutomationTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunAutomationTests(const FString& InCmd)"
  }
]