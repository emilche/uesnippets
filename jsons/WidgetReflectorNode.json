[
  {
    "label": "FJsonValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonValue"
  },
  {
    "label": "FWidgetPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetPath"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FWidgetHitTestInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetHitTestInfo"
  },
  {
    "label": "FWidgetReflectorNodeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetReflectorNodeBase"
  },
  {
    "label": "entry",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "entry"
  },
  {
    "label": "FLiveWidgetReflectorNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLiveWidgetReflectorNode"
  },
  {
    "label": "FSnapshotWidgetReflectorNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSnapshotWidgetReflectorNode"
  },
  {
    "label": "FWidgetReflectorNodeUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetReflectorNodeUtils"
  },
  {
    "label": "SetTint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTint(const FLinearColor& InTint)"
  },
  {
    "label": "AddChildNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildNode(TSharedRef<FWidgetReflectorNodeBase> InParentNode, TSharedRef<FWidgetReflectorNodeBase> InChildNode)"
  },
  {
    "label": "FWidgetReflectorNodeBase()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FWidgetReflectorNodeBase(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FLiveWidgetReflectorNode>)",
    "insertText": "Create(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "FLiveWidgetReflectorNode()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FLiveWidgetReflectorNode(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSnapshotWidgetReflectorNode>)",
    "insertText": "Create()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSnapshotWidgetReflectorNode>)",
    "insertText": "Create(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "ToJson()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FJsonValue>)",
    "insertText": "ToJson(const TSharedRef<FSnapshotWidgetReflectorNode>& RootSnapshotNode)"
  },
  {
    "label": "FromJson()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSnapshotWidgetReflectorNode>)",
    "insertText": "FromJson(const TSharedRef<FJsonValue>& RootJsonValue)"
  },
  {
    "label": "FSnapshotWidgetReflectorNode()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FSnapshotWidgetReflectorNode(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "NewLiveNodeTreeFrom()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FLiveWidgetReflectorNode>)",
    "insertText": "NewLiveNodeTreeFrom(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "NewSnapshotNodeTreeFrom()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSnapshotWidgetReflectorNode>)",
    "insertText": "NewSnapshotNodeTreeFrom(const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "NewNodeTreeFrom()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWidgetReflectorNodeBase>)",
    "insertText": "NewNodeTreeFrom(const EWidgetReflectorNodeType InNodeType, const FArrangedWidget& InWidgetGeometry)"
  },
  {
    "label": "FindLiveWidgetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindLiveWidgetPath(const TArray<TSharedRef<FWidgetReflectorNodeBase>>& CandidateNodes, const FWidgetPath& WidgetPathToFind, TArray<TSharedRef<FWidgetReflectorNodeBase>>& SearchResult)"
  },
  {
    "label": "FindLiveWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindLiveWidget(const TArray<TSharedRef<FWidgetReflectorNodeBase>>& CandidateNodes, const TSharedPtr<const SWidget>& WidgetToFind, TArray<TSharedRef<FWidgetReflectorNodeBase>>& SearchResult)"
  },
  {
    "label": "FindSnaphotWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSnaphotWidget(const TArray<TSharedRef<FWidgetReflectorNodeBase>>& CandidateNodes, FWidgetReflectorNodeBase::TPointerAsInt WidgetToFind, TArray<TSharedRef<FWidgetReflectorNodeBase>>& SearchResult)"
  },
  {
    "label": "GetWidgetType()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWidgetType(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetTypeAndShortName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWidgetTypeAndShortName(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetVisibilityText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWidgetVisibilityText(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetVisibility(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetVisibilityInherited()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetVisibilityInherited(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetClippingText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWidgetClippingText(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetLayerId()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetLayerId(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetLayerIdOut()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetLayerIdOut(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetFocusable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetFocusable(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetNeedsTick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetNeedsTick(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetIsVolatile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetIsVolatile(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetIsVolatileIndirectly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetIsVolatileIndirectly(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetHasActiveTimers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetHasActiveTimers(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetIsInvalidationRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetIsInvalidationRoot(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetAttributeCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetAttributeCount(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetCollapsedAttributeCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetCollapsedAttributeCount(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetReadableLocation()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWidgetReadableLocation(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetFile()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWidgetFile(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetLineNumber()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetLineNumber(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "HasValidWidgetAssetData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidWidgetAssetData(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetAssetData()",
    "kind": "Method",
    "detail": "Function (FAssetData)",
    "insertText": "GetWidgetAssetData(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetWidgetDesiredSize(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetAddressAsString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWidgetAddressAsString(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetAddress()",
    "kind": "Method",
    "detail": "Function (FWidgetReflectorNodeBase::TPointerAsInt)",
    "insertText": "GetWidgetAddress(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "WidgetAddressToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "WidgetAddressToString(FWidgetReflectorNodeBase::TPointerAsInt InWidgetPtr)"
  },
  {
    "label": "GetWidgetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetWidgetForegroundColor(const TSharedPtr<const SWidget>& InWidget)"
  },
  {
    "label": "GetWidgetEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetWidgetEnabled(const TSharedPtr<const SWidget>& InWidget)"
  }
]