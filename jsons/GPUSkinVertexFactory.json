[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TConsoleVariableData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConsoleVariableData"
  },
  {
    "label": "FSharedPoolPolicyData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSharedPoolPolicyData"
  },
  {
    "label": "FVertexBufferAndSRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVertexBufferAndSRV"
  },
  {
    "label": "FBoneBufferPoolPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoneBufferPoolPolicy"
  },
  {
    "label": "FBoneBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBoneBufferPool"
  },
  {
    "label": "FClothBufferPoolPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothBufferPoolPolicy"
  },
  {
    "label": "FClothBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClothBufferPool"
  },
  {
    "label": "GPUSkinBoneInfluenceType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GPUSkinBoneInfluenceType"
  },
  {
    "label": "FGPUSkinDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSkinDataType"
  },
  {
    "label": "FMorphVertexBufferPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMorphVertexBufferPool"
  },
  {
    "label": "FGPUBaseSkinVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUBaseSkinVertexFactory"
  },
  {
    "label": "FShaderDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderDataType"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FMorphVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMorphVertexBuffer"
  },
  {
    "label": "FGPUBaseSkinAPEXClothVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUBaseSkinAPEXClothVertexFactory"
  },
  {
    "label": "FGPUBaseSkinAPEXClothVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUBaseSkinAPEXClothVertexFactory"
  },
  {
    "label": "TGPUSkinVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGPUSkinVertexFactory"
  },
  {
    "label": "FGPUBaseSkinAPEXClothVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUBaseSkinAPEXClothVertexFactory"
  },
  {
    "label": "ClothShaderType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ClothShaderType"
  },
  {
    "label": "FGPUSkinAPEXClothDataType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUSkinAPEXClothDataType"
  },
  {
    "label": "TGPUSkinAPEXClothVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGPUSkinAPEXClothVertexFactory"
  },
  {
    "label": "FGPUSkinPassthroughVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGPUSkinPassthroughVertexFactory"
  },
  {
    "label": "EShaderResource",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EShaderResource"
  },
  {
    "label": "EVertexAttribute",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVertexAttribute"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAddVertexAttributeDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddVertexAttributeDesc"
  },
  {
    "label": "GetPoolBucketIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPoolBucketIndex(uint32 Size)"
  },
  {
    "label": "GetPoolBucketSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPoolBucketSize(uint32 Bucket)"
  },
  {
    "label": "CreateResource()",
    "kind": "Method",
    "detail": "Function (FVertexBufferAndSRV)",
    "insertText": "CreateResource(FRHICommandListBase& RHICmdList, FSharedPoolPolicyData::CreationArguments Args)"
  },
  {
    "label": "GetCreationArguments()",
    "kind": "Method",
    "detail": "Function (FSharedPoolPolicyData::CreationArguments)",
    "insertText": "GetCreationArguments(const FVertexBufferAndSRV& Resource)"
  },
  {
    "label": "FreeResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeResource(FVertexBufferAndSRV Resource)"
  },
  {
    "label": "CreateResource()",
    "kind": "Method",
    "detail": "Function (FVertexBufferAndSRV)",
    "insertText": "CreateResource(FRHICommandListBase& RHICmdList, FSharedPoolPolicyData::CreationArguments Args)"
  },
  {
    "label": "UpdateBoneData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBoneData(FRHICommandList& RHICmdList, const TArray<FMatrix44f>& ReferenceToLocalMatrices,\n\t\t\tconst TArray<FBoneIndexType>& BoneMap, uint32 RevisionNumber, ERHIFeatureLevel::Type FeatureLevel, \n\t\t\tconst FName& AssetPathName)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(const FGPUSkinDataType* InData)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(FRHICommandListBase& RHICmdList, const FGPUSkinDataType* InData)"
  },
  {
    "label": "GetMinimumPerPlatformMaxGPUSkinBonesValue()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMinimumPerPlatformMaxGPUSkinBonesValue()"
  },
  {
    "label": "GetMaxGPUSkinBones()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxGPUSkinBones(const class ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "UseUnlimitedBoneInfluences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseUnlimitedBoneInfluences(uint32 MaxBoneInfluences, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "GetUnlimitedBoneInfluences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUnlimitedBoneInfluences(const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "GetBoneInfluenceLimitForAsset()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetBoneInfluenceLimitForAsset(int32 AssetProvidedLimit, const ITargetPlatform* TargetPlatform = nullptr)"
  },
  {
    "label": "GetAlwaysUseDeformerForUnlimitedBoneInfluences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAlwaysUseDeformerForUnlimitedBoneInfluences(EShaderPlatform Platform)"
  },
  {
    "label": "UpdateMorphState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMorphState(FRHICommandListBase& RHICmdList, bool bUseMorphTarget)"
  },
  {
    "label": "UpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUniformBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "GetVertexElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexElements(ERHIFeatureLevel::Type FeatureLevel, EVertexInputStreamType InputStreamType, FGPUSkinDataType& GPUSkinData, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "GetVertexElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexElements(ERHIFeatureLevel::Type FeatureLevel, EVertexInputStreamType InputStreamType, FGPUSkinDataType& GPUSkinData, FVertexDeclarationElementList& Elements, FVertexStreamList& InOutStreams, int32& OutMorphDeltaStreamIndex)"
  },
  {
    "label": "UpdateClothSimulationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateClothSimulationData(\n\t\t\tFRHICommandList& RHICmdList,\n\t\t\tTConstArrayView<FVector3f> InSimulPositions,\n\t\t\tTConstArrayView<FVector3f> InSimulNormals,\n\t\t\tuint32 RevisionNumber,\n\t\t\tconst FName& AssetPathName)"
  },
  {
    "label": "SetCurrentRevisionNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentRevisionNumber(uint32 RevisionNumber)"
  },
  {
    "label": "IsClothEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClothEnabled(EShaderPlatform Platform)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ResetVertexAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetVertexAttributes(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "SetVertexAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexAttributes(FRHICommandListBase& RHICmdList, FGPUBaseSkinVertexFactory const* InSourceVertexFactory, FAddVertexAttributeDesc const& InDesc)"
  },
  {
    "label": "UpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUniformBuffer(FRHICommandListBase& RHICmdList, FGPUBaseSkinVertexFactory const* InSourceVertexFactory)"
  },
  {
    "label": "UpdateLooseUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLooseUniformBuffer(FRHICommandListBase& RHICmdList, FGPUBaseSkinVertexFactory const* InSourceVertexFactory, uint32 InFrameNumber)"
  }
]