[
  {
    "label": "gemm_extra_col()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gemm_extra_col(\n  const DataMapper& res,\n  const Scalar* lhs_base,\n  const Scalar* rhs_base,\n  Index depth,\n  Index strideA,\n  Index offsetA,\n  Index row,\n  Index col,\n  Index remaining_rows,\n  Index remaining_cols,\n  const Packet& pAlpha)"
  },
  {
    "label": "gemm_extra_row()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gemm_extra_row(\n  const DataMapper& res,\n  const Scalar* lhs_base,\n  const Scalar* rhs_base,\n  Index depth,\n  Index strideA,\n  Index offsetA,\n  Index row,\n  Index col,\n  Index rows,\n  Index cols,\n  Index remaining_rows,\n  const Packet& pAlpha,\n  const Packet& pMask)"
  },
  {
    "label": "gemm_unrolled_col()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gemm_unrolled_col(\n  const DataMapper& res,\n  const Scalar* lhs_base,\n  const Scalar* rhs_base,\n  Index depth,\n  Index strideA,\n  Index offsetA,\n  Index& row,\n  Index rows,\n  Index col,\n  Index remaining_cols,\n  const Packet& pAlpha)"
  },
  {
    "label": "bmask()",
    "kind": "Method",
    "detail": "Function (Packet)",
    "insertText": "bmask(const int remaining_rows)"
  },
  {
    "label": "gemm_complex_extra_col()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gemm_complex_extra_col(\n  const DataMapper& res,\n  const Scalar* lhs_base,\n  const Scalar* rhs_base,\n  Index depth,\n  Index strideA,\n  Index offsetA,\n  Index strideB,\n  Index row,\n  Index col,\n  Index remaining_rows,\n  Index remaining_cols,\n  const Packet& pAlphaReal,\n  const Packet& pAlphaImag)"
  },
  {
    "label": "gemm_complex_extra_row()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gemm_complex_extra_row(\n  const DataMapper& res,\n  const Scalar* lhs_base,\n  const Scalar* rhs_base,\n  Index depth,\n  Index strideA,\n  Index offsetA,\n  Index strideB,\n  Index row,\n  Index col,\n  Index rows,\n  Index cols,\n  Index remaining_rows,\n  const Packet& pAlphaReal,\n  const Packet& pAlphaImag,\n  const Packet& pMask)"
  },
  {
    "label": "gemm_complex_unrolled_col()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gemm_complex_unrolled_col(\n  const DataMapper& res,\n  const Scalar* lhs_base,\n  const Scalar* rhs_base,\n  Index depth,\n  Index strideA,\n  Index offsetA,\n  Index strideB,\n  Index& row,\n  Index rows,\n  Index col,\n  Index remaining_cols,\n  const Packet& pAlphaReal,\n  const Packet& pAlphaImag)"
  },
  {
    "label": "ploadLhs()",
    "kind": "Method",
    "detail": "Function (Packet)",
    "insertText": "ploadLhs(const Scalar* lhs)"
  },
  {
    "label": "bload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bload(PacketBlock<Packet,4>& acc, const DataMapper& res, Index row, Index col)"
  },
  {
    "label": "bload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bload(PacketBlock<Packet,8>& acc, const DataMapper& res, Index row, Index col)"
  },
  {
    "label": "bscale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bscale(PacketBlock<Packet,4>& acc, PacketBlock<Packet,4>& accZ, const Packet& pAlpha)"
  },
  {
    "label": "bscalec()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bscalec(PacketBlock<Packet,N>& aReal, PacketBlock<Packet,N>& aImag, const Packet& bReal, const Packet& bImag, PacketBlock<Packet,N>& cReal, PacketBlock<Packet,N>& cImag)"
  }
]