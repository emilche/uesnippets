[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSequencerTrackNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerTrackNode"
  },
  {
    "label": "ISequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerSection"
  },
  {
    "label": "FSelectionEventSuppressor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSelectionEventSuppressor"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "ISequencerEditToolDragOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerEditToolDragOperation"
  },
  {
    "label": "FHotspotSelectionManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHotspotSelectionManager"
  },
  {
    "label": "IMouseHandlerHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMouseHandlerHotspot"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FKeyHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyHotspot"
  },
  {
    "label": "FKeyBarHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyBarHotspot"
  },
  {
    "label": "FSectionHotspotBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSectionHotspotBase"
  },
  {
    "label": "FSectionHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSectionHotspot"
  },
  {
    "label": "FSectionResizeHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSectionResizeHotspot"
  },
  {
    "label": "EHandle",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EHandle"
  },
  {
    "label": "FSectionEasingHandleHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSectionEasingHandleHotspot"
  },
  {
    "label": "FEasingAreaHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEasingAreaHandle"
  },
  {
    "label": "FSectionEasingAreaHotspot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSectionEasingAreaHotspot"
  },
  {
    "label": "ConditionallyClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyClearSelection()"
  },
  {
    "label": "ToggleKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleKeys(TArrayView<const FSequencerSelectedKey> InKeys)"
  },
  {
    "label": "ToggleModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleModel(TSharedPtr<FViewModel> InModel)"
  },
  {
    "label": "DefaultModelSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefaultModelSelection(TSharedPtr<FViewModel> InModel)"
  },
  {
    "label": "SelectKeysExclusive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectKeysExclusive(TArrayView<const FSequencerSelectedKey> InKeys)"
  },
  {
    "label": "SelectModelExclusive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectModelExclusive(TSharedPtr<FViewModel> InModel)"
  },
  {
    "label": "FKeyHotspot()",
    "kind": "Method",
    "detail": "Function (SEQUENCER_API)",
    "insertText": "FKeyHotspot(const TArray<FSequencerSelectedKey>& InKeys, TWeakPtr<FSequencer> InWeakSequencer)"
  }
]