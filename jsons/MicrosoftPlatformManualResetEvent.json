[
  {
    "label": "FMonotonicTimePoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMonotonicTimePoint"
  },
  {
    "label": "FMicrosoftPlatformManualResetEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMicrosoftPlatformManualResetEvent"
  },
  {
    "label": "FMicrosoftPlatformManualResetEvent()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # define namespace UE { struct FMonotonicTimePoint ; } namespace UE::HAL::Private { class FMicrosoftPlatformManualResetEvent { public :)",
    "insertText": "FMicrosoftPlatformManualResetEvent()"
  },
  {
    "label": "FMicrosoftPlatformManualResetEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMicrosoftPlatformManualResetEvent(const FMicrosoftPlatformManualResetEvent&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMicrosoftPlatformManualResetEvent&)",
    "insertText": "operator(const FMicrosoftPlatformManualResetEvent&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (bWait = true ; } void)",
    "insertText": "Wait()"
  },
  {
    "label": "WaitUntil()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitUntil(FMonotonicTimePoint WaitTime)"
  },
  {
    "label": "Notify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Notify()"
  }
]