[
  {
    "label": "ObjCFrameBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjCFrameBuffer"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (# ifndef SDK_OBJC_NATIVE_SRC_OBJC_FRAME_BUFFER_H_ # define SDK_OBJC_NATIVE_SRC_OBJC_FRAME_BUFFER_H_ # import<CoreVideo / CoreVideo . h> # import \" base / RTCMacros . h \" # include \" common_video / include / video_frame_buffer . h \" @ protocol)",
    "insertText": "RTC_OBJC_TYPE(RTCVideoFrameBuffer)"
  },
  {
    "label": "ObjCFrameBuffer()",
    "kind": "Method",
    "detail": "Function (namespace webrtc { class ObjCFrameBuffer : public VideoFrameBuffer { public :)",
    "insertText": "ObjCFrameBuffer(id<RTC_OBJC_TYPE(RTCVideoFrameBuffer)>)"
  },
  {
    "label": "ObjCFrameBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ObjCFrameBuffer()"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "type()"
  },
  {
    "label": "width()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "width()"
  },
  {
    "label": "height()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "height()"
  },
  {
    "label": "ToI420()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<I420BufferInterface>)",
    "insertText": "ToI420()"
  },
  {
    "label": "CropAndScale()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoFrameBuffer>)",
    "insertText": "CropAndScale(int offset_x, int offset_y, int crop_width, int crop_height, int scaled_width, int scaled_height)"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (id<)",
    "insertText": "RTC_OBJC_TYPE(RTCVideoFrameBuffer)> wrapped_frame_buffer()"
  },
  {
    "label": "RTC_OBJC_TYPE()",
    "kind": "Method",
    "detail": "Function (int width_ ; int height_ ; } ; id<)",
    "insertText": "RTC_OBJC_TYPE(RTCVideoFrameBuffer)> ToObjCVideoFrameBuffer( const rtc::scoped_refptr<VideoFrameBuffer>& buffer)"
  }
]