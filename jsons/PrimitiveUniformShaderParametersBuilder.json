[
  {
    "label": "FPrimitiveUniformShaderParametersBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveUniformShaderParametersBuilder"
  },
  {
    "label": "Defaults()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / LargeWorldRenderPosition . h \" # include \" Engine / EngineTypes . h \" # include \" SceneTypes . h \" # include \" ShaderParameters . h \" # include \" UniformBuffer . h \" # include \" LightmapUniformShaderParameters . h \" # include \" NaniteDefinitions . h \" # include \" RenderTransform . h \" # include \" SceneDefinitions . h \" # if ! UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_3 # include \" PrimitiveUniformShaderParameters . h \" # endif struct FPrimitiveUniformShaderParametersBuilder { public : FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "Defaults()"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (ObjectRadius = 0 . 0 f ; bCastShadow = true ; bCastContactShadow = true ; bEvaluateWorldPositionOffset = true ; bVisibleInGame = true ; bVisibleInEditor = true ; bVisibleInReflectionCaptures = true ; bVisibleInRealTimeSkyCaptures = true ; bVisibleInRayTracing = true ; bVisibleInLumenScene = true ; bReceivesDecals = false ; bUseSingleSampleShadowFromStationaryLights = false ; bUseVolumetricLightmap = false ; bCacheShadowAsStatic = false ; bOutputVelocity = false ; bHasDistanceFieldRepresentation = false ; bHasCapsuleRepresentation = false ; bHasPreSkinnedLocalBounds = false ; bHasPreviousLocalToWorld = false ; bHasInstanceLocalBounds = false ; bCastHiddenShadow = false ; bVisibleInSceneCaptureOnly = false ; bHiddenInSceneCapture = false ; bForceHidden = false ; bHasNaniteImposter = false ; bHasInstanceDrawDistanceCull = false ; bHasWPODisableDistance = false ; bHasAlwaysEvaluateWPOMaterials = false ; bWritesCustomDepthStencil = false ; bReverseCulling = false ; bHoldout = false ; bDisableMaterialInvalidations = false ; bSplineMesh = false ; bSkinnedMesh = false ; bAllowInstanceCullingOcclusionQueries = false ; bHasPixelAnimation = false ; bRayTracingFarField = false ; bRayTracingHasGroupId = false ; bHasPerClusterDisplacementFallbackRaster = false ; bIsFirstPersonPrimitive = false ; Parameters . MaxWPOExtent = 0 . 0 f ; Parameters . MinMaterialDisplacement = 0 . 0 f ; Parameters . MaxMaterialDisplacement = 0 . 0 f ; Parameters . WireframeAndPrimitiveColor =)",
    "insertText": "FVector2f(FMath::AsFloat(0xFFFFFF00), FMath::AsFloat(0xFFFFFF00))"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (Parameters . LightmapDataIndex = 0 ; Parameters . LightmapUVIndex = INDEX_NONE ; Parameters . SingleCaptureIndex = INDEX_NONE ; Parameters . PersistentPrimitiveIndex = INDEX_NONE ; Parameters . PrimitiveComponentId = ~)",
    "insertText": "uint32(0u)"
  },
  {
    "label": "FUintVector2()",
    "kind": "Method",
    "detail": "Function (Parameters . NaniteResourceID = INDEX_NONE ; Parameters . NaniteHierarchyOffset = INDEX_NONE ; Parameters . PackedNaniteFlags = NANITE_IMPOSTER_INDEX_MASK ; Parameters . NaniteRayTracingDataOffset = INDEX_NONE ; Parameters . InstanceSceneDataOffset = INDEX_NONE ; Parameters . NumInstanceSceneDataEntries = 0 ; Parameters . InstancePayloadDataOffset = INDEX_NONE ; Parameters . InstancePayloadDataStride = 0 ; Parameters . InstancePayloadExtensionSize = 0 ; Parameters . MeshPaintTextureDescriptor =)",
    "insertText": "FUintVector2(0, 0)"
  },
  {
    "label": "GetDefaultLightingChannelMask()",
    "kind": "Method",
    "detail": "Function (LightingChannels =)",
    "insertText": "GetDefaultLightingChannelMask()"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (} # define)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(INPUT_TYPE, VARIABLE_NAME) \\ inline FPrimitiveUniformShaderParametersBuilder& VARIABLE_NAME(INPUT_TYPE In##VARIABLE_NAME)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (Parameters . VARIABLE_NAME = In # # VARIABLE_NAME ; return* this ; } # define)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(INPUT_TYPE, VARIABLE_NAME) \\ inline FPrimitiveUniformShaderParametersBuilder& VARIABLE_NAME(INPUT_TYPE In##VARIABLE_NAME)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (b # # VARIABLE_NAME = In # # VARIABLE_NAME ; return* this ; })",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, ReceivesDecals)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HasDistanceFieldRepresentation)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HasCapsuleRepresentation)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HasInstanceLocalBounds)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, CastContactShadow)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, CastHiddenShadow)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, CastShadow)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, UseSingleSampleShadowFromStationaryLights)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, UseVolumetricLightmap)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, CacheShadowAsStatic)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, OutputVelocity)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, EvaluateWorldPositionOffset)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInGame)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInEditor)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, ReverseCulling)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInReflectionCaptures)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInRealTimeSkyCaptures)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInRayTracing)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInLumenScene)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, VisibleInSceneCaptureOnly)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HiddenInSceneCapture)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, ForceHidden)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, Holdout)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, DisableMaterialInvalidations)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, SplineMesh)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, SkinnedMesh)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, AllowInstanceCullingOcclusionQueries)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HasAlwaysEvaluateWPOMaterials)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HasPixelAnimation)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, RayTracingFarField)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, RayTracingHasGroupId)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, HasPerClusterDisplacementFallbackRaster)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD(bool, IsFirstPersonPrimitive)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, InstanceSceneDataOffset)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, NumInstanceSceneDataEntries)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, InstancePayloadDataOffset)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, InstancePayloadDataStride)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, InstancePayloadExtensionSize)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(int32, SingleCaptureIndex)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(int32, PersistentPrimitiveIndex)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, PrimitiveComponentId)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, NaniteResourceID)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, NaniteHierarchyOffset)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, NaniteRayTracingDataOffset)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, LightmapUVIndex)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(uint32, LightmapDataIndex)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(float, MaterialDisplacementFadeOutSize)"
  },
  {
    "label": "PRIMITIVE_UNIFORM_BUILDER_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PRIMITIVE_UNIFORM_BUILDER_METHOD(FUintVector2, MeshPaintTextureDescriptor)"
  },
  {
    "label": "LightingChannelMask()",
    "kind": "Method",
    "detail": "Function (# undef PRIMITIVE_UNIFORM_BUILDER_FLAG_METHOD # undef PRIMITIVE_UNIFORM_BUILDER_METHOD FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "LightingChannelMask(uint32 InLightingChannelMask)"
  },
  {
    "label": "MaxWorldPositionOffsetExtent()",
    "kind": "Method",
    "detail": "Function (LightingChannels = InLightingChannelMask ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "MaxWorldPositionOffsetExtent(float InMaxExtent)"
  },
  {
    "label": "MinMaxMaterialDisplacement()",
    "kind": "Method",
    "detail": "Function (Parameters . MaxWPOExtent = InMaxExtent ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "MinMaxMaterialDisplacement(const FVector2f& InMinMaxDisplacement)"
  },
  {
    "label": "ObjectBounds()",
    "kind": "Method",
    "detail": "Function (Parameters . MinMaterialDisplacement = InMinMaxDisplacement . X ; Parameters . MaxMaterialDisplacement = InMinMaxDisplacement . Y ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "ObjectBounds(const FVector3f& InObjectBounds)"
  },
  {
    "label": "WorldBounds()",
    "kind": "Method",
    "detail": "Function (Parameters . ObjectBoundsX = InObjectBounds . X ; Parameters . ObjectBoundsY = InObjectBounds . Y ; Parameters . ObjectBoundsZ = InObjectBounds . Z ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "WorldBounds(const FBoxSphereBounds& InWorldBounds)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (AbsoluteObjectWorldPosition = InWorldBounds . Origin ; ObjectRadius = static_cast<)",
    "insertText": "float(InWorldBounds.SphereRadius)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (Parameters . ObjectBoundsX = static_cast<)",
    "insertText": "float(InWorldBounds.BoxExtent.X)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (Parameters . ObjectBoundsY = static_cast<)",
    "insertText": "float(InWorldBounds.BoxExtent.Y)"
  },
  {
    "label": "float()",
    "kind": "Method",
    "detail": "Function (Parameters . ObjectBoundsZ = static_cast<)",
    "insertText": "float(InWorldBounds.BoxExtent.Z)"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (Parameters . LocalObjectBoundsMin =)",
    "insertText": "FVector3f(InLocalBounds.GetBoxExtrema(0))"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (Parameters . LocalObjectBoundsMax =)",
    "insertText": "FVector3f(InLocalBounds.GetBoxExtrema(1))"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (bHasPreSkinnedLocalBounds = true ; Parameters . PreSkinnedLocalBoundsMin =)",
    "insertText": "FVector3f(InPreSkinnedLocalBounds.GetBoxExtrema(0))"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (Parameters . PreSkinnedLocalBoundsMax =)",
    "insertText": "FVector3f(InPreSkinnedLocalBounds.GetBoxExtrema(1))"
  },
  {
    "label": "LocalToWorld()",
    "kind": "Method",
    "detail": "Function (AbsoluteActorWorldPosition = InActorWorldPosition ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "LocalToWorld(const FMatrix& InLocalToWorld)"
  },
  {
    "label": "InstanceLocalBounds()",
    "kind": "Method",
    "detail": "Function (AbsoluteLocalToWorld = InLocalToWorld ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "InstanceLocalBounds(const FRenderBounds& InInstanceLocalBounds)"
  },
  {
    "label": "GetCenter()",
    "kind": "Method",
    "detail": "Function (bHasInstanceLocalBounds = true ; Parameters . InstanceLocalBoundsCenter = InInstanceLocalBounds .)",
    "insertText": "GetCenter()"
  },
  {
    "label": "GetExtent()",
    "kind": "Method",
    "detail": "Function (Parameters . InstanceLocalBoundsExtent = InInstanceLocalBounds .)",
    "insertText": "GetExtent()"
  },
  {
    "label": "EditorColors()",
    "kind": "Method",
    "detail": "Function (bHasPreviousLocalToWorld = true ; AbsolutePreviousLocalToWorld = InPreviousLocalToWorld ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "EditorColors(const FLinearColor& InWireframeColor, const FLinearColor& InPrimitiveColor)"
  },
  {
    "label": "QuantizeRound()",
    "kind": "Method",
    "detail": "Function (FColor WireframeColor = InWireframeColor .)",
    "insertText": "QuantizeRound()"
  },
  {
    "label": "FVector2f()",
    "kind": "Method",
    "detail": "Function (Parameters . WireframeAndPrimitiveColor =)",
    "insertText": "FVector2f(FMath::AsFloat(WireframeColor.ToPackedRGBA()), FMath::AsFloat(PrimitiveColor.ToPackedRGBA()))"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(&Parameters.CustomPrimitiveData, InCustomPrimitiveData->Data.GetData(), InCustomPrimitiveData->Data.GetTypeSize() * FMath::Min(InCustomPrimitiveData->Data.Num(), FCustomPrimitiveData::NumCustomPrimitiveDataFloats))"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (bHasCustomData = true ; } else {)",
    "insertText": "Memzero(Parameters.CustomPrimitiveData)"
  },
  {
    "label": "NaniteImposterIndex()",
    "kind": "Method",
    "detail": "Function (bHasCustomData = false ; } return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "NaniteImposterIndex(uint32 ImposterIndex)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (bHasNaniteImposter = ImposterIndex ! = INDEX_NONE ;)",
    "insertText": "check(!bHasNaniteImposter || ImposterIndex < NANITE_IMPOSTER_INDEX_MASK)"
  },
  {
    "label": "PackedNaniteFlags()",
    "kind": "Method",
    "detail": "Function (Parameters .)",
    "insertText": "PackedNaniteFlags(Parameters.PackedNaniteFlags & NANITE_FILTER_FLAGS_MASK) | (ImposterIndex & NANITE_IMPOSTER_INDEX_MASK)"
  },
  {
    "label": "PackedNaniteFlags()",
    "kind": "Method",
    "detail": "Function (Parameters .)",
    "insertText": "PackedNaniteFlags(FilterFlags << NANITE_IMPOSTER_INDEX_NUM_BITS) | (Parameters.PackedNaniteFlags & NANITE_IMPOSTER_INDEX_MASK)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (uint32 GPUStencilMask ;)",
    "insertText": "switch(StencilWriteMask)"
  },
  {
    "label": "CustomStencilValueAndMask()",
    "kind": "Method",
    "detail": "Function (break ; } Parameters .)",
    "insertText": "CustomStencilValueAndMask(GPUStencilMask << 8u)"
  },
  {
    "label": "InstanceDrawDistance()",
    "kind": "Method",
    "detail": "Function (bWritesCustomDepthStencil = true ; return* this ; } FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "InstanceDrawDistance(FVector2f DistanceMinMax)"
  },
  {
    "label": "InstanceWorldPositionOffsetDisableDistance()",
    "kind": "Method",
    "detail": "Function (FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "InstanceWorldPositionOffsetDisableDistance(float WPODisableDistance)"
  },
  {
    "label": "PixelProgrammableDistance()",
    "kind": "Method",
    "detail": "Function (FPrimitiveUniformShaderParametersBuilder&)",
    "insertText": "PixelProgrammableDistance(float PixelProgrammableDistance)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (const FPrimitiveUniformShaderParameters&)",
    "insertText": "Build()"
  },
  {
    "label": "AbsoluteWorldPosition()",
    "kind": "Method",
    "detail": "Function (const FDFVector3)",
    "insertText": "AbsoluteWorldPosition(AbsoluteLocalToWorld.GetOrigin())"
  },
  {
    "label": "PositionHigh()",
    "kind": "Method",
    "detail": "Function (const FVector)",
    "insertText": "PositionHigh(AbsoluteWorldPosition.High)"
  },
  {
    "label": "MakeToRelativeWorldMatrixDouble()",
    "kind": "Method",
    "detail": "Function (Parameters . PositionHigh = AbsoluteWorldPosition . High ; { FMatrix LocalToRelativeWorld =)",
    "insertText": "MakeToRelativeWorldMatrixDouble(PositionHigh, AbsoluteLocalToWorld)"
  },
  {
    "label": "MakeClampedToRelativeWorldMatrixDouble()",
    "kind": "Method",
    "detail": "Function (FMatrix PrevLocalToRelativeWorld =)",
    "insertText": "MakeClampedToRelativeWorldMatrixDouble(PositionHigh, AbsolutePreviousLocalToWorld)"
  },
  {
    "label": "Inverse()",
    "kind": "Method",
    "detail": "Function (FMatrix RelativeWorldToLocal = LocalToRelativeWorld .)",
    "insertText": "Inverse()"
  },
  {
    "label": "FMatrix44f()",
    "kind": "Method",
    "detail": "Function (Parameters . LocalToRelativeWorld =)",
    "insertText": "FMatrix44f(LocalToRelativeWorld)"
  },
  {
    "label": "FMatrix44f()",
    "kind": "Method",
    "detail": "Function (Parameters . RelativeWorldToLocal =)",
    "insertText": "FMatrix44f(RelativeWorldToLocal)"
  },
  {
    "label": "FMatrix44f()",
    "kind": "Method",
    "detail": "Function (Parameters . WorldToPreviousWorld =)",
    "insertText": "FMatrix44f(RelativeWorldToLocal * PrevLocalToRelativeWorld)"
  },
  {
    "label": "FMatrix44f()",
    "kind": "Method",
    "detail": "Function (Parameters . PreviousLocalToRelativeWorld =)",
    "insertText": "FMatrix44f(PrevLocalToRelativeWorld)"
  },
  {
    "label": "FMatrix44f()",
    "kind": "Method",
    "detail": "Function (Parameters . PreviousRelativeWorldToLocal =)",
    "insertText": "FMatrix44f(PrevLocalToRelativeWorld.Inverse())"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} else { Parameters . PreviousLocalToRelativeWorld = Parameters . LocalToRelativeWorld ; Parameters . PreviousRelativeWorldToLocal = Parameters . RelativeWorldToLocal ; } } TConsoleVariableData<int32>* CVarPrimitiveHasTileOffsetData = nullptr ; CVarPrimitiveHasTileOffsetData = CVarPrimitiveHasTileOffsetData ? CVarPrimitiveHasTileOffsetData :)",
    "insertText": "Get().FindTConsoleVariableDataInt(TEXT(\"r.PrimitiveHasTileOffsetData\"))"
  },
  {
    "label": "CVarPrimitiveHasTileOffsetData()",
    "kind": "Method",
    "detail": "Function (const bool bPrimitiveHasTileOffsetData =)",
    "insertText": "CVarPrimitiveHasTileOffsetData(CVarPrimitiveHasTileOffsetData->GetValueOnAnyThread() != 0)"
  },
  {
    "label": "GetTile()",
    "kind": "Method",
    "detail": "Function (const FLargeWorldRenderPosition AbsoluteActorWorldPositionTO { AbsoluteActorWorldPosition } ; Parameters . ActorWorldPositionHigh = AbsoluteActorWorldPositionTO .)",
    "insertText": "GetTile()"
  },
  {
    "label": "GetOffset()",
    "kind": "Method",
    "detail": "Function (Parameters . ActorWorldPositionLow = AbsoluteActorWorldPositionTO .)",
    "insertText": "GetOffset()"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (const FLargeWorldRenderPosition ObjectWorldPositionTO { AbsoluteObjectWorldPosition } ; Parameters . ObjectWorldPositionHighAndRadius =)",
    "insertText": "FVector4f(ObjectWorldPositionTO.GetTile(), ObjectRadius)"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (} else { const FDFVector3 AbsoluteActorWorldPositionDF { AbsoluteActorWorldPosition } ; Parameters . ActorWorldPositionHigh = AbsoluteActorWorldPositionDF . High ; Parameters . ActorWorldPositionLow = AbsoluteActorWorldPositionDF . Low ; const FDFVector3 ObjectWorldPosition { AbsoluteObjectWorldPosition } ; Parameters . ObjectWorldPositionHighAndRadius =)",
    "insertText": "FVector4f(ObjectWorldPosition.High, ObjectRadius)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Parameters . ObjectWorldPositionLow = ObjectWorldPosition . Low ; })",
    "insertText": "if(!bHasInstanceLocalBounds)"
  },
  {
    "label": "InstanceLocalBounds()",
    "kind": "Method",
    "detail": "Function (FRenderBounds)",
    "insertText": "InstanceLocalBounds(Parameters.LocalObjectBoundsMin, Parameters.LocalObjectBoundsMax)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(!bHasPreSkinnedLocalBounds)"
  },
  {
    "label": "GetUnitAxis()",
    "kind": "Method",
    "detail": "Function (Parameters . PreSkinnedLocalBoundsMin = Parameters . LocalObjectBoundsMin ; Parameters . PreSkinnedLocalBoundsMax = Parameters . LocalObjectBoundsMax ; } Parameters . ObjectOrientation = Parameters . LocalToRelativeWorld .)",
    "insertText": "GetUnitAxis(EAxis::Z)"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function ({ FVector4f WorldX =)",
    "insertText": "FVector4f(Parameters.LocalToRelativeWorld.M[0][0], Parameters.LocalToRelativeWorld.M[0][1], Parameters.LocalToRelativeWorld.M[0][2], 0)"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (FVector4f WorldY =)",
    "insertText": "FVector4f(Parameters.LocalToRelativeWorld.M[1][0], Parameters.LocalToRelativeWorld.M[1][1], Parameters.LocalToRelativeWorld.M[1][2], 0)"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (FVector4f WorldZ =)",
    "insertText": "FVector4f(Parameters.LocalToRelativeWorld.M[2][0], Parameters.LocalToRelativeWorld.M[2][1], Parameters.LocalToRelativeWorld.M[2][2], 0)"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (float ScaleX =)",
    "insertText": "FVector3f(WorldX).Size()"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (float ScaleY =)",
    "insertText": "FVector3f(WorldY).Size()"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (float ScaleZ =)",
    "insertText": "FVector3f(WorldZ).Size()"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (Parameters . NonUniformScale =)",
    "insertText": "FVector4f(ScaleX, ScaleY, ScaleZ, FMath::Max3(FMath::Abs(ScaleX), FMath::Abs(ScaleY), FMath::Abs(ScaleZ)))"
  },
  {
    "label": "FVector3f()",
    "kind": "Method",
    "detail": "Function (Parameters . InvNonUniformScale =)",
    "insertText": "FVector3f(ScaleX > UE_KINDA_SMALL_NUMBER ? 1.0f / ScaleX : 0.0f, ScaleY > UE_KINDA_SMALL_NUMBER ? 1.0f / ScaleY : 0.0f, ScaleZ > UE_KINDA_SMALL_NUMBER ? 1.0f / ScaleZ : 0.0f)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (} Parameters . SingleCaptureIndex =)",
    "insertText": "Max(Parameters.SingleCaptureIndex, 0)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (Parameters . Flags = 0 ; Parameters . Flags | = bReceivesDecals ? PRIMITIVE_SCENE_DATA_FLAG_DECAL_RECEIVER : 0 u ; Parameters . Flags | = bHasDistanceFieldRepresentation ? PRIMITIVE_SCENE_DATA_FLAG_HAS_DISTANCE_FIELD_REPRESENTATION : 0 u ; Parameters . Flags | = bHasCapsuleRepresentation ? PRIMITIVE_SCENE_DATA_FLAG_HAS_CAPSULE_REPRESENTATION : 0 u ; Parameters . Flags | = bUseSingleSampleShadowFromStationaryLights ? PRIMITIVE_SCENE_DATA_FLAG_USE_SINGLE_SAMPLE_SHADOW_SL : 0 u ; Parameters .)",
    "insertText": "Flags(bUseVolumetricLightmap && bUseSingleSampleShadowFromStationaryLights)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (Parameters . Flags | = bCacheShadowAsStatic ? PRIMITIVE_SCENE_DATA_FLAG_CACHE_SHADOW_AS_STATIC : 0 u ; Parameters . Flags | = bOutputVelocity ? PRIMITIVE_SCENE_DATA_FLAG_OUTPUT_VELOCITY : 0 u ; Parameters . Flags | = bEvaluateWorldPositionOffset ? PRIMITIVE_SCENE_DATA_FLAG_EVALUATE_WORLD_POSITION_OFFSET : 0 u ; Parameters .)",
    "insertText": "Flags(Parameters.LocalToRelativeWorld.RotDeterminant() < 0.0f)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (Parameters . Flags | = bHasCustomData ? PRIMITIVE_SCENE_DATA_FLAG_HAS_PRIMITIVE_CUSTOM_DATA : 0 u ; Parameters .)",
    "insertText": "Flags((LightingChannels & 0x1) != 0)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (Parameters .)",
    "insertText": "Flags((LightingChannels & 0x2) != 0)"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (Parameters .)",
    "insertText": "Flags((LightingChannels & 0x4) != 0)"
  }
]