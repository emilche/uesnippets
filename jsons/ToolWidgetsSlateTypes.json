[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActionButtonStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActionButtonStyle"
  },
  {
    "label": "UToolSlateWidgetTypesFunctionLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolSlateWidgetTypesFunctionLibrary"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Styling / SlateTypes . h \" # include \" Styling / SlateWidgetStyle . h \" # include \" UObject / Object . h \" # include \" ToolWidgetsSlateTypes . generated . h \" enum class EActionButtonType : uint8 { Default,Simple,Primary,Positive,Warning,Error,Num,} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() TOOLWIDGETS_API FActionButtonStyle()"
  },
  {
    "label": "GetResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResources(TArray<const FSlateBrush*>& OutBrushes)"
  },
  {
    "label": "GetTypeName()",
    "kind": "Method",
    "detail": "Function (const FName ; const FName)",
    "insertText": "GetTypeName()"
  },
  {
    "label": "GetDefault()",
    "kind": "Method",
    "detail": "Function (; const FActionButtonStyle&)",
    "insertText": "GetDefault()"
  },
  {
    "label": "GetActionButtonType()",
    "kind": "Method",
    "detail": "Function (EActionButtonType)",
    "insertText": "GetActionButtonType()"
  },
  {
    "label": "SetActionButtonType()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetActionButtonType(const EActionButtonType InActionButtonType)"
  },
  {
    "label": "SetButtonStyle()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetButtonStyle(const FButtonStyle& InButtonStyle)"
  },
  {
    "label": "GetIconButtonStyle()",
    "kind": "Method",
    "detail": "Function (const FButtonStyle&)",
    "insertText": "GetIconButtonStyle()"
  },
  {
    "label": "SetIconButtonStyle()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetIconButtonStyle(const FButtonStyle& InButtonStyle)"
  },
  {
    "label": "GetButtonContentPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetButtonContentPadding()"
  },
  {
    "label": "SetButtonContentPadding()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetButtonContentPadding(const FMargin& InContentPadding)"
  },
  {
    "label": "SetComboButtonStyle()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetComboButtonStyle(const FComboButtonStyle& InComboButtonStyle)"
  },
  {
    "label": "SetHasDownArrow()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetHasDownArrow(const bool& bInHasDownArrow)"
  },
  {
    "label": "GetComboButtonContentPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetComboButtonContentPadding()"
  },
  {
    "label": "SetComboButtonContentPadding()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetComboButtonContentPadding(const FMargin& InContentPadding)"
  },
  {
    "label": "SetHorizontalContentAlignment()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetHorizontalContentAlignment(const EHorizontalAlignment& InAlignment)"
  },
  {
    "label": "SetTextBlockStyle()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetTextBlockStyle(const FTextBlockStyle& InTextBlockStyle)"
  },
  {
    "label": "SetIconBrush()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetIconBrush(const FSlateBrush& InIconBrush)"
  },
  {
    "label": "SetIconColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FActionButtonStyle&)",
    "insertText": "SetIconColorAndOpacity(const FSlateColor& InIconColorAndOpacity)"
  },
  {
    "label": "UnlinkColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlinkColors()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: #if WITH_EDITOR UFUNCTION() static const TArray<FName>& GetActionButtonTypeNames()"
  }
]