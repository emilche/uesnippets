[
  {
    "label": "llvm_regex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "llvm_regex"
  },
  {
    "label": "StringRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringRef"
  },
  {
    "label": "SmallVectorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallVectorImpl"
  },
  {
    "label": "Regex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Regex"
  },
  {
    "label": "llvm_regex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "llvm_regex"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValid(std::string &Error)"
  },
  {
    "label": "match()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "match(StringRef String, SmallVectorImpl<StringRef> *Matches = nullptr)"
  },
  {
    "label": "sub()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "sub(StringRef Repl, StringRef String,\n                    std::string *Error = nullptr)"
  },
  {
    "label": "isLiteralERE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isLiteralERE(StringRef Str)"
  },
  {
    "label": "escape()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "escape(StringRef String)"
  }
]