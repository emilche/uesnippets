[
  {
    "label": "TOOLWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOOLWIDGETS_API"
  },
  {
    "label": "ITextDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextDecorator"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SCustomDialog . h \" class SMessageDialog : public SCustomDialog { public : using FButton = SCustomDialog::FButton ;)",
    "insertText": "SLATE_BEGIN_ARGS(SMessageDialog) : _AutoCloseOnButtonPress(true) , _UseRichText(true) , _DecoratorStyleSet(nullptr) , _Icon(nullptr) , _UseScrollBox(true) , _ScrollBoxMaxHeight(300) , _WrapMessageAt(512.f)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FText, Title) SLATE_ARGUMENT(FText, Message) SLATE_ARGUMENT(TArray<FButton>, Buttons) SLATE_EVENT(FSimpleDelegate, OnClosed) SLATE_ARGUMENT(SWindow::FArguments, WindowArguments) SLATE_ARGUMENT(bool, AutoCloseOnButtonPress) SLATE_ARGUMENT(bool, UseRichText) SLATE_ARGUMENT(TArray<TSharedRef<class ITextDecorator>>, Decorators) SLATE_ARGUMENT(const ISlateStyle*, DecoratorStyleSet) SLATE_ARGUMENT(const FSlateBrush*, Icon) SLATE_ARGUMENT(bool, UseScrollBox) SLATE_ARGUMENT(int32, ScrollBoxMaxHeight) SLATE_ATTRIBUTE(float, WrapMessageAt) SLATE_ATTRIBUTE(float, ContentMinWidth) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnCopyMessage()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCopyMessage()"
  },
  {
    "label": "CopyMessageToClipboard()",
    "kind": "Method",
    "detail": "Function (private : FText Message ; void)",
    "insertText": "CopyMessageToClipboard()"
  }
]