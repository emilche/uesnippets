[
  {
    "label": "FLinkerTables",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerTables"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FObjectImport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectImport"
  },
  {
    "label": "FObjectRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectRef"
  },
  {
    "label": "FPackedObjectRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackedObjectRef"
  },
  {
    "label": "FStoredObjectPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStoredObjectPath"
  },
  {
    "label": "FObjectPathId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPathId"
  },
  {
    "label": "EInvalid",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInvalid"
  },
  {
    "label": "FObjectPathId()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FObjectPathId(const UObject* Object)"
  },
  {
    "label": "MakeImportPathIdAndPackageName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MakeImportPathIdAndPackageName(const FObjectImport& Import, const FLinkerTables& LinkerTables, FObjectPathId& OutPathId)"
  },
  {
    "label": "FObjectPathId()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FObjectPathId(FWideStringView StringPath)"
  },
  {
    "label": "FObjectPathId()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FObjectPathId(FAnsiStringView StringPath)"
  },
  {
    "label": "MakeWeakObjPtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeWeakObjPtr(const UObject& Object)"
  },
  {
    "label": "StoreObjectPathId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreObjectPathId(NameProducerType& NameProducer)"
  }
]