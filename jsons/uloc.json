[
  {
    "label": "uloc_getDefault()",
    "kind": "Method",
    "detail": "Function (# ifndef ULOC_H # define ULOC_H # include \" unicode / utypes . h \" # include \" unicode / uenum . h \" # define ULOC_CHINESE \" zh \" # define ULOC_ENGLISH \" en \" # define ULOC_FRENCH \" fr \" # define ULOC_GERMAN \" de \" # define ULOC_ITALIAN \" it \" # define ULOC_JAPANESE \" ja \" # define ULOC_KOREAN \" ko \" # define ULOC_SIMPLIFIED_CHINESE \" zh_CN \" # define ULOC_TRADITIONAL_CHINESE \" zh_TW \" # define ULOC_CANADA \" en_CA \" # define ULOC_CANADA_FRENCH \" fr_CA \" # define ULOC_CHINA \" zh_CN \" # define ULOC_PRC \" zh_CN \" # define ULOC_FRANCE \" fr_FR \" # define ULOC_GERMANY \" de_DE \" # define ULOC_ITALY \" it_IT \" # define ULOC_JAPAN \" ja_JP \" # define ULOC_KOREA \" ko_KR \" # define ULOC_TAIWAN \" zh_TW \" # define ULOC_UK \" en_GB \" # define ULOC_US \" en_US \" # define ULOC_LANG_CAPACITY 1 2 # define ULOC_COUNTRY_CAPACITY 4 # define ULOC_FULLNAME_CAPACITY 1 5 7 # define ULOC_SCRIPT_CAPACITY 6 # define ULOC_KEYWORDS_CAPACITY 9 6 # define ULOC_KEYWORD_AND_VALUES_CAPACITY 1 0 0 # define ULOC_KEYWORD_SEPARATOR ' @ ' # define ULOC_KEYWORD_SEPARATOR_UNICODE 0 x40 # define ULOC_KEYWORD_ASSIGN ' = ' # define ULOC_KEYWORD_ASSIGN_UNICODE 0 x3D # define ULOC_KEYWORD_ITEM_SEPARATOR ' ; ' # define ULOC_KEYWORD_ITEM_SEPARATOR_UNICODE 0 x3B typedef enum { ULOC_ACTUAL_LOCALE = 0,ULOC_VALID_LOCALE = 1,# ifndef ULOC_REQUESTED_LOCALE = 2,ULOC_DATA_LOCALE_TYPE_LIMIT = 3 # endif } ULocDataLocaleType ; # ifndef U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_getDefault(void)"
  },
  {
    "label": "uloc_setDefault()",
    "kind": "Method",
    "detail": "Function (U_STABLE void U_EXPORT2)",
    "insertText": "uloc_setDefault(const char* localeID, UErrorCode* status)"
  },
  {
    "label": "uloc_getLanguage()",
    "kind": "Method",
    "detail": "Function (# endif U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getLanguage(const char* localeID, char* language, int32_t languageCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_getScript()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getScript(const char* localeID, char* script, int32_t scriptCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_getCountry()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getCountry(const char* localeID, char* country, int32_t countryCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_getVariant()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getVariant(const char* localeID, char* variant, int32_t variantCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_getName()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getName(const char* localeID, char* name, int32_t nameCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_canonicalize()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_canonicalize(const char* localeID, char* name, int32_t nameCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_getISO3Language()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_getISO3Language(const char* localeID)"
  },
  {
    "label": "uloc_getISO3Country()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_getISO3Country(const char* localeID)"
  },
  {
    "label": "uloc_getLCID()",
    "kind": "Method",
    "detail": "Function (U_STABLE uint32_t U_EXPORT2)",
    "insertText": "uloc_getLCID(const char* localeID)"
  },
  {
    "label": "uloc_getDisplayLanguage()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayLanguage(const char* locale, const char* displayLocale, UChar* language, int32_t languageCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_getDisplayScript()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayScript(const char* locale, const char* displayLocale, UChar* script, int32_t scriptCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_getDisplayCountry()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayCountry(const char* locale, const char* displayLocale, UChar* country, int32_t countryCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_getDisplayVariant()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayVariant(const char* locale, const char* displayLocale, UChar* variant, int32_t variantCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_getDisplayKeyword()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayKeyword(const char* keyword, const char* displayLocale, UChar* dest, int32_t destCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_getDisplayKeywordValue()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayKeywordValue(const char* locale, const char* keyword, const char* displayLocale, UChar* dest, int32_t destCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_getDisplayName()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getDisplayName(const char* localeID, const char* inLocaleID, UChar* result, int32_t maxResultSize, UErrorCode* err)"
  },
  {
    "label": "uloc_getAvailable()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_getAvailable(int32_t n)"
  },
  {
    "label": "uloc_countAvailable()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_countAvailable(void)"
  },
  {
    "label": "uloc_getISOLanguages()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* const* U_EXPORT2)",
    "insertText": "uloc_getISOLanguages(void)"
  },
  {
    "label": "uloc_getISOCountries()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* const* U_EXPORT2)",
    "insertText": "uloc_getISOCountries(void)"
  },
  {
    "label": "uloc_getParent()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getParent(const char* localeID, char* parent, int32_t parentCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_getBaseName()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getBaseName(const char* localeID, char* name, int32_t nameCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_openKeywords()",
    "kind": "Method",
    "detail": "Function (U_STABLE UEnumeration* U_EXPORT2)",
    "insertText": "uloc_openKeywords(const char* localeID, UErrorCode* status)"
  },
  {
    "label": "uloc_getKeywordValue()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getKeywordValue(const char* localeID, const char* keywordName, char* buffer, int32_t bufferCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_setKeywordValue()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_setKeywordValue(const char* keywordName, const char* keywordValue, char* buffer, int32_t bufferCapacity, UErrorCode* status)"
  },
  {
    "label": "uloc_isRightToLeft()",
    "kind": "Method",
    "detail": "Function (U_STABLE UBool U_EXPORT2)",
    "insertText": "uloc_isRightToLeft(const char *locale)"
  },
  {
    "label": "uloc_getCharacterOrientation()",
    "kind": "Method",
    "detail": "Function (typedef enum { ULOC_LAYOUT_LTR = 0,ULOC_LAYOUT_RTL = 1,ULOC_LAYOUT_TTB = 2,ULOC_LAYOUT_BTT = 3,ULOC_LAYOUT_UNKNOWN } ULayoutType ; U_STABLE ULayoutType U_EXPORT2)",
    "insertText": "uloc_getCharacterOrientation(const char* localeId, UErrorCode *status)"
  },
  {
    "label": "uloc_getLineOrientation()",
    "kind": "Method",
    "detail": "Function (U_STABLE ULayoutType U_EXPORT2)",
    "insertText": "uloc_getLineOrientation(const char* localeId, UErrorCode *status)"
  },
  {
    "label": "uloc_acceptLanguageFromHTTP()",
    "kind": "Method",
    "detail": "Function (typedef enum { ULOC_ACCEPT_FAILED = 0,ULOC_ACCEPT_VALID = 1,ULOC_ACCEPT_FALLBACK = 2 } UAcceptResult ; U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_acceptLanguageFromHTTP(char *result, int32_t resultAvailable, UAcceptResult *outResult, const char *httpAcceptLanguage, UEnumeration* availableLocales, UErrorCode *status)"
  },
  {
    "label": "uloc_acceptLanguage()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_acceptLanguage(char *result, int32_t resultAvailable, UAcceptResult *outResult, const char **acceptList, int32_t acceptListCount, UEnumeration* availableLocales, UErrorCode *status)"
  },
  {
    "label": "uloc_getLocaleForLCID()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_getLocaleForLCID(uint32_t hostID, char *locale, int32_t localeCapacity, UErrorCode *status)"
  },
  {
    "label": "uloc_addLikelySubtags()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_addLikelySubtags(const char* localeID, char* maximizedLocaleID, int32_t maximizedLocaleIDCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_minimizeSubtags()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_minimizeSubtags(const char* localeID, char* minimizedLocaleID, int32_t minimizedLocaleIDCapacity, UErrorCode* err)"
  },
  {
    "label": "uloc_forLanguageTag()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_forLanguageTag(const char* langtag, char* localeID, int32_t localeIDCapacity, int32_t* parsedLength, UErrorCode* err)"
  },
  {
    "label": "uloc_toLanguageTag()",
    "kind": "Method",
    "detail": "Function (U_STABLE int32_t U_EXPORT2)",
    "insertText": "uloc_toLanguageTag(const char* localeID, char* langtag, int32_t langtagCapacity, UBool strict, UErrorCode* err)"
  },
  {
    "label": "uloc_toUnicodeLocaleKey()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_toUnicodeLocaleKey(const char* keyword)"
  },
  {
    "label": "uloc_toUnicodeLocaleType()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_toUnicodeLocaleType(const char* keyword, const char* value)"
  },
  {
    "label": "uloc_toLegacyKey()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_toLegacyKey(const char* keyword)"
  },
  {
    "label": "uloc_toLegacyType()",
    "kind": "Method",
    "detail": "Function (U_STABLE const char* U_EXPORT2)",
    "insertText": "uloc_toLegacyType(const char* keyword, const char* value)"
  }
]