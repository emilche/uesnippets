[
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "DownsizeTextureSourceData()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreTypes . h \" # include \" Engine / TextureDefines . h \" class UTexture ; class ITargetPlatform ; namespace UE::TextureUtilitiesCommon::Experimental { bool)",
    "insertText": "DownsizeTextureSourceData(UTexture* Texture, int32 TargetSourceSize, const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "ResizeTextureSourceDataToNearestPowerOfTwo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResizeTextureSourceDataToNearestPowerOfTwo(UTexture* Texture)"
  },
  {
    "label": "DownsizeTextureSourceDataNearRenderingSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DownsizeTextureSourceDataNearRenderingSize(UTexture* Texture, const ITargetPlatform* TargetPlatform, int32 AdditionalSourceSizeLimit = 16384)"
  },
  {
    "label": "ChangeTextureSourceFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ChangeTextureSourceFormat(UTexture* Texture, ETextureSourceFormat NewFormat)"
  },
  {
    "label": "CompressTextureSourceWithJPEG()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompressTextureSourceWithJPEG(UTexture* Texture,int32 Quality = 0)"
  }
]