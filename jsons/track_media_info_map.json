[
  {
    "label": "TrackMediaInfoMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TrackMediaInfoMap"
  },
  {
    "label": "TrackMediaInfoMap()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_TRACK_MEDIA_INFO_MAP_H_ # define PC_TRACK_MEDIA_INFO_MAP_H_ # include<stdint . h> # include<map> # include<memory> # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / media_stream_interface . h \" # include \" api / scoped_refptr . h \" # include \" media / base / media_channel . h \" # include \" pc / rtp_receiver . h \" # include \" pc / rtp_sender . h \" # include \" rtc_base / ref_count . h \" namespace webrtc { class TrackMediaInfoMap { public :)",
    "insertText": "TrackMediaInfoMap()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(absl::optional<cricket::VoiceMediaInfo> voice_media_info, absl::optional<cricket::VideoMediaInfo> video_media_info, rtc::ArrayView<rtc::scoped_refptr<RtpSenderInternal>> rtp_senders, rtc::ArrayView<rtc::scoped_refptr<RtpReceiverInternal>> rtp_receivers)"
  },
  {
    "label": "voice_media_info()",
    "kind": "Method",
    "detail": "Function (const absl::optional<cricket::VoiceMediaInfo>&)",
    "insertText": "voice_media_info()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(is_initialized_)"
  },
  {
    "label": "GetVoiceReceiverInfo()",
    "kind": "Method",
    "detail": "Function (const cricket::VoiceReceiverInfo*)",
    "insertText": "GetVoiceReceiverInfo(const AudioTrackInterface& remote_audio_track)"
  },
  {
    "label": "GetVideoSenderInfos()",
    "kind": "Method",
    "detail": "Function (const std::vector<cricket::VideoSenderInfo*>*)",
    "insertText": "GetVideoSenderInfos(const VideoTrackInterface& local_video_track)"
  },
  {
    "label": "GetVideoReceiverInfo()",
    "kind": "Method",
    "detail": "Function (const cricket::VideoReceiverInfo*)",
    "insertText": "GetVideoReceiverInfo(const VideoTrackInterface& remote_video_track)"
  },
  {
    "label": "GetVoiceSenderInfoBySsrc()",
    "kind": "Method",
    "detail": "Function (const cricket::VoiceSenderInfo*)",
    "insertText": "GetVoiceSenderInfoBySsrc(uint32_t ssrc)"
  },
  {
    "label": "GetVoiceReceiverInfoBySsrc()",
    "kind": "Method",
    "detail": "Function (const cricket::VoiceReceiverInfo*)",
    "insertText": "GetVoiceReceiverInfoBySsrc(uint32_t ssrc)"
  },
  {
    "label": "GetVideoSenderInfoBySsrc()",
    "kind": "Method",
    "detail": "Function (const cricket::VideoSenderInfo*)",
    "insertText": "GetVideoSenderInfoBySsrc(uint32_t ssrc)"
  },
  {
    "label": "GetVideoReceiverInfoBySsrc()",
    "kind": "Method",
    "detail": "Function (const cricket::VideoReceiverInfo*)",
    "insertText": "GetVideoReceiverInfoBySsrc(uint32_t ssrc)"
  },
  {
    "label": "GetAudioTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<AudioTrackInterface>)",
    "insertText": "GetAudioTrack(const cricket::VoiceSenderInfo& voice_sender_info)"
  },
  {
    "label": "GetAudioTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<AudioTrackInterface>)",
    "insertText": "GetAudioTrack(const cricket::VoiceReceiverInfo& voice_receiver_info)"
  },
  {
    "label": "GetVideoTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoTrackInterface>)",
    "insertText": "GetVideoTrack(const cricket::VideoSenderInfo& video_sender_info)"
  },
  {
    "label": "GetVideoTrack()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<VideoTrackInterface>)",
    "insertText": "GetVideoTrack(const cricket::VideoReceiverInfo& video_receiver_info)"
  },
  {
    "label": "GetAttachmentIdByTrack()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "GetAttachmentIdByTrack(const MediaStreamTrackInterface* track)"
  }
]