[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SCompoundWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCompoundWidget"
  },
  {
    "label": "FCompoundWidgetOneChildSlot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompoundWidgetOneChildSlot"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Styling / SlateColor . h \" # include \" Types / SlateAttribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Children . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class SCompoundWidget : public SWidget {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SCompoundWidget, SWidget, SLATECORE_API) public: const FVector2D GetContentScale()"
  },
  {
    "label": "SetContentScale()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetContentScale(TAttribute<FVector2D> InContentScale)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (ContentScaleAttribute .)",
    "insertText": "Assign(*this, MoveTemp(InContentScale))"
  },
  {
    "label": "GetColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetColorAndOpacity()"
  },
  {
    "label": "SetColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetColorAndOpacity(TAttribute<FLinearColor> InColorAndOpacity)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (ColorAndOpacityAttribute .)",
    "insertText": "Assign(*this, MoveTemp(InColorAndOpacity))"
  },
  {
    "label": "SetForegroundColor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetForegroundColor(TAttribute<FSlateColor> InForegroundColor)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} public : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetForegroundColor()"
  },
  {
    "label": "SetVisibility()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetVisibility(TAttribute<EVisibility> InVisibility)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (protected : FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "GetContentScaleAttribute()",
    "kind": "Method",
    "detail": "Function (TSlateAttributeRef<FVector2D>)",
    "insertText": "GetContentScaleAttribute()"
  },
  {
    "label": "GetColorAndOpacityAttribute()",
    "kind": "Method",
    "detail": "Function (} TSlateAttributeRef<FLinearColor>)",
    "insertText": "GetColorAndOpacityAttribute()"
  },
  {
    "label": "GetForegroundColorAttribute()",
    "kind": "Method",
    "detail": "Function (} TSlateAttributeRef<FSlateColor>)",
    "insertText": "GetForegroundColorAttribute()"
  },
  {
    "label": "SCompoundWidget()",
    "kind": "Method",
    "detail": "Function (} protected :)",
    "insertText": "SCompoundWidget()"
  }
]