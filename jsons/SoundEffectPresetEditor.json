[
  {
    "label": "FEditPropertyChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditPropertyChain"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "USoundEffectPreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundEffectPreset"
  },
  {
    "label": "UUserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserWidget"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FSoundEffectPresetEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundEffectPresetEditor"
  },
  {
    "label": "FSoundEffectPresetEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" EditorUndoClient . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Misc / NotifyHook . h \" # include \" Templates / SharedPointer . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" Toolkits / IToolkit . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / StrongObjectPtr . h \" class FEditPropertyChain ; class FProperty ; class FSpawnTabArgs ; class FTabManager ; class IDetailsView ; class IToolkitHost ; class SDockTab ; class USoundEffectPreset ; class UUserWidget ; struct FPropertyChangedEvent ; class FSoundEffectPresetEditor : public FAssetEditorToolkit,public FNotifyHook,public FEditorUndoClient { public :)",
    "insertText": "FSoundEffectPresetEditor()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const EToolkitMode::Type Mode, const TSharedPtr<IToolkitHost>& InitToolkitHost, USoundEffectPreset* PresetToEdit, const TArray<UUserWidget*>& InWidgetBlueprints)"
  },
  {
    "label": "CloseWindow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseWindow(EAssetEditorCloseReason InCloseReason)"
  },
  {
    "label": "GetEditorName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetEditorName()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<FTabManager>& TabManager)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FProperty* PropertyThatChanged)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FEditPropertyChain* PropertyThatChanged)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "InitPresetWidgets()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitPresetWidgets(const TArray<UUserWidget*>& InWidgets)"
  },
  {
    "label": "SpawnTab_UserWidgetEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_UserWidgetEditor(const FSpawnTabArgs& Args, int32 WidgetIndex)"
  },
  {
    "label": "SpawnTab_Properties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Properties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "GetSnapLabelOrientation()",
    "kind": "Method",
    "detail": "Function (EOrientation)",
    "insertText": "GetSnapLabelOrientation()"
  }
]