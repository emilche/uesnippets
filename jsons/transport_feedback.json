[
  {
    "label": "CommonHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommonHeader"
  },
  {
    "label": "TransportFeedback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransportFeedback"
  },
  {
    "label": "ReceivedPacket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReceivedPacket"
  },
  {
    "label": "LastChunk",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LastChunk"
  },
  {
    "label": "TransportFeedback()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "TransportFeedback(bool include_timestamps,\n                             bool include_lost = false)"
  },
  {
    "label": "SetBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBase(uint16_t base_sequence,    // Seq# of first packet in this msg.\n               Timestamp ref_timestamp)"
  },
  {
    "label": "SetFeedbackSequenceNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFeedbackSequenceNumber(uint8_t feedback_sequence)"
  },
  {
    "label": "AddReceivedPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddReceivedPacket(uint16_t sequence_number, Timestamp timestamp)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const CommonHeader& packet)"
  },
  {
    "label": "ParseFrom()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<TransportFeedback>)",
    "insertText": "ParseFrom(const uint8_t* buffer,\n                                                      size_t length)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(DeltaSize delta_size)"
  },
  {
    "label": "AddMissingPackets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMissingPackets(size_t num_missing)"
  },
  {
    "label": "Emit()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "Emit()"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decode(uint16_t chunk, size_t max_size)"
  },
  {
    "label": "DecodeOneBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeOneBit(uint16_t chunk, size_t max_size)"
  },
  {
    "label": "DecodeTwoBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeTwoBit(uint16_t chunk, size_t max_size)"
  },
  {
    "label": "DecodeRunLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeRunLength(uint16_t chunk, size_t max_size)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "AddDeltaSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDeltaSize(DeltaSize delta_size)"
  },
  {
    "label": "AddMissingPackets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMissingPackets(size_t num_missing_packets)"
  }
]