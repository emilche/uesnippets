[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "State",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "State"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_ASYNC_RESOLVER_H_ # define RTC_BASE_ASYNC_RESOLVER_H_ # if)",
    "insertText": "defined(WEBRTC_POSIX)"
  },
  {
    "label": "AsyncResolver()",
    "kind": "Method",
    "detail": "Function (class RTC_EXPORT AsyncResolver : public AsyncResolverInterface { public :)",
    "insertText": "AsyncResolver()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const SocketAddress& addr)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(const SocketAddress& addr, int family)"
  },
  {
    "label": "GetResolvedAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetResolvedAddress(int family, SocketAddress* addr)"
  },
  {
    "label": "GetError()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetError()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(bool wait)"
  },
  {
    "label": "addresses()",
    "kind": "Method",
    "detail": "Function (const std::vector<IPAddress>&)",
    "insertText": "addresses()"
  },
  {
    "label": "ResolveDone()",
    "kind": "Method",
    "detail": "Function (private : struct State ; void)",
    "insertText": "ResolveDone(std::vector<IPAddress> addresses, int error) RTC_EXCLUSIVE_LOCKS_REQUIRED(sequence_checker_)"
  },
  {
    "label": "MaybeSelfDestruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeSelfDestruct()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (SocketAddress addr_)",
    "insertText": "RTC_GUARDED_BY(sequence_checker_)"
  }
]