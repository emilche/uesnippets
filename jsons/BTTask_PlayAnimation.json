[
  {
    "label": "UBTTask_PlayAnimation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTTask_PlayAnimation"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" TimerManager . h \" # include \" Components / SkeletalMeshComponent . h \" # include \" Animation / AnimationAsset . h \" # include \" BehaviorTree / BTTaskNode . h \" # include \" BehaviorTree / ValueOrBBKey . h \" # include \" BTTask_PlayAnimation . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Category = Node, EditAnywhere) FValueOrBBKey_Object AnimationToPlay = TObjectPtr<UAnimationAsset>()"
  },
  {
    "label": "ExecuteTask()",
    "kind": "Method",
    "detail": "Function (EAnimationMode::Type PreviousAnimationMode ; FTimerDelegate TimerDelegate ; FTimerHandle TimerHandle ; EBTNodeResult::Type)",
    "insertText": "ExecuteTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "AbortTask()",
    "kind": "Method",
    "detail": "Function (EBTNodeResult::Type)",
    "insertText": "AbortTask(UBehaviorTreeComponent& OwnerComp, uint8* NodeMemory)"
  },
  {
    "label": "GetStaticDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetStaticDescription()"
  },
  {
    "label": "OnAnimationTimerDone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnimationTimerDone()"
  },
  {
    "label": "GetNodeIconName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FName)",
    "insertText": "GetNodeIconName()"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (# endif protected : void)",
    "insertText": "CleanUp(UBehaviorTreeComponent& OwnerComp)"
  }
]