[
  {
    "label": "AutoOpt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AutoOpt"
  },
  {
    "label": "FrameGeneratorCapturerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameGeneratorCapturerConfig"
  },
  {
    "label": "SquaresVideo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SquaresVideo"
  },
  {
    "label": "SquareSlides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SquareSlides"
  },
  {
    "label": "VideoFile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoFile"
  },
  {
    "label": "ImageSlides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ImageSlides"
  },
  {
    "label": "Crop",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Crop"
  },
  {
    "label": "FrameGeneratorCapturer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameGeneratorCapturer"
  },
  {
    "label": "SinkWantsObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SinkWantsObserver"
  },
  {
    "label": "Resolution",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Resolution"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorCapturer>)",
    "insertText": "Create(\n      Clock* clock,\n      TaskQueueFactory& task_queue_factory,\n      FrameGeneratorCapturerConfig::SquaresVideo config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorCapturer>)",
    "insertText": "Create(\n      Clock* clock,\n      TaskQueueFactory& task_queue_factory,\n      FrameGeneratorCapturerConfig::SquareSlides config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorCapturer>)",
    "insertText": "Create(\n      Clock* clock,\n      TaskQueueFactory& task_queue_factory,\n      FrameGeneratorCapturerConfig::VideoFile config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorCapturer>)",
    "insertText": "Create(\n      Clock* clock,\n      TaskQueueFactory& task_queue_factory,\n      FrameGeneratorCapturerConfig::ImageSlides config)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<FrameGeneratorCapturer>)",
    "insertText": "Create(\n      Clock* clock,\n      TaskQueueFactory& task_queue_factory,\n      const FrameGeneratorCapturerConfig& config)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "ChangeResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeResolution(size_t width, size_t height)"
  },
  {
    "label": "ChangeFramerate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeFramerate(int target_framerate)"
  },
  {
    "label": "GetResolution()",
    "kind": "Method",
    "detail": "Function (absl::optional<Resolution>)",
    "insertText": "GetResolution()"
  },
  {
    "label": "OnOutputFormatRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOutputFormatRequest(int width,\n                             int height,\n                             const absl::optional<int>& max_fps)"
  },
  {
    "label": "SetSinkWantsObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSinkWantsObserver(SinkWantsObserver* observer)"
  },
  {
    "label": "ForceFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceFrame()"
  },
  {
    "label": "SetFakeRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFakeRotation(VideoRotation rotation)"
  },
  {
    "label": "SetFakeColorSpace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFakeColorSpace(absl::optional<ColorSpace> color_space)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init()"
  },
  {
    "label": "InsertFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertFrame()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Run(void* obj)"
  },
  {
    "label": "GetCurrentConfiguredFramerate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCurrentConfiguredFramerate()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sink_wants_observer_)",
    "insertText": "RTC_GUARDED_BY(&lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (source_fps_)",
    "insertText": "RTC_GUARDED_BY(&lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (target_capture_fps_)",
    "insertText": "RTC_GUARDED_BY(&lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (wanted_fps_)",
    "insertText": "RTC_GUARDED_BY(&lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (fake_color_space_)",
    "insertText": "RTC_GUARDED_BY(&lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (source_resolution_)",
    "insertText": "RTC_GUARDED_BY(&stats_lock_)"
  }
]