[
  {
    "label": "_malloc_zone_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_malloc_zone_t"
  },
  {
    "label": "FMacCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMacCrashContext"
  },
  {
    "label": "FMacMallocZone",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMacMallocZone"
  },
  {
    "label": "FMacMallocCrashHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMacMallocCrashHandler"
  },
  {
    "label": "FMacMallocZone()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / MemoryBase . h \" typedef struct _malloc_zone_t malloc_zone_t ; struct FMacCrashContext ; class FMacMallocZone : public FMalloc { public :)",
    "insertText": "FMacMallocZone(uint64 const InitialSize)"
  },
  {
    "label": "FMacMallocZone()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMacMallocZone()"
  },
  {
    "label": "Malloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Malloc(SIZE_T Size, uint32 Alignment)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Realloc(void* Ptr, SIZE_T NewSize, uint32 Alignment)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* Ptr)"
  },
  {
    "label": "GetAllocationSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllocationSize(void *Original, SIZE_T &SizeOut)"
  },
  {
    "label": "IsInternallyThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInternallyThreadSafe()"
  },
  {
    "label": "ValidateHeap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateHeap()"
  },
  {
    "label": "GetDescriptiveName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDescriptiveName()"
  },
  {
    "label": "FMacMallocCrashHandler()",
    "kind": "Method",
    "detail": "Function (protected : malloc_zone_t* MemoryZone ; } ; class FMacMallocCrashHandler : public FMacMallocZone { public :)",
    "insertText": "FMacMallocCrashHandler(uint64 const InitialSize)"
  },
  {
    "label": "FMacMallocCrashHandler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMacMallocCrashHandler()"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable(FMacCrashContext* Context, uint32 CrashedThreadId)"
  },
  {
    "label": "IsOnCrashedThread()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsOnCrashedThread(void)"
  }
]