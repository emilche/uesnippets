[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FEntityAllocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityAllocation"
  },
  {
    "label": "UMovieSceneRootInstantiatorSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneRootInstantiatorSystem"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntityInstantiatorSystem . h \" # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneRootInstantiatorSystem . generated . h \" class UObject ; namespace UE { namespace MovieScene { struct FEntityAllocation ; } })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: MOVIESCENE_API UMovieSceneRootInstantiatorSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "InstantiateAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InstantiateAllocation(const UE::MovieScene::FEntityAllocation* ParentAllocation)"
  }
]