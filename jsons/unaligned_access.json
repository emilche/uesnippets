[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_BASE_INTERNAL_UNALIGNED_ACCESS_H_ # define ABSL_BASE_INTERNAL_UNALIGNED_ACCESS_H_ # include<string . h> # include<cstdint> # include \" absl / base / attributes . h \" # include \" absl / base / config . h \" # if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "UnalignedLoad16()",
    "kind": "Method",
    "detail": "Function (ABSL_NAMESPACE_BEGIN namespace base_internal { uint16_t)",
    "insertText": "UnalignedLoad16(const void *p)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (uint16_t t ;)",
    "insertText": "memcpy(&t, p, sizeof t)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(p, &v, sizeof v)"
  },
  {
    "label": "UnalignedStore32()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnalignedStore32(void *p, uint32_t v)"
  },
  {
    "label": "UnalignedStore64()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnalignedStore64(void *p, uint64_t v)"
  }
]