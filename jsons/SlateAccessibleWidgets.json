[
  {
    "label": "FSlateAccessibleButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleButton"
  },
  {
    "label": "FSlateAccessibleCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleCheckBox"
  },
  {
    "label": "FSlateAccessibleEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleEditableText"
  },
  {
    "label": "FSlateAccessibleEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleEditableTextBox"
  },
  {
    "label": "FSlateAccessibleHyperlink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleHyperlink"
  },
  {
    "label": "FSlateAccessibleLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleLayout"
  },
  {
    "label": "FSlateAccessibleSlider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleSlider"
  },
  {
    "label": "FSlateAccessibleTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateAccessibleTextBlock"
  },
  {
    "label": "FSlateAccessibleButton()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_ACCESSIBILITY # include \" CoreMinimal . h \" # include \" Widgets / Accessibility / SlateCoreAccessibleWidgets . h \" class FSlateAccessibleButton : public FSlateAccessibleWidget,public IAccessibleActivatable { public :)",
    "insertText": "FSlateAccessibleButton(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::Button)"
  },
  {
    "label": "FSlateAccessibleButton()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateAccessibleButton()"
  },
  {
    "label": "AsActivatable()",
    "kind": "Method",
    "detail": "Function (} IAccessibleActivatable*)",
    "insertText": "AsActivatable()"
  },
  {
    "label": "FSlateAccessibleCheckBox()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleCheckBox : public FSlateAccessibleWidget,public IAccessibleActivatable,public IAccessibleProperty { public :)",
    "insertText": "FSlateAccessibleCheckBox(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::CheckBox)"
  },
  {
    "label": "FSlateAccessibleCheckBox()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FSlateAccessibleCheckBox()"
  },
  {
    "label": "IsCheckable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCheckable()"
  },
  {
    "label": "GetCheckedState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCheckedState()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetValue()"
  },
  {
    "label": "GetValueAsVariant()",
    "kind": "Method",
    "detail": "Function (FVariant)",
    "insertText": "GetValueAsVariant()"
  },
  {
    "label": "FSlateAccessibleEditableText()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleEditableText : public FSlateAccessibleWidget,public IAccessibleText,public IAccessibleProperty { public :)",
    "insertText": "FSlateAccessibleEditableText(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::TextEdit)"
  },
  {
    "label": "AsText()",
    "kind": "Method",
    "detail": "Function (} IAccessibleText*)",
    "insertText": "AsText()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "IsPassword()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPassword()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(const FString& Value)"
  },
  {
    "label": "FSlateAccessibleEditableTextBox()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleEditableTextBox : public FSlateAccessibleWidget,public IAccessibleText,public IAccessibleProperty { public :)",
    "insertText": "FSlateAccessibleEditableTextBox(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::TextEdit)"
  },
  {
    "label": "FSlateAccessibleHyperlink()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleHyperlink : public FSlateAccessibleButton { public :)",
    "insertText": "FSlateAccessibleHyperlink(TWeakPtr<SWidget> InWidget) : FSlateAccessibleButton(InWidget)"
  },
  {
    "label": "FSlateAccessibleLayout()",
    "kind": "Method",
    "detail": "Function (WidgetType = EAccessibleWidgetType::Hyperlink ; } } ; class FSlateAccessibleLayout : public FSlateAccessibleWidget { public :)",
    "insertText": "FSlateAccessibleLayout(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::Layout)"
  },
  {
    "label": "FSlateAccessibleSlider()",
    "kind": "Method",
    "detail": "Function (} } ; class FSlateAccessibleSlider : public FSlateAccessibleWidget,public IAccessibleProperty { public :)",
    "insertText": "FSlateAccessibleSlider(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::Slider)"
  },
  {
    "label": "AsProperty()",
    "kind": "Method",
    "detail": "Function (} IAccessibleProperty*)",
    "insertText": "AsProperty()"
  },
  {
    "label": "GetStepSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStepSize()"
  },
  {
    "label": "GetMaximum()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaximum()"
  },
  {
    "label": "GetMinimum()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinimum()"
  },
  {
    "label": "FSlateAccessibleTextBlock()",
    "kind": "Method",
    "detail": "Function (} ; class FSlateAccessibleTextBlock : public FSlateAccessibleWidget { public :)",
    "insertText": "FSlateAccessibleTextBlock(TWeakPtr<SWidget> InWidget) : FSlateAccessibleWidget(InWidget, EAccessibleWidgetType::Text)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetText()"
  }
]