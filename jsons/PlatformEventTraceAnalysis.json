[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "FContextSwitchesProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContextSwitchesProvider"
  },
  {
    "label": "FStackSamplesProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStackSamplesProvider"
  },
  {
    "label": "FPlatformEventTraceAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlatformEventTraceAnalyzer"
  },
  {
    "label": "FPlatformEventTraceAnalyzer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Trace / Analyzer . h \" # include \" ProfilingDebugging / MiscTrace . h \" namespace TraceServices { class IAnalysisSession ; class FContextSwitchesProvider ; class FStackSamplesProvider ; class FPlatformEventTraceAnalyzer : public UE::Trace::IAnalyzer { public :)",
    "insertText": "FPlatformEventTraceAnalyzer(IAnalysisSession& Session, FContextSwitchesProvider& ContextSwitchesProvider, FStackSamplesProvider& StackSamplesProvider)"
  },
  {
    "label": "OnAnalysisBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnalysisBegin(const FOnAnalysisContext& Context)"
  },
  {
    "label": "OnEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnEvent(uint16 RouteId, EStyle Style, const FOnEventContext& Context)"
  },
  {
    "label": "OnThreadInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnThreadInfo(const FThreadInfo& ThreadInfo)"
  }
]