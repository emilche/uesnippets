[
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" eos_types . h \" # pragma)",
    "insertText": "pack(push, 8) EXTERN_C typedef void* (EOS_MEMORY_CALL * EOS_AllocateMemoryFunc)(size_t SizeInBytes, size_t Alignment)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (EXTERN_C typedef)",
    "insertText": "void(EOS_MEMORY_CALL * EOS_ReallocateMemoryFunc)(void* Pointer, size_t SizeInBytes, size_t Alignment)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (EXTERN_C typedef)",
    "insertText": "void(EOS_MEMORY_CALL * EOS_ReleaseMemoryFunc)(void* Pointer)"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_INITIALIZE_THREADAFFINITY_API_LATEST 2)",
    "insertText": "EOS_STRUCT(EOS_Initialize_ThreadAffinity, ( int32_t ApiVersion; uint64_t NetworkWork; uint64_t StorageIo; uint64_t WebSocketIo; uint64_t P2PIo; uint64_t HttpRequestIo; uint64_t RTCIo; ))"
  },
  {
    "label": "EOS_STRUCT()",
    "kind": "Method",
    "detail": "Function (# define EOS_INITIALIZE_API_LATEST 4 # define EOS_INITIALIZEOPTIONS_PRODUCTNAME_MAX_LENGTH 6 4 # define EOS_INITIALIZEOPTIONS_PRODUCTVERSION_MAX_LENGTH 6 4)",
    "insertText": "EOS_STRUCT(EOS_InitializeOptions, ( int32_t ApiVersion; EOS_AllocateMemoryFunc AllocateMemoryFunction; EOS_ReallocateMemoryFunc ReallocateMemoryFunction; EOS_ReleaseMemoryFunc ReleaseMemoryFunction; const char* ProductName; const char* ProductVersion; void* Reserved; void* SystemInitializeOptions; EOS_Initialize_ThreadAffinity* OverrideThreadAffinity; ))"
  },
  {
    "label": "EOS_DECLARE_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_FUNC(EOS_EResult) EOS_Initialize(const EOS_InitializeOptions* Options)"
  },
  {
    "label": "EOS_DECLARE_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_FUNC(EOS_EResult) EOS_Shutdown()"
  },
  {
    "label": "EOS_DECLARE_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_FUNC(EOS_HPlatform) EOS_Platform_Create(const EOS_Platform_Options* Options)"
  },
  {
    "label": "EOS_DECLARE_FUNC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EOS_DECLARE_FUNC(void) EOS_Platform_Release(EOS_HPlatform Handle)"
  }
]