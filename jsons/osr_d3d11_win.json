[
  {
    "label": "Composition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Composition"
  },
  {
    "label": "Context",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Context"
  },
  {
    "label": "Effect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Effect"
  },
  {
    "label": "Geometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Geometry"
  },
  {
    "label": "SwapChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SwapChain"
  },
  {
    "label": "Texture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Texture2D"
  },
  {
    "label": "Rect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rect"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ScopedBinder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedBinder"
  },
  {
    "label": "Context",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Context"
  },
  {
    "label": "Device",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Device"
  },
  {
    "label": "SwapChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SwapChain"
  },
  {
    "label": "Texture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Texture2D"
  },
  {
    "label": "Effect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Effect"
  },
  {
    "label": "Geometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Geometry"
  },
  {
    "label": "Layer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Layer"
  },
  {
    "label": "Composition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Composition"
  },
  {
    "label": "FrameBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameBuffer"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Context(ID3D11DeviceContext*)"
  },
  {
    "label": "flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flush()"
  },
  {
    "label": "Device()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Device(ID3D11Device*, ID3D11DeviceContext*)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Device>)",
    "insertText": "create()"
  },
  {
    "label": "immedidate_context()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Context>)",
    "insertText": "immedidate_context()"
  },
  {
    "label": "create_swapchain()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<SwapChain>)",
    "insertText": "create_swapchain(HWND,\n                                              int width = 0,\n                                              int height = 0)"
  },
  {
    "label": "create_quad()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Geometry>)",
    "insertText": "create_quad(float x,\n                                        float y,\n                                        float width,\n                                        float height,\n                                        bool flip = false)"
  },
  {
    "label": "create_texture()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Texture2D>)",
    "insertText": "create_texture(int width,\n                                            int height,\n                                            DXGI_FORMAT format,\n                                            const void* data,\n                                            size_t row_stride)"
  },
  {
    "label": "open_shared_texture()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Texture2D>)",
    "insertText": "open_shared_texture(void*)"
  },
  {
    "label": "create_default_effect()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Effect>)",
    "insertText": "create_default_effect()"
  },
  {
    "label": "create_effect()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<Effect>)",
    "insertText": "create_effect(const std::string& vertex_code,\n                                        const std::string& vertex_entry,\n                                        const std::string& vertex_model,\n                                        const std::string& pixel_code,\n                                        const std::string& pixel_entry,\n                                        const std::string& pixel_model)"
  },
  {
    "label": "compile_shader()",
    "kind": "Method",
    "detail": "Function (std::shared_ptr<ID3DBlob>)",
    "insertText": "compile_shader(const std::string& source_code,\n                                           const std::string& entry_point,\n                                           const std::string& model)"
  },
  {
    "label": "SwapChain()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SwapChain(IDXGISwapChain*,\n            ID3D11RenderTargetView*,\n            ID3D11SamplerState*,\n            ID3D11BlendState*)"
  },
  {
    "label": "bind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bind(const std::shared_ptr<Context>& ctx)"
  },
  {
    "label": "unbind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unbind()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear(float red, float green, float blue, float alpha)"
  },
  {
    "label": "present()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "present(int sync_interval)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resize(int width, int height)"
  },
  {
    "label": "Texture2D()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Texture2D(ID3D11Texture2D* tex, ID3D11ShaderResourceView* srv)"
  },
  {
    "label": "bind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bind(std::shared_ptr<Context> const& ctx)"
  },
  {
    "label": "unbind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unbind()"
  },
  {
    "label": "lock_key()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "lock_key(uint64_t key, uint32_t timeout_ms)"
  },
  {
    "label": "unlock_key()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unlock_key(uint64_t key)"
  },
  {
    "label": "copy_from()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copy_from(const std::shared_ptr<Texture2D>&)"
  },
  {
    "label": "Effect()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Effect(ID3D11VertexShader* vsh,\n         ID3D11PixelShader* psh,\n         ID3D11InputLayout* layout)"
  },
  {
    "label": "bind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bind(const std::shared_ptr<Context>& ctx)"
  },
  {
    "label": "unbind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unbind()"
  },
  {
    "label": "Geometry()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Geometry(D3D_PRIMITIVE_TOPOLOGY primitive,\n           uint32_t vertices,\n           uint32_t stride,\n           ID3D11Buffer*)"
  },
  {
    "label": "bind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bind(const std::shared_ptr<Context>& ctx)"
  },
  {
    "label": "unbind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unbind()"
  },
  {
    "label": "draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "draw()"
  },
  {
    "label": "Layer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Layer(const std::shared_ptr<Device>& device, bool flip)"
  },
  {
    "label": "attach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "attach(const std::shared_ptr<Composition>&)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "move(float x, float y, float width, float height)"
  },
  {
    "label": "tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "tick(double t)"
  },
  {
    "label": "render_texture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "render_texture(const std::shared_ptr<Context>& ctx,\n                      const std::shared_ptr<Texture2D>& texture)"
  },
  {
    "label": "Composition()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Composition(const std::shared_ptr<Device>& device,\n              int width = 0,\n              int height = 0)"
  },
  {
    "label": "tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "tick(double)"
  },
  {
    "label": "render()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "render(const std::shared_ptr<Context>&)"
  },
  {
    "label": "add_layer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "add_layer(const std::shared_ptr<Layer>& layer)"
  },
  {
    "label": "remove_layer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "remove_layer(const std::shared_ptr<Layer>& layer)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resize(bool vsync, int width, int height)"
  },
  {
    "label": "FrameBuffer()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FrameBuffer(const std::shared_ptr<Device>& device)"
  },
  {
    "label": "on_paint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "on_paint(void* shared_handle)"
  }
]