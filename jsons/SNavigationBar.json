[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FNavigationCrumb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavigationCrumb"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SBreadcrumbTrail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBreadcrumbTrail"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SEditableText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableText"
  },
  {
    "label": "SLocationListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLocationListView"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "USlateWidgetStyleAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USlateWidgetStyleAsset"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FLocationItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLocationItem"
  },
  {
    "label": "SNavigationBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNavigationBar"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "ClearPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPaths()"
  },
  {
    "label": "PushPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushPath(const FText& SegmentDisplayText, const FString& FullLocation, bool bHasChildren)"
  },
  {
    "label": "StartEditingPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartEditingPath()"
  },
  {
    "label": "HandleBlankSpaceClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleBlankSpaceClicked()"
  },
  {
    "label": "HandleTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextChanged(const FText& NewText)"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextCommitted(const FText& InText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleComboSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleComboSelectionChanged(TSharedPtr<FLocationItem> SelectedItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "HandleGenerateComboRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleGenerateComboRow(TSharedPtr<FLocationItem> ForItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleEditableTextKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleEditableTextKeyDown(const FGeometry& MyGeometry, const FKeyEvent& KeyEvent)"
  },
  {
    "label": "HandleComboKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleComboKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "HandleComboKeyChar()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleComboKeyChar(const FGeometry& MyGeometry, const FCharacterEvent& InCharEvent)"
  },
  {
    "label": "HandleCrumbClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCrumbClicked(const FNavigationCrumb& Crumb)"
  },
  {
    "label": "HandleHasCrumbMenuContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleHasCrumbMenuContent(const FNavigationCrumb& Crumb)"
  },
  {
    "label": "HandleGetCrumbMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleGetCrumbMenuContent(const FNavigationCrumb& Crumb)"
  },
  {
    "label": "HandleUpdateCompletionOptions()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "HandleUpdateCompletionOptions(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "GenerateHistoryOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateHistoryOptions()"
  },
  {
    "label": "GenerateCompletionOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCompletionOptions(const FString& Prefix)"
  }
]