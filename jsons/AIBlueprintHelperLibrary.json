[
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "UAIAsyncTaskBlueprintProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIAsyncTaskBlueprintProxy"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UNavigationPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationPath"
  },
  {
    "label": "UPathFollowingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPathFollowingComponent"
  },
  {
    "label": "UAIBlueprintHelperLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIBlueprintHelperLibrary"
  },
  {
    "label": "SendAIMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAIMessage(APawn* Target, FName Message, UObject* MessageSource, bool bSuccess = true)"
  },
  {
    "label": "LockAIResourcesWithAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockAIResourcesWithAnimation(UAnimInstance* AnimInstance, bool bLockMovement, bool LockAILogic)"
  },
  {
    "label": "UnlockAIResourcesWithAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockAIResourcesWithAnimation(UAnimInstance* AnimInstance, bool bUnlockMovement, bool UnlockAILogic)"
  },
  {
    "label": "IsValidAILocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidAILocation(FVector Location)"
  },
  {
    "label": "IsValidAIDirection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidAIDirection(FVector DirectionVector)"
  },
  {
    "label": "IsValidAIRotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidAIRotation(FRotator Rotation)"
  },
  {
    "label": "GetCurrentPathPoints()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "GetCurrentPathPoints(AController* Controller)"
  },
  {
    "label": "GetCurrentPathIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentPathIndex(const AController* Controller)"
  },
  {
    "label": "GetNextNavLinkIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNextNavLinkIndex(const AController* Controller)"
  },
  {
    "label": "SimpleMoveToActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimpleMoveToActor(AController* Controller, const AActor* Goal)"
  },
  {
    "label": "SimpleMoveToLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimpleMoveToLocation(AController* Controller, const FVector& Goal)"
  }
]