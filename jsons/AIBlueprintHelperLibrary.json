[
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "UAIAsyncTaskBlueprintProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIAsyncTaskBlueprintProxy"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBlackboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardComponent"
  },
  {
    "label": "UNavigationPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationPath"
  },
  {
    "label": "UPathFollowingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPathFollowingComponent"
  },
  {
    "label": "UAIBlueprintHelperLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAIBlueprintHelperLibrary"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" GameFramework / Pawn . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" AIBlueprintHelperLibrary . generated . h \" class AAIController ; class UAIAsyncTaskBlueprintProxy ; class UAnimInstance ; class UBehaviorTree ; class UBlackboardComponent ; class UNavigationPath ; class UPathFollowingComponent ;)",
    "insertText": "UCLASS(meta=(ScriptName=\"AIHelperLibrary\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UFUNCTION(BlueprintCallable, meta=(WorldContext=\"WorldContextObject\", BlueprintInternalUseOnly = \"TRUE\")) static AIMODULE_API UAIAsyncTaskBlueprintProxy* CreateMoveToProxyObject(UObject* WorldContextObject, APawn* Pawn, FVector Destination, AActor* TargetActor = NULL, float AcceptanceRadius = 5.f, bool bStopOnOverlap = false)"
  },
  {
    "label": "GetPathComp()",
    "kind": "Method",
    "detail": "Function (private : UPathFollowingComponent*)",
    "insertText": "GetPathComp(const AController* Controller)"
  }
]