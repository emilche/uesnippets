[
  {
    "label": "LlvmInst_Ret",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Ret"
  },
  {
    "label": "LlvmInst_Br",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Br"
  },
  {
    "label": "LlvmInst_Switch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Switch"
  },
  {
    "label": "LlvmInst_IndirectBr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_IndirectBr"
  },
  {
    "label": "LlvmInst_Invoke",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Invoke"
  },
  {
    "label": "LlvmInst_Resume",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Resume"
  },
  {
    "label": "LlvmInst_Unreachable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Unreachable"
  },
  {
    "label": "LlvmInst_Add",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Add"
  },
  {
    "label": "LlvmInst_FAdd",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FAdd"
  },
  {
    "label": "LlvmInst_Sub",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Sub"
  },
  {
    "label": "LlvmInst_FSub",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FSub"
  },
  {
    "label": "LlvmInst_Mul",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Mul"
  },
  {
    "label": "LlvmInst_FMul",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FMul"
  },
  {
    "label": "LlvmInst_UDiv",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_UDiv"
  },
  {
    "label": "LlvmInst_SDiv",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_SDiv"
  },
  {
    "label": "LlvmInst_FDiv",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FDiv"
  },
  {
    "label": "LlvmInst_URem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_URem"
  },
  {
    "label": "LlvmInst_SRem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_SRem"
  },
  {
    "label": "LlvmInst_FRem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FRem"
  },
  {
    "label": "LlvmInst_Shl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Shl"
  },
  {
    "label": "LlvmInst_LShr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_LShr"
  },
  {
    "label": "LlvmInst_AShr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_AShr"
  },
  {
    "label": "LlvmInst_And",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_And"
  },
  {
    "label": "LlvmInst_Or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Or"
  },
  {
    "label": "LlvmInst_Xor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Xor"
  },
  {
    "label": "LlvmInst_Alloca",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Alloca"
  },
  {
    "label": "LlvmInst_Load",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Load"
  },
  {
    "label": "LlvmInst_Store",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Store"
  },
  {
    "label": "LlvmInst_GetElementPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_GetElementPtr"
  },
  {
    "label": "LlvmInst_Fence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Fence"
  },
  {
    "label": "LlvmInst_AtomicCmpXchg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_AtomicCmpXchg"
  },
  {
    "label": "LlvmInst_AtomicRMW",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_AtomicRMW"
  },
  {
    "label": "LlvmInst_Trunc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Trunc"
  },
  {
    "label": "LlvmInst_ZExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_ZExt"
  },
  {
    "label": "LlvmInst_SExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_SExt"
  },
  {
    "label": "LlvmInst_FPToUI",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FPToUI"
  },
  {
    "label": "LlvmInst_FPToSI",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FPToSI"
  },
  {
    "label": "LlvmInst_UIToFP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_UIToFP"
  },
  {
    "label": "LlvmInst_SIToFP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_SIToFP"
  },
  {
    "label": "LlvmInst_FPTrunc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FPTrunc"
  },
  {
    "label": "LlvmInst_FPExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FPExt"
  },
  {
    "label": "LlvmInst_PtrToInt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_PtrToInt"
  },
  {
    "label": "LlvmInst_IntToPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_IntToPtr"
  },
  {
    "label": "LlvmInst_BitCast",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_BitCast"
  },
  {
    "label": "LlvmInst_AddrSpaceCast",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_AddrSpaceCast"
  },
  {
    "label": "LlvmInst_ICmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_ICmp"
  },
  {
    "label": "LlvmInst_FCmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_FCmp"
  },
  {
    "label": "LlvmInst_PHI",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_PHI"
  },
  {
    "label": "LlvmInst_Call",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Call"
  },
  {
    "label": "LlvmInst_Select",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_Select"
  },
  {
    "label": "LlvmInst_UserOp1",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_UserOp1"
  },
  {
    "label": "LlvmInst_UserOp2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_UserOp2"
  },
  {
    "label": "LlvmInst_VAArg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_VAArg"
  },
  {
    "label": "LlvmInst_ExtractValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_ExtractValue"
  },
  {
    "label": "LlvmInst_LandingPad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LlvmInst_LandingPad"
  },
  {
    "label": "DxilInst_TempRegLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TempRegLoad"
  },
  {
    "label": "OperandIdx",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OperandIdx"
  },
  {
    "label": "DxilInst_TempRegStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TempRegStore"
  },
  {
    "label": "DxilInst_MinPrecXRegLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_MinPrecXRegLoad"
  },
  {
    "label": "DxilInst_MinPrecXRegStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_MinPrecXRegStore"
  },
  {
    "label": "DxilInst_LoadInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LoadInput"
  },
  {
    "label": "DxilInst_StoreOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_StoreOutput"
  },
  {
    "label": "DxilInst_FAbs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FAbs"
  },
  {
    "label": "DxilInst_Saturate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Saturate"
  },
  {
    "label": "DxilInst_IsNaN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IsNaN"
  },
  {
    "label": "DxilInst_IsInf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IsInf"
  },
  {
    "label": "DxilInst_IsFinite",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IsFinite"
  },
  {
    "label": "DxilInst_IsNormal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IsNormal"
  },
  {
    "label": "DxilInst_Cos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Cos"
  },
  {
    "label": "DxilInst_Sin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Sin"
  },
  {
    "label": "DxilInst_Tan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Tan"
  },
  {
    "label": "DxilInst_Acos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Acos"
  },
  {
    "label": "DxilInst_Asin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Asin"
  },
  {
    "label": "DxilInst_Atan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Atan"
  },
  {
    "label": "DxilInst_Hcos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Hcos"
  },
  {
    "label": "DxilInst_Hsin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Hsin"
  },
  {
    "label": "DxilInst_Htan",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Htan"
  },
  {
    "label": "DxilInst_Exp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Exp"
  },
  {
    "label": "DxilInst_Frc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Frc"
  },
  {
    "label": "DxilInst_Log",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Log"
  },
  {
    "label": "DxilInst_Sqrt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Sqrt"
  },
  {
    "label": "DxilInst_Rsqrt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Rsqrt"
  },
  {
    "label": "DxilInst_Round_ne",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Round_ne"
  },
  {
    "label": "DxilInst_Round_ni",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Round_ni"
  },
  {
    "label": "DxilInst_Round_pi",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Round_pi"
  },
  {
    "label": "DxilInst_Round_z",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Round_z"
  },
  {
    "label": "DxilInst_Bfrev",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Bfrev"
  },
  {
    "label": "DxilInst_Countbits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Countbits"
  },
  {
    "label": "DxilInst_FirstbitLo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FirstbitLo"
  },
  {
    "label": "DxilInst_FirstbitHi",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FirstbitHi"
  },
  {
    "label": "DxilInst_FirstbitSHi",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FirstbitSHi"
  },
  {
    "label": "DxilInst_FMax",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FMax"
  },
  {
    "label": "DxilInst_FMin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FMin"
  },
  {
    "label": "DxilInst_IMax",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IMax"
  },
  {
    "label": "DxilInst_IMin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IMin"
  },
  {
    "label": "DxilInst_UMax",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_UMax"
  },
  {
    "label": "DxilInst_UMin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_UMin"
  },
  {
    "label": "DxilInst_IMul",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IMul"
  },
  {
    "label": "DxilInst_UMul",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_UMul"
  },
  {
    "label": "DxilInst_UDiv",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_UDiv"
  },
  {
    "label": "DxilInst_UAddc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_UAddc"
  },
  {
    "label": "DxilInst_USubb",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_USubb"
  },
  {
    "label": "DxilInst_FMad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FMad"
  },
  {
    "label": "DxilInst_Fma",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Fma"
  },
  {
    "label": "DxilInst_IMad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IMad"
  },
  {
    "label": "DxilInst_UMad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_UMad"
  },
  {
    "label": "DxilInst_Msad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Msad"
  },
  {
    "label": "DxilInst_Ibfe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Ibfe"
  },
  {
    "label": "DxilInst_Ubfe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Ubfe"
  },
  {
    "label": "DxilInst_Bfi",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Bfi"
  },
  {
    "label": "DxilInst_Dot2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Dot2"
  },
  {
    "label": "DxilInst_Dot3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Dot3"
  },
  {
    "label": "DxilInst_Dot4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Dot4"
  },
  {
    "label": "DxilInst_CreateHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CreateHandle"
  },
  {
    "label": "DxilInst_CBufferLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CBufferLoad"
  },
  {
    "label": "DxilInst_CBufferLoadLegacy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CBufferLoadLegacy"
  },
  {
    "label": "DxilInst_Sample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Sample"
  },
  {
    "label": "DxilInst_SampleBias",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleBias"
  },
  {
    "label": "DxilInst_SampleLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleLevel"
  },
  {
    "label": "DxilInst_SampleGrad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleGrad"
  },
  {
    "label": "DxilInst_SampleCmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleCmp"
  },
  {
    "label": "DxilInst_SampleCmpLevelZero",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleCmpLevelZero"
  },
  {
    "label": "DxilInst_TextureLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TextureLoad"
  },
  {
    "label": "DxilInst_TextureStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TextureStore"
  },
  {
    "label": "DxilInst_BufferLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BufferLoad"
  },
  {
    "label": "DxilInst_BufferStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BufferStore"
  },
  {
    "label": "DxilInst_BufferUpdateCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BufferUpdateCounter"
  },
  {
    "label": "DxilInst_CheckAccessFullyMapped",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CheckAccessFullyMapped"
  },
  {
    "label": "DxilInst_GetDimensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GetDimensions"
  },
  {
    "label": "DxilInst_TextureGather",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TextureGather"
  },
  {
    "label": "DxilInst_TextureGatherCmp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TextureGatherCmp"
  },
  {
    "label": "DxilInst_Texture2DMSGetSamplePosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Texture2DMSGetSamplePosition"
  },
  {
    "label": "DxilInst_RenderTargetGetSamplePosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RenderTargetGetSamplePosition"
  },
  {
    "label": "DxilInst_RenderTargetGetSampleCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RenderTargetGetSampleCount"
  },
  {
    "label": "DxilInst_AtomicBinOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AtomicBinOp"
  },
  {
    "label": "DxilInst_AtomicCompareExchange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AtomicCompareExchange"
  },
  {
    "label": "DxilInst_Barrier",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Barrier"
  },
  {
    "label": "DxilInst_CalculateLOD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CalculateLOD"
  },
  {
    "label": "DxilInst_Discard",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Discard"
  },
  {
    "label": "DxilInst_DerivCoarseX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DerivCoarseX"
  },
  {
    "label": "DxilInst_DerivCoarseY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DerivCoarseY"
  },
  {
    "label": "DxilInst_DerivFineX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DerivFineX"
  },
  {
    "label": "DxilInst_DerivFineY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DerivFineY"
  },
  {
    "label": "DxilInst_EvalSnapped",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_EvalSnapped"
  },
  {
    "label": "DxilInst_EvalSampleIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_EvalSampleIndex"
  },
  {
    "label": "DxilInst_EvalCentroid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_EvalCentroid"
  },
  {
    "label": "DxilInst_SampleIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleIndex"
  },
  {
    "label": "DxilInst_Coverage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Coverage"
  },
  {
    "label": "DxilInst_InnerCoverage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_InnerCoverage"
  },
  {
    "label": "DxilInst_ThreadId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ThreadId"
  },
  {
    "label": "DxilInst_GroupId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GroupId"
  },
  {
    "label": "DxilInst_ThreadIdInGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ThreadIdInGroup"
  },
  {
    "label": "DxilInst_FlattenedThreadIdInGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FlattenedThreadIdInGroup"
  },
  {
    "label": "DxilInst_EmitStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_EmitStream"
  },
  {
    "label": "DxilInst_CutStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CutStream"
  },
  {
    "label": "DxilInst_EmitThenCutStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_EmitThenCutStream"
  },
  {
    "label": "DxilInst_GSInstanceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GSInstanceID"
  },
  {
    "label": "DxilInst_MakeDouble",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_MakeDouble"
  },
  {
    "label": "DxilInst_SplitDouble",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SplitDouble"
  },
  {
    "label": "DxilInst_LoadOutputControlPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LoadOutputControlPoint"
  },
  {
    "label": "DxilInst_LoadPatchConstant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LoadPatchConstant"
  },
  {
    "label": "DxilInst_DomainLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DomainLocation"
  },
  {
    "label": "DxilInst_StorePatchConstant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_StorePatchConstant"
  },
  {
    "label": "DxilInst_OutputControlPointID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_OutputControlPointID"
  },
  {
    "label": "DxilInst_PrimitiveID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_PrimitiveID"
  },
  {
    "label": "DxilInst_CycleCounterLegacy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CycleCounterLegacy"
  },
  {
    "label": "DxilInst_WaveIsFirstLane",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveIsFirstLane"
  },
  {
    "label": "DxilInst_WaveGetLaneIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveGetLaneIndex"
  },
  {
    "label": "DxilInst_WaveGetLaneCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveGetLaneCount"
  },
  {
    "label": "DxilInst_WaveAnyTrue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveAnyTrue"
  },
  {
    "label": "DxilInst_WaveAllTrue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveAllTrue"
  },
  {
    "label": "DxilInst_WaveActiveAllEqual",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveActiveAllEqual"
  },
  {
    "label": "DxilInst_WaveActiveBallot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveActiveBallot"
  },
  {
    "label": "DxilInst_WaveReadLaneAt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveReadLaneAt"
  },
  {
    "label": "DxilInst_WaveReadLaneFirst",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveReadLaneFirst"
  },
  {
    "label": "DxilInst_WaveActiveOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveActiveOp"
  },
  {
    "label": "DxilInst_WaveActiveBit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveActiveBit"
  },
  {
    "label": "DxilInst_WavePrefixOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WavePrefixOp"
  },
  {
    "label": "DxilInst_QuadReadLaneAt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_QuadReadLaneAt"
  },
  {
    "label": "DxilInst_QuadOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_QuadOp"
  },
  {
    "label": "DxilInst_BitcastI16toF16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BitcastI16toF16"
  },
  {
    "label": "DxilInst_BitcastF16toI16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BitcastF16toI16"
  },
  {
    "label": "DxilInst_BitcastI32toF32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BitcastI32toF32"
  },
  {
    "label": "DxilInst_BitcastF32toI32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BitcastF32toI32"
  },
  {
    "label": "DxilInst_BitcastI64toF64",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BitcastI64toF64"
  },
  {
    "label": "DxilInst_BitcastF64toI64",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BitcastF64toI64"
  },
  {
    "label": "DxilInst_LegacyF32ToF16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LegacyF32ToF16"
  },
  {
    "label": "DxilInst_LegacyF16ToF32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LegacyF16ToF32"
  },
  {
    "label": "DxilInst_LegacyDoubleToFloat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LegacyDoubleToFloat"
  },
  {
    "label": "DxilInst_LegacyDoubleToSInt32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LegacyDoubleToSInt32"
  },
  {
    "label": "DxilInst_LegacyDoubleToUInt32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_LegacyDoubleToUInt32"
  },
  {
    "label": "DxilInst_WaveAllBitCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveAllBitCount"
  },
  {
    "label": "DxilInst_WavePrefixBitCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WavePrefixBitCount"
  },
  {
    "label": "DxilInst_AttributeAtVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AttributeAtVertex"
  },
  {
    "label": "DxilInst_ViewID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ViewID"
  },
  {
    "label": "DxilInst_RawBufferLoad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RawBufferLoad"
  },
  {
    "label": "DxilInst_RawBufferStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RawBufferStore"
  },
  {
    "label": "DxilInst_InstanceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_InstanceID"
  },
  {
    "label": "DxilInst_InstanceIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_InstanceIndex"
  },
  {
    "label": "DxilInst_HitKind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_HitKind"
  },
  {
    "label": "DxilInst_RayFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayFlags"
  },
  {
    "label": "DxilInst_DispatchRaysIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DispatchRaysIndex"
  },
  {
    "label": "DxilInst_DispatchRaysDimensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DispatchRaysDimensions"
  },
  {
    "label": "DxilInst_WorldRayOrigin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WorldRayOrigin"
  },
  {
    "label": "DxilInst_WorldRayDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WorldRayDirection"
  },
  {
    "label": "DxilInst_ObjectRayOrigin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ObjectRayOrigin"
  },
  {
    "label": "DxilInst_ObjectRayDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ObjectRayDirection"
  },
  {
    "label": "DxilInst_ObjectToWorld",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ObjectToWorld"
  },
  {
    "label": "DxilInst_WorldToObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WorldToObject"
  },
  {
    "label": "DxilInst_RayTMin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayTMin"
  },
  {
    "label": "DxilInst_RayTCurrent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayTCurrent"
  },
  {
    "label": "DxilInst_IgnoreHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IgnoreHit"
  },
  {
    "label": "DxilInst_AcceptHitAndEndSearch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AcceptHitAndEndSearch"
  },
  {
    "label": "DxilInst_TraceRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TraceRay"
  },
  {
    "label": "DxilInst_ReportHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_ReportHit"
  },
  {
    "label": "DxilInst_CallShader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CallShader"
  },
  {
    "label": "DxilInst_CreateHandleForLib",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CreateHandleForLib"
  },
  {
    "label": "DxilInst_PrimitiveIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_PrimitiveIndex"
  },
  {
    "label": "DxilInst_Dot2AddHalf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Dot2AddHalf"
  },
  {
    "label": "DxilInst_Dot4AddI8Packed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Dot4AddI8Packed"
  },
  {
    "label": "DxilInst_Dot4AddU8Packed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Dot4AddU8Packed"
  },
  {
    "label": "DxilInst_WaveMatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatch"
  },
  {
    "label": "DxilInst_WaveMultiPrefixOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMultiPrefixOp"
  },
  {
    "label": "DxilInst_WaveMultiPrefixBitCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMultiPrefixBitCount"
  },
  {
    "label": "DxilInst_SetMeshOutputCounts",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SetMeshOutputCounts"
  },
  {
    "label": "DxilInst_EmitIndices",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_EmitIndices"
  },
  {
    "label": "DxilInst_GetMeshPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GetMeshPayload"
  },
  {
    "label": "DxilInst_StoreVertexOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_StoreVertexOutput"
  },
  {
    "label": "DxilInst_StorePrimitiveOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_StorePrimitiveOutput"
  },
  {
    "label": "DxilInst_DispatchMesh",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_DispatchMesh"
  },
  {
    "label": "DxilInst_WriteSamplerFeedback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WriteSamplerFeedback"
  },
  {
    "label": "DxilInst_WriteSamplerFeedbackBias",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WriteSamplerFeedbackBias"
  },
  {
    "label": "DxilInst_WriteSamplerFeedbackLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WriteSamplerFeedbackLevel"
  },
  {
    "label": "DxilInst_WriteSamplerFeedbackGrad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WriteSamplerFeedbackGrad"
  },
  {
    "label": "DxilInst_AllocateRayQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AllocateRayQuery"
  },
  {
    "label": "DxilInst_RayQuery_TraceRayInline",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_TraceRayInline"
  },
  {
    "label": "DxilInst_RayQuery_Proceed",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_Proceed"
  },
  {
    "label": "DxilInst_RayQuery_Abort",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_Abort"
  },
  {
    "label": "DxilInst_RayQuery_CommitNonOpaqueTriangleHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommitNonOpaqueTriangleHit"
  },
  {
    "label": "DxilInst_RayQuery_CommitProceduralPrimitiveHit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommitProceduralPrimitiveHit"
  },
  {
    "label": "DxilInst_RayQuery_CommittedStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedStatus"
  },
  {
    "label": "DxilInst_RayQuery_CandidateType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateType"
  },
  {
    "label": "DxilInst_RayQuery_CandidateObjectToWorld3x4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateObjectToWorld3x4"
  },
  {
    "label": "DxilInst_RayQuery_CandidateWorldToObject3x4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateWorldToObject3x4"
  },
  {
    "label": "DxilInst_RayQuery_CommittedObjectToWorld3x4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedObjectToWorld3x4"
  },
  {
    "label": "DxilInst_RayQuery_CommittedWorldToObject3x4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedWorldToObject3x4"
  },
  {
    "label": "DxilInst_RayQuery_CandidateProceduralPrimitiveNonOpaque",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateProceduralPrimitiveNonOpaque"
  },
  {
    "label": "DxilInst_RayQuery_CandidateTriangleFrontFace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateTriangleFrontFace"
  },
  {
    "label": "DxilInst_RayQuery_CommittedTriangleFrontFace",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedTriangleFrontFace"
  },
  {
    "label": "DxilInst_RayQuery_CandidateTriangleBarycentrics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateTriangleBarycentrics"
  },
  {
    "label": "DxilInst_RayQuery_CommittedTriangleBarycentrics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedTriangleBarycentrics"
  },
  {
    "label": "DxilInst_RayQuery_RayFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_RayFlags"
  },
  {
    "label": "DxilInst_RayQuery_WorldRayOrigin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_WorldRayOrigin"
  },
  {
    "label": "DxilInst_RayQuery_WorldRayDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_WorldRayDirection"
  },
  {
    "label": "DxilInst_RayQuery_RayTMin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_RayTMin"
  },
  {
    "label": "DxilInst_RayQuery_CandidateTriangleRayT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateTriangleRayT"
  },
  {
    "label": "DxilInst_RayQuery_CommittedRayT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedRayT"
  },
  {
    "label": "DxilInst_RayQuery_CandidateInstanceIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateInstanceIndex"
  },
  {
    "label": "DxilInst_RayQuery_CandidateInstanceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateInstanceID"
  },
  {
    "label": "DxilInst_RayQuery_CandidateGeometryIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateGeometryIndex"
  },
  {
    "label": "DxilInst_RayQuery_CandidatePrimitiveIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidatePrimitiveIndex"
  },
  {
    "label": "DxilInst_RayQuery_CandidateObjectRayOrigin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateObjectRayOrigin"
  },
  {
    "label": "DxilInst_RayQuery_CandidateObjectRayDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateObjectRayDirection"
  },
  {
    "label": "DxilInst_RayQuery_CommittedInstanceIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedInstanceIndex"
  },
  {
    "label": "DxilInst_RayQuery_CommittedInstanceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedInstanceID"
  },
  {
    "label": "DxilInst_RayQuery_CommittedGeometryIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedGeometryIndex"
  },
  {
    "label": "DxilInst_RayQuery_CommittedPrimitiveIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedPrimitiveIndex"
  },
  {
    "label": "DxilInst_RayQuery_CommittedObjectRayOrigin",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedObjectRayOrigin"
  },
  {
    "label": "DxilInst_RayQuery_CommittedObjectRayDirection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedObjectRayDirection"
  },
  {
    "label": "DxilInst_GeometryIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GeometryIndex"
  },
  {
    "label": "DxilInst_RayQuery_CandidateInstanceContributionToHitGroupIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CandidateInstanceContributionToHitGroupIndex"
  },
  {
    "label": "DxilInst_RayQuery_CommittedInstanceContributionToHitGroupIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_RayQuery_CommittedInstanceContributionToHitGroupIndex"
  },
  {
    "label": "DxilInst_AnnotateHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AnnotateHandle"
  },
  {
    "label": "DxilInst_CreateHandleFromBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CreateHandleFromBinding"
  },
  {
    "label": "DxilInst_CreateHandleFromHeap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CreateHandleFromHeap"
  },
  {
    "label": "DxilInst_Unpack4x8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Unpack4x8"
  },
  {
    "label": "DxilInst_Pack4x8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_Pack4x8"
  },
  {
    "label": "DxilInst_IsHelperLane",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IsHelperLane"
  },
  {
    "label": "DxilInst_QuadVote",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_QuadVote"
  },
  {
    "label": "DxilInst_TextureGatherRaw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TextureGatherRaw"
  },
  {
    "label": "DxilInst_SampleCmpLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleCmpLevel"
  },
  {
    "label": "DxilInst_TextureStoreSample",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_TextureStoreSample"
  },
  {
    "label": "DxilInst_WaveMatrix_Annotate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_Annotate"
  },
  {
    "label": "DxilInst_WaveMatrix_Depth",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_Depth"
  },
  {
    "label": "DxilInst_WaveMatrix_Fill",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_Fill"
  },
  {
    "label": "DxilInst_WaveMatrix_LoadRawBuf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_LoadRawBuf"
  },
  {
    "label": "DxilInst_WaveMatrix_LoadGroupShared",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_LoadGroupShared"
  },
  {
    "label": "DxilInst_WaveMatrix_StoreRawBuf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_StoreRawBuf"
  },
  {
    "label": "DxilInst_WaveMatrix_StoreGroupShared",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_StoreGroupShared"
  },
  {
    "label": "DxilInst_WaveMatrix_Multiply",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_Multiply"
  },
  {
    "label": "DxilInst_WaveMatrix_MultiplyAccumulate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_MultiplyAccumulate"
  },
  {
    "label": "DxilInst_WaveMatrix_ScalarOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_ScalarOp"
  },
  {
    "label": "DxilInst_WaveMatrix_SumAccumulate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_SumAccumulate"
  },
  {
    "label": "DxilInst_WaveMatrix_Add",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_WaveMatrix_Add"
  },
  {
    "label": "DxilInst_AllocateNodeOutputRecords",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AllocateNodeOutputRecords"
  },
  {
    "label": "DxilInst_GetNodeRecordPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GetNodeRecordPtr"
  },
  {
    "label": "DxilInst_IncrementOutputCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IncrementOutputCount"
  },
  {
    "label": "DxilInst_OutputComplete",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_OutputComplete"
  },
  {
    "label": "DxilInst_GetInputRecordCount",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GetInputRecordCount"
  },
  {
    "label": "DxilInst_FinishedCrossGroupSharing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_FinishedCrossGroupSharing"
  },
  {
    "label": "DxilInst_BarrierByMemoryType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BarrierByMemoryType"
  },
  {
    "label": "DxilInst_BarrierByMemoryHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BarrierByMemoryHandle"
  },
  {
    "label": "DxilInst_BarrierByNodeRecordHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_BarrierByNodeRecordHandle"
  },
  {
    "label": "DxilInst_CreateNodeOutputHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CreateNodeOutputHandle"
  },
  {
    "label": "DxilInst_IndexNodeHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_IndexNodeHandle"
  },
  {
    "label": "DxilInst_AnnotateNodeHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AnnotateNodeHandle"
  },
  {
    "label": "DxilInst_CreateNodeInputRecordHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_CreateNodeInputRecordHandle"
  },
  {
    "label": "DxilInst_AnnotateNodeRecordHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_AnnotateNodeRecordHandle"
  },
  {
    "label": "DxilInst_NodeOutputIsValid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_NodeOutputIsValid"
  },
  {
    "label": "DxilInst_GetRemainingRecursionLevels",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_GetRemainingRecursionLevels"
  },
  {
    "label": "DxilInst_SampleCmpGrad",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleCmpGrad"
  },
  {
    "label": "DxilInst_SampleCmpBias",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_SampleCmpBias"
  },
  {
    "label": "DxilInst_StartVertexLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_StartVertexLocation"
  },
  {
    "label": "DxilInst_StartInstanceLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilInst_StartInstanceLocation"
  },
  {
    "label": "LlvmInst_Ret()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" dxc / DXIL / DxilOperations . h \" # include \" llvm / IR / Constants . h \" # include \" llvm / IR / Instruction . h \" # include \" llvm / IR / Instructions . h \" namespace hlsl { struct LlvmInst_Ret { llvm::Instruction* Instr ;)",
    "insertText": "LlvmInst_Ret(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "isAllowed()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isAllowed()"
  },
  {
    "label": "set_index()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_index(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(1, val)"
  },
  {
    "label": "DxilInst_TempRegStore()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TempRegStore { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TempRegStore(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_value()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_value()"
  },
  {
    "label": "set_value()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_value(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(2, val)"
  },
  {
    "label": "DxilInst_MinPrecXRegLoad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_MinPrecXRegLoad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_MinPrecXRegLoad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_regIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_regIndex(llvm::Value *val)"
  },
  {
    "label": "get_index()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_index()"
  },
  {
    "label": "get_component()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_component()"
  },
  {
    "label": "set_component()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_component(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(3, val)"
  },
  {
    "label": "DxilInst_MinPrecXRegStore()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_MinPrecXRegStore { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_MinPrecXRegStore(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(4, val)"
  },
  {
    "label": "DxilInst_LoadInput()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LoadInput { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LoadInput(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_inputSigId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_inputSigId(llvm::Value *val)"
  },
  {
    "label": "get_rowIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_rowIndex()"
  },
  {
    "label": "set_rowIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_rowIndex(llvm::Value *val)"
  },
  {
    "label": "get_colIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_colIndex()"
  },
  {
    "label": "set_colIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_colIndex(llvm::Value *val)"
  },
  {
    "label": "get_gsVertexAxis()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_gsVertexAxis()"
  },
  {
    "label": "set_gsVertexAxis()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_gsVertexAxis(llvm::Value *val)"
  },
  {
    "label": "DxilInst_StoreOutput()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_StoreOutput { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_StoreOutput(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_outputSigId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_outputSigId(llvm::Value *val)"
  },
  {
    "label": "DxilInst_FAbs()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FAbs { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FAbs(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Saturate()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Saturate { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Saturate(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IsNaN()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IsNaN { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IsNaN(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IsInf()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IsInf { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IsInf(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IsFinite()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IsFinite { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IsFinite(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IsNormal()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IsNormal { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IsNormal(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Cos()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Cos { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Cos(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Sin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Sin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Sin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Tan()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Tan { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Tan(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Acos()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Acos { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Acos(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Asin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Asin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Asin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Atan()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Atan { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Atan(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Hcos()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Hcos { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Hcos(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Hsin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Hsin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Hsin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Htan()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Htan { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Htan(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Exp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Exp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Exp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Frc()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Frc { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Frc(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Log()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Log { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Log(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Sqrt()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Sqrt { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Sqrt(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Rsqrt()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Rsqrt { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Rsqrt(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Round_ne()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Round_ne { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Round_ne(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Round_ni()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Round_ni { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Round_ni(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Round_pi()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Round_pi { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Round_pi(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Round_z()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Round_z { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Round_z(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Bfrev()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Bfrev { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Bfrev(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Countbits()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Countbits { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Countbits(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_FirstbitLo()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FirstbitLo { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FirstbitLo(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_FirstbitHi()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FirstbitHi { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FirstbitHi(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_FirstbitSHi()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FirstbitSHi { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FirstbitSHi(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_FMax()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FMax { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FMax(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_a()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_a(llvm::Value *val)"
  },
  {
    "label": "get_b()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_b()"
  },
  {
    "label": "set_b()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_b(llvm::Value *val)"
  },
  {
    "label": "DxilInst_FMin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FMin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FMin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IMax()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IMax { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IMax(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IMin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IMin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IMin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_UMax()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_UMax { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_UMax(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_UMin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_UMin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_UMin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IMul()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IMul { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IMul(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_UMul()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_UMul { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_UMul(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_UDiv()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_UDiv { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_UDiv(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_UAddc()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_UAddc { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_UAddc(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_USubb()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_USubb { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_USubb(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_FMad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FMad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FMad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_c()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_c()"
  },
  {
    "label": "set_c()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_c(llvm::Value *val)"
  },
  {
    "label": "DxilInst_Fma()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Fma { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Fma(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_IMad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IMad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IMad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_UMad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_UMad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_UMad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Msad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Msad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Msad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Ibfe()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Ibfe { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Ibfe(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Ubfe()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Ubfe { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Ubfe(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Bfi()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Bfi { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Bfi(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_width()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_width(llvm::Value *val)"
  },
  {
    "label": "get_offset()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offset()"
  },
  {
    "label": "set_offset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offset(llvm::Value *val)"
  },
  {
    "label": "get_replacedValue()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_replacedValue()"
  },
  {
    "label": "set_replacedValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_replacedValue(llvm::Value *val)"
  },
  {
    "label": "DxilInst_Dot2()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Dot2 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Dot2(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_ax()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ax(llvm::Value *val)"
  },
  {
    "label": "get_ay()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ay()"
  },
  {
    "label": "set_ay()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ay(llvm::Value *val)"
  },
  {
    "label": "get_bx()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_bx()"
  },
  {
    "label": "set_bx()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_bx(llvm::Value *val)"
  },
  {
    "label": "get_by()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_by()"
  },
  {
    "label": "set_by()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_by(llvm::Value *val)"
  },
  {
    "label": "DxilInst_Dot3()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Dot3 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Dot3(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_az()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_az()"
  },
  {
    "label": "set_az()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_az(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(5, val)"
  },
  {
    "label": "get_bz()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_bz()"
  },
  {
    "label": "set_bz()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_bz(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(6, val)"
  },
  {
    "label": "DxilInst_Dot4()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Dot4 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Dot4(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_aw()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_aw()"
  },
  {
    "label": "set_aw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_aw(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(7, val)"
  },
  {
    "label": "get_bw()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_bw()"
  },
  {
    "label": "set_bw()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_bw(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(8, val)"
  },
  {
    "label": "DxilInst_CreateHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CreateHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CreateHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_resourceClass()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_resourceClass(llvm::Value *val)"
  },
  {
    "label": "get_resourceClass_val()",
    "kind": "Method",
    "detail": "Function (} int8_t)",
    "insertText": "get_resourceClass_val()"
  },
  {
    "label": "set_resourceClass_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_resourceClass_val(int8_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(1, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "get_rangeId()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_rangeId()"
  },
  {
    "label": "set_rangeId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_rangeId(llvm::Value *val)"
  },
  {
    "label": "get_rangeId_val()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "get_rangeId_val()"
  },
  {
    "label": "set_rangeId_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_rangeId_val(int32_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(2, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 32), llvm::APInt(32, (uint64_t)val)))"
  },
  {
    "label": "get_nonUniformIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_nonUniformIndex()"
  },
  {
    "label": "set_nonUniformIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_nonUniformIndex(llvm::Value *val)"
  },
  {
    "label": "get_nonUniformIndex_val()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "get_nonUniformIndex_val()"
  },
  {
    "label": "set_nonUniformIndex_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_nonUniformIndex_val(bool val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(4, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 1), llvm::APInt(1, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_CBufferLoad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CBufferLoad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CBufferLoad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_handle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_handle(llvm::Value *val)"
  },
  {
    "label": "get_byteOffset()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_byteOffset()"
  },
  {
    "label": "set_byteOffset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_byteOffset(llvm::Value *val)"
  },
  {
    "label": "get_alignment()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_alignment()"
  },
  {
    "label": "set_alignment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_alignment(llvm::Value *val)"
  },
  {
    "label": "get_alignment_val()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "get_alignment_val()"
  },
  {
    "label": "set_alignment_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_alignment_val(uint32_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(3, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 32), llvm::APInt(32, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_CBufferLoadLegacy()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CBufferLoadLegacy { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CBufferLoadLegacy(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_regIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_regIndex()"
  },
  {
    "label": "DxilInst_Sample()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Sample { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Sample(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_srv()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_srv(llvm::Value *val)"
  },
  {
    "label": "get_sampler()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_sampler()"
  },
  {
    "label": "set_sampler()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_sampler(llvm::Value *val)"
  },
  {
    "label": "get_coord0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_coord0()"
  },
  {
    "label": "set_coord0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_coord0(llvm::Value *val)"
  },
  {
    "label": "get_coord1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_coord1()"
  },
  {
    "label": "set_coord1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_coord1(llvm::Value *val)"
  },
  {
    "label": "get_coord2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_coord2()"
  },
  {
    "label": "set_coord2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_coord2(llvm::Value *val)"
  },
  {
    "label": "get_coord3()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_coord3()"
  },
  {
    "label": "set_coord3()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_coord3(llvm::Value *val)"
  },
  {
    "label": "get_offset0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offset0()"
  },
  {
    "label": "set_offset0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offset0(llvm::Value *val)"
  },
  {
    "label": "get_offset1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offset1()"
  },
  {
    "label": "set_offset1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offset1(llvm::Value *val)"
  },
  {
    "label": "get_offset2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offset2()"
  },
  {
    "label": "set_offset2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offset2(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(9, val)"
  },
  {
    "label": "get_clamp()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_clamp()"
  },
  {
    "label": "set_clamp()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_clamp(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(10, val)"
  },
  {
    "label": "DxilInst_SampleBias()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleBias { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleBias(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_bias()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_bias()"
  },
  {
    "label": "set_bias()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_bias(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(11, val)"
  },
  {
    "label": "DxilInst_SampleLevel()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleLevel { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleLevel(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_LOD()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_LOD()"
  },
  {
    "label": "set_LOD()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_LOD(llvm::Value *val)"
  },
  {
    "label": "DxilInst_SampleGrad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleGrad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleGrad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_ddx0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ddx0()"
  },
  {
    "label": "set_ddx0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ddx0(llvm::Value *val)"
  },
  {
    "label": "get_ddx1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ddx1()"
  },
  {
    "label": "set_ddx1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ddx1(llvm::Value *val)"
  },
  {
    "label": "get_ddx2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ddx2()"
  },
  {
    "label": "set_ddx2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ddx2(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(12, val)"
  },
  {
    "label": "get_ddy0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ddy0()"
  },
  {
    "label": "set_ddy0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ddy0(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(13, val)"
  },
  {
    "label": "get_ddy1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ddy1()"
  },
  {
    "label": "set_ddy1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ddy1(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(14, val)"
  },
  {
    "label": "get_ddy2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ddy2()"
  },
  {
    "label": "set_ddy2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ddy2(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(15, val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(16, val)"
  },
  {
    "label": "DxilInst_SampleCmp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleCmp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleCmp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_compareValue()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_compareValue()"
  },
  {
    "label": "set_compareValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_compareValue(llvm::Value *val)"
  },
  {
    "label": "DxilInst_SampleCmpLevelZero()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleCmpLevelZero { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleCmpLevelZero(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_TextureLoad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TextureLoad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TextureLoad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_mipLevelOrSampleCount()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mipLevelOrSampleCount()"
  },
  {
    "label": "set_mipLevelOrSampleCount()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mipLevelOrSampleCount(llvm::Value *val)"
  },
  {
    "label": "DxilInst_TextureStore()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TextureStore { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TextureStore(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_value0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_value0()"
  },
  {
    "label": "set_value0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_value0(llvm::Value *val)"
  },
  {
    "label": "get_value1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_value1()"
  },
  {
    "label": "set_value1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_value1(llvm::Value *val)"
  },
  {
    "label": "get_value2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_value2()"
  },
  {
    "label": "set_value2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_value2(llvm::Value *val)"
  },
  {
    "label": "get_value3()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_value3()"
  },
  {
    "label": "set_value3()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_value3(llvm::Value *val)"
  },
  {
    "label": "get_mask()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mask()"
  },
  {
    "label": "set_mask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mask(llvm::Value *val)"
  },
  {
    "label": "DxilInst_BufferLoad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BufferLoad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BufferLoad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_wot()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_wot()"
  },
  {
    "label": "set_wot()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_wot(llvm::Value *val)"
  },
  {
    "label": "DxilInst_BufferStore()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BufferStore { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BufferStore(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_uav()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_uav(llvm::Value *val)"
  },
  {
    "label": "DxilInst_BufferUpdateCounter()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BufferUpdateCounter { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BufferUpdateCounter(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_inc()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_inc()"
  },
  {
    "label": "set_inc()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_inc(llvm::Value *val)"
  },
  {
    "label": "DxilInst_CheckAccessFullyMapped()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CheckAccessFullyMapped { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CheckAccessFullyMapped(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_status()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_status(llvm::Value *val)"
  },
  {
    "label": "DxilInst_GetDimensions()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GetDimensions { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GetDimensions(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_mipLevel()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mipLevel()"
  },
  {
    "label": "set_mipLevel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mipLevel(llvm::Value *val)"
  },
  {
    "label": "DxilInst_TextureGather()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TextureGather { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TextureGather(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_channel()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_channel()"
  },
  {
    "label": "set_channel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_channel(llvm::Value *val)"
  },
  {
    "label": "DxilInst_TextureGatherCmp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TextureGatherCmp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TextureGatherCmp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Texture2DMSGetSamplePosition()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Texture2DMSGetSamplePosition { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Texture2DMSGetSamplePosition(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RenderTargetGetSamplePosition()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RenderTargetGetSamplePosition { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RenderTargetGetSamplePosition(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RenderTargetGetSampleCount()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RenderTargetGetSampleCount { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RenderTargetGetSampleCount(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_atomicOp()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_atomicOp()"
  },
  {
    "label": "set_atomicOp()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_atomicOp(llvm::Value *val)"
  },
  {
    "label": "get_newValue()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_newValue()"
  },
  {
    "label": "set_newValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_newValue(llvm::Value *val)"
  },
  {
    "label": "DxilInst_AtomicCompareExchange()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AtomicCompareExchange { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AtomicCompareExchange(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_Barrier()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Barrier { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Barrier(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_barrierMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_barrierMode(llvm::Value *val)"
  },
  {
    "label": "get_barrierMode_val()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "get_barrierMode_val()"
  },
  {
    "label": "set_barrierMode_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_barrierMode_val(int32_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(1, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 32), llvm::APInt(32, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_CalculateLOD()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CalculateLOD { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CalculateLOD(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_clamped()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_clamped()"
  },
  {
    "label": "set_clamped()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_clamped(llvm::Value *val)"
  },
  {
    "label": "DxilInst_Discard()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Discard { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Discard(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_condition()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_condition(llvm::Value *val)"
  },
  {
    "label": "DxilInst_DerivCoarseX()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DerivCoarseX { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DerivCoarseX(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_DerivCoarseY()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DerivCoarseY { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DerivCoarseY(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_DerivFineX()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DerivFineX { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DerivFineX(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_DerivFineY()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DerivFineY { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DerivFineY(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_EvalSnapped()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_EvalSnapped { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_EvalSnapped(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_inputRowIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_inputRowIndex()"
  },
  {
    "label": "set_inputRowIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_inputRowIndex(llvm::Value *val)"
  },
  {
    "label": "get_inputColIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_inputColIndex()"
  },
  {
    "label": "set_inputColIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_inputColIndex(llvm::Value *val)"
  },
  {
    "label": "get_offsetX()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offsetX()"
  },
  {
    "label": "set_offsetX()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offsetX(llvm::Value *val)"
  },
  {
    "label": "get_offsetY()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offsetY()"
  },
  {
    "label": "set_offsetY()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offsetY(llvm::Value *val)"
  },
  {
    "label": "DxilInst_EvalSampleIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_EvalSampleIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_EvalSampleIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_sampleIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_sampleIndex()"
  },
  {
    "label": "set_sampleIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_sampleIndex(llvm::Value *val)"
  },
  {
    "label": "DxilInst_EvalCentroid()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_EvalCentroid { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_EvalCentroid(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_SampleIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_GroupId()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GroupId { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GroupId(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_ThreadIdInGroup()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_ThreadIdInGroup { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_ThreadIdInGroup(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_FlattenedThreadIdInGroup()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FlattenedThreadIdInGroup { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FlattenedThreadIdInGroup(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_streamId()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_streamId(llvm::Value *val)"
  },
  {
    "label": "DxilInst_CutStream()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CutStream { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CutStream(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_EmitThenCutStream()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_EmitThenCutStream { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_EmitThenCutStream(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_GSInstanceID()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GSInstanceID { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GSInstanceID(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_lo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_lo(llvm::Value *val)"
  },
  {
    "label": "get_hi()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_hi()"
  },
  {
    "label": "set_hi()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_hi(llvm::Value *val)"
  },
  {
    "label": "DxilInst_SplitDouble()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SplitDouble { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SplitDouble(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_LoadOutputControlPoint()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LoadOutputControlPoint { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LoadOutputControlPoint(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_row()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_row()"
  },
  {
    "label": "set_row()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_row(llvm::Value *val)"
  },
  {
    "label": "get_col()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_col()"
  },
  {
    "label": "set_col()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_col(llvm::Value *val)"
  },
  {
    "label": "DxilInst_LoadPatchConstant()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LoadPatchConstant { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LoadPatchConstant(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_DomainLocation()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DomainLocation { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DomainLocation(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_component_val()",
    "kind": "Method",
    "detail": "Function (} int8_t)",
    "insertText": "get_component_val()"
  },
  {
    "label": "set_component_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_component_val(int8_t val)"
  },
  {
    "label": "DxilInst_StorePatchConstant()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_StorePatchConstant { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_StorePatchConstant(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_outputSigID()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_outputSigID(llvm::Value *val)"
  },
  {
    "label": "DxilInst_OutputControlPointID()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_OutputControlPointID { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_OutputControlPointID(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_cond()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_cond(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WaveAllTrue()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveAllTrue { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveAllTrue(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveActiveAllEqual()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveActiveAllEqual { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveActiveAllEqual(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveActiveBallot()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveActiveBallot { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveActiveBallot(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveReadLaneAt()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveReadLaneAt { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveReadLaneAt(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_lane()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_lane()"
  },
  {
    "label": "set_lane()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_lane(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WaveReadLaneFirst()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveReadLaneFirst { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveReadLaneFirst(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveActiveOp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveActiveOp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveActiveOp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_op()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_op()"
  },
  {
    "label": "set_op()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_op(llvm::Value *val)"
  },
  {
    "label": "get_op_val()",
    "kind": "Method",
    "detail": "Function (} int8_t)",
    "insertText": "get_op_val()"
  },
  {
    "label": "set_op_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_op_val(int8_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(2, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "get_sop()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_sop()"
  },
  {
    "label": "set_sop()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_sop(llvm::Value *val)"
  },
  {
    "label": "get_sop_val()",
    "kind": "Method",
    "detail": "Function (} int8_t)",
    "insertText": "get_sop_val()"
  },
  {
    "label": "set_sop_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_sop_val(int8_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(3, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_WaveActiveBit()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveActiveBit { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveActiveBit(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WavePrefixOp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WavePrefixOp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WavePrefixOp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_QuadReadLaneAt()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_QuadReadLaneAt { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_QuadReadLaneAt(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_quadLane()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_quadLane()"
  },
  {
    "label": "set_quadLane()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_quadLane(llvm::Value *val)"
  },
  {
    "label": "DxilInst_QuadOp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_QuadOp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_QuadOp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BitcastI16toF16()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BitcastI16toF16 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BitcastI16toF16(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BitcastF16toI16()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BitcastF16toI16 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BitcastF16toI16(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BitcastI32toF32()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BitcastI32toF32 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BitcastI32toF32(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BitcastF32toI32()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BitcastF32toI32 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BitcastF32toI32(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BitcastI64toF64()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BitcastI64toF64 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BitcastI64toF64(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BitcastF64toI64()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BitcastF64toI64 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BitcastF64toI64(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_LegacyF32ToF16()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LegacyF32ToF16 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LegacyF32ToF16(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_LegacyF16ToF32()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LegacyF16ToF32 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LegacyF16ToF32(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_LegacyDoubleToFloat()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LegacyDoubleToFloat { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LegacyDoubleToFloat(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_LegacyDoubleToSInt32()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LegacyDoubleToSInt32 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LegacyDoubleToSInt32(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_LegacyDoubleToUInt32()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_LegacyDoubleToUInt32 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_LegacyDoubleToUInt32(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveAllBitCount()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveAllBitCount { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveAllBitCount(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WavePrefixBitCount()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WavePrefixBitCount { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WavePrefixBitCount(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_AttributeAtVertex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AttributeAtVertex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AttributeAtVertex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_VertexID()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_VertexID()"
  },
  {
    "label": "set_VertexID()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_VertexID(llvm::Value *val)"
  },
  {
    "label": "DxilInst_ViewID()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_ViewID { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_ViewID(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_elementOffset()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_elementOffset()"
  },
  {
    "label": "set_elementOffset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_elementOffset(llvm::Value *val)"
  },
  {
    "label": "get_mask_val()",
    "kind": "Method",
    "detail": "Function (} int8_t)",
    "insertText": "get_mask_val()"
  },
  {
    "label": "set_mask_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mask_val(int8_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(4, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "set_alignment_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_alignment_val(int32_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(5, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 32), llvm::APInt(32, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_RawBufferStore()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RawBufferStore { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RawBufferStore(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(8, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(9, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 32), llvm::APInt(32, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_InstanceID()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_InstanceID { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_InstanceID(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_DispatchRaysDimensions()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DispatchRaysDimensions { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DispatchRaysDimensions(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WorldRayOrigin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WorldRayOrigin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WorldRayOrigin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WorldRayDirection()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WorldRayDirection { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WorldRayDirection(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_ObjectRayOrigin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_ObjectRayOrigin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_ObjectRayOrigin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_ObjectRayDirection()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_ObjectRayDirection { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_ObjectRayDirection(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_ObjectToWorld()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_ObjectToWorld { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_ObjectToWorld(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WorldToObject()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WorldToObject { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WorldToObject(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayTMin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayTMin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayTMin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_AccelerationStructure()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_AccelerationStructure(llvm::Value *val)"
  },
  {
    "label": "get_RayFlags()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_RayFlags()"
  },
  {
    "label": "set_RayFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_RayFlags(llvm::Value *val)"
  },
  {
    "label": "get_InstanceInclusionMask()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_InstanceInclusionMask()"
  },
  {
    "label": "set_InstanceInclusionMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_InstanceInclusionMask(llvm::Value *val)"
  },
  {
    "label": "get_RayContributionToHitGroupIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_RayContributionToHitGroupIndex()"
  },
  {
    "label": "set_RayContributionToHitGroupIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_RayContributionToHitGroupIndex(llvm::Value *val)"
  },
  {
    "label": "get_MultiplierForGeometryContributionToShaderIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_MultiplierForGeometryContributionToShaderIndex()"
  },
  {
    "label": "set_MultiplierForGeometryContributionToShaderIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_MultiplierForGeometryContributionToShaderIndex(llvm::Value *val)"
  },
  {
    "label": "get_MissShaderIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_MissShaderIndex()"
  },
  {
    "label": "set_MissShaderIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_MissShaderIndex(llvm::Value *val)"
  },
  {
    "label": "get_Origin_X()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Origin_X()"
  },
  {
    "label": "set_Origin_X()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Origin_X(llvm::Value *val)"
  },
  {
    "label": "get_Origin_Y()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Origin_Y()"
  },
  {
    "label": "set_Origin_Y()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Origin_Y(llvm::Value *val)"
  },
  {
    "label": "get_Origin_Z()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Origin_Z()"
  },
  {
    "label": "set_Origin_Z()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Origin_Z(llvm::Value *val)"
  },
  {
    "label": "get_TMin()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_TMin()"
  },
  {
    "label": "set_TMin()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_TMin(llvm::Value *val)"
  },
  {
    "label": "get_Direction_X()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Direction_X()"
  },
  {
    "label": "set_Direction_X()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Direction_X(llvm::Value *val)"
  },
  {
    "label": "get_Direction_Y()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Direction_Y()"
  },
  {
    "label": "set_Direction_Y()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Direction_Y(llvm::Value *val)"
  },
  {
    "label": "get_Direction_Z()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Direction_Z()"
  },
  {
    "label": "set_Direction_Z()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Direction_Z(llvm::Value *val)"
  },
  {
    "label": "get_TMax()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_TMax()"
  },
  {
    "label": "set_TMax()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_TMax(llvm::Value *val)"
  },
  {
    "label": "get_payload()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_payload()"
  },
  {
    "label": "set_payload()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_payload(llvm::Value *val)"
  },
  {
    "label": "DxilInst_ReportHit()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_ReportHit { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_ReportHit(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_THit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_THit(llvm::Value *val)"
  },
  {
    "label": "get_HitKind()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_HitKind()"
  },
  {
    "label": "set_HitKind()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_HitKind(llvm::Value *val)"
  },
  {
    "label": "get_Attributes()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Attributes()"
  },
  {
    "label": "set_Attributes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Attributes(llvm::Value *val)"
  },
  {
    "label": "DxilInst_CallShader()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CallShader { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CallShader(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_ShaderIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ShaderIndex(llvm::Value *val)"
  },
  {
    "label": "get_Parameter()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_Parameter()"
  },
  {
    "label": "set_Parameter()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Parameter(llvm::Value *val)"
  },
  {
    "label": "DxilInst_CreateHandleForLib()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CreateHandleForLib { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CreateHandleForLib(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_Resource()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_Resource(llvm::Value *val)"
  },
  {
    "label": "DxilInst_PrimitiveIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_PrimitiveIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_PrimitiveIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_acc()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_acc(llvm::Value *val)"
  },
  {
    "label": "get_ax()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ax()"
  },
  {
    "label": "DxilInst_Dot4AddI8Packed()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Dot4AddI8Packed { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Dot4AddI8Packed(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_a()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_a()"
  },
  {
    "label": "DxilInst_Dot4AddU8Packed()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Dot4AddU8Packed { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Dot4AddU8Packed(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatch()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatch { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatch(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMultiPrefixOp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMultiPrefixOp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMultiPrefixOp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_mask0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mask0()"
  },
  {
    "label": "set_mask0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mask0(llvm::Value *val)"
  },
  {
    "label": "get_mask1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mask1()"
  },
  {
    "label": "set_mask1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mask1(llvm::Value *val)"
  },
  {
    "label": "get_mask2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mask2()"
  },
  {
    "label": "set_mask2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mask2(llvm::Value *val)"
  },
  {
    "label": "get_mask3()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_mask3()"
  },
  {
    "label": "set_mask3()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_mask3(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(6, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(7, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_WaveMultiPrefixBitCount()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMultiPrefixBitCount { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMultiPrefixBitCount(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_SetMeshOutputCounts()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SetMeshOutputCounts { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SetMeshOutputCounts(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_numVertices()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_numVertices(llvm::Value *val)"
  },
  {
    "label": "get_numPrimitives()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_numPrimitives()"
  },
  {
    "label": "set_numPrimitives()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_numPrimitives(llvm::Value *val)"
  },
  {
    "label": "DxilInst_EmitIndices()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_EmitIndices { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_EmitIndices(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_PrimitiveIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_PrimitiveIndex(llvm::Value *val)"
  },
  {
    "label": "get_VertexIndex0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_VertexIndex0()"
  },
  {
    "label": "set_VertexIndex0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_VertexIndex0(llvm::Value *val)"
  },
  {
    "label": "get_VertexIndex1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_VertexIndex1()"
  },
  {
    "label": "set_VertexIndex1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_VertexIndex1(llvm::Value *val)"
  },
  {
    "label": "get_VertexIndex2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_VertexIndex2()"
  },
  {
    "label": "set_VertexIndex2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_VertexIndex2(llvm::Value *val)"
  },
  {
    "label": "DxilInst_GetMeshPayload()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GetMeshPayload { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GetMeshPayload(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_vertexIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_vertexIndex()"
  },
  {
    "label": "set_vertexIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_vertexIndex(llvm::Value *val)"
  },
  {
    "label": "DxilInst_StorePrimitiveOutput()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_StorePrimitiveOutput { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_StorePrimitiveOutput(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_primitiveIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_primitiveIndex()"
  },
  {
    "label": "set_primitiveIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_primitiveIndex(llvm::Value *val)"
  },
  {
    "label": "DxilInst_DispatchMesh()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_DispatchMesh { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_DispatchMesh(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_threadGroupCountX()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_threadGroupCountX(llvm::Value *val)"
  },
  {
    "label": "get_threadGroupCountY()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_threadGroupCountY()"
  },
  {
    "label": "set_threadGroupCountY()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_threadGroupCountY(llvm::Value *val)"
  },
  {
    "label": "get_threadGroupCountZ()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_threadGroupCountZ()"
  },
  {
    "label": "set_threadGroupCountZ()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_threadGroupCountZ(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WriteSamplerFeedback()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WriteSamplerFeedback { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WriteSamplerFeedback(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_feedbackTex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_feedbackTex(llvm::Value *val)"
  },
  {
    "label": "get_sampledTex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_sampledTex()"
  },
  {
    "label": "set_sampledTex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_sampledTex(llvm::Value *val)"
  },
  {
    "label": "get_c0()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_c0()"
  },
  {
    "label": "set_c0()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_c0(llvm::Value *val)"
  },
  {
    "label": "get_c1()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_c1()"
  },
  {
    "label": "set_c1()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_c1(llvm::Value *val)"
  },
  {
    "label": "get_c2()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_c2()"
  },
  {
    "label": "set_c2()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_c2(llvm::Value *val)"
  },
  {
    "label": "get_c3()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_c3()"
  },
  {
    "label": "set_c3()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_c3(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WriteSamplerFeedbackBias()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WriteSamplerFeedbackBias { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WriteSamplerFeedbackBias(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WriteSamplerFeedbackLevel()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WriteSamplerFeedbackLevel { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WriteSamplerFeedbackLevel(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_lod()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_lod()"
  },
  {
    "label": "set_lod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_lod(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WriteSamplerFeedbackGrad()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WriteSamplerFeedbackGrad { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WriteSamplerFeedbackGrad(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_AllocateRayQuery()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AllocateRayQuery { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AllocateRayQuery(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_constRayFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_constRayFlags(llvm::Value *val)"
  },
  {
    "label": "get_constRayFlags_val()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "get_constRayFlags_val()"
  },
  {
    "label": "set_constRayFlags_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_constRayFlags_val(uint32_t val)"
  },
  {
    "label": "DxilInst_RayQuery_TraceRayInline()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_TraceRayInline { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_TraceRayInline(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_rayQueryHandle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_rayQueryHandle(llvm::Value *val)"
  },
  {
    "label": "get_accelerationStructure()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_accelerationStructure()"
  },
  {
    "label": "set_accelerationStructure()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_accelerationStructure(llvm::Value *val)"
  },
  {
    "label": "get_rayFlags()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_rayFlags()"
  },
  {
    "label": "set_rayFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_rayFlags(llvm::Value *val)"
  },
  {
    "label": "get_instanceInclusionMask()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_instanceInclusionMask()"
  },
  {
    "label": "set_instanceInclusionMask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_instanceInclusionMask(llvm::Value *val)"
  },
  {
    "label": "get_origin_X()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_origin_X()"
  },
  {
    "label": "set_origin_X()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_origin_X(llvm::Value *val)"
  },
  {
    "label": "get_origin_Y()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_origin_Y()"
  },
  {
    "label": "set_origin_Y()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_origin_Y(llvm::Value *val)"
  },
  {
    "label": "get_origin_Z()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_origin_Z()"
  },
  {
    "label": "set_origin_Z()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_origin_Z(llvm::Value *val)"
  },
  {
    "label": "get_tMin()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_tMin()"
  },
  {
    "label": "set_tMin()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_tMin(llvm::Value *val)"
  },
  {
    "label": "get_direction_X()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_direction_X()"
  },
  {
    "label": "set_direction_X()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_direction_X(llvm::Value *val)"
  },
  {
    "label": "get_direction_Y()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_direction_Y()"
  },
  {
    "label": "set_direction_Y()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_direction_Y(llvm::Value *val)"
  },
  {
    "label": "get_direction_Z()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_direction_Z()"
  },
  {
    "label": "set_direction_Z()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_direction_Z(llvm::Value *val)"
  },
  {
    "label": "get_tMax()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_tMax()"
  },
  {
    "label": "set_tMax()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_tMax(llvm::Value *val)"
  },
  {
    "label": "DxilInst_RayQuery_Proceed()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_Proceed { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_Proceed(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_Abort()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_Abort { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_Abort(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommitNonOpaqueTriangleHit()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommitNonOpaqueTriangleHit { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommitNonOpaqueTriangleHit(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommitProceduralPrimitiveHit()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommitProceduralPrimitiveHit { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommitProceduralPrimitiveHit(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_t()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_t()"
  },
  {
    "label": "set_t()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_t(llvm::Value *val)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedStatus()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedStatus { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedStatus(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateType()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateType { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateType(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateObjectToWorld3x4()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateObjectToWorld3x4 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateObjectToWorld3x4(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateWorldToObject3x4()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateWorldToObject3x4 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateWorldToObject3x4(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedObjectToWorld3x4()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedObjectToWorld3x4 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedObjectToWorld3x4(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedWorldToObject3x4()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedWorldToObject3x4 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedWorldToObject3x4(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateProceduralPrimitiveNonOpaque()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateProceduralPrimitiveNonOpaque { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateProceduralPrimitiveNonOpaque(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateTriangleFrontFace()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateTriangleFrontFace { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateTriangleFrontFace(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedTriangleFrontFace()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedTriangleFrontFace { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedTriangleFrontFace(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateTriangleBarycentrics()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateTriangleBarycentrics { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateTriangleBarycentrics(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedTriangleBarycentrics()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedTriangleBarycentrics { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedTriangleBarycentrics(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_RayFlags()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_RayFlags { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_RayFlags(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_WorldRayOrigin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_WorldRayOrigin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_WorldRayOrigin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_WorldRayDirection()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_WorldRayDirection { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_WorldRayDirection(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_RayTMin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_RayTMin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_RayTMin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateTriangleRayT()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateTriangleRayT { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateTriangleRayT(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedRayT()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedRayT { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedRayT(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateInstanceIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateInstanceIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateInstanceIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateInstanceID()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateInstanceID { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateInstanceID(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateGeometryIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateGeometryIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateGeometryIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidatePrimitiveIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidatePrimitiveIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidatePrimitiveIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateObjectRayOrigin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateObjectRayOrigin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateObjectRayOrigin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CandidateObjectRayDirection()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CandidateObjectRayDirection { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CandidateObjectRayDirection(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedInstanceIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedInstanceIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedInstanceIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedInstanceID()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedInstanceID { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedInstanceID(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedGeometryIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedGeometryIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedGeometryIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedPrimitiveIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedPrimitiveIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedPrimitiveIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedObjectRayOrigin()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedObjectRayOrigin { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedObjectRayOrigin(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedObjectRayDirection()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedObjectRayDirection { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedObjectRayDirection(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_GeometryIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GeometryIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GeometryIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_RayQuery_CommittedInstanceContributionToHitGroupIndex()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_RayQuery_CommittedInstanceContributionToHitGroupIndex { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_RayQuery_CommittedInstanceContributionToHitGroupIndex(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_AnnotateHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AnnotateHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AnnotateHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_res()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_res(llvm::Value *val)"
  },
  {
    "label": "get_props()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_props()"
  },
  {
    "label": "set_props()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_props(llvm::Value *val)"
  },
  {
    "label": "DxilInst_CreateHandleFromBinding()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CreateHandleFromBinding { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CreateHandleFromBinding(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_bind()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_bind(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(3, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 1), llvm::APInt(1, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_CreateHandleFromHeap()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CreateHandleFromHeap { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CreateHandleFromHeap(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_samplerHeap()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_samplerHeap()"
  },
  {
    "label": "set_samplerHeap()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_samplerHeap(llvm::Value *val)"
  },
  {
    "label": "get_samplerHeap_val()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "get_samplerHeap_val()"
  },
  {
    "label": "set_samplerHeap_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_samplerHeap_val(bool val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(2, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 1), llvm::APInt(1, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_Unpack4x8()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Unpack4x8 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Unpack4x8(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_unpackMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_unpackMode(llvm::Value *val)"
  },
  {
    "label": "get_pk()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_pk()"
  },
  {
    "label": "set_pk()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_pk(llvm::Value *val)"
  },
  {
    "label": "DxilInst_Pack4x8()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_Pack4x8 { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_Pack4x8(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_packMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_packMode(llvm::Value *val)"
  },
  {
    "label": "get_x()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_x()"
  },
  {
    "label": "set_x()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_x(llvm::Value *val)"
  },
  {
    "label": "get_y()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_y()"
  },
  {
    "label": "set_y()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_y(llvm::Value *val)"
  },
  {
    "label": "get_z()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_z()"
  },
  {
    "label": "set_z()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_z(llvm::Value *val)"
  },
  {
    "label": "get_w()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_w()"
  },
  {
    "label": "set_w()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_w(llvm::Value *val)"
  },
  {
    "label": "DxilInst_IsHelperLane()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IsHelperLane { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IsHelperLane(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_TextureGatherRaw()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TextureGatherRaw { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TextureGatherRaw(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_SampleCmpLevel()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleCmpLevel { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleCmpLevel(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_TextureStoreSample()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_TextureStoreSample { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_TextureStoreSample(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(9, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "get_sampleIdx()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_sampleIdx()"
  },
  {
    "label": "set_sampleIdx()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_sampleIdx(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WaveMatrix_Annotate()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_Annotate { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_Annotate(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_waveMatrixPtr()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixPtr(llvm::Value *val)"
  },
  {
    "label": "get_waveMatProps()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_waveMatProps()"
  },
  {
    "label": "set_waveMatProps()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatProps(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WaveMatrix_Depth()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_Depth { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_Depth(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatrix_Fill()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_Fill { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_Fill(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatrix_LoadRawBuf()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_LoadRawBuf { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_LoadRawBuf(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_rawBuf()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_rawBuf()"
  },
  {
    "label": "set_rawBuf()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_rawBuf(llvm::Value *val)"
  },
  {
    "label": "get_offsetInBytes()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_offsetInBytes()"
  },
  {
    "label": "set_offsetInBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_offsetInBytes(llvm::Value *val)"
  },
  {
    "label": "get_strideInBytes()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_strideInBytes()"
  },
  {
    "label": "set_strideInBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_strideInBytes(llvm::Value *val)"
  },
  {
    "label": "get_alignmentInBytes()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_alignmentInBytes()"
  },
  {
    "label": "set_alignmentInBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_alignmentInBytes(llvm::Value *val)"
  },
  {
    "label": "get_alignmentInBytes_val()",
    "kind": "Method",
    "detail": "Function (} int8_t)",
    "insertText": "get_alignmentInBytes_val()"
  },
  {
    "label": "set_alignmentInBytes_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_alignmentInBytes_val(int8_t val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(5, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 8), llvm::APInt(8, (uint64_t)val)))"
  },
  {
    "label": "get_colMajor()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_colMajor()"
  },
  {
    "label": "set_colMajor()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_colMajor(llvm::Value *val)"
  },
  {
    "label": "get_colMajor_val()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "get_colMajor_val()"
  },
  {
    "label": "set_colMajor_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_colMajor_val(bool val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(6, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 1), llvm::APInt(1, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_WaveMatrix_LoadGroupShared()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_LoadGroupShared { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_LoadGroupShared(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_groupsharedPtr()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_groupsharedPtr()"
  },
  {
    "label": "set_groupsharedPtr()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_groupsharedPtr(llvm::Value *val)"
  },
  {
    "label": "get_startArrayIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_startArrayIndex()"
  },
  {
    "label": "set_startArrayIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_startArrayIndex(llvm::Value *val)"
  },
  {
    "label": "get_strideInElements()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_strideInElements()"
  },
  {
    "label": "set_strideInElements()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_strideInElements(llvm::Value *val)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(5, llvm::Constant::getIntegerValue( llvm::IntegerType::get(Instr->getContext(), 1), llvm::APInt(1, (uint64_t)val)))"
  },
  {
    "label": "DxilInst_WaveMatrix_StoreRawBuf()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_StoreRawBuf { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_StoreRawBuf(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatrix_StoreGroupShared()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_StoreGroupShared { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_StoreGroupShared(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatrix_Multiply()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_Multiply { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_Multiply(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_waveMatrixAccumulator()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixAccumulator(llvm::Value *val)"
  },
  {
    "label": "get_waveMatrixLeft()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_waveMatrixLeft()"
  },
  {
    "label": "set_waveMatrixLeft()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixLeft(llvm::Value *val)"
  },
  {
    "label": "get_waveMatrixRight()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_waveMatrixRight()"
  },
  {
    "label": "set_waveMatrixRight()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixRight(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WaveMatrix_MultiplyAccumulate()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_MultiplyAccumulate { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_MultiplyAccumulate(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatrix_ScalarOp()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_ScalarOp { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_ScalarOp(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_WaveMatrix_SumAccumulate()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_SumAccumulate { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_SumAccumulate(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_waveMatrixFragment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixFragment(llvm::Value *val)"
  },
  {
    "label": "get_waveMatrixInput()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_waveMatrixInput()"
  },
  {
    "label": "set_waveMatrixInput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixInput(llvm::Value *val)"
  },
  {
    "label": "DxilInst_WaveMatrix_Add()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_WaveMatrix_Add { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_WaveMatrix_Add(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_waveMatrixAccumulatorOrFragment()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_waveMatrixAccumulatorOrFragment()"
  },
  {
    "label": "set_waveMatrixAccumulatorOrFragment()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_waveMatrixAccumulatorOrFragment(llvm::Value *val)"
  },
  {
    "label": "DxilInst_AllocateNodeOutputRecords()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AllocateNodeOutputRecords { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AllocateNodeOutputRecords(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_output()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_output(llvm::Value *val)"
  },
  {
    "label": "get_numRecords()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_numRecords()"
  },
  {
    "label": "set_numRecords()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_numRecords(llvm::Value *val)"
  },
  {
    "label": "get_perThread()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_perThread()"
  },
  {
    "label": "set_perThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_perThread(llvm::Value *val)"
  },
  {
    "label": "get_perThread_val()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "get_perThread_val()"
  },
  {
    "label": "set_perThread_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_perThread_val(bool val)"
  },
  {
    "label": "DxilInst_GetNodeRecordPtr()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GetNodeRecordPtr { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GetNodeRecordPtr(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_recordhandle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_recordhandle(llvm::Value *val)"
  },
  {
    "label": "get_arrayIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_arrayIndex()"
  },
  {
    "label": "set_arrayIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_arrayIndex(llvm::Value *val)"
  },
  {
    "label": "DxilInst_IncrementOutputCount()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IncrementOutputCount { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IncrementOutputCount(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "get_count()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_count()"
  },
  {
    "label": "set_count()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_count(llvm::Value *val)"
  },
  {
    "label": "DxilInst_OutputComplete()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_OutputComplete { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_OutputComplete(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_GetInputRecordCount()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GetInputRecordCount { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GetInputRecordCount(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_input()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_input(llvm::Value *val)"
  },
  {
    "label": "DxilInst_FinishedCrossGroupSharing()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_FinishedCrossGroupSharing { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_FinishedCrossGroupSharing(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_BarrierByMemoryType()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BarrierByMemoryType { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BarrierByMemoryType(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_MemoryTypeFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_MemoryTypeFlags(llvm::Value *val)"
  },
  {
    "label": "get_MemoryTypeFlags_val()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "get_MemoryTypeFlags_val()"
  },
  {
    "label": "set_MemoryTypeFlags_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_MemoryTypeFlags_val(int32_t val)"
  },
  {
    "label": "get_SemanticFlags()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_SemanticFlags()"
  },
  {
    "label": "set_SemanticFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_SemanticFlags(llvm::Value *val)"
  },
  {
    "label": "get_SemanticFlags_val()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "get_SemanticFlags_val()"
  },
  {
    "label": "set_SemanticFlags_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_SemanticFlags_val(int32_t val)"
  },
  {
    "label": "DxilInst_BarrierByMemoryHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BarrierByMemoryHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BarrierByMemoryHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_object()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_object(llvm::Value *val)"
  },
  {
    "label": "DxilInst_BarrierByNodeRecordHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_BarrierByNodeRecordHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_BarrierByNodeRecordHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_CreateNodeOutputHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CreateNodeOutputHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CreateNodeOutputHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_MetadataIdx()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_MetadataIdx(llvm::Value *val)"
  },
  {
    "label": "get_MetadataIdx_val()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "get_MetadataIdx_val()"
  },
  {
    "label": "set_MetadataIdx_val()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_MetadataIdx_val(int32_t val)"
  },
  {
    "label": "DxilInst_IndexNodeHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_IndexNodeHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_IndexNodeHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_NodeOutputHandle()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_NodeOutputHandle(llvm::Value *val)"
  },
  {
    "label": "get_ArrayIndex()",
    "kind": "Method",
    "detail": "Function (} llvm::Value*)",
    "insertText": "get_ArrayIndex()"
  },
  {
    "label": "set_ArrayIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_ArrayIndex(llvm::Value *val)"
  },
  {
    "label": "DxilInst_AnnotateNodeHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AnnotateNodeHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AnnotateNodeHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_node()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_node(llvm::Value *val)"
  },
  {
    "label": "DxilInst_CreateNodeInputRecordHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_CreateNodeInputRecordHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_CreateNodeInputRecordHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_AnnotateNodeRecordHandle()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_AnnotateNodeRecordHandle { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_AnnotateNodeRecordHandle(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "set_noderecord()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set_noderecord(llvm::Value *val)"
  },
  {
    "label": "DxilInst_NodeOutputIsValid()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_NodeOutputIsValid { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_NodeOutputIsValid(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_GetRemainingRecursionLevels()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_GetRemainingRecursionLevels { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_GetRemainingRecursionLevels(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "setOperand()",
    "kind": "Method",
    "detail": "Function (Instr ->)",
    "insertText": "setOperand(17, val)"
  },
  {
    "label": "DxilInst_SampleCmpBias()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_SampleCmpBias { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_SampleCmpBias(llvm::Instruction *pInstr) : Instr(pInstr)"
  },
  {
    "label": "DxilInst_StartVertexLocation()",
    "kind": "Method",
    "detail": "Function (} } ; struct DxilInst_StartVertexLocation { llvm::Instruction* Instr ;)",
    "insertText": "DxilInst_StartVertexLocation(llvm::Instruction *pInstr) : Instr(pInstr)"
  }
]