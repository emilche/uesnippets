[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FTextBlockStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextBlockStyle"
  },
  {
    "label": "FTextArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextArgs"
  },
  {
    "label": "ISlateRun",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateRun"
  },
  {
    "label": "FTextArgs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" Framework / Text / IRun . h \" # include \" Framework / Text / TextLayout . h \" # include \" Framework / Text / ILayoutBlock . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; struct FTextBlockStyle ; struct FTextArgs {)",
    "insertText": "FTextArgs(const FTextLayout::FLineView& InLine, const TSharedRef<ILayoutBlock>& InBlock, const FTextBlockStyle& InDefaultStyle, ETextOverflowPolicy InOverflowPolicy, ETextOverflowDirection InOverflowDirection) : Line(InLine) , Block(InBlock) , DefaultStyle(InDefaultStyle) , OverflowPolicy(InOverflowPolicy) , OverflowDirection(InOverflowDirection) , bIsLastVisibleBlock(false) , bIsNextBlockClipped(false)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (} const FTextLayout::FLineView& Line ; const TSharedRef<ILayoutBlock>& Block ; const FTextBlockStyle& DefaultStyle ; ETextOverflowPolicy OverflowPolicy ; ETextOverflowDirection OverflowDirection ; bool bIsLastVisibleBlock ; bool bIsNextBlockClipped ; } ; class ISlateRun : public IRun { public : int32)",
    "insertText": "OnPaint(const FPaintArgs& PaintArgs, const FTextArgs& TextArgs, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<SWidget>>&)",
    "insertText": "GetChildren()"
  },
  {
    "label": "ArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ArrangeChildren(const TSharedRef< ILayoutBlock >& Block, const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  }
]