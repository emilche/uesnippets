[
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "MaskKernel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MaskKernel"
  },
  {
    "label": "InitExt",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitExt"
  },
  {
    "label": "InitSdf",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitSdf"
  },
  {
    "label": "DilateKernel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DilateKernel"
  },
  {
    "label": "MinMaxKernel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MinMaxKernel"
  },
  {
    "label": "SweepingKernel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SweepingKernel"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FastSweeping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FastSweeping"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "NN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NN"
  },
  {
    "label": "not",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "not"
  },
  {
    "label": "fogToSdf()",
    "kind": "Method",
    "detail": "Function (GridT::Ptr)",
    "insertText": "fogToSdf(const GridT &fogGrid,\n         typename GridT::ValueType isoValue,\n         int nIter = 1)"
  },
  {
    "label": "sdfToSdf()",
    "kind": "Method",
    "detail": "Function (GridT::Ptr)",
    "insertText": "sdfToSdf(const GridT &sdfGrid,\n         typename GridT::ValueType isoValue = 0,\n         int nIter = 1)"
  },
  {
    "label": "fogToExt()",
    "kind": "Method",
    "detail": "Function (ValueConverter<ExtValueT>::Type::Ptr)",
    "insertText": "fogToExt(const FogGridT &fogGrid,\n         const ExtOpT &op,\n         const ExtValueT& background,\n         typename FogGridT::ValueType isoValue,\n         int nIter = 1)"
  },
  {
    "label": "sdfToExt()",
    "kind": "Method",
    "detail": "Function (ValueConverter<ExtValueT>::Type::Ptr)",
    "insertText": "sdfToExt(const SdfGridT &sdfGrid,\n         const ExtOpT &op,\n         const ExtValueT &background,\n         typename SdfGridT::ValueType isoValue = 0,\n         int nIter = 1)"
  },
  {
    "label": "fogToSdfAndExt()",
    "kind": "Method",
    "detail": "Function (ValueConverter<ExtValueT>::Type::Ptr>)",
    "insertText": "fogToSdfAndExt(const FogGridT &fogGrid,\n               const ExtOpT &op,\n               const ExtValueT &background,\n               typename FogGridT::ValueType isoValue,\n               int nIter = 1)"
  },
  {
    "label": "sdfToSdfAndExt()",
    "kind": "Method",
    "detail": "Function (ValueConverter<ExtValueT>::Type::Ptr>)",
    "insertText": "sdfToSdfAndExt(const SdfGridT &sdfGrid,\n               const ExtOpT &op,\n               const ExtValueT &background,\n               typename SdfGridT::ValueType isoValue = 0,\n               int nIter = 1)"
  },
  {
    "label": "dilateSdf()",
    "kind": "Method",
    "detail": "Function (GridT::Ptr)",
    "insertText": "dilateSdf(const GridT &sdfGrid,\n          int dilation,\n          NearestNeighbors nn = NN_FACE,\n          int nIter = 1)"
  },
  {
    "label": "maskSdf()",
    "kind": "Method",
    "detail": "Function (GridT::Ptr)",
    "insertText": "maskSdf(const GridT &sdfGrid,\n        const Grid<MaskTreeT> &mask,\n        bool ignoreActiveTiles = false,\n        int nIter = 1)"
  },
  {
    "label": "FastSweeping()",
    "kind": "Method",
    "detail": "Function (Constructor)",
    "insertText": "FastSweeping()"
  },
  {
    "label": "initSdf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "initSdf(const SdfGridT &sdfGrid, SdfValueT isoValue, bool isInputSdf)"
  },
  {
    "label": "initExt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "initExt(const SdfGridT &sdfGrid, const ExtOpT &op, const ExtValueT &background, SdfValueT isoValue, bool isInputSdf)"
  },
  {
    "label": "initDilate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "initDilate(const SdfGridT &sdfGrid, int dilation, NearestNeighbors nn = NN_FACE)"
  },
  {
    "label": "initMask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "initMask(const SdfGridT &sdfGrid, const Grid<MaskTreeT> &mask, bool ignoreActiveTiles = false)"
  },
  {
    "label": "sweep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "sweep(int nIter = 1, bool finalize = true)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "computeSweepMaskLeafOrigins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeSweepMaskLeafOrigins()"
  },
  {
    "label": "pruneInactive()",
    "kind": "Method",
    "detail": "Function (tiles)",
    "insertText": "pruneInactive(mSweepMask)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (LeafManagerT)",
    "insertText": "leafManager(mSweepMask)"
  },
  {
    "label": "kernel()",
    "kind": "Method",
    "detail": "Function (InitSdf)",
    "insertText": "kernel(*this)"
  },
  {
    "label": "kernel()",
    "kind": "Method",
    "detail": "Function (InitExt<OpT>)",
    "insertText": "kernel(*this)"
  },
  {
    "label": "kernel()",
    "kind": "Method",
    "detail": "Function (DilateKernel)",
    "insertText": "kernel(*this)"
  },
  {
    "label": "kernel()",
    "kind": "Method",
    "detail": "Function (MaskKernel<T>)",
    "insertText": "kernel(*this)"
  },
  {
    "label": "kernel()",
    "kind": "Method",
    "detail": "Function (MaskKernel<MaskTreeT>)",
    "insertText": "kernel(*this)"
  },
  {
    "label": "kernel()",
    "kind": "Method",
    "detail": "Function (MaskKernel<T>)",
    "insertText": "kernel(*this)"
  },
  {
    "label": "timer()",
    "kind": "Method",
    "detail": "Function (util::CpuTimer)",
    "insertText": "timer(\"Computing voxel slices\")"
  },
  {
    "label": "timer()",
    "kind": "Method",
    "detail": "Function (util::CpuTimer)",
    "insertText": "timer(\"Computing extrema values\")"
  },
  {
    "label": "timer()",
    "kind": "Method",
    "detail": "Function (util::CpuTimer)",
    "insertText": "timer(\"Construct LeafManager\")"
  },
  {
    "label": "timer()",
    "kind": "Method",
    "detail": "Function (util::CpuTimer)",
    "insertText": "timer(\"Initialize voxels\")"
  },
  {
    "label": "mgr()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<SdfTreeT>)",
    "insertText": "mgr(tree, 1)"
  },
  {
    "label": "sweepMaskAcc()",
    "kind": "Method",
    "detail": "Function (SweepMaskAccT)",
    "insertText": "sweepMaskAcc(mParent->mSweepMask)"
  },
  {
    "label": "stencil()",
    "kind": "Method",
    "detail": "Function (false>)",
    "insertText": "stencil(*mSdfGrid)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (size)",
    "insertText": "for(auto leafIter = r.begin()"
  },
  {
    "label": "timer()",
    "kind": "Method",
    "detail": "Function (util::CpuTimer)",
    "insertText": "timer(\"Initialize voxels\")"
  },
  {
    "label": "opPool()",
    "kind": "Method",
    "detail": "Function (OpPoolT)",
    "insertText": "opPool(opPrototype)"
  },
  {
    "label": "mgr()",
    "kind": "Method",
    "detail": "Function (tree::LeafManager<SdfTreeT>)",
    "insertText": "mgr(tree1, 1)"
  },
  {
    "label": "sweepMaskAcc()",
    "kind": "Method",
    "detail": "Function (SweepMaskAccT)",
    "insertText": "sweepMaskAcc(mParent->mSweepMask)"
  },
  {
    "label": "stencil()",
    "kind": "Method",
    "detail": "Function (false>)",
    "insertText": "stencil(*mSdfGrid)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (size)",
    "insertText": "for(auto leafIter = r.begin()"
  },
  {
    "label": "changeLevelSetBackground()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "changeLevelSetBackground(lsTree, Unknown)"
  },
  {
    "label": "mgr()",
    "kind": "Method",
    "detail": "Function (MaskTreeT>)",
    "insertText": "mgr(mask)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (LeafManagerT)",
    "insertText": "leafManager(mParent->mSweepMask)"
  },
  {
    "label": "leafManager()",
    "kind": "Method",
    "detail": "Function (LeafManagerT)",
    "insertText": "leafManager(maskTree)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (order)",
    "insertText": "for(auto poolIt = pool.begin()"
  },
  {
    "label": "ijk()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ijk(p, n)"
  },
  {
    "label": "d()",
    "kind": "Method",
    "detail": "Function (math::Vec3<SdfT>)",
    "insertText": "d(d1.v, d2.v, d3.v)"
  },
  {
    "label": "v()",
    "kind": "Method",
    "detail": "Function (math::Vec3<ExtT>)",
    "insertText": "v(v1, v2, v3)"
  },
  {
    "label": "voxelSliceIndex()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "voxelSliceIndex(0)"
  },
  {
    "label": "timer()",
    "kind": "Method",
    "detail": "Function (util::CpuTimer)",
    "insertText": "timer(\"Forward  sweep\")"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "for(size_t i = 0; i < mVoxelSliceKeys.size()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "for(size_t i = mVoxelSliceKeys.size()"
  }
]