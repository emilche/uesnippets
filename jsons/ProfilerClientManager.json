[
  {
    "label": "FNewStatsReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNewStatsReader"
  },
  {
    "label": "FProfilerClientManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerClientManager"
  },
  {
    "label": "FProfilerServiceAuthorize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceAuthorize"
  },
  {
    "label": "FProfilerServiceData2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceData2"
  },
  {
    "label": "FProfilerServiceFileChunk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServiceFileChunk"
  },
  {
    "label": "FProfilerServicePing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServicePing"
  },
  {
    "label": "FProfilerServicePreviewAck",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProfilerServicePreviewAck"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "FServiceConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FServiceConnection"
  },
  {
    "label": "FProfilerClientManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerClientManager"
  },
  {
    "label": "FNewStatsReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNewStatsReader"
  },
  {
    "label": "FReceivedFileInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReceivedFileInfo"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const FProfilerServiceAuthorize& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "GenerateCycleGraphs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCycleGraphs(const FRawStatStackNode& Root, TMap<uint32, FProfilerCycleGraph>& Graphs)"
  },
  {
    "label": "CreateGraphRecursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGraphRecursively(const FRawStatStackNode* Root, FProfilerCycleGraph& Graph, uint32 InStartCycles)"
  },
  {
    "label": "GenerateAccumulators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateAccumulators(TArray<FStatMessage>& Stats, TArray<FProfilerCountAccumulator>& CountAccumulators, TArray<FProfilerFloatAccumulator>& FloatAccumulators)"
  },
  {
    "label": "FindOrAddStat()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddStat(const FStatNameAndInfo& StatNameAndInfo, uint32 StatType)"
  },
  {
    "label": "FindOrAddThread()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddThread(const FStatNameAndInfo& Thread)"
  },
  {
    "label": "GenerateProfilerDataFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateProfilerDataFrame()"
  },
  {
    "label": "LoadCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadCapture(const FString& DataFilepath, FProfilerClientManager* ProfilerClientManager)"
  },
  {
    "label": "HandleMessageBusShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMessageBusShutdown()"
  },
  {
    "label": "HandleServiceAuthorizeMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceAuthorizeMessage(const FProfilerServiceAuthorize& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServiceFileChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServiceFileChunk(const FProfilerServiceFileChunk& FileChunk, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServicePingMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServicePingMessage(const FProfilerServicePing& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleTicker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTicker(float DeltaTime)"
  },
  {
    "label": "HandleProfilerServiceData2Message()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfilerServiceData2Message(const FProfilerServiceData2& Message, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleServicePreviewAckMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleServicePreviewAckMessage(const FProfilerServicePreviewAck& Messsage, const TSharedRef<IMessageContext, ESPMode::ThreadSafe>& Context)"
  },
  {
    "label": "HandleMessagesTicker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMessagesTicker(float DeltaTime)"
  },
  {
    "label": "CheckHashAndWrite()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckHashAndWrite(const FProfilerServiceFileChunk& FileChunk, const FProfilerFileChunkHeader& FileChunkHeader, FArchive* Writer)"
  },
  {
    "label": "FinalizeLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeLoading(const FGuid InstanceId)"
  },
  {
    "label": "CancelLoading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelLoading(const FGuid InstanceId)"
  },
  {
    "label": "DecompressDataAndSendToGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecompressDataAndSendToGame(FProfilerServiceData2* ToProcess)"
  },
  {
    "label": "SendDataToGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendDataToGame(TArray<uint8>* DataToGame, int64 Frame, const FGuid InstanceId)"
  },
  {
    "label": "SendProfilerDataFrameToGame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendProfilerDataFrameToGame(FProfilerDataFrame* NewData, FStatMetaData* MetaDataPtr, const FGuid InstanceId)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  }
]