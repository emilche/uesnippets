[
  {
    "label": "FAndroidTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAndroidTypes"
  },
  {
    "label": "PLATFORM_SUPPORTS_GEOMETRY_SHADERS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" GenericPlatform / GenericPlatform . h \" # include \" Clang / ClangPlatform . h \" # include \" Misc / Build . h \" # define PLATFORM_ANDROID 1 struct FAndroidTypes : public FGenericPlatformTypes { typedef char16_t WIDECHAR ; typedef WIDECHAR TCHAR ; } ; typedef FAndroidTypes FPlatformTypes ; # define ANDROID_MAX_PATH PATH_MAX # define PLATFORM_DESKTOP 0 # define PLATFORM_CAN_SUPPORT_EDITORONLY_DATA 0 # define PLATFORM_LITTLE_ENDIAN 1 # define PLATFORM_SUPPORTS_PRAGMA_PACK 1 # define PLATFORM_USE_LS_SPEC_FOR_WIDECHAR 1 # define PLATFORM_HAS_BSD_TIME 1 # define PLATFORM_USE_PTHREADS 1 # define PLATFORM_MAX_FILEPATH_LENGTH_DEPRECATED ANDROID_MAX_PATH # define PLATFORM_SUPPORTS_TEXTURE_STREAMING 1 # define PLATFORM_REQUIRES_FILESERVER 1 # define PLATFORM_WCHAR_IS_4_BYTES 1 # define PLATFORM_TCHAR_IS_CHAR16 1 # define PLATFORM_HAS_NO_EPROCLIM 1 # define PLATFORM_USES_GLES 1 # define PLATFORM_BUILTIN_VERTEX_HALF_FLOAT 0 # define PLATFORM_HAS_BSD_SOCKET_FEATURE_IOCTL 1 # define PLATFORM_HAS_BSD_SOCKET_FEATURE_MSG_DONTWAIT 1 # define PLATFORM_HAS_TOUCH_MAIN_SCREEN 1 # define PLATFORM_SUPPORTS_STACK_SYMBOLS 1 # define PLATFORM_NUM_AUDIODECOMPRESSION_PRECACHE_BUFFERS 2 # define PLATFORM_USES_ANSI_STRING_FOR_EXTERNAL_PROFILING 1 # define PLATFORM_UI_HAS_MOBILE_SCROLLBARS 1 # define PLATFORM_UI_NEEDS_TOOLTIPS 0 # define PLATFORM_UI_NEEDS_FOCUS_OUTLINES 0 # define PLATFORM_SUPPORTS_EARLY_MOVIE_PLAYBACK 1 # define)",
    "insertText": "PLATFORM_SUPPORTS_GEOMETRY_SHADERS(RHI_RAYTRACING) #define PLATFORM_SUPPORTS_VIRTUAL_TEXTURE_STREAMING 1 #define PLATFORM_USE_ANSI_POSIX_MALLOC 1 #define PLATFORM_USE_MINIMAL_HANG_DETECTION 1 #define PLATFORM_CODE_SECTION(Name) __attribute__((section(Name))) #define PLATFORM_ALLOW_ALLOCATIONS_IN_FASYNCWRITER_SERIALIZEBUFFERTOARCHIVE 0 #define PLATFORM_RETURN_ADDRESS_FOR_CALLSTACKTRACING PLATFORM_RETURN_ADDRESS #define PLATFORM_GLOBAL_LOG_CATEGORY LogAndroid #define PLATFORM_ENABLE_VECTORINTRINSICS 1 #define PLATFORM_ENABLE_VECTORINTRINSICS_NEON PLATFORM_ANDROID_ARM64 #undef PLATFORM_COMPILER_SUPPORTS_BUILTIN_BITCAST #define PLATFORM_COMPILER_SUPPORTS_BUILTIN_BITCAST (__clang_major__ >= 13) #ifndef USE_ANDROID_JNI #define USE_ANDROID_JNI 1 #endif #ifndef USE_ANDROID_AUDIO #define USE_ANDROID_AUDIO 1 #endif #ifndef USE_ANDROID_FILE #define USE_ANDROID_FILE 1 #endif #ifndef USE_ANDROID_LAUNCH #define USE_ANDROID_LAUNCH 1 #endif #ifndef USE_ANDROID_INPUT #define USE_ANDROID_INPUT 1 #endif #ifndef USE_ANDROID_EVENTS #define USE_ANDROID_EVENTS 1 #endif #ifndef USE_ANDROID_STANDALONE #define USE_ANDROID_STANDALONE 0 #endif #ifndef USE_ANDROID_ALTERNATIVE_SUSPEND #define USE_ANDROID_ALTERNATIVE_SUSPEND 0 #endif #if (!USE_ANDROID_STANDALONE && UE_BUILD_DEBUG) || (USE_ANDROID_STANDALONE && !UE_BUILD_SHIPPING) # define STANDALONE_DEBUG_LOG(M, ...) FPlatformMisc::LowLevelOutputDebugStringf(TEXT(#M \" : \"),##__VA_ARGS__)"
  },
  {
    "label": "STANDALONE_DEBUG_LOGf()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "STANDALONE_DEBUG_LOGf(M, ...) FPlatformMisc::LowLevelOutputDebugStringf(TEXT(#M \" : \") __VA_ARGS__)"
  }
]