[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UGameUserSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameUserSettings"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ScriptMacros . h \" # include \" GenericPlatform / GenericWindow . h \" # include \" Scalability . h \" # include \" GameUserSettings . generated . h \" # if ! CPP)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (enum Type : int { Fullscreen,WindowedFullscreen,Windowed,} ; } # endif)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnGameUserSettingsUINeedsUpdate)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(config=GameUserSettings, configdonotcheckdefaults, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: static ENGINE_API FString GetConfigDir()"
  },
  {
    "label": "SetWindowPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindowPosition(int32 WindowPosX, int32 WindowPosY)"
  },
  {
    "label": "GetWindowPosition()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "GetWindowPosition()"
  },
  {
    "label": "PreloadResolutionSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadResolutionSettings(bool bAllowCmdLineOverrides = true)"
  },
  {
    "label": "LoadConfigIni()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadConfigIni(bool bForceReload = false)"
  },
  {
    "label": "RequestResolutionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestResolutionChange(int32 InResolutionX, int32 InResolutionY, EWindowMode::Type InWindowMode, bool bInDoOverrides = true)"
  },
  {
    "label": "GetLastCPUBenchmarkResult()",
    "kind": "Method",
    "detail": "Function (public : float)",
    "insertText": "GetLastCPUBenchmarkResult()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnGameUserSettingsUINeedsUpdate .)",
    "insertText": "Broadcast()"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FUpdateGameUserSettingsFileFromCloud, const FString&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (FUpdateGameUserSettingsFileFromCloud OnUpdateGameUserSettingsFileFromCloud ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FUpdateCloudDataFromGameUserSettings, const FString&)"
  },
  {
    "label": "IsVersionValid()",
    "kind": "Method",
    "detail": "Function (FUpdateCloudDataFromGameUserSettings OnUpdateCloudDataFromGameUserSettings ; protected : bool)",
    "insertText": "IsVersionValid()"
  },
  {
    "label": "UpdateVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVersion()"
  },
  {
    "label": "FindResolutionQualityForScreenSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "FindResolutionQualityForScreenSize(float Width, float Height)"
  },
  {
    "label": "SetFrameRateLimitCVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameRateLimitCVar(float InLimit)"
  },
  {
    "label": "SetSyncTypeCVar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSyncTypeCVar(int32 InInterval)"
  },
  {
    "label": "GetEffectiveFrameRateLimit()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEffectiveFrameRateLimit()"
  },
  {
    "label": "UpdateResolutionQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResolutionQuality()"
  },
  {
    "label": "EnableHDRDisplayOutputInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableHDRDisplayOutputInternal(bool bEnable, int32 DisplayNits, bool bFromUserSettings)"
  },
  {
    "label": "SetPreferredFullscreenMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreferredFullscreenMode(int32 Mode)"
  }
]