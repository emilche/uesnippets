[
  {
    "label": "duDebugDrawPrimitives",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "duDebugDrawPrimitives"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duColor"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duDisplayList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "duDisplayList"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "sinf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sinf(x)"
  },
  {
    "label": "sin()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sin(x)"
  },
  {
    "label": "cosf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cosf(x)"
  },
  {
    "label": "cos()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "cos(x)"
  },
  {
    "label": "fabsf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "fabsf(x)"
  },
  {
    "label": "fabs()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "fabs(x)"
  },
  {
    "label": "sqrtf()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sqrtf(x)"
  },
  {
    "label": "sqrt()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "sqrt(x)"
  },
  {
    "label": "duRGBA()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "duRGBA(r,g,b,a)"
  },
  {
    "label": "duIntToCol()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "duIntToCol(int i, int a)"
  },
  {
    "label": "duIntToCol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duIntToCol(int i, float* col)"
  },
  {
    "label": "duRGBA()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "duRGBA(r,g,b,a)"
  },
  {
    "label": "duCalcBoxColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duCalcBoxColors(unsigned int* colors, unsigned int colTop, unsigned int colSide)"
  },
  {
    "label": "duDebugDrawCylinderWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCylinderWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t\t\t duReal maxx, duReal maxy, duReal maxz, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawBoxWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawBoxWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t\tduReal maxx, duReal maxy, duReal maxz, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawArc(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0,\n\t\t\t\t\tconst duReal x1, const duReal y1, const duReal z1, const duReal h,\n\t\t\t\t\tconst duReal as0, const duReal as1, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawArrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawArrow(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0,\n\t\t\t\t\t  const duReal x1, const duReal y1, const duReal z1,\n\t\t\t\t\t  const duReal as0, const duReal as1, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCircle(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z,\n\t\t\t\t\t   const duReal r, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawCross()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCross(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z,\n\t\t\t\t\t  const duReal size, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawBox(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\tduReal maxx, duReal maxy, duReal maxz, const unsigned int* fcol)"
  },
  {
    "label": "duDebugDrawCylinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCylinder(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t\t duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duDebugDrawGridXZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawGridXZ(struct duDebugDraw* dd, const duReal ox, const duReal oy, const duReal oz,\n\t\t\t\t\t   const int w, const int h, const duReal size,\n\t\t\t\t\t   const unsigned int col, const float lineWidth)"
  },
  {
    "label": "duAppendCylinderWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCylinderWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t\t  duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duAppendBoxWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendBoxWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duAppendBoxPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendBoxPoints(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t   duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duAppendArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendArc(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0,\n\t\t\t\t const duReal x1, const duReal y1, const duReal z1, const duReal h,\n\t\t\t\t const duReal as0, const duReal as1, unsigned int col)"
  },
  {
    "label": "duAppendArcSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendArcSegment(struct duDebugDraw* dd, const duReal xA0, const duReal yA0, const duReal zA0,\n\t\t\t\t\t\tconst duReal xA1, const duReal yA1, const duReal zA1,\n\t\t\t\t\t\tconst duReal xB0, const duReal yB0, const duReal zB0,\n\t\t\t\t\t\tconst duReal xB1, const duReal yB1, const duReal zB1,\n\t\t\t\t\t\tconst duReal h, unsigned int col)"
  },
  {
    "label": "duAppendArrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendArrow(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0,\n\t\t\t\t   const duReal x1, const duReal y1, const duReal z1,\n\t\t\t\t   const duReal as0, const duReal as1, unsigned int col)"
  },
  {
    "label": "duAppendCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCircle(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z,\n\t\t\t\t\tconst duReal r, unsigned int col)"
  },
  {
    "label": "duAppendCross()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCross(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z,\n\t\t\t\t   const duReal size, unsigned int col)"
  },
  {
    "label": "duAppendBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendBox(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t duReal maxx, duReal maxy, duReal maxz, const unsigned int* fcol)"
  },
  {
    "label": "duAppendCylinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCylinder(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz,\n\t\t\t\t\t  duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resize(int cap)"
  },
  {
    "label": "duDisplayList()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "duDisplayList(int cap = 512)"
  },
  {
    "label": "depthMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "depthMask(bool state)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "begin(duDebugDrawPrimitives prim, float size = 1.0f)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vertex(const duReal x, const duReal y, const duReal z, unsigned int color)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vertex(const duReal* pos, unsigned int color)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "end()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "draw(struct duDebugDraw* dd)"
  }
]