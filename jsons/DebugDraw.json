[
  {
    "label": "duDebugDrawPrimitives",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "duDebugDrawPrimitives"
  },
  {
    "label": "duDebugDraw",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duDebugDraw"
  },
  {
    "label": "duColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "duColor"
  },
  {
    "label": "duDisplayList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "duDisplayList"
  },
  {
    "label": "duSin()",
    "kind": "Method",
    "detail": "Function (# ifndef DEBUGDRAW_H # define DEBUGDRAW_H # include \" CoreMinimal . h \" # include \" DebugDrawLargeWorldCoordinates . h \" const duReal DU_PI = 3 . 1 4 1 5 9 2 6 5 3 5 8 9 7 9 3 2 3 8 4 6 ; float)",
    "insertText": "duSin(float x)"
  },
  {
    "label": "duSin()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "duSin(double x)"
  },
  {
    "label": "duCos()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "duCos(float x)"
  },
  {
    "label": "duCos()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "duCos(double x)"
  },
  {
    "label": "duAbs()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "duAbs(float x)"
  },
  {
    "label": "duAbs()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "duAbs(double x)"
  },
  {
    "label": "duSqrt()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "duSqrt(float x)"
  },
  {
    "label": "duSqrt()",
    "kind": "Method",
    "detail": "Function (} double)",
    "insertText": "duSqrt(double x)"
  },
  {
    "label": "duDebugDraw()",
    "kind": "Method",
    "detail": "Function (} enum duDebugDrawPrimitives { DU_DRAW_POINTS,DU_DRAW_LINES,DU_DRAW_TRIS,DU_DRAW_QUADS,} ; struct duDebugDraw { ~)",
    "insertText": "duDebugDraw()"
  },
  {
    "label": "depthMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "depthMask(bool state)"
  },
  {
    "label": "texture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "texture(bool state)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "begin(duDebugDrawPrimitives prim, float size = 1.0f)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vertex(const duReal* pos, unsigned int color)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (# if ! DU_LARGE_WORLD_COORDINATES_DISABLED void)",
    "insertText": "vertex(const float* pos, unsigned int color)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "vertex(const duReal x, const duReal y, const duReal z, unsigned int color)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (# if ! DU_LARGE_WORLD_COORDINATES_DISABLED void)",
    "insertText": "vertex(const float x, const float y, const float z, unsigned int color)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "vertex(const duReal* pos, unsigned int color, const duReal* uv)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (# if ! DU_LARGE_WORLD_COORDINATES_DISABLED void)",
    "insertText": "vertex(const float* pos, unsigned int color, const float* uv)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "vertex(const duReal x, const duReal y, const duReal z, unsigned int color, const duReal u, const duReal v)"
  },
  {
    "label": "vertex()",
    "kind": "Method",
    "detail": "Function (# if ! DU_LARGE_WORLD_COORDINATES_DISABLED void)",
    "insertText": "vertex(const float x, const float y, const float z, unsigned int color, const float u, const float v)"
  },
  {
    "label": "text()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "text(const duReal x, const duReal y, const duReal z, const char* text)"
  },
  {
    "label": "text()",
    "kind": "Method",
    "detail": "Function (# if ! DU_LARGE_WORLD_COORDINATES_DISABLED void)",
    "insertText": "text(const float x, const float y, const float z, const char* text)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (} # endif void)",
    "insertText": "end()"
  },
  {
    "label": "duRGBA()",
    "kind": "Method",
    "detail": "Function (} ; unsigned int)",
    "insertText": "duRGBA(unsigned int rgba)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "a(rgba & 0x000000ff)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "b(rgba & 0x0000ff00)"
  },
  {
    "label": "g()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "g(rgba & 0x00ff0000)"
  },
  {
    "label": "r()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "r(rgba & 0xff000000)"
  },
  {
    "label": "duRGBA()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "duRGBA(int r, int g, int b, int a)"
  },
  {
    "label": "duRGBAf()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "duRGBAf(float fr, float fg, float fb, float fa)"
  },
  {
    "label": "r()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "r(unsigned char)(fr*255.0f)"
  },
  {
    "label": "g()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "g(unsigned char)(fg*255.0f)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "b(unsigned char)(fb*255.0f)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (unsigned char)",
    "insertText": "a(unsigned char)(fa*255.0f)"
  },
  {
    "label": "duIntToCol()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "duIntToCol(int i, int a)"
  },
  {
    "label": "duIntToCol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duIntToCol(int i, float* col)"
  },
  {
    "label": "duMultCol()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "duMultCol(const unsigned int col, const unsigned int d)"
  },
  {
    "label": "g()",
    "kind": "Method",
    "detail": "Function (const unsigned int r = col& 0 xff ; const unsigned int)",
    "insertText": "g(col >> 8)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "b(col >> 16)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "a(col >> 24)"
  },
  {
    "label": "duDarkenCol()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "duDarkenCol(unsigned int col)"
  },
  {
    "label": "duLerpCol()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "duLerpCol(unsigned int ca, unsigned int cb, unsigned int u)"
  },
  {
    "label": "ga()",
    "kind": "Method",
    "detail": "Function (const unsigned int ra = ca& 0 xff ; const unsigned int)",
    "insertText": "ga(ca >> 8)"
  },
  {
    "label": "ba()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "ba(ca >> 16)"
  },
  {
    "label": "aa()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "aa(ca >> 24)"
  },
  {
    "label": "gb()",
    "kind": "Method",
    "detail": "Function (const unsigned int rb = cb& 0 xff ; const unsigned int)",
    "insertText": "gb(cb >> 8)"
  },
  {
    "label": "bb()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "bb(cb >> 16)"
  },
  {
    "label": "ab()",
    "kind": "Method",
    "detail": "Function (const unsigned int)",
    "insertText": "ab(cb >> 24)"
  },
  {
    "label": "r()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "r(ra*(255-u) + rb*u)"
  },
  {
    "label": "g()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "g(ga*(255-u) + gb*u)"
  },
  {
    "label": "b()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "b(ba*(255-u) + bb*u)"
  },
  {
    "label": "a()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "a(aa*(255-u) + ab*u)"
  },
  {
    "label": "duTransCol()",
    "kind": "Method",
    "detail": "Function (} unsigned int)",
    "insertText": "duTransCol(unsigned int c, unsigned int a)"
  },
  {
    "label": "duCalcBoxColors()",
    "kind": "Method",
    "detail": "Function (} struct duColor { unsigned int red ; unsigned int pink ; unsigned int purple ; unsigned int deepPurple ; unsigned int indigo ; unsigned int blue ; unsigned int lightBlue ; unsigned int cyan ; unsigned int teal ; unsigned int green ; unsigned int lightGreen ; unsigned int lime ; unsigned int yellow ; unsigned int amber ; unsigned int orange ; unsigned int orangeRed ; unsigned int brown ; unsigned int white ; unsigned int lightGrey ; unsigned int grey ; unsigned int darkGrey ; unsigned int black ; } ; void)",
    "insertText": "duCalcBoxColors(unsigned int* colors, unsigned int colTop, unsigned int colSide)"
  },
  {
    "label": "duDebugDrawCylinderWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCylinderWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawBoxWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawBoxWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawArc(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0, const duReal x1, const duReal y1, const duReal z1, const duReal h, const duReal as0, const duReal as1, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawArrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawArrow(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0, const duReal x1, const duReal y1, const duReal z1, const duReal as0, const duReal as1, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCircle(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z, const duReal r, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawCross()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCross(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z, const duReal size, unsigned int col, const float lineWidth)"
  },
  {
    "label": "duDebugDrawBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawBox(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, const unsigned int* fcol)"
  },
  {
    "label": "duDebugDrawCylinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawCylinder(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duDebugDrawGridXZ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duDebugDrawGridXZ(struct duDebugDraw* dd, const duReal ox, const duReal oy, const duReal oz, const int w, const int h, const duReal size, const unsigned int col, const float lineWidth)"
  },
  {
    "label": "duAppendCylinderWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCylinderWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duAppendBoxWire()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendBoxWire(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duAppendBoxPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendBoxPoints(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "duAppendArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendArc(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0, const duReal x1, const duReal y1, const duReal z1, const duReal h, const duReal as0, const duReal as1, unsigned int col)"
  },
  {
    "label": "duAppendArcSegment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendArcSegment(struct duDebugDraw* dd, const duReal xA0, const duReal yA0, const duReal zA0, const duReal xA1, const duReal yA1, const duReal zA1, const duReal xB0, const duReal yB0, const duReal zB0, const duReal xB1, const duReal yB1, const duReal zB1, const duReal h, unsigned int col)"
  },
  {
    "label": "duAppendArrow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendArrow(struct duDebugDraw* dd, const duReal x0, const duReal y0, const duReal z0, const duReal x1, const duReal y1, const duReal z1, const duReal as0, const duReal as1, unsigned int col)"
  },
  {
    "label": "duAppendCircle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCircle(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z, const duReal r, unsigned int col)"
  },
  {
    "label": "duAppendCross()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCross(struct duDebugDraw* dd, const duReal x, const duReal y, const duReal z, const duReal size, unsigned int col)"
  },
  {
    "label": "duAppendBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendBox(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, const unsigned int* fcol)"
  },
  {
    "label": "duAppendCylinder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "duAppendCylinder(struct duDebugDraw* dd, duReal minx, duReal miny, duReal minz, duReal maxx, duReal maxy, duReal maxz, unsigned int col)"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (class duDisplayList : public duDebugDraw { duReal* m_pos ; unsigned int* m_color ; int m_size ; int m_cap ; bool m_depthMask ; duDebugDrawPrimitives m_prim ; float m_primSize ; void)",
    "insertText": "resize(int cap)"
  },
  {
    "label": "duDisplayList()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "duDisplayList(int cap = 512)"
  },
  {
    "label": "duDisplayList()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "duDisplayList()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "draw(struct duDebugDraw* dd)"
  }
]