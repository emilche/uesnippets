[
  {
    "label": "FAllocationItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocationItem"
  },
  {
    "label": "ILinearAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILinearAllocator"
  },
  {
    "label": "FSbTreeUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSbTreeUtils"
  },
  {
    "label": "FSbTreeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSbTreeCell"
  },
  {
    "label": "FSbTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSbTree"
  },
  {
    "label": "GetMaxDepth()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" TraceServices / Model / AllocationsProvider . h \" namespace TraceServices { struct FAllocationItem ; class ILinearAllocator ; class FSbTreeUtils { public : uint32)",
    "insertText": "GetMaxDepth(uint32 TotalColumns)"
  },
  {
    "label": "GetCellAtDepth()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCellAtDepth(uint32 Column, uint32 Depth)"
  },
  {
    "label": "GetCommonDepth()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCommonDepth(uint32 ColumnA, uint32 ColumnB)"
  },
  {
    "label": "GetCellWidth()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCellWidth(uint32 CellIndex)"
  },
  {
    "label": "FSbTreeCell()",
    "kind": "Method",
    "detail": "Function (} ; class FSbTreeCell { public :)",
    "insertText": "FSbTreeCell(ILinearAllocator& InAllocator)"
  },
  {
    "label": "FSbTreeCell()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSbTreeCell()"
  },
  {
    "label": "GetAllocCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAllocCount()"
  },
  {
    "label": "AddAlloc()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddAlloc(const FAllocationItem* Alloc)"
  },
  {
    "label": "GetMinStartEventIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMinStartEventIndex()"
  },
  {
    "label": "FSbTree()",
    "kind": "Method",
    "detail": "Function (private : ILinearAllocator& Allocator ; TArray<const FAllocationItem*> Allocs ; uint32 MinStartEventIndex ; uint32 MaxEndEventIndex ; double MinStartTime ; double MaxEndTime ; } ; class FSbTree { public :)",
    "insertText": "FSbTree(ILinearAllocator& InAllocator, uint32 InColumnShift)"
  },
  {
    "label": "FSbTree()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSbTree()"
  },
  {
    "label": "SetTimeForEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTimeForEvent(uint32 EventIndex, double Time)"
  },
  {
    "label": "GetColumnWidth()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetColumnWidth()"
  },
  {
    "label": "IterateCells()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateCells(TArray<const FSbTreeCell*>& OutCells, int32 Column)"
  },
  {
    "label": "IterateCells()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateCells(TArray<const FSbTreeCell*>& OutCells, int32 StartColumn, int32 EndColumn)"
  },
  {
    "label": "DebugPrint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugPrint()"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Validate()"
  },
  {
    "label": "GetColumnsAtTime()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "GetColumnsAtTime(double Time, int32* OutStartColumn, int32* OutEndColumn)"
  }
]