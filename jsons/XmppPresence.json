[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FXmppUserPresence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppUserPresence"
  },
  {
    "label": "FXmppMucPresence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppMucPresence"
  },
  {
    "label": "IXmppPresence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXmppPresence"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppConnection . h \" namespace EXmppPresenceStatus { enum Type { Online,Offline,Away,ExtendedAway,DoNotDisturb,Chat } ; const TCHAR*)",
    "insertText": "ToString(EXmppPresenceStatus::Type EnumVal)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "TEXT(\"\")"
  },
  {
    "label": "MinValue()",
    "kind": "Method",
    "detail": "Function (} } class FXmppUserPresence { public : EXmppPresenceStatus::Type Status = EXmppPresenceStatus::Offline ; bool bIsAvailable = true ; FDateTime SentTime =)",
    "insertText": "MinValue()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FString AppId ; FString Platform ; FString StatusStr ; FXmppUserJid UserJid ; bool)",
    "insertText": "operator(const FXmppUserPresence& Presence)"
  },
  {
    "label": "FXmppMucPresence()",
    "kind": "Method",
    "detail": "Function (} } ; class FXmppMucPresence : public FXmppUserPresence { public :)",
    "insertText": "FXmppMucPresence() : FXmppUserPresence()"
  },
  {
    "label": "GetRoomId()",
    "kind": "Method",
    "detail": "Function (} FString Role ; FString Affiliation ; FXmppUserJid MemberJid ; const FString&)",
    "insertText": "GetRoomId()"
  },
  {
    "label": "UpdatePresence()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "UpdatePresence(const FXmppUserPresence& Presence)"
  },
  {
    "label": "GetPresence()",
    "kind": "Method",
    "detail": "Function (const FXmppUserPresence&)",
    "insertText": "GetPresence()"
  },
  {
    "label": "QueryPresence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "QueryPresence(const FString& UserId)"
  },
  {
    "label": "GetRosterMembers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRosterMembers(TArray<FXmppUserJid>& OutMembers)"
  },
  {
    "label": "GetRosterPresence()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FXmppUserPresence>>)",
    "insertText": "GetRosterPresence(const FString& UserId)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnXmppPresenceReceived, const TSharedRef<IXmppConnection>& , const FXmppUserJid& , const TSharedRef<FXmppUserPresence>&)"
  },
  {
    "label": "OnReceivePresence()",
    "kind": "Method",
    "detail": "Function (FOnXmppPresenceReceived&)",
    "insertText": "OnReceivePresence()"
  }
]