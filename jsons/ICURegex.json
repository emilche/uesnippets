[
  {
    "label": "FICURegexManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FICURegexManager"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" Templates / SharedPointer . h \" # if UE_ENABLE_ICU THIRD_PARTY_INCLUDES_START # include<unicode / regex . h> THIRD_PARTY_INCLUDES_END class FICURegexManager { public : void)",
    "insertText": "Create()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FICURegexManager&)",
    "insertText": "Get()"
  },
  {
    "label": "CreateRegexPattern()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<const icu::RegexPattern>)",
    "insertText": "CreateRegexPattern(const FString& InSourceString, uint32_t InICURegexFlags)"
  },
  {
    "label": "DestroyRegexPattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRegexPattern(TWeakPtr<const icu::RegexPattern>& InICURegexPattern)"
  },
  {
    "label": "CreateRegexMatcher()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<icu::RegexMatcher>)",
    "insertText": "CreateRegexMatcher(const icu::RegexPattern* InPattern, const icu::UnicodeString* InInputString)"
  },
  {
    "label": "DestroyRegexMatcher()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRegexMatcher(TWeakPtr<icu::RegexMatcher>& InICURegexMatcher)"
  }
]