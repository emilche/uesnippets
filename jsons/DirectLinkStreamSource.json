[
  {
    "label": "FSceneSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneSnapshot"
  },
  {
    "label": "ISceneGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneGraphNode"
  },
  {
    "label": "IStreamSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStreamSender"
  },
  {
    "label": "FStreamSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamSource"
  },
  {
    "label": "FStreamSource()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DirectLinkCommon . h \" # include \" DirectLinkStreamConnectionPoint . h \" namespace DirectLink { class FSceneSnapshot ; class ISceneGraphNode ; class IStreamSender ; class FStreamSource : public FStreamConnectionPoint { public :)",
    "insertText": "FStreamSource(const FString& Name, EVisibility Visibility) : FStreamConnectionPoint(Name, Visibility)"
  },
  {
    "label": "SetRoot()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetRoot(ISceneGraphNode* InRoot)"
  },
  {
    "label": "Snapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Snapshot()"
  },
  {
    "label": "LinkSender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LinkSender(const TSharedPtr<IStreamSender>& Sender)"
  }
]