[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "LandscapeTestCommands",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LandscapeTestCommands"
  },
  {
    "label": "FLandscapeEditorDetailCustomization_ImportExport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeEditorDetailCustomization_ImportExport"
  },
  {
    "label": "LandscapeTestUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LandscapeTestUtils"
  },
  {
    "label": "FLandscapeEditorDetailCustomization_ImportExport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" LandscapeEdMode . h \" # include \" IDetailCustomization . h \" # include \" IPropertyTypeCustomization . h \" # include \" PropertyHandle . h \" # include \" LandscapeEditorDetailCustomization_Base . h \" class IDetailLayoutBuilder ; namespace LandscapeTestUtils { struct LandscapeTestCommands ; } class FLandscapeEditorDetailCustomization_ImportExport : public FLandscapeEditorDetailCustomization_Base { struct LandscapeTestUtils::LandscapeTestCommands ; public :)",
    "insertText": "FLandscapeEditorDetailCustomization_ImportExport()"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "FormatFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatFilename(TSharedRef<IPropertyHandle> PropertyHandle_Filename, bool bForExport)"
  },
  {
    "label": "GetExportSingleFileIsEnabled()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "GetExportSingleFileIsEnabled()"
  },
  {
    "label": "GetExportSingleFileCheckState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetExportSingleFileCheckState()"
  },
  {
    "label": "OnExportSingleFileCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExportSingleFileCheckStateChanged(ECheckBoxState NewCheckState)"
  },
  {
    "label": "GetImportExportVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetImportExportVisibility(bool bImport)"
  },
  {
    "label": "IsHeightmapEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHeightmapEnabled()"
  },
  {
    "label": "GetHeightmapSelectedCheckState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "GetHeightmapSelectedCheckState()"
  },
  {
    "label": "OnHeightmapSelectedCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHeightmapSelectedCheckStateChanged(ECheckBoxState CheckState)"
  },
  {
    "label": "ModeIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ModeIsChecked(EImportExportMode Value)"
  },
  {
    "label": "OnModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModeChanged(ECheckBoxState NewCheckedState, EImportExportMode Value)"
  },
  {
    "label": "GetImportResultErrorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetImportResultErrorVisibility(TSharedRef<IPropertyHandle> PropertyHandle_ImportResult)"
  },
  {
    "label": "GetImportResultErrorColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetImportResultErrorColor(TSharedRef<IPropertyHandle> PropertyHandle_ImportResult)"
  },
  {
    "label": "SetFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilename(const FText& NewValue, ETextCommit::Type CommitInfo, TSharedRef<IPropertyHandle> PropertyHandle_Filename)"
  },
  {
    "label": "OnBrowseFilenameButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnBrowseFilenameButtonClicked(TSharedRef<IPropertyHandle> PropertyHandle_Filename)"
  },
  {
    "label": "GetImportExportButtonText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetImportExportButtonText()"
  },
  {
    "label": "OnImportExportButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnImportExportButtonClicked()"
  },
  {
    "label": "GetImportExportButtonIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetImportExportButtonIsEnabled()"
  },
  {
    "label": "OnOriginResetButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnOriginResetButtonClicked()"
  },
  {
    "label": "GetImportExportLandscapeErrorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetImportExportLandscapeErrorVisibility()"
  },
  {
    "label": "GetImportingVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetImportingVisibility()"
  },
  {
    "label": "GetImportExportLandscapeErrorText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetImportExportLandscapeErrorText()"
  },
  {
    "label": "GetImportLandscapeResolutionMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetImportLandscapeResolutionMenu()"
  },
  {
    "label": "OnChangeImportLandscapeResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeImportLandscapeResolution(int32 DescriptorIndex)"
  },
  {
    "label": "GetImportLandscapeResolution()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetImportLandscapeResolution()"
  },
  {
    "label": "OnImportHeightmapFilenameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnImportHeightmapFilenameChanged()"
  },
  {
    "label": "IsImporting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImporting()"
  }
]