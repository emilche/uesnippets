[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRHIDescriptorHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIDescriptorHandle"
  },
  {
    "label": "FRHIDescriptorAllocatorRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIDescriptorAllocatorRange"
  },
  {
    "label": "FRHIDescriptorAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIDescriptorAllocator"
  },
  {
    "label": "FRHIHeapDescriptorAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIHeapDescriptorAllocator"
  },
  {
    "label": "FRHIOffsetHeapDescriptorAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIOffsetHeapDescriptorAllocator"
  },
  {
    "label": "FRHIDescriptorAllocator()",
    "kind": "Method",
    "detail": "Function (RHICORE_API)",
    "insertText": "FRHIDescriptorAllocator()"
  },
  {
    "label": "FRHIDescriptorAllocator()",
    "kind": "Method",
    "detail": "Function (RHICORE_API)",
    "insertText": "FRHIDescriptorAllocator(uint32 InNumDescriptors, TConstArrayView<TStatId> InStats)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InNumDescriptors, TConstArrayView<TStatId> InStats)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "ResizeGrowAndAllocate()",
    "kind": "Method",
    "detail": "Function (FRHIDescriptorHandle)",
    "insertText": "ResizeGrowAndAllocate(uint32 InNewNumDescriptors, ERHIDescriptorHeapType InType)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (FRHIDescriptorHandle)",
    "insertText": "Allocate(ERHIDescriptorHeapType InType)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FRHIDescriptorHandle InHandle)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Allocate(uint32 NumDescriptors, uint32& OutSlot)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(uint32 Slot, uint32 NumDescriptors)"
  },
  {
    "label": "GetAllocatedRange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllocatedRange(FRHIDescriptorAllocatorRange& OutRange)"
  },
  {
    "label": "AllocateInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllocateInternal(uint32 NumDescriptors, uint32& OutSlot)"
  },
  {
    "label": "FRHIHeapDescriptorAllocator()",
    "kind": "Method",
    "detail": "Function (RHICORE_API)",
    "insertText": "FRHIHeapDescriptorAllocator(ERHIDescriptorHeapType InType, uint32 InDescriptorCount, TConstArrayView<TStatId> InStats)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (FRHIDescriptorHandle)",
    "insertText": "Allocate()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FRHIDescriptorHandle InHandle)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Allocate(uint32 NumDescriptors, uint32& OutSlot)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(uint32 Slot, uint32 NumDescriptors)"
  },
  {
    "label": "FRHIOffsetHeapDescriptorAllocator()",
    "kind": "Method",
    "detail": "Function (RHICORE_API)",
    "insertText": "FRHIOffsetHeapDescriptorAllocator(ERHIDescriptorHeapType InType, uint32 InDescriptorCount, uint32 InHeapOffset, TConstArrayView<TStatId> InStats)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (FRHIDescriptorHandle)",
    "insertText": "Allocate()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(FRHIDescriptorHandle InHandle)"
  }
]