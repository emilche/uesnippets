[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMediaAudioTrackFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMediaAudioTrackFormat"
  },
  {
    "label": "FMediaVideoTrackFormat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMediaVideoTrackFormat"
  },
  {
    "label": "IMediaTracks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMediaTracks"
  },
  {
    "label": "GetAudioTrackFormat()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Math / IntPoint . h \" # include \" Math / Range . h \" # include \" Math / RangeSet . h \" enum class EMediaTrackType { Audio,Caption,Metadata,Script,Subtitle,Text,Video,Num } ; struct FMediaAudioTrackFormat { uint32 BitsPerSample ; uint32 NumChannels ; uint32 SampleRate ; FString ; } ; struct FMediaVideoTrackFormat { FIntPoint Dim ; float FrameRate ; TRange<float> FrameRates ; FString ; } ; class IMediaTracks { public : bool)",
    "insertText": "GetAudioTrackFormat(int32 TrackIndex, int32 FormatIndex, FMediaAudioTrackFormat& OutFormat)"
  },
  {
    "label": "GetNumTracks()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumTracks(EMediaTrackType TrackType)"
  },
  {
    "label": "GetNumTrackFormats()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumTrackFormats(EMediaTrackType TrackType, int32 TrackIndex)"
  },
  {
    "label": "GetSelectedTrack()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSelectedTrack(EMediaTrackType TrackType)"
  },
  {
    "label": "GetTrackDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTrackDisplayName(EMediaTrackType TrackType, int32 TrackIndex)"
  },
  {
    "label": "GetTrackFormat()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTrackFormat(EMediaTrackType TrackType, int32 TrackIndex)"
  },
  {
    "label": "GetTrackLanguage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTrackLanguage(EMediaTrackType TrackType, int32 TrackIndex)"
  },
  {
    "label": "GetTrackName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTrackName(EMediaTrackType TrackType, int32 TrackIndex)"
  },
  {
    "label": "GetVideoTrackFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVideoTrackFormat(int32 TrackIndex, int32 FormatIndex, FMediaVideoTrackFormat& OutFormat)"
  },
  {
    "label": "SelectTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectTrack(EMediaTrackType TrackType, int32 TrackIndex)"
  },
  {
    "label": "SetTrackFormat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetTrackFormat(EMediaTrackType TrackType, int32 TrackIndex, int32 FormatIndex)"
  },
  {
    "label": "SetVideoTrackFrameRate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVideoTrackFrameRate(int32 TrackIndex, int32 FormatIndex, float FrameRate)"
  }
]