[
  {
    "label": "GLboolean()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" OpenGLPlatform . h \" typedef khronos_stime_nanoseconds_t EGLnsecsANDROID ; typedef)",
    "insertText": "GLboolean(GL_APIENTRYP PFNeglPresentationTimeANDROID) (EGLDisplay dpy, EGLSurface surface, EGLnsecsANDROID time)"
  },
  {
    "label": "GLboolean()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLboolean(GL_APIENTRYP PFNeglGetNextFrameIdANDROID) (EGLDisplay dpy, EGLSurface surface, EGLuint64KHR* frameId)"
  },
  {
    "label": "GLboolean()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLboolean(GL_APIENTRYP PFNeglGetCompositorTimingANDROID) (EGLDisplay dpy, EGLSurface surface, EGLint numTimestamps, const EGLint* names, EGLnsecsANDROID* values)"
  },
  {
    "label": "GLboolean()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLboolean(GL_APIENTRYP PFNeglGetFrameTimestampsANDROID) (EGLDisplay dpy, EGLSurface surface, EGLuint64KHR frameId, EGLint numTimestamps, const EGLint* timestamps, EGLnsecsANDROID* values)"
  },
  {
    "label": "GLboolean()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "GLboolean(GL_APIENTRYP PFNeglQueryTimestampSupportedANDROID) (EGLDisplay dpy, EGLSurface surface, EGLint timestamp)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (\" C \" { PFNEGLGETSYSTEMTIMENVPROC eglGetSystemTimeNV_p ; PFNEGLCREATESYNCKHRPROC eglCreateSyncKHR_p ; PFNEGLDESTROYSYNCKHRPROC eglDestroySyncKHR_p ; PFNEGLCLIENTWAITSYNCKHRPROC eglClientWaitSyncKHR_p ; PFNEGLGETSYNCATTRIBKHRPROC eglGetSyncAttribKHR_p ; PFNeglPresentationTimeANDROID eglPresentationTimeANDROID_p ; PFNeglGetNextFrameIdANDROID eglGetNextFrameIdANDROID_p ; PFNeglGetCompositorTimingANDROID eglGetCompositorTimingANDROID_p ; PFNeglGetFrameTimestampsANDROID eglGetFrameTimestampsANDROID_p ; PFNeglQueryTimestampSupportedANDROID eglQueryTimestampSupportedANDROID_p ; PFNeglQueryTimestampSupportedANDROID eglGetCompositorTimingSupportedANDROID_p ; PFNeglQueryTimestampSupportedANDROID eglGetFrameTimestampsSupportedANDROID_p ; } namespace GLFuncPointers { PFNGLFRAMEBUFFERFETCHBARRIERQCOMPROC glFramebufferFetchBarrierQCOM ; } typedef)",
    "insertText": "void(GL_APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level)"
  }
]