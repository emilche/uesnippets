[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "SBlueprintBookmarks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBlueprintBookmarks"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTreeViewItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTreeViewItem"
  },
  {
    "label": "STreeItemRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeItemRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Delegates / Delegate . h \" # include \" Engine / Blueprint . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Internationalization / Text . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateConstants . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class FBlueprintEditor ; class FUICommandList ; class ITableRow ; class SSearchBox ; class SWidget ; struct FGuid ; class SBlueprintBookmarks : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SBlueprintBookmarks)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FBlueprintEditor>, EditorContext) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshBookmarksTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBookmarksTree()"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (protected : enum class ETreeViewNodeType { Root,Folder,Comment,LocalBookmark,SharedBookmark } ; struct FTreeViewItem : public TSharedFromThis<FTreeViewItem> {)",
    "insertText": "DECLARE_DELEGATE(FOnRequestRename)"
  },
  {
    "label": "FTreeViewItem()",
    "kind": "Method",
    "detail": "Function (ETreeViewNodeType NodeType ; FBPEditorBookmarkNode& BookmarkNode ; const FEditedDocumentInfo* DocumentInfo ; TArray<TSharedPtr<FTreeViewItem>> Children ; FOnRequestRename OnRequestRenameDelegate ;)",
    "insertText": "FTreeViewItem(ETreeViewNodeType InNodeType, FBPEditorBookmarkNode& InBookmarkNode, const FEditedDocumentInfo* InDocumentInfo = nullptr) :NodeType(InNodeType) ,BookmarkNode(InBookmarkNode) ,DocumentInfo(InDocumentInfo)"
  },
  {
    "label": "IsRootNode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRootNode()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FTreeViewItemPtr, ItemPtr) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView, TWeakPtr<FBlueprintEditor> InEditorContext)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& InColumnName)"
  },
  {
    "label": "GetItemNameText()",
    "kind": "Method",
    "detail": "Function (protected : FText)",
    "insertText": "GetItemNameText()"
  },
  {
    "label": "OnNameTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameTextCommitted(const FText& InNewName, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "OnFilterTextCommitted()",
    "kind": "Method",
    "detail": "Function (private : FTreeViewItemPtr ItemPtr ; TWeakPtr<FBlueprintEditor> EditorContext ; } ; void)",
    "insertText": "OnFilterTextCommitted(const FText& InText, ETextCommit::Type CommitType)"
  },
  {
    "label": "OnDeleteSelectedTreeViewItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteSelectedTreeViewItems()"
  },
  {
    "label": "CanDeleteSelectedTreeViewItems()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteSelectedTreeViewItems()"
  },
  {
    "label": "OnRenameSelectedTreeViewItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameSelectedTreeViewItems()"
  },
  {
    "label": "CanRenameSelectedTreeViewItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameSelectedTreeViewItem()"
  },
  {
    "label": "CanNavigateToSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanNavigateToSelection()"
  },
  {
    "label": "OnGenerateTreeViewRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateTreeViewRow(FTreeViewItemPtr TreeItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetTreeViewChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetTreeViewChildren(FTreeViewItemPtr TreeItem, TArray<FTreeViewItemPtr>& OutChildren)"
  },
  {
    "label": "OnTreeViewItemDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeViewItemDoubleClick(FTreeViewItemPtr TreeItem)"
  },
  {
    "label": "OnOpenTreeViewContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnOpenTreeViewContextMenu()"
  },
  {
    "label": "IsShowCommentNodesChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowCommentNodesChecked()"
  },
  {
    "label": "OnToggleShowCommentNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowCommentNodes()"
  },
  {
    "label": "IsShowBookmarksForCurrentDocumentOnlyChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowBookmarksForCurrentDocumentOnlyChecked()"
  },
  {
    "label": "OnToggleShowBookmarksForCurrentDocumentOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowBookmarksForCurrentDocumentOnly()"
  }
]