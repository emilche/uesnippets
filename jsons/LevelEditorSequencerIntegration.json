[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FObjectPostSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPostSaveContext"
  },
  {
    "label": "FObjectPreSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPreSaveContext"
  },
  {
    "label": "SLevelViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLevelViewport"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "IAssetViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetViewport"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FPropertyAndParent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAndParent"
  },
  {
    "label": "FPilotedSpawnable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPilotedSpawnable"
  },
  {
    "label": "FLevelEditorSequencerIntegrationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLevelEditorSequencerIntegrationOptions"
  },
  {
    "label": "FLevelEditorSequencerBindingData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorSequencerBindingData"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "FSequencerAndOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerAndOptions"
  },
  {
    "label": "FDetailKeyframeHandlerWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailKeyframeHandlerWrapper"
  },
  {
    "label": "FLevelEditorSequencerIntegrationOptions()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AcquiredResources . h \" # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" # include \" Layout / Visibility . h \" # include \" ISceneOutlinerColumn . h \" # include \" UObject / ObjectKey . h \" # include \" ISequencer . h \" class AActor ; class FExtender ; class FMenuBuilder ; class FSequencer ; class FObjectPostSaveContext ; class FObjectPreSaveContext ; class SLevelViewport ; class FUICommandList ; class IAssetViewport ; class ISequencer ; class ULevel ; class UToolMenu ; struct FPropertyAndParent ; struct FPilotedSpawnable ; struct FLevelEditorSequencerIntegrationOptions {)",
    "insertText": "FLevelEditorSequencerIntegrationOptions() : bRequiresLevelEvents(true) , bRequiresActorEvents(false) , bForceRefreshDetails(true) , bAttachOutlinerColumns(true) , bActivateSequencerEdMode(true) , bSyncBindingsToActorLabels(true)"
  },
  {
    "label": "FLevelEditorSequencerBindingData()",
    "kind": "Method",
    "detail": "Function (} bool bRequiresLevelEvents : 1 ; bool bRequiresActorEvents : 1 ; bool bForceRefreshDetails : 1 ; bool bAttachOutlinerColumns : 1 ; bool bActivateSequencerEdMode : 1 ; bool bSyncBindingsToActorLabels : 1 ; } ; class FLevelEditorSequencerBindingData : public TSharedFromThis<FLevelEditorSequencerBindingData> { public :)",
    "insertText": "FLevelEditorSequencerBindingData() : bActorBindingsDirty(true) , bPropertyBindingsDirty(true)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FActorBindingsDataChanged)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FPropertyBindingsDataChanged)"
  },
  {
    "label": "OnActorBindingsDataChanged()",
    "kind": "Method",
    "detail": "Function (FActorBindingsDataChanged&)",
    "insertText": "OnActorBindingsDataChanged()"
  },
  {
    "label": "GetIsPropertyBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsPropertyBound(TWeakPtr<FSequencer> Sequencer, const struct FPropertyAndParent&)"
  },
  {
    "label": "UpdateActorBindingsData()",
    "kind": "Method",
    "detail": "Function (bool bActorBindingsDirty ; bool bPropertyBindingsDirty ; private : void)",
    "insertText": "UpdateActorBindingsData(TWeakPtr<FSequencer> InSequencer)"
  },
  {
    "label": "UpdatePropertyBindingsData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertyBindingsData(TWeakPtr<FSequencer> InSequencer)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TMap<FObjectKey,FString> ActorBindingsMap ; TMap<FObjectKey,TArray<FString>> PropertyBindingsMap ; FActorBindingsDataChanged ActorBindingsDataChanged ; FPropertyBindingsDataChanged PropertyBindingsDataChanged ; } ; class FLevelEditorSequencerIntegration { public : FLevelEditorSequencerIntegration&)",
    "insertText": "Get()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const FLevelEditorSequencerIntegrationOptions& Options)"
  },
  {
    "label": "AddSequencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSequencer(TSharedRef<ISequencer> InSequencer, const FLevelEditorSequencerIntegrationOptions& Options)"
  },
  {
    "label": "OnSequencerReceivedFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequencerReceivedFocus(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "RemoveSequencer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSequencer(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "GetSequencers()",
    "kind": "Method",
    "detail": "Function (TArray<TWeakPtr<ISequencer>>)",
    "insertText": "GetSequencers()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnSequencersChanged)"
  },
  {
    "label": "GetOnSequencersChanged()",
    "kind": "Method",
    "detail": "Function (FOnSequencersChanged&)",
    "insertText": "GetOnSequencersChanged()"
  },
  {
    "label": "OnPostSaveWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSaveWorld(UWorld* World, FObjectPostSaveContext ObjectSaveContext)"
  },
  {
    "label": "OnPreSaveExternalActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSaveExternalActors(UWorld* World)"
  },
  {
    "label": "OnPostSaveExternalActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSaveExternalActors(UWorld* World)"
  },
  {
    "label": "OnPreAssetValidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreAssetValidation()"
  },
  {
    "label": "OnPostAssetValidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostAssetValidation()"
  },
  {
    "label": "OnLevelAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAdded(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "OnLevelRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemoved(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "OnNewCurrentLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewCurrentLevel()"
  },
  {
    "label": "OnMapOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMapOpened(const FString& Filename, bool bLoadAsTemplate)"
  },
  {
    "label": "OnNewActorsDropped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewActorsDropped(const TArray<UObject*>& DroppedObjects, const TArray<AActor*>& DroppedActors)"
  },
  {
    "label": "OnTabContentChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabContentChanged()"
  },
  {
    "label": "OnMapChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMapChanged(UWorld* World, EMapChangeType MapChangeType)"
  },
  {
    "label": "OnPreBeginPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreBeginPIE(bool bIsSimulating)"
  },
  {
    "label": "OnEndPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndPIE(bool bIsSimulating)"
  },
  {
    "label": "OnEndPlayMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndPlayMap()"
  },
  {
    "label": "OnActorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelectionChanged(UObject*)"
  },
  {
    "label": "OnActorLabelChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorLabelChanged(AActor* ChangedActor)"
  },
  {
    "label": "OnSequencerEvaluated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequencerEvaluated()"
  },
  {
    "label": "OnMovieSceneBindingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMovieSceneBindingsChanged()"
  },
  {
    "label": "OnMovieSceneDataChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMovieSceneDataChanged(EMovieSceneDataChangeType DataChangeType)"
  },
  {
    "label": "OnAllowEditsModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAllowEditsModeChanged(EAllowEditsMode AllowEditsMode)"
  },
  {
    "label": "OnBeginDeferUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginDeferUpdates()"
  },
  {
    "label": "OnEndDeferUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndDeferUpdates()"
  },
  {
    "label": "IsBindingVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBindingVisible(const FMovieSceneBinding& InBinding)"
  },
  {
    "label": "OnPropertyEditorOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyEditorOpened()"
  },
  {
    "label": "RegisterMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMenus()"
  },
  {
    "label": "MakeBrowseToSelectedActorSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeBrowseToSelectedActorSubMenu(UToolMenu* Menu)"
  },
  {
    "label": "BrowseToSelectedActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BrowseToSelectedActor(AActor* Actor, FSequencer* Sequencer, FMovieSceneSequenceID SequenceId)"
  },
  {
    "label": "IsPropertyReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyReadOnly(const FPropertyAndParent& InPropertyAndParent)"
  },
  {
    "label": "ActivateSequencerEditorMode()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ActivateSequencerEditorMode()"
  },
  {
    "label": "DeactivateSequencerEditorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateSequencerEditorMode()"
  },
  {
    "label": "AddLevelViewportMenuExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLevelViewportMenuExtender()"
  },
  {
    "label": "ActivateDetailHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateDetailHandler(const FLevelEditorSequencerIntegrationOptions& Options)"
  },
  {
    "label": "AttachOutlinerColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AttachOutlinerColumn()"
  },
  {
    "label": "DetachOutlinerColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachOutlinerColumn()"
  },
  {
    "label": "ActivateRealtimeViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActivateRealtimeViewports()"
  },
  {
    "label": "RestoreRealtimeViewports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreRealtimeViewports()"
  },
  {
    "label": "RestoreToSavedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreToSavedState(UWorld* World)"
  },
  {
    "label": "ResetToAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetToAnimatedState(UWorld* World)"
  },
  {
    "label": "BackupSpawnablePilotData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BackupSpawnablePilotData()"
  },
  {
    "label": "RestoreSpawnablePilotData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreSpawnablePilotData()"
  },
  {
    "label": "CreateSequencerInfoColumn()",
    "kind": "Method",
    "detail": "Function (struct FSequencerAndOptions { TWeakPtr<FSequencer> Sequencer ; FLevelEditorSequencerIntegrationOptions Options ; FAcquiredResources AcquiredResources ; TSharedRef<FLevelEditorSequencerBindingData> BindingData ; } ; TArray<FSequencerAndOptions> BoundSequencers ; public : TSharedRef<ISceneOutlinerColumn>)",
    "insertText": "CreateSequencerInfoColumn(ISceneOutliner& SceneOutliner)"
  },
  {
    "label": "CreateSequencerSpawnableColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISceneOutlinerColumn>)",
    "insertText": "CreateSequencerSpawnableColumn(ISceneOutliner& SceneOutliner)"
  },
  {
    "label": "IterateAllSequencers()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "IterateAllSequencers(TFunctionRef<void(FSequencer&, const FLevelEditorSequencerIntegrationOptions& Options)>)"
  },
  {
    "label": "UpdateDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDetails(bool bForceRefresh = false)"
  },
  {
    "label": "FLevelEditorSequencerIntegration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLevelEditorSequencerIntegration()"
  }
]