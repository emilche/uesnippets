[
  {
    "label": "UInterpCurveEdSetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterpCurveEdSetup"
  },
  {
    "label": "UParticleEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleEmitter"
  },
  {
    "label": "UParticleLODLevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleLODLevel"
  },
  {
    "label": "UParticleModuleTypeDataBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleTypeDataBase"
  },
  {
    "label": "EEmitterDynamicParameterValue",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEmitterDynamicParameterValue"
  },
  {
    "label": "FEmitterDynamicParameter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmitterDynamicParameter"
  },
  {
    "label": "FRawDistributionFloat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawDistributionFloat"
  },
  {
    "label": "UParticleModuleParameterDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleParameterDynamic"
  },
  {
    "label": "FRandomStream",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRandomStream"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Particles / ParticleModule . h \" # include \" Distributions / DistributionFloatConstant . h \" # include \" Particles / Parameter / ParticleModuleParameterBase . h \" # include \" ParticleEmitterInstances . h \" # include \" Particles / ParticleSystemComponent . h \" # include \" ParticleModuleParameterDynamic . generated . h \" class UInterpCurveEdSetup ; class UParticleEmitter ; class UParticleLODLevel ; class UParticleModuleTypeDataBase ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (EDPV_UserSet,EDPV_AutoSet,EDPV_VelocityX,EDPV_VelocityY,EDPV_VelocityZ,EDPV_VelocityMag,EDPV_MAX,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(Category=EmitterDynamicParameter, VisibleAnywhere)"
  },
  {
    "label": "FEmitterDynamicParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FEmitterDynamicParameter() : bUseEmitterTime(false) , bSpawnTimeOnly(false) , ValueMethod(0) , bScaleVelocityByParamValue(false)"
  },
  {
    "label": "FEmitterDynamicParameter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FEmitterDynamicParameter(FName InParamName, uint32 InUseEmitterTime, TEnumAsByte<enum EEmitterDynamicParameterValue> InValueMethod, UDistributionFloatConstant* InDistribution) : ParamName(InParamName) , bUseEmitterTime(InUseEmitterTime) , bSpawnTimeOnly(false) , ValueMethod(InValueMethod) , bScaleVelocityByParamValue(false)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (ParamValue . Distribution = InDistribution ; } } ;)",
    "insertText": "UCLASS(editinlinenew, hidecategories=Object, MinimalAPI, meta=(DisplayName = \"Dynamic\"))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, editfixedsize, Category=ParticleModuleParameterDynamic)"
  },
  {
    "label": "InitializeDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDefaults()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "Spawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Spawn(FParticleEmitterInstance* Owner, int32 Offset, float SpawnTime, FBaseParticle* ParticleBase)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(FParticleEmitterInstance* Owner, int32 Offset, float DeltaTime)"
  },
  {
    "label": "RequiredBytes()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RequiredBytes(UParticleModuleTypeDataBase* TypeData)"
  },
  {
    "label": "SetToSensibleDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToSensibleDefaults(UParticleEmitter* Owner)"
  },
  {
    "label": "GetCurveObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurveObjects(TArray<FParticleCurvePair>& OutCurves)"
  },
  {
    "label": "WillGeneratedModuleBeIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillGeneratedModuleBeIdentical(UParticleLODLevel* SourceLODLevel, UParticleLODLevel* DestLODLevel, float Percentage)"
  },
  {
    "label": "GetParticleParametersUtilized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParticleParametersUtilized(TArray<FString>& ParticleParameterList)"
  },
  {
    "label": "RefreshModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshModule(UInterpCurveEdSetup* EdSetup, UParticleEmitter* InEmitter, int32 InLODLevel)"
  },
  {
    "label": "SpawnEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnEx(FParticleEmitterInstance* Owner, int32 Offset, float SpawnTime, struct FRandomStream* InRandomStream, FBaseParticle* ParticleBase)"
  },
  {
    "label": "UpdateParameterNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParameterNames(UMaterialInterface* InMaterialInterface)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (float ScaleValue = 1 . 0 f ; float DistributionValue = 1 . 0 f ;)",
    "insertText": "switch(InDynParams.ValueMethod)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (break ; default : break ; })",
    "insertText": "if((InDynParams.bScaleVelocityByParamValue == true) || (InDynParams.ValueMethod == EDPV_UserSet))"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (float TimeValue = InDynParams . bUseEmitterTime ? Owner -> EmitterTime : Particle . RelativeTime ; DistributionValue = InDynParams . ParamValue .)",
    "insertText": "GetValue(TimeValue, Owner->Component, InRandomStream)"
  },
  {
    "label": "GetParameterValue_UserSet()",
    "kind": "Method",
    "detail": "Function (} return DistributionValue* ScaleValue ; } float)",
    "insertText": "GetParameterValue_UserSet(FEmitterDynamicParameter& InDynParams, FBaseParticle& Particle, FParticleEmitterInstance* Owner, struct FRandomStream* InRandomStream)"
  },
  {
    "label": "UpdateUsageFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateUsageFlags()"
  },
  {
    "label": "CanTickInAnyThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanTickInAnyThread()"
  }
]