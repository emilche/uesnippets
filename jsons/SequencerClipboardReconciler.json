[
  {
    "label": "FChannelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelModel"
  },
  {
    "label": "FSequencerPasteEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerPasteEnvironment"
  },
  {
    "label": "FSequencerClipboardPasteGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerClipboardPasteGroup"
  },
  {
    "label": "FSequencerClipboardReconciler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerClipboardReconciler"
  },
  {
    "label": "FPasteMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPasteMetaData"
  },
  {
    "label": "EMethod",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMethod"
  },
  {
    "label": "Reconcile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Reconcile()"
  },
  {
    "label": "Paste()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Paste(const FSequencerPasteEnvironment& PasteEnvironment)"
  },
  {
    "label": "AddDestinationGroup()",
    "kind": "Method",
    "detail": "Function (FSequencerClipboardPasteGroup)",
    "insertText": "AddDestinationGroup()"
  },
  {
    "label": "AddTrackAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTrackAlias(FName Alias1, FName Alias2)"
  },
  {
    "label": "PasteImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PasteImpl(const FSequencerPasteEnvironment& PasteEnvironment)"
  },
  {
    "label": "FindMatchingGroup()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindMatchingGroup(const TArray<TSharedPtr<UE::Sequencer::FChannelModel>>& Destination, const TArray<FMovieSceneClipboardKeyTrack>& Source, TMap<int32, int32>& Map, bool bAllowAliases)"
  },
  {
    "label": "ReconcileOneToMany()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReconcileOneToMany()"
  }
]