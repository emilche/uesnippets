[
  {
    "label": "CommonHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommonHeader"
  },
  {
    "label": "Pli",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Pli"
  },
  {
    "label": "Pli()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_PLI_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_PLI_H_ # include \" modules / rtp_rtcp / source / rtcp_packet / psfb . h \" namespace webrtc { namespace rtcp { class CommonHeader ; class Pli : public Psfb { public : uint8_t kFeedbackMessageType = 1 ;)",
    "insertText": "Pli()"
  },
  {
    "label": "Pli()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pli(const Pli& pli)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const CommonHeader& packet)"
  },
  {
    "label": "BlockLength()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "BlockLength()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(uint8_t* packet, size_t* index, size_t max_length, PacketReadyCallback callback)"
  }
]