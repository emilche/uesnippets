[
  {
    "label": "IAssetEditorInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetEditorInstance"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SActorDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SActorDetails"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SLevelEditorModeContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLevelEditorModeContent"
  },
  {
    "label": "SLevelEditorToolBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLevelEditorToolBox"
  },
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "IWorldHierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldHierarchy"
  },
  {
    "label": "SLevelEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLevelEditor"
  },
  {
    "label": "SLevelViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLevelViewport"
  },
  {
    "label": "IToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkit"
  },
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FLevelViewportTabContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelViewportTabContent"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Engine / World . h \" # include \" Widgets / SWindow . h \" # include \" SLevelViewport . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Framework / Docking / TabManager . h \" # include \" Toolkits / IToolkit . h \" # include \" AssetThumbnail . h \" # include \" ILevelEditor . h \" # include \" LevelViewportTabContent . h \" # include \" SLevelEditorToolBox . h \" # include \" ActorDetailsSCSEditorUICustomization . h \" class IAssetEditorInstance ; class IDetailsView ; class SActorDetails ; class SBorder ; class SDockTab ; class SLevelEditorModeContent ; class SLevelEditorToolBox ; class UTypedElementSelectionSet ; namespace UE::WorldHierarchy { class IWorldHierarchy ; } class SLevelEditor : public ILevelEditor { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SLevelEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() SLevelEditor()"
  },
  {
    "label": "SLevelEditor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SLevelEditor()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const TSharedRef<SDockTab>& OwnerTab, const TSharedRef<SWindow>& OwnerWindow)"
  },
  {
    "label": "GetActiveViewport()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class SLevelViewport>)",
    "insertText": "GetActiveViewport()"
  },
  {
    "label": "GetElementSelectionSet()",
    "kind": "Method",
    "detail": "Function (const UTypedElementSelectionSet*)",
    "insertText": "GetElementSelectionSet()"
  },
  {
    "label": "GetMutableElementSelectionSet()",
    "kind": "Method",
    "detail": "Function (UTypedElementSelectionSet*)",
    "insertText": "GetMutableElementSelectionSet()"
  },
  {
    "label": "SummonLevelViewportContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SummonLevelViewportContextMenu(const FTypedElementHandle& HitProxyElement = FTypedElementHandle())"
  },
  {
    "label": "GetLevelViewportContextMenuTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLevelViewportContextMenuTitle()"
  },
  {
    "label": "SummonLevelViewportViewOptionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SummonLevelViewportViewOptionMenu(const ELevelViewportType ViewOption)"
  },
  {
    "label": "GetHostedToolkits()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<class IToolkit>>&)",
    "insertText": "GetHostedToolkits()"
  },
  {
    "label": "GetViewports()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<SLevelViewport>>)",
    "insertText": "GetViewports()"
  },
  {
    "label": "GetActiveViewportInterface()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SLevelViewport>)",
    "insertText": "GetActiveViewportInterface()"
  },
  {
    "label": "GetThumbnailPool()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS TSharedPtr<class FAssetThumbnailPool>)",
    "insertText": "GetThumbnailPool()"
  },
  {
    "label": "AppendCommands()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "AppendCommands(const TSharedRef<FUICommandList>& InCommandsToAppend)"
  },
  {
    "label": "AddStandaloneLevelViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStandaloneLevelViewport(const TSharedRef<SLevelViewport>& LevelViewport)"
  },
  {
    "label": "TryInvokeTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "TryInvokeTab(FName TabID)"
  },
  {
    "label": "SyncDetailsToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SyncDetailsToSelection()"
  },
  {
    "label": "HasActivePlayInEditorViewport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasActivePlayInEditorViewport()"
  },
  {
    "label": "GetTabTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabTitle()"
  },
  {
    "label": "GetTabSuffix()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTabSuffix()"
  },
  {
    "label": "OnKeyDownInViewport()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDownInViewport(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "CanCloseApp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCloseApp()"
  },
  {
    "label": "GetLevelEditorActions()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FUICommandList>&)",
    "insertText": "GetLevelEditorActions()"
  },
  {
    "label": "BringToFront()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringToFront()"
  },
  {
    "label": "GetTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager>)",
    "insertText": "GetTabManager()"
  },
  {
    "label": "OnToolkitHostingStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolkitHostingStarted(const TSharedRef< class IToolkit >& Toolkit)"
  },
  {
    "label": "OnToolkitHostingFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolkitHostingFinished(const TSharedRef< class IToolkit >& Toolkit)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "CreateActorDetails()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateActorDetails(const FName TabIdentifier)"
  },
  {
    "label": "SetActorDetailsRootCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorDetailsRootCustomization(TSharedPtr<FDetailsViewObjectFilter> InActorDetailsObjectFilter, TSharedPtr<IDetailRootObjectCustomization> InActorDetailsRootCustomization)"
  },
  {
    "label": "AddActorDetailsSCSEditorUICustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorDetailsSCSEditorUICustomization(TSharedPtr<ISCSEditorUICustomization> ActorDetailsSCSEditorUICustomization)"
  },
  {
    "label": "RemoveActorDetailsSCSEditorUICustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActorDetailsSCSEditorUICustomization(TSharedPtr<ISCSEditorUICustomization> ActorDetailsSCSEditorUICustomization)"
  },
  {
    "label": "GetEditorModeManager()",
    "kind": "Method",
    "detail": "Function (FEditorModeTools&)",
    "insertText": "GetEditorModeManager()"
  },
  {
    "label": "GetCommonActions()",
    "kind": "Method",
    "detail": "Function (UTypedElementCommonActions*)",
    "insertText": "GetCommonActions()"
  },
  {
    "label": "GetStatusBarName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetStatusBarName()"
  },
  {
    "label": "OnActiveViewportChanged()",
    "kind": "Method",
    "detail": "Function (FOnActiveViewportChanged&)",
    "insertText": "OnActiveViewportChanged()"
  },
  {
    "label": "RemoveViewportOverlayWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveViewportOverlayWidget(TSharedRef<SWidget>, TSharedPtr<IAssetViewport> InViewport = nullptr)"
  },
  {
    "label": "GetActiveViewportSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetActiveViewportSize()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "GetAllSceneOutliners()",
    "kind": "Method",
    "detail": "Function (TArray<TWeakPtr<ISceneOutliner>>)",
    "insertText": "GetAllSceneOutliners()"
  },
  {
    "label": "SetMostRecentlyUsedSceneOutliner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMostRecentlyUsedSceneOutliner(FName OutlinerIdentifier)"
  },
  {
    "label": "GetMostRecentlyUsedSceneOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISceneOutliner>)",
    "insertText": "GetMostRecentlyUsedSceneOutliner()"
  },
  {
    "label": "GetWorldHierarchy()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<UE::WorldHierarchy::IWorldHierarchy>)",
    "insertText": "GetWorldHierarchy()"
  },
  {
    "label": "SpawnLevelEditorTab()",
    "kind": "Method",
    "detail": "Function (} private : TSharedRef<SDockTab>)",
    "insertText": "SpawnLevelEditorTab(const FSpawnTabArgs& Args, FName TabIdentifier, FString InitializationPayload)"
  },
  {
    "label": "CanSpawnLevelEditorTab()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSpawnLevelEditorTab(const FSpawnTabArgs& Args, FName TabIdentifier)"
  },
  {
    "label": "SummonDetailsPanel()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SummonDetailsPanel(FName Identifier)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "RegisterMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMenus()"
  },
  {
    "label": "RestoreContentArea()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "RestoreContentArea(const TSharedRef<SDockTab>& OwnerTab, const TSharedRef<SWindow>& OwnerWindow)"
  },
  {
    "label": "HandleExperimentalSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleExperimentalSettingChanged(FName PropertyName)"
  },
  {
    "label": "RefreshEditorModeCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshEditorModeCommands()"
  },
  {
    "label": "EditorModeCommandsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorModeCommandsChanged()"
  },
  {
    "label": "GetEditorModeTabId()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetEditorModeTabId(FEditorModeID ModeID)"
  },
  {
    "label": "ToggleEditorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleEditorMode(FEditorModeID ModeID)"
  },
  {
    "label": "IsModeActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsModeActive(FEditorModeID ModeID)"
  },
  {
    "label": "ShouldShowModeInToolbar()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowModeInToolbar(FEditorModeID ModeID)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "OnPropertyObjectArrayChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyObjectArrayChanged(const FString& NewTitle, const TArray< UObject* >& UObjects)"
  },
  {
    "label": "OnLayoutHasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLayoutHasChanged()"
  },
  {
    "label": "ConstructTitleBarMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructTitleBarMessages()"
  },
  {
    "label": "BuildViewportTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "BuildViewportTab(const FText& Label, const FString LayoutId, const FString& InitializationPayload)"
  },
  {
    "label": "OnViewportTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewportTabClosed(TSharedRef<SDockTab> ClosedTab)"
  },
  {
    "label": "OnToolboxTabClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolboxTabClosed(TSharedRef<SDockTab> ClosedTab)"
  },
  {
    "label": "SaveViewportTabInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveViewportTabInfo(TSharedRef<const class FLevelViewportTabContent> ViewportTabContent)"
  },
  {
    "label": "RestoreViewportTabInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreViewportTabInfo(TSharedRef<FLevelViewportTabContent> ViewportTabContent)"
  },
  {
    "label": "ResetViewportTabInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetViewportTabInfo()"
  },
  {
    "label": "HandleEditorMapChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEditorMapChange(uint32 MapChangeFlags)"
  },
  {
    "label": "HandleAssetsDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAssetsDeleted(const TArray<UClass*>& DeletedClasses)"
  },
  {
    "label": "OnIsmInstanceRemoving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIsmInstanceRemoving(const FSMInstanceElementId& SMInstanceElementId, int32 InstanceIndex)"
  },
  {
    "label": "OnElementSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnElementSelectionChanged(const UTypedElementSelectionSet* SelectionSet, bool bForceRefresh = false)"
  },
  {
    "label": "OnActorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelectionChanged(const TArray<UObject*>& NewSelection, bool bForceRefresh)"
  },
  {
    "label": "OnOverridePropertyEditorSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOverridePropertyEditorSelection(const TArray<AActor*>& NewSelection, bool bForceRefresh = false)"
  },
  {
    "label": "OnLevelActorDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorDeleted(AActor* InActor)"
  },
  {
    "label": "OnLevelActorOuterChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorOuterChanged(AActor* InActor = nullptr, UObject* InOldOuter = nullptr)"
  },
  {
    "label": "RegisterStatusBarTools()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterStatusBarTools()"
  },
  {
    "label": "GetAllActorDetails()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<SActorDetails>>)",
    "insertText": "GetAllActorDetails()"
  },
  {
    "label": "CreateSceneOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISceneOutliner>)",
    "insertText": "CreateSceneOutliner(FName TabIdentifier)"
  },
  {
    "label": "OnExtendSceneOutlinerTabContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExtendSceneOutlinerTabContextMenu(FMenuBuilder& InMenuBuilder)"
  },
  {
    "label": "GetSceneOutlinerLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSceneOutlinerLabel(FName SceneOutlinerTabIdentifier)"
  },
  {
    "label": "ResetMostRecentOutliner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMostRecentOutliner()"
  }
]