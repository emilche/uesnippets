[
  {
    "label": "TChaosChunkedArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TChaosChunkedArray"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ChunkedArray . h \" namespace Chaos { namespace Private { template<InElementType,uint32 TargetBytesPerChunk = 1 6 3 8 4,AllocatorType = FDefaultAllocator,= TEnableIf<std::is_trivially_destructible_v<InElementType>>> class TChaosChunkedArray : public TChunkedArray<InElementType,TargetBytesPerChunk,AllocatorType> { public : void)",
    "insertText": "Reset()"
  }
]