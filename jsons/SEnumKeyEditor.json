[
  {
    "label": "SEnumCurveKeyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEnumCurveKeyEditor"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" CurveKeyEditors / SequencerKeyEditor . h \" # include \" Channels / MovieSceneByteChannel . h \" class SEnumCurveKeyEditor : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SEnumCurveKeyEditor)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSequencerKeyEditor<FMovieSceneByteChannel, uint8>& InKeyEditor, UEnum* Enum)"
  },
  {
    "label": "OnGetCurrentValueAsInt()",
    "kind": "Method",
    "detail": "Function (private : int32)",
    "insertText": "OnGetCurrentValueAsInt()"
  },
  {
    "label": "OnChangeKey()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnChangeKey(int32 Selection, ESelectInfo::Type SelectionType)"
  }
]