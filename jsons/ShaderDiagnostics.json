[
  {
    "label": "FShaderDiagnosticInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShaderDiagnosticInfo"
  },
  {
    "label": "FShaderDiagnosticInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" RHIShaderPlatform . h \" # include \" ShaderCompilerJobTypes . h \" struct FShaderDiagnosticInfo { TArray<FShaderCommonCompileJob*> ErrorJobs ; TArray<FString> UniqueErrors ; TArray<FString> UniqueWarnings ; TArray<EShaderPlatform> ErrorPlatforms ; FString TargetShaderPlatformString ;)",
    "insertText": "FShaderDiagnosticInfo(const TArray<FShaderCommonCompileJobPtr>& Jobs)"
  },
  {
    "label": "AddAndProcessErrorsForJob()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddAndProcessErrorsForJob(FShaderCommonCompileJob& Job)"
  },
  {
    "label": "AddAndProcessErrorsForFailedJobFiltered()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddAndProcessErrorsForFailedJobFiltered(FShaderCompileJob& Job, const TCHAR* FilterMessage)"
  },
  {
    "label": "AddWarningsForJob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWarningsForJob(const FShaderCommonCompileJob& Job)"
  },
  {
    "label": "GetSingleJobCompilationDump()",
    "kind": "Method",
    "detail": "Function (TArray<uint32> UniqueErrorHashes ; } ; FString)",
    "insertText": "GetSingleJobCompilationDump(const FShaderCompileJob* SingleJob)"
  },
  {
    "label": "IsShaderDevelopmentModeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShaderDevelopmentModeEnabled()"
  }
]