[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetReferenceCollector"
  },
  {
    "label": "FReferenceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceInfo"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Iris / Core / NetObjectReference . h \" # include \" Iris / Serialization / NetSerializer . h \" # include \" Iris / ReplicationState / ReplicationStateDescriptor . h \" namespace UE::Net { enum class ENetReferenceCollectorTraits : uint32 { None = 0 U,IncludeInvalidReferences = 1 U,OnlyCollectReferencesThatCanBeExported = IncludeInvalidReferences<<1 U,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ENetReferenceCollectorTraits)"
  },
  {
    "label": "FNetReferenceCollector()",
    "kind": "Method",
    "detail": "Function (class FNetReferenceCollector { public : struct FReferenceInfo { FNetReferenceInfo Info ; FNetObjectReference Reference ; FNetSerializerChangeMaskParam ChangeMaskInfo ; } ; typedef TArray<FReferenceInfo,TInlineAllocator<3 2>> FReferenceInfoArray ; public :)",
    "insertText": "FNetReferenceCollector() : Traits(ENetReferenceCollectorTraits::None)"
  },
  {
    "label": "FNetReferenceCollector()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNetReferenceCollector(ENetReferenceCollectorTraits InTraits) : Traits(InTraits)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Add(const FNetReferenceInfo& ReferenceInfo, const FNetObjectReference& Reference, const FNetSerializerChangeMaskParam& ChangeMaskInfo)"
  },
  {
    "label": "GetCollectedReferences()",
    "kind": "Method",
    "detail": "Function (const FReferenceInfoArray&)",
    "insertText": "GetCollectedReferences()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (ReferenceInfos .)",
    "insertText": "Reset()"
  }
]