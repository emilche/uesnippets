[
  {
    "label": "FD3D12SyncPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12SyncPoint"
  },
  {
    "label": "FD3D12BufferedGPUTiming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12BufferedGPUTiming"
  },
  {
    "label": "FD3D12EventNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12EventNode"
  },
  {
    "label": "FD3D12EventNodeFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FD3D12EventNodeFrame"
  },
  {
    "label": "FD3D12GPUProfiler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FD3D12GPUProfiler"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" D3D12RHICommon . h \" # include \" GPUProfiler . h \" class FD3D12SyncPoint ; using FD3D12SyncPointRef = TRefCountPtr<FD3D12SyncPoint> ; #)",
    "insertText": "if(RHI_NEW_GPU_PROFILER == 0)"
  },
  {
    "label": "FD3D12BufferedGPUTiming()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FD3D12BufferedGPUTiming(FD3D12Device* InParent)"
  },
  {
    "label": "FD3D12BufferedGPUTiming()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FD3D12BufferedGPUTiming()"
  },
  {
    "label": "StartTiming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartTiming()"
  },
  {
    "label": "EndTiming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTiming()"
  },
  {
    "label": "GetTiming()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetTiming()"
  },
  {
    "label": "CalibrateTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalibrateTimers(FD3D12Adapter* ParentAdapter)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FD3D12Adapter* ParentAdapter)"
  },
  {
    "label": "FD3D12EventNode()",
    "kind": "Method",
    "detail": "Function (private : struct { uint64 Result = 0 ; FD3D12SyncPointRef SyncPoint ; } Begin,End ; bool bIsTiming = false ; bool bStablePowerState = false ; } ; class FD3D12EventNode : public FGPUProfilerEventNode,public FD3D12DeviceChild { public :)",
    "insertText": "FD3D12EventNode(const TCHAR* InName, FGPUProfilerEventNode* InParent, FD3D12Device* InParentDevice)"
  },
  {
    "label": "FD3D12EventNode()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FD3D12EventNode()"
  },
  {
    "label": "StopTiming()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StopTiming()"
  },
  {
    "label": "FD3D12EventNodeFrame()",
    "kind": "Method",
    "detail": "Function (} FD3D12BufferedGPUTiming Timing ; } ; class FD3D12EventNodeFrame : public FGPUProfilerEventNodeFrame,public FD3D12DeviceChild { public :)",
    "insertText": "FD3D12EventNodeFrame(FD3D12Device* InParent)"
  },
  {
    "label": "FD3D12EventNodeFrame()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FD3D12EventNodeFrame()"
  },
  {
    "label": "StartFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartFrame()"
  },
  {
    "label": "EndFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFrame()"
  },
  {
    "label": "GetRootTimingResults()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRootTimingResults()"
  },
  {
    "label": "FD3D12GPUProfiler()",
    "kind": "Method",
    "detail": "Function (FD3D12BufferedGPUTiming RootEventTiming ; } ; struct FD3D12GPUProfiler : public FGPUProfiler,public FD3D12DeviceChild { TIndirectArray<FD3D12EventNodeFrame> GPUHitchEventNodeFrames ;)",
    "insertText": "FD3D12GPUProfiler(FD3D12Device* Parent) : FD3D12DeviceChild(Parent)"
  },
  {
    "label": "BeginFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFrame()"
  },
  {
    "label": "CreateEventNode()",
    "kind": "Method",
    "detail": "Function (} FGPUProfilerEventNode*)",
    "insertText": "CreateEventNode(const TCHAR* InName, FGPUProfilerEventNode* InParent)"
  },
  {
    "label": "FD3D12EventNode()",
    "kind": "Method",
    "detail": "Function (FD3D12EventNode* EventNode = new)",
    "insertText": "FD3D12EventNode(InName, InParent, GetParentDevice())"
  }
]