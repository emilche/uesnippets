[
  {
    "label": "FAssetRenameDataWithReferencers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetRenameDataWithReferencers"
  },
  {
    "label": "FCachedSoftReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedSoftReference"
  },
  {
    "label": "FAssetRenameManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetRenameManager"
  },
  {
    "label": "RenameAssets()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IAssetTools . h \" # include \" UObject / SoftObjectPath . h \" struct FAssetRenameDataWithReferencers ; struct FCachedSoftReference { TMap<FSoftObjectPath,TSet<FWeakObjectPtr>> Map ; TArray<FSoftObjectPath> Keys ; } ; class FAssetRenameManager : public TSharedFromThis<FAssetRenameManager> { public : bool)",
    "insertText": "RenameAssets(const TArray<FAssetRenameData>& AssetsAndNames)"
  },
  {
    "label": "RenameAssetsWithDialog()",
    "kind": "Method",
    "detail": "Function (EAssetRenameResult)",
    "insertText": "RenameAssetsWithDialog(const TArray<FAssetRenameData>& AssetsAndNames, bool bAutoCheckout = false)"
  },
  {
    "label": "FindSoftReferencesToObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSoftReferencesToObject(FSoftObjectPath TargetObject, TArray<UObject*>& ReferencingObjects)"
  },
  {
    "label": "FindSoftReferencesToObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSoftReferencesToObjects(const TArray<FSoftObjectPath>& TargetObjects, TMap<FSoftObjectPath, TArray<UObject*>>& ReferencingObjects)"
  },
  {
    "label": "OnAssetPostRenameEvent()",
    "kind": "Method",
    "detail": "Function (FAssetPostRenameEvent&)",
    "insertText": "OnAssetPostRenameEvent()"
  },
  {
    "label": "CheckPackageForSoftObjectReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckPackageForSoftObjectReferences(UPackage* Package, const TMap<FSoftObjectPath, FSoftObjectPath>& AssetRedirectorMap, TArray<UObject*>& OutReferencingObjects)"
  },
  {
    "label": "CheckPackageForSoftObjectReferences()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckPackageForSoftObjectReferences(UPackage* Package, const TMap<FSoftObjectPath, FSoftObjectPath>& AssetRedirectorMap, TMap<FSoftObjectPath, TArray<UObject*>>& OutReferencingObjects)"
  },
  {
    "label": "CanExpandAssetsRenameDataWithTheirVariants()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExpandAssetsRenameDataWithTheirVariants(const TArray<FAssetRenameData>& InAssetsAndNames)"
  },
  {
    "label": "RenameAssetsAndVariantsCallback()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RenameAssetsAndVariantsCallback(TArray<FAssetRenameData> InAssetsRenameData, bool bAutoCheckout, bool bWithDialog)"
  },
  {
    "label": "RenameAssetsAndVariants()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenameAssetsAndVariants(const TArray<FAssetRenameData>& InAssetsRenameData, bool bAutoCheckout, bool bWithDialog)"
  },
  {
    "label": "FixReferencesAndRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FixReferencesAndRename(const TArray<FAssetRenameData>& AssetsAndNames, bool bAutoCheckout, bool bWithDialog, FScopedSlowTask& RenamingSlowTask)"
  },
  {
    "label": "FindCDOReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindCDOReferences(const TArrayView<FAssetRenameDataWithReferencers>& AssetsToRename, TArray<FAssetRenameDataWithReferencers*>& OutHardReferences, TArray<FAssetRenameDataWithReferencers*>& OutSoftReferences, bool bSetRedirectorFlags)"
  },
  {
    "label": "PopulateAssetReferencers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateAssetReferencers(TArray<FAssetRenameDataWithReferencers>& AssetsToPopulate)"
  },
  {
    "label": "UpdatePackageStatus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdatePackageStatus(TArray<FAssetRenameDataWithReferencers>& AssetsToRename)"
  },
  {
    "label": "LoadReferencingPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadReferencingPackages(TArray<FAssetRenameDataWithReferencers>& AssetsToRename, bool bLoadAllPackages, bool bCheckStatus, TArray<UPackage*>& OutReferencingPackagesToSave, TArray<UObject*>& OutSoftReferencingObjects)"
  },
  {
    "label": "GatherReferencingObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherReferencingObjects(TArray<FAssetRenameDataWithReferencers>& AssetsToRename, TMap<FSoftObjectPath, TArray<UObject*>>& OutSoftReferencingObjects)"
  },
  {
    "label": "CheckOutPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckOutPackages(TArray<FAssetRenameDataWithReferencers>& AssetsToRename, TArray<UPackage*>& InOutReferencingPackagesToSave, bool bAutoCheckout)"
  },
  {
    "label": "AutoCheckOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AutoCheckOut(TArray<UPackage*>& PackagesToCheckOut)"
  },
  {
    "label": "DetectReferencingCollections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetectReferencingCollections(TArray<FAssetRenameDataWithReferencers>& AssetsToRename)"
  },
  {
    "label": "DetectReadOnlyPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetectReadOnlyPackages(TArray<FAssetRenameDataWithReferencers>& AssetsToRename, TArray<UPackage*>& InOutReferencingPackagesToSave)"
  },
  {
    "label": "SetupPublicAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPublicAssets(TArray<FAssetRenameDataWithReferencers>& AssetsToRename)"
  },
  {
    "label": "PerformAssetRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformAssetRename(TArray<FAssetRenameDataWithReferencers>& AssetsToRename, FScopedSlowTask& RenamingSlowTask)"
  },
  {
    "label": "PerformAssetRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformAssetRename(TArray<FAssetRenameDataWithReferencers>& AssetsToRename, const TArray<UPackage*>& ReferencingPackagesToSave, FScopedSlowTask& RenamingSlowTask)"
  },
  {
    "label": "SaveReferencingPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveReferencingPackages(const TArray<UPackage*>& ReferencingPackagesToSave)"
  },
  {
    "label": "RenameInterrupted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameInterrupted(const TArray<FAssetRenameData>& AssetsToRename, const FText& InterruptionReason, bool bWithDialog)"
  },
  {
    "label": "ReportFailures()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ReportFailures(const TArray<FAssetRenameDataWithReferencers>& AssetsToRename, bool bWithDialog)"
  },
  {
    "label": "RequiresCheckingForVariants()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresCheckingForVariants(const TArray<FAssetRenameData>& InAssetsToRename, TArray<FAssetRenameData>& OutAssetsAndVariants, TArray<FAssetRenameData>& OutAssetsToCheckForVariants)"
  },
  {
    "label": "OnMarkPackageDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMarkPackageDirty(UPackage* Pkg, bool bWasDirty)"
  }
]