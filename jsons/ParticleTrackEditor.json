[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSequencerSectionPainter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionPainter"
  },
  {
    "label": "FParticleTrackEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleTrackEditor"
  },
  {
    "label": "FParticleSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSection"
  },
  {
    "label": "FParticleTrackEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Guid . h \" # include \" Templates / SubclassOf . h \" # include \" Curves / KeyHandle . h \" # include \" ISequencer . h \" # include \" MovieSceneTrack . h \" # include \" ISequencerSection . h \" # include \" ISequencerTrackEditor . h \" # include \" MovieSceneTrackEditor . h \" class FMenuBuilder ; class FSequencerSectionPainter ; class FParticleTrackEditor : public FMovieSceneTrackEditor { public :)",
    "insertText": "FParticleTrackEditor(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "FParticleTrackEditor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FParticleTrackEditor()"
  },
  {
    "label": "CreateTrackEditor()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<ISequencerTrackEditor>)",
    "insertText": "CreateTrackEditor(TSharedRef<ISequencer> OwningSequencer)"
  },
  {
    "label": "AddParticleKey()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddParticleKey(const FGuid ObjectGuid, bool bTrigger)"
  },
  {
    "label": "BuildObjectBindingTrackMenu()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "BuildObjectBindingTrackMenu(FMenuBuilder& MenuBuilder, const TArray<FGuid>& ObjectBindings, const UClass* ObjectClass)"
  },
  {
    "label": "MakeSectionInterface()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISequencerSection>)",
    "insertText": "MakeSectionInterface(UMovieSceneSection& SectionObject, UMovieSceneTrack& Track, FGuid ObjectBinding)"
  },
  {
    "label": "SupportsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsType(TSubclassOf<UMovieSceneTrack> Type)"
  },
  {
    "label": "AddParticleKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParticleKey(TArray<FGuid> ObjectGuids)"
  },
  {
    "label": "AddKeyInternal()",
    "kind": "Method",
    "detail": "Function (private : FKeyPropertyResult)",
    "insertText": "AddKeyInternal(FFrameNumber KeyTime, UObject* Object)"
  },
  {
    "label": "FParticleSection()",
    "kind": "Method",
    "detail": "Function (} ; class FParticleSection : public ISequencerSection,public TSharedFromThis<FParticleSection> { public :)",
    "insertText": "FParticleSection(UMovieSceneSection& InSection, TSharedRef<ISequencer> InOwningSequencer)"
  },
  {
    "label": "FParticleSection()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FParticleSection()"
  },
  {
    "label": "GetSectionObject()",
    "kind": "Method",
    "detail": "Function (public : UMovieSceneSection*)",
    "insertText": "GetSectionObject()"
  },
  {
    "label": "GetSectionHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSectionHeight(const UE::Sequencer::FViewDensityInfo& ViewDensity)"
  },
  {
    "label": "OnPaintSection()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaintSection(FSequencerSectionPainter& InPainter)"
  },
  {
    "label": "SectionIsResizable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SectionIsResizable()"
  }
]