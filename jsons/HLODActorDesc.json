[
  {
    "label": "UHLODLayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODLayer"
  },
  {
    "label": "AWorldPartitionHLOD",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldPartitionHLOD"
  },
  {
    "label": "FHLODActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLODActorDesc"
  },
  {
    "label": "FHLODActorDescFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHLODActorDescFactory"
  },
  {
    "label": "GetChildHLODActors()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Containers / Map . h \" # include \" WorldPartition / WorldPartitionActorDesc . h \" # include \" WorldPartition / DataLayer / DataLayersID . h \" # include \" WorldPartition / HLOD / HLODStats . h \" class UHLODLayer ; class AWorldPartitionHLOD ; class FHLODActorDesc : public FWorldPartitionActorDesc { class AWorldPartitionHLOD ; class FHLODActorDescFactory ; public : typedef TMap<FName,int64> FStats ; const TArray<FGuid>&)",
    "insertText": "GetChildHLODActors()"
  },
  {
    "label": "FHLODActorDesc()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "FHLODActorDesc()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const AActor* InActor)"
  },
  {
    "label": "Equals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Equals(const FWorldPartitionActorDesc* Other)"
  },
  {
    "label": "GetSizeOf()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSizeOf()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsRuntimeRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRuntimeRelevant(const FWorldPartitionActorDescInstance* InActorDescInstance)"
  }
]