[
  {
    "label": "ICollectionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICollectionManager"
  },
  {
    "label": "FCollectionManagerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionManagerModule"
  },
  {
    "label": "FCollectionManagerConsoleCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollectionManagerConsoleCommands"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" UObject / NameTypes . h \" class ICollectionManager ; class FCollectionManagerModule : public IModuleInterface { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (ICollectionManager&)",
    "insertText": "Get()"
  },
  {
    "label": "GetModule()",
    "kind": "Method",
    "detail": "Function (FCollectionManagerModule&)",
    "insertText": "GetModule()"
  },
  {
    "label": "CollectionManagerModuleName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "CollectionManagerModuleName(\"CollectionManager\")"
  },
  {
    "label": "FCollectionManagerModule()",
    "kind": "Method",
    "detail": "Function (FCollectionManagerModule* Module = FModuleManager::GetModulePtr<)",
    "insertText": "FCollectionManagerModule(CollectionManagerModuleName)"
  },
  {
    "label": "IsModuleAvailable()",
    "kind": "Method",
    "detail": "Function (} else { return* Module ; } } bool)",
    "insertText": "IsModuleAvailable()"
  }
]