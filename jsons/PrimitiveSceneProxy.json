[
  {
    "label": "FLightSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneInfo"
  },
  {
    "label": "FLightSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightSceneProxy"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FPrimitiveSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneInfo"
  },
  {
    "label": "FStaticPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticPrimitiveDrawInterface"
  },
  {
    "label": "HHitProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HHitProxy"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "URuntimeVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTexture"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatch"
  },
  {
    "label": "FColorVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FColorVertexBuffer"
  },
  {
    "label": "FRayTracingGeometry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingGeometry"
  },
  {
    "label": "FVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactory"
  },
  {
    "label": "IHeterogeneousVolumeInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IHeterogeneousVolumeInterface"
  },
  {
    "label": "FPrimitiveUniformShaderParametersBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveUniformShaderParametersBuilder"
  },
  {
    "label": "FPrimitiveSceneProxyDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrimitiveSceneProxyDesc"
  },
  {
    "label": "IPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPrimitiveComponent"
  },
  {
    "label": "FRenderTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderTransform"
  },
  {
    "label": "FRenderBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderBounds"
  },
  {
    "label": "FDesiredLODLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDesiredLODLevel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSimpleLightEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleLightEntry"
  },
  {
    "label": "FSimpleLightPerViewEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleLightPerViewEntry"
  },
  {
    "label": "FSimpleLightInstacePerViewIndexData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleLightInstacePerViewIndexData"
  },
  {
    "label": "FSimpleLightArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleLightArray"
  },
  {
    "label": "FHeightfieldComponentDescription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHeightfieldComponentDescription"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FRayTracingInstanceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingInstanceCollector"
  },
  {
    "label": "FRayTracingMaterialGatheringContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingMaterialGatheringContext"
  },
  {
    "label": "FRayTracingInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingInstance"
  },
  {
    "label": "FMeshElementCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshElementCollector"
  },
  {
    "label": "FCardRepresentationData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCardRepresentationData"
  },
  {
    "label": "FDistanceFieldVolumeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldVolumeData"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "FDebugMassData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebugMassData"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FLightCacheInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightCacheInterface"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FLightPrimitiveInteraction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightPrimitiveInteraction"
  },
  {
    "label": "FMaterialRenderProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialRenderProxy"
  },
  {
    "label": "FVertexFactoryType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVertexFactoryType"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FDesiredLODLevel()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FDesiredLODLevel(LOD, EType::Fixed)"
  },
  {
    "label": "FDesiredLODLevel()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FDesiredLODLevel(LOD, EType::First)"
  },
  {
    "label": "ShouldOptimizedWPOAffectNonNaniteShaderSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldOptimizedWPOAffectNonNaniteShaderSelection()"
  },
  {
    "label": "IsAllowingApproximateOcclusionQueries()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowingApproximateOcclusionQueries()"
  },
  {
    "label": "CacheShadowDepthsFromPrimitivesUsingWPO()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CacheShadowDepthsFromPrimitivesUsingWPO()"
  },
  {
    "label": "FPrimitiveSceneProxy()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FPrimitiveSceneProxy(const UPrimitiveComponent* InComponent, FName ResourceName = NAME_None)"
  },
  {
    "label": "FPrimitiveSceneProxy()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FPrimitiveSceneProxy(const FPrimitiveSceneProxyDesc& InDesc, FName ResourceName = NAME_None)"
  },
  {
    "label": "FPrimitiveSceneProxy()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FPrimitiveSceneProxy(FPrimitiveSceneProxy const&)"
  },
  {
    "label": "SetSelection_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelection_GameThread(const bool bInParentSelected, const bool bInIndividuallySelected=false)"
  },
  {
    "label": "SetLevelInstanceEditingState_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelInstanceEditingState_GameThread(const bool bInEditingState)"
  },
  {
    "label": "SetHovered_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHovered_GameThread(const bool bInHovered)"
  },
  {
    "label": "SetLightingChannels_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightingChannels_GameThread(FLightingChannels LightingChannels)"
  },
  {
    "label": "SetHiddenEdViews_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHiddenEdViews_GameThread( uint64 InHiddenEditorViews )"
  },
  {
    "label": "SetIsBeingMovedByEditor_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsBeingMovedByEditor_GameThread(bool bIsBeingMoved)"
  },
  {
    "label": "SetSelectionOverride_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionOverride_GameThread(bool bForceSelection)"
  },
  {
    "label": "SetSelectionOutlineColorIndex_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionOutlineColorIndex_GameThread(uint8 ColorIndex)"
  },
  {
    "label": "SetOverlayColor_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverlayColor_GameThread(FColor OverlayColor)"
  },
  {
    "label": "SetPrimitiveColor_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrimitiveColor_GameThread(const FLinearColor& InPrimitiveColor)"
  },
  {
    "label": "ResetSceneVelocity_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSceneVelocity_GameThread()"
  },
  {
    "label": "SetEvaluateWorldPositionOffset_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEvaluateWorldPositionOffset_GameThread(bool bEvaluate)"
  },
  {
    "label": "GetCachedRayTracingInstance()",
    "kind": "Method",
    "detail": "Function (ERayTracingPrimitiveFlags)",
    "insertText": "GetCachedRayTracingInstance(FRayTracingInstance& OutRayTracingInstance)"
  },
  {
    "label": "OnLevelAddedToWorld_RenderThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnLevelAddedToWorld_RenderThread()"
  },
  {
    "label": "OnLevelRemovedFromWorld_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemovedFromWorld_RenderThread()"
  },
  {
    "label": "SetCollisionEnabled_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollisionEnabled_GameThread(const bool bNewEnabled)"
  },
  {
    "label": "SetCollisionEnabled_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollisionEnabled_RenderThread(const bool bNewEnabled)"
  },
  {
    "label": "SetCustomDepthEnabled_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDepthEnabled_GameThread(const bool bInRenderCustomDepth)"
  },
  {
    "label": "SetCustomDepthEnabled_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDepthEnabled_RenderThread(const bool bInRenderCustomDepth)"
  },
  {
    "label": "SetCustomDepthStencilValue_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDepthStencilValue_GameThread(const int32 InCustomDepthStencilValue )"
  },
  {
    "label": "SetCustomDepthStencilValue_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomDepthStencilValue_RenderThread(const int32 InCustomDepthStencilValue)"
  },
  {
    "label": "SetDistanceFieldSelfShadowBias_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDistanceFieldSelfShadowBias_RenderThread(float NewBias)"
  },
  {
    "label": "SetDrawDistance_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDrawDistance_RenderThread(float MinDrawDistance, float MaxDrawDistance, float VirtualTextureMaxDrawDistance)"
  },
  {
    "label": "SetUsedMaterialForVerification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsedMaterialForVerification(const TArray<UMaterialInterface*>& InUsedMaterialsForVerification)"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetBounds()"
  },
  {
    "label": "DrawArc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawArc(FPrimitiveDrawInterface* PDI, const FVector& Start, const FVector& End, const float Height, const uint32 Segments, const FLinearColor& Color\n\t\t, uint8 DepthPriorityGroup,\tconst float Thickness = 0.0f, const bool bScreenSpace = false)"
  },
  {
    "label": "DrawArrowHead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawArrowHead(FPrimitiveDrawInterface* PDI, const FVector& Tip, const FVector& Origin, const float Size, const FLinearColor& Color\n\t\t, uint8 DepthPriorityGroup,\tconst float Thickness = 0.0f, const bool bScreenSpace = false)"
  },
  {
    "label": "ApplyWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldOffset(FRHICommandListBase& RHICmdList, FVector InOffset)"
  },
  {
    "label": "ApplyLateUpdateTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLateUpdateTransform(FRHICommandListBase& RHICmdList, const FMatrix& LateUpdateTransform)"
  },
  {
    "label": "UpdateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUniformBuffer(FRHICommandList& RHICmdList)"
  },
  {
    "label": "SetDebugMassData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugMassData(const TArray<FDebugMassData>& InDebugMassData)"
  },
  {
    "label": "FUintVector2()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FUintVector2(0, 0)"
  },
  {
    "label": "BoostPrecachedPSORequestsOnDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BoostPrecachedPSORequestsOnDraw()"
  },
  {
    "label": "SetPSORequestsToBoostOnDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPSORequestsToBoostOnDraw(const TArray<FMaterialPSOPrecacheRequestID>& PSORequestsToBoostOnDrawIN)"
  },
  {
    "label": "SetupInstanceSceneDataBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupInstanceSceneDataBuffers(const FInstanceSceneDataBuffers* InInstanceSceneDataBuffers)"
  },
  {
    "label": "UpdateVisibleInLumenScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibleInLumenScene()"
  },
  {
    "label": "EnableGPUSceneSupportFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableGPUSceneSupportFlags()"
  },
  {
    "label": "SetTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransform(FRHICommandListBase& RHICmdList, const FMatrix& InLocalToWorld, const FBoxSphereBounds& InBounds, const FBoxSphereBounds& InLocalBounds, FVector InActorPosition)"
  },
  {
    "label": "CreateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUniformBuffer()"
  },
  {
    "label": "SetHiddenEdViews_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHiddenEdViews_RenderThread( uint64 InHiddenEditorViews )"
  },
  {
    "label": "UpdateInstances_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstances_RenderThread(FRHICommandListBase& RHICmdList, const FBoxSphereBounds& InBounds, const FBoxSphereBounds& InLocalBounds, const FBoxSphereBounds& InStaticMeshBounds)"
  },
  {
    "label": "SetSelection_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelection_RenderThread(const bool bInParentSelected, const bool bInIndividuallySelected)"
  },
  {
    "label": "SetLevelInstanceEditingState_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLevelInstanceEditingState_RenderThread(const bool bInLevelInstanceEditingState)"
  },
  {
    "label": "SetHovered_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHovered_RenderThread(const bool bInHovered)"
  },
  {
    "label": "PadInstanceLocalBounds()",
    "kind": "Method",
    "detail": "Function (FRenderBounds)",
    "insertText": "PadInstanceLocalBounds(const FRenderBounds& InBounds)"
  },
  {
    "label": "SupportsCachingMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsCachingMeshDrawCommands(const FMeshBatch& MeshBatch)"
  },
  {
    "label": "SupportsCachingMeshDrawCommands()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsCachingMeshDrawCommands(const FMeshBatch& MeshBatch, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "SupportsNaniteRendering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsNaniteRendering(const FVertexFactory* RESTRICT VertexFactory, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy)"
  },
  {
    "label": "SupportsNaniteRendering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsNaniteRendering(const FVertexFactory* RESTRICT VertexFactory, const FPrimitiveSceneProxy* RESTRICT PrimitiveSceneProxy, const class FMaterialRenderProxy* MaterialRenderProxy, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "SupportsNaniteRendering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsNaniteRendering(const class FVertexFactoryType* RESTRICT VertexFactoryType, const class FMaterial& Material, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "IsParallelGatherDynamicMeshElementsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParallelGatherDynamicMeshElementsEnabled()"
  }
]