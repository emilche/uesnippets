[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / ContainersFwd . h \" # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" # ifndef UE_SUPPORT_FULL_PACKAGEPATH # define UE_SUPPORT_FULL_PACKAGEPATH WITH_EDITOR # endif class FArchive ; enum class EPackageSegment : uint8 ; enum class EPackageExtension : uint8 { Unspecified = 0,Asset,Map,TextAsset,TextMap,Custom,EmptyString,Exports,BulkDataDefault,BulkDataOptional,BulkDataMemoryMapped,PayloadSidecar,Count,} ; int EPackageExtensionCount = static_cast<)",
    "insertText": "int(EPackageExtension::PayloadSidecar)"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "LexToString(EPackageExtension PackageExtension)"
  },
  {
    "label": "FPackagePath()",
    "kind": "Method",
    "detail": "Function (class FPackagePath { public :)",
    "insertText": "FPackagePath()"
  },
  {
    "label": "FPackagePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPackagePath(const FPackagePath& Other)"
  },
  {
    "label": "FPackagePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPackagePath(FPackagePath&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPackagePath&)",
    "insertText": "operator(const FPackagePath& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPackagePath&)",
    "insertText": "operator(FPackagePath&& Other)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "TryFromMountedName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromMountedName(FStringView InPackageNameOrHeaderFilePath, FPackagePath& OutPackagePath)"
  },
  {
    "label": "TryFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromPackageName(FStringView InPackageName, FPackagePath& OutPackagePath)"
  },
  {
    "label": "TryFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromPackageName(FName InPackageName, FPackagePath& OutPackagePath)"
  },
  {
    "label": "TryFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromPackageName(const TCHAR* InPackageName, FPackagePath& OutPackagePath)"
  },
  {
    "label": "FromPackageNameChecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameChecked(FStringView InPackageName)"
  },
  {
    "label": "FromPackageNameChecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameChecked(FName InPackageName)"
  },
  {
    "label": "FromPackageNameChecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameChecked(const TCHAR* InPackageName)"
  },
  {
    "label": "FromPackageNameUnchecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameUnchecked(FName InPackageName)"
  },
  {
    "label": "FromLocalPath()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromLocalPath(FStringView InFilename)"
  },
  {
    "label": "FromMountedComponents()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromMountedComponents(FStringView PackageNameRoot, FStringView FilePathRoot, FStringView RelPath, EPackageExtension InExtension, FStringView InCustomExtension = FStringView())"
  },
  {
    "label": "TryMatchCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryMatchCase(const FPackagePath& SourcePackagePath, FStringView FilePathToMatch, FPackagePath& OutPackagePath)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FPackagePath& PackagePath)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "IsMountedPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMountedPath()"
  },
  {
    "label": "HasPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPackageName()"
  },
  {
    "label": "HasLocalPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLocalPath()"
  },
  {
    "label": "GetPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPackageName()"
  },
  {
    "label": "AppendPackageName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendPackageName(FStringBuilderBase& Builder)"
  },
  {
    "label": "GetPackageFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetPackageFName()"
  },
  {
    "label": "GetLocalFullPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalFullPath()"
  },
  {
    "label": "AppendLocalFullPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendLocalFullPath(FStringBuilderBase& Builder)"
  },
  {
    "label": "GetLocalBaseFilenameWithPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalBaseFilenameWithPath()"
  },
  {
    "label": "AppendLocalBaseFilenameWithPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendLocalBaseFilenameWithPath(FStringBuilderBase& Builder)"
  },
  {
    "label": "GetHeaderExtension()",
    "kind": "Method",
    "detail": "Function (EPackageExtension)",
    "insertText": "GetHeaderExtension()"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugName()"
  },
  {
    "label": "GetDebugNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDebugNameText()"
  },
  {
    "label": "GetDebugNameWithExtension()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugNameWithExtension()"
  },
  {
    "label": "GetPackageNameOrFallback()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPackageNameOrFallback()"
  },
  {
    "label": "SetHeaderExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHeaderExtension(EPackageExtension Extension, FStringView CustomExtension = FStringView())"
  },
  {
    "label": "GetCustomExtension()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetCustomExtension()"
  },
  {
    "label": "ParseExtension()",
    "kind": "Method",
    "detail": "Function (EPackageExtension)",
    "insertText": "ParseExtension(FStringView Filename, int32* OutExtensionStart = nullptr)"
  },
  {
    "label": "GetOptionalSegmentExtensionModifier()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetOptionalSegmentExtensionModifier()"
  },
  {
    "label": "GetExternalActorsFolderName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetExternalActorsFolderName()"
  },
  {
    "label": "GetExternalObjectsFolderName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetExternalObjectsFolderName()"
  },
  {
    "label": "GetExtension()",
    "kind": "Method",
    "detail": "Function (public : EPackageExtension)",
    "insertText": "GetExtension(EPackageSegment PackageSegment, FStringView& OutCustomExtension)"
  },
  {
    "label": "GetExtensionString()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetExtensionString(EPackageSegment PackageSegment)"
  },
  {
    "label": "GetPossibleExtensions()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<EPackageExtension>)",
    "insertText": "GetPossibleExtensions(EPackageSegment PackageSegment)"
  },
  {
    "label": "GetLocalFullPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalFullPath(EPackageSegment PackageSegment)"
  },
  {
    "label": "AppendLocalFullPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendLocalFullPath(FStringBuilderBase& Builder, EPackageSegment PackageSegment)"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugName(EPackageSegment PackageSegment)"
  },
  {
    "label": "GetDebugNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDebugNameText(EPackageSegment PackageSegment)"
  },
  {
    "label": "GetDebugNameWithExtension()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugNameWithExtension(EPackageSegment PackageSegment)"
  },
  {
    "label": "FromLocalPath()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromLocalPath(FStringView InFilename, EPackageSegment& OutPackageSegment)"
  },
  {
    "label": "GetPackageNameRoot()",
    "kind": "Method",
    "detail": "Function (private : FStringView)",
    "insertText": "GetPackageNameRoot()"
  },
  {
    "label": "GetFilePathRoot()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetFilePathRoot()"
  },
  {
    "label": "GetPathData()",
    "kind": "Method",
    "detail": "Function (FStringView)",
    "insertText": "GetPathData()"
  },
  {
    "label": "SetStringData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStringData(FStringView PathData, FStringView PackageNameRoot, FStringView FilePathRoot, FStringView CustomExtension)"
  },
  {
    "label": "GetStringDataLen()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetStringDataLen()"
  },
  {
    "label": "TryConvertToMounted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryConvertToMounted()"
  }
]