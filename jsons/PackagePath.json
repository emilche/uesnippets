[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "only",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "only"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPackagePath()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FPackagePath(const FPackagePath& Other)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "TryFromMountedName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromMountedName(FStringView InPackageNameOrHeaderFilePath, FPackagePath& OutPackagePath)"
  },
  {
    "label": "TryFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromPackageName(FStringView InPackageName, FPackagePath& OutPackagePath)"
  },
  {
    "label": "TryFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromPackageName(FName InPackageName, FPackagePath& OutPackagePath)"
  },
  {
    "label": "TryFromPackageName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFromPackageName(const TCHAR* InPackageName, FPackagePath& OutPackagePath)"
  },
  {
    "label": "FromPackageNameChecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameChecked(FStringView InPackageName)"
  },
  {
    "label": "FromPackageNameChecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameChecked(FName InPackageName)"
  },
  {
    "label": "FromPackageNameChecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameChecked(const TCHAR* InPackageName)"
  },
  {
    "label": "FromPackageNameUnchecked()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromPackageNameUnchecked(FName InPackageName)"
  },
  {
    "label": "FromLocalPath()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromLocalPath(FStringView InFilename)"
  },
  {
    "label": "TryMatchCase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryMatchCase(const FPackagePath& SourcePackagePath, FStringView FilePathToMatch,\n\t\tFPackagePath& OutPackagePath)"
  },
  {
    "label": "ParseExtension()",
    "kind": "Method",
    "detail": "Function (EPackageExtension)",
    "insertText": "ParseExtension(FStringView Filename, int32* OutExtensionStart = nullptr)"
  },
  {
    "label": "FromLocalPath()",
    "kind": "Method",
    "detail": "Function (FPackagePath)",
    "insertText": "FromLocalPath(FStringView InFilename, EPackageSegment& OutPackageSegment)"
  }
]