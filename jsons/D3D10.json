[
  {
    "label": "D3D10_INPUT_CLASSIFICATION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_INPUT_CLASSIFICATION"
  },
  {
    "label": "D3D10_INPUT_ELEMENT_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_INPUT_ELEMENT_DESC"
  },
  {
    "label": "D3D10_FILL_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_FILL_MODE"
  },
  {
    "label": "D3D10_CULL_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_CULL_MODE"
  },
  {
    "label": "D3D10_SO_DECLARATION_ENTRY",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_SO_DECLARATION_ENTRY"
  },
  {
    "label": "D3D10_VIEWPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_VIEWPORT"
  },
  {
    "label": "D3D10_RESOURCE_DIMENSION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_RESOURCE_DIMENSION"
  },
  {
    "label": "D3D10_DSV_DIMENSION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_DSV_DIMENSION"
  },
  {
    "label": "D3D10_RTV_DIMENSION",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_RTV_DIMENSION"
  },
  {
    "label": "D3D10_USAGE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_USAGE"
  },
  {
    "label": "D3D10_BIND_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_BIND_FLAG"
  },
  {
    "label": "D3D10_CPU_ACCESS_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_CPU_ACCESS_FLAG"
  },
  {
    "label": "D3D10_RESOURCE_MISC_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_RESOURCE_MISC_FLAG"
  },
  {
    "label": "D3D10_MAP",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_MAP"
  },
  {
    "label": "D3D10_MAP_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_MAP_FLAG"
  },
  {
    "label": "D3D10_RAISE_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_RAISE_FLAG"
  },
  {
    "label": "D3D10_CLEAR_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_CLEAR_FLAG"
  },
  {
    "label": "D3D10_BOX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_BOX"
  },
  {
    "label": "ID3D10DeviceChildVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10DeviceChildVtbl"
  },
  {
    "label": "D3D10_COMPARISON_FUNC",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_COMPARISON_FUNC"
  },
  {
    "label": "D3D10_DEPTH_WRITE_MASK",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_DEPTH_WRITE_MASK"
  },
  {
    "label": "D3D10_STENCIL_OP",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_STENCIL_OP"
  },
  {
    "label": "D3D10_DEPTH_STENCILOP_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_DEPTH_STENCILOP_DESC"
  },
  {
    "label": "D3D10_DEPTH_STENCIL_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_DEPTH_STENCIL_DESC"
  },
  {
    "label": "ID3D10DepthStencilStateVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10DepthStencilStateVtbl"
  },
  {
    "label": "D3D10_BLEND",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_BLEND"
  },
  {
    "label": "D3D10_BLEND_OP",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_BLEND_OP"
  },
  {
    "label": "D3D10_COLOR_WRITE_ENABLE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_COLOR_WRITE_ENABLE"
  },
  {
    "label": "D3D10_BLEND_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_BLEND_DESC"
  },
  {
    "label": "ID3D10BlendStateVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10BlendStateVtbl"
  },
  {
    "label": "D3D10_RASTERIZER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_RASTERIZER_DESC"
  },
  {
    "label": "ID3D10RasterizerStateVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10RasterizerStateVtbl"
  },
  {
    "label": "D3D10_SUBRESOURCE_DATA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_SUBRESOURCE_DATA"
  },
  {
    "label": "ID3D10ResourceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10ResourceVtbl"
  },
  {
    "label": "D3D10_BUFFER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_BUFFER_DESC"
  },
  {
    "label": "CD3D10_BUFFER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3D10_BUFFER_DESC"
  },
  {
    "label": "ID3D10BufferVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10BufferVtbl"
  },
  {
    "label": "D3D10_TEXTURE1D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEXTURE1D_DESC"
  },
  {
    "label": "CD3D10_TEXTURE1D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3D10_TEXTURE1D_DESC"
  },
  {
    "label": "ID3D10Texture1DVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10Texture1DVtbl"
  },
  {
    "label": "D3D10_TEXTURE2D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEXTURE2D_DESC"
  },
  {
    "label": "CD3D10_TEXTURE2D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3D10_TEXTURE2D_DESC"
  },
  {
    "label": "D3D10_MAPPED_TEXTURE2D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_MAPPED_TEXTURE2D"
  },
  {
    "label": "ID3D10Texture2DVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10Texture2DVtbl"
  },
  {
    "label": "D3D10_TEXTURE3D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEXTURE3D_DESC"
  },
  {
    "label": "CD3D10_TEXTURE3D_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CD3D10_TEXTURE3D_DESC"
  },
  {
    "label": "D3D10_MAPPED_TEXTURE3D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_MAPPED_TEXTURE3D"
  },
  {
    "label": "ID3D10Texture3DVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10Texture3DVtbl"
  },
  {
    "label": "D3D10_TEXTURECUBE_FACE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_TEXTURECUBE_FACE"
  },
  {
    "label": "ID3D10ViewVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10ViewVtbl"
  },
  {
    "label": "D3D10_BUFFER_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_BUFFER_SRV"
  },
  {
    "label": "D3D10_TEX1D_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX1D_SRV"
  },
  {
    "label": "D3D10_TEX1D_ARRAY_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX1D_ARRAY_SRV"
  },
  {
    "label": "D3D10_TEX2D_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2D_SRV"
  },
  {
    "label": "D3D10_TEX2D_ARRAY_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2D_ARRAY_SRV"
  },
  {
    "label": "D3D10_TEX3D_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX3D_SRV"
  },
  {
    "label": "D3D10_TEXCUBE_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEXCUBE_SRV"
  },
  {
    "label": "D3D10_TEX2DMS_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2DMS_SRV"
  },
  {
    "label": "D3D10_TEX2DMS_ARRAY_SRV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2DMS_ARRAY_SRV"
  },
  {
    "label": "D3D10_SHADER_RESOURCE_VIEW_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_SHADER_RESOURCE_VIEW_DESC"
  },
  {
    "label": "ID3D10ShaderResourceViewVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10ShaderResourceViewVtbl"
  },
  {
    "label": "D3D10_BUFFER_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_BUFFER_RTV"
  },
  {
    "label": "D3D10_TEX1D_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX1D_RTV"
  },
  {
    "label": "D3D10_TEX1D_ARRAY_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX1D_ARRAY_RTV"
  },
  {
    "label": "D3D10_TEX2D_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2D_RTV"
  },
  {
    "label": "D3D10_TEX2DMS_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2DMS_RTV"
  },
  {
    "label": "D3D10_TEX2D_ARRAY_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2D_ARRAY_RTV"
  },
  {
    "label": "D3D10_TEX2DMS_ARRAY_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2DMS_ARRAY_RTV"
  },
  {
    "label": "D3D10_TEX3D_RTV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX3D_RTV"
  },
  {
    "label": "D3D10_RENDER_TARGET_VIEW_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_RENDER_TARGET_VIEW_DESC"
  },
  {
    "label": "ID3D10RenderTargetViewVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10RenderTargetViewVtbl"
  },
  {
    "label": "D3D10_TEX1D_DSV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX1D_DSV"
  },
  {
    "label": "D3D10_TEX1D_ARRAY_DSV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX1D_ARRAY_DSV"
  },
  {
    "label": "D3D10_TEX2D_DSV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2D_DSV"
  },
  {
    "label": "D3D10_TEX2D_ARRAY_DSV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2D_ARRAY_DSV"
  },
  {
    "label": "D3D10_TEX2DMS_DSV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2DMS_DSV"
  },
  {
    "label": "D3D10_TEX2DMS_ARRAY_DSV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_TEX2DMS_ARRAY_DSV"
  },
  {
    "label": "D3D10_DEPTH_STENCIL_VIEW_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_DEPTH_STENCIL_VIEW_DESC"
  },
  {
    "label": "ID3D10DepthStencilViewVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10DepthStencilViewVtbl"
  },
  {
    "label": "ID3D10VertexShaderVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10VertexShaderVtbl"
  },
  {
    "label": "ID3D10GeometryShaderVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10GeometryShaderVtbl"
  },
  {
    "label": "ID3D10PixelShaderVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10PixelShaderVtbl"
  },
  {
    "label": "ID3D10InputLayoutVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10InputLayoutVtbl"
  },
  {
    "label": "D3D10_FILTER",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_FILTER"
  },
  {
    "label": "D3D10_FILTER_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_FILTER_TYPE"
  },
  {
    "label": "D3D10_TEXTURE_ADDRESS_MODE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_TEXTURE_ADDRESS_MODE"
  },
  {
    "label": "D3D10_SAMPLER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_SAMPLER_DESC"
  },
  {
    "label": "ID3D10SamplerStateVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10SamplerStateVtbl"
  },
  {
    "label": "D3D10_FORMAT_SUPPORT",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_FORMAT_SUPPORT"
  },
  {
    "label": "ID3D10AsynchronousVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10AsynchronousVtbl"
  },
  {
    "label": "D3D10_ASYNC_GETDATA_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_ASYNC_GETDATA_FLAG"
  },
  {
    "label": "D3D10_QUERY",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_QUERY"
  },
  {
    "label": "D3D10_QUERY_MISC_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_QUERY_MISC_FLAG"
  },
  {
    "label": "D3D10_QUERY_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_QUERY_DESC"
  },
  {
    "label": "ID3D10QueryVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10QueryVtbl"
  },
  {
    "label": "ID3D10PredicateVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10PredicateVtbl"
  },
  {
    "label": "D3D10_QUERY_DATA_TIMESTAMP_DISJOINT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_QUERY_DATA_TIMESTAMP_DISJOINT"
  },
  {
    "label": "D3D10_QUERY_DATA_PIPELINE_STATISTICS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_QUERY_DATA_PIPELINE_STATISTICS"
  },
  {
    "label": "D3D10_QUERY_DATA_SO_STATISTICS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_QUERY_DATA_SO_STATISTICS"
  },
  {
    "label": "D3D10_COUNTER",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_COUNTER"
  },
  {
    "label": "D3D10_COUNTER_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_COUNTER_TYPE"
  },
  {
    "label": "D3D10_COUNTER_DESC",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_COUNTER_DESC"
  },
  {
    "label": "D3D10_COUNTER_INFO",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "D3D10_COUNTER_INFO"
  },
  {
    "label": "ID3D10CounterVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10CounterVtbl"
  },
  {
    "label": "ID3D10DeviceVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10DeviceVtbl"
  },
  {
    "label": "ID3D10MultithreadVtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D10MultithreadVtbl"
  },
  {
    "label": "D3D10_CREATE_DEVICE_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "D3D10_CREATE_DEVICE_FLAG"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __REQUIRED_RPCNDR_H_VERSION__ # define __REQUIRED_RPCNDR_H_VERSION__ 5 0 0 # endif # ifndef __REQUIRED_RPCSAL_H_VERSION__ # define __REQUIRED_RPCSAL_H_VERSION__ 1 0 0 # endif # include \" rpc . h \" # include \" rpcndr . h \" # ifndef __RPCNDR_H_VERSION__ # error this stub requires an updated version of<rpcndr . h> # endif # ifndef COM_NO_WINDOWS_H # include \" windows . h \" # include \" ole2 . h \" # endif # ifndef __d3d10_h__ # define __d3d10_h__ # if)",
    "insertText": "defined(_MSC_VER) && (_MSC_VER >= 1020)"
  },
  {
    "label": "D3D10_16BIT_INDEX_STRIP_CUT_VALUE()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __ID3D10DepthStencilState_FWD_DEFINED__ # define __ID3D10DepthStencilState_FWD_DEFINED__ typedef interface ID3D10DepthStencilState ID3D10DepthStencilState ; # endif # ifndef __ID3D10BlendState_FWD_DEFINED__ # define __ID3D10BlendState_FWD_DEFINED__ typedef interface ID3D10BlendState ID3D10BlendState ; # endif # ifndef __ID3D10RasterizerState_FWD_DEFINED__ # define __ID3D10RasterizerState_FWD_DEFINED__ typedef interface ID3D10RasterizerState ID3D10RasterizerState ; # endif # ifndef __ID3D10Resource_FWD_DEFINED__ # define __ID3D10Resource_FWD_DEFINED__ typedef interface ID3D10Resource ID3D10Resource ; # endif # ifndef __ID3D10Buffer_FWD_DEFINED__ # define __ID3D10Buffer_FWD_DEFINED__ typedef interface ID3D10Buffer ID3D10Buffer ; # endif # ifndef __ID3D10Texture1D_FWD_DEFINED__ # define __ID3D10Texture1D_FWD_DEFINED__ typedef interface ID3D10Texture1D ID3D10Texture1D ; # endif # ifndef __ID3D10Texture2D_FWD_DEFINED__ # define __ID3D10Texture2D_FWD_DEFINED__ typedef interface ID3D10Texture2D ID3D10Texture2D ; # endif # ifndef __ID3D10Texture3D_FWD_DEFINED__ # define __ID3D10Texture3D_FWD_DEFINED__ typedef interface ID3D10Texture3D ID3D10Texture3D ; # endif # ifndef __ID3D10View_FWD_DEFINED__ # define __ID3D10View_FWD_DEFINED__ typedef interface ID3D10View ID3D10View ; # endif # ifndef __ID3D10ShaderResourceView_FWD_DEFINED__ # define __ID3D10ShaderResourceView_FWD_DEFINED__ typedef interface ID3D10ShaderResourceView ID3D10ShaderResourceView ; # endif # ifndef __ID3D10RenderTargetView_FWD_DEFINED__ # define __ID3D10RenderTargetView_FWD_DEFINED__ typedef interface ID3D10RenderTargetView ID3D10RenderTargetView ; # endif # ifndef __ID3D10DepthStencilView_FWD_DEFINED__ # define __ID3D10DepthStencilView_FWD_DEFINED__ typedef interface ID3D10DepthStencilView ID3D10DepthStencilView ; # endif # ifndef __ID3D10VertexShader_FWD_DEFINED__ # define __ID3D10VertexShader_FWD_DEFINED__ typedef interface ID3D10VertexShader ID3D10VertexShader ; # endif # ifndef __ID3D10GeometryShader_FWD_DEFINED__ # define __ID3D10GeometryShader_FWD_DEFINED__ typedef interface ID3D10GeometryShader ID3D10GeometryShader ; # endif # ifndef __ID3D10PixelShader_FWD_DEFINED__ # define __ID3D10PixelShader_FWD_DEFINED__ typedef interface ID3D10PixelShader ID3D10PixelShader ; # endif # ifndef __ID3D10InputLayout_FWD_DEFINED__ # define __ID3D10InputLayout_FWD_DEFINED__ typedef interface ID3D10InputLayout ID3D10InputLayout ; # endif # ifndef __ID3D10SamplerState_FWD_DEFINED__ # define __ID3D10SamplerState_FWD_DEFINED__ typedef interface ID3D10SamplerState ID3D10SamplerState ; # endif # ifndef __ID3D10Asynchronous_FWD_DEFINED__ # define __ID3D10Asynchronous_FWD_DEFINED__ typedef interface ID3D10Asynchronous ID3D10Asynchronous ; # endif # ifndef __ID3D10Query_FWD_DEFINED__ # define __ID3D10Query_FWD_DEFINED__ typedef interface ID3D10Query ID3D10Query ; # endif # ifndef __ID3D10Predicate_FWD_DEFINED__ # define __ID3D10Predicate_FWD_DEFINED__ typedef interface ID3D10Predicate ID3D10Predicate ; # endif # ifndef __ID3D10Counter_FWD_DEFINED__ # define __ID3D10Counter_FWD_DEFINED__ typedef interface ID3D10Counter ID3D10Counter ; # endif # ifndef __ID3D10Device_FWD_DEFINED__ # define __ID3D10Device_FWD_DEFINED__ typedef interface ID3D10Device ID3D10Device ; # endif # ifndef __ID3D10Multithread_FWD_DEFINED__ # define __ID3D10Multithread_FWD_DEFINED__ typedef interface ID3D10Multithread ID3D10Multithread ; # endif # include \" oaidl . h \" # include \" ocidl . h \" # include \" dxgi . h \" # include \" d3dcommon . h \" # ifdef __cplusplus \" C \" { # endif # ifndef _D3D10_CONSTANTS # define _D3D10_CONSTANTS # define)",
    "insertText": "D3D10_16BIT_INDEX_STRIP_CUT_VALUE(0xffff ) #define D3D10_32BIT_INDEX_STRIP_CUT_VALUE ( 0xffffffff ) #define D3D10_8BIT_INDEX_STRIP_CUT_VALUE ( 0xff ) #define D3D10_ARRAY_AXIS_ADDRESS_RANGE_BIT_COUNT ( 9 ) #define D3D10_CLIP_OR_CULL_DISTANCE_COUNT ( 8 ) #define D3D10_CLIP_OR_CULL_DISTANCE_ELEMENT_COUNT ( 2 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT ( 14 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_COMPONENTS ( 4 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_HW_SLOT_COUNT ( 15 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COMPONENTS ( 4 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_COUNT ( 15 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READS_PER_INST ( 1 ) #define D3D10_COMMONSHADER_CONSTANT_BUFFER_REGISTER_READ_PORTS ( 1 ) #define D3D10_COMMONSHADER_FLOWCONTROL_NESTING_LIMIT ( 64 ) #define D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COMPONENTS ( 4 ) #define D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_COUNT ( 1 ) #define D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READS_PER_INST ( 1 ) #define D3D10_COMMONSHADER_IMMEDIATE_CONSTANT_BUFFER_REGISTER_READ_PORTS ( 1 ) #define D3D10_COMMONSHADER_IMMEDIATE_VALUE_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_COMPONENTS ( 1 ) #define D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_COUNT ( 128 ) #define D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_READS_PER_INST ( 1 ) #define D3D10_COMMONSHADER_INPUT_RESOURCE_REGISTER_READ_PORTS ( 1 ) #define D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT ( 128 ) #define D3D10_COMMONSHADER_SAMPLER_REGISTER_COMPONENTS ( 1 ) #define D3D10_COMMONSHADER_SAMPLER_REGISTER_COUNT ( 16 ) #define D3D10_COMMONSHADER_SAMPLER_REGISTER_READS_PER_INST ( 1 ) #define D3D10_COMMONSHADER_SAMPLER_REGISTER_READ_PORTS ( 1 ) #define D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT ( 16 ) #define D3D10_COMMONSHADER_SUBROUTINE_NESTING_LIMIT ( 32 ) #define D3D10_COMMONSHADER_TEMP_REGISTER_COMPONENTS ( 4 ) #define D3D10_COMMONSHADER_TEMP_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_COMMONSHADER_TEMP_REGISTER_COUNT ( 4096 ) #define D3D10_COMMONSHADER_TEMP_REGISTER_READS_PER_INST ( 3 ) #define D3D10_COMMONSHADER_TEMP_REGISTER_READ_PORTS ( 3 ) #define D3D10_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MAX ( 10 ) #define D3D10_COMMONSHADER_TEXCOORD_RANGE_REDUCTION_MIN ( -10 ) #define D3D10_COMMONSHADER_TEXEL_OFFSET_MAX_NEGATIVE ( -8 ) #define D3D10_COMMONSHADER_TEXEL_OFFSET_MAX_POSITIVE ( 7 ) #define D3D10_DEFAULT_BLEND_FACTOR_ALPHA ( 1.0f ) #define D3D10_DEFAULT_BLEND_FACTOR_BLUE ( 1.0f ) #define D3D10_DEFAULT_BLEND_FACTOR_GREEN ( 1.0f ) #define D3D10_DEFAULT_BLEND_FACTOR_RED ( 1.0f ) #define D3D10_DEFAULT_BORDER_COLOR_COMPONENT ( 0.0f ) #define D3D10_DEFAULT_DEPTH_BIAS ( 0 ) #define D3D10_DEFAULT_DEPTH_BIAS_CLAMP ( 0.0f ) #define D3D10_DEFAULT_MAX_ANISOTROPY ( 16.0f ) #define D3D10_DEFAULT_MIP_LOD_BIAS ( 0.0f ) #define D3D10_DEFAULT_RENDER_TARGET_ARRAY_INDEX ( 0 ) #define D3D10_DEFAULT_SAMPLE_MASK ( 0xffffffff ) #define D3D10_DEFAULT_SCISSOR_ENDX ( 0 ) #define D3D10_DEFAULT_SCISSOR_ENDY ( 0 ) #define D3D10_DEFAULT_SCISSOR_STARTX ( 0 ) #define D3D10_DEFAULT_SCISSOR_STARTY ( 0 ) #define D3D10_DEFAULT_SLOPE_SCALED_DEPTH_BIAS ( 0.0f ) #define D3D10_DEFAULT_STENCIL_READ_MASK ( 0xff ) #define D3D10_DEFAULT_STENCIL_REFERENCE ( 0 ) #define D3D10_DEFAULT_STENCIL_WRITE_MASK ( 0xff ) #define D3D10_DEFAULT_VIEWPORT_AND_SCISSORRECT_INDEX ( 0 ) #define D3D10_DEFAULT_VIEWPORT_HEIGHT ( 0 ) #define D3D10_DEFAULT_VIEWPORT_MAX_DEPTH ( 0.0f ) #define D3D10_DEFAULT_VIEWPORT_MIN_DEPTH ( 0.0f ) #define D3D10_DEFAULT_VIEWPORT_TOPLEFTX ( 0 ) #define D3D10_DEFAULT_VIEWPORT_TOPLEFTY ( 0 ) #define D3D10_DEFAULT_VIEWPORT_WIDTH ( 0 ) #define D3D10_FLOAT16_FUSED_TOLERANCE_IN_ULP ( 0.6 ) #define D3D10_FLOAT32_MAX ( 3.402823466e+38f ) #define D3D10_FLOAT32_TO_INTEGER_TOLERANCE_IN_ULP ( 0.6f ) #define D3D10_FLOAT_TO_SRGB_EXPONENT_DENOMINATOR ( 2.4f ) #define D3D10_FLOAT_TO_SRGB_EXPONENT_NUMERATOR ( 1.0f ) #define D3D10_FLOAT_TO_SRGB_OFFSET ( 0.055f ) #define D3D10_FLOAT_TO_SRGB_SCALE_1 ( 12.92f ) #define D3D10_FLOAT_TO_SRGB_SCALE_2 ( 1.055f ) #define D3D10_FLOAT_TO_SRGB_THRESHOLD ( 0.0031308f ) #define D3D10_FTOI_INSTRUCTION_MAX_INPUT ( 2147483647.999f ) #define D3D10_FTOI_INSTRUCTION_MIN_INPUT ( -2147483648.999f ) #define D3D10_FTOU_INSTRUCTION_MAX_INPUT ( 4294967295.999f ) #define D3D10_FTOU_INSTRUCTION_MIN_INPUT ( 0.0f ) #define D3D10_GS_INPUT_PRIM_CONST_REGISTER_COMPONENTS ( 1 ) #define D3D10_GS_INPUT_PRIM_CONST_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_GS_INPUT_PRIM_CONST_REGISTER_COUNT ( 1 ) #define D3D10_GS_INPUT_PRIM_CONST_REGISTER_READS_PER_INST ( 2 ) #define D3D10_GS_INPUT_PRIM_CONST_REGISTER_READ_PORTS ( 1 ) #define D3D10_GS_INPUT_REGISTER_COMPONENTS ( 4 ) #define D3D10_GS_INPUT_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_GS_INPUT_REGISTER_COUNT ( 16 ) #define D3D10_GS_INPUT_REGISTER_READS_PER_INST ( 2 ) #define D3D10_GS_INPUT_REGISTER_READ_PORTS ( 1 ) #define D3D10_GS_INPUT_REGISTER_VERTICES ( 6 ) #define D3D10_GS_OUTPUT_ELEMENTS ( 32 ) #define D3D10_GS_OUTPUT_REGISTER_COMPONENTS ( 4 ) #define D3D10_GS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_GS_OUTPUT_REGISTER_COUNT ( 32 ) #define D3D10_IA_DEFAULT_INDEX_BUFFER_OFFSET_IN_BYTES ( 0 ) #define D3D10_IA_DEFAULT_PRIMITIVE_TOPOLOGY ( 0 ) #define D3D10_IA_DEFAULT_VERTEX_BUFFER_OFFSET_IN_BYTES ( 0 ) #define D3D10_IA_INDEX_INPUT_RESOURCE_SLOT_COUNT ( 1 ) #define D3D10_IA_INSTANCE_ID_BIT_COUNT ( 32 ) #define D3D10_IA_INTEGER_ARITHMETIC_BIT_COUNT ( 32 ) #define D3D10_IA_PRIMITIVE_ID_BIT_COUNT ( 32 ) #define D3D10_IA_VERTEX_ID_BIT_COUNT ( 32 ) #define D3D10_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT ( 16 ) #define D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENTS_COMPONENTS ( 64 ) #define D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT ( 16 ) #define D3D10_INTEGER_DIVIDE_BY_ZERO_QUOTIENT ( 0xffffffff ) #define D3D10_INTEGER_DIVIDE_BY_ZERO_REMAINDER ( 0xffffffff ) #define D3D10_LINEAR_GAMMA ( 1.0f ) #define D3D10_MAX_BORDER_COLOR_COMPONENT ( 1.0f ) #define D3D10_MAX_DEPTH ( 1.0f ) #define D3D10_MAX_MAXANISOTROPY ( 16 ) #define D3D10_MAX_MULTISAMPLE_SAMPLE_COUNT ( 32 ) #define D3D10_MAX_POSITION_VALUE ( 3.402823466e+34f ) #define D3D10_MAX_TEXTURE_DIMENSION_2_TO_EXP ( 17 ) #define D3D10_MIN_BORDER_COLOR_COMPONENT ( 0.0f ) #define D3D10_MIN_DEPTH ( 0.0f ) #define D3D10_MIN_MAXANISOTROPY ( 0 ) #define D3D10_MIP_LOD_BIAS_MAX ( 15.99f ) #define D3D10_MIP_LOD_BIAS_MIN ( -16.0f ) #define D3D10_MIP_LOD_FRACTIONAL_BIT_COUNT ( 6 ) #define D3D10_MIP_LOD_RANGE_BIT_COUNT ( 8 ) #define D3D10_MULTISAMPLE_ANTIALIAS_LINE_WIDTH ( 1.4f ) #define D3D10_NONSAMPLE_FETCH_OUT_OF_RANGE_ACCESS_RESULT ( 0 ) #define D3D10_PIXEL_ADDRESS_RANGE_BIT_COUNT ( 13 ) #define D3D10_PRE_SCISSOR_PIXEL_ADDRESS_RANGE_BIT_COUNT ( 15 ) #define D3D10_PS_FRONTFACING_DEFAULT_VALUE ( 0xffffffff ) #define D3D10_PS_FRONTFACING_FALSE_VALUE ( 0 ) #define D3D10_PS_FRONTFACING_TRUE_VALUE ( 0xffffffff ) #define D3D10_PS_INPUT_REGISTER_COMPONENTS ( 4 ) #define D3D10_PS_INPUT_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_PS_INPUT_REGISTER_COUNT ( 32 ) #define D3D10_PS_INPUT_REGISTER_READS_PER_INST ( 2 ) #define D3D10_PS_INPUT_REGISTER_READ_PORTS ( 1 ) #define D3D10_PS_LEGACY_PIXEL_CENTER_FRACTIONAL_COMPONENT ( 0.0f ) #define D3D10_PS_OUTPUT_DEPTH_REGISTER_COMPONENTS ( 1 ) #define D3D10_PS_OUTPUT_DEPTH_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_PS_OUTPUT_DEPTH_REGISTER_COUNT ( 1 ) #define D3D10_PS_OUTPUT_REGISTER_COMPONENTS ( 4 ) #define D3D10_PS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_PS_OUTPUT_REGISTER_COUNT ( 8 ) #define D3D10_PS_PIXEL_CENTER_FRACTIONAL_COMPONENT ( 0.5f ) #define D3D10_REQ_BLEND_OBJECT_COUNT_PER_CONTEXT ( 4096 ) #define D3D10_REQ_BUFFER_RESOURCE_TEXEL_COUNT_2_TO_EXP ( 27 ) #define D3D10_REQ_CONSTANT_BUFFER_ELEMENT_COUNT ( 4096 ) #define D3D10_REQ_DEPTH_STENCIL_OBJECT_COUNT_PER_CONTEXT ( 4096 ) #define D3D10_REQ_DRAWINDEXED_INDEX_COUNT_2_TO_EXP ( 32 ) #define D3D10_REQ_DRAW_VERTEX_COUNT_2_TO_EXP ( 32 ) #define D3D10_REQ_FILTERING_HW_ADDRESSABLE_RESOURCE_DIMENSION ( 8192 ) #define D3D10_REQ_GS_INVOCATION_32BIT_OUTPUT_COMPONENT_LIMIT ( 1024 ) #define D3D10_REQ_IMMEDIATE_CONSTANT_BUFFER_ELEMENT_COUNT ( 4096 ) #define D3D10_REQ_MAXANISOTROPY ( 16 ) #define D3D10_REQ_MIP_LEVELS ( 14 ) #define D3D10_REQ_MULTI_ELEMENT_STRUCTURE_SIZE_IN_BYTES ( 2048 ) #define D3D10_REQ_RASTERIZER_OBJECT_COUNT_PER_CONTEXT ( 4096 ) #define D3D10_REQ_RENDER_TO_BUFFER_WINDOW_WIDTH ( 8192 ) #define D3D10_REQ_RESOURCE_SIZE_IN_MEGABYTES ( 128 ) #define D3D10_REQ_RESOURCE_VIEW_COUNT_PER_CONTEXT_2_TO_EXP ( 20 ) #define D3D10_REQ_SAMPLER_OBJECT_COUNT_PER_CONTEXT ( 4096 ) #define D3D10_REQ_TEXTURE1D_ARRAY_AXIS_DIMENSION ( 512 ) #define D3D10_REQ_TEXTURE1D_U_DIMENSION ( 8192 ) #define D3D10_REQ_TEXTURE2D_ARRAY_AXIS_DIMENSION ( 512 ) #define D3D10_REQ_TEXTURE2D_U_OR_V_DIMENSION ( 8192 ) #define D3D10_REQ_TEXTURE3D_U_V_OR_W_DIMENSION ( 2048 ) #define D3D10_REQ_TEXTURECUBE_DIMENSION ( 8192 ) #define D3D10_RESINFO_INSTRUCTION_MISSING_COMPONENT_RETVAL ( 0 ) #define D3D10_SHADER_MAJOR_VERSION ( 4 ) #define D3D10_SHADER_MINOR_VERSION ( 0 ) #define D3D10_SHIFT_INSTRUCTION_PAD_VALUE ( 0 ) #define D3D10_SHIFT_INSTRUCTION_SHIFT_VALUE_BIT_COUNT ( 5 ) #define D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ( 8 ) #define D3D10_SO_BUFFER_MAX_STRIDE_IN_BYTES ( 2048 ) #define D3D10_SO_BUFFER_MAX_WRITE_WINDOW_IN_BYTES ( 256 ) #define D3D10_SO_BUFFER_SLOT_COUNT ( 4 ) #define D3D10_SO_DDI_REGISTER_INDEX_DENOTING_GAP ( 0xffffffff ) #define D3D10_SO_MULTIPLE_BUFFER_ELEMENTS_PER_BUFFER ( 1 ) #define D3D10_SO_SINGLE_BUFFER_COMPONENT_LIMIT ( 64 ) #define D3D10_SRGB_GAMMA ( 2.2f ) #define D3D10_SRGB_TO_FLOAT_DENOMINATOR_1 ( 12.92f ) #define D3D10_SRGB_TO_FLOAT_DENOMINATOR_2 ( 1.055f ) #define D3D10_SRGB_TO_FLOAT_EXPONENT ( 2.4f ) #define D3D10_SRGB_TO_FLOAT_OFFSET ( 0.055f ) #define D3D10_SRGB_TO_FLOAT_THRESHOLD ( 0.04045f ) #define D3D10_SRGB_TO_FLOAT_TOLERANCE_IN_ULP ( 0.5f ) #define D3D10_STANDARD_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_STANDARD_COMPONENT_BIT_COUNT_DOUBLED ( 64 ) #define D3D10_STANDARD_MAXIMUM_ELEMENT_ALIGNMENT_BYTE_MULTIPLE ( 4 ) #define D3D10_STANDARD_PIXEL_COMPONENT_COUNT ( 128 ) #define D3D10_STANDARD_PIXEL_ELEMENT_COUNT ( 32 ) #define D3D10_STANDARD_VECTOR_SIZE ( 4 ) #define D3D10_STANDARD_VERTEX_ELEMENT_COUNT ( 16 ) #define D3D10_STANDARD_VERTEX_TOTAL_COMPONENT_COUNT ( 64 ) #define D3D10_SUBPIXEL_FRACTIONAL_BIT_COUNT ( 8 ) #define D3D10_SUBTEXEL_FRACTIONAL_BIT_COUNT ( 6 ) #define D3D10_TEXEL_ADDRESS_RANGE_BIT_COUNT ( 18 ) #define D3D10_UNBOUND_MEMORY_ACCESS_RESULT ( 0 ) #define D3D10_VIEWPORT_AND_SCISSORRECT_MAX_INDEX ( 15 ) #define D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE ( 16 ) #define D3D10_VIEWPORT_BOUNDS_MAX ( 16383 ) #define D3D10_VIEWPORT_BOUNDS_MIN ( -16384 ) #define D3D10_VS_INPUT_REGISTER_COMPONENTS ( 4 ) #define D3D10_VS_INPUT_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_VS_INPUT_REGISTER_COUNT ( 16 ) #define D3D10_VS_INPUT_REGISTER_READS_PER_INST ( 2 ) #define D3D10_VS_INPUT_REGISTER_READ_PORTS ( 1 ) #define D3D10_VS_OUTPUT_REGISTER_COMPONENTS ( 4 ) #define D3D10_VS_OUTPUT_REGISTER_COMPONENT_BIT_COUNT ( 32 ) #define D3D10_VS_OUTPUT_REGISTER_COUNT ( 16 ) #define D3D10_WHQL_CONTEXT_COUNT_FOR_RESOURCE_LIMIT ( 10 ) #define D3D10_WHQL_DRAWINDEXED_INDEX_COUNT_2_TO_EXP ( 25 ) #define D3D10_WHQL_DRAW_VERTEX_COUNT_2_TO_EXP ( 25 ) #define D3D_MAJOR_VERSION ( 10 ) #define D3D_MINOR_VERSION ( 0 ) #define D3D_SPEC_DATE_DAY ( 8 ) #define D3D_SPEC_DATE_MONTH ( 8 ) #define D3D_SPEC_DATE_YEAR ( 2006 ) #define D3D_SPEC_VERSION ( 1.050005 ) #endif #include <winapifamily.h> #pragma region Desktop Family #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP) #if !defined( __d3d10_1_h__ ) && !(D3D10_HEADER_MINOR_VERSION >= 1) #define D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT #define D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT D3D10_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT #endif #define _FACD3D10 ( 0x879 ) #define _FACD3D10DEBUG ( ( _FACD3D10 + 1 ) ) #define MAKE_D3D10_HRESULT( code ) MAKE_HRESULT( 1, _FACD3D10, code ) #define MAKE_D3D10_STATUS( code ) MAKE_HRESULT( 0, _FACD3D10, code)"
  },
  {
    "label": "D3D10_APPEND_ALIGNED_ELEMENT()",
    "kind": "Method",
    "detail": "Function (D3D10_INPUT_PER_VERTEX_DATA = 0,D3D10_INPUT_PER_INSTANCE_DATA = 1 } D3D10_INPUT_CLASSIFICATION ; # define)",
    "insertText": "D3D10_APPEND_ALIGNED_ELEMENT(0xffffffff)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (LPCSTR SemanticName ; UINT SemanticIndex ; DXGI_FORMAT Format ; UINT InputSlot ; UINT AlignedByteOffset ; D3D10_INPUT_CLASSIFICATION InputSlotClass ; UINT InstanceDataStepRate ; } D3D10_INPUT_ELEMENT_DESC ; typedef enum D3D10_FILL_MODE { D3D10_FILL_WIREFRAME = 2,D3D10_FILL_SOLID = 3 } D3D10_FILL_MODE ; typedef D3D_PRIMITIVE_TOPOLOGY D3D10_PRIMITIVE_TOPOLOGY ; typedef D3D_PRIMITIVE D3D10_PRIMITIVE ; typedef enum D3D10_CULL_MODE { D3D10_CULL_NONE = 1,D3D10_CULL_FRONT = 2,D3D10_CULL_BACK = 3 } D3D10_CULL_MODE ; typedef struct D3D10_SO_DECLARATION_ENTRY { LPCSTR SemanticName ; UINT SemanticIndex ; BYTE StartComponent ; BYTE ComponentCount ; BYTE OutputSlot ; } D3D10_SO_DECLARATION_ENTRY ; typedef struct D3D10_VIEWPORT { INT TopLeftX ; INT TopLeftY ; UINT Width ; UINT Height ; FLOAT MinDepth ; FLOAT MaxDepth ; } D3D10_VIEWPORT ; typedef enum D3D10_RESOURCE_DIMENSION { D3D10_RESOURCE_DIMENSION_UNKNOWN = 0,D3D10_RESOURCE_DIMENSION_BUFFER = 1,D3D10_RESOURCE_DIMENSION_TEXTURE1D = 2,D3D10_RESOURCE_DIMENSION_TEXTURE2D = 3,D3D10_RESOURCE_DIMENSION_TEXTURE3D = 4 } D3D10_RESOURCE_DIMENSION ; typedef D3D_SRV_DIMENSION D3D10_SRV_DIMENSION ; typedef enum D3D10_DSV_DIMENSION { D3D10_DSV_DIMENSION_UNKNOWN = 0,D3D10_DSV_DIMENSION_TEXTURE1D = 1,D3D10_DSV_DIMENSION_TEXTURE1DARRAY = 2,D3D10_DSV_DIMENSION_TEXTURE2D = 3,D3D10_DSV_DIMENSION_TEXTURE2DARRAY = 4,D3D10_DSV_DIMENSION_TEXTURE2DMS = 5,D3D10_DSV_DIMENSION_TEXTURE2DMSARRAY = 6 } D3D10_DSV_DIMENSION ; typedef enum D3D10_RTV_DIMENSION { D3D10_RTV_DIMENSION_UNKNOWN = 0,D3D10_RTV_DIMENSION_BUFFER = 1,D3D10_RTV_DIMENSION_TEXTURE1D = 2,D3D10_RTV_DIMENSION_TEXTURE1DARRAY = 3,D3D10_RTV_DIMENSION_TEXTURE2D = 4,D3D10_RTV_DIMENSION_TEXTURE2DARRAY = 5,D3D10_RTV_DIMENSION_TEXTURE2DMS = 6,D3D10_RTV_DIMENSION_TEXTURE2DMSARRAY = 7,D3D10_RTV_DIMENSION_TEXTURE3D = 8 } D3D10_RTV_DIMENSION ; typedef enum D3D10_USAGE { D3D10_USAGE_DEFAULT = 0,D3D10_USAGE_IMMUTABLE = 1,D3D10_USAGE_DYNAMIC = 2,D3D10_USAGE_STAGING = 3 } D3D10_USAGE ; typedef enum D3D10_BIND_FLAG { D3D10_BIND_VERTEX_BUFFER = 0 x1L,D3D10_BIND_INDEX_BUFFER = 0 x2L,D3D10_BIND_CONSTANT_BUFFER = 0 x4L,D3D10_BIND_SHADER_RESOURCE = 0 x8L,D3D10_BIND_STREAM_OUTPUT = 0 x10L,D3D10_BIND_RENDER_TARGET = 0 x20L,D3D10_BIND_DEPTH_STENCIL = 0 x40L } D3D10_BIND_FLAG ; typedef enum D3D10_CPU_ACCESS_FLAG { D3D10_CPU_ACCESS_WRITE = 0 x10000L,D3D10_CPU_ACCESS_READ = 0 x20000L } D3D10_CPU_ACCESS_FLAG ; typedef enum D3D10_RESOURCE_MISC_FLAG { D3D10_RESOURCE_MISC_GENERATE_MIPS = 0 x1L,D3D10_RESOURCE_MISC_SHARED = 0 x2L,D3D10_RESOURCE_MISC_TEXTURECUBE = 0 x4L,D3D10_RESOURCE_MISC_SHARED_KEYEDMUTEX = 0 x10L,D3D10_RESOURCE_MISC_GDI_COMPATIBLE = 0 x20L } D3D10_RESOURCE_MISC_FLAG ; typedef enum D3D10_MAP { D3D10_MAP_READ = 1,D3D10_MAP_WRITE = 2,D3D10_MAP_READ_WRITE = 3,D3D10_MAP_WRITE_DISCARD = 4,D3D10_MAP_WRITE_NO_OVERWRITE = 5 } D3D10_MAP ; typedef enum D3D10_MAP_FLAG { D3D10_MAP_FLAG_DO_NOT_WAIT = 0 x100000L } D3D10_MAP_FLAG ; typedef enum D3D10_RAISE_FLAG { D3D10_RAISE_FLAG_DRIVER_INTERNAL_ERROR = 0 x1L } D3D10_RAISE_FLAG ; typedef enum D3D10_CLEAR_FLAG { D3D10_CLEAR_DEPTH = 0 x1L,D3D10_CLEAR_STENCIL = 0 x2L } D3D10_CLEAR_FLAG ; typedef RECT D3D10_RECT ; typedef struct D3D10_BOX { UINT left ; UINT top ; UINT front ; UINT right ; UINT bottom ; UINT back ; } D3D10_BOX ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0000_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0000_v0_0_s_ifspec ; # ifndef __ID3D10DeviceChild_INTERFACE_DEFINED__ # define __ID3D10DeviceChild_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10DeviceChild ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C00-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDevice()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDevice(_Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "GetPrivateData()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetPrivateData(_In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "SetPrivateData()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetPrivateData(_In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "SetPrivateDataInterface()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetPrivateDataInterface(_In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10DeviceChildVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10DeviceChild * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10DeviceChild * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10DeviceChild * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10DeviceChild * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10DeviceChild * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10DeviceChild * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10DeviceChild * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "ID3D10DeviceChild_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10DeviceChildVtbl ; interface ID3D10DeviceChild { CONST_VTBL struct ID3D10DeviceChildVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10DeviceChild_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10DeviceChild_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10DeviceChild_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10DeviceChild_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10DeviceChild_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10DeviceChild_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10DeviceChild_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_COMPARISON_NEVER = 1,D3D10_COMPARISON_LESS = 2,D3D10_COMPARISON_EQUAL = 3,D3D10_COMPARISON_LESS_EQUAL = 4,D3D10_COMPARISON_GREATER = 5,D3D10_COMPARISON_NOT_EQUAL = 6,D3D10_COMPARISON_GREATER_EQUAL = 7,D3D10_COMPARISON_ALWAYS = 8 } D3D10_COMPARISON_FUNC ; typedef enum D3D10_DEPTH_WRITE_MASK { D3D10_DEPTH_WRITE_MASK_ZERO = 0,D3D10_DEPTH_WRITE_MASK_ALL = 1 } D3D10_DEPTH_WRITE_MASK ; typedef enum D3D10_STENCIL_OP { D3D10_STENCIL_OP_KEEP = 1,D3D10_STENCIL_OP_ZERO = 2,D3D10_STENCIL_OP_REPLACE = 3,D3D10_STENCIL_OP_INCR_SAT = 4,D3D10_STENCIL_OP_DECR_SAT = 5,D3D10_STENCIL_OP_INVERT = 6,D3D10_STENCIL_OP_INCR = 7,D3D10_STENCIL_OP_DECR = 8 } D3D10_STENCIL_OP ; typedef struct D3D10_DEPTH_STENCILOP_DESC { D3D10_STENCIL_OP StencilFailOp ; D3D10_STENCIL_OP StencilDepthFailOp ; D3D10_STENCIL_OP StencilPassOp ; D3D10_COMPARISON_FUNC StencilFunc ; } D3D10_DEPTH_STENCILOP_DESC ; typedef struct D3D10_DEPTH_STENCIL_DESC { BOOL DepthEnable ; D3D10_DEPTH_WRITE_MASK DepthWriteMask ; D3D10_COMPARISON_FUNC DepthFunc ; BOOL StencilEnable ; UINT8 StencilReadMask ; UINT8 StencilWriteMask ; D3D10_DEPTH_STENCILOP_DESC FrontFace ; D3D10_DEPTH_STENCILOP_DESC BackFace ; } D3D10_DEPTH_STENCIL_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0001_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0001_v0_0_s_ifspec ; # ifndef __ID3D10DepthStencilState_INTERFACE_DEFINED__ # define __ID3D10DepthStencilState_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10DepthStencilState ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"2B4B1CC8-A4AD-41f8-8322-CA86FC3EC675\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_DEPTH_STENCIL_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10DepthStencilStateVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10DepthStencilState * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10DepthStencilState * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10DepthStencilState * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10DepthStencilState * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10DepthStencilState * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10DepthStencilState * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10DepthStencilState * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10DepthStencilState * This, _Out_ D3D10_DEPTH_STENCIL_DESC *pDesc)"
  },
  {
    "label": "ID3D10DepthStencilState_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10DepthStencilStateVtbl ; interface ID3D10DepthStencilState { CONST_VTBL struct ID3D10DepthStencilStateVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10DepthStencilState_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10DepthStencilState_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10DepthStencilState_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10DepthStencilState_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10DepthStencilState_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10DepthStencilState_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10DepthStencilState_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10DepthStencilState_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "D3D10_COLOR_WRITE_ENABLE_ALL()",
    "kind": "Method",
    "detail": "Function (D3D10_BLEND_ZERO = 1,D3D10_BLEND_ONE = 2,D3D10_BLEND_SRC_COLOR = 3,D3D10_BLEND_INV_SRC_COLOR = 4,D3D10_BLEND_SRC_ALPHA = 5,D3D10_BLEND_INV_SRC_ALPHA = 6,D3D10_BLEND_DEST_ALPHA = 7,D3D10_BLEND_INV_DEST_ALPHA = 8,D3D10_BLEND_DEST_COLOR = 9,D3D10_BLEND_INV_DEST_COLOR = 1 0,D3D10_BLEND_SRC_ALPHA_SAT = 1 1,D3D10_BLEND_BLEND_FACTOR = 1 4,D3D10_BLEND_INV_BLEND_FACTOR = 1 5,D3D10_BLEND_SRC1_COLOR = 1 6,D3D10_BLEND_INV_SRC1_COLOR = 1 7,D3D10_BLEND_SRC1_ALPHA = 1 8,D3D10_BLEND_INV_SRC1_ALPHA = 1 9 } D3D10_BLEND ; typedef enum D3D10_BLEND_OP { D3D10_BLEND_OP_ADD = 1,D3D10_BLEND_OP_SUBTRACT = 2,D3D10_BLEND_OP_REV_SUBTRACT = 3,D3D10_BLEND_OP_MIN = 4,D3D10_BLEND_OP_MAX = 5 } D3D10_BLEND_OP ; typedef enum D3D10_COLOR_WRITE_ENABLE { D3D10_COLOR_WRITE_ENABLE_RED = 1,D3D10_COLOR_WRITE_ENABLE_GREEN = 2,D3D10_COLOR_WRITE_ENABLE_BLUE = 4,D3D10_COLOR_WRITE_ENABLE_ALPHA = 8,)",
    "insertText": "D3D10_COLOR_WRITE_ENABLE_ALL(( ( D3D10_COLOR_WRITE_ENABLE_RED | D3D10_COLOR_WRITE_ENABLE_GREEN ) | D3D10_COLOR_WRITE_ENABLE_BLUE ) | D3D10_COLOR_WRITE_ENABLE_ALPHA)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef struct D3D10_BLEND_DESC { BOOL AlphaToCoverageEnable ; BOOL BlendEnable [ 8 ] ; D3D10_BLEND SrcBlend ; D3D10_BLEND DestBlend ; D3D10_BLEND_OP BlendOp ; D3D10_BLEND SrcBlendAlpha ; D3D10_BLEND DestBlendAlpha ; D3D10_BLEND_OP BlendOpAlpha ; UINT8 RenderTargetWriteMask [ 8 ] ; } D3D10_BLEND_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0002_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0002_v0_0_s_ifspec ; # ifndef __ID3D10BlendState_INTERFACE_DEFINED__ # define __ID3D10BlendState_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10BlendState ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"EDAD8D19-8A35-4d6d-8566-2EA276CDE161\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_BLEND_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10BlendStateVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10BlendState * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10BlendState * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10BlendState * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10BlendState * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10BlendState * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10BlendState * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10BlendState * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10BlendState * This, _Out_ D3D10_BLEND_DESC *pDesc)"
  },
  {
    "label": "ID3D10BlendState_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10BlendStateVtbl ; interface ID3D10BlendState { CONST_VTBL struct ID3D10BlendStateVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10BlendState_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10BlendState_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10BlendState_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10BlendState_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10BlendState_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10BlendState_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10BlendState_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10BlendState_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_FILL_MODE FillMode ; D3D10_CULL_MODE CullMode ; BOOL FrontCounterClockwise ; INT DepthBias ; FLOAT DepthBiasClamp ; FLOAT SlopeScaledDepthBias ; BOOL DepthClipEnable ; BOOL ScissorEnable ; BOOL MultisampleEnable ; BOOL AntialiasedLineEnable ; } D3D10_RASTERIZER_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0003_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0003_v0_0_s_ifspec ; # ifndef __ID3D10RasterizerState_INTERFACE_DEFINED__ # define __ID3D10RasterizerState_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10RasterizerState ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"A2A07292-89AF-4345-BE2E-C53D9FBB6E9F\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_RASTERIZER_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10RasterizerStateVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10RasterizerState * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10RasterizerState * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10RasterizerState * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10RasterizerState * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10RasterizerState * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10RasterizerState * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10RasterizerState * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10RasterizerState * This, _Out_ D3D10_RASTERIZER_DESC *pDesc)"
  },
  {
    "label": "ID3D10RasterizerState_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10RasterizerStateVtbl ; interface ID3D10RasterizerState { CONST_VTBL struct ID3D10RasterizerStateVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10RasterizerState_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10RasterizerState_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10RasterizerState_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10RasterizerState_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10RasterizerState_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10RasterizerState_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10RasterizerState_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10RasterizerState_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #endif #endif #endif #if !defined( D3D10_NO_HELPERS ) && defined( __cplusplus ) inline UINT D3D10CalcSubresource( UINT MipSlice, UINT ArraySlice, UINT MipLevels)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetType(_Out_ D3D10_RESOURCE_DIMENSION *rType)"
  },
  {
    "label": "SetEvictionPriority()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetEvictionPriority(_In_ UINT EvictionPriority)"
  },
  {
    "label": "GetEvictionPriority()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetEvictionPriority(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10ResourceVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Resource * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Resource * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Resource * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Resource * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Resource * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Resource * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Resource * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetType )( ID3D10Resource * This, _Out_ D3D10_RESOURCE_DIMENSION *rType)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetEvictionPriority )( ID3D10Resource * This, _In_ UINT EvictionPriority)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetEvictionPriority )( ID3D10Resource * This)"
  },
  {
    "label": "ID3D10Resource_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10ResourceVtbl ; interface ID3D10Resource { CONST_VTBL struct ID3D10ResourceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Resource_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Resource_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Resource_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Resource_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Resource_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Resource_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Resource_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Resource_GetType(This,rType) \\ ( (This)->lpVtbl -> GetType(This,rType) ) #define ID3D10Resource_SetEvictionPriority(This,EvictionPriority) \\ ( (This)->lpVtbl -> SetEvictionPriority(This,EvictionPriority) ) #define ID3D10Resource_GetEvictionPriority(This) \\ ( (This)->lpVtbl -> GetEvictionPriority(This))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (UINT ByteWidth ; D3D10_USAGE Usage ; UINT BindFlags ; UINT CPUAccessFlags ; UINT MiscFlags ; } D3D10_BUFFER_DESC ; # if !)",
    "insertText": "defined(D3D10_NO_HELPERS ) && defined( __cplusplus)"
  },
  {
    "label": "CD3D10_BUFFER_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_BUFFER_DESC()"
  },
  {
    "label": "CD3D10_BUFFER_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_BUFFER_DESC(const D3D10_BUFFER_DESC& o ) : D3D10_BUFFER_DESC( o)"
  },
  {
    "label": "CD3D10_BUFFER_DESC()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3D10_BUFFER_DESC(UINT byteWidth, UINT bindFlags, D3D10_USAGE usage = D3D10_USAGE_DEFAULT, UINT cpuaccessFlags = 0, UINT miscFlags = 0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} } ; # endif RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0005_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0005_v0_0_s_ifspec ; # ifndef __ID3D10Buffer_INTERFACE_DEFINED__ # define __ID3D10Buffer_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Buffer ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C02-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "Map(_In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ void **ppData)"
  },
  {
    "label": "Unmap()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "Unmap(void)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_BUFFER_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10BufferVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Buffer * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Buffer * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Buffer * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Buffer * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Buffer * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Buffer * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Buffer * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetType )( ID3D10Buffer * This, _Out_ D3D10_RESOURCE_DIMENSION *rType)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetEvictionPriority )( ID3D10Buffer * This, _In_ UINT EvictionPriority)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetEvictionPriority )( ID3D10Buffer * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Map )( ID3D10Buffer * This, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ void **ppData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Unmap )( ID3D10Buffer * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Buffer * This, _Out_ D3D10_BUFFER_DESC *pDesc)"
  },
  {
    "label": "ID3D10Buffer_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10BufferVtbl ; interface ID3D10Buffer { CONST_VTBL struct ID3D10BufferVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Buffer_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Buffer_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Buffer_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Buffer_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Buffer_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Buffer_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Buffer_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Buffer_GetType(This,rType) \\ ( (This)->lpVtbl -> GetType(This,rType) ) #define ID3D10Buffer_SetEvictionPriority(This,EvictionPriority) \\ ( (This)->lpVtbl -> SetEvictionPriority(This,EvictionPriority) ) #define ID3D10Buffer_GetEvictionPriority(This) \\ ( (This)->lpVtbl -> GetEvictionPriority(This) ) #define ID3D10Buffer_Map(This,MapType,MapFlags,ppData) \\ ( (This)->lpVtbl -> Map(This,MapType,MapFlags,ppData) ) #define ID3D10Buffer_Unmap(This) \\ ( (This)->lpVtbl -> Unmap(This) ) #define ID3D10Buffer_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "CD3D10_TEXTURE1D_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_TEXTURE1D_DESC()"
  },
  {
    "label": "CD3D10_TEXTURE1D_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_TEXTURE1D_DESC(const D3D10_TEXTURE1D_DESC& o ) : D3D10_TEXTURE1D_DESC( o)"
  },
  {
    "label": "CD3D10_TEXTURE1D_DESC()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3D10_TEXTURE1D_DESC(DXGI_FORMAT format, UINT width, UINT arraySize = 1, UINT mipLevels = 0, UINT bindFlags = D3D10_BIND_SHADER_RESOURCE, D3D10_USAGE usage = D3D10_USAGE_DEFAULT, UINT cpuaccessFlags= 0, UINT miscFlags = 0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} } ; # endif RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0006_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0006_v0_0_s_ifspec ; # ifndef __ID3D10Texture1D_INTERFACE_DEFINED__ # define __ID3D10Texture1D_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Texture1D ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C03-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "Map(_In_ UINT Subresource, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ void **ppData)"
  },
  {
    "label": "Unmap()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "Unmap(_In_ UINT Subresource)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_TEXTURE1D_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10Texture1DVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Texture1D * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Texture1D * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Texture1D * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Texture1D * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Texture1D * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Texture1D * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Texture1D * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetType )( ID3D10Texture1D * This, _Out_ D3D10_RESOURCE_DIMENSION *rType)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetEvictionPriority )( ID3D10Texture1D * This, _In_ UINT EvictionPriority)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetEvictionPriority )( ID3D10Texture1D * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Map )( ID3D10Texture1D * This, _In_ UINT Subresource, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ void **ppData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Unmap )( ID3D10Texture1D * This, _In_ UINT Subresource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Texture1D * This, _Out_ D3D10_TEXTURE1D_DESC *pDesc)"
  },
  {
    "label": "ID3D10Texture1D_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10Texture1DVtbl ; interface ID3D10Texture1D { CONST_VTBL struct ID3D10Texture1DVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Texture1D_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Texture1D_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Texture1D_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Texture1D_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Texture1D_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Texture1D_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Texture1D_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Texture1D_GetType(This,rType) \\ ( (This)->lpVtbl -> GetType(This,rType) ) #define ID3D10Texture1D_SetEvictionPriority(This,EvictionPriority) \\ ( (This)->lpVtbl -> SetEvictionPriority(This,EvictionPriority) ) #define ID3D10Texture1D_GetEvictionPriority(This) \\ ( (This)->lpVtbl -> GetEvictionPriority(This) ) #define ID3D10Texture1D_Map(This,Subresource,MapType,MapFlags,ppData) \\ ( (This)->lpVtbl -> Map(This,Subresource,MapType,MapFlags,ppData) ) #define ID3D10Texture1D_Unmap(This,Subresource) \\ ( (This)->lpVtbl -> Unmap(This,Subresource) ) #define ID3D10Texture1D_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "CD3D10_TEXTURE2D_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_TEXTURE2D_DESC()"
  },
  {
    "label": "CD3D10_TEXTURE2D_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_TEXTURE2D_DESC(const D3D10_TEXTURE2D_DESC& o ) : D3D10_TEXTURE2D_DESC( o)"
  },
  {
    "label": "CD3D10_TEXTURE2D_DESC()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3D10_TEXTURE2D_DESC(DXGI_FORMAT format, UINT width, UINT height, UINT arraySize = 1, UINT mipLevels = 0, UINT bindFlags = D3D10_BIND_SHADER_RESOURCE, D3D10_USAGE usage = D3D10_USAGE_DEFAULT, UINT cpuaccessFlags = 0, UINT sampleCount = 1, UINT sampleQuality = 0, UINT miscFlags = 0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} } ; # endif typedef struct D3D10_MAPPED_TEXTURE2D { void* pData ; UINT RowPitch ; } D3D10_MAPPED_TEXTURE2D ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0007_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0007_v0_0_s_ifspec ; # ifndef __ID3D10Texture2D_INTERFACE_DEFINED__ # define __ID3D10Texture2D_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Texture2D ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C04-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "Map(_In_ UINT Subresource, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ D3D10_MAPPED_TEXTURE2D *pMappedTex2D)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_TEXTURE2D_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10Texture2DVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Texture2D * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Texture2D * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Texture2D * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Texture2D * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Texture2D * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Texture2D * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Texture2D * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetType )( ID3D10Texture2D * This, _Out_ D3D10_RESOURCE_DIMENSION *rType)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetEvictionPriority )( ID3D10Texture2D * This, _In_ UINT EvictionPriority)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetEvictionPriority )( ID3D10Texture2D * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Map )( ID3D10Texture2D * This, _In_ UINT Subresource, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ D3D10_MAPPED_TEXTURE2D *pMappedTex2D)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Unmap )( ID3D10Texture2D * This, _In_ UINT Subresource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Texture2D * This, _Out_ D3D10_TEXTURE2D_DESC *pDesc)"
  },
  {
    "label": "ID3D10Texture2D_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10Texture2DVtbl ; interface ID3D10Texture2D { CONST_VTBL struct ID3D10Texture2DVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Texture2D_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Texture2D_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Texture2D_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Texture2D_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Texture2D_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Texture2D_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Texture2D_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Texture2D_GetType(This,rType) \\ ( (This)->lpVtbl -> GetType(This,rType) ) #define ID3D10Texture2D_SetEvictionPriority(This,EvictionPriority) \\ ( (This)->lpVtbl -> SetEvictionPriority(This,EvictionPriority) ) #define ID3D10Texture2D_GetEvictionPriority(This) \\ ( (This)->lpVtbl -> GetEvictionPriority(This) ) #define ID3D10Texture2D_Map(This,Subresource,MapType,MapFlags,pMappedTex2D) \\ ( (This)->lpVtbl -> Map(This,Subresource,MapType,MapFlags,pMappedTex2D) ) #define ID3D10Texture2D_Unmap(This,Subresource) \\ ( (This)->lpVtbl -> Unmap(This,Subresource) ) #define ID3D10Texture2D_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "CD3D10_TEXTURE3D_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_TEXTURE3D_DESC()"
  },
  {
    "label": "CD3D10_TEXTURE3D_DESC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CD3D10_TEXTURE3D_DESC(const D3D10_TEXTURE3D_DESC& o ) : D3D10_TEXTURE3D_DESC( o)"
  },
  {
    "label": "CD3D10_TEXTURE3D_DESC()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "CD3D10_TEXTURE3D_DESC(DXGI_FORMAT format, UINT width, UINT height, UINT depth, UINT mipLevels = 0, UINT bindFlags = D3D10_BIND_SHADER_RESOURCE, D3D10_USAGE usage = D3D10_USAGE_DEFAULT, UINT cpuaccessFlags = 0, UINT miscFlags = 0)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} } ; # endif typedef struct D3D10_MAPPED_TEXTURE3D { void* pData ; UINT RowPitch ; UINT DepthPitch ; } D3D10_MAPPED_TEXTURE3D ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0008_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0008_v0_0_s_ifspec ; # ifndef __ID3D10Texture3D_INTERFACE_DEFINED__ # define __ID3D10Texture3D_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Texture3D ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C05-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "Map()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "Map(_In_ UINT Subresource, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ D3D10_MAPPED_TEXTURE3D *pMappedTex3D)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_TEXTURE3D_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10Texture3DVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Texture3D * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Texture3D * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Texture3D * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Texture3D * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Texture3D * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Texture3D * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Texture3D * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetType )( ID3D10Texture3D * This, _Out_ D3D10_RESOURCE_DIMENSION *rType)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetEvictionPriority )( ID3D10Texture3D * This, _In_ UINT EvictionPriority)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetEvictionPriority )( ID3D10Texture3D * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Map )( ID3D10Texture3D * This, _In_ UINT Subresource, _In_ D3D10_MAP MapType, _In_ UINT MapFlags, _Out_ D3D10_MAPPED_TEXTURE3D *pMappedTex3D)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Unmap )( ID3D10Texture3D * This, _In_ UINT Subresource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Texture3D * This, _Out_ D3D10_TEXTURE3D_DESC *pDesc)"
  },
  {
    "label": "ID3D10Texture3D_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10Texture3DVtbl ; interface ID3D10Texture3D { CONST_VTBL struct ID3D10Texture3DVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Texture3D_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Texture3D_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Texture3D_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Texture3D_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Texture3D_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Texture3D_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Texture3D_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Texture3D_GetType(This,rType) \\ ( (This)->lpVtbl -> GetType(This,rType) ) #define ID3D10Texture3D_SetEvictionPriority(This,EvictionPriority) \\ ( (This)->lpVtbl -> SetEvictionPriority(This,EvictionPriority) ) #define ID3D10Texture3D_GetEvictionPriority(This) \\ ( (This)->lpVtbl -> GetEvictionPriority(This) ) #define ID3D10Texture3D_Map(This,Subresource,MapType,MapFlags,pMappedTex3D) \\ ( (This)->lpVtbl -> Map(This,Subresource,MapType,MapFlags,pMappedTex3D) ) #define ID3D10Texture3D_Unmap(This,Subresource) \\ ( (This)->lpVtbl -> Unmap(This,Subresource) ) #define ID3D10Texture3D_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_TEXTURECUBE_FACE_POSITIVE_X = 0,D3D10_TEXTURECUBE_FACE_NEGATIVE_X = 1,D3D10_TEXTURECUBE_FACE_POSITIVE_Y = 2,D3D10_TEXTURECUBE_FACE_NEGATIVE_Y = 3,D3D10_TEXTURECUBE_FACE_POSITIVE_Z = 4,D3D10_TEXTURECUBE_FACE_NEGATIVE_Z = 5 } D3D10_TEXTURECUBE_FACE ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0009_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0009_v0_0_s_ifspec ; # ifndef __ID3D10View_INTERFACE_DEFINED__ # define __ID3D10View_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10View ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"C902B03F-60A7-49BA-9936-2A3AB37A7E33\")"
  },
  {
    "label": "GetResource()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetResource(_Out_ ID3D10Resource **ppResource)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10ViewVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10View * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10View * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10View * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10View * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10View * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10View * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10View * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetResource )( ID3D10View * This, _Out_ ID3D10Resource **ppResource)"
  },
  {
    "label": "ID3D10View_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10ViewVtbl ; interface ID3D10View { CONST_VTBL struct ID3D10ViewVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10View_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10View_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10View_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10View_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10View_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10View_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10View_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10View_GetResource(This,ppResource) \\ ( (This)->lpVtbl -> GetResource(This,ppResource))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (union { UINT FirstElement ; UINT ElementOffset ; } ; union { UINT NumElements ; UINT ElementWidth ; } ; } D3D10_BUFFER_SRV ; typedef struct D3D10_TEX1D_SRV { UINT MostDetailedMip ; UINT MipLevels ; } D3D10_TEX1D_SRV ; typedef struct D3D10_TEX1D_ARRAY_SRV { UINT MostDetailedMip ; UINT MipLevels ; UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX1D_ARRAY_SRV ; typedef struct D3D10_TEX2D_SRV { UINT MostDetailedMip ; UINT MipLevels ; } D3D10_TEX2D_SRV ; typedef struct D3D10_TEX2D_ARRAY_SRV { UINT MostDetailedMip ; UINT MipLevels ; UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX2D_ARRAY_SRV ; typedef struct D3D10_TEX3D_SRV { UINT MostDetailedMip ; UINT MipLevels ; } D3D10_TEX3D_SRV ; typedef struct D3D10_TEXCUBE_SRV { UINT MostDetailedMip ; UINT MipLevels ; } D3D10_TEXCUBE_SRV ; typedef struct D3D10_TEX2DMS_SRV { UINT UnusedField_NothingToDefine ; } D3D10_TEX2DMS_SRV ; typedef struct D3D10_TEX2DMS_ARRAY_SRV { UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX2DMS_ARRAY_SRV ; typedef struct D3D10_SHADER_RESOURCE_VIEW_DESC { DXGI_FORMAT Format ; D3D10_SRV_DIMENSION ViewDimension ; union { D3D10_BUFFER_SRV Buffer ; D3D10_TEX1D_SRV Texture1D ; D3D10_TEX1D_ARRAY_SRV Texture1DArray ; D3D10_TEX2D_SRV Texture2D ; D3D10_TEX2D_ARRAY_SRV Texture2DArray ; D3D10_TEX2DMS_SRV Texture2DMS ; D3D10_TEX2DMS_ARRAY_SRV Texture2DMSArray ; D3D10_TEX3D_SRV Texture3D ; D3D10_TEXCUBE_SRV TextureCube ; } ; } D3D10_SHADER_RESOURCE_VIEW_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0010_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0010_v0_0_s_ifspec ; # ifndef __ID3D10ShaderResourceView_INTERFACE_DEFINED__ # define __ID3D10ShaderResourceView_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10ShaderResourceView ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C07-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_SHADER_RESOURCE_VIEW_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10ShaderResourceViewVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10ShaderResourceView * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10ShaderResourceView * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10ShaderResourceView * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10ShaderResourceView * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10ShaderResourceView * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10ShaderResourceView * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10ShaderResourceView * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetResource )( ID3D10ShaderResourceView * This, _Out_ ID3D10Resource **ppResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10ShaderResourceView * This, _Out_ D3D10_SHADER_RESOURCE_VIEW_DESC *pDesc)"
  },
  {
    "label": "ID3D10ShaderResourceView_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10ShaderResourceViewVtbl ; interface ID3D10ShaderResourceView { CONST_VTBL struct ID3D10ShaderResourceViewVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10ShaderResourceView_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10ShaderResourceView_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10ShaderResourceView_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10ShaderResourceView_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10ShaderResourceView_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10ShaderResourceView_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10ShaderResourceView_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10ShaderResourceView_GetResource(This,ppResource) \\ ( (This)->lpVtbl -> GetResource(This,ppResource) ) #define ID3D10ShaderResourceView_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (union { UINT FirstElement ; UINT ElementOffset ; } ; union { UINT NumElements ; UINT ElementWidth ; } ; } D3D10_BUFFER_RTV ; typedef struct D3D10_TEX1D_RTV { UINT MipSlice ; } D3D10_TEX1D_RTV ; typedef struct D3D10_TEX1D_ARRAY_RTV { UINT MipSlice ; UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX1D_ARRAY_RTV ; typedef struct D3D10_TEX2D_RTV { UINT MipSlice ; } D3D10_TEX2D_RTV ; typedef struct D3D10_TEX2DMS_RTV { UINT UnusedField_NothingToDefine ; } D3D10_TEX2DMS_RTV ; typedef struct D3D10_TEX2D_ARRAY_RTV { UINT MipSlice ; UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX2D_ARRAY_RTV ; typedef struct D3D10_TEX2DMS_ARRAY_RTV { UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX2DMS_ARRAY_RTV ; typedef struct D3D10_TEX3D_RTV { UINT MipSlice ; UINT FirstWSlice ; UINT WSize ; } D3D10_TEX3D_RTV ; typedef struct D3D10_RENDER_TARGET_VIEW_DESC { DXGI_FORMAT Format ; D3D10_RTV_DIMENSION ViewDimension ; union { D3D10_BUFFER_RTV Buffer ; D3D10_TEX1D_RTV Texture1D ; D3D10_TEX1D_ARRAY_RTV Texture1DArray ; D3D10_TEX2D_RTV Texture2D ; D3D10_TEX2D_ARRAY_RTV Texture2DArray ; D3D10_TEX2DMS_RTV Texture2DMS ; D3D10_TEX2DMS_ARRAY_RTV Texture2DMSArray ; D3D10_TEX3D_RTV Texture3D ; } ; } D3D10_RENDER_TARGET_VIEW_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0011_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0011_v0_0_s_ifspec ; # ifndef __ID3D10RenderTargetView_INTERFACE_DEFINED__ # define __ID3D10RenderTargetView_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10RenderTargetView ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C08-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_RENDER_TARGET_VIEW_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10RenderTargetViewVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10RenderTargetView * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10RenderTargetView * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10RenderTargetView * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10RenderTargetView * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10RenderTargetView * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10RenderTargetView * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10RenderTargetView * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetResource )( ID3D10RenderTargetView * This, _Out_ ID3D10Resource **ppResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10RenderTargetView * This, _Out_ D3D10_RENDER_TARGET_VIEW_DESC *pDesc)"
  },
  {
    "label": "ID3D10RenderTargetView_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10RenderTargetViewVtbl ; interface ID3D10RenderTargetView { CONST_VTBL struct ID3D10RenderTargetViewVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10RenderTargetView_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10RenderTargetView_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10RenderTargetView_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10RenderTargetView_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10RenderTargetView_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10RenderTargetView_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10RenderTargetView_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10RenderTargetView_GetResource(This,ppResource) \\ ( (This)->lpVtbl -> GetResource(This,ppResource) ) #define ID3D10RenderTargetView_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (UINT MipSlice ; } D3D10_TEX1D_DSV ; typedef struct D3D10_TEX1D_ARRAY_DSV { UINT MipSlice ; UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX1D_ARRAY_DSV ; typedef struct D3D10_TEX2D_DSV { UINT MipSlice ; } D3D10_TEX2D_DSV ; typedef struct D3D10_TEX2D_ARRAY_DSV { UINT MipSlice ; UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX2D_ARRAY_DSV ; typedef struct D3D10_TEX2DMS_DSV { UINT UnusedField_NothingToDefine ; } D3D10_TEX2DMS_DSV ; typedef struct D3D10_TEX2DMS_ARRAY_DSV { UINT FirstArraySlice ; UINT ArraySize ; } D3D10_TEX2DMS_ARRAY_DSV ; typedef struct D3D10_DEPTH_STENCIL_VIEW_DESC { DXGI_FORMAT Format ; D3D10_DSV_DIMENSION ViewDimension ; union { D3D10_TEX1D_DSV Texture1D ; D3D10_TEX1D_ARRAY_DSV Texture1DArray ; D3D10_TEX2D_DSV Texture2D ; D3D10_TEX2D_ARRAY_DSV Texture2DArray ; D3D10_TEX2DMS_DSV Texture2DMS ; D3D10_TEX2DMS_ARRAY_DSV Texture2DMSArray ; } ; } D3D10_DEPTH_STENCIL_VIEW_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0012_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0012_v0_0_s_ifspec ; # ifndef __ID3D10DepthStencilView_INTERFACE_DEFINED__ # define __ID3D10DepthStencilView_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10DepthStencilView ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C09-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_DEPTH_STENCIL_VIEW_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10DepthStencilViewVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10DepthStencilView * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10DepthStencilView * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10DepthStencilView * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10DepthStencilView * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10DepthStencilView * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10DepthStencilView * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10DepthStencilView * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetResource )( ID3D10DepthStencilView * This, _Out_ ID3D10Resource **ppResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10DepthStencilView * This, _Out_ D3D10_DEPTH_STENCIL_VIEW_DESC *pDesc)"
  },
  {
    "label": "ID3D10DepthStencilView_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10DepthStencilViewVtbl ; interface ID3D10DepthStencilView { CONST_VTBL struct ID3D10DepthStencilViewVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10DepthStencilView_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10DepthStencilView_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10DepthStencilView_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10DepthStencilView_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10DepthStencilView_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10DepthStencilView_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10DepthStencilView_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10DepthStencilView_GetResource(This,ppResource) \\ ( (This)->lpVtbl -> GetResource(This,ppResource) ) #define ID3D10DepthStencilView_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C0A-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (public : } ; # else typedef struct ID3D10VertexShaderVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10VertexShader * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10VertexShader * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10VertexShader * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10VertexShader * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10VertexShader * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10VertexShader * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10VertexShader * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "ID3D10VertexShader_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10VertexShaderVtbl ; interface ID3D10VertexShader { CONST_VTBL struct ID3D10VertexShaderVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10VertexShader_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10VertexShader_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10VertexShader_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10VertexShader_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10VertexShader_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10VertexShader_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10VertexShader_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"6316BE88-54CD-4040-AB44-20461BC81F68\")"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (public : } ; # else typedef struct ID3D10GeometryShaderVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10GeometryShader * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10GeometryShader * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10GeometryShader * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10GeometryShader * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10GeometryShader * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10GeometryShader * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10GeometryShader * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "ID3D10GeometryShader_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10GeometryShaderVtbl ; interface ID3D10GeometryShader { CONST_VTBL struct ID3D10GeometryShaderVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10GeometryShader_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10GeometryShader_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10GeometryShader_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10GeometryShader_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10GeometryShader_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10GeometryShader_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10GeometryShader_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"4968B601-9D00-4cde-8346-8E7F675819B6\")"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (public : } ; # else typedef struct ID3D10PixelShaderVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10PixelShader * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10PixelShader * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10PixelShader * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10PixelShader * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10PixelShader * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10PixelShader * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10PixelShader * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "ID3D10PixelShader_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10PixelShaderVtbl ; interface ID3D10PixelShader { CONST_VTBL struct ID3D10PixelShaderVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10PixelShader_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10PixelShader_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10PixelShader_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10PixelShader_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10PixelShader_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10PixelShader_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10PixelShader_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C0B-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (public : } ; # else typedef struct ID3D10InputLayoutVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10InputLayout * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10InputLayout * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10InputLayout * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10InputLayout * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10InputLayout * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10InputLayout * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10InputLayout * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "ID3D10InputLayout_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10InputLayoutVtbl ; interface ID3D10InputLayout { CONST_VTBL struct ID3D10InputLayoutVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10InputLayout_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10InputLayout_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10InputLayout_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10InputLayout_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10InputLayout_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10InputLayout_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10InputLayout_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData))"
  },
  {
    "label": "D3D10_FILTER_TYPE_MASK()",
    "kind": "Method",
    "detail": "Function (D3D10_FILTER_MIN_MAG_MIP_POINT = 0,D3D10_FILTER_MIN_MAG_POINT_MIP_LINEAR = 0 x1,D3D10_FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT = 0 x4,D3D10_FILTER_MIN_POINT_MAG_MIP_LINEAR = 0 x5,D3D10_FILTER_MIN_LINEAR_MAG_MIP_POINT = 0 x10,D3D10_FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0 x11,D3D10_FILTER_MIN_MAG_LINEAR_MIP_POINT = 0 x14,D3D10_FILTER_MIN_MAG_MIP_LINEAR = 0 x15,D3D10_FILTER_ANISOTROPIC = 0 x55,D3D10_FILTER_COMPARISON_MIN_MAG_MIP_POINT = 0 x80,D3D10_FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR = 0 x81,D3D10_FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT = 0 x84,D3D10_FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR = 0 x85,D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT = 0 x90,D3D10_FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR = 0 x91,D3D10_FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT = 0 x94,D3D10_FILTER_COMPARISON_MIN_MAG_MIP_LINEAR = 0 x95,D3D10_FILTER_COMPARISON_ANISOTROPIC = 0 xd5,D3D10_FILTER_TEXT_1BIT = 0 x80000000 } D3D10_FILTER ; typedef enum D3D10_FILTER_TYPE { D3D10_FILTER_TYPE_POINT = 0,D3D10_FILTER_TYPE_LINEAR = 1 } D3D10_FILTER_TYPE ; # define)",
    "insertText": "D3D10_FILTER_TYPE_MASK(0x3 ) #define D3D10_MIN_FILTER_SHIFT ( 4 ) #define D3D10_MAG_FILTER_SHIFT ( 2 ) #define D3D10_MIP_FILTER_SHIFT ( 0 ) #define D3D10_COMPARISON_FILTERING_BIT ( 0x80 ) #define D3D10_ANISOTROPIC_FILTERING_BIT ( 0x40 ) #define D3D10_TEXT_1BIT_BIT ( 0x80000000 ) #define D3D10_ENCODE_BASIC_FILTER( min, mag, mip, bComparison ) \\ ( ( D3D10_FILTER ) ( \\ ( ( bComparison ) ? D3D10_COMPARISON_FILTERING_BIT : 0 ) | \\ ( ( ( min ) & D3D10_FILTER_TYPE_MASK ) << D3D10_MIN_FILTER_SHIFT ) | \\ ( ( ( mag ) & D3D10_FILTER_TYPE_MASK ) << D3D10_MAG_FILTER_SHIFT ) | \\ ( ( ( mip ) & D3D10_FILTER_TYPE_MASK ) << D3D10_MIP_FILTER_SHIFT ) ) ) #define D3D10_ENCODE_ANISOTROPIC_FILTER( bComparison ) \\ ( ( D3D10_FILTER ) ( \\ D3D10_ANISOTROPIC_FILTERING_BIT | \\ D3D10_ENCODE_BASIC_FILTER( D3D10_FILTER_TYPE_LINEAR, \\ D3D10_FILTER_TYPE_LINEAR, \\ D3D10_FILTER_TYPE_LINEAR, \\ bComparison ) ) ) #define D3D10_DECODE_MIN_FILTER( d3d10Filter ) \\ ( ( D3D10_FILTER_TYPE ) \\ ( ( ( d3d10Filter ) >> D3D10_MIN_FILTER_SHIFT ) & D3D10_FILTER_TYPE_MASK ) ) #define D3D10_DECODE_MAG_FILTER( d3d10Filter ) \\ ( ( D3D10_FILTER_TYPE ) \\ ( ( ( d3d10Filter ) >> D3D10_MAG_FILTER_SHIFT ) & D3D10_FILTER_TYPE_MASK ) ) #define D3D10_DECODE_MIP_FILTER( d3d10Filter ) \\ ( ( D3D10_FILTER_TYPE ) \\ ( ( ( d3d10Filter ) >> D3D10_MIP_FILTER_SHIFT ) & D3D10_FILTER_TYPE_MASK ) ) #define D3D10_DECODE_IS_COMPARISON_FILTER( d3d10Filter ) \\ ( ( d3d10Filter ) & D3D10_COMPARISON_FILTERING_BIT ) #define D3D10_DECODE_IS_ANISOTROPIC_FILTER( d3d10Filter ) \\ ( ( ( d3d10Filter ) & D3D10_ANISOTROPIC_FILTERING_BIT ) && \\ ( D3D10_FILTER_TYPE_LINEAR == D3D10_DECODE_MIN_FILTER( d3d10Filter ) ) && \\ ( D3D10_FILTER_TYPE_LINEAR == D3D10_DECODE_MAG_FILTER( d3d10Filter ) ) && \\ ( D3D10_FILTER_TYPE_LINEAR == D3D10_DECODE_MIP_FILTER( d3d10Filter ) ) ) #define D3D10_DECODE_IS_TEXT_1BIT_FILTER( d3d10Filter ) \\ ( ( d3d10Filter ) == D3D10_TEXT_1BIT_BIT)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_TEXTURE_ADDRESS_WRAP = 1,D3D10_TEXTURE_ADDRESS_MIRROR = 2,D3D10_TEXTURE_ADDRESS_CLAMP = 3,D3D10_TEXTURE_ADDRESS_BORDER = 4,D3D10_TEXTURE_ADDRESS_MIRROR_ONCE = 5 } D3D10_TEXTURE_ADDRESS_MODE ; typedef struct D3D10_SAMPLER_DESC { D3D10_FILTER Filter ; D3D10_TEXTURE_ADDRESS_MODE AddressU ; D3D10_TEXTURE_ADDRESS_MODE AddressV ; D3D10_TEXTURE_ADDRESS_MODE AddressW ; FLOAT MipLODBias ; UINT MaxAnisotropy ; D3D10_COMPARISON_FUNC ComparisonFunc ; FLOAT BorderColor [ 4 ] ; FLOAT MinLOD ; FLOAT MaxLOD ; } D3D10_SAMPLER_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0017_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0017_v0_0_s_ifspec ; # ifndef __ID3D10SamplerState_INTERFACE_DEFINED__ # define __ID3D10SamplerState_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10SamplerState ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C0C-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_SAMPLER_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10SamplerStateVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10SamplerState * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10SamplerState * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10SamplerState * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10SamplerState * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10SamplerState * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10SamplerState * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10SamplerState * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10SamplerState * This, _Out_ D3D10_SAMPLER_DESC *pDesc)"
  },
  {
    "label": "ID3D10SamplerState_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10SamplerStateVtbl ; interface ID3D10SamplerState { CONST_VTBL struct ID3D10SamplerStateVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10SamplerState_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10SamplerState_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10SamplerState_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10SamplerState_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10SamplerState_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10SamplerState_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10SamplerState_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10SamplerState_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (D3D10_FORMAT_SUPPORT_BUFFER = 0 x1,D3D10_FORMAT_SUPPORT_IA_VERTEX_BUFFER = 0 x2,D3D10_FORMAT_SUPPORT_IA_INDEX_BUFFER = 0 x4,D3D10_FORMAT_SUPPORT_SO_BUFFER = 0 x8,D3D10_FORMAT_SUPPORT_TEXTURE1D = 0 x10,D3D10_FORMAT_SUPPORT_TEXTURE2D = 0 x20,D3D10_FORMAT_SUPPORT_TEXTURE3D = 0 x40,D3D10_FORMAT_SUPPORT_TEXTURECUBE = 0 x80,D3D10_FORMAT_SUPPORT_SHADER_LOAD = 0 x100,D3D10_FORMAT_SUPPORT_SHADER_SAMPLE = 0 x200,D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_COMPARISON = 0 x400,D3D10_FORMAT_SUPPORT_SHADER_SAMPLE_MONO_TEXT = 0 x800,D3D10_FORMAT_SUPPORT_MIP = 0 x1000,D3D10_FORMAT_SUPPORT_MIP_AUTOGEN = 0 x2000,D3D10_FORMAT_SUPPORT_RENDER_TARGET = 0 x4000,D3D10_FORMAT_SUPPORT_BLENDABLE = 0 x8000,D3D10_FORMAT_SUPPORT_DEPTH_STENCIL = 0 x10000,D3D10_FORMAT_SUPPORT_CPU_LOCKABLE = 0 x20000,D3D10_FORMAT_SUPPORT_MULTISAMPLE_RESOLVE = 0 x40000,D3D10_FORMAT_SUPPORT_DISPLAY = 0 x80000,D3D10_FORMAT_SUPPORT_CAST_WITHIN_BIT_LAYOUT = 0 x100000,D3D10_FORMAT_SUPPORT_MULTISAMPLE_RENDERTARGET = 0 x200000,D3D10_FORMAT_SUPPORT_MULTISAMPLE_LOAD = 0 x400000,D3D10_FORMAT_SUPPORT_SHADER_GATHER = 0 x800000,D3D10_FORMAT_SUPPORT_BACK_BUFFER_CAST = 0 x1000000 } D3D10_FORMAT_SUPPORT ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0018_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0018_v0_0_s_ifspec ; # ifndef __ID3D10Asynchronous_INTERFACE_DEFINED__ # define __ID3D10Asynchronous_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Asynchronous ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C0D-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "Begin(void)"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "End(void)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetData(_Out_writes_bytes_opt_(DataSize) void *pData, _In_ UINT DataSize, _In_ UINT GetDataFlags)"
  },
  {
    "label": "GetDataSize()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetDataSize(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10AsynchronousVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Asynchronous * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Asynchronous * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Asynchronous * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Asynchronous * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Asynchronous * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Asynchronous * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Asynchronous * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Begin )( ID3D10Asynchronous * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *End )( ID3D10Asynchronous * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetData )( ID3D10Asynchronous * This, _Out_writes_bytes_opt_(DataSize) void *pData, _In_ UINT DataSize, _In_ UINT GetDataFlags)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetDataSize )( ID3D10Asynchronous * This)"
  },
  {
    "label": "ID3D10Asynchronous_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10AsynchronousVtbl ; interface ID3D10Asynchronous { CONST_VTBL struct ID3D10AsynchronousVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Asynchronous_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Asynchronous_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Asynchronous_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Asynchronous_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Asynchronous_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Asynchronous_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Asynchronous_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Asynchronous_Begin(This) \\ ( (This)->lpVtbl -> Begin(This) ) #define ID3D10Asynchronous_End(This) \\ ( (This)->lpVtbl -> End(This) ) #define ID3D10Asynchronous_GetData(This,pData,DataSize,GetDataFlags) \\ ( (This)->lpVtbl -> GetData(This,pData,DataSize,GetDataFlags) ) #define ID3D10Asynchronous_GetDataSize(This) \\ ( (This)->lpVtbl -> GetDataSize(This))"
  },
  {
    "label": "D3D10_QUERY_OCCLUSION()",
    "kind": "Method",
    "detail": "Function (D3D10_ASYNC_GETDATA_DONOTFLUSH = 0 x1 } D3D10_ASYNC_GETDATA_FLAG ; typedef enum D3D10_QUERY { D3D10_QUERY_EVENT = 0,)",
    "insertText": "D3D10_QUERY_OCCLUSION(D3D10_QUERY_EVENT + 1 ) , D3D10_QUERY_TIMESTAMP = ( D3D10_QUERY_OCCLUSION + 1 ) , D3D10_QUERY_TIMESTAMP_DISJOINT = ( D3D10_QUERY_TIMESTAMP + 1 ) , D3D10_QUERY_PIPELINE_STATISTICS = ( D3D10_QUERY_TIMESTAMP_DISJOINT + 1 ) , D3D10_QUERY_OCCLUSION_PREDICATE = ( D3D10_QUERY_PIPELINE_STATISTICS + 1 ) , D3D10_QUERY_SO_STATISTICS = ( D3D10_QUERY_OCCLUSION_PREDICATE + 1 ) , D3D10_QUERY_SO_OVERFLOW_PREDICATE = ( D3D10_QUERY_SO_STATISTICS + 1)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D10_QUERY_MISC_FLAG { D3D10_QUERY_MISC_PREDICATEHINT = 0 x1 } D3D10_QUERY_MISC_FLAG ; typedef struct D3D10_QUERY_DESC { D3D10_QUERY Query ; UINT MiscFlags ; } D3D10_QUERY_DESC ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0019_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0019_v0_0_s_ifspec ; # ifndef __ID3D10Query_INTERFACE_DEFINED__ # define __ID3D10Query_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Query ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C0E-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_QUERY_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10QueryVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Query * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Query * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Query * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Query * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Query * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Query * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Query * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Begin )( ID3D10Query * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *End )( ID3D10Query * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetData )( ID3D10Query * This, _Out_writes_bytes_opt_(DataSize) void *pData, _In_ UINT DataSize, _In_ UINT GetDataFlags)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetDataSize )( ID3D10Query * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Query * This, _Out_ D3D10_QUERY_DESC *pDesc)"
  },
  {
    "label": "ID3D10Query_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10QueryVtbl ; interface ID3D10Query { CONST_VTBL struct ID3D10QueryVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Query_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Query_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Query_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Query_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Query_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Query_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Query_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Query_Begin(This) \\ ( (This)->lpVtbl -> Begin(This) ) #define ID3D10Query_End(This) \\ ( (This)->lpVtbl -> End(This) ) #define ID3D10Query_GetData(This,pData,DataSize,GetDataFlags) \\ ( (This)->lpVtbl -> GetData(This,pData,DataSize,GetDataFlags) ) #define ID3D10Query_GetDataSize(This) \\ ( (This)->lpVtbl -> GetDataSize(This) ) #define ID3D10Query_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C10-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (public : } ; # else typedef struct ID3D10PredicateVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Predicate * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Predicate * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Predicate * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Predicate * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Predicate * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Predicate * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Predicate * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Begin )( ID3D10Predicate * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *End )( ID3D10Predicate * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetData )( ID3D10Predicate * This, _Out_writes_bytes_opt_(DataSize) void *pData, _In_ UINT DataSize, _In_ UINT GetDataFlags)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetDataSize )( ID3D10Predicate * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Predicate * This, _Out_ D3D10_QUERY_DESC *pDesc)"
  },
  {
    "label": "ID3D10Predicate_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10PredicateVtbl ; interface ID3D10Predicate { CONST_VTBL struct ID3D10PredicateVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Predicate_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Predicate_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Predicate_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Predicate_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Predicate_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Predicate_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Predicate_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Predicate_Begin(This) \\ ( (This)->lpVtbl -> Begin(This) ) #define ID3D10Predicate_End(This) \\ ( (This)->lpVtbl -> End(This) ) #define ID3D10Predicate_GetData(This,pData,DataSize,GetDataFlags) \\ ( (This)->lpVtbl -> GetData(This,pData,DataSize,GetDataFlags) ) #define ID3D10Predicate_GetDataSize(This) \\ ( (This)->lpVtbl -> GetDataSize(This) ) #define ID3D10Predicate_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "D3D10_COUNTER_VERTEX_PROCESSING()",
    "kind": "Method",
    "detail": "Function (UINT64 Frequency ; BOOL Disjoint ; } D3D10_QUERY_DATA_TIMESTAMP_DISJOINT ; typedef struct D3D10_QUERY_DATA_PIPELINE_STATISTICS { UINT64 IAVertices ; UINT64 IAPrimitives ; UINT64 VSInvocations ; UINT64 GSInvocations ; UINT64 GSPrimitives ; UINT64 CInvocations ; UINT64 CPrimitives ; UINT64 PSInvocations ; } D3D10_QUERY_DATA_PIPELINE_STATISTICS ; typedef struct D3D10_QUERY_DATA_SO_STATISTICS { UINT64 NumPrimitivesWritten ; UINT64 PrimitivesStorageNeeded ; } D3D10_QUERY_DATA_SO_STATISTICS ; typedef enum D3D10_COUNTER { D3D10_COUNTER_GPU_IDLE = 0,)",
    "insertText": "D3D10_COUNTER_VERTEX_PROCESSING(D3D10_COUNTER_GPU_IDLE + 1 ) , D3D10_COUNTER_GEOMETRY_PROCESSING = ( D3D10_COUNTER_VERTEX_PROCESSING + 1 ) , D3D10_COUNTER_PIXEL_PROCESSING = ( D3D10_COUNTER_GEOMETRY_PROCESSING + 1 ) , D3D10_COUNTER_OTHER_GPU_PROCESSING = ( D3D10_COUNTER_PIXEL_PROCESSING + 1 ) , D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION = ( D3D10_COUNTER_OTHER_GPU_PROCESSING + 1 ) , D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION = ( D3D10_COUNTER_HOST_ADAPTER_BANDWIDTH_UTILIZATION + 1 ) , D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION = ( D3D10_COUNTER_LOCAL_VIDMEM_BANDWIDTH_UTILIZATION + 1 ) , D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION = ( D3D10_COUNTER_VERTEX_THROUGHPUT_UTILIZATION + 1 ) , D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION = ( D3D10_COUNTER_TRIANGLE_SETUP_THROUGHPUT_UTILIZATION + 1 ) , D3D10_COUNTER_VS_MEMORY_LIMITED = ( D3D10_COUNTER_FILLRATE_THROUGHPUT_UTILIZATION + 1 ) , D3D10_COUNTER_VS_COMPUTATION_LIMITED = ( D3D10_COUNTER_VS_MEMORY_LIMITED + 1 ) , D3D10_COUNTER_GS_MEMORY_LIMITED = ( D3D10_COUNTER_VS_COMPUTATION_LIMITED + 1 ) , D3D10_COUNTER_GS_COMPUTATION_LIMITED = ( D3D10_COUNTER_GS_MEMORY_LIMITED + 1 ) , D3D10_COUNTER_PS_MEMORY_LIMITED = ( D3D10_COUNTER_GS_COMPUTATION_LIMITED + 1 ) , D3D10_COUNTER_PS_COMPUTATION_LIMITED = ( D3D10_COUNTER_PS_MEMORY_LIMITED + 1 ) , D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE = ( D3D10_COUNTER_PS_COMPUTATION_LIMITED + 1 ) , D3D10_COUNTER_TEXTURE_CACHE_HIT_RATE = ( D3D10_COUNTER_POST_TRANSFORM_CACHE_HIT_RATE + 1)"
  },
  {
    "label": "D3D10_COUNTER_TYPE_UINT16()",
    "kind": "Method",
    "detail": "Function (typedef enum D3D10_COUNTER_TYPE { D3D10_COUNTER_TYPE_FLOAT32 = 0,)",
    "insertText": "D3D10_COUNTER_TYPE_UINT16(D3D10_COUNTER_TYPE_FLOAT32 + 1 ) , D3D10_COUNTER_TYPE_UINT32 = ( D3D10_COUNTER_TYPE_UINT16 + 1 ) , D3D10_COUNTER_TYPE_UINT64 = ( D3D10_COUNTER_TYPE_UINT32 + 1)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (typedef struct D3D10_COUNTER_DESC { D3D10_COUNTER Counter ; UINT MiscFlags ; } D3D10_COUNTER_DESC ; typedef struct D3D10_COUNTER_INFO { D3D10_COUNTER LastDeviceDependentCounter ; UINT NumSimultaneousCounters ; UINT8 NumDetectableParallelUnits ; } D3D10_COUNTER_INFO ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0021_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0021_v0_0_s_ifspec ; # ifndef __ID3D10Counter_INTERFACE_DEFINED__ # define __ID3D10Counter_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Counter ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C11-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "GetDesc(_Out_ D3D10_COUNTER_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10CounterVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Counter * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Counter * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Counter * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDevice )( ID3D10Counter * This, _Out_ ID3D10Device **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Counter * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Counter * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Counter * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Begin )( ID3D10Counter * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *End )( ID3D10Counter * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetData )( ID3D10Counter * This, _Out_writes_bytes_opt_(DataSize) void *pData, _In_ UINT DataSize, _In_ UINT GetDataFlags)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetDataSize )( ID3D10Counter * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetDesc )( ID3D10Counter * This, _Out_ D3D10_COUNTER_DESC *pDesc)"
  },
  {
    "label": "ID3D10Counter_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10CounterVtbl ; interface ID3D10Counter { CONST_VTBL struct ID3D10CounterVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Counter_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Counter_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Counter_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Counter_GetDevice(This,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,ppDevice) ) #define ID3D10Counter_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Counter_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Counter_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Counter_Begin(This) \\ ( (This)->lpVtbl -> Begin(This) ) #define ID3D10Counter_End(This) \\ ( (This)->lpVtbl -> End(This) ) #define ID3D10Counter_GetData(This,pData,DataSize,GetDataFlags) \\ ( (This)->lpVtbl -> GetData(This,pData,DataSize,GetDataFlags) ) #define ID3D10Counter_GetDataSize(This) \\ ( (This)->lpVtbl -> GetDataSize(This) ) #define ID3D10Counter_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4C0F-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "VSSetConstantBuffers()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "VSSetConstantBuffers(_In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "PSSetShaderResources()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSSetShaderResources(_In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "PSSetShader()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSSetShader(_In_opt_ ID3D10PixelShader *pPixelShader)"
  },
  {
    "label": "PSSetSamplers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSSetSamplers(_In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "VSSetShader()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSSetShader(_In_opt_ ID3D10VertexShader *pVertexShader)"
  },
  {
    "label": "DrawIndexed()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "DrawIndexed(_In_ UINT IndexCount, _In_ UINT StartIndexLocation, _In_ INT BaseVertexLocation)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "Draw(_In_ UINT VertexCount, _In_ UINT StartVertexLocation)"
  },
  {
    "label": "PSSetConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSSetConstantBuffers(_In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "IASetInputLayout()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IASetInputLayout(_In_opt_ ID3D10InputLayout *pInputLayout)"
  },
  {
    "label": "IASetVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IASetVertexBuffers(_In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppVertexBuffers, _In_reads_opt_(NumBuffers) const UINT *pStrides, _In_reads_opt_(NumBuffers) const UINT *pOffsets)"
  },
  {
    "label": "IASetIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IASetIndexBuffer(_In_opt_ ID3D10Buffer *pIndexBuffer, _In_ DXGI_FORMAT Format, _In_ UINT Offset)"
  },
  {
    "label": "DrawIndexedInstanced()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "DrawIndexedInstanced(_In_ UINT IndexCountPerInstance, _In_ UINT InstanceCount, _In_ UINT StartIndexLocation, _In_ INT BaseVertexLocation, _In_ UINT StartInstanceLocation)"
  },
  {
    "label": "DrawInstanced()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "DrawInstanced(_In_ UINT VertexCountPerInstance, _In_ UINT InstanceCount, _In_ UINT StartVertexLocation, _In_ UINT StartInstanceLocation)"
  },
  {
    "label": "GSSetConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSSetConstantBuffers(_In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "GSSetShader()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSSetShader(_In_opt_ ID3D10GeometryShader *pShader)"
  },
  {
    "label": "IASetPrimitiveTopology()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IASetPrimitiveTopology(_In_ D3D10_PRIMITIVE_TOPOLOGY Topology)"
  },
  {
    "label": "VSSetShaderResources()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSSetShaderResources(_In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "VSSetSamplers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSSetSamplers(_In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "SetPredication()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetPredication(_In_opt_ ID3D10Predicate *pPredicate, _In_ BOOL PredicateValue)"
  },
  {
    "label": "GSSetShaderResources()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSSetShaderResources(_In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "GSSetSamplers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSSetSamplers(_In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "OMSetRenderTargets()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "OMSetRenderTargets(_In_range_( 0, D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10RenderTargetView *const *ppRenderTargetViews, _In_opt_ ID3D10DepthStencilView *pDepthStencilView)"
  },
  {
    "label": "OMSetBlendState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "OMSetBlendState(_In_opt_ ID3D10BlendState *pBlendState, _In_ const FLOAT BlendFactor[ 4 ], _In_ UINT SampleMask)"
  },
  {
    "label": "OMSetDepthStencilState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "OMSetDepthStencilState(_In_opt_ ID3D10DepthStencilState *pDepthStencilState, _In_ UINT StencilRef)"
  },
  {
    "label": "SOSetTargets()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SOSetTargets(_In_range_( 0, D3D10_SO_BUFFER_SLOT_COUNT) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppSOTargets, _In_reads_opt_(NumBuffers) const UINT *pOffsets)"
  },
  {
    "label": "DrawAuto()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "DrawAuto(void)"
  },
  {
    "label": "RSSetState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "RSSetState(_In_opt_ ID3D10RasterizerState *pRasterizerState)"
  },
  {
    "label": "RSSetViewports()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "RSSetViewports(_In_range_(0, D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumViewports, _In_reads_opt_(NumViewports) const D3D10_VIEWPORT *pViewports)"
  },
  {
    "label": "RSSetScissorRects()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "RSSetScissorRects(_In_range_(0, D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumRects, _In_reads_opt_(NumRects) const D3D10_RECT *pRects)"
  },
  {
    "label": "CopySubresourceRegion()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "CopySubresourceRegion(_In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_ UINT DstX, _In_ UINT DstY, _In_ UINT DstZ, _In_ ID3D10Resource *pSrcResource, _In_ UINT SrcSubresource, _In_opt_ const D3D10_BOX *pSrcBox)"
  },
  {
    "label": "CopyResource()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "CopyResource(_In_ ID3D10Resource *pDstResource, _In_ ID3D10Resource *pSrcResource)"
  },
  {
    "label": "UpdateSubresource()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "UpdateSubresource(_In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_opt_ const D3D10_BOX *pDstBox, _In_ const void *pSrcData, _In_ UINT SrcRowPitch, _In_ UINT SrcDepthPitch)"
  },
  {
    "label": "ClearRenderTargetView()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearRenderTargetView(_In_ ID3D10RenderTargetView *pRenderTargetView, _In_ const FLOAT ColorRGBA[ 4 ])"
  },
  {
    "label": "ClearDepthStencilView()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearDepthStencilView(_In_ ID3D10DepthStencilView *pDepthStencilView, _In_ UINT ClearFlags, _In_ FLOAT Depth, _In_ UINT8 Stencil)"
  },
  {
    "label": "GenerateMips()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GenerateMips(_In_ ID3D10ShaderResourceView *pShaderResourceView)"
  },
  {
    "label": "ResolveSubresource()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ResolveSubresource(_In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_ ID3D10Resource *pSrcResource, _In_ UINT SrcSubresource, _In_ DXGI_FORMAT Format)"
  },
  {
    "label": "VSGetConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSGetConstantBuffers(_In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "PSGetShaderResources()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSGetShaderResources(_In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "PSGetShader()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSGetShader(_Out_ ID3D10PixelShader **ppPixelShader)"
  },
  {
    "label": "PSGetSamplers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSGetSamplers(_In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "VSGetShader()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSGetShader(_Out_ ID3D10VertexShader **ppVertexShader)"
  },
  {
    "label": "PSGetConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "PSGetConstantBuffers(_In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "IAGetInputLayout()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IAGetInputLayout(_Out_ ID3D10InputLayout **ppInputLayout)"
  },
  {
    "label": "IAGetVertexBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IAGetVertexBuffers(_In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppVertexBuffers, _Out_writes_opt_(NumBuffers) UINT *pStrides, _Out_writes_opt_(NumBuffers) UINT *pOffsets)"
  },
  {
    "label": "IAGetIndexBuffer()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IAGetIndexBuffer(_Out_opt_ ID3D10Buffer **pIndexBuffer, _Out_opt_ DXGI_FORMAT *Format, _Out_opt_ UINT *Offset)"
  },
  {
    "label": "GSGetConstantBuffers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSGetConstantBuffers(_In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "GSGetShader()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSGetShader(_Out_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "IAGetPrimitiveTopology()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "IAGetPrimitiveTopology(_Out_ D3D10_PRIMITIVE_TOPOLOGY *pTopology)"
  },
  {
    "label": "VSGetShaderResources()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSGetShaderResources(_In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "VSGetSamplers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "VSGetSamplers(_In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "GetPredication()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GetPredication(_Out_opt_ ID3D10Predicate **ppPredicate, _Out_opt_ BOOL *pPredicateValue)"
  },
  {
    "label": "GSGetShaderResources()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSGetShaderResources(_In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "GSGetSamplers()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GSGetSamplers(_In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "OMGetRenderTargets()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "OMGetRenderTargets(_In_range_( 0, D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10RenderTargetView **ppRenderTargetViews, _Out_opt_ ID3D10DepthStencilView **ppDepthStencilView)"
  },
  {
    "label": "OMGetBlendState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "OMGetBlendState(_Out_opt_ ID3D10BlendState **ppBlendState, _Out_opt_ FLOAT BlendFactor[ 4 ], _Out_opt_ UINT *pSampleMask)"
  },
  {
    "label": "OMGetDepthStencilState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "OMGetDepthStencilState(_Out_opt_ ID3D10DepthStencilState **ppDepthStencilState, _Out_opt_ UINT *pStencilRef)"
  },
  {
    "label": "SOGetTargets()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SOGetTargets(_In_range_( 0, D3D10_SO_BUFFER_SLOT_COUNT ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppSOTargets, _Out_writes_opt_(NumBuffers) UINT *pOffsets)"
  },
  {
    "label": "RSGetState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "RSGetState(_Out_ ID3D10RasterizerState **ppRasterizerState)"
  },
  {
    "label": "RSGetViewports()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "RSGetViewports(_Inout_ UINT *NumViewports, _Out_writes_opt_(*NumViewports) D3D10_VIEWPORT *pViewports)"
  },
  {
    "label": "RSGetScissorRects()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "RSGetScissorRects(_Inout_ UINT *NumRects, _Out_writes_opt_(*NumRects) D3D10_RECT *pRects)"
  },
  {
    "label": "GetDeviceRemovedReason()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "GetDeviceRemovedReason(void)"
  },
  {
    "label": "SetExceptionMode()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetExceptionMode(UINT RaiseFlags)"
  },
  {
    "label": "GetExceptionMode()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetExceptionMode(void)"
  },
  {
    "label": "ClearState()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "ClearState(void)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "Flush(void)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateBuffer(_In_ const D3D10_BUFFER_DESC *pDesc, _In_opt_ const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_opt_ ID3D10Buffer **ppBuffer)"
  },
  {
    "label": "CreateTexture1D()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateTexture1D(_In_ const D3D10_TEXTURE1D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture1D **ppTexture1D)"
  },
  {
    "label": "CreateTexture2D()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateTexture2D(_In_ const D3D10_TEXTURE2D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture2D **ppTexture2D)"
  },
  {
    "label": "CreateTexture3D()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateTexture3D(_In_ const D3D10_TEXTURE3D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture3D **ppTexture3D)"
  },
  {
    "label": "CreateShaderResourceView()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateShaderResourceView(_In_ ID3D10Resource *pResource, _In_opt_ const D3D10_SHADER_RESOURCE_VIEW_DESC *pDesc, _Out_opt_ ID3D10ShaderResourceView **ppSRView)"
  },
  {
    "label": "CreateRenderTargetView()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateRenderTargetView(_In_ ID3D10Resource *pResource, _In_opt_ const D3D10_RENDER_TARGET_VIEW_DESC *pDesc, _Out_opt_ ID3D10RenderTargetView **ppRTView)"
  },
  {
    "label": "CreateDepthStencilView()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateDepthStencilView(_In_ ID3D10Resource *pResource, _In_opt_ const D3D10_DEPTH_STENCIL_VIEW_DESC *pDesc, _Out_opt_ ID3D10DepthStencilView **ppDepthStencilView)"
  },
  {
    "label": "CreateInputLayout()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateInputLayout(_In_reads_(NumElements) const D3D10_INPUT_ELEMENT_DESC *pInputElementDescs, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT ) UINT NumElements, _In_reads_(BytecodeLength) const void *pShaderBytecodeWithInputSignature, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10InputLayout **ppInputLayout)"
  },
  {
    "label": "CreateVertexShader()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateVertexShader(_In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10VertexShader **ppVertexShader)"
  },
  {
    "label": "CreateGeometryShader()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateGeometryShader(_In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "CreateGeometryShaderWithStreamOutput()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateGeometryShaderWithStreamOutput(_In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _In_reads_opt_(NumEntries) const D3D10_SO_DECLARATION_ENTRY *pSODeclaration, _In_range_( 0, D3D10_SO_SINGLE_BUFFER_COMPONENT_LIMIT ) UINT NumEntries, _In_ UINT OutputStreamStride, _Out_opt_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "CreatePixelShader()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreatePixelShader(_In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10PixelShader **ppPixelShader)"
  },
  {
    "label": "CreateBlendState()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateBlendState(_In_ const D3D10_BLEND_DESC *pBlendStateDesc, _Out_opt_ ID3D10BlendState **ppBlendState)"
  },
  {
    "label": "CreateDepthStencilState()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateDepthStencilState(_In_ const D3D10_DEPTH_STENCIL_DESC *pDepthStencilDesc, _Out_opt_ ID3D10DepthStencilState **ppDepthStencilState)"
  },
  {
    "label": "CreateRasterizerState()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateRasterizerState(_In_ const D3D10_RASTERIZER_DESC *pRasterizerDesc, _Out_opt_ ID3D10RasterizerState **ppRasterizerState)"
  },
  {
    "label": "CreateSamplerState()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateSamplerState(_In_ const D3D10_SAMPLER_DESC *pSamplerDesc, _Out_opt_ ID3D10SamplerState **ppSamplerState)"
  },
  {
    "label": "CreateQuery()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateQuery(_In_ const D3D10_QUERY_DESC *pQueryDesc, _Out_opt_ ID3D10Query **ppQuery)"
  },
  {
    "label": "CreatePredicate()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreatePredicate(_In_ const D3D10_QUERY_DESC *pPredicateDesc, _Out_opt_ ID3D10Predicate **ppPredicate)"
  },
  {
    "label": "CreateCounter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CreateCounter(_In_ const D3D10_COUNTER_DESC *pCounterDesc, _Out_opt_ ID3D10Counter **ppCounter)"
  },
  {
    "label": "CheckFormatSupport()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CheckFormatSupport(_In_ DXGI_FORMAT Format, _Out_ UINT *pFormatSupport)"
  },
  {
    "label": "CheckMultisampleQualityLevels()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CheckMultisampleQualityLevels(_In_ DXGI_FORMAT Format, _In_ UINT SampleCount, _Out_ UINT *pNumQualityLevels)"
  },
  {
    "label": "CheckCounterInfo()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "CheckCounterInfo(_Out_ D3D10_COUNTER_INFO *pCounterInfo)"
  },
  {
    "label": "CheckCounter()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "CheckCounter(_In_ const D3D10_COUNTER_DESC *pDesc, _Out_ D3D10_COUNTER_TYPE *pType, _Out_ UINT *pActiveCounters, _Out_writes_opt_(*pNameLength) LPSTR szName, _Inout_opt_ UINT *pNameLength, _Out_writes_opt_(*pUnitsLength) LPSTR szUnits, _Inout_opt_ UINT *pUnitsLength, _Out_writes_opt_(*pDescriptionLength) LPSTR szDescription, _Inout_opt_ UINT *pDescriptionLength)"
  },
  {
    "label": "GetCreationFlags()",
    "kind": "Method",
    "detail": "Function (UINT STDMETHODCALLTYPE)",
    "insertText": "GetCreationFlags(void)"
  },
  {
    "label": "OpenSharedResource()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "OpenSharedResource(_In_ HANDLE hResource, _In_ REFIID ReturnedInterface, _Out_opt_ void **ppResource)"
  },
  {
    "label": "SetTextFilterSize()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "SetTextFilterSize(_In_ UINT Width, _In_ UINT Height)"
  },
  {
    "label": "GetTextFilterSize()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "GetTextFilterSize(_Out_opt_ UINT *pWidth, _Out_opt_ UINT *pHeight)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10DeviceVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Device * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Device * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Device * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetConstantBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetShaderResources )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetShader )( ID3D10Device * This, _In_opt_ ID3D10PixelShader *pPixelShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetSamplers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetShader )( ID3D10Device * This, _In_opt_ ID3D10VertexShader *pVertexShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawIndexed )( ID3D10Device * This, _In_ UINT IndexCount, _In_ UINT StartIndexLocation, _In_ INT BaseVertexLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Draw )( ID3D10Device * This, _In_ UINT VertexCount, _In_ UINT StartVertexLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSSetConstantBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetInputLayout )( ID3D10Device * This, _In_opt_ ID3D10InputLayout *pInputLayout)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetVertexBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppVertexBuffers, _In_reads_opt_(NumBuffers) const UINT *pStrides, _In_reads_opt_(NumBuffers) const UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetIndexBuffer )( ID3D10Device * This, _In_opt_ ID3D10Buffer *pIndexBuffer, _In_ DXGI_FORMAT Format, _In_ UINT Offset)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawIndexedInstanced )( ID3D10Device * This, _In_ UINT IndexCountPerInstance, _In_ UINT InstanceCount, _In_ UINT StartIndexLocation, _In_ INT BaseVertexLocation, _In_ UINT StartInstanceLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawInstanced )( ID3D10Device * This, _In_ UINT VertexCountPerInstance, _In_ UINT InstanceCount, _In_ UINT StartVertexLocation, _In_ UINT StartInstanceLocation)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetConstantBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetShader )( ID3D10Device * This, _In_opt_ ID3D10GeometryShader *pShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IASetPrimitiveTopology )( ID3D10Device * This, _In_ D3D10_PRIMITIVE_TOPOLOGY Topology)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetShaderResources )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSSetSamplers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetPredication )( ID3D10Device * This, _In_opt_ ID3D10Predicate *pPredicate, _In_ BOOL PredicateValue)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetShaderResources )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10ShaderResourceView *const *ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSSetSamplers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _In_reads_opt_(NumSamplers) ID3D10SamplerState *const *ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMSetRenderTargets )( ID3D10Device * This, _In_range_( 0, D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ) UINT NumViews, _In_reads_opt_(NumViews) ID3D10RenderTargetView *const *ppRenderTargetViews, _In_opt_ ID3D10DepthStencilView *pDepthStencilView)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMSetBlendState )( ID3D10Device * This, _In_opt_ ID3D10BlendState *pBlendState, _In_ const FLOAT BlendFactor[ 4 ], _In_ UINT SampleMask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMSetDepthStencilState )( ID3D10Device * This, _In_opt_ ID3D10DepthStencilState *pDepthStencilState, _In_ UINT StencilRef)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SOSetTargets )( ID3D10Device * This, _In_range_( 0, D3D10_SO_BUFFER_SLOT_COUNT) UINT NumBuffers, _In_reads_opt_(NumBuffers) ID3D10Buffer *const *ppSOTargets, _In_reads_opt_(NumBuffers) const UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *DrawAuto )( ID3D10Device * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSSetState )( ID3D10Device * This, _In_opt_ ID3D10RasterizerState *pRasterizerState)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSSetViewports )( ID3D10Device * This, _In_range_(0, D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumViewports, _In_reads_opt_(NumViewports) const D3D10_VIEWPORT *pViewports)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSSetScissorRects )( ID3D10Device * This, _In_range_(0, D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PIPELINE) UINT NumRects, _In_reads_opt_(NumRects) const D3D10_RECT *pRects)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *CopySubresourceRegion )( ID3D10Device * This, _In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_ UINT DstX, _In_ UINT DstY, _In_ UINT DstZ, _In_ ID3D10Resource *pSrcResource, _In_ UINT SrcSubresource, _In_opt_ const D3D10_BOX *pSrcBox)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *CopyResource )( ID3D10Device * This, _In_ ID3D10Resource *pDstResource, _In_ ID3D10Resource *pSrcResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *UpdateSubresource )( ID3D10Device * This, _In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_opt_ const D3D10_BOX *pDstBox, _In_ const void *pSrcData, _In_ UINT SrcRowPitch, _In_ UINT SrcDepthPitch)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearRenderTargetView )( ID3D10Device * This, _In_ ID3D10RenderTargetView *pRenderTargetView, _In_ const FLOAT ColorRGBA[ 4 ])"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearDepthStencilView )( ID3D10Device * This, _In_ ID3D10DepthStencilView *pDepthStencilView, _In_ UINT ClearFlags, _In_ FLOAT Depth, _In_ UINT8 Stencil)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GenerateMips )( ID3D10Device * This, _In_ ID3D10ShaderResourceView *pShaderResourceView)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ResolveSubresource )( ID3D10Device * This, _In_ ID3D10Resource *pDstResource, _In_ UINT DstSubresource, _In_ ID3D10Resource *pSrcResource, _In_ UINT SrcSubresource, _In_ DXGI_FORMAT Format)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetConstantBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetShaderResources )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetShader )( ID3D10Device * This, _Out_ ID3D10PixelShader **ppPixelShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetSamplers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetShader )( ID3D10Device * This, _Out_ ID3D10VertexShader **ppVertexShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *PSGetConstantBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetInputLayout )( ID3D10Device * This, _Out_ ID3D10InputLayout **ppInputLayout)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetVertexBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppVertexBuffers, _Out_writes_opt_(NumBuffers) UINT *pStrides, _Out_writes_opt_(NumBuffers) UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetIndexBuffer )( ID3D10Device * This, _Out_opt_ ID3D10Buffer **pIndexBuffer, _Out_opt_ DXGI_FORMAT *Format, _Out_opt_ UINT *Offset)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetConstantBuffers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_CONSTANT_BUFFER_API_SLOT_COUNT - StartSlot ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppConstantBuffers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetShader )( ID3D10Device * This, _Out_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *IAGetPrimitiveTopology )( ID3D10Device * This, _Out_ D3D10_PRIMITIVE_TOPOLOGY *pTopology)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetShaderResources )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *VSGetSamplers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetPredication )( ID3D10Device * This, _Out_opt_ ID3D10Predicate **ppPredicate, _Out_opt_ BOOL *pPredicateValue)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetShaderResources )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_INPUT_RESOURCE_SLOT_COUNT - StartSlot ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10ShaderResourceView **ppShaderResourceViews)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GSGetSamplers )( ID3D10Device * This, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - 1 ) UINT StartSlot, _In_range_( 0, D3D10_COMMONSHADER_SAMPLER_SLOT_COUNT - StartSlot ) UINT NumSamplers, _Out_writes_opt_(NumSamplers) ID3D10SamplerState **ppSamplers)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMGetRenderTargets )( ID3D10Device * This, _In_range_( 0, D3D10_SIMULTANEOUS_RENDER_TARGET_COUNT ) UINT NumViews, _Out_writes_opt_(NumViews) ID3D10RenderTargetView **ppRenderTargetViews, _Out_opt_ ID3D10DepthStencilView **ppDepthStencilView)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMGetBlendState )( ID3D10Device * This, _Out_opt_ ID3D10BlendState **ppBlendState, _Out_opt_ FLOAT BlendFactor[ 4 ], _Out_opt_ UINT *pSampleMask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *OMGetDepthStencilState )( ID3D10Device * This, _Out_opt_ ID3D10DepthStencilState **ppDepthStencilState, _Out_opt_ UINT *pStencilRef)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SOGetTargets )( ID3D10Device * This, _In_range_( 0, D3D10_SO_BUFFER_SLOT_COUNT ) UINT NumBuffers, _Out_writes_opt_(NumBuffers) ID3D10Buffer **ppSOTargets, _Out_writes_opt_(NumBuffers) UINT *pOffsets)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSGetState )( ID3D10Device * This, _Out_ ID3D10RasterizerState **ppRasterizerState)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSGetViewports )( ID3D10Device * This, _Inout_ UINT *NumViewports, _Out_writes_opt_(*NumViewports) D3D10_VIEWPORT *pViewports)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *RSGetScissorRects )( ID3D10Device * This, _Inout_ UINT *NumRects, _Out_writes_opt_(*NumRects) D3D10_RECT *pRects)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDeviceRemovedReason )( ID3D10Device * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetExceptionMode )( ID3D10Device * This, UINT RaiseFlags)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetExceptionMode )( ID3D10Device * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( ID3D10Device * This, _In_ REFGUID guid, _Inout_ UINT *pDataSize, _Out_writes_bytes_opt_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( ID3D10Device * This, _In_ REFGUID guid, _In_ UINT DataSize, _In_reads_bytes_opt_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( ID3D10Device * This, _In_ REFGUID guid, _In_opt_ const IUnknown *pData)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ClearState )( ID3D10Device * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Flush )( ID3D10Device * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateBuffer )( ID3D10Device * This, _In_ const D3D10_BUFFER_DESC *pDesc, _In_opt_ const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_opt_ ID3D10Buffer **ppBuffer)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateTexture1D )( ID3D10Device * This, _In_ const D3D10_TEXTURE1D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture1D **ppTexture1D)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateTexture2D )( ID3D10Device * This, _In_ const D3D10_TEXTURE2D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels * pDesc->ArraySize)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture2D **ppTexture2D)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateTexture3D )( ID3D10Device * This, _In_ const D3D10_TEXTURE3D_DESC *pDesc, _In_reads_opt_(_Inexpressible_(pDesc->MipLevels)) const D3D10_SUBRESOURCE_DATA *pInitialData, _Out_ ID3D10Texture3D **ppTexture3D)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateShaderResourceView )( ID3D10Device * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_SHADER_RESOURCE_VIEW_DESC *pDesc, _Out_opt_ ID3D10ShaderResourceView **ppSRView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateRenderTargetView )( ID3D10Device * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_RENDER_TARGET_VIEW_DESC *pDesc, _Out_opt_ ID3D10RenderTargetView **ppRTView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateDepthStencilView )( ID3D10Device * This, _In_ ID3D10Resource *pResource, _In_opt_ const D3D10_DEPTH_STENCIL_VIEW_DESC *pDesc, _Out_opt_ ID3D10DepthStencilView **ppDepthStencilView)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateInputLayout )( ID3D10Device * This, _In_reads_(NumElements) const D3D10_INPUT_ELEMENT_DESC *pInputElementDescs, _In_range_( 0, D3D10_1_IA_VERTEX_INPUT_STRUCTURE_ELEMENT_COUNT ) UINT NumElements, _In_reads_(BytecodeLength) const void *pShaderBytecodeWithInputSignature, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10InputLayout **ppInputLayout)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateVertexShader )( ID3D10Device * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10VertexShader **ppVertexShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateGeometryShader )( ID3D10Device * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateGeometryShaderWithStreamOutput )( ID3D10Device * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _In_reads_opt_(NumEntries) const D3D10_SO_DECLARATION_ENTRY *pSODeclaration, _In_range_( 0, D3D10_SO_SINGLE_BUFFER_COMPONENT_LIMIT ) UINT NumEntries, _In_ UINT OutputStreamStride, _Out_opt_ ID3D10GeometryShader **ppGeometryShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreatePixelShader )( ID3D10Device * This, _In_reads_(BytecodeLength) const void *pShaderBytecode, _In_ SIZE_T BytecodeLength, _Out_opt_ ID3D10PixelShader **ppPixelShader)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateBlendState )( ID3D10Device * This, _In_ const D3D10_BLEND_DESC *pBlendStateDesc, _Out_opt_ ID3D10BlendState **ppBlendState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateDepthStencilState )( ID3D10Device * This, _In_ const D3D10_DEPTH_STENCIL_DESC *pDepthStencilDesc, _Out_opt_ ID3D10DepthStencilState **ppDepthStencilState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateRasterizerState )( ID3D10Device * This, _In_ const D3D10_RASTERIZER_DESC *pRasterizerDesc, _Out_opt_ ID3D10RasterizerState **ppRasterizerState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSamplerState )( ID3D10Device * This, _In_ const D3D10_SAMPLER_DESC *pSamplerDesc, _Out_opt_ ID3D10SamplerState **ppSamplerState)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateQuery )( ID3D10Device * This, _In_ const D3D10_QUERY_DESC *pQueryDesc, _Out_opt_ ID3D10Query **ppQuery)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreatePredicate )( ID3D10Device * This, _In_ const D3D10_QUERY_DESC *pPredicateDesc, _Out_opt_ ID3D10Predicate **ppPredicate)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateCounter )( ID3D10Device * This, _In_ const D3D10_COUNTER_DESC *pCounterDesc, _Out_opt_ ID3D10Counter **ppCounter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckFormatSupport )( ID3D10Device * This, _In_ DXGI_FORMAT Format, _Out_ UINT *pFormatSupport)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckMultisampleQualityLevels )( ID3D10Device * This, _In_ DXGI_FORMAT Format, _In_ UINT SampleCount, _Out_ UINT *pNumQualityLevels)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *CheckCounterInfo )( ID3D10Device * This, _Out_ D3D10_COUNTER_INFO *pCounterInfo)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckCounter )( ID3D10Device * This, _In_ const D3D10_COUNTER_DESC *pDesc, _Out_ D3D10_COUNTER_TYPE *pType, _Out_ UINT *pActiveCounters, _Out_writes_opt_(*pNameLength) LPSTR szName, _Inout_opt_ UINT *pNameLength, _Out_writes_opt_(*pUnitsLength) LPSTR szUnits, _Inout_opt_ UINT *pUnitsLength, _Out_writes_opt_(*pDescriptionLength) LPSTR szDescription, _Inout_opt_ UINT *pDescriptionLength)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetCreationFlags )( ID3D10Device * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *OpenSharedResource )( ID3D10Device * This, _In_ HANDLE hResource, _In_ REFIID ReturnedInterface, _Out_opt_ void **ppResource)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *SetTextFilterSize )( ID3D10Device * This, _In_ UINT Width, _In_ UINT Height)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *GetTextFilterSize )( ID3D10Device * This, _Out_opt_ UINT *pWidth, _Out_opt_ UINT *pHeight)"
  },
  {
    "label": "ID3D10Device_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10DeviceVtbl ; interface ID3D10Device { CONST_VTBL struct ID3D10DeviceVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Device_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Device_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Device_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Device_VSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> VSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device_PSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> PSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device_PSSetShader(This,pPixelShader) \\ ( (This)->lpVtbl -> PSSetShader(This,pPixelShader) ) #define ID3D10Device_PSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> PSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device_VSSetShader(This,pVertexShader) \\ ( (This)->lpVtbl -> VSSetShader(This,pVertexShader) ) #define ID3D10Device_DrawIndexed(This,IndexCount,StartIndexLocation,BaseVertexLocation) \\ ( (This)->lpVtbl -> DrawIndexed(This,IndexCount,StartIndexLocation,BaseVertexLocation) ) #define ID3D10Device_Draw(This,VertexCount,StartVertexLocation) \\ ( (This)->lpVtbl -> Draw(This,VertexCount,StartVertexLocation) ) #define ID3D10Device_PSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> PSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device_IASetInputLayout(This,pInputLayout) \\ ( (This)->lpVtbl -> IASetInputLayout(This,pInputLayout) ) #define ID3D10Device_IASetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) \\ ( (This)->lpVtbl -> IASetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) ) #define ID3D10Device_IASetIndexBuffer(This,pIndexBuffer,Format,Offset) \\ ( (This)->lpVtbl -> IASetIndexBuffer(This,pIndexBuffer,Format,Offset) ) #define ID3D10Device_DrawIndexedInstanced(This,IndexCountPerInstance,InstanceCount,StartIndexLocation,BaseVertexLocation,StartInstanceLocation) \\ ( (This)->lpVtbl -> DrawIndexedInstanced(This,IndexCountPerInstance,InstanceCount,StartIndexLocation,BaseVertexLocation,StartInstanceLocation) ) #define ID3D10Device_DrawInstanced(This,VertexCountPerInstance,InstanceCount,StartVertexLocation,StartInstanceLocation) \\ ( (This)->lpVtbl -> DrawInstanced(This,VertexCountPerInstance,InstanceCount,StartVertexLocation,StartInstanceLocation) ) #define ID3D10Device_GSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> GSSetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device_GSSetShader(This,pShader) \\ ( (This)->lpVtbl -> GSSetShader(This,pShader) ) #define ID3D10Device_IASetPrimitiveTopology(This,Topology) \\ ( (This)->lpVtbl -> IASetPrimitiveTopology(This,Topology) ) #define ID3D10Device_VSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> VSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device_VSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> VSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device_SetPredication(This,pPredicate,PredicateValue) \\ ( (This)->lpVtbl -> SetPredication(This,pPredicate,PredicateValue) ) #define ID3D10Device_GSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> GSSetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device_GSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> GSSetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device_OMSetRenderTargets(This,NumViews,ppRenderTargetViews,pDepthStencilView) \\ ( (This)->lpVtbl -> OMSetRenderTargets(This,NumViews,ppRenderTargetViews,pDepthStencilView) ) #define ID3D10Device_OMSetBlendState(This,pBlendState,BlendFactor,SampleMask) \\ ( (This)->lpVtbl -> OMSetBlendState(This,pBlendState,BlendFactor,SampleMask) ) #define ID3D10Device_OMSetDepthStencilState(This,pDepthStencilState,StencilRef) \\ ( (This)->lpVtbl -> OMSetDepthStencilState(This,pDepthStencilState,StencilRef) ) #define ID3D10Device_SOSetTargets(This,NumBuffers,ppSOTargets,pOffsets) \\ ( (This)->lpVtbl -> SOSetTargets(This,NumBuffers,ppSOTargets,pOffsets) ) #define ID3D10Device_DrawAuto(This) \\ ( (This)->lpVtbl -> DrawAuto(This) ) #define ID3D10Device_RSSetState(This,pRasterizerState) \\ ( (This)->lpVtbl -> RSSetState(This,pRasterizerState) ) #define ID3D10Device_RSSetViewports(This,NumViewports,pViewports) \\ ( (This)->lpVtbl -> RSSetViewports(This,NumViewports,pViewports) ) #define ID3D10Device_RSSetScissorRects(This,NumRects,pRects) \\ ( (This)->lpVtbl -> RSSetScissorRects(This,NumRects,pRects) ) #define ID3D10Device_CopySubresourceRegion(This,pDstResource,DstSubresource,DstX,DstY,DstZ,pSrcResource,SrcSubresource,pSrcBox) \\ ( (This)->lpVtbl -> CopySubresourceRegion(This,pDstResource,DstSubresource,DstX,DstY,DstZ,pSrcResource,SrcSubresource,pSrcBox) ) #define ID3D10Device_CopyResource(This,pDstResource,pSrcResource) \\ ( (This)->lpVtbl -> CopyResource(This,pDstResource,pSrcResource) ) #define ID3D10Device_UpdateSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch) \\ ( (This)->lpVtbl -> UpdateSubresource(This,pDstResource,DstSubresource,pDstBox,pSrcData,SrcRowPitch,SrcDepthPitch) ) #define ID3D10Device_ClearRenderTargetView(This,pRenderTargetView,ColorRGBA) \\ ( (This)->lpVtbl -> ClearRenderTargetView(This,pRenderTargetView,ColorRGBA) ) #define ID3D10Device_ClearDepthStencilView(This,pDepthStencilView,ClearFlags,Depth,Stencil) \\ ( (This)->lpVtbl -> ClearDepthStencilView(This,pDepthStencilView,ClearFlags,Depth,Stencil) ) #define ID3D10Device_GenerateMips(This,pShaderResourceView) \\ ( (This)->lpVtbl -> GenerateMips(This,pShaderResourceView) ) #define ID3D10Device_ResolveSubresource(This,pDstResource,DstSubresource,pSrcResource,SrcSubresource,Format) \\ ( (This)->lpVtbl -> ResolveSubresource(This,pDstResource,DstSubresource,pSrcResource,SrcSubresource,Format) ) #define ID3D10Device_VSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> VSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device_PSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> PSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device_PSGetShader(This,ppPixelShader) \\ ( (This)->lpVtbl -> PSGetShader(This,ppPixelShader) ) #define ID3D10Device_PSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> PSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device_VSGetShader(This,ppVertexShader) \\ ( (This)->lpVtbl -> VSGetShader(This,ppVertexShader) ) #define ID3D10Device_PSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> PSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device_IAGetInputLayout(This,ppInputLayout) \\ ( (This)->lpVtbl -> IAGetInputLayout(This,ppInputLayout) ) #define ID3D10Device_IAGetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) \\ ( (This)->lpVtbl -> IAGetVertexBuffers(This,StartSlot,NumBuffers,ppVertexBuffers,pStrides,pOffsets) ) #define ID3D10Device_IAGetIndexBuffer(This,pIndexBuffer,Format,Offset) \\ ( (This)->lpVtbl -> IAGetIndexBuffer(This,pIndexBuffer,Format,Offset) ) #define ID3D10Device_GSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) \\ ( (This)->lpVtbl -> GSGetConstantBuffers(This,StartSlot,NumBuffers,ppConstantBuffers) ) #define ID3D10Device_GSGetShader(This,ppGeometryShader) \\ ( (This)->lpVtbl -> GSGetShader(This,ppGeometryShader) ) #define ID3D10Device_IAGetPrimitiveTopology(This,pTopology) \\ ( (This)->lpVtbl -> IAGetPrimitiveTopology(This,pTopology) ) #define ID3D10Device_VSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> VSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device_VSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> VSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device_GetPredication(This,ppPredicate,pPredicateValue) \\ ( (This)->lpVtbl -> GetPredication(This,ppPredicate,pPredicateValue) ) #define ID3D10Device_GSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) \\ ( (This)->lpVtbl -> GSGetShaderResources(This,StartSlot,NumViews,ppShaderResourceViews) ) #define ID3D10Device_GSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) \\ ( (This)->lpVtbl -> GSGetSamplers(This,StartSlot,NumSamplers,ppSamplers) ) #define ID3D10Device_OMGetRenderTargets(This,NumViews,ppRenderTargetViews,ppDepthStencilView) \\ ( (This)->lpVtbl -> OMGetRenderTargets(This,NumViews,ppRenderTargetViews,ppDepthStencilView) ) #define ID3D10Device_OMGetBlendState(This,ppBlendState,BlendFactor,pSampleMask) \\ ( (This)->lpVtbl -> OMGetBlendState(This,ppBlendState,BlendFactor,pSampleMask) ) #define ID3D10Device_OMGetDepthStencilState(This,ppDepthStencilState,pStencilRef) \\ ( (This)->lpVtbl -> OMGetDepthStencilState(This,ppDepthStencilState,pStencilRef) ) #define ID3D10Device_SOGetTargets(This,NumBuffers,ppSOTargets,pOffsets) \\ ( (This)->lpVtbl -> SOGetTargets(This,NumBuffers,ppSOTargets,pOffsets) ) #define ID3D10Device_RSGetState(This,ppRasterizerState) \\ ( (This)->lpVtbl -> RSGetState(This,ppRasterizerState) ) #define ID3D10Device_RSGetViewports(This,NumViewports,pViewports) \\ ( (This)->lpVtbl -> RSGetViewports(This,NumViewports,pViewports) ) #define ID3D10Device_RSGetScissorRects(This,NumRects,pRects) \\ ( (This)->lpVtbl -> RSGetScissorRects(This,NumRects,pRects) ) #define ID3D10Device_GetDeviceRemovedReason(This) \\ ( (This)->lpVtbl -> GetDeviceRemovedReason(This) ) #define ID3D10Device_SetExceptionMode(This,RaiseFlags) \\ ( (This)->lpVtbl -> SetExceptionMode(This,RaiseFlags) ) #define ID3D10Device_GetExceptionMode(This) \\ ( (This)->lpVtbl -> GetExceptionMode(This) ) #define ID3D10Device_GetPrivateData(This,guid,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,guid,pDataSize,pData) ) #define ID3D10Device_SetPrivateData(This,guid,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,guid,DataSize,pData) ) #define ID3D10Device_SetPrivateDataInterface(This,guid,pData) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,guid,pData) ) #define ID3D10Device_ClearState(This) \\ ( (This)->lpVtbl -> ClearState(This) ) #define ID3D10Device_Flush(This) \\ ( (This)->lpVtbl -> Flush(This) ) #define ID3D10Device_CreateBuffer(This,pDesc,pInitialData,ppBuffer) \\ ( (This)->lpVtbl -> CreateBuffer(This,pDesc,pInitialData,ppBuffer) ) #define ID3D10Device_CreateTexture1D(This,pDesc,pInitialData,ppTexture1D) \\ ( (This)->lpVtbl -> CreateTexture1D(This,pDesc,pInitialData,ppTexture1D) ) #define ID3D10Device_CreateTexture2D(This,pDesc,pInitialData,ppTexture2D) \\ ( (This)->lpVtbl -> CreateTexture2D(This,pDesc,pInitialData,ppTexture2D) ) #define ID3D10Device_CreateTexture3D(This,pDesc,pInitialData,ppTexture3D) \\ ( (This)->lpVtbl -> CreateTexture3D(This,pDesc,pInitialData,ppTexture3D) ) #define ID3D10Device_CreateShaderResourceView(This,pResource,pDesc,ppSRView) \\ ( (This)->lpVtbl -> CreateShaderResourceView(This,pResource,pDesc,ppSRView) ) #define ID3D10Device_CreateRenderTargetView(This,pResource,pDesc,ppRTView) \\ ( (This)->lpVtbl -> CreateRenderTargetView(This,pResource,pDesc,ppRTView) ) #define ID3D10Device_CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView) \\ ( (This)->lpVtbl -> CreateDepthStencilView(This,pResource,pDesc,ppDepthStencilView) ) #define ID3D10Device_CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout) \\ ( (This)->lpVtbl -> CreateInputLayout(This,pInputElementDescs,NumElements,pShaderBytecodeWithInputSignature,BytecodeLength,ppInputLayout) ) #define ID3D10Device_CreateVertexShader(This,pShaderBytecode,BytecodeLength,ppVertexShader) \\ ( (This)->lpVtbl -> CreateVertexShader(This,pShaderBytecode,BytecodeLength,ppVertexShader) ) #define ID3D10Device_CreateGeometryShader(This,pShaderBytecode,BytecodeLength,ppGeometryShader) \\ ( (This)->lpVtbl -> CreateGeometryShader(This,pShaderBytecode,BytecodeLength,ppGeometryShader) ) #define ID3D10Device_CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,OutputStreamStride,ppGeometryShader) \\ ( (This)->lpVtbl -> CreateGeometryShaderWithStreamOutput(This,pShaderBytecode,BytecodeLength,pSODeclaration,NumEntries,OutputStreamStride,ppGeometryShader) ) #define ID3D10Device_CreatePixelShader(This,pShaderBytecode,BytecodeLength,ppPixelShader) \\ ( (This)->lpVtbl -> CreatePixelShader(This,pShaderBytecode,BytecodeLength,ppPixelShader) ) #define ID3D10Device_CreateBlendState(This,pBlendStateDesc,ppBlendState) \\ ( (This)->lpVtbl -> CreateBlendState(This,pBlendStateDesc,ppBlendState) ) #define ID3D10Device_CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState) \\ ( (This)->lpVtbl -> CreateDepthStencilState(This,pDepthStencilDesc,ppDepthStencilState) ) #define ID3D10Device_CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState) \\ ( (This)->lpVtbl -> CreateRasterizerState(This,pRasterizerDesc,ppRasterizerState) ) #define ID3D10Device_CreateSamplerState(This,pSamplerDesc,ppSamplerState) \\ ( (This)->lpVtbl -> CreateSamplerState(This,pSamplerDesc,ppSamplerState) ) #define ID3D10Device_CreateQuery(This,pQueryDesc,ppQuery) \\ ( (This)->lpVtbl -> CreateQuery(This,pQueryDesc,ppQuery) ) #define ID3D10Device_CreatePredicate(This,pPredicateDesc,ppPredicate) \\ ( (This)->lpVtbl -> CreatePredicate(This,pPredicateDesc,ppPredicate) ) #define ID3D10Device_CreateCounter(This,pCounterDesc,ppCounter) \\ ( (This)->lpVtbl -> CreateCounter(This,pCounterDesc,ppCounter) ) #define ID3D10Device_CheckFormatSupport(This,Format,pFormatSupport) \\ ( (This)->lpVtbl -> CheckFormatSupport(This,Format,pFormatSupport) ) #define ID3D10Device_CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels) \\ ( (This)->lpVtbl -> CheckMultisampleQualityLevels(This,Format,SampleCount,pNumQualityLevels) ) #define ID3D10Device_CheckCounterInfo(This,pCounterInfo) \\ ( (This)->lpVtbl -> CheckCounterInfo(This,pCounterInfo) ) #define ID3D10Device_CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength) \\ ( (This)->lpVtbl -> CheckCounter(This,pDesc,pType,pActiveCounters,szName,pNameLength,szUnits,pUnitsLength,szDescription,pDescriptionLength) ) #define ID3D10Device_GetCreationFlags(This) \\ ( (This)->lpVtbl -> GetCreationFlags(This) ) #define ID3D10Device_OpenSharedResource(This,hResource,ReturnedInterface,ppResource) \\ ( (This)->lpVtbl -> OpenSharedResource(This,hResource,ReturnedInterface,ppResource) ) #define ID3D10Device_SetTextFilterSize(This,Width,Height) \\ ( (This)->lpVtbl -> SetTextFilterSize(This,Width,Height) ) #define ID3D10Device_GetTextFilterSize(This,pWidth,pHeight) \\ ( (This)->lpVtbl -> GetTextFilterSize(This,pWidth,pHeight) ) #endif #endif #endif #endif #pragma endregion #pragma region Application Family #pragma region Application Family #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (RPC_IF_HANDLE __MIDL_itf_d3d10_0000_0023_v0_0_s_ifspec ; # ifndef __ID3D10Multithread_INTERFACE_DEFINED__ # define __ID3D10Multithread_INTERFACE_DEFINED__ EXTERN_C const IID IID_ID3D10Multithread ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"9B7E4E00-342C-4106-A19F-4F2704F689F0\")"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (public : void STDMETHODCALLTYPE)",
    "insertText": "Enter(void)"
  },
  {
    "label": "Leave()",
    "kind": "Method",
    "detail": "Function (void STDMETHODCALLTYPE)",
    "insertText": "Leave(void)"
  },
  {
    "label": "SetMultithreadProtected()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "SetMultithreadProtected(_In_ BOOL bMTProtect)"
  },
  {
    "label": "GetMultithreadProtected()",
    "kind": "Method",
    "detail": "Function (BOOL STDMETHODCALLTYPE)",
    "insertText": "GetMultithreadProtected(void)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct ID3D10MultithreadVtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( ID3D10Multithread * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( ID3D10Multithread * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( ID3D10Multithread * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Enter )( ID3D10Multithread * This)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Leave )( ID3D10Multithread * This)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *SetMultithreadProtected )( ID3D10Multithread * This, _In_ BOOL bMTProtect)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *GetMultithreadProtected )( ID3D10Multithread * This)"
  },
  {
    "label": "ID3D10Multithread_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } ID3D10MultithreadVtbl ; interface ID3D10Multithread { CONST_VTBL struct ID3D10MultithreadVtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "ID3D10Multithread_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define ID3D10Multithread_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define ID3D10Multithread_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define ID3D10Multithread_Enter(This) \\ ( (This)->lpVtbl -> Enter(This) ) #define ID3D10Multithread_Leave(This) \\ ( (This)->lpVtbl -> Leave(This) ) #define ID3D10Multithread_SetMultithreadProtected(This,bMTProtect) \\ ( (This)->lpVtbl -> SetMultithreadProtected(This,bMTProtect) ) #define ID3D10Multithread_GetMultithreadProtected(This) \\ ( (This)->lpVtbl -> GetMultithreadProtected(This) ) #endif #endif #endif #endif #pragma endregion #pragma endregion #pragma region Desktop Family #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)"
  },
  {
    "label": "D3D10_SDK_VERSION()",
    "kind": "Method",
    "detail": "Function (D3D10_CREATE_DEVICE_SINGLETHREADED = 0 x1,D3D10_CREATE_DEVICE_DEBUG = 0 x2,D3D10_CREATE_DEVICE_SWITCH_TO_REF = 0 x4,D3D10_CREATE_DEVICE_PREVENT_INTERNAL_THREADING_OPTIMIZATIONS = 0 x8,D3D10_CREATE_DEVICE_ALLOW_NULL_FROM_MAP = 0 x10,D3D10_CREATE_DEVICE_BGRA_SUPPORT = 0 x20,D3D10_CREATE_DEVICE_PREVENT_ALTERING_LAYER_SETTINGS_FROM_REGISTRY = 0 x80,D3D10_CREATE_DEVICE_STRICT_VALIDATION = 0 x200,D3D10_CREATE_DEVICE_DEBUGGABLE = 0 x400 } D3D10_CREATE_DEVICE_FLAG ; # define)",
    "insertText": "D3D10_SDK_VERSION(29 ) #if !defined( D3D10_IGNORE_SDK_LAYERS ) #include \"d3d10sdklayers.h\" #endif #include \"d3d10misc.h\" #include \"d3d10shader.h\" #include \"d3d10effect.h\" #endif #pragma endregion DEFINE_GUID(IID_ID3D10DeviceChild,0x9B7E4C00,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10DepthStencilState,0x2B4B1CC8,0xA4AD,0x41f8,0x83,0x22,0xCA,0x86,0xFC,0x3E,0xC6,0x75)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10BlendState,0xEDAD8D19,0x8A35,0x4d6d,0x85,0x66,0x2E,0xA2,0x76,0xCD,0xE1,0x61)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10RasterizerState,0xA2A07292,0x89AF,0x4345,0xBE,0x2E,0xC5,0x3D,0x9F,0xBB,0x6E,0x9F)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Resource,0x9B7E4C01,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Buffer,0x9B7E4C02,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Texture1D,0x9B7E4C03,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Texture2D,0x9B7E4C04,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Texture3D,0x9B7E4C05,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10View,0xC902B03F,0x60A7,0x49BA,0x99,0x36,0x2A,0x3A,0xB3,0x7A,0x7E,0x33)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10ShaderResourceView,0x9B7E4C07,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10RenderTargetView,0x9B7E4C08,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10DepthStencilView,0x9B7E4C09,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10VertexShader,0x9B7E4C0A,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10GeometryShader,0x6316BE88,0x54CD,0x4040,0xAB,0x44,0x20,0x46,0x1B,0xC8,0x1F,0x68)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10PixelShader,0x4968B601,0x9D00,0x4cde,0x83,0x46,0x8E,0x7F,0x67,0x58,0x19,0xB6)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10InputLayout,0x9B7E4C0B,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10SamplerState,0x9B7E4C0C,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Asynchronous,0x9B7E4C0D,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Query,0x9B7E4C0E,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Predicate,0x9B7E4C10,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Counter,0x9B7E4C11,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Device,0x9B7E4C0F,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_ID3D10Multithread,0x9B7E4E00,0x342C,0x4106,0xA1,0x9F,0x4F,0x27,0x04,0xF6,0x89,0xF0)"
  }
]