[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "MachPortRendezvousServerTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachPortRendezvousServerTest"
  },
  {
    "label": "MachPortRendezvousFuzzer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MachPortRendezvousFuzzer"
  },
  {
    "label": "ClientData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ClientData"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "MachRendezvousPort()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "MachRendezvousPort(mac::ScopedMachSendRight send_right)"
  },
  {
    "label": "MachRendezvousPort()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "MachRendezvousPort(mac::ScopedMachReceiveRight receive_right)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy()"
  },
  {
    "label": "HandleRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRequest()"
  },
  {
    "label": "PortsForPid()",
    "kind": "Method",
    "detail": "Function (MachPortsForRendezvous)",
    "insertText": "PortsForPid(pid_t pid)"
  },
  {
    "label": "OnClientExited()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClientExited(pid_t pid)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (client_data_)",
    "insertText": "GUARDED_BY(lock_)"
  },
  {
    "label": "TakeSendRight()",
    "kind": "Method",
    "detail": "Function (mac::ScopedMachSendRight)",
    "insertText": "TakeSendRight(MachPortsForRendezvous::key_type key)"
  },
  {
    "label": "TakeReceiveRight()",
    "kind": "Method",
    "detail": "Function (mac::ScopedMachReceiveRight)",
    "insertText": "TakeReceiveRight(\n      MachPortsForRendezvous::key_type key)"
  },
  {
    "label": "GetPortCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetPortCount()"
  },
  {
    "label": "GetBootstrapName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetBootstrapName()"
  },
  {
    "label": "MachPortRendezvousClient()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "MachPortRendezvousClient()"
  },
  {
    "label": "AcquirePorts()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AcquirePorts()"
  },
  {
    "label": "PortForKey()",
    "kind": "Method",
    "detail": "Function (MachRendezvousPort)",
    "insertText": "PortForKey(MachPortsForRendezvous::key_type key)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (ports_)",
    "insertText": "GUARDED_BY(lock_)"
  }
]