[
  {
    "label": "InjectionDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InjectionDelegate"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "InjectionArc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InjectionArc"
  },
  {
    "label": "Duplicate()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_POSIX_FILE_DESCRIPTOR_SHUFFLE_H_ # define BASE_POSIX_FILE_DESCRIPTOR_SHUFFLE_H_ # include<vector> # include \" base / base_export . h \" # include \" base / compiler_specific . h \" namespace base { class InjectionDelegate { public : bool)",
    "insertText": "Duplicate(int* result, int fd)"
  },
  {
    "label": "Move()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Move(int src, int dest)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(int fd)"
  },
  {
    "label": "InjectionDelegate()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "InjectionDelegate()"
  },
  {
    "label": "InjectionArc()",
    "kind": "Method",
    "detail": "Function (} ; struct InjectionArc {)",
    "insertText": "InjectionArc(int in_source, int in_dest, bool in_close) : source(in_source), dest(in_dest), close(in_close)"
  },
  {
    "label": "PerformInjectiveMultimap()",
    "kind": "Method",
    "detail": "Function (} int source ; int dest ; bool close ; } ; typedef std::vector<InjectionArc> InjectiveMultimap ; BASE_EXPORT bool)",
    "insertText": "PerformInjectiveMultimap(const InjectiveMultimap& map, InjectionDelegate* delegate)"
  },
  {
    "label": "PerformInjectiveMultimapDestructive()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT bool)",
    "insertText": "PerformInjectiveMultimapDestructive(InjectiveMultimap* map, InjectionDelegate* delegate)"
  },
  {
    "label": "ShuffleFileDescriptors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShuffleFileDescriptors(InjectiveMultimap* map)"
  },
  {
    "label": "PerformInjectiveMultimapDestructive()",
    "kind": "Method",
    "detail": "Function (FileDescriptorTableInjection delegate ; return)",
    "insertText": "PerformInjectiveMultimapDestructive(map, &delegate)"
  }
]