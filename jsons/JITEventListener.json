[
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "MachineFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineFunction"
  },
  {
    "label": "OProfileWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OProfileWrapper"
  },
  {
    "label": "IntelJITEventsWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntelJITEventsWrapper"
  },
  {
    "label": "ObjectFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ObjectFile"
  },
  {
    "label": "JITEvent_EmittedFunctionDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "JITEvent_EmittedFunctionDetails"
  },
  {
    "label": "LineStart",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LineStart"
  },
  {
    "label": "JITEventListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JITEventListener"
  },
  {
    "label": "JITEventListener()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_EXECUTIONENGINE_JITEVENTLISTENER_H # define LLVM_EXECUTIONENGINE_JITEVENTLISTENER_H # include \" RuntimeDyld . h \" # include \" llvm / Config / llvm - config . h \" # include \" llvm / IR / DebugLoc . h \" # include \" llvm / Support / DataTypes . h \" # include<vector> namespace llvm { class Function ; class MachineFunction ; class OProfileWrapper ; class IntelJITEventsWrapper ; namespace object { class ObjectFile ; } struct JITEvent_EmittedFunctionDetails { struct LineStart { uintptr_t Address ; DebugLoc Loc ; } ; const MachineFunction* MF ; std::vector<LineStart> LineStarts ; } ; class JITEventListener { public : typedef JITEvent_EmittedFunctionDetails EmittedFunctionDetails ; public :)",
    "insertText": "JITEventListener()"
  },
  {
    "label": "NotifyObjectEmitted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyObjectEmitted(const object::ObjectFile &Obj, const RuntimeDyld::LoadedObjectInfo &L)"
  },
  {
    "label": "NotifyFreeingObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyFreeingObject(const object::ObjectFile &Obj)"
  },
  {
    "label": "createGDBRegistrationListener()",
    "kind": "Method",
    "detail": "Function (} JITEventListener*)",
    "insertText": "createGDBRegistrationListener()"
  },
  {
    "label": "createIntelJITEventListener()",
    "kind": "Method",
    "detail": "Function (# if LLVM_USE_INTEL_JITEVENTS JITEventListener*)",
    "insertText": "createIntelJITEventListener()"
  },
  {
    "label": "createIntelJITEventListener()",
    "kind": "Method",
    "detail": "Function (JITEventListener*)",
    "insertText": "createIntelJITEventListener(IntelJITEventsWrapper* AlternativeImpl)"
  },
  {
    "label": "createOProfileJITEventListener()",
    "kind": "Method",
    "detail": "Function (JITEventListener*)",
    "insertText": "createOProfileJITEventListener(OProfileWrapper* AlternativeImpl)"
  },
  {
    "label": "createOProfileJITEventListener()",
    "kind": "Method",
    "detail": "Function (# else JITEventListener*)",
    "insertText": "createOProfileJITEventListener()"
  }
]