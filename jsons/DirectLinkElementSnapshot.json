[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "IReferenceResolutionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IReferenceResolutionProvider"
  },
  {
    "label": "ISceneGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneGraphNode"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DIRECTLINK_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DIRECTLINK_API"
  },
  {
    "label": "FReferenceGroup",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReferenceGroup"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" DirectLinkCommon . h \" # include \" DirectLinkParameterStore . h \" # include \" UObject / NameTypes . h \" class FArchive ; namespace DirectLink { class IReferenceResolutionProvider ; class ISceneGraphNode ; enum class ESerializationStatus { Ok,StreamError,VersionMinNotRespected,VersionMaxNotRespected,} ; struct FReferenceSnapshot { void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Hash()",
    "kind": "Method",
    "detail": "Function (FElementHash)",
    "insertText": "Hash()"
  },
  {
    "label": "FElementSnapshot()",
    "kind": "Method",
    "detail": "Function (struct FReferenceGroup { FName Name ; TArray<FSceneGraphId> ReferencedIds ; } ; TArray<FReferenceGroup> Groups ; } ; class FElementSnapshot { public :)",
    "insertText": "FElementSnapshot()"
  },
  {
    "label": "FElementSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FElementSnapshot(const ISceneGraphNode& Node)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FElementSnapshot& This)"
  },
  {
    "label": "GetHash()",
    "kind": "Method",
    "detail": "Function (FElementHash)",
    "insertText": "GetHash()"
  },
  {
    "label": "GetDataHash()",
    "kind": "Method",
    "detail": "Function (FElementHash)",
    "insertText": "GetDataHash()"
  },
  {
    "label": "GetRefHash()",
    "kind": "Method",
    "detail": "Function (FElementHash)",
    "insertText": "GetRefHash()"
  },
  {
    "label": "UpdateNodeReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNodeReferences(IReferenceResolutionProvider& Resolver, ISceneGraphNode& Node)"
  },
  {
    "label": "UpdateNodeData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNodeData(ISceneGraphNode& Node)"
  },
  {
    "label": "GetNodeId()",
    "kind": "Method",
    "detail": "Function (FSceneGraphId)",
    "insertText": "GetNodeId()"
  }
]