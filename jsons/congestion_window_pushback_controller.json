[
  {
    "label": "CongestionWindowPushbackController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CongestionWindowPushbackController"
  },
  {
    "label": "CongestionWindowPushbackController()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_CONGESTION_CONTROLLER_GOOG_CC_CONGESTION_WINDOW_PUSHBACK_CONTROLLER_H_ # define MODULES_CONGESTION_CONTROLLER_GOOG_CC_CONGESTION_WINDOW_PUSHBACK_CONTROLLER_H_ # include<stddef . h> # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / field_trials_view . h \" # include \" api / units / data_size . h \" namespace webrtc { class CongestionWindowPushbackController { public :)",
    "insertText": "CongestionWindowPushbackController(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "UpdateOutstandingData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOutstandingData(int64_t outstanding_bytes)"
  },
  {
    "label": "UpdatePacingQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePacingQueue(int64_t pacing_bytes)"
  },
  {
    "label": "UpdateTargetBitrate()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "UpdateTargetBitrate(uint32_t bitrate_bps)"
  },
  {
    "label": "SetDataWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataWindow(DataSize data_window)"
  }
]