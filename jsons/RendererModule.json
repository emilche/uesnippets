[
  {
    "label": "FHitProxyId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHitProxyId"
  },
  {
    "label": "FLightCacheInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLightCacheInterface"
  },
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FPrimitiveSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneInfo"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FSceneViewStateInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewStateInterface"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FSceneUniformBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneUniformBuffer"
  },
  {
    "label": "FMeshBatch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBatch"
  },
  {
    "label": "FSynthBenchmarkResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSynthBenchmarkResults"
  },
  {
    "label": "FSceneTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneTextures"
  },
  {
    "label": "ResourceType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ResourceType"
  },
  {
    "label": "TGlobalResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGlobalResource"
  },
  {
    "label": "FRendererModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRendererModule"
  },
  {
    "label": "FSceneViewInitOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneViewInitOptions"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RendererInterface . h \" # include \" Shader . h \" class FHitProxyId ; class FLightCacheInterface ; class FMaterial ; class FPrimitiveSceneInfo ; class FSceneInterface ; class FSceneView ; class FSceneViewFamily ; class FSceneViewStateInterface ; class FViewInfo ; class FSceneUniformBuffer ; struct FMeshBatch ; struct FSynthBenchmarkResults ; struct FSceneTextures ; template<class ResourceType,FRenderResource::EInitPhase> class TGlobalResource ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogRenderer, Log, All)"
  },
  {
    "label": "FRendererModule()",
    "kind": "Method",
    "detail": "Function (class FRendererModule final : public IRendererModule { public :)",
    "insertText": "FRendererModule()"
  },
  {
    "label": "SupportsDynamicReloading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDynamicReloading()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "BeginRenderingViewFamily()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRenderingViewFamily(FCanvas* Canvas,FSceneViewFamily* ViewFamily)"
  },
  {
    "label": "CreateAndInitSingleView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateAndInitSingleView(FRHICommandListImmediate& RHICmdList, class FSceneViewFamily* ViewFamily, const struct FSceneViewInitOptions* ViewInitOptions)"
  },
  {
    "label": "AllocateScene()",
    "kind": "Method",
    "detail": "Function (FSceneInterface*)",
    "insertText": "AllocateScene(UWorld* World, bool bInRequiresHitProxies, bool bCreateFXSystem, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "RemoveScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveScene(FSceneInterface* Scene)"
  },
  {
    "label": "UpdateStaticDrawLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticDrawLists()"
  },
  {
    "label": "UpdateStaticDrawListsForMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticDrawListsForMaterials(const TArray<const FMaterial*>& Materials)"
  },
  {
    "label": "AllocateViewState()",
    "kind": "Method",
    "detail": "Function (FSceneViewStateInterface*)",
    "insertText": "AllocateViewState(ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "AllocateViewState()",
    "kind": "Method",
    "detail": "Function (FSceneViewStateInterface*)",
    "insertText": "AllocateViewState(ERHIFeatureLevel::Type FeatureLevel, FSceneViewStateInterface* ShareOriginTarget)"
  },
  {
    "label": "GetNumDynamicLightsAffectingPrimitive()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumDynamicLightsAffectingPrimitive(const FPrimitiveSceneInfo* PrimitiveSceneInfo,const FLightCacheInterface* LCI)"
  },
  {
    "label": "OnWorldCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldCleanup(UWorld* World, bool bSessionEnded, bool bCleanupResources, bool bWorldChanged)"
  },
  {
    "label": "InitializeSystemTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeSystemTextures(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "CreateSinglePrimitiveSceneUniformBuffer()",
    "kind": "Method",
    "detail": "Function (FSceneUniformBuffer*)",
    "insertText": "CreateSinglePrimitiveSceneUniformBuffer(FRDGBuilder& GraphBuilder, const FViewInfo& SceneView, FMeshBatch& Mesh)"
  },
  {
    "label": "CreateSinglePrimitiveUniformView()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<FBatchedPrimitiveParameters>)",
    "insertText": "CreateSinglePrimitiveUniformView(FRDGBuilder& GraphBuilder, const FViewInfo& SceneView, FMeshBatch& Mesh)"
  },
  {
    "label": "DrawTileMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawTileMesh(FCanvasRenderContext& RenderContext, FMeshPassProcessorRenderState& DrawRenderState, const FSceneView& View, FMeshBatch& Mesh, bool bIsHitTesting, const FHitProxyId& HitProxyId, bool bUse128bitRT = false)"
  },
  {
    "label": "DebugLogOnCrash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugLogOnCrash()"
  },
  {
    "label": "GPUBenchmark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GPUBenchmark(FSynthBenchmarkResults& InOut, float WorkScale)"
  },
  {
    "label": "ExecVisualizeTextureCmd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecVisualizeTextureCmd(const FString& Cmd)"
  },
  {
    "label": "UpdateMapNeedsLightingFullyRebuiltState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMapNeedsLightingFullyRebuiltState(UWorld* World)"
  },
  {
    "label": "DrawRectangle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawRectangle(FRHICommandList& RHICmdList, float X, float Y, float SizeX, float SizeY, float U, float V, float SizeU, float SizeV, FIntPoint TargetSize, FIntPoint TextureSize, const TShaderRef<FShader>& VertexShader, EDrawRectangleFlags Flags = EDRF_Default)"
  },
  {
    "label": "GetAllocatedScenes()",
    "kind": "Method",
    "detail": "Function (const TSet<FSceneInterface*>&)",
    "insertText": "GetAllocatedScenes()"
  },
  {
    "label": "UnregisterCustomCullingImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomCullingImpl(ICustomCulling* impl)"
  },
  {
    "label": "RegisterPostOpaqueRenderDelegate()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterPostOpaqueRenderDelegate(const FPostOpaqueRenderDelegate& InPostOpaqueRenderDelegate)"
  },
  {
    "label": "RemovePostOpaqueRenderDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePostOpaqueRenderDelegate(FDelegateHandle InPostOpaqueRenderDelegate)"
  },
  {
    "label": "RegisterOverlayRenderDelegate()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterOverlayRenderDelegate(const FPostOpaqueRenderDelegate& InOverlayRenderDelegate)"
  },
  {
    "label": "RemoveOverlayRenderDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOverlayRenderDelegate(FDelegateHandle InOverlayRenderDelegate)"
  },
  {
    "label": "GetResolvedSceneColorCallbacks()",
    "kind": "Method",
    "detail": "Function (FOnResolvedSceneColor&)",
    "insertText": "GetResolvedSceneColorCallbacks()"
  },
  {
    "label": "PerFrameCleanupIfSkipRenderer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerFrameCleanupIfSkipRenderer()"
  },
  {
    "label": "AllocateVirtualTexture()",
    "kind": "Method",
    "detail": "Function (IAllocatedVirtualTexture*)",
    "insertText": "AllocateVirtualTexture(FRHICommandListBase& RHICmdList, const FAllocatedVTDescription& Desc)"
  },
  {
    "label": "DestroyVirtualTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyVirtualTexture(IAllocatedVirtualTexture* AllocatedVT)"
  },
  {
    "label": "AllocateAdaptiveVirtualTexture()",
    "kind": "Method",
    "detail": "Function (IAdaptiveVirtualTexture*)",
    "insertText": "AllocateAdaptiveVirtualTexture(FRHICommandListBase& RHICmdList, const FAdaptiveVTDescription& AdaptiveVTDesc, const FAllocatedVTDescription& AllocatedVTDesc)"
  },
  {
    "label": "DestroyAdaptiveVirtualTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAdaptiveVirtualTexture(IAdaptiveVirtualTexture* AdaptiveVT)"
  },
  {
    "label": "RegisterVirtualTextureProducer()",
    "kind": "Method",
    "detail": "Function (FVirtualTextureProducerHandle)",
    "insertText": "RegisterVirtualTextureProducer(FRHICommandListBase& RHICmdList, const FVTProducerDescription& Desc, IVirtualTexture* Producer)"
  },
  {
    "label": "ReleaseVirtualTextureProducer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseVirtualTextureProducer(const FVirtualTextureProducerHandle& Handle)"
  },
  {
    "label": "AddVirtualTextureProducerDestroyedCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVirtualTextureProducerDestroyedCallback(const FVirtualTextureProducerHandle& Handle, FVTProducerDestroyedFunction* Function, void* Baton)"
  },
  {
    "label": "RemoveAllVirtualTextureProducerDestroyedCallbacks()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RemoveAllVirtualTextureProducerDestroyedCallbacks(const void* Baton)"
  },
  {
    "label": "ReleaseVirtualTexturePendingResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseVirtualTexturePendingResources()"
  },
  {
    "label": "RequestVirtualTextureTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestVirtualTextureTiles(TArray<uint64>&& InPageRequests)"
  },
  {
    "label": "RequestVirtualTextureTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestVirtualTextureTiles(const FVector2D& InScreenSpaceSize, int32 InMipLevel)"
  },
  {
    "label": "RequestVirtualTextureTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestVirtualTextureTiles(const FMaterialRenderProxy* InMaterialRenderProxy, const FVector2D& InScreenSpaceSize, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "RequestVirtualTextureTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestVirtualTextureTiles(IAllocatedVirtualTexture* AllocatedVT, const FVector2D& InScreenSpaceSize, const FVector2D& InViewportPosition, const FVector2D& InViewportSize, const FVector2D& InUV0, const FVector2D& InUV1, int32 InMipLevel)"
  },
  {
    "label": "LoadPendingVirtualTextureTiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadPendingVirtualTextureTiles(FRHICommandListImmediate& RHICmdList, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "SetVirtualTextureRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVirtualTextureRequestRecordBuffer(uint64 Handle)"
  },
  {
    "label": "GetVirtualTextureRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetVirtualTextureRequestRecordBuffer(TSet<uint64>& OutPageRequests)"
  },
  {
    "label": "FlushVirtualTextureCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushVirtualTextureCache()"
  },
  {
    "label": "FlushVirtualTextureCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushVirtualTextureCache(IAllocatedVirtualTexture* AllocatedVT, const FVector2f& InUV0, const FVector2f& InUV1)"
  },
  {
    "label": "SetNaniteRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNaniteRequestRecordBuffer(uint64 Handle)"
  },
  {
    "label": "GetNaniteRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetNaniteRequestRecordBuffer(TArray<uint32>& OutPageRequests)"
  },
  {
    "label": "RequestNanitePages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestNanitePages(TArrayView<uint32> InRequestData)"
  },
  {
    "label": "PrefetchNaniteResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrefetchNaniteResource(const Nanite::FResources* Resource, uint32 NumFramesUntilRender)"
  },
  {
    "label": "RegisterPersistentViewUniformBufferExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPersistentViewUniformBufferExtension(IPersistentViewUniformBufferExtension* Extension)"
  },
  {
    "label": "RenderPostOpaqueExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPostOpaqueExtensions(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderOverlayExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderOverlayExtensions(FRDGBuilder& GraphBuilder, TArrayView<const FViewInfo> Views, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderPostResolvedSceneColorExtension()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPostResolvedSceneColorExtension(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "BeginScenePrimitiveRendering()",
    "kind": "Method",
    "detail": "Function (IScenePrimitiveRenderingContext*)",
    "insertText": "BeginScenePrimitiveRendering(FRDGBuilder& GraphBuilder, FSceneViewFamily* ViewFamily)"
  },
  {
    "label": "BeginScenePrimitiveRendering()",
    "kind": "Method",
    "detail": "Function (IScenePrimitiveRenderingContext*)",
    "insertText": "BeginScenePrimitiveRendering(FRDGBuilder& GraphBuilder, FSceneInterface& Scene)"
  },
  {
    "label": "InvalidatePathTracedOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidatePathTracedOutput()"
  },
  {
    "label": "BeginRenderingViewFamilies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRenderingViewFamilies(FCanvas* Canvas, TArrayView<FSceneViewFamily*> ViewFamilies)"
  },
  {
    "label": "ResetSceneTextureExtentHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSceneTextureExtentHistory()"
  },
  {
    "label": "GetPreviousViewMatrices()",
    "kind": "Method",
    "detail": "Function (const FViewMatrices&)",
    "insertText": "GetPreviousViewMatrices(const FSceneView& View)"
  },
  {
    "label": "GetGlobalDistanceFieldParameterData()",
    "kind": "Method",
    "detail": "Function (const FGlobalDistanceFieldParameterData*)",
    "insertText": "GetGlobalDistanceFieldParameterData(const FSceneView& View)"
  },
  {
    "label": "RequestStaticMeshUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestStaticMeshUpdate(FPrimitiveSceneInfo* Info)"
  },
  {
    "label": "AddMeshBatchToGPUScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeshBatchToGPUScene(FGPUScenePrimitiveCollector* Collector, FMeshBatch& MeshBatch)"
  }
]