[
  {
    "label": "UFrameGrabberProtocol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFrameGrabberProtocol"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneCaptureProtocolBase . h \" # include \" FrameGrabber . h \" # include \" FrameGrabberProtocol . generated . h \")",
    "insertText": "UCLASS(Abstract, config=EditorPerProjectUserSettings, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UFrameGrabberProtocol(const FObjectInitializer& ObjectInit) : Super(ObjectInit) , DesiredPixelFormat(PF_B8G8R8A8) , RingBufferSize(3)"
  },
  {
    "label": "HasFinishedProcessingImpl()",
    "kind": "Method",
    "detail": "Function (} EPixelFormat DesiredPixelFormat ; uint32 RingBufferSize ; protected : bool)",
    "insertText": "HasFinishedProcessingImpl()"
  },
  {
    "label": "SetupImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupImpl()"
  },
  {
    "label": "CaptureFrameImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaptureFrameImpl(const FFrameMetrics& FrameMetrics)"
  },
  {
    "label": "TickImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickImpl()"
  },
  {
    "label": "BeginFinalizeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFinalizeImpl()"
  },
  {
    "label": "FinalizeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeImpl()"
  },
  {
    "label": "GetFramePayload()",
    "kind": "Method",
    "detail": "Function (protected : FFramePayloadPtr)",
    "insertText": "GetFramePayload(const FFrameMetrics& FrameMetrics) PURE_VIRTUAL(UFrameGrabberProtocol::GetFramePayload, return nullptr;) MOVIESCENECAPTURE_API virtual void ProcessFrame(FCapturedFrameData Frame) PURE_VIRTUAL(UFrameGrabberProtocol::ProcessFrame,)"
  }
]