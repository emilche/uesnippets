[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FCacheEntryMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCacheEntryMetadata"
  },
  {
    "label": "FCacheEntryMetadata()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / DateTime . h \" # include \" UObject / NameTypes . h \" # include \" HAL / ThreadSafeBool . h \" class FArchive ; class FCacheEntryMetadata { public :)",
    "insertText": "FCacheEntryMetadata(const FDateTime& InLastAccessTime , int32 InCachedAssetSize , int32 InCachedAssetVersion , FName InName) : LastAccessTime(InLastAccessTime) , CachedAssetSize(InCachedAssetSize) , CachedAssetVersion(InCachedAssetVersion) , Name(InName) , bIsBuilding(true)"
  },
  {
    "label": "FCacheEntryMetadata()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCacheEntryMetadata() : LastAccessTime(FDateTime::Now()) , CachedAssetSize(0) , CachedAssetVersion(0) , Name(NAME_None) , bIsBuilding(false)"
  },
  {
    "label": "GetCachedAssetVersion()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetCachedAssetVersion()"
  },
  {
    "label": "GetCachedAssetSize()",
    "kind": "Method",
    "detail": "Function (CachedAssetVersion = Version ; } int32)",
    "insertText": "GetCachedAssetSize()"
  },
  {
    "label": "SetLastAccessTime()",
    "kind": "Method",
    "detail": "Function (CachedAssetSize = Value ; } void)",
    "insertText": "SetLastAccessTime(FDateTime Value)"
  },
  {
    "label": "GetLastAccessTime()",
    "kind": "Method",
    "detail": "Function (LastAccessTime = Value ; } FDateTime)",
    "insertText": "GetLastAccessTime()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bIsBuilding = false ; } FArchive&)",
    "insertText": "operator(FArchive& Ar, FCacheEntryMetadata& Metadata)"
  }
]