[
  {
    "label": "FProjectLauncherModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProjectLauncherModel"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SProjectLauncherSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherSettings"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Internationalization / Text . h \" # include \" Framework / SlateDelegates . h \" # include \" Layout / Visibility . h \" # include \" SlateFwd . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Shared / ProjectLauncherDelegates . h \" class FProjectLauncherModel ; class FUICommandList ; class SWidget ; namespace ELauncherWizardPages { enum Type { BuildPage,CookPage,PackagePage,DeployPage,LaunchPage,PreviewPage } ; } class SProjectLauncherSettings : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherSettings)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnClicked, OnCloseClicked) SLATE_EVENT(FOnProfileRun, OnDeleteClicked) SLATE_END_ARGS() public: SProjectLauncherSettings()"
  },
  {
    "label": "SProjectLauncherSettings()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SProjectLauncherSettings()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel)"
  },
  {
    "label": "EnterEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterEditMode()"
  },
  {
    "label": "CreateCommands()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateCommands()"
  },
  {
    "label": "MakeToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeToolbar(const TSharedRef<FUICommandList>& InCommandList)"
  },
  {
    "label": "GetLaunchProfile()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<ILauncherProfile>)",
    "insertText": "GetLaunchProfile()"
  },
  {
    "label": "HandleSelectProfileTextBlockVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleSelectProfileTextBlockVisibility()"
  },
  {
    "label": "HandleSettingsScrollBoxVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleSettingsScrollBoxVisibility()"
  },
  {
    "label": "OnGetNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetNameText()"
  },
  {
    "label": "OnNameTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameTextCommitted(const FText& NewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "OnGetDescriptionText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetDescriptionText()"
  },
  {
    "label": "OnDescriptionTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDescriptionTextCommitted(const FText& NewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "HandleCloseActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCloseActionExecute()"
  },
  {
    "label": "HandleCloseActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCloseActionIsChecked()"
  },
  {
    "label": "HandleCloseActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCloseActionCanExecute()"
  },
  {
    "label": "HandleDeleteActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeleteActionExecute()"
  },
  {
    "label": "HandleDeleteActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDeleteActionIsChecked()"
  },
  {
    "label": "HandleDeleteActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDeleteActionCanExecute()"
  }
]