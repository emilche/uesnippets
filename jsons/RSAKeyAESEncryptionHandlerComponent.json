[
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "State",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "State"
  },
  {
    "label": "warning()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" PacketHandler . h \" # pragma)",
    "insertText": "warning(disable : 4530) THIRD_PARTY_INCLUDES_START #include \"CryptoPP/5.6.5/include/rsa.h\" #include \"CryptoPP/5.6.5/include/osrng.h\" #include \"CryptoPP/5.6.5/include/modes.h\" THIRD_PARTY_INCLUDES_END class UE_DEPRECATED(5.3, \"This component is not supported for encryption.\")"
  },
  {
    "label": "CreateComponentInstance()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<HandlerComponent>)",
    "insertText": "CreateComponentInstance(FString& Options)"
  },
  {
    "label": "RSAKeyAESEncryptionHandlerComponent()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "RSAKeyAESEncryptionHandlerComponent(uint32 InAsymmetricKeySize=2048, uint32 InSessionKeySize=256)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "NotifyHandshakeBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyHandshakeBegin()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Incoming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Incoming(FBitReader& Packet)"
  },
  {
    "label": "Outgoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Outgoing(FBitWriter& Packet)"
  },
  {
    "label": "GetReservedPacketBits()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetReservedPacketBits()"
  },
  {
    "label": "IncomingHandshake()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "IncomingHandshake(FBitReader& Packet)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(ERSAKeyAESEncryptionHandler::State State)"
  },
  {
    "label": "AsymmetricEncryptPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsymmetricEncryptPacket(FBitWriter& Packet)"
  },
  {
    "label": "AsymmetricDecryptPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsymmetricDecryptPacket(FBitReader& Packet)"
  },
  {
    "label": "PackAsymmetricKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PackAsymmetricKey(FBitWriter& Packet)"
  },
  {
    "label": "UnPackAsymmetricKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnPackAsymmetricKey(FBitReader& Packet)"
  },
  {
    "label": "SavePublicKeyModulus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePublicKeyModulus(TArray<uint8>& OutModulus)"
  },
  {
    "label": "SavePublicKeyExponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePublicKeyExponent(TArray<uint8>& OutExponent)"
  }
]