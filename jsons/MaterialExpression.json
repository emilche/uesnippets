[
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "UTextureCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCollection"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FMaterialParameterMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialParameterMetadata"
  },
  {
    "label": "FMaterialShadingModelField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShadingModelField"
  },
  {
    "label": "FSubstrateMaterialInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubstrateMaterialInfo"
  },
  {
    "label": "FSubstrateOperator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubstrateOperator"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterialExpressionComment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionComment"
  },
  {
    "label": "UMaterialExpressionExecBegin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionExecBegin"
  },
  {
    "label": "UMaterialExpressionExecEnd",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionExecEnd"
  },
  {
    "label": "FMaterialExpressionKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialExpressionKey"
  },
  {
    "label": "FMaterialHLSLGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialHLSLGenerator"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScope"
  },
  {
    "label": "FStatement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatement"
  },
  {
    "label": "FExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExpression"
  },
  {
    "label": "FEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEmitter"
  },
  {
    "label": "USTRUCT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "USTRUCT"
  },
  {
    "label": "FExpressionInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionInput"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "FMaterialAttributesInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialAttributesInput"
  },
  {
    "label": "FExpressionOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionOutput"
  },
  {
    "label": "FExpressionExecOutput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionExecOutput"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "FExpressionExecOutputEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionExecOutputEntry"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMaterialExpressionCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialExpressionCollection"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialFunction"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterialExpressionComment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionComment"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialFunction"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "hierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hierarchy"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FContainsInputLoopInternalExpressionStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContainsInputLoopInternalExpressionStack"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "provides"
  },
  {
    "label": "FExpressionInputIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionInputIterator"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "provides"
  },
  {
    "label": "FExpressionOutputIterator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExpressionOutputIterator"
  },
  {
    "label": "Connect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Connect(class UMaterialExpression* InExpression)"
  },
  {
    "label": "AddExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExpression(UMaterialExpression* InExpression)"
  },
  {
    "label": "RemoveExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveExpression(UMaterialExpression* InExpression)"
  },
  {
    "label": "AddComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddComment(UMaterialExpressionComment* InExpression)"
  },
  {
    "label": "RemoveComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComment(UMaterialExpressionComment* InExpression)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "InitializeNumExecutionInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeNumExecutionInputs(TArrayView<UMaterialExpression*> Expressions)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Compile(Compiler, OutputIndex)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(UE::MIR::FEmitter& Emitter)"
  },
  {
    "label": "GetInputType()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetInputType(int32 InputIndex)"
  },
  {
    "label": "GetOutputType()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetOutputType(int32 OutputIndex)"
  },
  {
    "label": "GetInputPinSubCategory()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetInputPinSubCategory(int32 PinIndex)"
  },
  {
    "label": "PinDefaultValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinDefaultValueChanged(int32 PinIndex, const FString& DefaultValue)"
  },
  {
    "label": "ForcePropertyValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForcePropertyValueChanged(FProperty* Property, bool bUpdatePreview = true)"
  },
  {
    "label": "RefreshNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshNode(bool bUpdatePreview = true)"
  },
  {
    "label": "GetInputPinDefaultValue()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetInputPinDefaultValue(int32 PinIndex)"
  },
  {
    "label": "GetExecOutputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExecOutputs(TArray<FExpressionExecOutputEntry>& Outputs)"
  },
  {
    "label": "HasExecInput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasExecInput()"
  },
  {
    "label": "GetConnectorToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetConnectorToolTip(int32 InputIndex, int32 OutputIndex, TArray<FString>& OutToolTip)"
  },
  {
    "label": "GetExpressionToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExpressionToolTip(TArray<FString>& OutToolTip)"
  },
  {
    "label": "CompilerError()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CompilerError(class FMaterialCompiler* Compiler, const TCHAR* pcMessage)"
  },
  {
    "label": "FText()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FText()"
  },
  {
    "label": "MatchesSearchQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesSearchQuery( const TCHAR* SearchQuery )"
  },
  {
    "label": "CopyMaterialExpressions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMaterialExpressions(const TArray<class UMaterialExpression*>& SrcExpressions, const TArray<class UMaterialExpressionComment*>& SrcExpressionComments, \n\t\tclass UMaterial* Material, class UMaterialFunction* Function, TArray<class UMaterialExpression*>& OutNewExpressions, TArray<class UMaterialExpression*>& OutNewComments)"
  },
  {
    "label": "ConnectToPreviewMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectToPreviewMaterial(UMaterial* InMaterial, int32 OutputIndex)"
  },
  {
    "label": "IsExpressionConnected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExpressionConnected(FExpressionInput* Input, int32 OutputIndex)"
  },
  {
    "label": "ConnectExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectExpression(FExpressionInput* Input, int32 OutputIndex)"
  },
  {
    "label": "UpdateParameterGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateParameterGuid(bool bForceGeneration, bool bAllowMarkingPackageDirty)"
  },
  {
    "label": "UpdateMaterialExpressionGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialExpressionGuid(bool bForceGeneration, bool bAllowMarkingPackageDirty)"
  },
  {
    "label": "ValidateState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateState()"
  },
  {
    "label": "GetAllInputExpressions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllInputExpressions(TArray<UMaterialExpression*>& InputExpressions)"
  },
  {
    "label": "SetEditableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEditableName(const FString& NewName)"
  },
  {
    "label": "ValidateParameterName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateParameterName(const bool bAllowDuplicateName = true)"
  },
  {
    "label": "ContainsInputLoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsInputLoop(const bool bStopOnFunctionCall = true)"
  },
  {
    "label": "ContainsInputLoop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsInputLoop(TSet<UMaterialExpression*>& VisitedExpressions, const bool bStopOnFunctionCall = true)"
  },
  {
    "label": "ContainsInputLoopInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsInputLoopInternal(const FContainsInputLoopInternalExpressionStack& ExpressionStack, TSet<UMaterialExpression*>& VisitedExpressions, const bool bStopOnFunctionCall)"
  }
]