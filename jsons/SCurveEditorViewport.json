[
  {
    "label": "FCurveEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditorViewportClient"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "SDistributionCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDistributionCurveEditor"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SCurveEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorViewport"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / Platform . h \" # include \" IDistCurveEditor . h \" # include \" Layout / Visibility . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FCurveEditorViewportClient ; class FSceneViewport ; class SDistributionCurveEditor ; class SScrollBar ; class SViewport ; struct FGeometry ; class SCurveEditorViewport : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCurveEditorViewport) : _CurveEdOptions(IDistributionCurveEditor::FCurveEdOptions())"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<SDistributionCurveEditor>, CurveEditor) SLATE_ARGUMENT(IDistributionCurveEditor::FCurveEdOptions, CurveEdOptions) SLATE_END_ARGS() ~SCurveEditorViewport()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "SetVerticalScrollBarPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVerticalScrollBarPosition(float Position)"
  },
  {
    "label": "AdjustScrollBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustScrollBar()"
  },
  {
    "label": "GetViewport()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSceneViewport>)",
    "insertText": "GetViewport()"
  },
  {
    "label": "GetViewportClient()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCurveEditorViewportClient>)",
    "insertText": "GetViewportClient()"
  },
  {
    "label": "GetViewportWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SViewport>)",
    "insertText": "GetViewportWidget()"
  },
  {
    "label": "GetVerticalScrollBar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SScrollBar>)",
    "insertText": "GetVerticalScrollBar()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "GetViewportVerticalScrollBarVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetViewportVerticalScrollBarVisibility()"
  },
  {
    "label": "OnViewportVerticalScrollBarScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewportVerticalScrollBarScrolled(float InScrollOffsetFraction)"
  }
]