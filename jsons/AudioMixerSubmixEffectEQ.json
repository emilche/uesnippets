[
  {
    "label": "FSubmixEffectEQBand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubmixEffectEQBand"
  },
  {
    "label": "FSubmixEffectSubmixEQSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubmixEffectSubmixEQSettings"
  },
  {
    "label": "FSubmixEffectSubmixEQ",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubmixEffectSubmixEQ"
  },
  {
    "label": "FEQ",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEQ"
  },
  {
    "label": "USubmixEffectSubmixEQPreset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USubmixEffectSubmixEQPreset"
  },
  {
    "label": "DECLARE_CYCLE_STAT_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DSP / EQ . h \" # include \" Sound / SoundEffectSubmix . h \" # include \" Sound / SoundMix . h \" # include \" Stats / Stats . h \" # include \" AudioMixerSubmixEffectEQ . generated . h \")",
    "insertText": "DECLARE_CYCLE_STAT_EXTERN(TEXT(\"Submix EQ\"), STAT_AudioMixerSubmixEQ, STATGROUP_AudioMixer, AUDIOMIXER_API)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"SubmixEffect|Preset\", meta = (ClampMin = \"20.0\", ClampMax = \"20000.0\", UIMin = \"20.0\", UIMax = \"15000.0\"))"
  },
  {
    "label": "FSubmixEffectEQBand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSubmixEffectEQBand() : Frequency(500.0f) , Bandwidth(2.0f) , GainDb(0.0f) , bEnabled(false)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"SubmixEffect|Preset\")"
  },
  {
    "label": "FSubmixEffectSubmixEQ()",
    "kind": "Method",
    "detail": "Function (} ; class FSubmixEffectSubmixEQ : public FSoundEffectSubmix { public :)",
    "insertText": "FSubmixEffectSubmixEQ()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FSoundEffectSubmixInitData& InSampleRate)"
  },
  {
    "label": "OnProcessAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProcessAudio(const FSoundEffectSubmixInputData& InData, FSoundEffectSubmixOutputData& OutData)"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetParameters(const FAudioEffectParameters& InParameters)"
  },
  {
    "label": "SupportsDefaultEQ()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDefaultEQ()"
  },
  {
    "label": "UpdateParameters()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateParameters(const int32 NumOutputChannels)"
  },
  {
    "label": "FEQ()",
    "kind": "Method",
    "detail": "Function (struct FEQ { bool bEnabled ; TArray<Audio::FBiquadFilter> Bands ;)",
    "insertText": "FEQ() : bEnabled(true)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ; TArray<FEQ> FiltersPerChannel ; float ScratchInBuffer [ 2 ] ; float ScratchOutBuffer [ 2 ] ; float SampleRate ; float NumOutputChannels ; bool bEQSettingsSet ; Audio::TParams<FSubmixEffectSubmixEQSettings> PendingSettings ; FSubmixEffectSubmixEQSettings GameThreadEQSettings ; FSubmixEffectSubmixEQSettings RenderThreadEQSettings ; } ;)",
    "insertText": "UCLASS(ClassGroup = AudioSourceEffect, meta = (BlueprintSpawnableComponent), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: EFFECT_PRESET_METHODS(SubmixEffectSubmixEQ) UFUNCTION(BlueprintCallable, Category = \"Audio|Effects\") AUDIOMIXER_API void SetSettings(const FSubmixEffectSubmixEQSettings& InSettings)"
  }
]