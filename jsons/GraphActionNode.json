[
  {
    "label": "STreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeView"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "FGraphActionNodeImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphActionNodeImpl"
  },
  {
    "label": "NewRootNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "NewRootNode()"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "AddChild(const TSharedPtr<FEdGraphSchemaAction>& Action)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "AddChild(FGraphActionListBuilderBase::ActionGroup const& ActionSet)"
  },
  {
    "label": "AddChildAlphabetical()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "AddChildAlphabetical(const TSharedPtr<FEdGraphSchemaAction>& Action)"
  },
  {
    "label": "AddChildAlphabetical()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "AddChildAlphabetical(FGraphActionListBuilderBase::ActionGroup const& ActionSet)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "AddSection(int32 Grouping, int32 InSectionID)"
  },
  {
    "label": "SortChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortChildren(bool bAlphabetically = true, bool bRecursive = true)"
  },
  {
    "label": "ExpandAllChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandAllChildren(TSharedPtr< STreeView< TSharedPtr<FGraphActionNode> > > TreeView, bool bRecursive = true)"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "BroadcastRenameRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BroadcastRenameRequest()"
  },
  {
    "label": "NewSectionHeadingNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "NewSectionHeadingNode(TWeakPtr<FGraphActionNode> Parent, int32 Grouping, int32 SectionID)"
  },
  {
    "label": "NewCategoryNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "NewCategoryNode(FString const& Category, int32 Grouping, int32 SectionID)"
  },
  {
    "label": "NewActionNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "NewActionNode(TSharedPtr<FEdGraphSchemaAction> const& ActionNode)"
  },
  {
    "label": "NewGroupDividerNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "NewGroupDividerNode(TWeakPtr<FGraphActionNode> Parent, int32 Grouping)"
  },
  {
    "label": "AddChildRecursively()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildRecursively(const TArray<FString>& CategoryStack, int32 Idx, TSharedPtr<FGraphActionNode> NodeToAdd)"
  },
  {
    "label": "FindMatchingParent()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FGraphActionNode>)",
    "insertText": "FindMatchingParent(FString const& ParentName, TSharedPtr<FGraphActionNode> NodeToAdd)"
  },
  {
    "label": "InsertChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChild(TSharedPtr<FGraphActionNode> NodeToAdd)"
  },
  {
    "label": "AddChildGrouping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChildGrouping(TSharedPtr<FGraphActionNode> ActionNode, TWeakPtr<FGraphActionNode> Parent, bool bInsertAlphabetically)"
  },
  {
    "label": "InsertChildAlphabetical()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertChildAlphabetical(TSharedPtr<FGraphActionNode> NodeToAdd)"
  }
]