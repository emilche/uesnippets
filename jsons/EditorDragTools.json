[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FDragTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragTool"
  },
  {
    "label": "FDragTool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FCanvas ; class FEditorModeTools ; class FEditorViewportClient ; class FPrimitiveDrawInterface ; class FSceneView ; class FDragTool { public :)",
    "insertText": "FDragTool(FEditorModeTools* InModeTools)"
  },
  {
    "label": "FDragTool()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDragTool()"
  },
  {
    "label": "AddDelta()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddDelta(const FVector& InDelta)"
  },
  {
    "label": "StartDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDrag(FEditorViewportClient* InViewportClient, const FVector& InStartWorld, const FVector2D& InStartScreen)"
  },
  {
    "label": "EndDrag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndDrag()"
  },
  {
    "label": "Render3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Render3D(const FSceneView* View,FPrimitiveDrawInterface* PDI)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Render(const FSceneView* View,FCanvas* Canvas)"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Render(FCanvas* Canvas)"
  },
  {
    "label": "IsDragging()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDragging()"
  }
]