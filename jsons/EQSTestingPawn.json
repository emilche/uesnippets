[
  {
    "label": "UEnvQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQuery"
  },
  {
    "label": "UEQSRenderingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEQSRenderingComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "AEQSTestingPawn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AEQSTestingPawn"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" EnvironmentQuery / EnvQueryTypes . h \" # include \" EnvironmentQuery / EQSQueryResultSourceInterface . h \" # include \" GameFramework / Character . h \" # include \" AI / Navigation / NavigationTypes . h \" # include \" EQSTestingPawn . generated . h \" class UEnvQuery ; class UEQSRenderingComponent ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (All,Best5Pct)",
    "insertText": "UMETA(DisplayName = \"Best 5%\"), Best25Pct UMETA(DisplayName = \"Best 25%\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(hidedropdown, hidecategories=(Advanced, Attachment, Mesh, Animation, Clothing, Physics, Rendering, Lighting, Activation, CharacterMovement, AgentPhysics, Avoidance, MovementComponent, Velocity, Shape, Camera, Input, Layers, SkeletalMesh, Optimization, Pawn, Replication, Actor), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(Category=EQS, EditAnywhere)"
  },
  {
    "label": "UE_DEPRECATED_FORGAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_DEPRECATED_FORGAME(5.0, \"QueryParams has been deprecated for a long while now. Will be removed in the next engine version.\") UPROPERTY()"
  },
  {
    "label": "TickActor()",
    "kind": "Method",
    "detail": "Function (# endif protected : TSharedPtr<FEnvQueryInstance> QueryInstance ; TArray<FEnvQueryInstance> StepResults ; public : void)",
    "insertText": "TickActor(float DeltaTime, enum ELevelTick TickType, FActorTickFunction& ThisTickFunction)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditMove(bool bFinished)"
  },
  {
    "label": "PostTransacted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostTransacted(const FTransactionObjectEvent& TransactionEvent)"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyChanged(const FName PropName)"
  },
  {
    "label": "GetQueryResult()",
    "kind": "Method",
    "detail": "Function (# endif const FEnvQueryResult*)",
    "insertText": "GetQueryResult()"
  },
  {
    "label": "GetQueryInstance()",
    "kind": "Method",
    "detail": "Function (const FEnvQueryInstance*)",
    "insertText": "GetQueryInstance()"
  },
  {
    "label": "GetShouldDebugDrawLabels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShouldDebugDrawLabels()"
  },
  {
    "label": "GetNavAgentPropertiesRef()",
    "kind": "Method",
    "detail": "Function (const FNavAgentProperties&)",
    "insertText": "GetNavAgentPropertiesRef()"
  },
  {
    "label": "RunEQSQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunEQSQuery()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Reset()"
  },
  {
    "label": "MakeOneStep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeOneStep()"
  },
  {
    "label": "UpdateDrawing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDrawing()"
  },
  {
    "label": "OnEditorSelectionChanged()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "OnEditorSelectionChanged(UObject* NewSelection)"
  },
  {
    "label": "GetEdRenderComp()",
    "kind": "Method",
    "detail": "Function (# endif public : # if WITH_EDITORONLY_DATA UEQSRenderingComponent*)",
    "insertText": "GetEdRenderComp()"
  }
]