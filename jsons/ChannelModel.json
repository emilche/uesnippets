[
  {
    "label": "FCurveModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveModel"
  },
  {
    "label": "FSequencerSectionKeyAreaNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerSectionKeyAreaNode"
  },
  {
    "label": "IKeyArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKeyArea"
  },
  {
    "label": "ISequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerSection"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "TAutoRegisterViewModelTypeID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoRegisterViewModelTypeID"
  },
  {
    "label": "FMovieSceneChannel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannel"
  },
  {
    "label": "FMovieSceneChannelHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelHandle"
  },
  {
    "label": "FSequencerChannelPaintArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSequencerChannelPaintArgs"
  },
  {
    "label": "FSectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSectionModel"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "FChannelGroupOutlinerModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChannelGroupOutlinerModel"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Channels / MovieSceneChannelEditorData . h \" # include \" Channels / MovieSceneChannelOverrideContainer . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" EventHandlers / ISignedObjectEventHandler . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" MVVM / Extensions / IDeletableExtension . h \" # include \" MVVM / Extensions / IGeometryExtension . h \" # include \" MVVM / Extensions / IKeyExtension . h \" # include \" MVVM / Extensions / IOutlinerExtension . h \" # include \" MVVM / Extensions / IRecyclableExtension . h \" # include \" MVVM / Extensions / ITrackAreaExtension . h \" # include \" MVVM / Extensions / ITrackLaneExtension . h \" # include \" MVVM / Extensions / LinkedOutlinerExtension . h \" # include \" MVVM / ICastable . h \" # include \" MVVM / ViewModelPtr . h \" # include \" MVVM / ViewModels / OutlinerItemModel . h \" # include \" MVVM / ViewModels / ViewModel . h \" # include \" MVVM / ViewModels / ViewModelIterators . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" # include \" Tree / ICurveEditorTreeItem . h \" # include \" UObject / NameTypes . h \" class FCurveModel ; class FSequencerSectionKeyAreaNode ; class IKeyArea ; class ISequencerSection ; class SWidget ; class UMovieSceneSection ; namespace UE::Sequencer { template<T> struct TAutoRegisterViewModelTypeID ; } struct FMovieSceneChannel ; struct FMovieSceneChannelHandle ; struct FSequencerChannelPaintArgs ; namespace UE { namespace Sequencer { class FSectionModel ; class FSequenceModel ; class FChannelGroupOutlinerModel ; class FChannelModel : public FViewModel,public FLinkedOutlinerExtension,public FGeometryExtensionShim,public FLinkedOutlinerComputedSizingShim,public ITrackLaneExtension,public IRecyclableExtension,public IKeyExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FChannelModel, FViewModel, FLinkedOutlinerExtension, IGeometryExtension, ITrackLaneExtension, IRecyclableExtension, IKeyExtension)"
  },
  {
    "label": "FChannelModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChannelModel(FName InChannelName, TWeakPtr<ISequencerSection> InSection, FMovieSceneChannelHandle InChannel)"
  },
  {
    "label": "FChannelModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FChannelModel()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(TWeakPtr<ISequencerSection> InSection, FMovieSceneChannelHandle InChannel)"
  },
  {
    "label": "GetSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "GetSection()"
  },
  {
    "label": "GetOwningObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetOwningObject()"
  },
  {
    "label": "GetChannel()",
    "kind": "Method",
    "detail": "Function (FMovieSceneChannel*)",
    "insertText": "GetChannel()"
  },
  {
    "label": "IsAnimated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnimated()"
  },
  {
    "label": "GetChannelName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetChannelName()"
  },
  {
    "label": "CustomPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CustomPaint(const FSequencerChannelPaintArgs& CustomPaintArgs, int32 LayerId)"
  },
  {
    "label": "CreateTrackLaneView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITrackLaneWidget>)",
    "insertText": "CreateTrackLaneView(const FCreateTrackLaneViewParams& InParams)"
  },
  {
    "label": "ArrangeVirtualTrackLaneView()",
    "kind": "Method",
    "detail": "Function (FTrackLaneVirtualAlignment)",
    "insertText": "ArrangeVirtualTrackLaneView()"
  },
  {
    "label": "OnRecycle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRecycle()"
  },
  {
    "label": "UpdateCachedKeys()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCachedKeys(TSharedPtr<FCachedKeys>& OutCachedKeys)"
  },
  {
    "label": "GetFixedExtents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFixedExtents(double& OutFixedMin, double& OutFixedMax)"
  },
  {
    "label": "DrawKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawKeys(TArrayView<const FKeyHandle> InKeyHandles, TArrayView<FKeyDrawParams> OutKeyDrawParams)"
  },
  {
    "label": "CreateCurveModel()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FCurveModel>)",
    "insertText": "CreateCurveModel()"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& MenuBuilder, TViewModelPtr<FChannelGroupOutlinerModel> GroupOwner)"
  },
  {
    "label": "CreateOutlinerViewForColumn()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "CreateOutlinerViewForColumn(const FCreateOutlinerViewParams& InParams, const FName& InColumnName)"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<IKeyArea> KeyArea ; FName ChannelName ; } ; class FChannelGroupModel : public FViewModel,public ITrackAreaExtension,public IRecyclableExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FChannelGroupModel, FViewModel, ITrackAreaExtension, IRecyclableExtension)"
  },
  {
    "label": "FChannelGroupModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChannelGroupModel(FName InChannelName, const FText& InDisplayText)"
  },
  {
    "label": "FChannelGroupModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChannelGroupModel(FName InChannelName, const FText& InDisplayText, const FText& InTooltipText)"
  },
  {
    "label": "FChannelGroupModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChannelGroupModel(FName InChannelName, const FText& InDisplayText, FGetMovieSceneTooltipText InGetTooltipTextDelegate)"
  },
  {
    "label": "FChannelGroupModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FChannelGroupModel()"
  },
  {
    "label": "GetChannels()",
    "kind": "Method",
    "detail": "Function (TArrayView<const TWeakViewModelPtr<FChannelModel>>)",
    "insertText": "GetChannels()"
  },
  {
    "label": "AddChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChannel(TWeakViewModelPtr<FChannelModel> InChannel)"
  },
  {
    "label": "GetKeyArea()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IKeyArea>)",
    "insertText": "GetKeyArea(TSharedPtr<FSectionModel> InOwnerSection)"
  },
  {
    "label": "GetKeyArea()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IKeyArea>)",
    "insertText": "GetKeyArea(const UMovieSceneSection* InOwnerSection)"
  },
  {
    "label": "GetChannel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FChannelModel>)",
    "insertText": "GetChannel(int32 Index)"
  },
  {
    "label": "GetChannel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FChannelModel>)",
    "insertText": "GetChannel(TSharedPtr<FSectionModel> InOwnerSection)"
  },
  {
    "label": "GetChannel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FChannelModel>)",
    "insertText": "GetChannel(const UMovieSceneSection* InOwnerSection)"
  },
  {
    "label": "GetAllKeyAreas()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<IKeyArea>>)",
    "insertText": "GetAllKeyAreas()"
  },
  {
    "label": "GetChannelsSerialNumber()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetChannelsSerialNumber()"
  },
  {
    "label": "OnChannelOverridesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChannelOverridesChanged()"
  },
  {
    "label": "GetTrackAreaParameters()",
    "kind": "Method",
    "detail": "Function (public : FTrackAreaParameters)",
    "insertText": "GetTrackAreaParameters()"
  },
  {
    "label": "GetTrackAreaModelList()",
    "kind": "Method",
    "detail": "Function (FViewModelVariantIterator)",
    "insertText": "GetTrackAreaModelList()"
  },
  {
    "label": "CreateCurveModels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateCurveModels(TArray<TUniquePtr<FCurveModel>>& OutCurveModels)"
  },
  {
    "label": "HasCurves()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCurves()"
  },
  {
    "label": "GetUniquePathName()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetUniquePathName()"
  },
  {
    "label": "BuildChannelOverrideMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildChannelOverrideMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "CleanupChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupChannels()"
  },
  {
    "label": "UpdateMutability()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateMutability()"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (protected : TArray<TWeakViewModelPtr<FChannelModel>> Channels ; uint32 ChannelsSerialNumber ; FName ChannelName ; FText DisplayText ; FGetMovieSceneTooltipText GetTooltipTextDelegate ; } ; class FChannelGroupOutlinerModel : public TOutlinerModelMixin<FChannelGroupModel>,public ICompoundOutlinerExtension,public IDeletableExtension { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FChannelGroupOutlinerModel, FChannelGroupModel, FOutlinerItemModelMixin, ICompoundOutlinerExtension, IDeletableExtension)"
  },
  {
    "label": "FChannelGroupOutlinerModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FChannelGroupOutlinerModel(FName InChannelName, const FText& InDisplayText, FGetMovieSceneTooltipText InGetTooltipTextDelegate)"
  },
  {
    "label": "FChannelGroupOutlinerModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FChannelGroupOutlinerModel()"
  },
  {
    "label": "RecomputeSizing()",
    "kind": "Method",
    "detail": "Function (public : FOutlinerSizing)",
    "insertText": "RecomputeSizing()"
  },
  {
    "label": "GetOutlinerSizing()",
    "kind": "Method",
    "detail": "Function (FOutlinerSizing)",
    "insertText": "GetOutlinerSizing()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLabel()"
  },
  {
    "label": "GetLabelFont()",
    "kind": "Method",
    "detail": "Function (FSlateFontInfo)",
    "insertText": "GetLabelFont()"
  },
  {
    "label": "GetLabelToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLabelToolTipText()"
  },
  {
    "label": "CanDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDelete(FText* OutErrorMessage)"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delete()"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& MenuBuilder)"
  },
  {
    "label": "OnUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdated()"
  },
  {
    "label": "GetKeyEditorVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetKeyEditorVisibility()"
  },
  {
    "label": "BuildChannelOverrideMenu()",
    "kind": "Method",
    "detail": "Function (private : FOutlinerSizing ComputedSizing ; TWeakViewModelPtr<FChannelModel> WeakCommonChannelModel ; } ; class FChannelGroupOverrideHelper { public : void)",
    "insertText": "BuildChannelOverrideMenu(FMenuBuilder& MenuBuilder, TSharedPtr<FSequenceModel> SequenceModel)"
  },
  {
    "label": "GetChannelsFromOutlinerSelection()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "GetChannelsFromOutlinerSelection(TSharedPtr<FSequenceModel> SequenceModel, TArray<TViewModelPtr<FChannelModel>>& OutChannelModels)"
  },
  {
    "label": "BuildChannelOverrideMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildChannelOverrideMenu(FMenuBuilder& MenuBuilder, TSharedPtr<FSequenceModel> SequenceModel, UMovieSceneChannelOverrideContainer::FOverrideCandidates OverrideCandidates)"
  },
  {
    "label": "OverrideChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideChannels(TSharedPtr<FSequenceModel> SequenceModel, TSubclassOf<UMovieSceneChannelOverrideContainer> OverrideClass)"
  },
  {
    "label": "RemoveChannelOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChannelOverrides(TSharedPtr<FSequenceModel> SequenceModel)"
  }
]