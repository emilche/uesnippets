[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FEnsureHandlerArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnsureHandlerArgs"
  },
  {
    "label": "TFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunction"
  },
  {
    "label": "FDebug",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDebug"
  },
  {
    "label": "InnerType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InnerType"
  },
  {
    "label": "FRecursionScopeMarker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRecursionScopeMarker"
  },
  {
    "label": "FStaticEnsureRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticEnsureRecord"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "PrintScriptCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintScriptCallstack()"
  },
  {
    "label": "AssertFailedV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssertFailedV(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, const TCHAR* Format, va_list Args)"
  },
  {
    "label": "ProcessFatalError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFatalError(void* ProgramCounter)"
  },
  {
    "label": "HasAsserted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAsserted()"
  },
  {
    "label": "IsEnsuring()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnsuring()"
  },
  {
    "label": "GetNumEnsureFailures()",
    "kind": "Method",
    "detail": "Function (SIZE_T)",
    "insertText": "GetNumEnsureFailures()"
  },
  {
    "label": "DumpStackTraceToLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpStackTraceToLog(const ELogVerbosity::Type LogVerbosity)"
  },
  {
    "label": "DumpStackTraceToLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpStackTraceToLog(const TCHAR* Heading, const ELogVerbosity::Type LogVerbosity)"
  },
  {
    "label": "CheckVerifyFailedImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "CheckVerifyFailedImpl(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const TCHAR* Format, ...)"
  },
  {
    "label": "CheckVerifyFailedImpl2()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "CheckVerifyFailedImpl2(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, const TCHAR* Format, ...)"
  },
  {
    "label": "LogAssertFailedMessageImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "LogAssertFailedMessageImpl(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const TCHAR* Fmt, ...)"
  },
  {
    "label": "LogAssertFailedMessageImplV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogAssertFailedMessageImplV(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const TCHAR* Fmt, va_list Args)"
  },
  {
    "label": "CheckVerifyFailed()",
    "kind": "Method",
    "detail": "Function (UE_DEBUG_SECTION)",
    "insertText": "CheckVerifyFailed(const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const FmtType& Format, Types... Args)"
  },
  {
    "label": "EnsureFailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureFailed( const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const TCHAR* Msg )"
  },
  {
    "label": "OptionallyLogFormattedEnsureMessageReturningFalseImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "OptionallyLogFormattedEnsureMessageReturningFalseImpl(bool bLog, const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const TCHAR* FormattedMsg, ...)"
  },
  {
    "label": "OptionallyLogFormattedEnsureMessageReturningFalseImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OptionallyLogFormattedEnsureMessageReturningFalseImpl(bool bLog, const ANSICHAR* Expr, const ANSICHAR* File, int32 Line, void* ProgramCounter, const TCHAR* FormattedMsg, va_list Args)"
  },
  {
    "label": "OptionallyLogFormattedEnsureMessageReturningFalseImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "OptionallyLogFormattedEnsureMessageReturningFalseImpl(bLog, Expr, File, Line, ProgramCounter, FormattedMsg, Args)"
  },
  {
    "label": "LogFormattedMessageWithCallstack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogFormattedMessageWithCallstack(const FName& LogName, const ANSICHAR* File, int32 Line, const TCHAR* Heading, const TCHAR* Message, ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "Inner()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Inner(Args...)"
  },
  {
    "label": "EnsureFailed()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "EnsureFailed(std::atomic<bool>& bExecuted, const FStaticEnsureRecord* Ensure, ...)"
  },
  {
    "label": "ExecCheckImplInternal()",
    "kind": "Method",
    "detail": "Function (UE_DEBUG_SECTION)",
    "insertText": "ExecCheckImplInternal(std::atomic<bool>& bExecuted, bool bAlways, const ANSICHAR* File, int32 Line, const ANSICHAR* Expr)"
  },
  {
    "label": "GetMemberNameCheckedJunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMemberNameCheckedJunk(const T&)"
  },
  {
    "label": "GetMemberNameCheckedJunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMemberNameCheckedJunk(const volatile T&)"
  }
]