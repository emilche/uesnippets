[
  {
    "label": "FStaticMeshUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshUpdateContext"
  },
  {
    "label": "TRenderAssetUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRenderAssetUpdate"
  },
  {
    "label": "FStaticMeshUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshUpdate"
  },
  {
    "label": "FStaticMeshStreamIn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshStreamIn"
  },
  {
    "label": "FIntermediateBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntermediateBuffers"
  },
  {
    "label": "FIntermediateRayTracingGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIntermediateRayTracingGeometry"
  },
  {
    "label": "FStaticMeshStreamOut",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshStreamOut"
  },
  {
    "label": "FStaticMeshStreamIn_IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshStreamIn_IO"
  },
  {
    "label": "FCancelIORequestsTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCancelIORequestsTask"
  },
  {
    "label": "FStaticMeshStreamIn_DDC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshStreamIn_DDC"
  },
  {
    "label": "FStaticMeshUpdateContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / StaticMesh . h \" # include \" Async / AsyncFileHandle . h \" # include \" IO / IoDispatcher . h \" # include \" RenderAssetUpdate . h \" # include \" RayTracingGeometry . h \" struct FStaticMeshUpdateContext { typedef int32 EThreadType ;)",
    "insertText": "FStaticMeshUpdateContext(const UStaticMesh* InMesh, EThreadType InCurrentThread)"
  },
  {
    "label": "FStaticMeshUpdateContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStaticMeshUpdateContext(const UStreamableRenderAsset* InMesh, EThreadType InCurrentThread)"
  },
  {
    "label": "GetCurrentThread()",
    "kind": "Method",
    "detail": "Function (EThreadType)",
    "insertText": "GetCurrentThread()"
  },
  {
    "label": "Abort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abort()"
  },
  {
    "label": "FStaticMeshUpdate()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "FStaticMeshUpdate()"
  },
  {
    "label": "FStaticMeshStreamIn()",
    "kind": "Method",
    "detail": "Function (} } ; class FStaticMeshStreamIn : public FStaticMeshUpdate { public :)",
    "insertText": "FStaticMeshStreamIn(const UStaticMesh* InMesh, EThreadType CreateResourcesThread)"
  },
  {
    "label": "FStaticMeshStreamIn()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStaticMeshStreamIn()"
  },
  {
    "label": "CreateFromCPUData()",
    "kind": "Method",
    "detail": "Function (protected : struct FIntermediateBuffers { FBufferRHIRef TangentsVertexBuffer ; FBufferRHIRef TexCoordVertexBuffer ; FBufferRHIRef PositionVertexBuffer ; FBufferRHIRef ColorVertexBuffer ; FBufferRHIRef IndexBuffer ; FBufferRHIRef ReversedIndexBuffer ; FBufferRHIRef DepthOnlyIndexBuffer ; FBufferRHIRef ReversedDepthOnlyIndexBuffer ; FBufferRHIRef WireframeIndexBuffer ; void)",
    "insertText": "CreateFromCPUData(FRHICommandListBase& RHICmdList, FStaticMeshLODResources& LODResource)"
  },
  {
    "label": "TransferBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferBuffers(FStaticMeshLODResources& LODResource, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "CreateFromCPUData()",
    "kind": "Method",
    "detail": "Function (} ; # if RHI_RAYTRACING struct FIntermediateRayTracingGeometry { private : FRayTracingGeometryInitializer Initializer ; FRayTracingGeometryRHIRef RayTracingGeometryRHI ; bool bRequiresBuild = false ; public : void)",
    "insertText": "CreateFromCPUData(FRHICommandListBase& RHICmdList, FRayTracingGeometry& RayTracingGeometry)"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "TransferRayTracingGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransferRayTracingGeometry(FRayTracingGeometry& RayTracingGeometry, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "CreateBuffers()",
    "kind": "Method",
    "detail": "Function (} ; # endif void)",
    "insertText": "CreateBuffers(const FContext& Context)"
  },
  {
    "label": "DiscardNewLODs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardNewLODs(const FContext& Context)"
  },
  {
    "label": "DoFinishUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoFinishUpdate(const FContext& Context)"
  },
  {
    "label": "DoCancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCancel(const FContext& Context)"
  },
  {
    "label": "FStaticMeshStreamOut()",
    "kind": "Method",
    "detail": "Function (FIntermediateBuffers IntermediateBuffersArray [ MAX_MESH_LOD_COUNT ] ; # if RHI_RAYTRACING FIntermediateRayTracingGeometry IntermediateRayTracingGeometry [ MAX_MESH_LOD_COUNT ] ; # endif FRHICommandList* StreamingRHICmdList = nullptr ; const EThreadType CreateResourcesThread ; } ; class FStaticMeshStreamOut : public FStaticMeshUpdate { public :)",
    "insertText": "FStaticMeshStreamOut(const UStaticMesh* InMesh, bool InDiscardCPUData)"
  },
  {
    "label": "CheckReferencesAndDiscardCPUData()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CheckReferencesAndDiscardCPUData(const FContext& Context)"
  },
  {
    "label": "ReleaseRHIBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIBuffers(const FContext& Context)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel(const FContext& Context)"
  },
  {
    "label": "FStaticMeshStreamIn_IO()",
    "kind": "Method",
    "detail": "Function (bool bDiscardCPUData = false ; int32 NumReferenceChecks = 0 ; uint32 PreviousNumberOfExternalReferences = 0 ; } ; class FStaticMeshStreamIn_IO : public FStaticMeshStreamIn { public :)",
    "insertText": "FStaticMeshStreamIn_IO(const UStaticMesh* InMesh, bool bHighPrio, EThreadType CreateResourcesThread)"
  },
  {
    "label": "FStaticMeshStreamIn_IO()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStaticMeshStreamIn_IO()"
  },
  {
    "label": "FCancelIORequestsTask()",
    "kind": "Method",
    "detail": "Function (protected : class FCancelIORequestsTask : public FNonAbandonableTask { public :)",
    "insertText": "FCancelIORequestsTask(FStaticMeshStreamIn_IO* InPendingUpdate) : PendingUpdate(InPendingUpdate)"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoWork()"
  },
  {
    "label": "SetIORequest()",
    "kind": "Method",
    "detail": "Function (} private : TRefCountPtr<FStaticMeshStreamIn_IO> PendingUpdate ; } ; typedef FAutoDeleteAsyncTask<FCancelIORequestsTask> FAsyncCancelIORequestsTask ; class FCancelIORequestsTask ; void)",
    "insertText": "SetIORequest(const FContext& Context)"
  },
  {
    "label": "ClearIORequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearIORequest(const FContext& Context)"
  },
  {
    "label": "ReportIOError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportIOError(const FContext& Context)"
  },
  {
    "label": "SerializeLODData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeLODData(const FContext& Context)"
  },
  {
    "label": "CancelIORequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelIORequest()"
  },
  {
    "label": "DoInitiateIO()",
    "kind": "Method",
    "detail": "Function (; FBulkDataBatchRequest BulkDataRequest ; FIoBuffer BulkData ; bool bHighPrioIORequest ; bool bFailedOnIOError = false ; void)",
    "insertText": "DoInitiateIO(const FContext& Context)"
  },
  {
    "label": "DoSerializeLODData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoSerializeLODData(const FContext& Context)"
  },
  {
    "label": "DoCreateBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCreateBuffers(const FContext& Context)"
  },
  {
    "label": "DoCancelIO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoCancelIO(const FContext& Context)"
  },
  {
    "label": "FStaticMeshStreamIn_DDC()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITOR class FStaticMeshStreamIn_DDC : public FStaticMeshStreamIn { public :)",
    "insertText": "FStaticMeshStreamIn_DDC(const UStaticMesh* InMesh, EThreadType CreateResourcesThread)"
  },
  {
    "label": "FStaticMeshStreamIn_DDC()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStaticMeshStreamIn_DDC()"
  },
  {
    "label": "LoadNewLODsFromDDC()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "LoadNewLODsFromDDC(const FContext& Context)"
  },
  {
    "label": "DoLoadNewLODsFromDDC()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "DoLoadNewLODsFromDDC(const FContext& Context)"
  }
]