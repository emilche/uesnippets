[
  {
    "label": "ICustomSceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICustomSceneOutliner"
  },
  {
    "label": "ISceneOutlinerColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutlinerColumn"
  },
  {
    "label": "FSceneOutlinerInitializationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerInitializationOptions"
  },
  {
    "label": "FSceneOutlinerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneOutlinerModule"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" ISceneOutliner . h \" # include \" SceneOutlinerPublicTypes . h \" # include \" Misc / NamePermissionList . h \" class ICustomSceneOutliner ; class ISceneOutlinerColumn ; struct FSceneOutlinerInitializationOptions ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnActorPicked, AActor*)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnComponentPicked, UActorComponent*)"
  },
  {
    "label": "FSceneOutlinerModule()",
    "kind": "Method",
    "detail": "Function (class FSceneOutlinerModule : public IModuleInterface { public :)",
    "insertText": "FSceneOutlinerModule()"
  },
  {
    "label": "CreateSceneOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISceneOutliner>)",
    "insertText": "CreateSceneOutliner(const FSceneOutlinerInitializationOptions& InitOptions)"
  },
  {
    "label": "CreateActorPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISceneOutliner>)",
    "insertText": "CreateActorPicker(const FSceneOutlinerInitializationOptions& InInitOptions, const FOnActorPicked& OnActorPickedDelegate, TWeakObjectPtr<UWorld> SpecifiedWorld = nullptr, bool bHideLevelInstanceHierarchy = true)"
  },
  {
    "label": "CreateComponentPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISceneOutliner>)",
    "insertText": "CreateComponentPicker(const FSceneOutlinerInitializationOptions& InInitOptions, const FOnComponentPicked& OnComponentPickedDelegate, TWeakObjectPtr<UWorld> SpecifiedWorld = nullptr)"
  },
  {
    "label": "CreateActorBrowser()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ISceneOutliner>)",
    "insertText": "CreateActorBrowser(const FSceneOutlinerInitializationOptions& InInitOptions, TWeakObjectPtr<UWorld> SpecifiedWorld = nullptr)"
  },
  {
    "label": "RegisterCustomSceneOutlinerFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomSceneOutlinerFactory(FName ID, FSceneOutlinerFactory InOutlinerFactory)"
  },
  {
    "label": "UnregisterCustomSceneOutlinerFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomSceneOutlinerFactory(FName ID)"
  },
  {
    "label": "CreateCustomRegisteredOutliner()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ISceneOutliner>)",
    "insertText": "CreateCustomRegisteredOutliner(FName ID, FSceneOutlinerInitializationOptions InInitOptions)"
  },
  {
    "label": "IsCustomSceneOutlinerFactoryRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomSceneOutlinerFactoryRegistered(FName ID)"
  },
  {
    "label": "CreateActorBrowserColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateActorBrowserColumns(FSceneOutlinerInitializationOptions& InInitOptions, UWorld* InWorld = nullptr)"
  },
  {
    "label": "GetColumnPermissionList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FNamePermissionList>&)",
    "insertText": "GetColumnPermissionList()"
  },
  {
    "label": "OnColumnPermissionListChanged()",
    "kind": "Method",
    "detail": "Function (FOnColumnPermissionListChanged&)",
    "insertText": "OnColumnPermissionListChanged()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (auto ID =)",
    "insertText": "GetID()"
  },
  {
    "label": "CreateColumn()",
    "kind": "Method",
    "detail": "Function (auto)",
    "insertText": "CreateColumn(ISceneOutliner& Outliner)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} ; ColumnMap .)",
    "insertText": "Add(ID, FCreateSceneOutlinerColumn::CreateStatic( CreateColumn ))"
  },
  {
    "label": "RegisterDefaultColumnType()",
    "kind": "Method",
    "detail": "Function (} } template<T> void)",
    "insertText": "RegisterDefaultColumnType(FSceneOutlinerColumnInfo InColumnInfo)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (DefaultColumnMap .)",
    "insertText": "Add(ID, InColumnInfo)"
  },
  {
    "label": "UnRegisterColumnType()",
    "kind": "Method",
    "detail": "Function (} } template<T> void)",
    "insertText": "UnRegisterColumnType()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (ColumnMap .)",
    "insertText": "Remove(T::GetID())"
  },
  {
    "label": "FactoryColumn()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<ISceneOutlinerColumn>)",
    "insertText": "FactoryColumn(FName ID, ISceneOutliner& Outliner)"
  },
  {
    "label": "CreateActorInfoColumns()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } void)",
    "insertText": "CreateActorInfoColumns(FSceneOutlinerInitializationOptions& InInitOptions, UWorld* WorldPtr = nullptr)"
  },
  {
    "label": "CreateWorldPartitionColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateWorldPartitionColumns(FSceneOutlinerInitializationOptions& InInitOptions, UWorld* WorldPtr = nullptr)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (TMap<FName,FSceneOutlinerColumnInfo> DefaultColumnMap ; private : TMap<FName,FCreateSceneOutlinerColumn> ColumnMap ; TSharedRef<FNamePermissionList> ColumnPermissionList ; FOnColumnPermissionListChanged ColumnPermissionListChanged ; TMap<FName,FSceneOutlinerFactory> CustomOutlinerFactories ; public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  }
]