[
  {
    "label": "SNPRINTF()",
    "kind": "Method",
    "detail": "Function (# ifndef __JINCLUDE_H__ # define __JINCLUDE_H__ # include \" jconfig . h \" # include \" jconfigint . h \" # define JCONFIG_INCLUDED # include<stddef . h> # include<stdlib . h> # include<stdio . h> # include<string . h> # ifdef _MSC_VER # define)",
    "insertText": "SNPRINTF(str, n, format, ...) \\ _snprintf_s(str, n, _TRUNCATE, format, ##__VA_ARGS__) #else #define SNPRINTF snprintf #endif #ifndef NO_GETENV #ifdef _MSC_VER static INLINE int GETENV_S(char *buffer, size_t buffer_size, const char *name)"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (size_t required_size ;)",
    "insertText": "return(int)getenv_s(&required_size, buffer, buffer_size, name)"
  },
  {
    "label": "GETENV_S()",
    "kind": "Method",
    "detail": "Function (} # else # include<errno . h> int)",
    "insertText": "GETENV_S(char *buffer, size_t buffer_size, const char *name)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (char* env ;)",
    "insertText": "if(!buffer)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(buffer_size == 0) return (errno = EINVAL)"
  },
  {
    "label": "getenv()",
    "kind": "Method",
    "detail": "Function (* buffer = 0 ; return 0 ; } env =)",
    "insertText": "getenv(name)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (* buffer = 0 ; return 0 ; })",
    "insertText": "if(strlen(env) + 1 > buffer_size)"
  },
  {
    "label": "strncpy()",
    "kind": "Method",
    "detail": "Function (* buffer = 0 ; return ERANGE ; })",
    "insertText": "strncpy(buffer, env, buffer_size)"
  },
  {
    "label": "setenv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setenv(name, value, 1)"
  }
]