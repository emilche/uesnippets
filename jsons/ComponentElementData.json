[
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "FComponentElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentElementData"
  },
  {
    "label": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementData . h \" # include \" UObject / Object . h \" class UActorComponent ; struct FTypedElementHandle ; struct FComponentElementData {)",
    "insertText": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI(FComponentElementData)"
  },
  {
    "label": "FComponentElementData()",
    "kind": "Method",
    "detail": "Function (UActorComponent* Component = nullptr ; } ; template<> FString GetTypedElementDebugId<)",
    "insertText": "FComponentElementData(const FComponentElementData& InElementData)"
  },
  {
    "label": "Object()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "Object(UObject*)"
  },
  {
    "label": "GetComponentFromHandle()",
    "kind": "Method",
    "detail": "Function (} namespace ComponentElementDataUtil { UActorComponent*)",
    "insertText": "GetComponentFromHandle(const FTypedElementHandle& InHandle, const bool bSilent = false)"
  },
  {
    "label": "GetComponentFromHandleChecked()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "GetComponentFromHandleChecked(const FTypedElementHandle& InHandle)"
  },
  {
    "label": "GetComponentsFromHandles()",
    "kind": "Method",
    "detail": "Function (template<ElementHandleType> TArray<UActorComponent*>)",
    "insertText": "GetComponentsFromHandles(TArrayView<const ElementHandleType> InHandles, const bool bSilent = false)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (TArray<UActorComponent*> Components ; Components .)",
    "insertText": "Reserve(InHandles.Num())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Components .)",
    "insertText": "Add(Component)"
  },
  {
    "label": "GetComponentsFromHandlesChecked()",
    "kind": "Method",
    "detail": "Function (} } return Components ; } template<ElementHandleType> TArray<UActorComponent*>)",
    "insertText": "GetComponentsFromHandlesChecked(TArrayView<const ElementHandleType> InHandles)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Components .)",
    "insertText": "Add(GetComponentFromHandleChecked(Handle))"
  }
]