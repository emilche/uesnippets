[
  {
    "label": "FIrisPackageMapExports",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIrisPackageMapExports"
  },
  {
    "label": "FNetReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetReferenceCollector"
  },
  {
    "label": "FIrisPackageMapExportsQuantizedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIrisPackageMapExportsQuantizedType"
  },
  {
    "label": "FQuantizedName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQuantizedName"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "FIrisPackageMapExportsUtil",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIrisPackageMapExportsUtil"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FNetSerializationContext& Context, const QuantizedType& Value)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deserialize(FNetSerializationContext& Context, QuantizedType& Value)"
  },
  {
    "label": "Quantize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Quantize(FNetSerializationContext& Context, const UE::Net::FIrisPackageMapExports& PackageMapExport, TArrayView<const UE::Net::FNetToken> NetTokensPendingExport, QuantizedType& Target)"
  },
  {
    "label": "Dequantize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dequantize(FNetSerializationContext& Context, const QuantizedType& Source, UE::Net::FIrisPackageMapExports& PackageMapExports)"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEqual(FNetSerializationContext& Context, const QuantizedType& Value0, const QuantizedType& Value1)"
  },
  {
    "label": "CloneDynamicState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloneDynamicState(FNetSerializationContext& Context, QuantizedType& Target, const QuantizedType& Source)"
  },
  {
    "label": "FreeDynamicState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeDynamicState(FNetSerializationContext& Context, QuantizedType& Value)"
  },
  {
    "label": "CollectNetReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectNetReferences(FNetSerializationContext& Context, const QuantizedType& Value, const FNetSerializerChangeMaskParam& ChangeMaskInfo, FNetReferenceCollector& Collector)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(FNetSerializationContext&, const QuantizedType& Value)"
  }
]