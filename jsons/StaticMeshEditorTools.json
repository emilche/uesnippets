[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FLevelOfDetailSettingsLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelOfDetailSettingsLayout"
  },
  {
    "label": "FNaniteStaticMeshLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNaniteStaticMeshLayout"
  },
  {
    "label": "FStaticMeshEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshEditor"
  },
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IDetailGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailGroup"
  },
  {
    "label": "IStaticMeshEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStaticMeshEditor"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "FSectionLocalizer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSectionLocalizer"
  },
  {
    "label": "ECreationModeChoice",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECreationModeChoice"
  },
  {
    "label": "ELimitModeChoice",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELimitModeChoice"
  },
  {
    "label": "FStaticMeshDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshDetails"
  },
  {
    "label": "SConvexDecomposition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SConvexDecomposition"
  },
  {
    "label": "FMeshBuildSettingsLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshBuildSettingsLayout"
  },
  {
    "label": "FMeshReductionSettingsLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshReductionSettingsLayout"
  },
  {
    "label": "FMeshSectionSettingsLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshSectionSettingsLayout"
  },
  {
    "label": "ISectionListBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISectionListBuilder"
  },
  {
    "label": "FMeshMaterialsLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshMaterialsLayout"
  },
  {
    "label": "IMaterialListBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMaterialListBuilder"
  },
  {
    "label": "FStaticMeshDetails()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" Engine / EngineTypes . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SBoxPanel . h \" # include \" MeshReductionSettings . h \" # include \" Engine / StaticMesh . h \" # include \" IDetailCustomization . h \" # include \" StaticMeshResources . h \" # include \" Widgets / Input / SSpinBox . h \" # include \" IDetailCustomNodeBuilder . h \" struct FAssetData ; class FAssetThumbnailPool ; class FDetailWidgetRow ; class FLevelOfDetailSettingsLayout ; class FNaniteStaticMeshLayout ; class FStaticMeshEditor ; class IDetailCategoryBuilder ; class IDetailChildrenBuilder ; class IDetailLayoutBuilder ; class IDetailGroup ; class IStaticMeshEditor ; class UMaterialInterface ; struct FSectionLocalizer ; enum ECreationModeChoice { CreateNew,UseChannel0,} ; enum ELimitModeChoice { Stretching,Charts } ; class FStaticMeshDetails : public IDetailCustomization { public :)",
    "insertText": "FStaticMeshDetails(class FStaticMeshEditor& InStaticMeshEditor)"
  },
  {
    "label": "FStaticMeshDetails()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FStaticMeshDetails()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(class IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "IsApplyNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsApplyNeeded()"
  },
  {
    "label": "ApplyChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyChanges()"
  },
  {
    "label": "OnInstancedFbxStaticMeshImportDataPropertyIteration()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FLevelOfDetailSettingsLayout> LevelOfDetailSettings ; TSharedPtr<FNaniteStaticMeshLayout> NaniteSettings ; class FStaticMeshEditor& StaticMeshEditor ; TSharedPtr<IPropertyHandle> VertexColorImportOptionHandle ; TSharedPtr<IPropertyHandle> VertexColorImportOverrideHandle ; void)",
    "insertText": "OnInstancedFbxStaticMeshImportDataPropertyIteration(IDetailCategoryBuilder& BaseCategory, IDetailGroup* PropertyGroup, TSharedRef<IPropertyHandle>& Property)"
  },
  {
    "label": "OnLightmapSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLightmapSettingsChanged()"
  },
  {
    "label": "GetVertexOverrideColorEnabledState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVertexOverrideColorEnabledState()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SConvexDecomposition : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SConvexDecomposition ) : _StaticMeshEditorPtr()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr< IStaticMeshEditor >, StaticMeshEditorPtr ) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SConvexDecomposition()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SConvexDecomposition()"
  },
  {
    "label": "OnApplyDecomp()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnApplyDecomp()"
  },
  {
    "label": "OnDefaults()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDefaults()"
  },
  {
    "label": "OnHullCountCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHullCountCommitted(uint32 InNewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnHullCountChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHullCountChanged(uint32 InNewValue)"
  },
  {
    "label": "GetHullPrecision()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetHullPrecision()"
  },
  {
    "label": "OnHullPrecisionCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHullPrecisionCommitted(uint32 InNewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnHullPrecisionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHullPrecisionChanged(uint32 InNewValue)"
  },
  {
    "label": "GetHullCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetHullCount()"
  },
  {
    "label": "OnVertsPerHullCountCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVertsPerHullCountCommitted(int32 InNewValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnVertsPerHullCountChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnVertsPerHullCountChanged(int32 InNewValue)"
  },
  {
    "label": "GetVertsPerHullCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVertsPerHullCount()"
  },
  {
    "label": "FMeshBuildSettingsLayout()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<IStaticMeshEditor> StaticMeshEditorPtr ; TSharedPtr<SSpinBox<uint32>> HullCount ; TSharedPtr<SSpinBox<uint32>> HullPrecision ; uint32 CurrentHullCount ; uint32 CurrentHullPrecision ; TSharedPtr<SSpinBox<int32>> MaxVertsPerHull ; int32 CurrentMaxVertsPerHullCount ; } ; class FMeshBuildSettingsLayout : public IDetailCustomNodeBuilder,public TSharedFromThis<FMeshBuildSettingsLayout> { public :)",
    "insertText": "FMeshBuildSettingsLayout(TSharedRef<FLevelOfDetailSettingsLayout> InParentLODSettings, int32 InLODIndex)"
  },
  {
    "label": "FMeshBuildSettingsLayout()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMeshBuildSettingsLayout()"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (const FMeshBuildSettings&)",
    "insertText": "GetSettings()"
  },
  {
    "label": "SetOnRebuildChildren()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetOnRebuildChildren(FSimpleDelegate InOnRegenerateChildren)"
  },
  {
    "label": "GenerateHeaderRowContent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateHeaderRowContent(FDetailWidgetRow& NodeRow)"
  },
  {
    "label": "GenerateChildContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateChildContent(IDetailChildrenBuilder& ChildrenBuilder)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "RequiresTick()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RequiresTick()"
  },
  {
    "label": "MeshBuildSettings()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MeshBuildSettings(\"MeshBuildSettings\")"
  },
  {
    "label": "ShouldRecomputeNormals()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldRecomputeNormals()"
  },
  {
    "label": "ShouldRecomputeTangents()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldRecomputeTangents()"
  },
  {
    "label": "ShouldUseMikkTSpace()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldUseMikkTSpace()"
  },
  {
    "label": "ShouldComputeWeightedNormals()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldComputeWeightedNormals()"
  },
  {
    "label": "ShouldRemoveDegenerates()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldRemoveDegenerates()"
  },
  {
    "label": "ShouldBuildReversedIndexBuffer()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldBuildReversedIndexBuffer()"
  },
  {
    "label": "ShouldUseHighPrecisionTangentBasis()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldUseHighPrecisionTangentBasis()"
  },
  {
    "label": "ShouldUseFullPrecisionUVs()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldUseFullPrecisionUVs()"
  },
  {
    "label": "ShouldUseBackwardsCompatibleF16TruncUVs()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldUseBackwardsCompatibleF16TruncUVs()"
  },
  {
    "label": "ShouldGenerateLightmapUVs()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldGenerateLightmapUVs()"
  },
  {
    "label": "ShouldGenerateDistanceFieldAsIfTwoSided()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldGenerateDistanceFieldAsIfTwoSided()"
  },
  {
    "label": "IsRemoveDegeneratesDisabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRemoveDegeneratesDisabled()"
  },
  {
    "label": "GetMinLightmapResolution()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMinLightmapResolution()"
  },
  {
    "label": "GetSrcLightmapIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSrcLightmapIndex()"
  },
  {
    "label": "GetDstLightmapIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDstLightmapIndex()"
  },
  {
    "label": "GetBuildScaleX()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetBuildScaleX()"
  },
  {
    "label": "GetBuildScaleY()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetBuildScaleY()"
  },
  {
    "label": "GetBuildScaleZ()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetBuildScaleZ()"
  },
  {
    "label": "GetDistanceFieldResolutionScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDistanceFieldResolutionScale()"
  },
  {
    "label": "GetMaxLumenMeshCards()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaxLumenMeshCards()"
  },
  {
    "label": "OnRecomputeNormalsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRecomputeNormalsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnRecomputeTangentsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRecomputeTangentsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnUseMikkTSpaceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUseMikkTSpaceChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnComputeWeightedNormalsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComputeWeightedNormalsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnRemoveDegeneratesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveDegeneratesChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnBuildReversedIndexBufferChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBuildReversedIndexBufferChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnUseHighPrecisionTangentBasisChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUseHighPrecisionTangentBasisChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnUseFullPrecisionUVsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUseFullPrecisionUVsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnUseBackwardsCompatibleF16TruncUVsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUseBackwardsCompatibleF16TruncUVsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnGenerateLightmapUVsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGenerateLightmapUVsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnGenerateDistanceFieldAsIfTwoSidedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGenerateDistanceFieldAsIfTwoSidedChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnMinLightmapResolutionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMinLightmapResolutionChanged(int32 NewValue)"
  },
  {
    "label": "OnSrcLightmapIndexChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSrcLightmapIndexChanged(int32 NewValue)"
  },
  {
    "label": "OnDstLightmapIndexChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDstLightmapIndexChanged(int32 NewValue)"
  },
  {
    "label": "OnBuildScaleXChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBuildScaleXChanged(float NewScaleX, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnBuildScaleYChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBuildScaleYChanged(float NewScaleY, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnBuildScaleZChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBuildScaleZChanged(float NewScaleZ, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnDistanceFieldResolutionScaleChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistanceFieldResolutionScaleChanged(float NewValue)"
  },
  {
    "label": "OnDistanceFieldResolutionScaleCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistanceFieldResolutionScaleCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "GetCurrentDistanceFieldReplacementMeshPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentDistanceFieldReplacementMeshPath()"
  },
  {
    "label": "OnDistanceFieldReplacementMeshSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistanceFieldReplacementMeshSelected(const FAssetData& AssetData)"
  },
  {
    "label": "OnMaxLumenMeshCardsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxLumenMeshCardsChanged(int32 NewValue)"
  },
  {
    "label": "OnMaxLumenMeshCardsCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxLumenMeshCardsCommitted(int32 NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "FMeshReductionSettingsLayout()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<FLevelOfDetailSettingsLayout> ParentLODSettings ; FMeshBuildSettings BuildSettings ; int32 LODIndex ; } ; class FMeshReductionSettingsLayout : public IDetailCustomNodeBuilder,public TSharedFromThis<FMeshReductionSettingsLayout> { public :)",
    "insertText": "FMeshReductionSettingsLayout(TSharedRef<FLevelOfDetailSettingsLayout> InParentLODSettings, int32 InCurrentLODIndex, bool InCanReduceMyself)"
  },
  {
    "label": "FMeshReductionSettingsLayout()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMeshReductionSettingsLayout()"
  },
  {
    "label": "UpdateSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSettings(const FMeshReductionSettings& InSettings)"
  },
  {
    "label": "MeshReductionSettings()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "MeshReductionSettings(\"MeshReductionSettings\")"
  },
  {
    "label": "GetPercentTriangles()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPercentTriangles()"
  },
  {
    "label": "GetMaxNumOfPercentTriangles()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMaxNumOfPercentTriangles()"
  },
  {
    "label": "GetPercentVertices()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPercentVertices()"
  },
  {
    "label": "GetMaxNumOfPercentVertices()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetMaxNumOfPercentVertices()"
  },
  {
    "label": "GetMaxDeviation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxDeviation()"
  },
  {
    "label": "GetPixelError()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPixelError()"
  },
  {
    "label": "GetWeldingThreshold()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetWeldingThreshold()"
  },
  {
    "label": "ShouldRecalculateNormals()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "ShouldRecalculateNormals()"
  },
  {
    "label": "GetHardAngleThreshold()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHardAngleThreshold()"
  },
  {
    "label": "OnPercentTrianglesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPercentTrianglesChanged(float NewValue)"
  },
  {
    "label": "OnPercentTrianglesCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPercentTrianglesCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnMaxNumOfPercentTrianglesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxNumOfPercentTrianglesChanged(uint32 NewValue)"
  },
  {
    "label": "OnMaxNumOfPercentTrianglesCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxNumOfPercentTrianglesCommitted(uint32 NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnPercentVerticesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPercentVerticesChanged(float NewValue)"
  },
  {
    "label": "OnPercentVerticesCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPercentVerticesCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnMaxNumOfPercentVerticesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxNumOfPercentVerticesChanged(uint32 NewValue)"
  },
  {
    "label": "OnMaxNumOfPercentVerticesCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxNumOfPercentVerticesCommitted(uint32 NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnMaxDeviationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxDeviationChanged(float NewValue)"
  },
  {
    "label": "OnMaxDeviationCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaxDeviationCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnPixelErrorChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPixelErrorChanged(float NewValue)"
  },
  {
    "label": "OnPixelErrorCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPixelErrorCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnRecalculateNormalsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRecalculateNormalsChanged(ECheckBoxState NewValue)"
  },
  {
    "label": "OnWeldingThresholdChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWeldingThresholdChanged(float NewValue)"
  },
  {
    "label": "OnWeldingThresholdCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWeldingThresholdCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnHardAngleThresholdChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHardAngleThresholdChanged(float NewValue)"
  },
  {
    "label": "OnHardAngleThresholdCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHardAngleThresholdCommitted(float NewValue, ETextCommit::Type TextCommitType)"
  },
  {
    "label": "OnSilhouetteImportanceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSilhouetteImportanceChanged(TSharedPtr<FString> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnTextureImportanceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTextureImportanceChanged(TSharedPtr<FString> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnShadingImportanceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShadingImportanceChanged(TSharedPtr<FString> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnTerminationCriterionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTerminationCriterionChanged(TSharedPtr<FString> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "UseNativeToolLayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseNativeToolLayout()"
  },
  {
    "label": "GetTriangleCriterionVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetTriangleCriterionVisibility()"
  },
  {
    "label": "GetVertexCriterionVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetVertexCriterionVisibility()"
  },
  {
    "label": "GetBaseLODIndex()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetBaseLODIndex()"
  },
  {
    "label": "SetBaseLODIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBaseLODIndex(int32 NewLODBaseIndex)"
  },
  {
    "label": "FMeshSectionSettingsLayout()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<FLevelOfDetailSettingsLayout> ParentLODSettings ; FMeshReductionSettings ReductionSettings ; int32 CurrentLODIndex ; bool bCanReduceMyself ; TArray<TSharedPtr<FString>> ImportanceOptions ; TSharedPtr<STextComboBox> SilhouetteCombo ; TSharedPtr<STextComboBox> TextureCombo ; TSharedPtr<STextComboBox> ShadingCombo ; TSharedPtr<STextComboBox> TerminationCriterionCombo ; TArray<TSharedPtr<FString>> TerminationOptions ; bool bUseQuadricSimplifier ; } ; class FMeshSectionSettingsLayout : public TSharedFromThis<FMeshSectionSettingsLayout> { public :)",
    "insertText": "FMeshSectionSettingsLayout(IStaticMeshEditor& InStaticMeshEditor, int32 InLODIndex, TArray<class IDetailCategoryBuilder*> &InLodCategories) : StaticMeshEditor( InStaticMeshEditor ) , LODIndex( InLODIndex ) , LodCategoriesPtr(&InLodCategories)"
  },
  {
    "label": "FMeshSectionSettingsLayout()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FMeshSectionSettingsLayout()"
  },
  {
    "label": "AddToCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToCategory(IDetailCategoryBuilder& CategoryBuilder)"
  },
  {
    "label": "SetCurrentLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentLOD(int32 NewLodIndex)"
  },
  {
    "label": "GetStaticMesh()",
    "kind": "Method",
    "detail": "Function (private : UStaticMesh&)",
    "insertText": "GetStaticMesh()"
  },
  {
    "label": "OnCopySectionList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopySectionList(int32 CurrentLODIndex)"
  },
  {
    "label": "OnCanCopySectionList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanCopySectionList(int32 CurrentLODIndex)"
  },
  {
    "label": "OnPasteSectionList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteSectionList(int32 CurrentLODIndex)"
  },
  {
    "label": "OnCopySectionItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopySectionItem(int32 CurrentLODIndex, int32 SectionIndex)"
  },
  {
    "label": "OnCanCopySectionItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanCopySectionItem(int32 CurrentLODIndex, int32 SectionIndex)"
  },
  {
    "label": "OnPasteSectionItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteSectionItem(int32 CurrentLODIndex, int32 SectionIndex)"
  },
  {
    "label": "OnGetSectionsForView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetSectionsForView(class ISectionListBuilder& OutSections, int32 ForLODIndex)"
  },
  {
    "label": "OnSectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionChanged(int32 ForLODIndex, int32 SectionIndex, int32 NewMaterialSlotIndex, FName NewMaterialSlotName)"
  },
  {
    "label": "OnGenerateCustomNameWidgetsForSection()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateCustomNameWidgetsForSection(int32 ForLODIndex, int32 SectionIndex)"
  },
  {
    "label": "OnGenerateCustomSectionWidgetsForSection()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateCustomSectionWidgetsForSection(int32 ForLODIndex, int32 SectionIndex)"
  },
  {
    "label": "IsSectionVisibleInRayTracing()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsSectionVisibleInRayTracing(int32 SectionIndex)"
  },
  {
    "label": "OnSectionVisibleInRayTracingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionVisibleInRayTracingChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "DoesSectionAffectDistanceFieldLighting()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "DoesSectionAffectDistanceFieldLighting(int32 SectionIndex)"
  },
  {
    "label": "OnSectionAffectDistanceFieldLightingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionAffectDistanceFieldLightingChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "IsSectionOpaque()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsSectionOpaque(int32 SectionIndex)"
  },
  {
    "label": "OnSectionForceOpaqueFlagChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionForceOpaqueFlagChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "DoesSectionCastShadow()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "DoesSectionCastShadow(int32 SectionIndex)"
  },
  {
    "label": "OnSectionCastShadowChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionCastShadowChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "DoesSectionCollide()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "DoesSectionCollide(int32 SectionIndex)"
  },
  {
    "label": "SectionCollisionEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SectionCollisionEnabled()"
  },
  {
    "label": "GetCollisionEnabledToolTip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCollisionEnabledToolTip()"
  },
  {
    "label": "OnSectionCollisionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionCollisionChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "IsSectionHighlighted()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsSectionHighlighted(int32 SectionIndex)"
  },
  {
    "label": "OnSectionHighlightedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionHighlightedChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "IsSectionIsolatedEnabled()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsSectionIsolatedEnabled(int32 SectionIndex)"
  },
  {
    "label": "OnSectionIsolatedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionIsolatedChanged(ECheckBoxState NewState, int32 SectionIndex)"
  },
  {
    "label": "CallPostEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPostEditChange(FProperty* PropertyChanged=nullptr)"
  },
  {
    "label": "UpdateLODCategoryVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLODCategoryVisibility()"
  },
  {
    "label": "FSectionLocalizer()",
    "kind": "Method",
    "detail": "Function (IStaticMeshEditor& StaticMeshEditor ; int32 LODIndex ; TArray<class IDetailCategoryBuilder*>* LodCategoriesPtr ; } ; struct FSectionLocalizer {)",
    "insertText": "FSectionLocalizer(int32 InLODIndex, int32 InSectionIndex) : LODIndex(InLODIndex) , SectionIndex(InSectionIndex)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSectionLocalizer& Other)"
  },
  {
    "label": "FMeshMaterialsLayout()",
    "kind": "Method",
    "detail": "Function (} int32 LODIndex ; int32 SectionIndex ; } ; class FMeshMaterialsLayout : public TSharedFromThis<FMeshMaterialsLayout> { public :)",
    "insertText": "FMeshMaterialsLayout(IStaticMeshEditor& InStaticMeshEditor) : StaticMeshEditor(InStaticMeshEditor)"
  },
  {
    "label": "FMeshMaterialsLayout()",
    "kind": "Method",
    "detail": "Function (bDeleteWarningConsumed = false ; } ~)",
    "insertText": "FMeshMaterialsLayout()"
  },
  {
    "label": "AddToCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToCategory(IDetailCategoryBuilder& CategoryBuilder, const TArray<FAssetData>& AssetDataArray)"
  },
  {
    "label": "AddMaterialSlot()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "AddMaterialSlot()"
  },
  {
    "label": "GetMaterialArrayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMaterialArrayText()"
  },
  {
    "label": "GetMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMaterials(class IMaterialListBuilder& ListBuilder)"
  },
  {
    "label": "OnMaterialChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialChanged(UMaterialInterface* NewMaterial, UMaterialInterface* PrevMaterial, int32 SlotIndex, bool bReplaceAll)"
  },
  {
    "label": "OnGenerateWidgetsForMaterial()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateWidgetsForMaterial(UMaterialInterface* Material, int32 SlotIndex)"
  },
  {
    "label": "OnGenerateNameWidgetsForMaterial()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateNameWidgetsForMaterial(UMaterialInterface* Material, int32 SlotIndex)"
  },
  {
    "label": "OnResetMaterialToDefaultClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetMaterialToDefaultClicked(UMaterialInterface* Material, int32 SlotIndex)"
  },
  {
    "label": "IsMaterialHighlighted()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsMaterialHighlighted(int32 SlotIndex)"
  },
  {
    "label": "OnMaterialHighlightedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialHighlightedChanged(ECheckBoxState NewState, int32 SlotIndex)"
  },
  {
    "label": "IsMaterialIsolatedEnabled()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsMaterialIsolatedEnabled(int32 SlotIndex)"
  },
  {
    "label": "OnMaterialIsolatedChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialIsolatedChanged(ECheckBoxState NewState, int32 SlotIndex)"
  },
  {
    "label": "GetOriginalImportMaterialNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetOriginalImportMaterialNameText(int32 MaterialIndex)"
  },
  {
    "label": "GetMaterialNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMaterialNameText(int32 MaterialIndex)"
  },
  {
    "label": "OnMaterialNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialNameCommitted(const FText& InValue, ETextCommit::Type CommitType, int32 MaterialIndex)"
  },
  {
    "label": "CanDeleteMaterialSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteMaterialSlot(int32 MaterialIndex)"
  },
  {
    "label": "OnDeleteMaterialSlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteMaterialSlot(int32 MaterialIndex)"
  },
  {
    "label": "OnGetMaterialSlotUsedByMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetMaterialSlotUsedByMenuContent(int32 MaterialIndex)"
  },
  {
    "label": "GetFirstMaterialSlotUsedBySection()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFirstMaterialSlotUsedBySection(int32 MaterialIndex)"
  },
  {
    "label": "OnMaterialListDirty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnMaterialListDirty()"
  },
  {
    "label": "IsShadowCastingEnabled()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsShadowCastingEnabled(int32 SlotIndex)"
  },
  {
    "label": "OnShadowCastingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShadowCastingChanged(ECheckBoxState NewState, int32 SlotIndex)"
  },
  {
    "label": "GetOverrideUVDensityVisibililty()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetOverrideUVDensityVisibililty()"
  },
  {
    "label": "IsUVDensityOverridden()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsUVDensityOverridden(int32 SlotIndex)"
  },
  {
    "label": "OnOverrideUVDensityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOverrideUVDensityChanged(ECheckBoxState NewState, int32 SlotIndex)"
  },
  {
    "label": "GetUVDensityVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetUVDensityVisibility(int32 SlotIndex, int32 UVChannelIndex)"
  },
  {
    "label": "GetUVDensityValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetUVDensityValue(int32 SlotIndex, int32 UVChannelIndex)"
  },
  {
    "label": "SetUVDensityValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUVDensityValue(float InDensity, ETextCommit::Type CommitType, int32 SlotIndex, int32 UVChannelIndex)"
  },
  {
    "label": "GetUVDensitySlot()",
    "kind": "Method",
    "detail": "Function (SVerticalBox::FSlot&)",
    "insertText": "GetUVDensitySlot(int32 SlotIndex, int32 UVChannelIndex)"
  },
  {
    "label": "CallPostEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallPostEditChange(FProperty* PropertyChanged = nullptr)"
  },
  {
    "label": "OnCopyMaterialList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyMaterialList()"
  },
  {
    "label": "OnCanCopyMaterialList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanCopyMaterialList()"
  },
  {
    "label": "OnPasteMaterialList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteMaterialList()"
  },
  {
    "label": "OnCopyMaterialItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopyMaterialItem(int32 CurrentSlot)"
  },
  {
    "label": "OnCanCopyMaterialItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanCopyMaterialItem(int32 CurrentSlot)"
  },
  {
    "label": "OnPasteMaterialItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteMaterialItem(int32 CurrentSlot)"
  },
  {
    "label": "FLevelOfDetailSettingsLayout()",
    "kind": "Method",
    "detail": "Function (IStaticMeshEditor& StaticMeshEditor ; TMap<int32,TArray<FSectionLocalizer>> MaterialUsedMap ; bool bDeleteWarningConsumed ; } ; class FLevelOfDetailSettingsLayout : public TSharedFromThis<FLevelOfDetailSettingsLayout> { public :)",
    "insertText": "FLevelOfDetailSettingsLayout(FStaticMeshEditor& StaticMeshEditor)"
  },
  {
    "label": "FLevelOfDetailSettingsLayout()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLevelOfDetailSettingsLayout()"
  },
  {
    "label": "AddToDetailsPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToDetailsPanel(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "IsNaniteEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNaniteEnabled()"
  },
  {
    "label": "AddLODLevelCategories()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddLODLevelCategories(class IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "OnApply()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnApply()"
  },
  {
    "label": "OnLODCountChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODCountChanged(int32 NewValue)"
  },
  {
    "label": "OnLODCountCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODCountCommitted(int32 InValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "GetLODCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODCount()"
  },
  {
    "label": "OnSelectedLODChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedLODChanged(int32 NewLodIndex)"
  },
  {
    "label": "OnMinLODChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMinLODChanged(int32 NewValue, FName Platform)"
  },
  {
    "label": "OnMinLODCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMinLODCommitted(int32 InValue, ETextCommit::Type CommitInfo, FName Platform)"
  },
  {
    "label": "GetMinLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMinLOD(FName Platform)"
  },
  {
    "label": "GetMinLOD()",
    "kind": "Method",
    "detail": "Function (FPerPlatformInt)",
    "insertText": "GetMinLOD()"
  },
  {
    "label": "GetMinLODWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetMinLODWidget(FName PlatformGroupName)"
  },
  {
    "label": "AddMinLODPlatformOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMinLODPlatformOverride(FName PlatformGroupName)"
  },
  {
    "label": "RemoveMinLODPlatformOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveMinLODPlatformOverride(FName PlatformGroupName)"
  },
  {
    "label": "GetMinLODPlatformOverrideNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetMinLODPlatformOverrideNames()"
  },
  {
    "label": "OnMinQualityLevelLODChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMinQualityLevelLODChanged(int32 NewValue, FName QualityLevel)"
  },
  {
    "label": "OnMinQualityLevelLODCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMinQualityLevelLODCommitted(int32 InValue, ETextCommit::Type CommitInfo, FName QualityLevel)"
  },
  {
    "label": "GetMinQualityLevelLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMinQualityLevelLOD(FName QualityLevel)"
  },
  {
    "label": "GetMinQualityLevelLODWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetMinQualityLevelLODWidget(FName QualityLevelName)"
  },
  {
    "label": "AddMinLODQualityLevelOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMinLODQualityLevelOverride(FName QualityLevelName)"
  },
  {
    "label": "RemoveMinLODQualityLevelOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveMinLODQualityLevelOverride(FName QualityLevelName)"
  },
  {
    "label": "GetMinQualityLevelLODOverrideNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetMinQualityLevelLODOverrideNames()"
  },
  {
    "label": "ResetToDefault()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "ResetToDefault()"
  },
  {
    "label": "OnNoRefStreamingLODBiasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNoRefStreamingLODBiasChanged(int32 NewValue, FName QualityLevel)"
  },
  {
    "label": "OnNoRefStreamingLODBiasCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNoRefStreamingLODBiasCommitted(int32 InValue, ETextCommit::Type CommitInfo, FName QualityLevel)"
  },
  {
    "label": "GetNoRefStreamingLODBias()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNoRefStreamingLODBias(FName QualityLevel)"
  },
  {
    "label": "GetNoRefStreamingLODBiasWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetNoRefStreamingLODBiasWidget(FName QualityLevelName)"
  },
  {
    "label": "AddNoRefStreamingLODBiasOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddNoRefStreamingLODBiasOverride(FName QualityLevelName)"
  },
  {
    "label": "RemoveNoRefStreamingLODBiasOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveNoRefStreamingLODBiasOverride(FName QualityLevelName)"
  },
  {
    "label": "GetNoRefStreamingLODBiasOverrideNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetNoRefStreamingLODBiasOverrideNames()"
  },
  {
    "label": "OnNumStreamedLODsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNumStreamedLODsChanged(int32 NewValue, FName Platform)"
  },
  {
    "label": "OnNumStreamedLODsCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNumStreamedLODsCommitted(int32 InValue, ETextCommit::Type CommitInfo, FName Platform)"
  },
  {
    "label": "GetNumStreamedLODs()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumStreamedLODs(FName Platform)"
  },
  {
    "label": "GetNumStreamedLODsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetNumStreamedLODsWidget(FName PlatformGroupName)"
  },
  {
    "label": "AddNumStreamedLODsPlatformOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddNumStreamedLODsPlatformOverride(FName PlatformGroupName)"
  },
  {
    "label": "RemoveNumStreamedLODsPlatformOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveNumStreamedLODsPlatformOverride(FName PlatformGroupName)"
  },
  {
    "label": "GetNumStreamedLODsPlatformOverrideNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetNumStreamedLODsPlatformOverrideNames()"
  },
  {
    "label": "CanRemoveLOD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemoveLOD(int32 LODIndex)"
  },
  {
    "label": "OnRemoveLOD()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnRemoveLOD(int32 LODIndex)"
  },
  {
    "label": "GetLODScreenSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLODScreenSize(FName PlatformGroupName, int32 LODIndex)"
  },
  {
    "label": "GetLODScreenSizeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLODScreenSizeTitle(int32 LODIndex)"
  },
  {
    "label": "CanChangeLODScreenSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChangeLODScreenSize()"
  },
  {
    "label": "GetLODScreenSizeWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetLODScreenSizeWidget(FName PlatformGroupName, int32 LODIndex)"
  },
  {
    "label": "GetLODScreenSizePlatformOverrideNames()",
    "kind": "Method",
    "detail": "Function (TArray<FName>)",
    "insertText": "GetLODScreenSizePlatformOverrideNames(int32 LODIndex)"
  },
  {
    "label": "AddLODScreenSizePlatformOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddLODScreenSizePlatformOverride(FName PlatformGroupName, int32 LODIndex)"
  },
  {
    "label": "RemoveLODScreenSizePlatformOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveLODScreenSizePlatformOverride(FName PlatformGroupName, int32 LODIndex)"
  },
  {
    "label": "OnLODScreenSizeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODScreenSizeChanged(float NewValue, FName PlatformGroupName, int32 LODIndex)"
  },
  {
    "label": "OnLODScreenSizeCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODScreenSizeCommitted(float NewValue, ETextCommit::Type CommitType, FName PlatformGroupName, int32 LODIndex)"
  },
  {
    "label": "GetScreenSizeWidgetWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetScreenSizeWidgetWidth(int32 LODIndex)"
  },
  {
    "label": "GetSourceImportFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSourceImportFilename(int32 LODIndex)"
  },
  {
    "label": "SetSourceImportFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceImportFilename(const FString& SourceFileName, int32 LODIndex)"
  },
  {
    "label": "OnBuildSettingsExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBuildSettingsExpanded(bool bIsExpanded, int32 LODIndex)"
  },
  {
    "label": "OnReductionSettingsExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReductionSettingsExpanded(bool bIsExpanded, int32 LODIndex)"
  },
  {
    "label": "OnSectionSettingsExpanded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSectionSettingsExpanded(bool bIsExpanded, int32 LODIndex)"
  },
  {
    "label": "OnLODGroupChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODGroupChanged(TSharedPtr<FString> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "IsAutoLODEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoLODEnabled()"
  },
  {
    "label": "IsAutoLODChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsAutoLODChecked()"
  },
  {
    "label": "OnAutoLODChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAutoLODChanged(ECheckBoxState NewState)"
  },
  {
    "label": "OnImportLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnImportLOD(TSharedPtr<FString> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "UpdateLODNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLODNames()"
  },
  {
    "label": "GetLODCountTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLODCountTooltip()"
  },
  {
    "label": "GetMinLODTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMinLODTooltip()"
  },
  {
    "label": "GetNoRefStreamingLODBiasTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNoRefStreamingLODBiasTooltip()"
  },
  {
    "label": "GetNumStreamedLODsTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNumStreamedLODsTooltip()"
  },
  {
    "label": "GetLODCustomModeNameContent()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLODCustomModeNameContent(int32 LODIndex)"
  },
  {
    "label": "IsLODCustomModeCheck()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "IsLODCustomModeCheck(int32 LODIndex)"
  },
  {
    "label": "SetLODCustomModeCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODCustomModeCheck(ECheckBoxState NewState, int32 LODIndex)"
  },
  {
    "label": "IsLODCustomModeEnable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLODCustomModeEnable(int32 LODIndex)"
  },
  {
    "label": "OnGenerateLodComboBoxForLodPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateLodComboBoxForLodPicker()"
  },
  {
    "label": "LodComboBoxVisibilityForLodPicker()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "LodComboBoxVisibilityForLodPicker()"
  },
  {
    "label": "IsLodComboBoxEnabledForLodPicker()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLodComboBoxEnabledForLodPicker()"
  },
  {
    "label": "OnGenerateLodMenuForLodPicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateLodMenuForLodPicker()"
  },
  {
    "label": "GetCurrentLodName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentLodName()"
  },
  {
    "label": "GetCurrentLodTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentLodTooltip()"
  }
]