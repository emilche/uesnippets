[
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FActiveSubtitle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveSubtitle"
  },
  {
    "label": "FQueueSubtitleParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FQueueSubtitleParams"
  },
  {
    "label": "FSubtitleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubtitleManager"
  },
  {
    "label": "KillAllSubtitles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KillAllSubtitles(void)"
  },
  {
    "label": "KillSubtitles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KillSubtitles(PTRINT SubtitleID)"
  },
  {
    "label": "TrimRegionToSafeZone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrimRegionToSafeZone(FCanvas* Canvas, FIntRect& InOutSubtitleRegion)"
  },
  {
    "label": "SplitLinesToSafeZone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SplitLinesToSafeZone(FCanvas* Canvas, FIntRect & SubtitleRegion)"
  },
  {
    "label": "FindHighestPrioritySubtitle()",
    "kind": "Method",
    "detail": "Function (PTRINT)",
    "insertText": "FindHighestPrioritySubtitle(float CurrentTime)"
  },
  {
    "label": "QueueSubtitles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSubtitles(PTRINT SubtitleID, float Priority, bool bManualWordWrap, bool bSingleLine, float SoundDuration, const TArray<FSubtitleCue>& Subtitles, float InStartTime, float InCurrentTime)"
  },
  {
    "label": "QueueSubtitles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSubtitles(const FQueueSubtitleParams& QueueSubtitlesParams)"
  },
  {
    "label": "DisplaySubtitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplaySubtitle(FCanvas* Canvas, FActiveSubtitle* Subtitle, FIntRect & Parms, const FLinearColor& Color)"
  },
  {
    "label": "DisplaySubtitles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplaySubtitles(FCanvas* InCanvas, FIntRect & SubtitleRegion, float InAudioTimeSeconds)"
  },
  {
    "label": "SetMovieSubtitle()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "SetMovieSubtitle(UObject* SubtitleOwner, const TArray<FString>& Subtitles)"
  },
  {
    "label": "DisplaySubtitle_ToDisplays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplaySubtitle_ToDisplays(FActiveSubtitle* Subtitle)"
  },
  {
    "label": "SubtitleCuesToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SubtitleCuesToString(FActiveSubtitle* Subtitle)"
  }
]