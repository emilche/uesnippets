[
  {
    "label": "FInvariantCulture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInvariantCulture"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # if ! UE_ENABLE_ICU # include \" Internationalization / Culture . h \" # include \" Internationalization / LegacyCulture . h \" # include \" Internationalization / Internationalization . h \" # include \" Internationalization / FastDecimalFormat . h \" # define LOCTEXT_NAMESPACE \" Internationalization \" class FInvariantCulture { public : FCultureRef)",
    "insertText": "Create()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (FDecimalNumberFormattingRules DecimalNumberFormattingRules ; DecimalNumberFormattingRules . NaNString =)",
    "insertText": "TEXT(\"NaN\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (DecimalNumberFormattingRules . NegativePrefixString =)",
    "insertText": "TEXT(\"-\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (DecimalNumberFormattingRules . PlusString =)",
    "insertText": "TEXT(\"+\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (DecimalNumberFormattingRules . GroupingSeparatorCharacter =)",
    "insertText": "TEXT(',')"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (DecimalNumberFormattingRules . DecimalSeparatorCharacter =)",
    "insertText": "TEXT('.')"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (PercentFormattingRules . NegativeSuffixString =)",
    "insertText": "TEXT(\"%\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (BaseCurrencyFormattingRules . NegativePrefixString =)",
    "insertText": "TEXT(\"-$\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (BaseCurrencyFormattingRules . PositivePrefixString =)",
    "insertText": "TEXT(\"$\")"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (BaseCurrencyFormattingRules . PrimaryGroupingSize = 3 ; BaseCurrencyFormattingRules . SecondaryGroupingSize = 3 ; FCultureRef Culture =)",
    "insertText": "Create(MakeUnique<FLegacyCultureImplementation>( LOCTEXT(\"InvariantCultureDisplayName\", \"Invariant Language (Invariant Country)\"), FString(TEXT(\"Invariant Language (Invariant Country)\")), 1033, 1033, FString(TEXT(\"\")), FString(TEXT(\"Invariant Language (Invariant Country)\")), FString(TEXT(\"INT\")), FString(TEXT(\"ivl\")), FString(TEXT(\"iv\")), DecimalNumberFormattingRules, PercentFormattingRules, BaseCurrencyFormattingRules, false ))"
  }
]