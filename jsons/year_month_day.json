[
  {
    "label": "year_month_day_last",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "year_month_day_last"
  },
  {
    "label": "year_month_day",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "year_month_day"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___CHRONO_YEAR_MONTH_DAY_H # define _LIBCPP___CHRONO_YEAR_MONTH_DAY_H # include<__chrono / calendar . h> # include<__chrono / day . h> # include<__chrono / duration . h> # include<__chrono / month . h> # include<__chrono / monthday . h> # include<__chrono / system_clock . h> # include<__chrono / time_point . h> # include<__chrono / year . h> # include<__chrono / year_month . h> # include<__config> # include<limits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)"
  },
  {
    "label": "year_month_day()",
    "kind": "Method",
    "detail": "Function (class year_month_day_last ; class year_month_day { private : chrono::year __y ; chrono::month __m ; chrono::day __d ; public : _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_day()"
  },
  {
    "label": "year_month_day()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_day(const chrono::year& __yval, const chrono::month& __mval, const chrono::day& __dval)"
  },
  {
    "label": "year_month_day()",
    "kind": "Method",
    "detail": "Function (__yval },__m { __mval },__d { __dval } { } _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_day(const year_month_day_last& __ymdl)"
  },
  {
    "label": "year_month_day()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_day(const sys_days& __sysd) noexcept : year_month_day(__from_days(__sysd.time_since_epoch()))"
  },
  {
    "label": "year_month_day()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_day(const local_days& __locd) noexcept : year_month_day(__from_days(__locd.time_since_epoch()))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day&)",
    "insertText": "operator(const months& __dm)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI year_month_day&)",
    "insertText": "operator(const years& __dy)"
  },
  {
    "label": "year()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI chrono::year)",
    "insertText": "year()"
  },
  {
    "label": "local_days()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI operator)",
    "insertText": "local_days()"
  },
  {
    "label": "ok()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "ok()"
  },
  {
    "label": "__from_days()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "__from_days(days __d)"
  },
  {
    "label": "__to_days()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI days)",
    "insertText": "__to_days()"
  },
  {
    "label": "count()",
    "kind": "Method",
    "detail": "Function (const int __z = __d .)",
    "insertText": "count()"
  },
  {
    "label": "__era()",
    "kind": "Method",
    "detail": "Function (const int)",
    "insertText": "__era(__z >= 0 ? __z : __z - 146096)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (const unsigned __doe = static_cast<)",
    "insertText": "unsigned(__z - __era * 146097)"
  },
  {
    "label": "__yoe()",
    "kind": "Method",
    "detail": "Function (const unsigned)",
    "insertText": "__yoe(__doe - __doe/1460 + __doe/36524 - __doe/146096)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (const int __yr = static_cast<)",
    "insertText": "int(__yoe)"
  },
  {
    "label": "__doe()",
    "kind": "Method",
    "detail": "Function (const unsigned __doy =)",
    "insertText": "__doe(365 * __yoe + __yoe/4 - __yoe/100)"
  },
  {
    "label": "__mp()",
    "kind": "Method",
    "detail": "Function (const unsigned)",
    "insertText": "__mp(5 * __doy + 2)"
  },
  {
    "label": "__doy()",
    "kind": "Method",
    "detail": "Function (const unsigned __dy =)",
    "insertText": "__doy(153 * __mp + 2)"
  },
  {
    "label": "__mp()",
    "kind": "Method",
    "detail": "Function (const unsigned __mth =)",
    "insertText": "__mp(__mp < 10 ? 3 : -9)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (const int __yr = static_cast<)",
    "insertText": "int(__y) - (__m <= February)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (const unsigned __mth = static_cast<)",
    "insertText": "unsigned(__m)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (const unsigned __dy = static_cast<)",
    "insertText": "unsigned(__d)"
  },
  {
    "label": "__era()",
    "kind": "Method",
    "detail": "Function (const int)",
    "insertText": "__era(__yr >= 0 ? __yr : __yr - 399)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (const unsigned __yoe = static_cast<)",
    "insertText": "unsigned(__yr - __era * 400)"
  },
  {
    "label": "__doy()",
    "kind": "Method",
    "detail": "Function (const unsigned)",
    "insertText": "__doy(153 * (__mth + (__mth > 2 ? -3 : 9)) + 2)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (const unsigned __doe = __yoe* 3 6 5 + __yoe / 4 - __yoe / 1 0 0 + __doy ; return days { __era* 1 4 6 0 9 7 + static_cast<)",
    "insertText": "int(__doe)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "operator(const year_month_day& __lhs, const year_month_day& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const year_month& __lhs, const day& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const year_month& __lhs, int __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const year& __lhs, const month_day& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(int __lhs, const month_day& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const month_day& __lhs, const year& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const year_month_day& __lhs, const months& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const months& __lhs, const year_month_day& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day)",
    "insertText": "operator(const years& __lhs, const year_month_day& __rhs)"
  },
  {
    "label": "year_month_day_last()",
    "kind": "Method",
    "detail": "Function (* this =* this - __dy ; return* this ; } class year_month_day_last { private : chrono::year __y ; chrono::month_day_last __mdl ; public : _LIBCPP_HIDE_FROM_ABI)",
    "insertText": "year_month_day_last(const year& __yval, const month_day_last& __mdlval)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (__yval },__mdl { __mdlval } { } _LIBCPP_HIDE_FROM_ABI year_month_day_last&)",
    "insertText": "operator(const months& __m)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI year_month_day_last&)",
    "insertText": "operator(const years& __y)"
  },
  {
    "label": "month_day_last()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI chrono::month_day_last)",
    "insertText": "month_day_last()"
  },
  {
    "label": "sys_days()",
    "kind": "Method",
    "detail": "Function (_LIBCPP_HIDE_FROM_ABI operator)",
    "insertText": "sys_days()"
  },
  {
    "label": "day()",
    "kind": "Method",
    "detail": "Function (} } ; _LIBCPP_HIDE_FROM_ABI chrono::day)",
    "insertText": "day()"
  },
  {
    "label": "day()",
    "kind": "Method",
    "detail": "Function (chrono::day __d [ ] = {)",
    "insertText": "day(31), chrono::day(28), chrono::day(31), chrono::day(30), chrono::day(31), chrono::day(30), chrono::day(31), chrono::day(31), chrono::day(30), chrono::day(31), chrono::day(30), chrono::day(31)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (2 9 } ; } _LIBCPP_HIDE_FROM_ABI bool)",
    "insertText": "operator(const year_month_day_last& __lhs, const year_month_day_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day_last)",
    "insertText": "operator(const year_month& __lhs, last_spec)"
  },
  {
    "label": "month()",
    "kind": "Method",
    "detail": "Function (__lhs .)",
    "insertText": "month()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day_last)",
    "insertText": "operator(const year& __lhs, const month_day_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day_last)",
    "insertText": "operator(const months& __lhs, const year_month_day_last& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day_last)",
    "insertText": "operator(const year_month_day_last& __lhs, const years& __rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} _LIBCPP_HIDE_FROM_ABI year_month_day_last)",
    "insertText": "operator(const years& __lhs, const year_month_day_last& __rhs)"
  }
]