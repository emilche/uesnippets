[
  {
    "label": "VNativeRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VNativeRef"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct VNativeRef : VCell {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VCell)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; enum class EType : uint8 { FProperty,} ; TWriteBarrier<VValue> Base ; union { FProperty* UProperty ; } ; EType Type ; VValue)",
    "insertText": "Get(FAllocationContext Context)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (VValue)",
    "insertText": "Get(FAllocationContext Context, void* Container, FProperty* Property)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (FOpResult)",
    "insertText": "Set(FAllocationContext Context, VValue Value)"
  },
  {
    "label": "SetNonTransactionally()",
    "kind": "Method",
    "detail": "Function (FOpResult)",
    "insertText": "SetNonTransactionally(FAllocationContext Context, VValue Value)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (template<bool bTransactional,BaseType> FOpResult)",
    "insertText": "Set(FAllocationContext Context, BaseType Base, void* Container, FProperty* Property, VValue Value)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (VNativeRef&)",
    "insertText": "New(FAllocationContext Context, UObject* Base, FProperty* Property)"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VNativeRef&)",
    "insertText": "New(FAllocationContext Context, VNativeStruct* Base, FProperty* Property)"
  },
  {
    "label": "FreezeImpl()",
    "kind": "Method",
    "detail": "Function (} VValue)",
    "insertText": "FreezeImpl(FAllocationContext Context)"
  },
  {
    "label": "VNativeRef()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "VNativeRef(FAllocationContext Context, VValue InBase, FProperty* InProperty) : VCell(Context, &GlobalTrivialEmergentType.Get(Context)) , Base(Context, InBase) , UProperty(InProperty) , Type(EType::FProperty)"
  },
  {
    "label": "V_DIE_IF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "V_DIE_IF(InProperty->IsA<FVRestValueProperty>())"
  },
  {
    "label": "SetIsDeeplyMutable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsDeeplyMutable()"
  },
  {
    "label": "true()",
    "kind": "Method",
    "detail": "Function (} } ; template FOpResult VNativeRef::Set<)",
    "insertText": "true(FAllocationContext Context, UObject* Base, void* Container, FProperty* Property, VValue Value)"
  },
  {
    "label": "true()",
    "kind": "Method",
    "detail": "Function (template FOpResult VNativeRef::Set<)",
    "insertText": "true(FAllocationContext Context, VNativeStruct* Base, void* Container, FProperty* Property, VValue Value)"
  },
  {
    "label": "false()",
    "kind": "Method",
    "detail": "Function (template FOpResult VNativeRef::Set<)",
    "insertText": "false(FAllocationContext Context, std::nullptr_t Base, void* Container, FProperty* Property, VValue Value)"
  }
]