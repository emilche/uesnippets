[
  {
    "label": "declares",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "declares"
  },
  {
    "label": "MemoryBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryBuffer"
  },
  {
    "label": "MCAsmInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAsmInfo"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "AsmLexer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsmLexer"
  },
  {
    "label": "AsmLexer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AsmLexer(const MCAsmInfo &MAI)"
  },
  {
    "label": "setBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setBuffer(StringRef Buf, const char *ptr = nullptr)"
  },
  {
    "label": "LexUntilEndOfLine()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "LexUntilEndOfLine()"
  },
  {
    "label": "isAtStartOfComment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isAtStartOfComment(const char *Ptr)"
  },
  {
    "label": "isAtStatementSeparator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isAtStatementSeparator(const char *Ptr)"
  },
  {
    "label": "getNextChar()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "getNextChar()"
  },
  {
    "label": "ReturnError()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "ReturnError(const char *Loc, const std::string &Msg)"
  },
  {
    "label": "LexIdentifier()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexIdentifier()"
  },
  {
    "label": "LexSlash()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexSlash()"
  },
  {
    "label": "LexLineComment()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexLineComment()"
  },
  {
    "label": "LexDigit()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexDigit()"
  },
  {
    "label": "LexSingleQuote()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexSingleQuote()"
  },
  {
    "label": "LexQuote()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexQuote()"
  },
  {
    "label": "LexFloatLiteral()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexFloatLiteral()"
  },
  {
    "label": "LexHexFloatLiteral()",
    "kind": "Method",
    "detail": "Function (AsmToken)",
    "insertText": "LexHexFloatLiteral(bool NoIntDigits)"
  }
]