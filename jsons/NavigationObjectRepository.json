[
  {
    "label": "INavLinkCustomInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavLinkCustomInterface"
  },
  {
    "label": "INavRelevantInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INavRelevantInterface"
  },
  {
    "label": "UNavigationObjectRepository",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationObjectRepository"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnNavigationElementRegistrationEvent, const TSharedRef<const FNavigationElement>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnCustomNavLinkObjectRegistrationEvent, INavLinkCustomInterface&)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "AddNavigationElement()",
    "kind": "Method",
    "detail": "Function (No,Yes } ; TSharedPtr<const FNavigationElement>)",
    "insertText": "AddNavigationElement(FNavigationElement&& Element, ENotifyOnSuccess NotifyOnSuccess = ENotifyOnSuccess::Yes)"
  },
  {
    "label": "RemoveNavigationElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNavigationElement(FNavigationElementHandle Handle)"
  },
  {
    "label": "ForEachNavigationElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachNavigationElement(TFunctionRef<void(const TSharedRef<const FNavigationElement>&)>)"
  },
  {
    "label": "RegisterNavRelevantObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FNavigationElement>)",
    "insertText": "RegisterNavRelevantObject(const INavRelevantInterface& NavRelevantObject)"
  },
  {
    "label": "UnregisterNavRelevantObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterNavRelevantObject(const INavRelevantInterface& NavRelevantObject)"
  },
  {
    "label": "UnregisterNavRelevantObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterNavRelevantObject(const UObject* NavRelevantObject)"
  },
  {
    "label": "GetNavigationElementHandleForUObject()",
    "kind": "Method",
    "detail": "Function (FNavigationElementHandle)",
    "insertText": "GetNavigationElementHandleForUObject(const UObject* NavRelevantObject)"
  },
  {
    "label": "GetNavigationElementForUObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FNavigationElement>)",
    "insertText": "GetNavigationElementForUObject(const UObject* NavRelevantObject)"
  },
  {
    "label": "UpdateNavigationElementForUObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FNavigationElement>)",
    "insertText": "UpdateNavigationElementForUObject(const INavRelevantInterface& NavRelevantInterface, const UObject& NavRelevantObject)"
  },
  {
    "label": "GetNavigationElementForHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FNavigationElement>)",
    "insertText": "GetNavigationElementForHandle(FNavigationElementHandle Handle)"
  },
  {
    "label": "RegisterCustomNavLinkObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomNavLinkObject(INavLinkCustomInterface& CustomNavLinkObject)"
  },
  {
    "label": "UnregisterCustomNavLinkObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomNavLinkObject(INavLinkCustomInterface& CustomNavLinkObject)"
  },
  {
    "label": "GetCustomLinks()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<TWeakInterfacePtr<INavLinkCustomInterface>>)",
    "insertText": "GetCustomLinks()"
  },
  {
    "label": "GetNumRegisteredUObjects()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumRegisteredUObjects()"
  },
  {
    "label": "GetNumRegisteredCustomLinks()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumRegisteredCustomLinks()"
  },
  {
    "label": "ShouldCreateSubsystem()",
    "kind": "Method",
    "detail": "Function (} FOnNavigationElementRegistrationEvent OnNavigationElementAddedDelegate ; FOnNavigationElementRegistrationEvent OnNavigationElementRemovedDelegate ; FOnCustomNavLinkObjectRegistrationEvent OnCustomNavLinkObjectRegistered ; FOnCustomNavLinkObjectRegistrationEvent OnCustomNavLinkObjectUnregistered ; protected : bool)",
    "insertText": "ShouldCreateSubsystem(UObject* Outer)"
  },
  {
    "label": "RegisterNavRelevantObjectInternal()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<const FNavigationElement>)",
    "insertText": "RegisterNavRelevantObjectInternal(const INavRelevantInterface& NavRelevantInterface, const UObject& NavRelevantObject, ENotifyOnSuccess NotifyOnSuccess)"
  },
  {
    "label": "UE_MT_DECLARE_TS_RW_ACCESS_DETECTOR()",
    "kind": "Method",
    "detail": "Function (TMap<FObjectKey,FNavigationElementHandle> ObjectsToHandleMap ; TMap<FNavigationElementHandle,TSharedPtr<const FNavigationElement>> NavRelevantElements ; TArray<TWeakInterfacePtr<INavLinkCustomInterface>> CustomLinkObjects ;)",
    "insertText": "UE_MT_DECLARE_TS_RW_ACCESS_DETECTOR(NavElementAccessDetector)"
  }
]