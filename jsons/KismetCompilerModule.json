[
  {
    "label": "FBlueprintCompileReinstancer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintCompileReinstancer"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintGeneratedClass"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UUserDefinedEnum",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedEnum"
  },
  {
    "label": "UUserDefinedStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUserDefinedStruct"
  },
  {
    "label": "FKismetCompilerOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKismetCompilerOptions"
  },
  {
    "label": "IBlueprintCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBlueprintCompiler"
  },
  {
    "label": "IKismetCompilerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IKismetCompilerInterface"
  },
  {
    "label": "PreCompile()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SubclassOf . h \" class FBlueprintCompileReinstancer ; class FCompilerResultsLog ; class UBlueprint ; class UBlueprintGeneratedClass ; class UClass ; class UUserDefinedEnum ; class UUserDefinedStruct ; struct FKismetCompilerOptions ; # define KISMET_COMPILER_MODULENAME \" KismetCompiler \" class IBlueprintCompiler { public : void)",
    "insertText": "PreCompile(UBlueprint* Blueprint, const FKismetCompilerOptions& CompileOptions)"
  },
  {
    "label": "PreCompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreCompile(Blueprint)"
  },
  {
    "label": "CanCompile()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanCompile(const UBlueprint* Blueprint)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compile(UBlueprint* Blueprint, const FKismetCompilerOptions& CompileOptions, FCompilerResultsLog& Results)"
  },
  {
    "label": "PostCompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostCompile(UBlueprint* Blueprint, const FKismetCompilerOptions& CompileOptions)"
  },
  {
    "label": "PostCompile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostCompile(Blueprint)"
  },
  {
    "label": "GetBlueprintTypesForClass()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetBlueprintTypesForClass(UClass* ParentClass, UClass*& OutBlueprintClass, UClass*& OutBlueprintGeneratedClass)"
  },
  {
    "label": "PreCompile()",
    "kind": "Method",
    "detail": "Function (OutBlueprintClass = nullptr ; OutBlueprintGeneratedClass = nullptr ; return false ; } protected : void)",
    "insertText": "PreCompile(UBlueprint* Blueprint)"
  },
  {
    "label": "PostCompile()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostCompile(UBlueprint* Blueprint)"
  },
  {
    "label": "RefreshVariables()",
    "kind": "Method",
    "detail": "Function (} } ; class IKismetCompilerInterface : public IModuleInterface { public : void)",
    "insertText": "RefreshVariables(UBlueprint* Blueprint)"
  },
  {
    "label": "CompileStructure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompileStructure(class UUserDefinedStruct* Struct, FCompilerResultsLog& Results)"
  },
  {
    "label": "RecoverCorruptedBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecoverCorruptedBlueprint(class UBlueprint* Blueprint)"
  },
  {
    "label": "RemoveBlueprintGeneratedClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveBlueprintGeneratedClasses(class UBlueprint* Blueprint)"
  },
  {
    "label": "GetCompilers()",
    "kind": "Method",
    "detail": "Function (TArray<IBlueprintCompiler*>&)",
    "insertText": "GetCompilers()"
  },
  {
    "label": "OverrideBPTypeForClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideBPTypeForClass(UClass* Class, TSubclassOf<UBlueprint> BlueprintType)"
  },
  {
    "label": "OverrideBPGCTypeForBPType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideBPGCTypeForBPType(TSubclassOf<UBlueprint> BlueprintType, TSubclassOf<UBlueprintGeneratedClass> BPGCType)"
  },
  {
    "label": "ValidateBPAndClassType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateBPAndClassType(UBlueprint* BP, FCompilerResultsLog& OutResults)"
  },
  {
    "label": "GetSubclassesWithDifferingBlueprintTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSubclassesWithDifferingBlueprintTypes(UClass* Class, TSet<const UClass*>& OutMismatchedSubclasses)"
  }
]