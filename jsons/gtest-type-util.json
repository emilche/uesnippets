[
  {
    "label": "None",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "None"
  },
  {
    "label": "TemplateSel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TemplateSel"
  },
  {
    "label": "template",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "template"
  },
  {
    "label": "templates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "templates"
  },
  {
    "label": "TemplateSel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TemplateSel"
  },
  {
    "label": "Bind",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Bind"
  },
  {
    "label": "Templates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Templates"
  },
  {
    "label": "Templates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Templates"
  },
  {
    "label": "Types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Types"
  },
  {
    "label": "Types",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Types"
  },
  {
    "label": "ProxyTypeList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProxyTypeList"
  },
  {
    "label": "is_proxy_type_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_proxy_type_list"
  },
  {
    "label": "is_proxy_type_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_proxy_type_list"
  },
  {
    "label": "GenerateTypeList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GenerateTypeList"
  },
  {
    "label": "name_str()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "name_str(status == 0 ? readable_name : name)"
  },
  {
    "label": "CanonicalizeForStdLibVersioning()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CanonicalizeForStdLibVersioning(name_str)"
  }
]