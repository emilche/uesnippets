[
  {
    "label": "FPreshaderType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreshaderType"
  },
  {
    "label": "FPreshaderValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreshaderValue"
  },
  {
    "label": "FPreshaderStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreshaderStack"
  },
  {
    "label": "FPreshaderType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Shader / ShaderTypes . h \" # include \" Containers / ArrayView . h \" namespace UE { namespace Shader { struct FPreshaderType {)",
    "insertText": "FPreshaderType()"
  },
  {
    "label": "FPreshaderType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPreshaderType(const FType& InType)"
  },
  {
    "label": "FPreshaderType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPreshaderType(EValueType InType)"
  },
  {
    "label": "IsStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStruct()"
  },
  {
    "label": "GetComponentType()",
    "kind": "Method",
    "detail": "Function (} EValueComponentType)",
    "insertText": "GetComponentType(int32 Index)"
  },
  {
    "label": "AsShaderValue()",
    "kind": "Method",
    "detail": "Function (uint64 StructTypeHash = 0 u ; TArrayView<const EValueComponentType> StructComponentTypes ; EValueType ValueType = EValueType::Void ; } ; struct FPreshaderValue { FPreshaderType Type ; TArrayView<FValueComponent> Component ; FValue)",
    "insertText": "AsShaderValue(const FStructTypeRegistry* TypeRegistry = nullptr)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} ; class FPreshaderStack { public : int32)",
    "insertText": "Num()"
  },
  {
    "label": "CheckEmpty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CheckEmpty()"
  },
  {
    "label": "PushValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PushValue(const FValue& InValue)"
  },
  {
    "label": "PushValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushValue(const FPreshaderValue& InValue)"
  },
  {
    "label": "PushValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushValue(const FPreshaderType& InType, TArrayView<const FValueComponent> InComponents)"
  },
  {
    "label": "PushEmptyValue()",
    "kind": "Method",
    "detail": "Function (TArrayView<FValueComponent>)",
    "insertText": "PushEmptyValue(const FPreshaderType& InType)"
  },
  {
    "label": "PushEmptyValue()",
    "kind": "Method",
    "detail": "Function (FValueComponent*)",
    "insertText": "PushEmptyValue(EValueType InType, int32 NumComponents)"
  },
  {
    "label": "PopValue()",
    "kind": "Method",
    "detail": "Function (FPreshaderValue)",
    "insertText": "PopValue()"
  },
  {
    "label": "PeekValue()",
    "kind": "Method",
    "detail": "Function (FPreshaderValue)",
    "insertText": "PeekValue(int32 Offset = 0)"
  },
  {
    "label": "PeekType()",
    "kind": "Method",
    "detail": "Function (const FPreshaderType&)",
    "insertText": "PeekType()"
  },
  {
    "label": "PeekComponents()",
    "kind": "Method",
    "detail": "Function (} FValueComponent*)",
    "insertText": "PeekComponents(int32 NumComponents)"
  },
  {
    "label": "PopResult()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PopResult(FPreshaderValue& OutValue)"
  },
  {
    "label": "OverrideTopType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OverrideTopType(EValueType ValueType)"
  },
  {
    "label": "Last()",
    "kind": "Method",
    "detail": "Function (Values .)",
    "insertText": "Last()"
  },
  {
    "label": "MergeTopTwoValues()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "MergeTopTwoValues(EValueType ValueType, int32 ComponentsConsumed)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (Values .)",
    "insertText": "RemoveAt(Values.Num() - 1, EAllowShrinking::No)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (Components .)",
    "insertText": "RemoveAt(Components.Num() - ComponentsConsumed, ComponentsConsumed, EAllowShrinking::No)"
  },
  {
    "label": "AdjustComponentCount()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AdjustComponentCount(int32 NumComponentChange)"
  },
  {
    "label": "AddUninitialized()",
    "kind": "Method",
    "detail": "Function (Components .)",
    "insertText": "AddUninitialized(NumComponentChange)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(NumComponentChange < 0)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (Components .)",
    "insertText": "RemoveAt(Components.Num() + NumComponentChange, -NumComponentChange, EAllowShrinking::No)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Reset()"
  }
]