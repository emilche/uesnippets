[
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SSuggestionTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSuggestionTextBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FPathTreeNodeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathTreeNodeItem"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Fonts / SlateFontInfo . h \" # include \" HAL / PlatformCrt . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" SlateFwd . h \" # include \" Styling / CoreStyle . h \" # include \" Styling / ISlateStyle . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateConstants . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class ITableRow ; class SComboButton ; class SSearchBox ; class SSuggestionTextBox ; class SWidget ; class SBlueprintNamespaceEntry : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnNamespaceSelected, const FString&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnGetNamespacesToExclude, TSet<FString>&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SBlueprintNamespaceEntry) : _Font(FCoreStyle::Get().GetFontStyle(TEXT(\"NormalFont\"))) , _AllowTextEntry(true)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FString, CurrentNamespace) SLATE_ATTRIBUTE(FSlateFontInfo, Font) SLATE_ARGUMENT(bool, AllowTextEntry) SLATE_NAMED_SLOT(FArguments, ButtonContent) SLATE_EVENT(FOnNamespaceSelected, OnNamespaceSelected) SLATE_EVENT(FOnGetNamespacesToExclude, OnGetNamespacesToExclude) SLATE_ATTRIBUTE(FText, ExcludedNamespaceTooltipText) PRAGMA_DISABLE_DEPRECATION_WARNINGS FOnGetNamespacesToExclude ConvertOnFilterNamespaceListFn(const FOnFilterNamespaceList& LegacyDelegate)"
  },
  {
    "label": "SLATE_EVENT_DEPRECATED()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT_DEPRECATED(5.1, \"Use OnGetNamespacesToExclude instead.\", FOnFilterNamespaceList, OnFilterNamespaceList, OnGetNamespacesToExclude, ConvertOnFilterNamespaceListFn) PRAGMA_ENABLE_DEPRECATION_WARNINGS SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SetCurrentNamespace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentNamespace(const FString& InNamespace)"
  },
  {
    "label": "OnTextChanged()",
    "kind": "Method",
    "detail": "Function (protected : struct FPathTreeNodeItem { FString NodePath ; TArray<TSharedPtr<FPathTreeNodeItem>> ChildNodes ; bool bIsSelectable = true ; } ; void)",
    "insertText": "OnTextChanged(const FText& InText)"
  },
  {
    "label": "OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTextCommitted(const FText& NewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "OnShowingSuggestions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowingSuggestions(const FString& InputText, TArray<FString>& OutSuggestions)"
  },
  {
    "label": "OnGetNamespaceTreeMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetNamespaceTreeMenuContent()"
  },
  {
    "label": "OnGenerateRowForNamespaceTreeItem()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForNamespaceTreeItem(TSharedPtr<FPathTreeNodeItem> Item, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetChildrenForNamespaceTreeItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForNamespaceTreeItem(TSharedPtr<FPathTreeNodeItem> Item, TArray<TSharedPtr<FPathTreeNodeItem>>& OutChildren)"
  },
  {
    "label": "OnNamespaceTreeFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceTreeFilterTextChanged(const FText& InText)"
  },
  {
    "label": "OnNamespaceTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNamespaceTreeSelectionChanged(TSharedPtr<FPathTreeNodeItem> Item, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnIsNamespaceTreeItemSelectable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnIsNamespaceTreeItemSelectable(TSharedPtr<FPathTreeNodeItem> Item)"
  },
  {
    "label": "GetCurrentNamespaceText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentNamespaceText()"
  },
  {
    "label": "PopulateNamespaceTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateNamespaceTree()"
  },
  {
    "label": "SelectNamespace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectNamespace(const FString& InNamespace)"
  },
  {
    "label": "ExpandAllTreeViewItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandAllTreeViewItems(const TArray<TSharedPtr<FPathTreeNodeItem>>* NodeListPtr = nullptr)"
  },
  {
    "label": "FindTreeViewNode()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FPathTreeNodeItem>*)",
    "insertText": "FindTreeViewNode(const FString& NodePath, const TArray<TSharedPtr<FPathTreeNodeItem>>* NodeListPtr = nullptr)"
  },
  {
    "label": "HandleLegacyOnFilterNamespaceList()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS void)",
    "insertText": "HandleLegacyOnFilterNamespaceList(TSet<FString>& OutNamespacesToExclude, FOnFilterNamespaceList LegacyDelegate)"
  }
]