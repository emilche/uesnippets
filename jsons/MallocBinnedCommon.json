[
  {
    "label": "FBitTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBitTree"
  },
  {
    "label": "FSizeTableEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSizeTableEntry"
  },
  {
    "label": "FMallocBinnedCommonBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMallocBinnedCommonBase"
  },
  {
    "label": "FBundleNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBundleNode"
  },
  {
    "label": "FPtrToPoolMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPtrToPoolMapping"
  },
  {
    "label": "FBundle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBundle"
  },
  {
    "label": "FFreeBlockList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreeBlockList"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "AllocType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AllocType"
  },
  {
    "label": "TMallocBinnedCommon",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMallocBinnedCommon"
  },
  {
    "label": "FMallocBinnedCommonUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMallocBinnedCommonUtils"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FPoolHashBucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoolHashBucket"
  },
  {
    "label": "FPerThreadFreeBlockLists",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerThreadFreeBlockLists"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Internal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Internal"
  },
  {
    "label": "FBitTreeInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBitTreeInit(uint32 InDesiredCapacity, void * Memory, uint32 MemorySize, bool InitialValue)"
  },
  {
    "label": "AllocBit()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "AllocBit()"
  },
  {
    "label": "AllocBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocBit(uint32 Index)"
  },
  {
    "label": "FreeBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeBit(uint32 Index)"
  },
  {
    "label": "Slow_NextAllocBits()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Slow_NextAllocBits(uint32 NumBits, uint64 StartIndex)"
  },
  {
    "label": "FillSizeTable()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "FillSizeTable(uint64 PlatformPageSize, FSizeTableEntry* SizeTable, uint32 BasePageSize, uint32 MaxSize, uint32 SizeIncrement)"
  },
  {
    "label": "verify()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "verify(ThreadSingleton)"
  },
  {
    "label": "UnregisterThreadFreeBlockLists()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "UnregisterThreadFreeBlockLists(ThreadSingleton)"
  },
  {
    "label": "TempUnlock()",
    "kind": "Method",
    "detail": "Function (FScopeUnlock)",
    "insertText": "TempUnlock(&Allocator.ExternalAllocMutex)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "for(UPTRINT i = 0, n = AllocType::OsAllocationGranularity / sizeof(FPoolHashBucket)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Lock(&ExternalAllocMutex)"
  },
  {
    "label": "verify()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "verify(HashBuckets)"
  }
]