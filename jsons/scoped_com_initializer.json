[
  {
    "label": "ScopedCOMInitializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedCOMInitializer"
  },
  {
    "label": "SelectMTA",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SelectMTA"
  },
  {
    "label": "ScopedCOMInitializer()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_WIN_SCOPED_COM_INITIALIZER_H_ # define RTC_BASE_WIN_SCOPED_COM_INITIALIZER_H_ # include<comdef . h> namespace webrtc { class ScopedCOMInitializer { public : enum SelectMTA { kMTA } ;)",
    "insertText": "ScopedCOMInitializer()"
  },
  {
    "label": "ScopedCOMInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedCOMInitializer(SelectMTA mta)"
  },
  {
    "label": "ScopedCOMInitializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScopedCOMInitializer(const ScopedCOMInitializer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedCOMInitializer&)",
    "insertText": "operator(const ScopedCOMInitializer&)"
  },
  {
    "label": "Succeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Succeeded()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "Initialize(COINIT init)"
  }
]