[
  {
    "label": "MainContextImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MainContextImpl"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "base"
  },
  {
    "label": "MainContextImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_MAIN_CONTEXT_IMPL_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_MAIN_CONTEXT_IMPL_H_ # pragma once # include \" include / base / cef_scoped_ptr . h \" # include \" include / base / cef_thread_checker . h \" # include \" include / cef_app . h \" # include \" include / cef_command_line . h \" # include \" tests / cefclient / browser / main_context . h \" # include \" tests / cefclient / browser / root_window_manager . h \" namespace client { class MainContextImpl : public MainContext { public :)",
    "insertText": "MainContextImpl(CefRefPtr<CefCommandLine> command_line, bool terminate_when_all_windows_closed)"
  },
  {
    "label": "GetConsoleLogPath()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetConsoleLogPath()"
  },
  {
    "label": "GetDownloadPath()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetDownloadPath(const std::string& file_name)"
  },
  {
    "label": "GetAppWorkingDirectory()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetAppWorkingDirectory()"
  },
  {
    "label": "GetMainURL()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GetMainURL()"
  },
  {
    "label": "GetBackgroundColor()",
    "kind": "Method",
    "detail": "Function (cef_color_t)",
    "insertText": "GetBackgroundColor()"
  },
  {
    "label": "UseChromeRuntime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseChromeRuntime()"
  },
  {
    "label": "UseViews()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseViews()"
  },
  {
    "label": "UseWindowlessRendering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseWindowlessRendering()"
  },
  {
    "label": "TouchEventsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TouchEventsEnabled()"
  },
  {
    "label": "PopulateSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateSettings(CefSettings* settings)"
  },
  {
    "label": "PopulateBrowserSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateBrowserSettings(CefBrowserSettings* settings)"
  },
  {
    "label": "PopulateOsrSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateOsrSettings(OsrRendererSettings* settings)"
  },
  {
    "label": "GetRootWindowManager()",
    "kind": "Method",
    "detail": "Function (RootWindowManager*)",
    "insertText": "GetRootWindowManager()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(const CefMainArgs& args, const CefSettings& settings, CefRefPtr<CefApp> application, void* windows_sandbox_info)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "MainContextImpl()",
    "kind": "Method",
    "detail": "Function (private : struct base::DefaultDeleter<MainContextImpl> ; ~)",
    "insertText": "MainContextImpl()"
  },
  {
    "label": "InValidState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InValidState()"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (# endif bool external_begin_frame_enabled_ ; base::ThreadChecker thread_checker_ ;)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(MainContextImpl)"
  }
]