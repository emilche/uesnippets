[
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "IRepChangedPropertyTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRepChangedPropertyTracker"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UAssetUserData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetUserData"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FSimpleMemberReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimpleMemberReference"
  },
  {
    "label": "IPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPrimitiveComponent"
  },
  {
    "label": "FRegisterComponentContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRegisterComponentContext"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FMinimalViewInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinimalViewInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "FActorComponentTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorComponentTickFunction"
  },
  {
    "label": "allows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allows"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "UActorChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorChannel"
  },
  {
    "label": "FOutBunch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutBunch"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "that"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "FTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTickFunction"
  },
  {
    "label": "implementations",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implementations"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "UHLODBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHLODBuilder"
  },
  {
    "label": "FSceneInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInterface"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "allows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allows"
  },
  {
    "label": "FMarkComponentEndOfFrameUpdateState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkComponentEndOfFrameUpdateState"
  },
  {
    "label": "FSetUCSSerializationIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetUCSSerializationIndex"
  },
  {
    "label": "FActorComponentDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorComponentDetails"
  },
  {
    "label": "FComponentReregisterContextBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentReregisterContextBase"
  },
  {
    "label": "FComponentRecreateRenderStateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FComponentRecreateRenderStateContext"
  },
  {
    "label": "FActorComponentTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorComponentTickFunction"
  },
  {
    "label": "SendRenderDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderDynamicData(FRegisterComponentContext* Context, UPrimitiveComponent* PrimitiveComponent)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process()"
  },
  {
    "label": "UpdateAllPrimitiveSceneInfosForSingleComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllPrimitiveSceneInfosForSingleComponent(UActorComponent* InComponent, TSet<FSceneInterface*>* InScenesToUpdateAllPrimitiveSceneInfosForBatching = nullptr)"
  },
  {
    "label": "UpdateAllPrimitiveSceneInfosForSingleComponentInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllPrimitiveSceneInfosForSingleComponentInterface(IPrimitiveComponent* InComponent, TSet<FSceneInterface*>* InScenesToUpdateAllPrimitiveSceneInfosForBatching = nullptr)"
  },
  {
    "label": "UpdateAllPrimitiveSceneInfosForScenes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllPrimitiveSceneInfosForScenes(TSet<FSceneInterface*> ScenesToUpdateAllPrimitiveSceneInfos)"
  },
  {
    "label": "DetermineUCSSerializationIndexForLegacyComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineUCSSerializationIndexForLegacyComponent()"
  },
  {
    "label": "DetermineUCSModifiedProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineUCSModifiedProperties()"
  },
  {
    "label": "RemoveUCSModifiedProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUCSModifiedProperties(const TArray<FProperty*>& Properties)"
  },
  {
    "label": "ClearUCSModifiedProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearUCSModifiedProperties()"
  },
  {
    "label": "OnRep_IsActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_IsActive()"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate(bool bReset=false)"
  },
  {
    "label": "Deactivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deactivate()"
  },
  {
    "label": "SetActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActive(bool bNewActive, bool bReset=false)"
  },
  {
    "label": "ToggleActive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleActive()"
  },
  {
    "label": "SetAutoActivate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoActivate(bool bNewAutoActivate)"
  },
  {
    "label": "SetTickableWhenPaused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTickableWhenPaused(bool bTickableWhenPaused)"
  },
  {
    "label": "CreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePhysicsState(bool bAllowDeferral = false)"
  },
  {
    "label": "DestroyPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyPhysicsState()"
  },
  {
    "label": "SetNetAddressable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetAddressable()"
  },
  {
    "label": "SetIsReplicated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReplicated(bool ShouldReplicate)"
  },
  {
    "label": "ReplicateSubobjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplicateSubobjects(class UActorChannel *Channel, class FOutBunch *Bunch, FReplicationFlags *RepFlags)"
  },
  {
    "label": "AddReplicatedSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReplicatedSubObject(UObject* SubObject, ELifetimeCondition NetCondition = COND_None)"
  },
  {
    "label": "RemoveReplicatedSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReplicatedSubObject(UObject* SubObject)"
  },
  {
    "label": "DestroyReplicatedSubObjectOnRemotePeers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyReplicatedSubObjectOnRemotePeers(UObject* SubObject)"
  },
  {
    "label": "TearOffReplicatedSubObjectOnRemotePeers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearOffReplicatedSubObjectOnRemotePeers(UObject* SubObject)"
  },
  {
    "label": "BeginReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginReplication()"
  },
  {
    "label": "EndReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndReplication()"
  },
  {
    "label": "ExecuteUnregisterEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteUnregisterEvents()"
  },
  {
    "label": "ExecuteRegisterEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteRegisterEvents(FRegisterComponentContext* Context = nullptr)"
  },
  {
    "label": "ConsolidatedPostEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsolidatedPostEditChange(const FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "OnUnregister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnregister()"
  },
  {
    "label": "CreateRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderState_Concurrent(FRegisterComponentContext* Context)"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "SendRenderDynamicData_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderDynamicData_Concurrent()"
  },
  {
    "label": "SendRenderInstanceData_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderInstanceData_Concurrent()"
  },
  {
    "label": "DestroyRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderState_Concurrent()"
  },
  {
    "label": "OnCreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreatePhysicsState()"
  },
  {
    "label": "OnDestroyPhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDestroyPhysicsState()"
  },
  {
    "label": "RegisterComponentTickFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterComponentTickFunctions(bool bRegister)"
  },
  {
    "label": "InitializeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeComponent()"
  },
  {
    "label": "ReadyForReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadyForReplication()"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "ReceiveBeginPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveBeginPlay()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "UninitializeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninitializeComponent()"
  },
  {
    "label": "ReceiveEndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveEndPlay(EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "RegisterAllComponentTickFunctions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAllComponentTickFunctions(bool bRegister)"
  },
  {
    "label": "TickComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickComponent(float DeltaTime, enum ELevelTick TickType, FActorComponentTickFunction *ThisTickFunction)"
  },
  {
    "label": "SetupActorComponentTickFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupActorComponentTickFunction(struct FTickFunction* TickFunction)"
  },
  {
    "label": "SetComponentTickEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentTickEnabled(bool bEnabled)"
  },
  {
    "label": "SetComponentTickEnabledAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentTickEnabledAsync(bool bEnabled)"
  },
  {
    "label": "SetComponentTickInterval()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentTickInterval(float TickInterval)"
  },
  {
    "label": "SetComponentTickIntervalAndCooldown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetComponentTickIntervalAndCooldown(float TickInterval)"
  },
  {
    "label": "RegisterComponentWithWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterComponentWithWorld(UWorld* InWorld, FRegisterComponentContext* Context = nullptr)"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "DoDeferredRenderUpdates_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoDeferredRenderUpdates_Concurrent()"
  },
  {
    "label": "MarkRenderStateDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRenderStateDirty()"
  },
  {
    "label": "MarkRenderDynamicDataDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRenderDynamicDataDirty()"
  },
  {
    "label": "MarkRenderTransformDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRenderTransformDirty()"
  },
  {
    "label": "MarkRenderInstancesDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkRenderInstancesDirty()"
  },
  {
    "label": "MarkForNeededEndOfFrameUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkForNeededEndOfFrameUpdate()"
  },
  {
    "label": "MarkForNeededEndOfFrameRecreate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkForNeededEndOfFrameRecreate()"
  },
  {
    "label": "ClearNeedEndOfFrameUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNeedEndOfFrameUpdate()"
  },
  {
    "label": "RecreateRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateRenderState_Concurrent()"
  },
  {
    "label": "RecreatePhysicsState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreatePhysicsState()"
  },
  {
    "label": "PostApplyToComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostApplyToComponent()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "FBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FBox(ForceInit)"
  },
  {
    "label": "GetStreamingBounds()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetStreamingBounds()"
  },
  {
    "label": "OnCreatedFromReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreatedFromReplication()"
  },
  {
    "label": "OnDestroyedFromReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDestroyedFromReplication()"
  },
  {
    "label": "RegisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterComponent()"
  },
  {
    "label": "UnregisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterComponent()"
  },
  {
    "label": "DestroyComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyComponent(bool bPromoteChildren = false)"
  },
  {
    "label": "OnComponentCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComponentCreated()"
  },
  {
    "label": "OnComponentDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnComponentDestroyed(bool bDestroyingHierarchy)"
  },
  {
    "label": "K2_DestroyComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "K2_DestroyComponent(UObject* Object)"
  },
  {
    "label": "ReregisterComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReregisterComponent()"
  },
  {
    "label": "SetTickGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTickGroup(ETickingGroup NewTickGroup)"
  },
  {
    "label": "AddTickPrerequisiteActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTickPrerequisiteActor(AActor* PrerequisiteActor)"
  },
  {
    "label": "AddTickPrerequisiteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent)"
  },
  {
    "label": "RemoveTickPrerequisiteActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTickPrerequisiteActor(AActor* PrerequisiteActor)"
  },
  {
    "label": "RemoveTickPrerequisiteComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTickPrerequisiteComponent(UActorComponent* PrerequisiteComponent)"
  },
  {
    "label": "ReceiveTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveTick(float DeltaSeconds)"
  },
  {
    "label": "ReceiveAsyncPhysicsTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveAsyncPhysicsTick(float DeltaSeconds, float SimSeconds)"
  },
  {
    "label": "SetCanEverAffectNavigation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanEverAffectNavigation(bool bRelevant)"
  },
  {
    "label": "HandleCanEverAffectNavigationChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCanEverAffectNavigationChange(bool bForceUpdate = false)"
  },
  {
    "label": "SetAsyncPhysicsTickEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAsyncPhysicsTickEnabled(bool bEnabled)"
  },
  {
    "label": "DeferRemoveAsyncPhysicsTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferRemoveAsyncPhysicsTick()"
  },
  {
    "label": "ClearNeedEndOfFrameUpdate_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNeedEndOfFrameUpdate_Internal()"
  },
  {
    "label": "RegisterAsyncPhysicsTickEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAsyncPhysicsTickEnabled(bool bRegister)"
  },
  {
    "label": "SetIsReplicatedByDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReplicatedByDefault(const bool bNewReplicates)"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UActorComponent, bReplicates)"
  },
  {
    "label": "SetActiveFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveFlag(const bool bNewIsActive)"
  },
  {
    "label": "InternalGetNetMode()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "InternalGetNetMode()"
  },
  {
    "label": "IsRunningDedicatedServer()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsRunningDedicatedServer()"
  },
  {
    "label": "GetActorOwnerNoninline()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetActorOwnerNoninline()"
  }
]