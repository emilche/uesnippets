[
  {
    "label": "_cef_string_wide_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_string_wide_t"
  },
  {
    "label": "_cef_string_utf8_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_string_utf8_t"
  },
  {
    "label": "_cef_string_utf16_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_string_utf16_t"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_INTERNAL_CEF_STRING_TYPES_H_ # define CEF_INCLUDE_INTERNAL_CEF_STRING_TYPES_H_ # pragma once # include<stddef . h> # include \" include / base / cef_basictypes . h \" # include \" include / internal / cef_export . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_string_wide_t { wchar_t* str ; size_t length ;)",
    "insertText": "void(*dtor)(wchar_t* str)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_string_wide_t ; typedef struct _cef_string_utf8_t { char* str ; size_t length ;)",
    "insertText": "void(*dtor)(char* str)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_string_utf8_t ; typedef struct _cef_string_utf16_t { char16* str ; size_t length ;)",
    "insertText": "void(*dtor)(char16* str)"
  },
  {
    "label": "cef_string_wide_set()",
    "kind": "Method",
    "detail": "Function (} cef_string_utf16_t ; CEF_EXPORT int)",
    "insertText": "cef_string_wide_set(const wchar_t* src, size_t src_len, cef_string_wide_t* output, int copy)"
  },
  {
    "label": "cef_string_utf8_set()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf8_set(const char* src, size_t src_len, cef_string_utf8_t* output, int copy)"
  },
  {
    "label": "cef_string_utf16_set()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf16_set(const char16* src, size_t src_len, cef_string_utf16_t* output, int copy)"
  },
  {
    "label": "cef_string_wide_copy()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "cef_string_wide_copy(src, src_len, output) \\ cef_string_wide_set(src, src_len, output, true) #define cef_string_utf8_copy(src, src_len, output) \\ cef_string_utf8_set(src, src_len, output, true) #define cef_string_utf16_copy(src, src_len, output) \\ cef_string_utf16_set(src, src_len, output, true) CEF_EXPORT void cef_string_wide_clear(cef_string_wide_t* str)"
  },
  {
    "label": "cef_string_utf8_clear()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_utf8_clear(cef_string_utf8_t* str)"
  },
  {
    "label": "cef_string_utf16_clear()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_utf16_clear(cef_string_utf16_t* str)"
  },
  {
    "label": "cef_string_wide_cmp()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_wide_cmp(const cef_string_wide_t* str1, const cef_string_wide_t* str2)"
  },
  {
    "label": "cef_string_utf8_cmp()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf8_cmp(const cef_string_utf8_t* str1, const cef_string_utf8_t* str2)"
  },
  {
    "label": "cef_string_utf16_cmp()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf16_cmp(const cef_string_utf16_t* str1, const cef_string_utf16_t* str2)"
  },
  {
    "label": "cef_string_wide_to_utf8()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_wide_to_utf8(const wchar_t* src, size_t src_len, cef_string_utf8_t* output)"
  },
  {
    "label": "cef_string_utf8_to_wide()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf8_to_wide(const char* src, size_t src_len, cef_string_wide_t* output)"
  },
  {
    "label": "cef_string_wide_to_utf16()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_wide_to_utf16(const wchar_t* src, size_t src_len, cef_string_utf16_t* output)"
  },
  {
    "label": "cef_string_utf16_to_wide()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf16_to_wide(const char16* src, size_t src_len, cef_string_wide_t* output)"
  },
  {
    "label": "cef_string_utf8_to_utf16()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf8_to_utf16(const char* src, size_t src_len, cef_string_utf16_t* output)"
  },
  {
    "label": "cef_string_utf16_to_utf8()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf16_to_utf8(const char16* src, size_t src_len, cef_string_utf8_t* output)"
  },
  {
    "label": "cef_string_ascii_to_wide()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_ascii_to_wide(const char* src, size_t src_len, cef_string_wide_t* output)"
  },
  {
    "label": "cef_string_ascii_to_utf16()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_ascii_to_utf16(const char* src, size_t src_len, cef_string_utf16_t* output)"
  },
  {
    "label": "cef_string_userfree_wide_alloc()",
    "kind": "Method",
    "detail": "Function (typedef cef_string_wide_t* cef_string_userfree_wide_t ; typedef cef_string_utf8_t* cef_string_userfree_utf8_t ; typedef cef_string_utf16_t* cef_string_userfree_utf16_t ; CEF_EXPORT cef_string_userfree_wide_t)",
    "insertText": "cef_string_userfree_wide_alloc()"
  },
  {
    "label": "cef_string_userfree_utf8_alloc()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_utf8_t)",
    "insertText": "cef_string_userfree_utf8_alloc()"
  },
  {
    "label": "cef_string_userfree_utf16_alloc()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT cef_string_userfree_utf16_t)",
    "insertText": "cef_string_userfree_utf16_alloc()"
  },
  {
    "label": "cef_string_userfree_wide_free()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_userfree_wide_free(cef_string_userfree_wide_t str)"
  },
  {
    "label": "cef_string_userfree_utf8_free()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_userfree_utf8_free(cef_string_userfree_utf8_t str)"
  },
  {
    "label": "cef_string_userfree_utf16_free()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_string_userfree_utf16_free(cef_string_userfree_utf16_t str)"
  },
  {
    "label": "cef_string_utf16_to_lower()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf16_to_lower(const char16* src, size_t src_len, cef_string_utf16_t* output)"
  },
  {
    "label": "cef_string_utf16_to_upper()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT int)",
    "insertText": "cef_string_utf16_to_upper(const char16* src, size_t src_len, cef_string_utf16_t* output)"
  }
]