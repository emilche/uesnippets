[
  {
    "label": "TRACEINSIGHTS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTS_API"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Logging / LogMacros . h \" # include \" Containers / Ticker . h \" # if ! UE_BUILD_SHIPPING&& ! WITH_EDITOR # include \" Insights / IUnrealInsightsModule . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(InsightsTestRunner, Log, All)"
  },
  {
    "label": "FInsightsTestRunner()",
    "kind": "Method",
    "detail": "Function (class FInsightsTestRunner : public TSharedFromThis<FInsightsTestRunner>,public IInsightsComponent { public : ~)",
    "insertText": "FInsightsTestRunner()"
  },
  {
    "label": "ScheduleCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleCommand(const FString& InCmd)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "RegisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMajorTabs(IUnrealInsightsModule& InsightsModule)"
  },
  {
    "label": "UnregisterMajorTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterMajorTabs()"
  },
  {
    "label": "CreateInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInsightsTestRunner>)",
    "insertText": "CreateInstance()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FInsightsTestRunner>)",
    "insertText": "Get()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "SetAutoQuit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoQuit(bool InAutoQuit)"
  },
  {
    "label": "GetAutoQuit()",
    "kind": "Method",
    "detail": "Function (bAutoQuit = InAutoQuit ; } bool)",
    "insertText": "GetAutoQuit()"
  },
  {
    "label": "GetInitAutomationModules()",
    "kind": "Method",
    "detail": "Function (bInitAutomationModules = InInitAutomationModules ; } bool)",
    "insertText": "GetInitAutomationModules()"
  },
  {
    "label": "SpawnAutomationWindowTab()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SDockTab>)",
    "insertText": "SpawnAutomationWindowTab(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnSessionAnalysisCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSessionAnalysisCompleted()"
  }
]