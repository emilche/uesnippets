[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSCSEditorTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNode"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ISCSEditorUICustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISCSEditorUICustomization"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "SSCSEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCSEditor"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UChildActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChildActorComponent"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "USimpleConstructionScript",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USimpleConstructionScript"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "EventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EventData"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FSCSEditorTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNode"
  },
  {
    "label": "FSCSEditorTreeNodeActorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeActorBase"
  },
  {
    "label": "FSCSEditorTreeNodeChildActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeChildActor"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "ENodeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENodeType"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "EFilteredState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFilteredState"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "or",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "or"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FSCSEditorTreeNodeSeparator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeSeparator"
  },
  {
    "label": "FSCSEditorTreeNodeSeparator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeSeparator"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "SSCS_RowWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCS_RowWidget"
  },
  {
    "label": "SSCS_RowWidget_ActorRoot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCS_RowWidget_ActorRoot"
  },
  {
    "label": "SSCS_RowWidget_Separator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCS_RowWidget_Separator"
  },
  {
    "label": "SSCSEditorDragDropTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCSEditorDragDropTree"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FAddNewComponentParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddNewComponentParams"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FAddedNodeDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddedNodeDetails"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "SExtensionPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExtensionPanel"
  },
  {
    "label": "SetActorRootNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActorRootNode(FSCSEditorActorNodePtrType InActorNode)"
  },
  {
    "label": "FindClosestParent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindClosestParent(TArray<FSCSEditorTreeNodePtrType> InNodes)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(FSCSEditorTreeNodePtrType InChildNodePtr)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddChild(USCS_Node* InSCSNode, bool bIsInheritedSCS)"
  },
  {
    "label": "AddChildFromComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddChildFromComponent(UActorComponent* InComponentTemplate)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChild(FSCSEditorTreeNodePtrType InChildNodePtr)"
  },
  {
    "label": "FactoryNodeFromComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FactoryNodeFromComponent(UActorComponent* InComponent)"
  },
  {
    "label": "CloseOngoingCreateTransaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseOngoingCreateTransaction()"
  },
  {
    "label": "OnRequestRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequestRename(TUniquePtr<FScopedTransaction> OngoingCreateTransaction)"
  },
  {
    "label": "OnCompleteRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCompleteRename(const FText& InNewName)"
  },
  {
    "label": "RefreshFilteredState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RefreshFilteredState(const UClass* InFilterType, const TArray<FString>& InFilterTerms, bool bRecursive)"
  },
  {
    "label": "SetCachedFilterState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCachedFilterState(bool bMatchesFilter, bool bUpdateParent)"
  },
  {
    "label": "RefreshCachedChildFilterState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCachedChildFilterState(bool bUpdateParent)"
  },
  {
    "label": "ApplyFilteredStateToParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFilteredStateToParent()"
  },
  {
    "label": "GetChildActorNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorChildActorNodePtrType)",
    "insertText": "GetChildActorNode()"
  },
  {
    "label": "SetOwnerNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwnerNode(FSCSEditorTreeNodePtrType NewOwnerNode)"
  },
  {
    "label": "SetSceneRootNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSceneRootNode(FSCSEditorTreeNodePtrType NewSceneRootNode)"
  },
  {
    "label": "AddFilteredComponentType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFilteredComponentType(const TSubclassOf<UActorComponent>& InFilteredType)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, TSharedPtr<SSCSEditor> InSCSEditor, FSCSEditorTreeNodePtrType InNodePtr, TSharedPtr<STableViewBase> InOwnerTableView  )"
  },
  {
    "label": "GetColorTintForIcon()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorTintForIcon(FSCSEditorTreeNodePtrType InNode)"
  },
  {
    "label": "AddToToolTipInfoBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToToolTipInfoBox(const TSharedRef<SVerticalBox>& InfoBox, const FText& Key, TSharedRef<SWidget> ValueIcon, const TAttribute<FText>& Value, bool bImportant)"
  },
  {
    "label": "OnNameTextCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameTextCommit(const FText& InNewName, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "OnNameTextVerifyChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnNameTextVerifyChanged(const FText& InNewText, FText& OutErrorMessage)"
  },
  {
    "label": "BuildSceneRootDropActionMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildSceneRootDropActionMenu(FSCSEditorTreeNodePtrType DroppedNodePtr)"
  },
  {
    "label": "HandleOnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnDragEnter(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleOnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleOnDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleOnDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleOnCanAcceptDrop()",
    "kind": "Method",
    "detail": "Function (TOptional<EItemDropZone>)",
    "insertText": "HandleOnCanAcceptDrop(const FDragDropEvent& DragDropEvent, EItemDropZone DropZone, FSCSEditorTreeNodePtrType TargetItem)"
  },
  {
    "label": "HandleOnAcceptDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleOnAcceptDrop(const FDragDropEvent& DragDropEvent, EItemDropZone DropZone, FSCSEditorTreeNodePtrType TargetItem)"
  },
  {
    "label": "OnAttachToDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAttachToDropAction(const TArray<FSCSEditorTreeNodePtrType>& DroppedNodePtrs)"
  },
  {
    "label": "OnDetachFromDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDetachFromDropAction(const TArray<FSCSEditorTreeNodePtrType>& DroppedNodePtrs)"
  },
  {
    "label": "OnMakeNewRootDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMakeNewRootDropAction(FSCSEditorTreeNodePtrType DroppedNodePtr)"
  },
  {
    "label": "PostDragDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDragDropAction(bool bRegenerateTreeNodes)"
  },
  {
    "label": "OnVerifyActorLabelChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVerifyActorLabelChanged(const FText& InLabel, FText& OutErrorMessage)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(class USCS_Node*, FOnAddNewComponent, class UClass*)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown( const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent )"
  },
  {
    "label": "MakeTableRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTableRowWidget(FSCSEditorTreeNodePtrType InNodePtr, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetChildrenForTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForTree(FSCSEditorTreeNodePtrType InNodePtr, TArray<FSCSEditorTreeNodePtrType>& OutChildren)"
  },
  {
    "label": "SetSceneRootNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSceneRootNode(FSCSEditorTreeNodePtrType NewSceneRootNode)"
  },
  {
    "label": "AddNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewNode(FAddedNodeDetails& OutNodeDetails, TUniquePtr<FScopedTransaction> OngoingCreateTransaction, USCS_Node* NewNode, UObject* Asset, bool bMarkBlueprintModified, bool bSetFocusToNewItem = true)"
  },
  {
    "label": "AddNewNodeForInstancedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewNodeForInstancedComponent(TUniquePtr<FScopedTransaction> OngoingCreateTransaction, UActorComponent* NewInstanceComponent, FSCSEditorTreeNodePtrType InParentNodePtr, UObject* Asset, bool bSetFocusToNewItem = true)"
  },
  {
    "label": "CutSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CutSelectedNodes()"
  },
  {
    "label": "CopySelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedNodes()"
  },
  {
    "label": "PasteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodes()"
  },
  {
    "label": "OnDuplicateComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateComponent()"
  },
  {
    "label": "OnDeleteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteNodes()"
  },
  {
    "label": "OnFindReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindReferences(bool bSearchAllBlueprints, const EGetFindReferenceSearchStringFlags Flags)"
  },
  {
    "label": "RemoveComponentNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponentNode(FSCSEditorTreeNodePtrType InNodePtr)"
  },
  {
    "label": "OnTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeSelectionChanged(FSCSEditorTreeNodePtrType InSelectedNodePtr, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelected(const ECheckBoxState NewCheckedState)"
  },
  {
    "label": "UpdateSelectionFromNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSelectionFromNodes(const TArray<FSCSEditorTreeNodePtrType> &SelectedNodes )"
  },
  {
    "label": "UpdateTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTree(bool bRegenerateTreeNodes = true)"
  },
  {
    "label": "DumpTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpTree()"
  },
  {
    "label": "RefreshSelectionDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSelectionDetails()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "BuildMenuEventsSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMenuEventsSection( FMenuBuilder& Menu, UBlueprint* Blueprint, UClass* SelectedClass, FCanExecuteAction CanExecuteActionDelegate, FGetSelectedObjectsDelegate GetSelectedObjectsDelegate )"
  },
  {
    "label": "SelectRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectRoot()"
  },
  {
    "label": "SelectNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectNode(FSCSEditorTreeNodePtrType InNodeToSelect, bool IsCntrlDown)"
  },
  {
    "label": "SetNodeExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodeExpansionState(FSCSEditorTreeNodePtrType InNodeToChange, const bool bIsExpanded)"
  },
  {
    "label": "HighlightTreeNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightTreeNode( FName TreeNodeName, const class FPropertyPath& Property )"
  },
  {
    "label": "HighlightTreeNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightTreeNode( const USCS_Node* Node, FName Property )"
  },
  {
    "label": "SaveSCSCurrentState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSCSCurrentState( USimpleConstructionScript* SCSObj )"
  },
  {
    "label": "SaveSCSNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSCSNode(USCS_Node* Node)"
  },
  {
    "label": "TryHandleAssetDragDropOperation()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "TryHandleAssetDragDropOperation(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(FSCSEditorTreeNodePtrType Model, bool bInExpansionState)"
  },
  {
    "label": "OnPostTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostTick(float)"
  },
  {
    "label": "GetToolButtonsBox()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetToolButtonsBox()"
  },
  {
    "label": "SetUICustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUICustomization(TSharedPtr<ISCSEditorUICustomization> InUICustomization)"
  },
  {
    "label": "FindOrCreateParentForExistingComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindOrCreateParentForExistingComponent(UActorComponent* InActorComponent, FSCSEditorActorNodePtrType ActorRootNode)"
  },
  {
    "label": "RegisterContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterContextMenu()"
  },
  {
    "label": "PopulateContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateContextMenu(UToolMenu* InMenu)"
  },
  {
    "label": "OnLevelComponentRequestRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelComponentRequestRename(const UActorComponent* InComponent)"
  },
  {
    "label": "OnRenameComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameComponent(TUniquePtr<FScopedTransaction> OngoingCreateTransaction)"
  },
  {
    "label": "OnRenameComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameComponent()"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& OldToNewInstanceMap)"
  },
  {
    "label": "ReplaceComponentReferencesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceComponentReferencesInTree(FSCSEditorActorNodePtrType InActorNode, const TMap<UObject*, UObject*>& OldToNewInstanceMap, bool& OutHasChanges)"
  },
  {
    "label": "ReplaceComponentReferencesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceComponentReferencesInTree(const TArray<FSCSEditorTreeNodePtrType>& Nodes, const TMap<UObject*, UObject*>& OldToNewInstanceMap, bool& OutHasChanges)"
  },
  {
    "label": "CreateEventsForSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEventsForSelection(UBlueprint* Blueprint, FName EventName, FGetSelectedObjectsDelegate GetSelectedObjectsDelegate)"
  },
  {
    "label": "ConstructEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructEvent(UBlueprint* Blueprint, const FName EventName, const FComponentEventConstructionData EventData)"
  },
  {
    "label": "ViewEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewEvent(UBlueprint* Blueprint, const FName EventName, const FComponentEventConstructionData EventData)"
  },
  {
    "label": "AddTreeNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddTreeNode(USCS_Node* InSCSNode, FSCSEditorTreeNodePtrType InParentNodePtr, const bool bIsInheritedSCS)"
  },
  {
    "label": "AddTreeNodeFromChildActor()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddTreeNodeFromChildActor(FSCSEditorTreeNodePtrType InNodePtr)"
  },
  {
    "label": "OnItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemScrolledIntoView( FSCSEditorTreeNodePtrType InItem, const TSharedPtr<ITableRow>& InWidget)"
  },
  {
    "label": "HandleItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemDoubleClicked(FSCSEditorTreeNodePtrType InItem)"
  },
  {
    "label": "OnResetToBlueprintDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToBlueprintDefaults()"
  },
  {
    "label": "OnPromoteToBlueprintClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnPromoteToBlueprintClicked()"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "RefreshFilteredState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RefreshFilteredState(FSCSEditorTreeNodePtrType TreeNode, bool bRecursive)"
  },
  {
    "label": "BuildSubTreeForActorNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSubTreeForActorNode(FSCSEditorActorNodePtrType InActorNode)"
  }
]