[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FSCSEditorTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNode"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "ISCSEditorUICustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISCSEditorUICustomization"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "SHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHorizontalBox"
  },
  {
    "label": "SInlineEditableTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SInlineEditableTextBlock"
  },
  {
    "label": "SSCSEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCSEditor"
  },
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UChildActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UChildActorComponent"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "USCS_Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USCS_Node"
  },
  {
    "label": "USimpleConstructionScript",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USimpleConstructionScript"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "EventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EventData"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FSCSEditorTreeNodeActorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeActorBase"
  },
  {
    "label": "FSCSEditorTreeNodeChildActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeChildActor"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "ENodeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENodeType"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "EFilteredState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFilteredState"
  },
  {
    "label": "FSCSEditorTreeNodeSeparator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSEditorTreeNodeSeparator"
  },
  {
    "label": "SSCS_RowWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCS_RowWidget"
  },
  {
    "label": "SSCS_RowWidget_ActorRoot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCS_RowWidget_ActorRoot"
  },
  {
    "label": "SSCS_RowWidget_Separator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCS_RowWidget_Separator"
  },
  {
    "label": "SSCSEditorDragDropTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSCSEditorDragDropTree"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FAddNewComponentParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddNewComponentParams"
  },
  {
    "label": "FAddedNodeDetails",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAddedNodeDetails"
  },
  {
    "label": "SExtensionPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExtensionPanel"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BlueprintEditor . h \" # include \" Components / ActorComponent . h \" # include \" Components / SceneComponent . h \" # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Engine / SCS_Node . h \" # include \" Framework / Commands / UIAction . h \" # include \" Framework / SlateDelegates . h \" # include \" Framework / Views / ITypedTableView . h \" # include \" GameFramework / Actor . h \" # include \" HAL / PlatformCrt . h \" # include \" HAL / PlatformMath . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Clipping . h \" # include \" Layout / Visibility . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" SComponentClassCombo . h \" # include \" ScopedTransaction . h \" # include \" Styling / SlateBrush . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / Casts . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / SubclassOf . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SToolTip . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class FDragDropEvent ; class FExtender ; class FMenuBuilder ; class FSCSEditorTreeNode ; class FUICommandList ; class ISCSEditorUICustomization ; class ITableRow ; class SHeaderRow ; class SHorizontalBox ; class SInlineEditableTextBlock ; class SSCSEditor ; class SScrollBar ; class SSearchBox ; class SToolTip ; class SVerticalBox ; class SWidget ; class UBlueprint ; class UChildActorComponent ; class UClass ; class UObject ; class UPrimitiveComponent ; class USCS_Node ; class USimpleConstructionScript ; class UToolMenu ; struct EventData ; struct FGeometry ; struct FKeyEvent ; struct FPointerEvent ; struct FSlateBrush ; template<FuncType> class TFunctionRef ; using FSCSEditorTreeNodePtrType = TSharedPtr<class FSCSEditorTreeNode> ; using FSCSEditorActorNodePtrType = TSharedPtr<class FSCSEditorTreeNodeActorBase> ; using FSCSEditorChildActorNodePtrType = TSharedPtr<class FSCSEditorTreeNodeChildActor> ; class FSCSEditorTreeNode : public TSharedFromThis<FSCSEditorTreeNode> { public :)",
    "insertText": "DECLARE_DELEGATE(FOnRenameRequested)"
  },
  {
    "label": "FSCSEditorTreeNode()",
    "kind": "Method",
    "detail": "Function (enum ENodeType { ComponentNode,RootActorNode,SeparatorNode,ChildActorNode,} ;)",
    "insertText": "FSCSEditorTreeNode(FSCSEditorTreeNode::ENodeType InNodeType)"
  },
  {
    "label": "GetNodeID()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetNodeID()"
  },
  {
    "label": "GetVariableName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetVariableName()"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetSCSNode()",
    "kind": "Method",
    "detail": "Function (class USCS_Node*)",
    "insertText": "GetSCSNode()"
  },
  {
    "label": "GetOrCreateEditableComponentTemplate()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "GetOrCreateEditableComponentTemplate(UBlueprint* ActualEditedBlueprint)"
  },
  {
    "label": "FindComponentInstanceInActor()",
    "kind": "Method",
    "detail": "Function (} UActorComponent*)",
    "insertText": "FindComponentInstanceInActor(const AActor* InActor)"
  },
  {
    "label": "GetParent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "GetParent()"
  },
  {
    "label": "GetNodeType()",
    "kind": "Method",
    "detail": "Function (ENodeType)",
    "insertText": "GetNodeType()"
  },
  {
    "label": "IsActorNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActorNode()"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (} template<class T> const T*)",
    "insertText": "GetObject(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "GetEditableObjectForBlueprint()",
    "kind": "Method",
    "detail": "Function (} template<class T> T*)",
    "insertText": "GetEditableObjectForBlueprint(UBlueprint* InBlueprint)"
  },
  {
    "label": "SetObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObject(UObject* InObject)"
  },
  {
    "label": "IsDirectlyAttachedTo()",
    "kind": "Method",
    "detail": "Function (WeakObjectPtr = InObject ; } bool)",
    "insertText": "IsDirectlyAttachedTo(FSCSEditorTreeNodePtrType InNodePtr)"
  },
  {
    "label": "FindClosestParent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindClosestParent(TArray<FSCSEditorTreeNodePtrType> InNodes)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(FSCSEditorTreeNodePtrType InChildNodePtr)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddChild(USCS_Node* InSCSNode, bool bIsInheritedSCS)"
  },
  {
    "label": "AddChildFromComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddChildFromComponent(UActorComponent* InComponentTemplate)"
  },
  {
    "label": "FindChild()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindChild(const USCS_Node* InSCSNode, bool bRecursiveSearch = false, uint32* OutDepth = NULL)"
  },
  {
    "label": "FindChild()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindChild(const UActorComponent* InComponentTemplate, bool bRecursiveSearch = false, uint32* OutDepth = NULL)"
  },
  {
    "label": "FindChild()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindChild(const FName& InVariableOrInstanceName, bool bRecursiveSearch = false, uint32* OutDepth = NULL)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChild(FSCSEditorTreeNodePtrType InChildNodePtr)"
  },
  {
    "label": "IsSceneComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSceneComponent()"
  },
  {
    "label": "GetChildActorNode()",
    "kind": "Method",
    "detail": "Function (} FSCSEditorChildActorNodePtrType)",
    "insertText": "GetChildActorNode()"
  },
  {
    "label": "FactoryNodeFromComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FactoryNodeFromComponent(UActorComponent* InComponent)"
  },
  {
    "label": "FSCSEditorTreeNode()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSCSEditorTreeNode()"
  },
  {
    "label": "CloseOngoingCreateTransaction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CloseOngoingCreateTransaction()"
  },
  {
    "label": "RemoveMeAsChild()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RemoveMeAsChild()"
  },
  {
    "label": "GetMutableObject()",
    "kind": "Method",
    "detail": "Function (} template<class T> T*)",
    "insertText": "GetMutableObject()"
  },
  {
    "label": "GetOrCreateEditableObjectForBlueprint()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetOrCreateEditableObjectForBlueprint(UBlueprint* InBlueprint)"
  },
  {
    "label": "GetBlueprint()",
    "kind": "Method",
    "detail": "Function (public : UBlueprint*)",
    "insertText": "GetBlueprint()"
  },
  {
    "label": "IsNativeComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNativeComponent()"
  },
  {
    "label": "IsInstanced()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInstanced()"
  },
  {
    "label": "IsInstancedComponent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInstancedComponent()"
  },
  {
    "label": "IsBlueprintComponent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsBlueprintComponent()"
  },
  {
    "label": "IsUserInstancedComponent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsUserInstancedComponent()"
  },
  {
    "label": "OnCompleteRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCompleteRename(const FText& InNewName)"
  },
  {
    "label": "SetRenameRequestedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenameRequestedDelegate(FOnRenameRequested InRenameRequested)"
  },
  {
    "label": "IsFlaggedForFiltration()",
    "kind": "Method",
    "detail": "Function (RenameRequestedDelegate = InRenameRequested ; } bool)",
    "insertText": "IsFlaggedForFiltration()"
  },
  {
    "label": "MatchesFilterType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "MatchesFilterType(const UClass* InFilterType)"
  },
  {
    "label": "RefreshFilteredState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RefreshFilteredState(const UClass* InFilterType, const TArray<FString>& InFilterTerms, bool bRecursive)"
  },
  {
    "label": "SetCachedFilterState()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetCachedFilterState(bool bMatchesFilter, bool bUpdateParent)"
  },
  {
    "label": "RefreshCachedChildFilterState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCachedChildFilterState(bool bUpdateParent)"
  },
  {
    "label": "ApplyFilteredStateToParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFilteredStateToParent()"
  },
  {
    "label": "MatchesFilter()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FScopedTransaction> OngoingCreateTransaction ; private : ENodeType NodeType ; TWeakObjectPtr<UObject> WeakObjectPtr ; FSCSEditorTreeNodePtrType ParentNodePtr ; FSCSEditorActorNodePtrType ActorRootNodePtr ; TArray<FSCSEditorTreeNodePtrType> Children ; FOnRenameRequested RenameRequestedDelegate ; enum EFilteredState { FilteredOut = 0 x00,)",
    "insertText": "MatchesFilter(1 << 0), ChildMatches = (1 << 1), FilteredInMask = (MatchesFilter | ChildMatches)"
  },
  {
    "label": "FSCSEditorTreeNodeComponentBase()",
    "kind": "Method",
    "detail": "Function (uint8 FilterFlags ; } ; class FSCSEditorTreeNodeComponentBase : public FSCSEditorTreeNode { protected :)",
    "insertText": "FSCSEditorTreeNodeComponentBase() : FSCSEditorTreeNode(FSCSEditorTreeNode::ComponentNode)"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "CanDelete()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanDelete()"
  },
  {
    "label": "CanReparent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanReparent()"
  },
  {
    "label": "FSCSEditorTreeNodeInstancedInheritedComponent()",
    "kind": "Method",
    "detail": "Function (private : FSCSEditorChildActorNodePtrType ChildActorNodePtr ; } ; class FSCSEditorTreeNodeInstancedInheritedComponent : public FSCSEditorTreeNodeComponentBase { public :)",
    "insertText": "FSCSEditorTreeNodeInstancedInheritedComponent(AActor* Owner, UActorComponent* InComponentTemplate)"
  },
  {
    "label": "IsRootComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRootComponent()"
  },
  {
    "label": "IsInheritedSCSNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInheritedSCSNode()"
  },
  {
    "label": "CanEdit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEdit()"
  },
  {
    "label": "FSCSEditorTreeNodeInstanceAddedComponent()",
    "kind": "Method",
    "detail": "Function (private : TWeakObjectPtr<AActor> InstancedComponentOwnerPtr ; } ; class FSCSEditorTreeNodeInstanceAddedComponent : public FSCSEditorTreeNodeComponentBase { public :)",
    "insertText": "FSCSEditorTreeNodeInstanceAddedComponent(AActor* Owner, UActorComponent* InComponentTemplate)"
  },
  {
    "label": "FSCSEditorTreeNodeComponent()",
    "kind": "Method",
    "detail": "Function (private : FName InstancedComponentName ; TWeakObjectPtr<AActor> InstancedComponentOwnerPtr ; } ; class FSCSEditorTreeNodeComponent : public FSCSEditorTreeNodeComponentBase { public :)",
    "insertText": "FSCSEditorTreeNodeComponent(class USCS_Node* InSCSNode, bool bInIsInherited = false)"
  },
  {
    "label": "FSCSEditorTreeNodeComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSCSEditorTreeNodeComponent(UActorComponent* InComponentTemplate)"
  },
  {
    "label": "IsDefaultSceneRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefaultSceneRoot()"
  },
  {
    "label": "INTERNAL_GetOverridenComponentTemplate()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "INTERNAL_GetOverridenComponentTemplate(UBlueprint* Blueprint)"
  },
  {
    "label": "FSCSEditorTreeNodeActorBase()",
    "kind": "Method",
    "detail": "Function (private : bool bIsInheritedSCS ; TWeakObjectPtr<class USCS_Node> SCSNodePtr ; } ; class FSCSEditorTreeNodeActorBase : public FSCSEditorTreeNode { public :)",
    "insertText": "FSCSEditorTreeNodeActorBase(FSCSEditorTreeNode::ENodeType InNodeType, AActor* InActor) : FSCSEditorTreeNode(InNodeType)"
  },
  {
    "label": "SetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObject(InActor)"
  },
  {
    "label": "GetOwnerNode()",
    "kind": "Method",
    "detail": "Function (} FSCSEditorTreeNodePtrType)",
    "insertText": "GetOwnerNode()"
  },
  {
    "label": "SetOwnerNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwnerNode(FSCSEditorTreeNodePtrType NewOwnerNode)"
  },
  {
    "label": "GetSceneRootNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "GetSceneRootNode()"
  },
  {
    "label": "SetSceneRootNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSceneRootNode(FSCSEditorTreeNodePtrType NewSceneRootNode)"
  },
  {
    "label": "GetComponentNodes()",
    "kind": "Method",
    "detail": "Function (const TArray<FSCSEditorTreeNodePtrType>&)",
    "insertText": "GetComponentNodes()"
  },
  {
    "label": "FSCSEditorTreeNodeRootActor()",
    "kind": "Method",
    "detail": "Function (protected : using Super = FSCSEditorTreeNode ; private : FSCSEditorTreeNodePtrType OwnerNodePtr ; FSCSEditorTreeNodePtrType SceneRootNodePtr ; TArray<FSCSEditorTreeNodePtrType> ComponentNodes ; } ; class FSCSEditorTreeNodeRootActor : public FSCSEditorTreeNodeActorBase { public :)",
    "insertText": "FSCSEditorTreeNodeRootActor(AActor* InActor, bool bInAllowRename) : FSCSEditorTreeNodeActorBase(FSCSEditorTreeNode::RootActorNode, InActor) , bAllowRename(bInAllowRename) , CachedFilterType(nullptr)"
  },
  {
    "label": "FSCSEditorTreeNodeChildActor()",
    "kind": "Method",
    "detail": "Function (private : bool bAllowRename ; const UClass* CachedFilterType ; TArray<FString> CachedFilterTerms ; TWeakPtr<class FSCSEditorTreeNodeSeparator> SceneComponentSeparatorNodePtr ; TWeakPtr<class FSCSEditorTreeNodeSeparator> NonSceneComponentSeparatorNodePtr ; } ; class FSCSEditorTreeNodeChildActor : public FSCSEditorTreeNodeActorBase { public :)",
    "insertText": "FSCSEditorTreeNodeChildActor(AActor* InActor) : FSCSEditorTreeNodeActorBase(FSCSEditorTreeNode::ChildActorNode, InActor)"
  },
  {
    "label": "GetChildActorComponent()",
    "kind": "Method",
    "detail": "Function (UChildActorComponent*)",
    "insertText": "GetChildActorComponent()"
  },
  {
    "label": "FSCSEditorTreeNodeSeparator()",
    "kind": "Method",
    "detail": "Function (} ; class FSCSEditorTreeNodeSeparator : public FSCSEditorTreeNode { public :)",
    "insertText": "FSCSEditorTreeNodeSeparator() : FSCSEditorTreeNode(FSCSEditorTreeNode::SeparatorNode)"
  },
  {
    "label": "AddFilteredComponentType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFilteredComponentType(const TSubclassOf<UActorComponent>& InFilteredType)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TArray<const UClass*> FilteredTypes ; } ; class SSCS_RowWidget : public SMultiColumnTableRow<FSCSEditorTreeNodePtrType> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSCS_RowWidget)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct( const FArguments& InArgs, TSharedPtr<SSCSEditor> InSCSEditor, FSCSEditorTreeNodePtrType InNodePtr, TSharedPtr<STableViewBase> InOwnerTableView)"
  },
  {
    "label": "SSCS_RowWidget()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SSCS_RowWidget()"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetNameLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNameLabel()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetColorTintForIcon()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorTintForIcon()"
  },
  {
    "label": "GetColorTintForText()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorTintForText()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationExcerptName()"
  },
  {
    "label": "GetColorTintForIcon()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetColorTintForIcon(FSCSEditorTreeNodePtrType InNode)"
  },
  {
    "label": "GetAssetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetName()"
  },
  {
    "label": "GetAssetPath()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetPath()"
  },
  {
    "label": "GetAssetVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetAssetVisibility()"
  },
  {
    "label": "GetNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "GetNode()"
  },
  {
    "label": "GetIconBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIconBrush()"
  },
  {
    "label": "AddToToolTipInfoBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToToolTipInfoBox(const TSharedRef<SVerticalBox>& InfoBox, const FText& Key, TSharedRef<SWidget> ValueIcon, const TAttribute<FText>& Value, bool bImportant)"
  },
  {
    "label": "OnNameTextCommit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNameTextCommit(const FText& InNewName, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "OnNameTextVerifyChanged()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "OnNameTextVerifyChanged(const FText& InNewText, FText& OutErrorMessage)"
  },
  {
    "label": "BuildSceneRootDropActionMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildSceneRootDropActionMenu(FSCSEditorTreeNodePtrType DroppedNodePtr)"
  },
  {
    "label": "CreateToolTipWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SToolTip>)",
    "insertText": "CreateToolTipWidget()"
  },
  {
    "label": "HandleOnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnDragEnter(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleOnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "HandleOnDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleOnDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleOnCanAcceptDrop()",
    "kind": "Method",
    "detail": "Function (TOptional<EItemDropZone>)",
    "insertText": "HandleOnCanAcceptDrop(const FDragDropEvent& DragDropEvent, EItemDropZone DropZone, FSCSEditorTreeNodePtrType TargetItem)"
  },
  {
    "label": "HandleOnAcceptDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleOnAcceptDrop(const FDragDropEvent& DragDropEvent, EItemDropZone DropZone, FSCSEditorTreeNodePtrType TargetItem)"
  },
  {
    "label": "OnAttachToDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAttachToDropAction(FSCSEditorTreeNodePtrType DroppedNodePtr)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TArray<FSCSEditorTreeNodePtrType> DroppedNodePtrs ; DroppedNodePtrs .)",
    "insertText": "Add(DroppedNodePtr)"
  },
  {
    "label": "OnAttachToDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAttachToDropAction(DroppedNodePtrs)"
  },
  {
    "label": "OnAttachToDropAction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnAttachToDropAction(const TArray<FSCSEditorTreeNodePtrType>& DroppedNodePtrs)"
  },
  {
    "label": "OnDetachFromDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDetachFromDropAction(const TArray<FSCSEditorTreeNodePtrType>& DroppedNodePtrs)"
  },
  {
    "label": "OnMakeNewRootDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMakeNewRootDropAction(FSCSEditorTreeNodePtrType DroppedNodePtr)"
  },
  {
    "label": "PostDragDropAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDragDropAction(bool bRegenerateTreeNodes)"
  },
  {
    "label": "GetMobilityIconImage()",
    "kind": "Method",
    "detail": "Function (FSlateBrush const*)",
    "insertText": "GetMobilityIconImage()"
  },
  {
    "label": "GetMobilityToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMobilityToolTipText()"
  },
  {
    "label": "GetIntroducedInToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetIntroducedInToolTipText()"
  },
  {
    "label": "GetComponentAddSourceToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetComponentAddSourceToolTipText()"
  },
  {
    "label": "GetNativeComponentNameToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNativeComponentNameToolTipText()"
  },
  {
    "label": "GetComponentEditorOnlyTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetComponentEditorOnlyTooltipText()"
  },
  {
    "label": "GetActorNode()",
    "kind": "Method",
    "detail": "Function (protected : FSCSEditorActorNodePtrType)",
    "insertText": "GetActorNode()"
  },
  {
    "label": "OnVerifyActorLabelChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVerifyActorLabelChanged(const FText& InLabel, FText& OutErrorMessage)"
  },
  {
    "label": "GetActorDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorDisplayText()"
  },
  {
    "label": "GetActorContextText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorContextText()"
  },
  {
    "label": "GetActorClassNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorClassNameText()"
  },
  {
    "label": "GetActorSuperClassNameText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorSuperClassNameText()"
  },
  {
    "label": "GetActorMobilityText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorMobilityText()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : } ; class SSCSEditorDragDropTree : public STreeView<FSCSEditorTreeNodePtrType> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSCSEditorDragDropTree ) : _SCSEditor( NULL ) , _OnGenerateRow() , _OnGetChildren() , _OnSetExpansionRecursive() , _TreeItemsSource( static_cast< TArray<FSCSEditorTreeNodePtrType>* >(NULL) ) , _ItemHeight(16) , _OnContextMenuOpening() , _OnMouseButtonDoubleClick() , _OnSelectionChanged() , _OnExpansionChanged() , _SelectionMode(ESelectionMode::Multi) , _ClearSelectionOnClick(true) , _ExternalScrollbar() , _OnTableViewBadState()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Clipping = EWidgetClipping::ClipToBounds ; })",
    "insertText": "SLATE_ARGUMENT(SSCSEditor*, SCSEditor ) SLATE_EVENT( FOnGenerateRow, OnGenerateRow ) SLATE_EVENT( FOnItemScrolledIntoView, OnItemScrolledIntoView ) SLATE_EVENT( FOnGetChildren, OnGetChildren ) SLATE_EVENT( FOnSetExpansionRecursive, OnSetExpansionRecursive ) SLATE_ARGUMENT( TArray<FSCSEditorTreeNodePtrType>* , TreeItemsSource ) SLATE_ATTRIBUTE( float, ItemHeight ) SLATE_EVENT( FOnContextMenuOpening, OnContextMenuOpening ) SLATE_EVENT( FOnMouseButtonDoubleClick, OnMouseButtonDoubleClick ) SLATE_EVENT( FOnSelectionChanged, OnSelectionChanged ) SLATE_EVENT( FOnExpansionChanged, OnExpansionChanged ) SLATE_ATTRIBUTE( ESelectionMode::Type, SelectionMode ) SLATE_ARGUMENT( TSharedPtr<SHeaderRow>, HeaderRow ) SLATE_ARGUMENT ( bool, ClearSelectionOnClick ) SLATE_ARGUMENT( TSharedPtr<SScrollBar>, ExternalScrollbar ) SLATE_EVENT( FOnTableViewBadState, OnTableViewBadState ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnDragOver()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragOver(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (class SSCSEditor : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(class USCS_Node*, FOnAddNewComponent, class UClass*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(class USCS_Node*, FOnAddExistingComponent, class UActorComponent*)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSelectionUpdated, const TArray<FSCSEditorTreeNodePtrType>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnItemDoubleClicked, const FSCSEditorTreeNodePtrType)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnHighlightPropertyInDetailsView, const class FPropertyPath&)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SSCSEditor ) :_EditorMode(EComponentEditorMode::BlueprintSCS) ,_IsDiffing(false) ,_ActorContext(nullptr) ,_PreviewActor(nullptr) ,_AllowEditing(true) ,_HideComponentClassCombo(false) ,_ComponentTypeFilter() ,_OnSelectionUpdated() ,_OnHighlightPropertyInDetailsView()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(EComponentEditorMode::Type, EditorMode) SLATE_ARGUMENT(bool, IsDiffing) SLATE_ATTRIBUTE(class AActor*, ActorContext) SLATE_ATTRIBUTE(class AActor*, PreviewActor) SLATE_ATTRIBUTE(bool, AllowEditing) SLATE_ATTRIBUTE(bool, HideComponentClassCombo) SLATE_ATTRIBUTE(TSubclassOf<UActorComponent>, ComponentTypeFilter) SLATE_EVENT(FOnSelectionUpdated, OnSelectionUpdated) SLATE_EVENT(FOnItemDoubleClicked, OnItemDoubleClicked) SLATE_EVENT(FOnHighlightPropertyInDetailsView, OnHighlightPropertyInDetailsView) SLATE_EVENT(FSimpleDelegate, OnObjectReplaced) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SSCSEditor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SSCSEditor()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "MakeTableRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeTableRowWidget(FSCSEditorTreeNodePtrType InNodePtr, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnGetChildrenForTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForTree(FSCSEditorTreeNodePtrType InNodePtr, TArray<FSCSEditorTreeNodePtrType>& OutChildren)"
  },
  {
    "label": "IsEditingAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingAllowed()"
  },
  {
    "label": "FAddNewComponentParams()",
    "kind": "Method",
    "detail": "Function (struct FAddNewComponentParams {)",
    "insertText": "FAddNewComponentParams() : bSkipMarkBlueprintModified(false) , bSetFocusToNewItem(true) , bConformTransformToParent(true)"
  },
  {
    "label": "AddNewComponent()",
    "kind": "Method",
    "detail": "Function (} bool bSkipMarkBlueprintModified ; bool bSetFocusToNewItem ; bool bConformTransformToParent ; } ; UActorComponent*)",
    "insertText": "AddNewComponent(UClass* NewComponentClass, UObject* Asset, const FAddNewComponentParams Params = FAddNewComponentParams())"
  },
  {
    "label": "AddNewNode()",
    "kind": "Method",
    "detail": "Function (struct FAddedNodeDetails { FSCSEditorTreeNodePtrType NewNodePtr ; FSCSEditorTreeNodePtrType ParentNodePtr ; } ; void)",
    "insertText": "AddNewNode(FAddedNodeDetails& OutNodeDetails, TUniquePtr<FScopedTransaction> OngoingCreateTransaction, USCS_Node* NewNode, UObject* Asset, bool bMarkBlueprintModified, bool bSetFocusToNewItem = true)"
  },
  {
    "label": "AddNewNode()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "AddNewNode(TUniquePtr<FScopedTransaction> OngoingCreateTransaction, USCS_Node* NewNode, UObject* Asset, bool bMarkBlueprintModified, bool bSetFocusToNewItem = true)"
  },
  {
    "label": "AddNewNodeForInstancedComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewNodeForInstancedComponent(TUniquePtr<FScopedTransaction> OngoingCreateTransaction, UActorComponent* NewInstanceComponent, FSCSEditorTreeNodePtrType InParentNodePtr, UObject* Asset, bool bSetFocusToNewItem = true)"
  },
  {
    "label": "IsComponentSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComponentSelected(const UPrimitiveComponent* PrimComponent)"
  },
  {
    "label": "SetSelectionOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionOverride(UPrimitiveComponent* PrimComponent)"
  },
  {
    "label": "CutSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CutSelectedNodes()"
  },
  {
    "label": "CanCutNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCutNodes()"
  },
  {
    "label": "CopySelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedNodes()"
  },
  {
    "label": "CanCopyNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopyNodes()"
  },
  {
    "label": "PasteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodes()"
  },
  {
    "label": "CanPasteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteNodes()"
  },
  {
    "label": "CanDuplicateComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateComponent()"
  },
  {
    "label": "OnDuplicateComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDuplicateComponent()"
  },
  {
    "label": "OnDeleteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDeleteNodes()"
  },
  {
    "label": "CanDeleteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteNodes()"
  },
  {
    "label": "OnFindReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindReferences(bool bSearchAllBlueprints, const EGetFindReferenceSearchStringFlags Flags)"
  },
  {
    "label": "RemoveComponentNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponentNode(FSCSEditorTreeNodePtrType InNodePtr)"
  },
  {
    "label": "OnTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeSelectionChanged(FSCSEditorTreeNodePtrType InSelectedNodePtr, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelected(const ECheckBoxState NewCheckedState)"
  },
  {
    "label": "OnIsActorSelected()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnIsActorSelected()"
  },
  {
    "label": "UpdateSelectionFromNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSelectionFromNodes(const TArray<FSCSEditorTreeNodePtrType> &SelectedNodes)"
  },
  {
    "label": "UpdateTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTree(bool bRegenerateTreeNodes = true)"
  },
  {
    "label": "DumpTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpTree()"
  },
  {
    "label": "RefreshSelectionDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSelectionDetails()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "GetSelectedNodes()",
    "kind": "Method",
    "detail": "Function (TArray<FSCSEditorTreeNodePtrType>)",
    "insertText": "GetSelectedNodes()"
  },
  {
    "label": "GetNumSelectedNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSelectedNodes()"
  },
  {
    "label": "BuildMenuEventsSection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BuildMenuEventsSection(FMenuBuilder& Menu, UBlueprint* Blueprint, UClass* SelectedClass, FCanExecuteAction CanExecuteActionDelegate, FGetSelectedObjectsDelegate GetSelectedObjectsDelegate)"
  },
  {
    "label": "GetNodeFromActorComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "GetNodeFromActorComponent(const UActorComponent* ActorComponent, bool bIncludeAttachedComponents = true)"
  },
  {
    "label": "SelectRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectRoot()"
  },
  {
    "label": "SelectNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectNode(FSCSEditorTreeNodePtrType InNodeToSelect, bool IsCntrlDown)"
  },
  {
    "label": "SetNodeExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNodeExpansionState(FSCSEditorTreeNodePtrType InNodeToChange, const bool bIsExpanded)"
  },
  {
    "label": "HighlightTreeNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightTreeNode(FName TreeNodeName, const class FPropertyPath& Property)"
  },
  {
    "label": "HighlightTreeNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightTreeNode(const USCS_Node* Node, FName Property)"
  },
  {
    "label": "SaveSCSCurrentState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSCSCurrentState(USimpleConstructionScript* SCSObj)"
  },
  {
    "label": "SaveSCSNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSCSNode(USCS_Node* Node)"
  },
  {
    "label": "IsNodeInSimpleConstructionScript()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNodeInSimpleConstructionScript(USCS_Node* Node)"
  },
  {
    "label": "GetSelectedItemsForContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedItemsForContextMenu(TArray<FComponentEventConstructionData>& OutSelectedItems)"
  },
  {
    "label": "GetSelectedEditableObjects()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "GetSelectedEditableObjects()"
  },
  {
    "label": "GetEditorMode()",
    "kind": "Method",
    "detail": "Function (EComponentEditorMode::Type)",
    "insertText": "GetEditorMode()"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(FSCSEditorTreeNodePtrType Model, bool bInExpansionState)"
  },
  {
    "label": "GetFilterText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFilterText()"
  },
  {
    "label": "OnPostTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostTick(float)"
  },
  {
    "label": "GetToolButtonsBox()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetToolButtonsBox()"
  },
  {
    "label": "SetUICustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUICustomization(TSharedPtr<ISCSEditorUICustomization> InUICustomization)"
  },
  {
    "label": "FindOrCreateParentForExistingComponent()",
    "kind": "Method",
    "detail": "Function (protected : FSCSEditorTreeNodePtrType)",
    "insertText": "FindOrCreateParentForExistingComponent(UActorComponent* InActorComponent, FSCSEditorActorNodePtrType ActorRootNode)"
  },
  {
    "label": "FindParentForNewComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindParentForNewComponent(UActorComponent* NewComponent)"
  },
  {
    "label": "FindParentForNewNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindParentForNewNode(USCS_Node* NewNode)"
  },
  {
    "label": "PerformComboAddClass()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "PerformComboAddClass(TSubclassOf<UActorComponent> ComponentClass, EComponentCreateAction::Type ComponentCreateAction, UObject* AssetOverride)"
  },
  {
    "label": "CreateContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateContextMenu()"
  },
  {
    "label": "RegisterContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterContextMenu()"
  },
  {
    "label": "PopulateContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateContextMenu(UToolMenu* InMenu)"
  },
  {
    "label": "OnLevelComponentRequestRename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelComponentRequestRename(const UActorComponent* InComponent)"
  },
  {
    "label": "CanRenameComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameComponent()"
  },
  {
    "label": "OnRenameComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameComponent(TUniquePtr<FScopedTransaction> OngoingCreateTransaction)"
  },
  {
    "label": "OnRenameComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameComponent()"
  },
  {
    "label": "OnObjectsReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectsReplaced(const TMap<UObject*, UObject*>& OldToNewInstanceMap)"
  },
  {
    "label": "ReplaceComponentReferencesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceComponentReferencesInTree(FSCSEditorActorNodePtrType InActorNode, const TMap<UObject*, UObject*>& OldToNewInstanceMap, bool& OutHasChanges)"
  },
  {
    "label": "ReplaceComponentReferencesInTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceComponentReferencesInTree(const TArray<FSCSEditorTreeNodePtrType>& Nodes, const TMap<UObject*, UObject*>& OldToNewInstanceMap, bool& OutHasChanges)"
  },
  {
    "label": "CreateEventsForSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEventsForSelection(UBlueprint* Blueprint, FName EventName, FGetSelectedObjectsDelegate GetSelectedObjectsDelegate)"
  },
  {
    "label": "ConstructEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConstructEvent(UBlueprint* Blueprint, const FName EventName, const FComponentEventConstructionData EventData)"
  },
  {
    "label": "ViewEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ViewEvent(UBlueprint* Blueprint, const FName EventName, const FComponentEventConstructionData EventData)"
  },
  {
    "label": "AddTreeNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddTreeNode(USCS_Node* InSCSNode, FSCSEditorTreeNodePtrType InParentNodePtr, const bool bIsInheritedSCS)"
  },
  {
    "label": "AddTreeNodeFromComponent()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddTreeNodeFromComponent(UActorComponent* InSceneComponent, FSCSEditorTreeNodePtrType InParentTreeNode = FSCSEditorTreeNodePtrType())"
  },
  {
    "label": "AddTreeNodeFromChildActor()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "AddTreeNodeFromChildActor(FSCSEditorTreeNodePtrType InNodePtr)"
  },
  {
    "label": "FindTreeNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindTreeNode(const USCS_Node* InSCSNode, FSCSEditorTreeNodePtrType InStartNodePtr = FSCSEditorTreeNodePtrType())"
  },
  {
    "label": "FindTreeNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindTreeNode(const UActorComponent* InComponent, FSCSEditorTreeNodePtrType InStartNodePtr = FSCSEditorTreeNodePtrType())"
  },
  {
    "label": "FindTreeNode()",
    "kind": "Method",
    "detail": "Function (FSCSEditorTreeNodePtrType)",
    "insertText": "FindTreeNode(const FName& InVariableOrInstanceName, FSCSEditorTreeNodePtrType InStartNodePtr = FSCSEditorTreeNodePtrType())"
  },
  {
    "label": "OnItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemScrolledIntoView(FSCSEditorTreeNodePtrType InItem, const TSharedPtr<ITableRow>& InWidget)"
  },
  {
    "label": "HandleItemDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleItemDoubleClicked(FSCSEditorTreeNodePtrType InItem)"
  },
  {
    "label": "DepthFirstTraversal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DepthFirstTraversal(const FSCSEditorTreeNodePtrType& InNodePtr, TSet<FSCSEditorTreeNodePtrType>& OutVisitedNodes, const TFunctionRef<void(const FSCSEditorTreeNodePtrType&)> InFunction)"
  },
  {
    "label": "GetCollapsedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCollapsedNodes(const FSCSEditorTreeNodePtrType& InNodePtr, TSet<FSCSEditorTreeNodePtrType>& OutCollapsedNodes)"
  },
  {
    "label": "GetPromoteToBlueprintButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetPromoteToBlueprintButtonVisibility()"
  },
  {
    "label": "GetEditBlueprintButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetEditBlueprintButtonVisibility()"
  },
  {
    "label": "GetComponentClassComboButtonVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetComponentClassComboButtonVisibility()"
  },
  {
    "label": "GetComponentsTreeVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetComponentsTreeVisibility()"
  },
  {
    "label": "GetComponentsFilterBoxVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetComponentsFilterBoxVisibility()"
  },
  {
    "label": "OnGetApplyChangesToBlueprintTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetApplyChangesToBlueprintTooltip()"
  },
  {
    "label": "OnGetResetToBlueprintDefaultsTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "OnGetResetToBlueprintDefaultsTooltip()"
  },
  {
    "label": "OnOpenBlueprintEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenBlueprintEditor(bool bForceCodeEditing)"
  },
  {
    "label": "OnApplyChangesToBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplyChangesToBlueprint()"
  },
  {
    "label": "OnResetToBlueprintDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToBlueprintDefaults()"
  },
  {
    "label": "PromoteToBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PromoteToBlueprint()"
  },
  {
    "label": "OnPromoteToBlueprintClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnPromoteToBlueprintClicked()"
  },
  {
    "label": "GetRootNodes()",
    "kind": "Method",
    "detail": "Function (const TArray<FSCSEditorTreeNodePtrType>&)",
    "insertText": "GetRootNodes()"
  },
  {
    "label": "CreateNewCPPComponent()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "CreateNewCPPComponent(TSubclassOf<UActorComponent> ComponentClass)"
  },
  {
    "label": "CreateNewBPComponent()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "CreateNewBPComponent(TSubclassOf<UActorComponent> ComponentClass)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "RefreshFilteredState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RefreshFilteredState(FSCSEditorTreeNodePtrType TreeNode, bool bRecursive)"
  },
  {
    "label": "BuildSubTreeForActorNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildSubTreeForActorNode(FSCSEditorActorNodePtrType InActorNode)"
  },
  {
    "label": "GetComponentTypeFilterToApply()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UActorComponent>)",
    "insertText": "GetComponentTypeFilterToApply()"
  },
  {
    "label": "GetActorContext()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<SSCSTreeType> SCSTreeWidget ; TSharedPtr<FUICommandList> CommandList ; FName DeferredRenameRequest ; TUniquePtr<FScopedTransaction> DeferredOngoingCreateTransaction ; FDelegateHandle PostTickHandle ; TAttribute<class AActor*> ActorContext ; TAttribute<class AActor*> PreviewActor ; TAttribute<bool> AllowEditing ; TAttribute<bool> HideComponentClassCombo ; TAttribute<TSubclassOf<UActorComponent>> ComponentTypeFilter ; FOnSelectionUpdated OnSelectionUpdated ; FOnItemDoubleClicked OnItemDoubleClicked ; FOnHighlightPropertyInDetailsView OnHighlightPropertyInDetailsView ; FSimpleDelegate OnObjectReplaced ; class AActor*)",
    "insertText": "GetActorContext()"
  }
]