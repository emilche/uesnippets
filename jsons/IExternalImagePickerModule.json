[
  {
    "label": "FExternalImagePickerConfiguration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalImagePickerConfiguration"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IExternalImagePickerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IExternalImagePickerModule"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" PropertyHandle . h \" # include \" Framework / SlateDelegates . h \")",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnExternalImagePicked, const FString& , const FString&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(FString, FOnGetPickerPath)"
  },
  {
    "label": "FExternalImagePickerConfiguration()",
    "kind": "Method",
    "detail": "Function (struct FExternalImagePickerConfiguration {)",
    "insertText": "FExternalImagePickerConfiguration() : MaxDisplayedImageDimensions(400.0f, 400.0f) , bRequiresSpecificSize(false)"
  },
  {
    "label": "MakeEditorWidget()",
    "kind": "Method",
    "detail": "Function (} FString TargetImagePath ; FString DefaultImagePath ; FOnGetPickerPath OnGetPickerPath ; FOnExternalImagePicked OnExternalImagePicked ; FVector2D MaxDisplayedImageDimensions ; FIntPoint RequiredImageDimensions ; bool bRequiresSpecificSize ; TArray<FString> FileExtensions ; TAttribute<EVisibility> GenerateImageVisibility ; FText GenerateImageToolTipText ; FOnClicked OnGenerateImageClicked ; TSharedPtr<class IPropertyHandle> PropertyHandle ; } ; class IExternalImagePickerModule : public IModuleInterface { public : TSharedRef<class SWidget>)",
    "insertText": "MakeEditorWidget(const FExternalImagePickerConfiguration& InConfiguration)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IExternalImagePickerModule&)",
    "insertText": "Get()"
  }
]