[
  {
    "label": "_LIBCXXABI_TYPE_VIS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_LIBCXXABI_TYPE_VIS"
  },
  {
    "label": "type_info",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "type_info"
  },
  {
    "label": "__attribute__()",
    "kind": "Method",
    "detail": "Function (# ifndef __CXXABI_H # define __CXXABI_H # include<stddef . h> # include<stdint . h> # include<__cxxabi_config . h> # define _LIBCPPABI_VERSION 1 5 0 0 0 # define _LIBCXXABI_NORETURN)",
    "insertText": "__attribute__((noreturn)) #define _LIBCXXABI_ALWAYS_COLD __attribute__((cold))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(_WIN32)"
  },
  {
    "label": "__cxa_allocate_exception()",
    "kind": "Method",
    "detail": "Function (# else class type_info ; # endif } namespace __cxxabiv1 { \" C \" { _LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_allocate_exception(size_t thrown_size) throw()"
  },
  {
    "label": "__cxa_free_exception()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_free_exception(void *thrown_exception) throw()"
  },
  {
    "label": "__cxa_throw()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_throw(void *thrown_exception, std::type_info *tinfo, void (_LIBCXXABI_DTOR_FUNC *dest)(void *))"
  },
  {
    "label": "__cxa_get_exception_ptr()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_get_exception_ptr(void *exceptionObject) throw()"
  },
  {
    "label": "__cxa_begin_catch()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_begin_catch(void *exceptionObject) throw()"
  },
  {
    "label": "__cxa_end_catch()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_end_catch()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(_LIBCXXABI_ARM_EHABI) extern _LIBCXXABI_FUNC_VIS bool __cxa_begin_cleanup(void *exceptionObject) throw()"
  },
  {
    "label": "__cxa_end_cleanup()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_end_cleanup()"
  },
  {
    "label": "__cxa_current_exception_type()",
    "kind": "Method",
    "detail": "Function (# endif _LIBCXXABI_FUNC_VIS std::type_info*)",
    "insertText": "__cxa_current_exception_type()"
  },
  {
    "label": "__cxa_rethrow()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_rethrow()"
  },
  {
    "label": "__cxa_bad_cast()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_bad_cast(void)"
  },
  {
    "label": "__cxa_bad_typeid()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_bad_typeid(void)"
  },
  {
    "label": "__cxa_throw_bad_array_new_length()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_throw_bad_array_new_length(void)"
  },
  {
    "label": "__cxa_pure_virtual()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_pure_virtual(void)"
  },
  {
    "label": "__cxa_deleted_virtual()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_NORETURN void)",
    "insertText": "__cxa_deleted_virtual(void)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(_LIBCXXABI_GUARD_ABI_ARM) extern _LIBCXXABI_FUNC_VIS _LIBCXXABI_ALWAYS_COLD int __cxa_guard_acquire(uint32_t *)"
  },
  {
    "label": "__cxa_guard_release()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_ALWAYS_COLD void)",
    "insertText": "__cxa_guard_release(uint32_t *)"
  },
  {
    "label": "__cxa_guard_abort()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_ALWAYS_COLD void)",
    "insertText": "__cxa_guard_abort(uint32_t *)"
  },
  {
    "label": "__cxa_guard_acquire()",
    "kind": "Method",
    "detail": "Function (# else _LIBCXXABI_FUNC_VIS _LIBCXXABI_ALWAYS_COLD int)",
    "insertText": "__cxa_guard_acquire(uint64_t *)"
  },
  {
    "label": "__cxa_guard_release()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_ALWAYS_COLD void)",
    "insertText": "__cxa_guard_release(uint64_t *)"
  },
  {
    "label": "__cxa_guard_abort()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS _LIBCXXABI_ALWAYS_COLD void)",
    "insertText": "__cxa_guard_abort(uint64_t *)"
  },
  {
    "label": "__cxa_vec_new()",
    "kind": "Method",
    "detail": "Function (# endif _LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_vec_new(size_t element_count, size_t element_size, size_t padding_size, void (*constructor)(void *), void (*destructor)(void *))"
  },
  {
    "label": "__cxa_vec_new2()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_vec_new2(size_t element_count, size_t element_size, size_t padding_size, void (*constructor)(void *), void (*destructor)(void *), void *(*alloc)(size_t), void (*dealloc)(void *))"
  },
  {
    "label": "__cxa_vec_new3()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_vec_new3(size_t element_count, size_t element_size, size_t padding_size, void (*constructor)(void *), void (*destructor)(void *), void *(*alloc)(size_t), void (*dealloc)(void *, size_t))"
  },
  {
    "label": "__cxa_vec_ctor()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_ctor(void *array_address, size_t element_count, size_t element_size, void (*constructor)(void *), void (*destructor)(void *))"
  },
  {
    "label": "__cxa_vec_dtor()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_dtor(void *array_address, size_t element_count, size_t element_size, void (*destructor)(void *))"
  },
  {
    "label": "__cxa_vec_cleanup()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_cleanup(void *array_address, size_t element_count, size_t element_size, void (*destructor)(void *))"
  },
  {
    "label": "__cxa_vec_delete()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_delete(void *array_address, size_t element_size, size_t padding_size, void (*destructor)(void *))"
  },
  {
    "label": "__cxa_vec_delete2()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_delete2(void *array_address, size_t element_size, size_t padding_size, void (*destructor)(void *), void (*dealloc)(void *))"
  },
  {
    "label": "__cxa_vec_delete3()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_delete3(void *__array_address, size_t element_size, size_t padding_size, void (*destructor)(void *), void (*dealloc)(void *, size_t))"
  },
  {
    "label": "__cxa_vec_cctor()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_vec_cctor(void *dest_array, void *src_array, size_t element_count, size_t element_size, void (*constructor)(void *, void *), void (*destructor)(void *))"
  },
  {
    "label": "__cxa_demangle()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS char*)",
    "insertText": "__cxa_demangle(const char *mangled_name, char *output_buffer, size_t *length, int *status)"
  },
  {
    "label": "__cxa_current_primary_exception()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void*)",
    "insertText": "__cxa_current_primary_exception() throw()"
  },
  {
    "label": "__cxa_rethrow_primary_exception()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_rethrow_primary_exception(void *primary_exception)"
  },
  {
    "label": "__cxa_increment_exception_refcount()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_increment_exception_refcount(void *primary_exception) throw()"
  },
  {
    "label": "__cxa_decrement_exception_refcount()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS void)",
    "insertText": "__cxa_decrement_exception_refcount(void *primary_exception) throw()"
  },
  {
    "label": "__cxa_uncaught_exception()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS bool)",
    "insertText": "__cxa_uncaught_exception() throw()"
  },
  {
    "label": "__cxa_uncaught_exceptions()",
    "kind": "Method",
    "detail": "Function (_LIBCXXABI_FUNC_VIS unsigned int)",
    "insertText": "__cxa_uncaught_exceptions() throw()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "defined(__linux__) || defined(__Fuchsia__) extern _LIBCXXABI_FUNC_VIS int __cxa_thread_atexit(void (*)(void *), void *, void *) throw()"
  }
]