[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCreateBlueprintFromActorDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCreateBlueprintFromActorDialog"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" GameFramework / Actor . h \" # include \" Misc / EnumClassFlags . h \" class AActor ; class UClass ; enum class ECreateBlueprintFromActorMode : uint8 { None,Harvest = 1,Subclass = 2,ChildActor = 4 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(ECreateBlueprintFromActorMode)"
  },
  {
    "label": "OpenDialog()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OpenDialog(ECreateBlueprintFromActorMode CreateMode, AActor* InActorOverride = nullptr, bool bInReplaceActors = true)"
  },
  {
    "label": "OpenDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenDialog(bInHarvest ? ECreateBlueprintFromActorMode::Harvest : ECreateBlueprintFromActorMode::Subclass, InActorOverride)"
  },
  {
    "label": "GetValidCreationMethods()",
    "kind": "Method",
    "detail": "Function (} ECreateBlueprintFromActorMode)",
    "insertText": "GetValidCreationMethods()"
  },
  {
    "label": "OnCreateBlueprint()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnCreateBlueprint(const FString& InAssetPath, UClass* ParentClass, ECreateBlueprintFromActorMode CreateMode, AActor* ActorToUse, bool bInReplaceActors)"
  }
]