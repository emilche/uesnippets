[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "DataRateLimiter()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_DATA_RATE_LIMITER_H_ # define RTC_BASE_DATA_RATE_LIMITER_H_ # include<stddef . h> # include \" rtc_base / system / rtc_export . h \" namespace rtc { class RTC_EXPORT DataRateLimiter { public :)",
    "insertText": "DataRateLimiter(size_t max, double period) : max_per_period_(max), period_length_(period), used_in_period_(0), period_start_(0.0), period_end_(period)"
  },
  {
    "label": "DataRateLimiter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "DataRateLimiter()"
  },
  {
    "label": "CanUse()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanUse(size_t desired, double time)"
  },
  {
    "label": "Use()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Use(size_t used, double time)"
  },
  {
    "label": "used_in_period()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "used_in_period()"
  }
]