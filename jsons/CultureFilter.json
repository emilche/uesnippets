[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCultureFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCultureFilter"
  },
  {
    "label": "FCultureFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" enum class EBuildConfiguration : uint8 ; enum class ELocalizationLoadFlags : uint8 ; class FCultureFilter { public :)",
    "insertText": "FCultureFilter(const TSet<FString>* AvailableCultures = nullptr)"
  },
  {
    "label": "FCultureFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCultureFilter(const EBuildConfiguration BuildConfig, const ELocalizationLoadFlags TargetFlags, const TSet<FString>* AvailableCultures = nullptr)"
  },
  {
    "label": "IsCultureAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCultureAllowed(const FString& Culture)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Init(const EBuildConfiguration BuildConfig, const ELocalizationLoadFlags TargetFlags, const TSet<FString>* AvailableCultures)"
  }
]