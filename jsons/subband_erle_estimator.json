[
  {
    "label": "SubbandErleEstimator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SubbandErleEstimator"
  },
  {
    "label": "AccumulatedSpectra",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AccumulatedSpectra"
  },
  {
    "label": "SubbandErleEstimator()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SubbandErleEstimator(const EchoCanceller3Config& config,\n                       size_t num_capture_channels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(rtc::ArrayView<const float, kFftLengthBy2Plus1> X2,\n              rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> Y2,\n              rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> E2,\n              const std::vector<bool>& converged_filters)"
  },
  {
    "label": "UpdateAccumulatedSpectra()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAccumulatedSpectra(\n      rtc::ArrayView<const float, kFftLengthBy2Plus1> X2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> Y2,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> E2,\n      const std::vector<bool>& converged_filters)"
  },
  {
    "label": "ResetAccumulatedSpectra()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAccumulatedSpectra()"
  },
  {
    "label": "UpdateBands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBands(const std::vector<bool>& converged_filters)"
  },
  {
    "label": "DecreaseErlePerBandForLowRenderSignals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecreaseErlePerBandForLowRenderSignals()"
  }
]