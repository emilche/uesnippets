[
  {
    "label": "CArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CArray"
  },
  {
    "label": "CTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTable"
  },
  {
    "label": "CUntypedArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CUntypedArray"
  },
  {
    "label": "CString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CString"
  },
  {
    "label": "CTableArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CTableArray"
  },
  {
    "label": "CReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CReader"
  },
  {
    "label": "pack()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Platform . h \" # ifdef ST_SETS_PACKING_INTERNALLY # pragma)",
    "insertText": "pack(push, 4)"
  },
  {
    "label": "CArray()",
    "kind": "Method",
    "detail": "Function (template<T> class CArray { class CTable ; public :)",
    "insertText": "CArray(void)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (st_bool)",
    "insertText": "IsEmpty(void)"
  },
  {
    "label": "Count()",
    "kind": "Method",
    "detail": "Function (st_uint32)",
    "insertText": "Count(void)"
  },
  {
    "label": "Data()",
    "kind": "Method",
    "detail": "Function (const T*)",
    "insertText": "Data(void)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const T&)",
    "insertText": "operator(st_uint32 uiIndex)"
  },
  {
    "label": "CUntypedArray()",
    "kind": "Method",
    "detail": "Function (private : st_byte* m_pData ; } ; class CUntypedArray { class CTable ; public :)",
    "insertText": "CUntypedArray(void)"
  },
  {
    "label": "ElementSize()",
    "kind": "Method",
    "detail": "Function (st_uint32)",
    "insertText": "ElementSize(void)"
  },
  {
    "label": "Length()",
    "kind": "Method",
    "detail": "Function (st_uint32)",
    "insertText": "Length(void)"
  },
  {
    "label": "CTable()",
    "kind": "Method",
    "detail": "Function (} ; class CTable { public :)",
    "insertText": "CTable(void)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (protected : template<T> const T&)",
    "insertText": "GetValue(st_uint32 uiIndex)"
  },
  {
    "label": "GetContainer()",
    "kind": "Method",
    "detail": "Function (template<T> T)",
    "insertText": "GetContainer(st_uint32 uiIndex)"
  },
  {
    "label": "CReader()",
    "kind": "Method",
    "detail": "Function (} ; class CReader : public CTable { public :)",
    "insertText": "CReader(void)"
  },
  {
    "label": "Valid()",
    "kind": "Method",
    "detail": "Function (st_bool)",
    "insertText": "Valid(void)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear(void)"
  },
  {
    "label": "LoadFile()",
    "kind": "Method",
    "detail": "Function (st_bool)",
    "insertText": "LoadFile(const st_char* pFilename)"
  },
  {
    "label": "LoadFileU()",
    "kind": "Method",
    "detail": "Function (# ifdef WIN32 st_bool)",
    "insertText": "LoadFileU(const st_wchar* pFilename)"
  },
  {
    "label": "LoadFromData()",
    "kind": "Method",
    "detail": "Function (# endif st_bool)",
    "insertText": "LoadFromData(const st_byte* pData, st_int32 iSize)"
  },
  {
    "label": "ClearAfter()",
    "kind": "Method",
    "detail": "Function (st_bool)",
    "insertText": "ClearAfter(st_uint32 uiIndex)"
  },
  {
    "label": "FileToken()",
    "kind": "Method",
    "detail": "Function (protected : const st_char*)",
    "insertText": "FileToken(void)"
  }
]