[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FFrameNumber",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameNumber"
  },
  {
    "label": "UMovieSceneParticleParameterTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneParticleParameterTrack"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Compilation / IMovieSceneTrackTemplateProducer . h \" # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Evaluation / MovieSceneEvalTemplate . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Math / UnrealMathSSE . h \" # include \" MovieSceneNameableTrack . h \" # include \" MovieSceneSection . h \" # include \" Sections / MovieSceneParameterSection . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" MovieSceneParticleParameterTrack . generated . h \" class UObject ; struct FFrameNumber ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual FMovieSceneEvalTemplatePtr CreateTemplateForSection(const UMovieSceneSection& InSection)"
  },
  {
    "label": "SupportsType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsType(TSubclassOf<UMovieSceneSection> SectionClass)"
  },
  {
    "label": "CreateNewSection()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection*)",
    "insertText": "CreateNewSection()"
  },
  {
    "label": "RemoveAllAnimationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllAnimationData()"
  },
  {
    "label": "HasSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSection(const UMovieSceneSection& Section)"
  },
  {
    "label": "AddSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(UMovieSceneSection& Section)"
  },
  {
    "label": "RemoveSectionAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSectionAt(int32 SectionIndex)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (const TArray<UMovieSceneSection*>&)",
    "insertText": "GetAllSections()"
  },
  {
    "label": "GetDefaultDisplayName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FText)",
    "insertText": "GetDefaultDisplayName()"
  },
  {
    "label": "AddScalarParameterKey()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "AddScalarParameterKey(FName ParameterName, FFrameNumber Position, float Value)"
  },
  {
    "label": "AddVectorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddVectorParameterKey(FName ParameterName, FFrameNumber Position, FVector Value)"
  },
  {
    "label": "AddColorParameterKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColorParameterKey(FName ParameterName, FFrameNumber Position, FLinearColor Value)"
  }
]