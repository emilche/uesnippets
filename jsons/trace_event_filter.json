[
  {
    "label": "TraceEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TraceEvent"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "TraceEventFilter()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACE_EVENT_TRACE_EVENT_FILTER_H_ # define BASE_TRACE_EVENT_TRACE_EVENT_FILTER_H_ # include \" base / base_export . h \" namespace base { namespace trace_event { class TraceEvent ; class BASE_EXPORT TraceEventFilter { public :)",
    "insertText": "TraceEventFilter()"
  },
  {
    "label": "TraceEventFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceEventFilter(const TraceEventFilter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TraceEventFilter&)",
    "insertText": "operator(const TraceEventFilter&)"
  },
  {
    "label": "FilterTraceEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FilterTraceEvent(const TraceEvent& trace_event)"
  },
  {
    "label": "EndEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndEvent(const char* category_name, const char* event_name)"
  }
]