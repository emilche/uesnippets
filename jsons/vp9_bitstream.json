[
  {
    "label": "VP9BitstreamWorkerData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9BitstreamWorkerData"
  },
  {
    "label": "DECLARE_ALIGNED()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_BITSTREAM_H_ # define VPX_VP9_ENCODER_VP9_BITSTREAM_H_ # ifdef __cplusplus \" C \" { # endif # include \" vp9 / encoder / vp9_encoder . h \" typedef struct VP9BitstreamWorkerData { uint8_t* dest ; int dest_size ; vpx_writer bit_writer ; int tile_idx ; unsigned int max_mv_magnitude ; int interp_filter_selected [ 1 ] [ SWITCHABLE ] ;)",
    "insertText": "DECLARE_ALIGNED(16, MACROBLOCKD, xd)"
  },
  {
    "label": "vp9_get_refresh_mask()",
    "kind": "Method",
    "detail": "Function (} VP9BitstreamWorkerData ; int)",
    "insertText": "vp9_get_refresh_mask(VP9_COMP *cpi)"
  },
  {
    "label": "vp9_bitstream_encode_tiles_buffer_dealloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_bitstream_encode_tiles_buffer_dealloc(VP9_COMP *const cpi)"
  },
  {
    "label": "vp9_pack_bitstream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_pack_bitstream(VP9_COMP *cpi, uint8_t *dest, size_t *size)"
  },
  {
    "label": "vp9_preserve_existing_gf()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_preserve_existing_gf(VP9_COMP *cpi)"
  }
]