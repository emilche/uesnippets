[
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "SUBOBJECTDATAINTERFACE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SUBOBJECTDATAINTERFACE_API"
  },
  {
    "label": "USubobjectDataSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USubobjectDataSubsystem"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / SharedPointer . h \" # include \" SubobjectDataHandle . h \" # include \" Components / ActorComponent . h \" # include \" Kismet / BlueprintFunctionLibrary . h \" # include \" Engine / SCS_Node . h \" # include \" SubobjectData . generated . h \" class UBlueprint ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (class USubobjectDataSubsystem ; public :)",
    "insertText": "GENERATED_BODY() FSubobjectData()"
  },
  {
    "label": "FSubobjectData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSubobjectData(UObject* ContextObject, const FSubobjectDataHandle& ParentHandle, const bool bIsInheritedSCS)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "CanEdit()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanEdit()"
  },
  {
    "label": "CanDelete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDelete()"
  },
  {
    "label": "CanDuplicate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicate()"
  },
  {
    "label": "CanCopy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopy()"
  },
  {
    "label": "CanReparent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReparent()"
  },
  {
    "label": "CanRename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRename()"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (const UObject*)",
    "insertText": "GetObject(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "GetObjectForBlueprint()",
    "kind": "Method",
    "detail": "Function (} const UObject*)",
    "insertText": "GetObjectForBlueprint(UBlueprint* Blueprint)"
  },
  {
    "label": "GetComponentTemplate()",
    "kind": "Method",
    "detail": "Function (} const UActorComponent*)",
    "insertText": "GetComponentTemplate(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "FindComponentInstanceInActor()",
    "kind": "Method",
    "detail": "Function (} const UActorComponent*)",
    "insertText": "FindComponentInstanceInActor(const AActor* InActor)"
  },
  {
    "label": "GetBlueprint()",
    "kind": "Method",
    "detail": "Function (} UBlueprint*)",
    "insertText": "GetBlueprint()"
  },
  {
    "label": "GetBlueprintBeingEdited()",
    "kind": "Method",
    "detail": "Function (UBlueprint*)",
    "insertText": "GetBlueprintBeingEdited()"
  },
  {
    "label": "IsInstancedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstancedComponent()"
  },
  {
    "label": "IsInstancedActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstancedActor()"
  },
  {
    "label": "IsNativeComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNativeComponent()"
  },
  {
    "label": "IsBlueprintInheritedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBlueprintInheritedComponent()"
  },
  {
    "label": "IsInheritedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInheritedComponent()"
  },
  {
    "label": "IsSceneComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSceneComponent()"
  },
  {
    "label": "IsRootComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRootComponent()"
  },
  {
    "label": "IsDefaultSceneRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefaultSceneRoot()"
  },
  {
    "label": "SceneRootHasDefaultName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SceneRootHasDefaultName()"
  },
  {
    "label": "IsComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComponent()"
  },
  {
    "label": "IsChildActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildActor()"
  },
  {
    "label": "IsChildActorSubtreeObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildActorSubtreeObject()"
  },
  {
    "label": "IsRootActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRootActor()"
  },
  {
    "label": "IsActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActor()"
  },
  {
    "label": "IsInstancedInheritedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstancedInheritedComponent()"
  },
  {
    "label": "IsAttachedTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAttachedTo(const FSubobjectDataHandle& InHandle)"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayString(bool bShowNativeComponentNames = true)"
  },
  {
    "label": "GetDragDropDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDragDropDisplayText()"
  },
  {
    "label": "GetDisplayNameContextModifiers()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayNameContextModifiers(bool bShowNativeComponentNames = true)"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetVariableName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetVariableName()"
  },
  {
    "label": "GetSocketName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSocketName()"
  },
  {
    "label": "GetSocketFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSocketFName()"
  },
  {
    "label": "HasValidSocket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidSocket()"
  },
  {
    "label": "SetSocketName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSocketName(FName InNewName)"
  },
  {
    "label": "SetupAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAttachment(FName SocketName, const FSubobjectDataHandle& AttachParentHandle = FSubobjectDataHandle::InvalidHandle)"
  },
  {
    "label": "GetHandle()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "GetHandle()"
  },
  {
    "label": "HasParent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasParent()"
  },
  {
    "label": "GetChildrenHandles()",
    "kind": "Method",
    "detail": "Function (} const TArray<FSubobjectDataHandle>&)",
    "insertText": "GetChildrenHandles()"
  },
  {
    "label": "HasChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasChild(const FSubobjectDataHandle& ChildHandle)"
  },
  {
    "label": "FindChild()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FindChild(const FSubobjectDataHandle& ChildHandle)"
  },
  {
    "label": "FindChildByObject()",
    "kind": "Method",
    "detail": "Function (FSubobjectDataHandle)",
    "insertText": "FindChildByObject(UObject* ContextObject)"
  },
  {
    "label": "GetAssetName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetName()"
  },
  {
    "label": "GetAssetPath()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetPath()"
  },
  {
    "label": "IsAssetVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetVisible()"
  },
  {
    "label": "GetMobilityToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMobilityToolTipText()"
  },
  {
    "label": "GetComponentEditorOnlyTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetComponentEditorOnlyTooltipText()"
  },
  {
    "label": "GetIntroducedInToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetIntroducedInToolTipText()"
  },
  {
    "label": "GetActorDisplayText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetActorDisplayText()"
  },
  {
    "label": "AddChildHandleOnly()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "AddChildHandleOnly(const FSubobjectDataHandle& InHandle)"
  },
  {
    "label": "RemoveChildHandleOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveChildHandleOnly(const FSubobjectDataHandle& InHandle)"
  },
  {
    "label": "SetParentHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentHandle(const FSubobjectDataHandle& NewParentHandle)"
  },
  {
    "label": "ClearParentHandle()",
    "kind": "Method",
    "detail": "Function (ParentObjectHandle = NewParentHandle ; } void)",
    "insertText": "ClearParentHandle()"
  },
  {
    "label": "GetMutableObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetMutableObject(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "GetMutableActorContext()",
    "kind": "Method",
    "detail": "Function (} AActor*)",
    "insertText": "GetMutableActorContext()"
  },
  {
    "label": "GetMutableObjectForBlueprint()",
    "kind": "Method",
    "detail": "Function (} template<class T> T*)",
    "insertText": "GetMutableObjectForBlueprint(UBlueprint* Blueprint)"
  },
  {
    "label": "GetMutableComponentTemplate()",
    "kind": "Method",
    "detail": "Function (} UActorComponent*)",
    "insertText": "GetMutableComponentTemplate(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "FindMutableComponentInstanceInActor()",
    "kind": "Method",
    "detail": "Function (} UActorComponent*)",
    "insertText": "FindMutableComponentInstanceInActor(const AActor* InActor)"
  },
  {
    "label": "FindSCSNodeForInstance()",
    "kind": "Method",
    "detail": "Function (private : USCS_Node*)",
    "insertText": "FindSCSNodeForInstance(const UActorComponent* InstanceComponent, UClass* ClassToSearch)"
  },
  {
    "label": "GetSCSNode()",
    "kind": "Method",
    "detail": "Function (USCS_Node*)",
    "insertText": "GetSCSNode(bool bEvenIfPendingKill = false)"
  },
  {
    "label": "AttemptToSetSCSNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AttemptToSetSCSNode()"
  },
  {
    "label": "IsInheritedSCSNode()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<USCS_Node> SCSNodePtr ; bool)",
    "insertText": "IsInheritedSCSNode()"
  },
  {
    "label": "GetChildActorComponent()",
    "kind": "Method",
    "detail": "Function (const UChildActorComponent*)",
    "insertText": "GetChildActorComponent(bool bEvenIfPendingKill = false)"
  }
]