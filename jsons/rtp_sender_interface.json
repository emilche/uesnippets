[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "SetTrack()",
    "kind": "Method",
    "detail": "Function (# ifndef API_RTP_SENDER_INTERFACE_H_ # define API_RTP_SENDER_INTERFACE_H_ # include<memory> # include<string> # include<vector> # include \" api / crypto / frame_encryptor_interface . h \" # include \" api / dtls_transport_interface . h \" # include \" api / dtmf_sender_interface . h \" # include \" api / frame_transformer_interface . h \" # include \" api / media_stream_interface . h \" # include \" api / media_types . h \" # include \" api / rtc_error . h \" # include \" api / rtp_parameters . h \" # include \" api / scoped_refptr . h \" # include \" api / video_codecs / video_encoder_factory . h \" # include \" rtc_base / ref_count . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { class RTC_EXPORT RtpSenderInterface : public rtc::RefCountInterface { public : bool)",
    "insertText": "SetTrack(MediaStreamTrackInterface* track)"
  },
  {
    "label": "track()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<MediaStreamTrackInterface>)",
    "insertText": "track()"
  },
  {
    "label": "dtls_transport()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DtlsTransportInterface>)",
    "insertText": "dtls_transport()"
  },
  {
    "label": "ssrc()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "ssrc()"
  },
  {
    "label": "media_type()",
    "kind": "Method",
    "detail": "Function (cricket::MediaType)",
    "insertText": "media_type()"
  },
  {
    "label": "id()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "id()"
  },
  {
    "label": "stream_ids()",
    "kind": "Method",
    "detail": "Function (std::vector<std::string>)",
    "insertText": "stream_ids()"
  },
  {
    "label": "SetStreams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStreams(const std::vector<std::string>& stream_ids)"
  },
  {
    "label": "init_send_encodings()",
    "kind": "Method",
    "detail": "Function (std::vector<RtpEncodingParameters>)",
    "insertText": "init_send_encodings()"
  },
  {
    "label": "GetParameters()",
    "kind": "Method",
    "detail": "Function (RtpParameters)",
    "insertText": "GetParameters()"
  },
  {
    "label": "SetParameters()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "SetParameters(const RtpParameters& parameters)"
  },
  {
    "label": "GetDtmfSender()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DtmfSenderInterface>)",
    "insertText": "GetDtmfSender()"
  },
  {
    "label": "SetFrameEncryptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameEncryptor(rtc::scoped_refptr<FrameEncryptorInterface> frame_encryptor)"
  },
  {
    "label": "GetFrameEncryptor()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<FrameEncryptorInterface>)",
    "insertText": "GetFrameEncryptor()"
  },
  {
    "label": "SetEncoderToPacketizerFrameTransformer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncoderToPacketizerFrameTransformer(rtc::scoped_refptr<FrameTransformerInterface> frame_transformer)"
  },
  {
    "label": "SetEncoderSelector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncoderSelector(std::unique_ptr<VideoEncoderFactory::EncoderSelectorInterface> encoder_selector)"
  },
  {
    "label": "GenerateKeyFrame()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "GenerateKeyFrame(const std::vector<std::string>& rids)"
  },
  {
    "label": "RtpSenderInterface()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "RtpSenderInterface()"
  }
]