[
  {
    "label": "FMicrosoftPlatformCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMicrosoftPlatformCrashContext"
  },
  {
    "label": "FMicrosoftPlatformCrashContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" GenericPlatform / GenericPlatformCrashContext . h \" struct FMicrosoftPlatformCrashContext : public FGenericCrashContext {)",
    "insertText": "FMicrosoftPlatformCrashContext(ECrashContextType InType, const TCHAR* InErrorMessage) : FGenericCrashContext(InType, InErrorMessage)"
  },
  {
    "label": "CaptureAllThreadContexts()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CaptureAllThreadContexts()"
  },
  {
    "label": "SetPortableCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPortableCallStack(const uint64* StackTrace, int32 StackTraceDepth)"
  },
  {
    "label": "AddPortableThreadCallStacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPortableThreadCallStacks(TConstArrayView<FThreadCallStack> Threads)"
  },
  {
    "label": "AddPortableThreadCallStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPortableThreadCallStack(uint32 ThreadId, const TCHAR* ThreadName, const uint64* StackFrames, int32 NumStackFrames)"
  },
  {
    "label": "GetProcModuleHandles()",
    "kind": "Method",
    "detail": "Function (protected : typedef TArray<void*,TInlineAllocator<1 2 8>> FModuleHandleArray ; void)",
    "insertText": "GetProcModuleHandles(const FProcHandle& Process, FModuleHandleArray& OutHandles)"
  },
  {
    "label": "ConvertProgramCountersToStackFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertProgramCountersToStackFrames(const FProcHandle& Process, const FModuleHandleArray& SortedModuleHandles, const uint64* ProgramCounters, int32 NumPCs, TArray<FCrashStackFrame>& OutStackFrames)"
  },
  {
    "label": "GetPlatformAllThreadContextsString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPlatformAllThreadContextsString(FString& OutStr)"
  },
  {
    "label": "AddThreadContextString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddThreadContextString(uint32 CrashedThreadId, uint32 ThreadId, const FString& ThreadName, const TArray<FCrashStackFrame>& StackFrames, FString& OutStr)"
  }
]