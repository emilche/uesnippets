[
  {
    "label": "FEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEvent"
  },
  {
    "label": "FUbaHordeMetaClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUbaHordeMetaClient"
  },
  {
    "label": "NetworkServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetworkServer"
  },
  {
    "label": "FUbaHordeAgentManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUbaHordeAgentManager"
  },
  {
    "label": "FHordeAgentWrapper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHordeAgentWrapper"
  },
  {
    "label": "FUbaHordeAgentManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / AnsiString . h \" # include \" Containers / Array . h \" # include \" HAL / Thread . h \" # include \" UbaBase . h \" class FEvent ; class FUbaHordeMetaClient ; namespace uba { class NetworkServer ; } class FUbaHordeAgentManager { public :)",
    "insertText": "FUbaHordeAgentManager(const FString& InWorkingDir, const FString& BinariesPath)"
  },
  {
    "label": "FUbaHordeAgentManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FUbaHordeAgentManager()"
  },
  {
    "label": "SetPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPool(const FString& InPool)"
  },
  {
    "label": "SetMaxCoreCount()",
    "kind": "Method",
    "detail": "Function (Pool = InPool ; } void)",
    "insertText": "SetMaxCoreCount(uint32 Count)"
  },
  {
    "label": "SetUbaHost()",
    "kind": "Method",
    "detail": "Function (MaxCores = Count ; } void)",
    "insertText": "SetUbaHost(const FAnsiString& InHost)"
  },
  {
    "label": "SetUbaPort()",
    "kind": "Method",
    "detail": "Function (UbaHost = InHost ; } void)",
    "insertText": "SetUbaPort(uint32 InPort)"
  },
  {
    "label": "SetTargetCoreCount()",
    "kind": "Method",
    "detail": "Function (UbaPort = InPort ; } void)",
    "insertText": "SetTargetCoreCount(uint32 Count)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (using AddClientCallback =)",
    "insertText": "bool(void* userData, const uba::tchar* ip, uint16 port)"
  },
  {
    "label": "SetAddClientCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAddClientCallback(AddClientCallback* callback, void* userData)"
  },
  {
    "label": "GetAgentCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAgentCount()"
  },
  {
    "label": "GetActiveCoreCount()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetActiveCoreCount()"
  },
  {
    "label": "RequestAgent()",
    "kind": "Method",
    "detail": "Function (private : struct FHordeAgentWrapper { FThread Thread ; FEvent* ShouldExit ; } ; void)",
    "insertText": "RequestAgent()"
  },
  {
    "label": "ThreadAgent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadAgent(FHordeAgentWrapper& Wrapper)"
  },
  {
    "label": "FUbaHordeAgentManager()",
    "kind": "Method",
    "detail": "Function (FString WorkingDir ; FString BinariesPath ; FString Pool ; FAnsiString UbaHost ; uint32 UbaPort = 7 0 0 1 ; uint32 MaxCores = 5 0 0 ; TUniquePtr<FUbaHordeMetaClient> HordeMetaClient ; FCriticalSection BundleRefPathsLock ; TArray<FString> BundleRefPaths ; FCriticalSection AgentsLock ; TArray<TUniquePtr<FHordeAgentWrapper>> Agents ; TAtomic<uint64> LastRequestFailTime ; TAtomic<uint32> TargetCoreCount ; TAtomic<uint32> EstimatedCoreCount ; TAtomic<uint32> ActiveCoreCount ; TAtomic<bool> bAskForAgents ; AddClientCallback* m_callback = nullptr ; void* m_userData = nullptr ;)",
    "insertText": "FUbaHordeAgentManager(const FUbaHordeAgentManager&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FUbaHordeAgentManager&)"
  }
]