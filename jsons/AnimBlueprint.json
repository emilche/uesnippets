[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "UPoseWatch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatch"
  },
  {
    "label": "UPoseWatchFolder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPoseWatchFolder"
  },
  {
    "label": "FAnimBlueprintDebugData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimBlueprintDebugData"
  },
  {
    "label": "UAnimGraphNodeBinding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNodeBinding"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FAnimGroupInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimGroupInfo"
  },
  {
    "label": "FAnimParentNodeAssetOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimParentNodeAssetOverride"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UAnimBlueprintGeneratedClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprintGeneratedClass"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FAnimBlueprintCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimBlueprintCompilerContext"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" Engine / Blueprint . h \" # include \" Interfaces / Interface_PreviewMeshProvider . h \" # include \" AnimBlueprint . generated . h \" class SWidget ; class UAnimationAsset ; class USkeletalMesh ; class USkeleton ; class UPoseWatch ; class UPoseWatchFolder ; struct FAnimBlueprintDebugData ; class UAnimGraphNodeBinding ; class UClass ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FAnimGroupInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimGroupInfo() : Color(FLinearColor::White)"
  },
  {
    "label": "FAnimParentNodeAssetOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimParentNodeAssetOverride(FGuid InGuid, UAnimationAsset* InNewAsset) : NewAsset(InNewAsset) , ParentNodeGuid(InGuid)"
  },
  {
    "label": "FAnimParentNodeAssetOverride()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAnimParentNodeAssetOverride() : NewAsset(NULL)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FAnimParentNodeAssetOverride& Other)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (LinkedLayers,LinkedAnimGraph,} ;)",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(AssetRegistrySearchable, EditAnywhere, AdvancedDisplay, Category=ClassOptions)"
  },
  {
    "label": "GetAnimBlueprintGeneratedClass()",
    "kind": "Method",
    "detail": "Function (class UAnimBlueprintGeneratedClass*)",
    "insertText": "GetAnimBlueprintGeneratedClass()"
  },
  {
    "label": "GetAnimBlueprintSkeletonClass()",
    "kind": "Method",
    "detail": "Function (class UAnimBlueprintGeneratedClass*)",
    "insertText": "GetAnimBlueprintSkeletonClass()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetBlueprintClass()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR UClass*)",
    "insertText": "GetBlueprintClass()"
  },
  {
    "label": "GetAssetOverrideForNode()",
    "kind": "Method",
    "detail": "Function (FAnimParentNodeAssetOverride*)",
    "insertText": "GetAssetOverrideForNode(FGuid NodeGuid, bool bIgnoreSelf = false)"
  },
  {
    "label": "GetAssetOverrides()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAssetOverrides(TArray<FAnimParentNodeAssetOverride*>& OutOverrides)"
  },
  {
    "label": "SupportedByDefaultBlueprintFactory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportedByDefaultBlueprintFactory()"
  },
  {
    "label": "FindOrAddGroup()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindOrAddGroup(FName GroupName)"
  },
  {
    "label": "FindRootAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (UAnimBlueprint*)",
    "insertText": "FindRootAnimBlueprint(const UAnimBlueprint* DerivedBlueprint)"
  },
  {
    "label": "GetParentAnimBlueprint()",
    "kind": "Method",
    "detail": "Function (UAnimBlueprint*)",
    "insertText": "GetParentAnimBlueprint(const UAnimBlueprint* DerivedBlueprint)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnOverrideChangedMulticaster, FGuid, UAnimationAsset*)"
  },
  {
    "label": "RegisterOnOverrideChanged()",
    "kind": "Method",
    "detail": "Function (typedef FOnOverrideChangedMulticaster::FDelegate FOnOverrideChanged ; void)",
    "insertText": "RegisterOnOverrideChanged(const FOnOverrideChanged& Delegate)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (OnOverrideChanged .)",
    "insertText": "Add(Delegate)"
  },
  {
    "label": "UnregisterOnOverrideChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnregisterOnOverrideChanged(SWidget* Widget)"
  },
  {
    "label": "RemoveAll()",
    "kind": "Method",
    "detail": "Function (OnOverrideChanged .)",
    "insertText": "RemoveAll(Widget)"
  },
  {
    "label": "NotifyOverrideChange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyOverrideChange(FAnimParentNodeAssetOverride& Override)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnOverrideChanged .)",
    "insertText": "Broadcast(Override.ParentNodeGuid, Override.NewAsset)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "FindDiffs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindDiffs(const UBlueprint* OtherBlueprint, FDiffResults& Results)"
  },
  {
    "label": "SetObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectBeingDebugged(UObject* NewObject)"
  },
  {
    "label": "SupportsAnimLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsAnimLayers()"
  },
  {
    "label": "SupportsEventGraphs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsEventGraphs()"
  },
  {
    "label": "SupportsDelegates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsDelegates()"
  },
  {
    "label": "SupportsMacros()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsMacros()"
  },
  {
    "label": "SupportsInputEvents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsInputEvents()"
  },
  {
    "label": "AllowFunctionOverride()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllowFunctionOverride(const UFunction* const InFunction)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "GetTypeActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTypeActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "GetInstanceActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstanceActions(FBlueprintActionDatabaseRegistrar& ActionRegistrar)"
  },
  {
    "label": "SetPreviewMesh()",
    "kind": "Method",
    "detail": "Function (protected : FOnOverrideChangedMulticaster OnOverrideChanged ; # endif public : void)",
    "insertText": "SetPreviewMesh(USkeletalMesh* PreviewMesh, bool bMarkAsDirty = true)"
  },
  {
    "label": "GetPreviewMesh()",
    "kind": "Method",
    "detail": "Function (USkeletalMesh*)",
    "insertText": "GetPreviewMesh(bool bFindIfNotSet = false)"
  },
  {
    "label": "GetPreviewMesh()",
    "kind": "Method",
    "detail": "Function (USkeletalMesh*)",
    "insertText": "GetPreviewMesh()"
  },
  {
    "label": "SetPreviewAnimationBlueprint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewAnimationBlueprint(UAnimBlueprint* InPreviewAnimationBlueprint)"
  },
  {
    "label": "GetPreviewAnimationBlueprint()",
    "kind": "Method",
    "detail": "Function (UAnimBlueprint*)",
    "insertText": "GetPreviewAnimationBlueprint()"
  },
  {
    "label": "SetPreviewAnimationBlueprintApplicationMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewAnimationBlueprintApplicationMethod(EPreviewAnimationBlueprintApplicationMethod InMethod)"
  },
  {
    "label": "GetPreviewAnimationBlueprintApplicationMethod()",
    "kind": "Method",
    "detail": "Function (EPreviewAnimationBlueprintApplicationMethod)",
    "insertText": "GetPreviewAnimationBlueprintApplicationMethod()"
  },
  {
    "label": "SetPreviewAnimationBlueprintTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewAnimationBlueprintTag(FName InTag)"
  },
  {
    "label": "GetPreviewAnimationBlueprintTag()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetPreviewAnimationBlueprintTag()"
  },
  {
    "label": "IsObjectBeingDebugged()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsObjectBeingDebugged(const UObject* AnimInstance)"
  },
  {
    "label": "GetDebugData()",
    "kind": "Method",
    "detail": "Function (FAnimBlueprintDebugData*)",
    "insertText": "GetDebugData()"
  },
  {
    "label": "RequestRefreshExtensions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA public : void)",
    "insertText": "RequestRefreshExtensions()"
  },
  {
    "label": "IsCompatible()",
    "kind": "Method",
    "detail": "Function (bRefreshExtensions = true ; } bool)",
    "insertText": "IsCompatible(const UAnimBlueprint* InAnimBlueprint)"
  },
  {
    "label": "IsCompatibleByAssetString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompatibleByAssetString(const FString& InSkeletonAsset, bool bInIsTemplate, bool bInIsInterface)"
  },
  {
    "label": "GetDefaultBindingClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetDefaultBindingClass()"
  },
  {
    "label": "DECLARE_EVENT_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_ThreeParams(UAnimBlueprint, FOnGraphRenamedEvent, UEdGraph*, FName, FName)"
  },
  {
    "label": "OnGraphRenamedEvent()",
    "kind": "Method",
    "detail": "Function (FOnGraphRenamedEvent&)",
    "insertText": "OnGraphRenamedEvent()"
  }
]