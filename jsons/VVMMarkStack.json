[
  {
    "label": "VCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VCell"
  },
  {
    "label": "FMarkStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkStack"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "FMarkStack()",
    "kind": "Method",
    "detail": "Function (bool GIsFrankenGCCollecting ; } namespace Verse { struct VCell ; struct FMarkStack {)",
    "insertText": "FMarkStack()"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "Num()"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (} VCell*)",
    "insertText": "Pop()"
  },
  {
    "label": "TryMarkNonNull()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "TryMarkNonNull(const VCell* Cell)"
  },
  {
    "label": "MarkSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkSlow(Cell)"
  },
  {
    "label": "FencedMarkNonNull()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "FencedMarkNonNull(const VCell* Cell)"
  },
  {
    "label": "FencedMarkSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FencedMarkSlow(Cell)"
  },
  {
    "label": "Mark()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Mark(const VCell* Cell)"
  },
  {
    "label": "MarkNonNull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkNonNull(Cell)"
  },
  {
    "label": "MarkAuxNonNull()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "MarkAuxNonNull(const void* Aux)"
  },
  {
    "label": "MarkAuxSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAuxSlow(Aux)"
  },
  {
    "label": "FencedMarkAuxNonNull()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "FencedMarkAuxNonNull(const void* Aux)"
  },
  {
    "label": "FencedMarkAuxSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FencedMarkAuxSlow(Aux)"
  },
  {
    "label": "MarkAux()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "MarkAux(const void* Aux)"
  },
  {
    "label": "MarkAuxNonNull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAuxNonNull(Aux)"
  },
  {
    "label": "MarkNonNull()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "MarkNonNull(const UObject* Object)"
  },
  {
    "label": "VerseMarkAsReachable()",
    "kind": "Method",
    "detail": "Function (Object ->)",
    "insertText": "VerseMarkAsReachable()"
  },
  {
    "label": "Mark()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Mark(const UObject* Object)"
  },
  {
    "label": "MarkNonNull()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkNonNull(Object)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Append(FMarkStack&& Other)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Stack .)",
    "insertText": "Append(MoveTemp(Other.Stack))"
  },
  {
    "label": "ReportNativeBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReportNativeBytes(size_t Bytes)"
  },
  {
    "label": "ReportMarkedNativeBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportMarkedNativeBytes(Bytes)"
  },
  {
    "label": "MarkSlowImpl()",
    "kind": "Method",
    "detail": "Function (} private : template<std::memory_order MemoryOrder> void)",
    "insertText": "MarkSlowImpl(const VCell* Cell)"
  },
  {
    "label": "MarkSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkSlow(const VCell* Cell)"
  },
  {
    "label": "FencedMarkSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FencedMarkSlow(const VCell* Cell)"
  },
  {
    "label": "MarkAuxSlowImpl()",
    "kind": "Method",
    "detail": "Function (template<std::memory_order MemoryOrder> void)",
    "insertText": "MarkAuxSlowImpl(const void* Aux)"
  },
  {
    "label": "MarkAuxSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAuxSlow(const void* Aux)"
  },
  {
    "label": "FencedMarkAuxSlow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FencedMarkAuxSlow(const void* Aux)"
  }
]