[
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "FAnimationTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationTabSummoner"
  },
  {
    "label": "FWidgetBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetBlueprintEditor"
  },
  {
    "label": "FAnimationTabSummoner()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SWidget . h \" # include \" WorkflowOrientedApp / WorkflowTabFactory . h \" # include \" WidgetBlueprintEditor . h \" class SDockTab ; struct FAnimationTabSummoner : public FWorkflowTabFactory { public : const FName TabID ; const FName WidgetAnimSequencerDrawerID ; public :)",
    "insertText": "FAnimationTabSummoner(TSharedPtr<class FWidgetBlueprintEditor> InBlueprintEditor, bool bInIsDrawerTab = false)"
  },
  {
    "label": "CreateTabBody()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTabBody(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "SpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab(const FWorkflowTabSpawnInfo& Info)"
  }
]