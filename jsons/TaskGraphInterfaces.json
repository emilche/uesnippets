[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FRenderThreadStatics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderThreadStatics"
  },
  {
    "label": "FAutoConsoleTaskPriority",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleTaskPriority"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FTaskGraphInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskGraphInterface"
  },
  {
    "label": "FBaseGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseGraphTask"
  },
  {
    "label": "FBaseGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseGraphTask"
  },
  {
    "label": "FTaskGraphBlockAllocationTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaskGraphBlockAllocationTag"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FBaseGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseGraphTask"
  },
  {
    "label": "TGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGraphTask"
  },
  {
    "label": "returned",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "returned"
  },
  {
    "label": "FConstructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstructor"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "FGraphEventImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphEventImpl"
  },
  {
    "label": "FTaskBlockAllocationTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaskBlockAllocationTag"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FBaseGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseGraphTask"
  },
  {
    "label": "FNamedTaskThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNamedTaskThread"
  },
  {
    "label": "FTaskThreadBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskThreadBase"
  },
  {
    "label": "FTaskThreadAnyThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskThreadAnyThread"
  },
  {
    "label": "FGraphEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphEvent"
  },
  {
    "label": "FTaskGraphImplementation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskGraphImplementation"
  },
  {
    "label": "FTaskGraphCompatibilityImplementation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskGraphCompatibilityImplementation"
  },
  {
    "label": "ELifeStage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELifeStage"
  },
  {
    "label": "FGraphEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphEvent"
  },
  {
    "label": "FBaseGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseGraphTask"
  },
  {
    "label": "TRefCountPtr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRefCountPtr"
  },
  {
    "label": "TLockFreeClassAllocator_TLSCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLockFreeClassAllocator_TLSCache"
  },
  {
    "label": "FGraphEventAndSmallTaskStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphEventAndSmallTaskStorage"
  },
  {
    "label": "FGenericTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericTask"
  },
  {
    "label": "TGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGraphTask"
  },
  {
    "label": "returned",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "returned"
  },
  {
    "label": "FConstructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstructor"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "FConstructor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstructor"
  },
  {
    "label": "FGraphEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphEvent"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "FReturnGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReturnGraphTask"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "FCustomStatIDGraphTaskBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCustomStatIDGraphTaskBase"
  },
  {
    "label": "FNullGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNullGraphTask"
  },
  {
    "label": "FTriggerEventGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriggerEventGraphTask"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FSimpleDelegateGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimpleDelegateGraphTask"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FDelegateGraphTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDelegateGraphTask"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "TFunctionGraphTaskImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionGraphTaskImpl"
  },
  {
    "label": "FFunctionGraphTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionGraphTask"
  },
  {
    "label": "GetRenderThread()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "GetRenderThread()"
  },
  {
    "label": "GetRenderThread_Local()",
    "kind": "Method",
    "detail": "Function (Type)",
    "insertText": "GetRenderThread_Local()"
  },
  {
    "label": "SetRenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderThread(Type Thread)"
  },
  {
    "label": "SetRenderThread_Local()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderThread_Local(Type Thread)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Type(ThreadAndIndex | ThreadPriority | TaskPriority)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Type(ThreadAndIndex | ThreadPriority)"
  },
  {
    "label": "Type()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Type(ThreadAndIndex | TaskPriority)"
  },
  {
    "label": "CreateFullHelpText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CreateFullHelpText(const TCHAR* Name, const TCHAR* OriginalHelp)"
  },
  {
    "label": "ConfigStringFromPriorities()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConfigStringFromPriorities(ENamedThreads::Type InThreadPriority, ENamedThreads::Type InTaskPriority, ENamedThreads::Type InTaskPriorityBackup)"
  },
  {
    "label": "OnSettingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSettingChanged(IConsoleVariable* Variable)"
  },
  {
    "label": "GetTraceIds()",
    "kind": "Method",
    "detail": "Function (TArray<TaskTrace::FId>)",
    "insertText": "GetTraceIds(const FGraphEventArray& Tasks)"
  },
  {
    "label": "Startup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Startup(int32 NumThreads)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "IsRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRunning()"
  },
  {
    "label": "IsMultithread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMultithread()"
  },
  {
    "label": "AddPrerequisites()",
    "kind": "Method",
    "detail": "Function (instead)",
    "insertText": "AddPrerequisites(*NestedTask)"
  },
  {
    "label": "AddNested()",
    "kind": "Method",
    "detail": "Function (execution)",
    "insertText": "AddNested(*NestedTask)"
  },
  {
    "label": "IsCompleted()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsCompleted()"
  },
  {
    "label": "CreateGraphEvent()",
    "kind": "Method",
    "detail": "Function (FGraphEventRef)",
    "insertText": "CreateGraphEvent()"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (used)",
    "insertText": "AddRef()"
  },
  {
    "label": "TryLaunch()",
    "kind": "Method",
    "detail": "Function (reference)",
    "insertText": "TryLaunch(0)"
  },
  {
    "label": "DispatchSubsequents()",
    "kind": "Method",
    "detail": "Function (used)",
    "insertText": "DispatchSubsequents()"
  },
  {
    "label": "UE_NONCOPYABLE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UE_NONCOPYABLE(FConstructor)"
  },
  {
    "label": "TGraphTask()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "TGraphTask(Prerequisites)"
  },
  {
    "label": "FConstructor()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FConstructor(Prerequisites)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "delete(void* Ptr)"
  },
  {
    "label": "LogPossiblyInvalidSubsequentsTask()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "LogPossiblyInvalidSubsequentsTask(const TCHAR* TaskName)"
  },
  {
    "label": "CreateGraphEvent()",
    "kind": "Method",
    "detail": "Function (FGraphEventRef)",
    "insertText": "CreateGraphEvent()"
  },
  {
    "label": "DispatchSubsequents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchSubsequents(ENamedThreads::Type CurrentThreadIfKnown = ENamedThreads::AnyThread)"
  },
  {
    "label": "DispatchSubsequents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchSubsequents(TArray<FBaseGraphTask*>& NewTasks, ENamedThreads::Type CurrentThreadIfKnown = ENamedThreads::AnyThread, bool bInternal = false)"
  },
  {
    "label": "Recycle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Recycle(FGraphEvent* ToRecycle)"
  },
  {
    "label": "SetupPrereqs()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SetupPrereqs(Prerequisites, CurrentThreadIfKnown, true)"
  },
  {
    "label": "AnyTaskCompleted()",
    "kind": "Method",
    "detail": "Function (FGraphEventRef)",
    "insertText": "AnyTaskCompleted(const FGraphEventArray& GraphEvents)"
  },
  {
    "label": "GET_STATID()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_STATID(STAT_FReturnGraphTask)"
  },
  {
    "label": "TStatId()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TStatId()"
  },
  {
    "label": "GET_STATID()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GET_STATID(STAT_FTriggerEventGraphTask)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE(FDelegate)"
  },
  {
    "label": "CreateAndDispatchWhenReady()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateAndDispatchWhenReady(InTaskDeletegate, InStatId, &Prerequisites, InDesiredThread)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_TwoParams( FDelegate,ENamedThreads::Type, const  FGraphEventRef& )"
  },
  {
    "label": "CreateAndDispatchWhenReady()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateAndDispatchWhenReady(InTaskDeletegate, InStatId, &Prerequisites, InCurrentThreadIfKnown, InDesiredThread)"
  }
]