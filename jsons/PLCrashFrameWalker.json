[
  {
    "label": "plframe_stackframe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plframe_stackframe"
  },
  {
    "label": "plframe_cursor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plframe_cursor"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef PLCRASH_FRAMEWALKER_H # define PLCRASH_FRAMEWALKER_H # include<sys / ucontext . h> # include<pthread . h> # include<stdint . h> # include<stdbool . h> # include<unistd . h> # include<mach / mach . h> # include \" PLCrashAsyncThread . h \" # include \" PLCrashAsyncImageList . h \" # if)",
    "insertText": "defined(__i386__) || defined(__x86_64__) #define PLFRAME_X86_SUPPORT 1 #include <mach/i386/thread_state.h> #endif #if defined(__arm__) || defined(__arm64__)"
  },
  {
    "label": "plframe_cursor_frame_reader_t()",
    "kind": "Method",
    "detail": "Function (# endif typedef enum { PLFRAME_ESUCCESS = 0,PLFRAME_EUNKNOWN,PLFRAME_ENOFRAME,PLFRAME_EBADFRAME,PLFRAME_ENOTSUP,PLFRAME_EINVAL,PLFRAME_INTERNAL,PLFRAME_EBADREG } plframe_error_t ; typedef struct plframe_stackframe { plcrash_async_thread_state_t thread_state ; } plframe_stackframe_t ; typedef struct plframe_cursor { task_t task ; plcrash_async_image_list_t* image_list ; uint32_t depth ; plframe_stackframe_t prev_frame ; plframe_stackframe_t frame ; } plframe_cursor_t ; typedef plframe_error_t)",
    "insertText": "plframe_cursor_frame_reader_t(task_t task, plcrash_async_image_list_t *image_list, const plframe_stackframe_t *current_frame, const plframe_stackframe_t *previous_frame, plframe_stackframe_t *next_frame)"
  },
  {
    "label": "plframe_strerror()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "plframe_strerror(plframe_error_t error)"
  },
  {
    "label": "plframe_cursor_init()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_init(plframe_cursor_t *cursor, task_t task, plcrash_async_thread_state_t *thread_state, plcrash_async_image_list_t *image_list)"
  },
  {
    "label": "plframe_cursor_thread_init()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_thread_init(plframe_cursor_t *cursor, task_t task, thread_t thread, plcrash_async_image_list_t *image_list)"
  },
  {
    "label": "plframe_cursor_get_regname()",
    "kind": "Method",
    "detail": "Function (char const*)",
    "insertText": "plframe_cursor_get_regname(plframe_cursor_t *cursor, plcrash_regnum_t regnum)"
  },
  {
    "label": "plframe_cursor_get_regcount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "plframe_cursor_get_regcount(plframe_cursor_t *cursor)"
  },
  {
    "label": "plframe_cursor_get_reg()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_get_reg(plframe_cursor_t *cursor, plcrash_regnum_t regnum, plcrash_greg_t *reg)"
  },
  {
    "label": "plframe_cursor_next()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_next(plframe_cursor_t *cursor)"
  },
  {
    "label": "plframe_cursor_next_with_readers()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_next_with_readers(plframe_cursor_t *cursor, plframe_cursor_frame_reader_t *readers[], size_t reader_count)"
  },
  {
    "label": "plframe_cursor_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "plframe_cursor_free(plframe_cursor_t *cursor)"
  }
]