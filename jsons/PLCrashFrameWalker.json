[
  {
    "label": "plframe_stackframe",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plframe_stackframe"
  },
  {
    "label": "plframe_cursor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plframe_cursor"
  },
  {
    "label": "plframe_cursor_frame_reader_t()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_frame_reader_t(task_t task,\n                                                       plcrash_async_image_list_t *image_list,\n                                                       const plframe_stackframe_t *current_frame,\n                                                       const plframe_stackframe_t *previous_frame,\n                                                       plframe_stackframe_t *next_frame)"
  },
  {
    "label": "plframe_cursor_init()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_init(plframe_cursor_t *cursor, task_t task, plcrash_async_thread_state_t *thread_state, plcrash_async_image_list_t *image_list)"
  },
  {
    "label": "plframe_cursor_thread_init()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_thread_init(plframe_cursor_t *cursor, task_t task, thread_t thread, plcrash_async_image_list_t *image_list)"
  },
  {
    "label": "plframe_cursor_get_regcount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "plframe_cursor_get_regcount(plframe_cursor_t *cursor)"
  },
  {
    "label": "plframe_cursor_get_reg()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_get_reg(plframe_cursor_t *cursor, plcrash_regnum_t regnum, plcrash_greg_t *reg)"
  },
  {
    "label": "plframe_cursor_next()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_next(plframe_cursor_t *cursor)"
  },
  {
    "label": "plframe_cursor_next_with_readers()",
    "kind": "Method",
    "detail": "Function (plframe_error_t)",
    "insertText": "plframe_cursor_next_with_readers(plframe_cursor_t *cursor, plframe_cursor_frame_reader_t *readers[], size_t reader_count)"
  },
  {
    "label": "plframe_cursor_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "plframe_cursor_free(plframe_cursor_t *cursor)"
  }
]