[
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "FNotifyHook",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNotifyHook"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTable"
  },
  {
    "label": "IPropertyTableCellPresenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCellPresenter"
  },
  {
    "label": "ISinglePropertyView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISinglePropertyView"
  },
  {
    "label": "SDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDetailsView"
  },
  {
    "label": "SPropertyTreeViewImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyTreeViewImpl"
  },
  {
    "label": "SSingleProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSingleProperty"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Result",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Result"
  },
  {
    "label": "IPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCell"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "IPropertyTypeCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeCustomization"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "IPropertyTypeIdentifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTypeIdentifier"
  },
  {
    "label": "FStructureDetailsViewArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructureDetailsViewArgs"
  },
  {
    "label": "FPropertySection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertySection"
  },
  {
    "label": "FClassSectionMapping",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassSectionMapping"
  },
  {
    "label": "FPropertyEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditorModule"
  },
  {
    "label": "FRegisterCustomClassLayoutParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisterCustomClassLayoutParams"
  },
  {
    "label": "FDetailsViewArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDetailsViewArgs"
  },
  {
    "label": "FSinglePropertyParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSinglePropertyParams"
  },
  {
    "label": "IStructureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructureDataProvider"
  },
  {
    "label": "IStructureDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructureDetailsView"
  },
  {
    "label": "FStructOnScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructOnScope"
  },
  {
    "label": "IPropertyRowGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyRowGenerator"
  },
  {
    "label": "FPropertyRowGeneratorArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyRowGeneratorArgs"
  },
  {
    "label": "IPropertyChangeListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyChangeListener"
  },
  {
    "label": "IPropertyTableCustomColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCustomColumn"
  },
  {
    "label": "IPropertyTableWidgetHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableWidgetHandle"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "FAssetThumbnailPool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnailPool"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IDetailsView . h \" # include \" IPropertyTypeCustomization . h \" # include \" PropertyEditorDelegates . h \" # include \" Modules / ModuleInterface . h \" # include \" UObject / StructOnScope . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SWindow . h \" # include \" Misc / Optional . h \" class FAssetEditorToolkit ; class FNotifyHook ; class IPropertyHandle ; class IPropertyTable ; class IPropertyTableCellPresenter ; class ISinglePropertyView ; class SDetailsView ; class SPropertyTreeViewImpl ; class SSingleProperty ; class UToolMenu ; namespace UE::PropertyEditor { FName RowContextMenuName =)",
    "insertText": "TEXT(\"PropertyEditor.RowContextMenu\")"
  },
  {
    "label": "IPropertyTypeIdentifier()",
    "kind": "Method",
    "detail": "Function (} namespace EPropertyNamePlacement { enum Type { Hidden,Left,Right,Inside,} ; } namespace FPropertyAccess { enum Result { MultipleValues,Fail,Success,} ; } class IPropertyHandle ; class IPropertyTableCell ; class SPropertyTreeViewImpl ; class SWindow ; class IPropertyTableCellPresenter ; class IPropertyTypeCustomization ; class IDetailsView ; class IToolkitHost ; class FAssetEditorToolkit ; class IPropertyTypeIdentifier { public : ~)",
    "insertText": "IPropertyTypeIdentifier()"
  },
  {
    "label": "IsPropertyTypeCustomized()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPropertyTypeCustomized(const IPropertyHandle& PropertyHandle)"
  },
  {
    "label": "FStructureDetailsViewArgs()",
    "kind": "Method",
    "detail": "Function (} ; typedef TMap<TWeakObjectPtr<UStruct>,FDetailLayoutCallback> FCustomDetailLayoutMap ; typedef TMap<FName,FDetailLayoutCallback> FCustomDetailLayoutNameMap ; struct FStructureDetailsViewArgs {)",
    "insertText": "FStructureDetailsViewArgs() : bShowObjects(false) , bShowAssets(true) , bShowClasses(true) , bShowInterfaces(false)"
  },
  {
    "label": "FPropertySection()",
    "kind": "Method",
    "detail": "Function (} bool bShowObjects : 1 ; bool bShowAssets : 1 ; bool bShowClasses : 1 ; bool bShowInterfaces : 1 ; } ; class FPropertySection { public :)",
    "insertText": "FPropertySection(FName InName, FText InDisplayName) : Name(InName), DisplayName(InDisplayName)"
  },
  {
    "label": "FPropertySection()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPropertySection(const FPropertySection&)"
  },
  {
    "label": "FPropertySection()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPropertySection()"
  },
  {
    "label": "AddCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCategory(FName CategoryName)"
  },
  {
    "label": "RemoveCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCategory(FName CategoryName)"
  },
  {
    "label": "HasAddedCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAddedCategory(FName CategoryName)"
  },
  {
    "label": "HasRemovedCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasRemovedCategory(FName CategoryName)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetName()"
  },
  {
    "label": "FClassSectionMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FClassSectionMapping(const FClassSectionMapping&)"
  },
  {
    "label": "FindSection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertySection>)",
    "insertText": "FindSection(FName SectionName)"
  },
  {
    "label": "FindOrAddSection()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPropertySection>)",
    "insertText": "FindOrAddSection(FName SectionName, FText DisplayName)"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(FName SectionName)"
  },
  {
    "label": "GetSectionsForCategory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSectionsForCategory(FName CategoryName, TArray<TSharedPtr<FPropertySection>>& OutSections)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (private : class FPropertyEditorModule ; FName ClassName ; TMap<FName,TSharedPtr<FPropertySection>> DefinedSections ; } ; struct FRegisterCustomClassLayoutParams { TOptional<int32> OptionalOrder ; } ; class FPropertyEditorModule : public IModuleInterface { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "UpdatePropertyViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePropertyViews(const TArray<UObject*>& NewObjectList)"
  },
  {
    "label": "ReplaceViewedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReplaceViewedObjects(const TMap<UObject*, UObject*>& OldToNewObjectMap)"
  },
  {
    "label": "RemoveDeletedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDeletedObjects(TArray<UObject*>& DeletedObjects)"
  },
  {
    "label": "HasUnlockedDetailViews()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasUnlockedDetailViews()"
  },
  {
    "label": "RegisterCustomClassLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomClassLayout(FName ClassName, FOnGetDetailCustomizationInstance DetailLayoutDelegate, FRegisterCustomClassLayoutParams Params = FRegisterCustomClassLayoutParams())"
  },
  {
    "label": "UnregisterCustomClassLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomClassLayout(FName ClassName)"
  },
  {
    "label": "RegisterCustomPropertyTypeLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCustomPropertyTypeLayout(FName PropertyTypeName, FOnGetPropertyTypeCustomizationInstance PropertyTypeLayoutDelegate, TSharedPtr<IPropertyTypeIdentifier> Identifier = nullptr)"
  },
  {
    "label": "UnregisterCustomPropertyTypeLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterCustomPropertyTypeLayout(FName PropertyTypeName, TSharedPtr<IPropertyTypeIdentifier> InIdentifier = nullptr)"
  },
  {
    "label": "RegisterPropertyHandleLayoutOverride()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "RegisterPropertyHandleLayoutOverride(FName PropertyTypeName, const FPropertyHandleLayoutOverride& Delegate)"
  },
  {
    "label": "UnregisterPropertyHandleLayoutOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterPropertyHandleLayoutOverride(FDelegateHandle DelegateHandle)"
  },
  {
    "label": "FindOrCreateSection()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPropertySection>)",
    "insertText": "FindOrCreateSection(FName ClassName, FName SectionName, FText DisplayName)"
  },
  {
    "label": "FindSectionsForCategory()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<FPropertySection>>)",
    "insertText": "FindSectionsForCategory(const UStruct* Struct, FName CategoryName)"
  },
  {
    "label": "GetAllSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllSections(const UStruct* Struct, TArray<TSharedPtr<FPropertySection>>& OutSections)"
  },
  {
    "label": "RemoveSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSection(FName ClassName, FName SectionName)"
  },
  {
    "label": "NotifyCustomizationModuleChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCustomizationModuleChanged()"
  },
  {
    "label": "CreateDetailView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IDetailsView>)",
    "insertText": "CreateDetailView(const struct FDetailsViewArgs& DetailsViewArgs)"
  },
  {
    "label": "FindDetailView()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IDetailsView>)",
    "insertText": "FindDetailView(const FName ViewIdentifier)"
  },
  {
    "label": "CreateFloatingDetailsView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWindow>)",
    "insertText": "CreateFloatingDetailsView(const TArray< UObject* >& InObjects, bool bIsLockable)"
  },
  {
    "label": "CreateSingleProperty()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class ISinglePropertyView>)",
    "insertText": "CreateSingleProperty(UObject* InObject, FName InPropertyName, const struct FSinglePropertyParams& InitParams)"
  },
  {
    "label": "CreateSingleProperty()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class ISinglePropertyView>)",
    "insertText": "CreateSingleProperty(const TSharedPtr<class IStructureDataProvider>& InStruct, FName InPropertyName, const struct FSinglePropertyParams& InitParams)"
  },
  {
    "label": "CreateStructureDetailView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IStructureDetailsView>)",
    "insertText": "CreateStructureDetailView(const struct FDetailsViewArgs& DetailsViewArgs, const FStructureDetailsViewArgs& StructureDetailsViewArgs, TSharedPtr<class FStructOnScope> StructData, const FText& CustomName = FText::GetEmpty())"
  },
  {
    "label": "CreateStructureProviderDetailView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IStructureDetailsView>)",
    "insertText": "CreateStructureProviderDetailView(const FDetailsViewArgs& DetailsViewArgs, const FStructureDetailsViewArgs& StructureDetailsViewArgs, TSharedPtr<IStructureDataProvider> StructProvider, const FText& CustomName = FText::GetEmpty())"
  },
  {
    "label": "CreatePropertyRowGenerator()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPropertyRowGenerator>)",
    "insertText": "CreatePropertyRowGenerator(const struct FPropertyRowGeneratorArgs& InArgs)"
  },
  {
    "label": "CreatePropertyChangeListener()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPropertyChangeListener>)",
    "insertText": "CreatePropertyChangeListener()"
  },
  {
    "label": "CreatePropertyTable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPropertyTable>)",
    "insertText": "CreatePropertyTable()"
  },
  {
    "label": "CreatePropertyTableWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePropertyTableWidget(const TSharedRef< class IPropertyTable >& PropertyTable)"
  },
  {
    "label": "CreatePropertyTableWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreatePropertyTableWidget(const TSharedRef< class IPropertyTable >& PropertyTable, const TArray< TSharedRef< class IPropertyTableCustomColumn > >& Customizations)"
  },
  {
    "label": "CreatePropertyTableWidgetHandle()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPropertyTableWidgetHandle>)",
    "insertText": "CreatePropertyTableWidgetHandle(const TSharedRef< IPropertyTable >& PropertyTable)"
  },
  {
    "label": "CreatePropertyTableWidgetHandle()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IPropertyTableWidgetHandle>)",
    "insertText": "CreatePropertyTableWidgetHandle(const TSharedRef< IPropertyTable >& PropertyTable, const TArray< TSharedRef< class IPropertyTableCustomColumn > >& Customizations)"
  },
  {
    "label": "CreateTextPropertyCellPresenter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPropertyTableCellPresenter>)",
    "insertText": "CreateTextPropertyCellPresenter(const TSharedRef< class FPropertyNode >& InPropertyNode, const TSharedRef< class IPropertyTableUtilities >& InPropertyUtilities, const FSlateFontInfo* InFontPtr = NULL, const TSharedPtr< IPropertyTableCell >& InCell = nullptr)"
  },
  {
    "label": "RegisterStructProperty()",
    "kind": "Method",
    "detail": "Function (FStructProperty*)",
    "insertText": "RegisterStructProperty(const UStruct* StructClass)"
  },
  {
    "label": "CreatePropertyEditorToolkit()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FAssetEditorToolkit>)",
    "insertText": "CreatePropertyEditorToolkit(const TSharedPtr< class IToolkitHost >& InitToolkitHost, UObject* ObjectToEdit)"
  },
  {
    "label": "CreatePropertyEditorToolkit()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FAssetEditorToolkit>)",
    "insertText": "CreatePropertyEditorToolkit(const TSharedPtr< IToolkitHost >& InitToolkitHost, const TArray< UObject* >& ObjectsToEdit)"
  },
  {
    "label": "CreatePropertyEditorToolkit()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FAssetEditorToolkit>)",
    "insertText": "CreatePropertyEditorToolkit(const TSharedPtr< IToolkitHost >& InitToolkitHost, const TArray< TWeakObjectPtr< UObject > >& ObjectsToEdit)"
  },
  {
    "label": "GetPropertyTypeCustomization()",
    "kind": "Method",
    "detail": "Function (FPropertyTypeLayoutCallback)",
    "insertText": "GetPropertyTypeCustomization(const FProperty* InProperty,const IPropertyHandle& PropertyHandle, const FCustomPropertyTypeLayoutMap& InstancedPropertyTypeLayoutMap)"
  },
  {
    "label": "FindPropertyTypeLayoutCallback()",
    "kind": "Method",
    "detail": "Function (FPropertyTypeLayoutCallback)",
    "insertText": "FindPropertyTypeLayoutCallback(FName PropertyTypeName, const IPropertyHandle& PropertyHandle, const FCustomPropertyTypeLayoutMap& InstancedPropertyTypeLayoutMapp)"
  },
  {
    "label": "IsCustomizedStruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCustomizedStruct(const UStruct* Struct, const FCustomPropertyTypeLayoutMap& InstancePropertyTypeLayoutMap)"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(PropertyEditorModule, FPropertyEditorOpenedEvent)"
  },
  {
    "label": "OnPropertyEditorOpened()",
    "kind": "Method",
    "detail": "Function (FPropertyEditorOpenedEvent&)",
    "insertText": "OnPropertyEditorOpened()"
  },
  {
    "label": "CreatePropertyView()",
    "kind": "Method",
    "detail": "Function (bCanUsePropertyMatrixOverride = bInCanUsePropertyMatrix ; } private : TSharedRef<SPropertyTreeViewImpl>)",
    "insertText": "CreatePropertyView(UObject* InObject, bool bAllowFavorites, bool bIsLockable, bool bHiddenPropertyVisibility, bool bAllowSearch, bool ShowTopLevelNodes, FNotifyHook* InNotifyHook, float InNameColumnWidth, FOnPropertySelectionChanged OnPropertySelectionChanged, FOnPropertyClicked OnPropertyMiddleClicked, FConstructExternalColumnHeaders ConstructExternalColumnHeaders, FConstructExternalColumnCell ConstructExternalColumnCell)"
  },
  {
    "label": "CreateStructureDetailView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IStructureDetailsView>)",
    "insertText": "CreateStructureDetailView(const struct FDetailsViewArgs& DetailsViewArgs, const FStructureDetailsViewArgs& StructureDetailsViewArgs, const FText& CustomName = FText::GetEmpty())"
  },
  {
    "label": "GetThumbnailPool()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAssetThumbnailPool>)",
    "insertText": "GetThumbnailPool()"
  },
  {
    "label": "GetAllSectionsHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllSectionsHelper(const UStruct* Struct, TArray<TSharedPtr<FPropertySection>>& OutSections, TSet<const UStruct*>& ProcessedStructs)"
  },
  {
    "label": "FindSectionsForCategoryHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindSectionsForCategoryHelper(const UStruct* Struct, FName CategoryName, TArray<TSharedPtr<FPropertySection>>& OutSections, TSet<const UStruct*>& SearchedStructs)"
  },
  {
    "label": "CreateSinglePropertyImpl()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class ISinglePropertyView>)",
    "insertText": "CreateSinglePropertyImpl(UObject* InObject, const TSharedPtr<IStructureDataProvider>& InStruct, FName InPropertyName, const struct FSinglePropertyParams& InitParams)"
  },
  {
    "label": "CompactSinglePropertyViewArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompactSinglePropertyViewArray()"
  },
  {
    "label": "RegisterMenus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterMenus()"
  },
  {
    "label": "PopulateRowContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateRowContextMenu(UToolMenu* InToolMenu)"
  }
]