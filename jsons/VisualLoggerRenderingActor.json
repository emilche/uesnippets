[
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FVisualLoggerDBRow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerDBRow"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "LOGVISUALIZER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOGVISUALIZER_API"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VisualLoggerRenderingActorBase . h \" # include \" VisualLoggerRenderingActor . generated . h \" # define VLOG_TEST_DEBUG_RENDERING 0 class UPrimitiveComponent ; struct FVisualLoggerDBRow ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnSelectionChanged, class AActor*)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(config = Engine, NotBlueprintable, Transient, notplaceable, AdvancedClassDisplay)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_UCLASS_BODY() virtual ~AVisualLoggerRenderingActor()"
  },
  {
    "label": "ResetRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRendering()"
  },
  {
    "label": "ObjectVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ObjectVisibilityChanged(const FName& RowName)"
  },
  {
    "label": "ObjectSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ObjectSelectionChanged(const TArray<FName>& Selection)"
  },
  {
    "label": "OnItemSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemSelectionChanged(const FVisualLoggerDBRow& BDRow, int32 ItemIndex)"
  },
  {
    "label": "IterateDebugShapes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateDebugShapes(TFunction<void(const FTimelineDebugShapes&) > Callback)"
  },
  {
    "label": "MatchCategoryFilters()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchCategoryFilters(const FName& CategoryName, ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "OnFiltersChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnFiltersChanged()"
  },
  {
    "label": "AddDebugRendering()",
    "kind": "Method",
    "detail": "Function (TArray<FName> CachedRowSelection ; TMap<FName,FTimelineDebugShapes> DebugShapesPerRow ; # if VLOG_TEST_DEBUG_RENDERING void)",
    "insertText": "AddDebugRendering()"
  }
]