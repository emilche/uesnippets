[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FEngineConsoleCommandExecutor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEngineConsoleCommandExecutor"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UGameEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameEngine"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "IEngineLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IEngineLoop"
  },
  {
    "label": "CreateGameViewportWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGameViewportWidget( UGameViewportClient* GameViewportClient )"
  },
  {
    "label": "CreateGameViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateGameViewport( UGameViewportClient* GameViewportClient )"
  },
  {
    "label": "CreateGameWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWindow>)",
    "insertText": "CreateGameWindow()"
  },
  {
    "label": "SafeFrameChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeFrameChanged()"
  },
  {
    "label": "EnableGameWindowSettingsOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableGameWindowSettingsOverride(bool bEnabled)"
  },
  {
    "label": "ConditionallyOverrideSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyOverrideSettings( int32& ResolutionX, int32& ResolutionY, EWindowMode::Type& WindowMode )"
  },
  {
    "label": "DetermineGameWindowResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetermineGameWindowResolution( int32& ResolutionX, int32& ResolutionY, EWindowMode::Type& WindowMode, bool bUseWorkAreaForWindowed = false )"
  },
  {
    "label": "SwitchGameWindowToUseGameViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SwitchGameWindowToUseGameViewport()"
  },
  {
    "label": "OnGameWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGameWindowClosed( const TSharedRef<SWindow>& WindowBeingClosed )"
  },
  {
    "label": "OnGameWindowMoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGameWindowMoved( const TSharedRef<SWindow>& WindowBeingMoved )"
  },
  {
    "label": "OnViewportResized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnViewportResized(FViewport* Viewport, uint32 Unused)"
  },
  {
    "label": "HandleCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCommand( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "HandleExitCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleExitCommand( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "HandleMinimizeCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMinimizeCommand( const TCHAR *Cmd, FOutputDevice &Ar )"
  },
  {
    "label": "HandleGetMaxTickRateCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleGetMaxTickRateCommand( const TCHAR* Cmd, FOutputDevice& Ar )"
  },
  {
    "label": "HandleCancelCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCancelCommand( const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld )"
  },
  {
    "label": "HandleApplyUserSettingsCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleApplyUserSettingsCommand( const TCHAR* Cmd, FOutputDevice& Ar )"
  }
]