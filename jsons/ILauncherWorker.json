[
  {
    "label": "ILauncherWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILauncherWorker"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ILauncherTask . h \" # include \" ILauncherProfile . h \" class ILauncherWorker ; namespace ELauncherWorkerStatus { enum Type { Busy,Canceling,Canceled,Completed } ; } typedef TSharedPtr<class ILauncherWorker> ILauncherWorkerPtr ; typedef TSharedRef<class ILauncherWorker> ILauncherWorkerRef ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOutputMessageReceivedDelegate, const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnStageStartedDelegate, const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnStageCompletedDelegate, const FString&, double)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnLaunchCompletedDelegate, bool, double, int32)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnLaunchCanceledDelegate, double)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (class ILauncherWorker { public : void)",
    "insertText": "Cancel()"
  },
  {
    "label": "CancelAndWait()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAndWait()"
  },
  {
    "label": "GetStatus()",
    "kind": "Method",
    "detail": "Function (ELauncherWorkerStatus::Type)",
    "insertText": "GetStatus()"
  },
  {
    "label": "GetTasks()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTasks(TArray<ILauncherTaskPtr>& OutTasks)"
  },
  {
    "label": "OnOutputReceived()",
    "kind": "Method",
    "detail": "Function (FOutputMessageReceivedDelegate&)",
    "insertText": "OnOutputReceived()"
  },
  {
    "label": "OnStageStarted()",
    "kind": "Method",
    "detail": "Function (FOnStageStartedDelegate&)",
    "insertText": "OnStageStarted()"
  },
  {
    "label": "OnStageCompleted()",
    "kind": "Method",
    "detail": "Function (FOnStageCompletedDelegate&)",
    "insertText": "OnStageCompleted()"
  },
  {
    "label": "OnCompleted()",
    "kind": "Method",
    "detail": "Function (FOnLaunchCompletedDelegate&)",
    "insertText": "OnCompleted()"
  },
  {
    "label": "OnCanceled()",
    "kind": "Method",
    "detail": "Function (FOnLaunchCanceledDelegate&)",
    "insertText": "OnCanceled()"
  },
  {
    "label": "GetLauncherProfile()",
    "kind": "Method",
    "detail": "Function (ILauncherProfilePtr)",
    "insertText": "GetLauncherProfile()"
  },
  {
    "label": "AddDevicePackagePair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDevicePackagePair(const FString& Device, const FString& Package)"
  },
  {
    "label": "ILauncherWorker()",
    "kind": "Method",
    "detail": "Function (} ; protected : ~)",
    "insertText": "ILauncherWorker()"
  }
]