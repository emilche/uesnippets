[
  {
    "label": "keeps",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "keeps"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "in",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "in"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "NackTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackTracker"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "NackElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NackElement"
  },
  {
    "label": "NackListCompare",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackListCompare"
  },
  {
    "label": "SetMaxNackListSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxNackListSize(size_t max_nack_list_size)"
  },
  {
    "label": "UpdateSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSampleRate(int sample_rate_hz)"
  },
  {
    "label": "UpdateLastDecodedPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLastDecodedPacket(uint16_t sequence_number, uint32_t timestamp)"
  },
  {
    "label": "UpdateLastReceivedPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLastReceivedPacket(uint16_t sequence_number, uint32_t timestamp)"
  },
  {
    "label": "GetNackList()",
    "kind": "Method",
    "detail": "Function (std::vector<uint16_t>)",
    "insertText": "GetNackList(int64_t round_trip_time_ms)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsNewerSequenceNumber()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsNewerSequenceNumber(sequence_number_new, sequence_number_old)"
  },
  {
    "label": "UpdateEstimatedPlayoutTimeBy10ms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEstimatedPlayoutTimeBy10ms()"
  },
  {
    "label": "UpdateList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateList(uint16_t sequence_number_current_received_rtp,\n                  uint32_t timestamp_current_received_rtp)"
  },
  {
    "label": "LimitNackListSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LimitNackListSize()"
  },
  {
    "label": "EstimateTimestamp()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "EstimateTimestamp(uint16_t sequence_number, int samples_per_packet)"
  },
  {
    "label": "UpdatePacketLossRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePacketLossRate(int packets_lost)"
  }
]