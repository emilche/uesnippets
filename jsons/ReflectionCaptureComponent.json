[
  {
    "label": "FReflectionCaptureProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionCaptureProxy"
  },
  {
    "label": "UBillboardComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBillboardComponent"
  },
  {
    "label": "FTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UReflectionCaptureComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReflectionCaptureComponent"
  },
  {
    "label": "UTextureCube",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTextureCube"
  },
  {
    "label": "FReflectionTextureCubeResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionTextureCubeResource"
  },
  {
    "label": "FReflectionCaptureMapBuildData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReflectionCaptureMapBuildData"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" Misc / CoreStats . h \" # include \" Templates / RefCounting . h \" # include \" Components / SceneComponent . h \" # include \" RenderCommandFence . h \" # include \" ReflectionCaptureComponent . generated . h \" class FReflectionCaptureProxy ; class UBillboardComponent ; class FTexture ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (CapturedScene,SpecifiedCubemap,} ;)",
    "insertText": "UCLASS(abstract, hidecategories=(Collision, Object, Physics, SceneComponent, Activation, \"Components|Activation\", Mobility), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "CreateSceneProxy()",
    "kind": "Method",
    "detail": "Function (class FReflectionTextureCubeResource* EncodedHDRCubemapTexture ; # if WITH_EDITOR bool bMapBuildDataIdLoaded ; # endif FReflectionCaptureProxy* SceneProxy ; FReflectionCaptureProxy*)",
    "insertText": "CreateSceneProxy()"
  },
  {
    "label": "UpdatePreviewShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreviewShape()"
  },
  {
    "label": "MarkDirtyForRecaptureOrUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDirtyForRecaptureOrUpload()"
  },
  {
    "label": "MarkDirtyForRecapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkDirtyForRecapture()"
  },
  {
    "label": "SetCaptureCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCaptureCompleted()"
  },
  {
    "label": "GetInfluenceBoundingRadius()",
    "kind": "Method",
    "detail": "Function (bNeedsRecaptureOrUpload = false ; } float)",
    "insertText": "GetInfluenceBoundingRadius() const PURE_VIRTUAL(UReflectionCaptureComponent::GetInfluenceBoundingRadius,return 0;)"
  },
  {
    "label": "UpdateReflectionCaptureContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReflectionCaptureContents(UWorld* WorldToUpdate, const TCHAR* CaptureReason = nullptr, bool bVerifyOnlyCapturing = false, bool bCapturingForMobile = false, bool bInsideTick = false)"
  },
  {
    "label": "GetMapBuildData()",
    "kind": "Method",
    "detail": "Function (class FReflectionCaptureMapBuildData*)",
    "insertText": "GetMapBuildData()"
  },
  {
    "label": "PropagateLightingScenarioChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateLightingScenarioChange()"
  },
  {
    "label": "GetReflectionCaptureSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetReflectionCaptureSize()"
  },
  {
    "label": "CreateRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRenderState_Concurrent(FRegisterComponentContext* Context)"
  },
  {
    "label": "DestroyRenderState_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyRenderState_Concurrent()"
  },
  {
    "label": "SendRenderTransform_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRenderTransform_Concurrent()"
  },
  {
    "label": "OnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRegister()"
  },
  {
    "label": "InvalidateLightingCacheDetailed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateLightingCacheDetailed(bool bInvalidateBuildEnqueuedLighting, bool bTranslationOnly)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* Property)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PreFeatureLevelChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreFeatureLevelChange(ERHIFeatureLevel::Type PendingFeatureLevel)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "IsReadyForFinishDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForFinishDestroy()"
  },
  {
    "label": "FinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishDestroy()"
  },
  {
    "label": "SerializeLegacyData()",
    "kind": "Method",
    "detail": "Function (private : bool bNeedsRecaptureOrUpload ; float CachedAverageBrightness ; FRenderCommandFence ReleaseResourcesFence ; TArray<UReflectionCaptureComponent*> ReflectionCapturesToUpdate ; TArray<UReflectionCaptureComponent*> ReflectionCapturesToUpdateForLoad ; FCriticalSection ReflectionCapturesToUpdateForLoadLock ; void)",
    "insertText": "SerializeLegacyData(FArchive& Ar)"
  },
  {
    "label": "SafeReleaseEncodedHDRCubemapTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SafeReleaseEncodedHDRCubemapTexture()"
  },
  {
    "label": "GenerateEncodedHDRData()",
    "kind": "Method",
    "detail": "Function (class FReflectionCaptureProxy ; } ; void)",
    "insertText": "GenerateEncodedHDRData(const TArray<uint8>& FullHDRData, int32 CubemapSize, TArray<uint8>& OutEncodedHDRData)"
  }
]