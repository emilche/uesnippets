[
  {
    "label": "FDefinitionProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefinitionProvider"
  },
  {
    "label": "FDefinitionProvider()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Containers / Map . h \" # include \" HAL / CriticalSection . h \" # include \" Misc / ScopeRWLock . h \" # include \" Templates / UniquePtr . h \" # include \" Trace / Analyzer . h \" # include \" TraceServices / Model / Definitions . h \" namespace TraceServices { class FDefinitionProvider : public IDefinitionProvider { public :)",
    "insertText": "FDefinitionProvider(IAnalysisSession* InSession)"
  },
  {
    "label": "FDefinitionProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDefinitionProvider()"
  },
  {
    "label": "BeginRead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRead()"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "ReadLock()"
  },
  {
    "label": "EndRead()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndRead()"
  },
  {
    "label": "ReadUnlock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "ReadUnlock()"
  },
  {
    "label": "ReadAccessCheck()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReadAccessCheck()"
  },
  {
    "label": "BeginEdit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BeginEdit()"
  },
  {
    "label": "WriteLock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "WriteLock()"
  },
  {
    "label": "EndEdit()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndEdit()"
  },
  {
    "label": "WriteUnlock()",
    "kind": "Method",
    "detail": "Function (Lock .)",
    "insertText": "WriteUnlock()"
  },
  {
    "label": "EditAccessCheck()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EditAccessCheck()"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "AddEntry(uint64 Hash, const void* Ptr)"
  },
  {
    "label": "FindEntry()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "FindEntry(uint64 Hash)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Allocate(uint32 Size, uint32 Alignment)"
  }
]