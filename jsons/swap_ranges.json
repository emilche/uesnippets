[
  {
    "label": "_AlgPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_AlgPolicy"
  },
  {
    "label": "_ForwardIterator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_ForwardIterator1"
  },
  {
    "label": "_Sentinel1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Sentinel1"
  },
  {
    "label": "_ForwardIterator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_ForwardIterator2"
  },
  {
    "label": "_Sentinel2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Sentinel2"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_SWAP_RANGES_H # define _LIBCPP___ALGORITHM_SWAP_RANGES_H # include<__algorithm / iterator_operations . h> # include<__config> # include<__utility / move . h> # include<__utility / pair . h> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD template <class _AlgPolicy, class _ForwardIterator1, class _Sentinel1, class _ForwardIterator2, class _Sentinel2> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 pair<_ForwardIterator1, _ForwardIterator2> __swap_ranges(_ForwardIterator1 __first1, _Sentinel1 __last1, _ForwardIterator2 __first2, _Sentinel2 __last2)"
  },
  {
    "label": "iter_swap()",
    "kind": "Method",
    "detail": "Function (_IterOps<_AlgPolicy)",
    "insertText": "iter_swap(__first1, __first2)"
  },
  {
    "label": "_ForwardIterator2()",
    "kind": "Method",
    "detail": "Function (+ + __first1 ; + + __first2 ; } return pair<_ForwardIterator1,)",
    "insertText": "_ForwardIterator2(std::move(__first1), std::move(__first2))"
  },
  {
    "label": "__swap_ranges()",
    "kind": "Method",
    "detail": "Function (} template<class _AlgPolicy,class _ForwardIterator1,class _Sentinel1,class _ForwardIterator2> _LIBCPP_HIDE_FROM_ABI _LIBCPP_CONSTEXPR_AFTER_CXX17 pair<_ForwardIterator1,_ForwardIterator2>)",
    "insertText": "__swap_ranges(_ForwardIterator1 __first1, _Sentinel1 __last1, _ForwardIterator2 __first2)"
  },
  {
    "label": "swap_ranges()",
    "kind": "Method",
    "detail": "Function (} template<class _ForwardIterator1,class _ForwardIterator2> _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 _ForwardIterator2)",
    "insertText": "swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2 __first2)"
  }
]