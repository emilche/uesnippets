[
  {
    "label": "format_object_base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "format_object_base"
  },
  {
    "label": "FormattedString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormattedString"
  },
  {
    "label": "FormattedNumber",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormattedNumber"
  },
  {
    "label": "SmallVectorImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SmallVectorImpl"
  },
  {
    "label": "OpenFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "OpenFlags"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "BufferKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BufferKind"
  },
  {
    "label": "Colors",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Colors"
  },
  {
    "label": "raw_pwrite_stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_pwrite_stream"
  },
  {
    "label": "raw_fd_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_fd_ostream"
  },
  {
    "label": "STDStreamCloser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STDStreamCloser"
  },
  {
    "label": "raw_string_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_string_ostream"
  },
  {
    "label": "raw_svector_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_svector_ostream"
  },
  {
    "label": "raw_null_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_null_ostream"
  },
  {
    "label": "buffer_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "buffer_ostream"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_RAW_OSTREAM_H # define LLVM_SUPPORT_RAW_OSTREAM_H # include \" llvm / ADT / SmallVector . h \" # include \" llvm / ADT / StringRef . h \" # include \" llvm / Support / DataTypes . h \" # include<system_error> namespace llvm { class format_object_base ; class FormattedString ; class FormattedNumber ; template<T> class SmallVectorImpl ; namespace sys { namespace fs { enum OpenFlags : unsigned ; } } class raw_ostream { private : void)",
    "insertText": "operator(const raw_ostream &)"
  },
  {
    "label": "raw_ostream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "raw_ostream(const raw_ostream &)"
  },
  {
    "label": "raw_ostream()",
    "kind": "Method",
    "detail": "Function (char* OutBufStart,* OutBufEnd,* OutBufCur ; int writeBase ; enum BufferKind { Unbuffered = 0,InternalBuffer,ExternalBuffer } BufferMode ; public : enum Colors { BLACK = 0,RED,GREEN,YELLOW,BLUE,MAGENTA,CYAN,WHITE,SAVEDCOLOR } ;)",
    "insertText": "raw_ostream(bool unbuffered = false) : BufferMode(unbuffered ? Unbuffered : InternalBuffer)"
  },
  {
    "label": "raw_ostream()",
    "kind": "Method",
    "detail": "Function (OutBufStart = OutBufEnd = OutBufCur = nullptr ; writeBase = 1 0 ; } ~)",
    "insertText": "raw_ostream()"
  },
  {
    "label": "tell()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "tell()"
  },
  {
    "label": "close()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "close()"
  },
  {
    "label": "flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flush()"
  },
  {
    "label": "has_error()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "has_error()"
  },
  {
    "label": "SetBuffered()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetBuffered()"
  },
  {
    "label": "SetBufferSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferSize(size_t Size)"
  },
  {
    "label": "SetBufferAndMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferAndMode(new char[Size], Size, InternalBuffer)"
  },
  {
    "label": "GetBufferSize()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "GetBufferSize()"
  },
  {
    "label": "SetBufferAndMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferAndMode(nullptr, 0, Unbuffered)"
  },
  {
    "label": "GetNumBytesInBuffer()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "GetNumBytesInBuffer()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} raw_ostream&)",
    "insertText": "operator(char C)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* OutBufCur + + = C ; return* this ; } raw_ostream&)",
    "insertText": "operator(unsigned char C)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* OutBufCur + + = C ; return* this ; } raw_ostream&)",
    "insertText": "operator(signed char C)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* OutBufCur + + = C ; return* this ; } raw_ostream&)",
    "insertText": "operator(StringRef Str)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (size_t Size = Str .)",
    "insertText": "size()"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "memcpy(OutBufCur, Str.data(), Size)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OutBufCur + = Size ; } return* this ; } raw_ostream&)",
    "insertText": "operator(const char *Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} raw_ostream&)",
    "insertText": "operator(const std::string &Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} raw_ostream&)",
    "insertText": "operator(const llvm::SmallVectorImpl<char> &Str)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} raw_ostream&)",
    "insertText": "operator(unsigned long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(unsigned long long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(long long N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(const void *P)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(unsigned int N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} raw_ostream&)",
    "insertText": "operator(int N)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} raw_ostream&)",
    "insertText": "operator(double N)"
  },
  {
    "label": "write_hex()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "write_hex(unsigned long long N)"
  },
  {
    "label": "write_base()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "write_base(unsigned long long N)"
  },
  {
    "label": "write_escaped()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "write_escaped(StringRef Str, bool UseHexEscapes = false)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "write(unsigned char C)"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "write(const char *Ptr, size_t Size)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(const format_object_base &Fmt)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(const FormattedString &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(const FormattedNumber &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "operator(std::ios_base &(__cdecl*iomanip)(std::ios_base &))"
  },
  {
    "label": "indent()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "indent(unsigned NumSpaces)"
  },
  {
    "label": "changeColor()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "changeColor(enum Colors Color, bool Bold = false, bool BG = false)"
  },
  {
    "label": "write_impl()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "write_impl(const char *Ptr, size_t Size)"
  },
  {
    "label": "handle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "handle()"
  },
  {
    "label": "current_pos()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "current_pos()"
  },
  {
    "label": "SetBuffer()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SetBuffer(char *BufferStart, size_t Size)"
  },
  {
    "label": "SetBufferAndMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferAndMode(BufferStart, Size, ExternalBuffer)"
  },
  {
    "label": "preferred_buffer_size()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "preferred_buffer_size()"
  },
  {
    "label": "getBufferStart()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getBufferStart()"
  },
  {
    "label": "flush_nonempty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flush_nonempty()"
  },
  {
    "label": "copy_to_buffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copy_to_buffer(const char *Ptr, size_t Size)"
  },
  {
    "label": "pwrite_impl()",
    "kind": "Method",
    "detail": "Function (} ; class raw_pwrite_stream : public raw_ostream { void)",
    "insertText": "pwrite_impl(const char *Ptr, size_t Size, uint64_t Offset)"
  },
  {
    "label": "raw_pwrite_stream()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "raw_pwrite_stream(bool Unbuffered = false) : raw_ostream(Unbuffered)"
  },
  {
    "label": "pwrite()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "pwrite(const char *Ptr, size_t Size, uint64_t Offset)"
  },
  {
    "label": "pwrite_impl()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "pwrite_impl(Ptr, Size, Offset)"
  },
  {
    "label": "error_detected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "error_detected()"
  },
  {
    "label": "raw_fd_ostream()",
    "kind": "Method",
    "detail": "Function (Error = true ; } public :)",
    "insertText": "raw_fd_ostream(StringRef Filename, std::error_code &EC, sys::fs::OpenFlags Flags)"
  },
  {
    "label": "raw_fd_ostream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "raw_fd_ostream(int fd, bool shouldClose, bool unbuffered=false)"
  },
  {
    "label": "raw_fd_ostream()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "raw_fd_ostream()"
  },
  {
    "label": "supportsSeeking()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "supportsSeeking()"
  },
  {
    "label": "SetUseAtomicWrites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseAtomicWrites(bool Value)"
  },
  {
    "label": "changeColor()",
    "kind": "Method",
    "detail": "Function (UseAtomicWrites = Value ; } raw_ostream&)",
    "insertText": "changeColor(enum Colors colors, bool bold=false, bool bg=false)"
  },
  {
    "label": "resetColor()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "resetColor()"
  },
  {
    "label": "reverseColor()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "reverseColor()"
  },
  {
    "label": "is_displayed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_displayed()"
  },
  {
    "label": "has_colors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "has_colors()"
  },
  {
    "label": "outs()",
    "kind": "Method",
    "detail": "Function (Error = false ; } } ; raw_ostream&)",
    "insertText": "outs()"
  },
  {
    "label": "errs()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "errs()"
  },
  {
    "label": "nulls()",
    "kind": "Method",
    "detail": "Function (raw_ostream&)",
    "insertText": "nulls()"
  },
  {
    "label": "STDStreamCloser()",
    "kind": "Method",
    "detail": "Function (class STDStreamCloser { public : ~)",
    "insertText": "STDStreamCloser()"
  },
  {
    "label": "raw_fd_ostream()",
    "kind": "Method",
    "detail": "Function (llvm::raw_fd_ostream& fo = static_cast<)",
    "insertText": "raw_fd_ostream(llvm::outs())"
  },
  {
    "label": "raw_fd_ostream()",
    "kind": "Method",
    "detail": "Function (llvm::raw_fd_ostream& fe = static_cast<)",
    "insertText": "raw_fd_ostream(llvm::errs())"
  },
  {
    "label": "raw_string_ostream()",
    "kind": "Method",
    "detail": "Function (} public :)",
    "insertText": "raw_string_ostream(std::string &O) : OS(O)"
  },
  {
    "label": "SetUnbuffered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUnbuffered()"
  },
  {
    "label": "raw_string_ostream()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "raw_string_ostream()"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::string&)",
    "insertText": "str()"
  },
  {
    "label": "raw_svector_ostream()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "raw_svector_ostream(SmallVectorImpl<char> &O, unsigned)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init()"
  },
  {
    "label": "raw_svector_ostream()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "raw_svector_ostream(SmallVectorImpl<char> &O)"
  },
  {
    "label": "raw_svector_ostream()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "raw_svector_ostream()"
  },
  {
    "label": "resync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resync()"
  },
  {
    "label": "write_impl()",
    "kind": "Method",
    "detail": "Function (} ; class raw_null_ostream : public raw_pwrite_stream { void)",
    "insertText": "write_impl(const char *Ptr, size_t size)"
  },
  {
    "label": "raw_null_ostream()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "raw_null_ostream()"
  },
  {
    "label": "buffer_ostream()",
    "kind": "Method",
    "detail": "Function (} ; class buffer_ostream : public raw_svector_ostream { raw_ostream& OS ; SmallVector<char,0> Buffer ; public :)",
    "insertText": "buffer_ostream(raw_ostream &OS) : raw_svector_ostream(Buffer, 0), OS(OS)"
  },
  {
    "label": "buffer_ostream()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "buffer_ostream()"
  }
]