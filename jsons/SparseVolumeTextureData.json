[
  {
    "label": "FTextureDataCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureDataCreateInfo"
  },
  {
    "label": "ITextureDataProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextureDataProvider"
  },
  {
    "label": "FTextureDataAddressingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureDataAddressingInfo"
  },
  {
    "label": "FTextureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureData"
  },
  {
    "label": "FMipMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipMap"
  },
  {
    "label": "FDerivedTextureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedTextureData"
  },
  {
    "label": "FMipPageRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipPageRange"
  },
  {
    "label": "FIntVector3()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SparseVolumeTexture / SparseVolumeTexture . h \" namespace UE { namespace SVT { struct FTextureDataCreateInfo { FIntVector3 VirtualVolumeAABBMin =)",
    "insertText": "FIntVector3(INT32_MAX, INT32_MAX, INT32_MAX)"
  },
  {
    "label": "FIntVector3()",
    "kind": "Method",
    "detail": "Function (FIntVector3 VirtualVolumeAABBMax =)",
    "insertText": "FIntVector3(INT32_MIN, INT32_MIN, INT32_MIN)"
  },
  {
    "label": "EPixelFormat()",
    "kind": "Method",
    "detail": "Function (TStaticArray<EPixelFormat,2> AttributesFormats = TStaticArray<)",
    "insertText": "EPixelFormat(InPlace, PF_Unknown)"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (TStaticArray<FVector4f,2> FallbackValues = TStaticArray<)",
    "insertText": "FVector4f(InPlace, FVector4f(0.0f, 0.0f, 0.0f, 0.0f))"
  },
  {
    "label": "GetCreateInfo()",
    "kind": "Method",
    "detail": "Function (} ; class ITextureDataProvider { public : FTextureDataCreateInfo)",
    "insertText": "GetCreateInfo()"
  },
  {
    "label": "IteratePhysicalSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IteratePhysicalSource(TFunctionRef<void(const FIntVector3& Coord, int32 AttributesIdx, int32 ComponentIdx, float VoxelValue)> OnVisit)"
  },
  {
    "label": "ITextureDataProvider()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ITextureDataProvider()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TArray<FMipMap> MipMaps ; bool)",
    "insertText": "Create(const ITextureDataProvider& DataProvider)"
  },
  {
    "label": "CreateFromDense()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateFromDense(const FTextureDataCreateInfo& CreateInfo, const TArrayView64<uint8>& VoxelDataA, const TArrayView64<uint8>& VoxelDataB)"
  },
  {
    "label": "CreateDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefault()"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "Load(const FIntVector3& VolumeCoord, int32 MipLevel, int32 AttributesIdx, const FTextureDataAddressingInfo& AddressingInfo)"
  },
  {
    "label": "BuildDerivedData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildDerivedData(const FTextureDataAddressingInfo& AddressingInfo, int32 NumMipLevelsGlobal, bool bMoveMip0FromThis, struct FDerivedTextureData& OutDerivedData)"
  },
  {
    "label": "GenerateMipMaps()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "GenerateMipMaps(const FTextureDataAddressingInfo& AddressingInfo, int32 NumMipLevels = -1)"
  },
  {
    "label": "GenerateBorderVoxels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateBorderVoxels(const FTextureDataAddressingInfo& AddressingInfo, int32 MipLevel, const TArray<FIntVector3>& PageCoords)"
  },
  {
    "label": "ReadPageTable()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ReadPageTable(const FIntVector3& PageTableCoord, int32 MipLevel)"
  },
  {
    "label": "ReadTileDataVoxel()",
    "kind": "Method",
    "detail": "Function (FVector4f)",
    "insertText": "ReadTileDataVoxel(int32 TileIndex, const FIntVector3& TileDataCoord, int32 MipLevel, int32 AttributesIdx)"
  },
  {
    "label": "WriteTileDataVoxel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteTileDataVoxel(int32 TileIndex, const FIntVector3& TileDataCoord, int32 MipLevel, int32 AttributesIdx, const FVector4f& Value, int32 DstComponent = -1)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} ; struct FDerivedTextureData { struct FMipPageRange { uint32 PageOffset ; uint32 PageCount ; } ; FHeader Header = { } ; uint32 NumPhysicalTiles ; TArray<FMipPageRange> MipPageRanges ; TArray<uint32> PageTableCoords ; TArray<uint32> PageTableTileIndices ; TArray<uint32> PageTableParentIndices ; TArray64<uint8> PhysicalTileDataA ; TArray64<uint8> PhysicalTileDataB ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(const FTextureData& MippedTextureData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; } } FArchive&)",
    "insertText": "operator(FArchive& Ar, UE::SVT::FTextureData& TextureData)"
  }
]