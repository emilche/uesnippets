[
  {
    "label": "AsmPrinterHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsmPrinterHandler"
  },
  {
    "label": "BlockAddress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BlockAddress"
  },
  {
    "label": "ByteStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteStreamer"
  },
  {
    "label": "GCStrategy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCStrategy"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "ConstantArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantArray"
  },
  {
    "label": "DIE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DIE"
  },
  {
    "label": "DIEAbbrev",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DIEAbbrev"
  },
  {
    "label": "GCMetadataPrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GCMetadataPrinter"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "GlobalVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalVariable"
  },
  {
    "label": "MachineBasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineBasicBlock"
  },
  {
    "label": "MachineFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineFunction"
  },
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "MachineLocation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineLocation"
  },
  {
    "label": "MachineLoopInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineLoopInfo"
  },
  {
    "label": "MachineLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineLoop"
  },
  {
    "label": "MachineConstantPoolValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineConstantPoolValue"
  },
  {
    "label": "MachineJumpTableInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineJumpTableInfo"
  },
  {
    "label": "MachineModuleInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineModuleInfo"
  },
  {
    "label": "MCAsmInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCAsmInfo"
  },
  {
    "label": "MCCFIInstruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCCFIInstruction"
  },
  {
    "label": "MCContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCContext"
  },
  {
    "label": "MCExpr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCExpr"
  },
  {
    "label": "MCInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCInst"
  },
  {
    "label": "MCSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSection"
  },
  {
    "label": "MCStreamer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCStreamer"
  },
  {
    "label": "MCSubtargetInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSubtargetInfo"
  },
  {
    "label": "MCSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCSymbol"
  },
  {
    "label": "MCTargetOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCTargetOptions"
  },
  {
    "label": "MDNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MDNode"
  },
  {
    "label": "DwarfDebug",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DwarfDebug"
  },
  {
    "label": "Mangler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mangler"
  },
  {
    "label": "TargetLoweringObjectFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLoweringObjectFile"
  },
  {
    "label": "DataLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayout"
  },
  {
    "label": "TargetMachine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetMachine"
  },
  {
    "label": "AsmPrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsmPrinter"
  },
  {
    "label": "HandlerInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HandlerInfo"
  },
  {
    "label": "CFIMoveType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "CFIMoveType"
  },
  {
    "label": "HandlerInfo()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_CODEGEN_ASMPRINTER_H # define LLVM_CODEGEN_ASMPRINTER_H # include \" llvm / ADT / MapVector . h \" # include \" llvm / ADT / Twine . h \" # include \" llvm / CodeGen / MachineFunctionPass . h \" # include \" llvm / CodeGen / DwarfStringPoolEntry . h \" # include \" llvm / IR / InlineAsm . h \" # include \" llvm / Support / DataTypes . h \" # include \" llvm / Support / ErrorHandling . h \" namespace llvm { class AsmPrinterHandler ; class BlockAddress ; class ByteStreamer ; class GCStrategy ; class Constant ; class ConstantArray ; class DIE ; class DIEAbbrev ; class GCMetadataPrinter ; class GlobalValue ; class GlobalVariable ; class MachineBasicBlock ; class MachineFunction ; class MachineInstr ; class MachineLocation ; class MachineLoopInfo ; class MachineLoop ; class MachineConstantPoolValue ; class MachineJumpTableInfo ; class MachineModuleInfo ; class MCAsmInfo ; class MCCFIInstruction ; class MCContext ; class MCExpr ; class MCInst ; class MCSection ; class MCStreamer ; class MCSubtargetInfo ; class MCSymbol ; class MCTargetOptions ; class MDNode ; class DwarfDebug ; class Mangler ; class TargetLoweringObjectFile ; class DataLayout ; class TargetMachine ; class AsmPrinter : public MachineFunctionPass { public : TargetMachine& TM ; const MCAsmInfo* MAI ; MCContext& OutContext ; std::unique_ptr<MCStreamer> OutStreamer ; const MachineFunction* MF ; MachineModuleInfo* MMI ; Mangler* Mang ; MCSymbol* CurrentFnSym ; MCSymbol* CurrentFnSymForSize ; typedef std::pair<const GlobalVariable*,unsigned> GOTEquivUsePair ; MapVector<const MCSymbol*,GOTEquivUsePair> GlobalGOTEquivs ; private : MCSymbol* CurrentFnBegin ; MCSymbol* CurrentFnEnd ; MCSymbol* CurExceptionSym ; void* GCMetadataPrinters ; bool VerboseAsm ; char ID ; MachineLoopInfo* LI ; struct HandlerInfo { AsmPrinterHandler* Handler ; const char* TimerName,* TimerGroupName ;)",
    "insertText": "HandlerInfo(AsmPrinterHandler *Handler, const char *TimerName, const char *TimerGroupName) : Handler(Handler), TimerName(TimerName), TimerGroupName(TimerGroupName)"
  },
  {
    "label": "AsmPrinter()",
    "kind": "Method",
    "detail": "Function (} } ; SmallVector<HandlerInfo,1> Handlers ; DwarfDebug* DD ; protected :)",
    "insertText": "AsmPrinter(TargetMachine &TM, std::unique_ptr<MCStreamer> Streamer)"
  },
  {
    "label": "AsmPrinter()",
    "kind": "Method",
    "detail": "Function (public : ~)",
    "insertText": "AsmPrinter()"
  },
  {
    "label": "getDwarfDebug()",
    "kind": "Method",
    "detail": "Function (DwarfDebug*)",
    "insertText": "getDwarfDebug()"
  },
  {
    "label": "getFunctionBegin()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "getFunctionBegin()"
  },
  {
    "label": "getObjFileLowering()",
    "kind": "Method",
    "detail": "Function (const TargetLoweringObjectFile&)",
    "insertText": "getObjFileLowering()"
  },
  {
    "label": "getDataLayout()",
    "kind": "Method",
    "detail": "Function (const DataLayout&)",
    "insertText": "getDataLayout()"
  },
  {
    "label": "getSubtargetInfo()",
    "kind": "Method",
    "detail": "Function (const MCSubtargetInfo&)",
    "insertText": "getSubtargetInfo()"
  },
  {
    "label": "EmitToStreamer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitToStreamer(MCStreamer &S, const MCInst &Inst)"
  },
  {
    "label": "getTargetTriple()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "getTargetTriple()"
  },
  {
    "label": "getCurrentSection()",
    "kind": "Method",
    "detail": "Function (const MCSection*)",
    "insertText": "getCurrentSection()"
  },
  {
    "label": "getNameWithPrefix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getNameWithPrefix(SmallVectorImpl<char> &Name, const GlobalValue *GV)"
  },
  {
    "label": "getSymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "getSymbol(const GlobalValue *GV)"
  },
  {
    "label": "getAnalysisUsage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getAnalysisUsage(AnalysisUsage &AU)"
  },
  {
    "label": "doInitialization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "doInitialization(Module &M)"
  },
  {
    "label": "doFinalization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "doFinalization(Module &M)"
  },
  {
    "label": "runOnMachineFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "runOnMachineFunction(MachineFunction &MF)"
  },
  {
    "label": "SetupMachineFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupMachineFunction(MF)"
  },
  {
    "label": "EmitFunctionBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitFunctionBody()"
  },
  {
    "label": "emitCFIInstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitCFIInstruction(const MachineInstr &MI)"
  },
  {
    "label": "emitFrameAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitFrameAlloc(const MachineInstr &MI)"
  },
  {
    "label": "needsCFIMoves()",
    "kind": "Method",
    "detail": "Function (enum CFIMoveType { CFI_M_None,CFI_M_EH,CFI_M_Debug } ; CFIMoveType)",
    "insertText": "needsCFIMoves()"
  },
  {
    "label": "needsSEHMoves()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "needsSEHMoves()"
  },
  {
    "label": "EmitConstantPool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitConstantPool()"
  },
  {
    "label": "EmitJumpTableInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitJumpTableInfo()"
  },
  {
    "label": "EmitGlobalVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitGlobalVariable(const GlobalVariable *GV)"
  },
  {
    "label": "EmitSpecialLLVMGlobal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EmitSpecialLLVMGlobal(const GlobalVariable *GV)"
  },
  {
    "label": "EmitAlignment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitAlignment(unsigned NumBits, const GlobalObject *GO = nullptr)"
  },
  {
    "label": "lowerConstant()",
    "kind": "Method",
    "detail": "Function (const MCExpr*)",
    "insertText": "lowerConstant(const Constant *CV)"
  },
  {
    "label": "EmitGlobalConstant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitGlobalConstant(const Constant *CV)"
  },
  {
    "label": "computeGlobalGOTEquivs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeGlobalGOTEquivs(Module &M)"
  },
  {
    "label": "emitGlobalGOTEquivs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitGlobalGOTEquivs()"
  },
  {
    "label": "EmitStartOfAsmFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitStartOfAsmFile(Module &)"
  },
  {
    "label": "EmitEndOfAsmFile()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EmitEndOfAsmFile(Module &)"
  },
  {
    "label": "EmitFunctionBodyStart()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EmitFunctionBodyStart()"
  },
  {
    "label": "EmitFunctionBodyEnd()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EmitFunctionBodyEnd()"
  },
  {
    "label": "EmitBasicBlockStart()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EmitBasicBlockStart(const MachineBasicBlock &MBB)"
  },
  {
    "label": "EmitBasicBlockEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitBasicBlockEnd(const MachineBasicBlock &MBB)"
  },
  {
    "label": "EmitInstruction()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EmitInstruction(const MachineInstr *)"
  },
  {
    "label": "llvm_unreachable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "llvm_unreachable(\"EmitInstruction not implemented\")"
  },
  {
    "label": "GetCPISymbol()",
    "kind": "Method",
    "detail": "Function (} MCSymbol*)",
    "insertText": "GetCPISymbol(unsigned CPID)"
  },
  {
    "label": "EmitFunctionEntryLabel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitFunctionEntryLabel()"
  },
  {
    "label": "EmitMachineConstantPoolValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitMachineConstantPoolValue(MachineConstantPoolValue *MCPV)"
  },
  {
    "label": "EmitXXStructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitXXStructor(const Constant *CV)"
  },
  {
    "label": "EmitGlobalConstant()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitGlobalConstant(CV)"
  },
  {
    "label": "isBlockOnlyReachableByFallthrough()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isBlockOnlyReachableByFallthrough(const MachineBasicBlock *MBB)"
  },
  {
    "label": "emitImplicitDef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitImplicitDef(const MachineInstr *MI)"
  },
  {
    "label": "createTempSymbol()",
    "kind": "Method",
    "detail": "Function (public : MCSymbol*)",
    "insertText": "createTempSymbol(const Twine &Name)"
  },
  {
    "label": "getSymbolWithGlobalValueBase()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "getSymbolWithGlobalValueBase(const GlobalValue *GV, StringRef Suffix)"
  },
  {
    "label": "GetExternalSymbolSymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "GetExternalSymbolSymbol(StringRef Sym)"
  },
  {
    "label": "GetJTISymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "GetJTISymbol(unsigned JTID, bool isLinkerPrivate = false)"
  },
  {
    "label": "GetJTSetSymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "GetJTSetSymbol(unsigned UID, unsigned MBBID)"
  },
  {
    "label": "GetBlockAddressSymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "GetBlockAddressSymbol(const BlockAddress *BA)"
  },
  {
    "label": "GetBlockAddressSymbol()",
    "kind": "Method",
    "detail": "Function (MCSymbol*)",
    "insertText": "GetBlockAddressSymbol(const BasicBlock *BB)"
  },
  {
    "label": "printOffset()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "printOffset(int64_t Offset, raw_ostream &OS)"
  },
  {
    "label": "EmitInt8()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitInt8(int Value)"
  },
  {
    "label": "EmitInt16()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitInt16(int Value)"
  },
  {
    "label": "EmitInt32()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitInt32(int Value)"
  },
  {
    "label": "EmitLabelDifference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLabelDifference(const MCSymbol *Hi, const MCSymbol *Lo, unsigned Size)"
  },
  {
    "label": "EmitLabelPlusOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLabelPlusOffset(const MCSymbol *Label, uint64_t Offset, unsigned Size, bool IsSectionRelative = false)"
  },
  {
    "label": "EmitLabelReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLabelReference(const MCSymbol *Label, unsigned Size, bool IsSectionRelative = false)"
  },
  {
    "label": "EmitLabelPlusOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLabelPlusOffset(Label, 0, Size, IsSectionRelative)"
  },
  {
    "label": "EmitSLEB128()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EmitSLEB128(int64_t Value, const char *Desc = nullptr)"
  },
  {
    "label": "EmitULEB128()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitULEB128(uint64_t Value, const char *Desc = nullptr, unsigned PadTo = 0)"
  },
  {
    "label": "EmitCFAByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitCFAByte(unsigned Val)"
  },
  {
    "label": "EmitEncodingByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitEncodingByte(unsigned Val, const char *Desc = nullptr)"
  },
  {
    "label": "GetSizeOfEncodedValue()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "GetSizeOfEncodedValue(unsigned Encoding)"
  },
  {
    "label": "EmitTTypeReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitTTypeReference(const GlobalValue *GV, unsigned Encoding)"
  },
  {
    "label": "emitDwarfSymbolReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitDwarfSymbolReference(const MCSymbol *Label, bool ForceOffset = false)"
  },
  {
    "label": "emitDwarfStringOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitDwarfStringOffset(DwarfStringPoolEntryRef S)"
  },
  {
    "label": "getISAEncoding()",
    "kind": "Method",
    "detail": "Function (unsigned)",
    "insertText": "getISAEncoding()"
  },
  {
    "label": "emitCFIInstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitCFIInstruction(const MCCFIInstruction &Inst)"
  },
  {
    "label": "emitDwarfAbbrevs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitDwarfAbbrevs(const std::vector<DIEAbbrev *>& Abbrevs)"
  },
  {
    "label": "emitDwarfDIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitDwarfDIE(const DIE &Die)"
  },
  {
    "label": "PrintSpecial()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "PrintSpecial(const MachineInstr *MI, raw_ostream &OS, const char *Code)"
  },
  {
    "label": "PrintAsmOperand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrintAsmOperand(const MachineInstr *MI, unsigned OpNo, unsigned AsmVariant, const char *ExtraCode, raw_ostream &OS)"
  },
  {
    "label": "PrintAsmMemoryOperand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrintAsmMemoryOperand(const MachineInstr *MI, unsigned OpNo, unsigned AsmVariant, const char *ExtraCode, raw_ostream &OS)"
  },
  {
    "label": "emitInlineAsmStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitInlineAsmStart()"
  },
  {
    "label": "emitInlineAsmEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitInlineAsmEnd(const MCSubtargetInfo &StartInfo, const MCSubtargetInfo *EndInfo)"
  },
  {
    "label": "EmitFunctionHeader()",
    "kind": "Method",
    "detail": "Function (private : const MachineInstr* LastMI ; unsigned LastFn ; unsigned Counter ; void)",
    "insertText": "EmitFunctionHeader()"
  },
  {
    "label": "EmitInlineAsm()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitInlineAsm(StringRef Str, const MCSubtargetInfo &STI, const MCTargetOptions &MCOptions, const MDNode *LocMDNode = nullptr, InlineAsm::AsmDialect AsmDialect = InlineAsm::AD_ATT)"
  },
  {
    "label": "EmitInlineAsm()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitInlineAsm(const MachineInstr *MI)"
  },
  {
    "label": "EmitVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitVisibility(MCSymbol *Sym, unsigned Visibility, bool IsDefinition = true)"
  },
  {
    "label": "EmitLinkage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLinkage(const GlobalValue *GV, MCSymbol *GVSym)"
  },
  {
    "label": "EmitJumpTableEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitJumpTableEntry(const MachineJumpTableInfo *MJTI, const MachineBasicBlock *MBB, unsigned uid)"
  },
  {
    "label": "EmitLLVMUsedList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitLLVMUsedList(const ConstantArray *InitList)"
  },
  {
    "label": "EmitModuleIdents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitModuleIdents(Module &M)"
  },
  {
    "label": "EmitXXStructorList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmitXXStructorList(const Constant *List, bool isCtor)"
  },
  {
    "label": "GetOrCreateGCPrinter()",
    "kind": "Method",
    "detail": "Function (GCMetadataPrinter*)",
    "insertText": "GetOrCreateGCPrinter(GCStrategy &C)"
  }
]