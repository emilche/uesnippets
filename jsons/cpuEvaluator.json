[
  {
    "label": "CpuEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CpuEvaluator"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_OSD_CPU_EVALUATOR_H # define OPENSUBDIV3_OSD_CPU_EVALUATOR_H # include \" . . / version . h \" # include \" . . / osd / bufferDescriptor . h \" # include \" . . / osd / types . h \" # include<cstddef> namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Osd { class CpuEvaluator { public : template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, STENCIL_TABLE const *stencilTable, const CpuEvaluator *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalStencils(const float *src, BufferDescriptor const &srcDesc, float *dst, BufferDescriptor const &dstDesc, const int * sizes, const int * offsets, const int * indices, const float * weights, int start, int end)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, STENCIL_TABLE const *stencilTable, const CpuEvaluator *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalStencils(const float *src, BufferDescriptor const &srcDesc, float *dst, BufferDescriptor const &dstDesc, float *du, BufferDescriptor const &duDesc, float *dv, BufferDescriptor const &dvDesc, const int * sizes, const int * offsets, const int * indices, const float * weights, const float * duWeights, const float * dvWeights, int start, int end)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, STENCIL_TABLE const *stencilTable, const CpuEvaluator *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalStencils(const float *src, BufferDescriptor const &srcDesc, float *dst, BufferDescriptor const &dstDesc, float *du, BufferDescriptor const &duDesc, float *dv, BufferDescriptor const &dvDesc, float *duu, BufferDescriptor const &duuDesc, float *duv, BufferDescriptor const &duvDesc, float *dvv, BufferDescriptor const &dvvDesc, const int * sizes, const int * offsets, const int * indices, const float * weights, const float * duWeights, const float * dvWeights, const float * duuWeights, const float * duvWeights, const float * dvvWeights, int start, int end)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalPatches(const float *src, BufferDescriptor const &srcDesc, float *dst, BufferDescriptor const &dstDesc, int numPatchCoords, const PatchCoord *patchCoords, const PatchArray *patchArrays, const int *patchIndexBuffer, const PatchParam *patchParamBuffer)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvalPatches(const float *src, BufferDescriptor const &srcDesc, float *dst, BufferDescriptor const &dstDesc, float *du, BufferDescriptor const &duDesc, float *dv, BufferDescriptor const &dvDesc, int numPatchCoords, PatchCoord const *patchCoords, PatchArray const *patchArrays, const int *patchIndexBuffer, PatchParam const *patchParamBuffer)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvalPatches(const float *src, BufferDescriptor const &srcDesc, float *dst, BufferDescriptor const &dstDesc, float *du, BufferDescriptor const &duDesc, float *dv, BufferDescriptor const &dvDesc, float *duu, BufferDescriptor const &duuDesc, float *duv, BufferDescriptor const &duvDesc, float *dvv, BufferDescriptor const &dvvDesc, int numPatchCoords, PatchCoord const *patchCoords, PatchArray const *patchArrays, const int *patchIndexBuffer, PatchParam const *patchParamBuffer)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, CpuEvaluator const *instance = NULL, void * deviceContext = NULL)"
  },
  {
    "label": "Synchronize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Synchronize(void *)"
  }
]