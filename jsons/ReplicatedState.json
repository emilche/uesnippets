[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRepAttachment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepAttachment"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FRigidBodyState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRigidBodyState"
  },
  {
    "label": "FRepMovement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRepMovement"
  },
  {
    "label": "UPackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageMap"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectMacros . h \" # include \" Engine / NetSerialization . h \" # include \" ReplicatedState . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (ByteComponents,ShortComponents } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "FRepAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRepAttachment() : AttachParent(nullptr) , LocationOffset(ForceInit) , RelativeScale3D(ForceInit) , RotationOffset(ForceInit) , AttachSocket(NAME_None) , AttachComponent(nullptr)"
  },
  {
    "label": "FRigidBodyState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRigidBodyState() : Position(ForceInit) , Quaternion(ForceInit) , LinVel(ForceInit) , AngVel(ForceInit) , Flags(0)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(Transient)"
  },
  {
    "label": "FRepMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRepMovement()"
  },
  {
    "label": "SerializeQuantizedVector()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeQuantizedVector(FArchive& Ar, FVector& Vector, EVectorQuantization QuantizationLevel)"
  },
  {
    "label": "NetSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetSerialize(FArchive& Ar, class UPackageMap* Map, bool& bOutSuccess)"
  },
  {
    "label": "FillFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillFrom(const FRigidBodyState& RBState, const AActor* const Actor = nullptr, int32 InServerFrame = 0)"
  },
  {
    "label": "RebaseOntoZeroOrigin()",
    "kind": "Method",
    "detail": "Function (Location =)",
    "insertText": "RebaseOntoZeroOrigin(RBState.Position, Actor)"
  },
  {
    "label": "Rotator()",
    "kind": "Method",
    "detail": "Function (Rotation = RBState . Quaternion .)",
    "insertText": "Rotator()"
  },
  {
    "label": "bSimulatedPhysicSleep()",
    "kind": "Method",
    "detail": "Function (LinearVelocity = RBState . LinVel ; AngularVelocity = RBState . AngVel ;)",
    "insertText": "bSimulatedPhysicSleep(RBState.Flags & ERigidBodyFlags::Sleeping)"
  },
  {
    "label": "CopyTo()",
    "kind": "Method",
    "detail": "Function (bRepPhysics = true ; ServerFrame = InServerFrame ; } void)",
    "insertText": "CopyTo(FRigidBodyState& RBState, const AActor* const Actor = nullptr)"
  },
  {
    "label": "RebaseOntoLocalOrigin()",
    "kind": "Method",
    "detail": "Function (RBState . Position =)",
    "insertText": "RebaseOntoLocalOrigin(Location, Actor)"
  },
  {
    "label": "Quaternion()",
    "kind": "Method",
    "detail": "Function (RBState . Quaternion = Rotation .)",
    "insertText": "Quaternion()"
  },
  {
    "label": "Flags()",
    "kind": "Method",
    "detail": "Function (RBState . LinVel = LinearVelocity ; RBState . AngVel = AngularVelocity ; RBState .)",
    "insertText": "Flags(decltype(FRigidBodyState::Flags))(bSimulatedPhysicSleep ? ERigidBodyFlags::Sleeping : ERigidBodyFlags::None) | ERigidBodyFlags::NeedsUpdate | (decltype(FRigidBodyState::Flags))(bRepPhysics ? ERigidBodyFlags::RepPhysics : ERigidBodyFlags::None)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FRepMovement& Other)"
  },
  {
    "label": "RebaseOntoLocalOrigin()",
    "kind": "Method",
    "detail": "Function (} int32 EnableMultiplayerWorldOriginRebasing ; FVector)",
    "insertText": "RebaseOntoLocalOrigin(const FVector& Location, const FIntVector& LocalOrigin)"
  },
  {
    "label": "RebaseOntoZeroOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "RebaseOntoZeroOrigin(const FVector& Location, const FIntVector& LocalOrigin)"
  },
  {
    "label": "RebaseOntoLocalOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "RebaseOntoLocalOrigin(const FVector& Location, const AActor* const WorldContextActor)"
  },
  {
    "label": "RebaseOntoZeroOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "RebaseOntoZeroOrigin(const FVector& Location, const AActor* const WorldContextActor)"
  },
  {
    "label": "RebaseOntoLocalOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "RebaseOntoLocalOrigin(const FVector& Location, const class UActorComponent* const WorldContextActorComponent)"
  },
  {
    "label": "RebaseOntoZeroOrigin()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "RebaseOntoZeroOrigin(const FVector& Location, const class UActorComponent* const WorldContextActorComponent)"
  }
]