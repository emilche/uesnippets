[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "EnqueueOrderGenerator()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_SEQUENCE_MANAGER_ENQUEUE_ORDER_GENERATOR_H_ # define BASE_TASK_SEQUENCE_MANAGER_ENQUEUE_ORDER_GENERATOR_H_ # include<stdint . h> # include<atomic> # include \" base / base_export . h \" # include \" base / task / sequence_manager / enqueue_order . h \" namespace base { namespace sequence_manager { namespace internal { class BASE_EXPORT EnqueueOrderGenerator { public :)",
    "insertText": "EnqueueOrderGenerator()"
  },
  {
    "label": "EnqueueOrderGenerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnqueueOrderGenerator(const EnqueueOrderGenerator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EnqueueOrderGenerator&)",
    "insertText": "operator(const EnqueueOrderGenerator&)"
  },
  {
    "label": "GenerateNext()",
    "kind": "Method",
    "detail": "Function (EnqueueOrder)",
    "insertText": "GenerateNext()"
  }
]