[
  {
    "label": "MkvWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MkvWriter"
  },
  {
    "label": "MkvWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef MKVMUXER_MKVWRITER_H_ # define MKVMUXER_MKVWRITER_H_ # include<stdio . h> # include \" mkvmuxer / mkvmuxer . h \" # include \" mkvmuxer / mkvmuxertypes . h \" namespace mkvmuxer { class MkvWriter : public IMkvWriter { public :)",
    "insertText": "MkvWriter()"
  },
  {
    "label": "MkvWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MkvWriter(FILE* fp)"
  },
  {
    "label": "Position()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Position()"
  },
  {
    "label": "Position()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Position(int64 position)"
  },
  {
    "label": "Seekable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Seekable()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Write(const void* buffer, uint32 length)"
  },
  {
    "label": "ElementStartNotify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ElementStartNotify(uint64 element_id, int64 position)"
  },
  {
    "label": "Open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Open(const char* filename)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "LIBWEBM_DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (private : FILE* file_ ; bool writer_owns_file_ ;)",
    "insertText": "LIBWEBM_DISALLOW_COPY_AND_ASSIGN(MkvWriter)"
  }
]