[
  {
    "label": "IToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkit"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FToolkitManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolkitManager"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Templates / SharedPointer . h \" class IToolkit ; class IToolkitHost ; class UObject ; class FToolkitManager { public : FToolkitManager&)",
    "insertText": "Get()"
  },
  {
    "label": "RegisterNewToolkit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterNewToolkit(const TSharedRef< IToolkit > NewToolkit)"
  },
  {
    "label": "CloseToolkit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseToolkit(const TSharedRef< IToolkit > ClosingToolkit)"
  },
  {
    "label": "OnToolkitHostDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToolkitHostDestroyed(IToolkitHost* HostBeingDestroyed)"
  },
  {
    "label": "FindEditorForAsset()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IToolkit>)",
    "insertText": "FindEditorForAsset(const UObject* Asset)"
  },
  {
    "label": "FToolkitManager()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FToolkitManager()"
  }
]