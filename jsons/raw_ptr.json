[
  {
    "label": "Scheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Scheduler"
  },
  {
    "label": "DelayTimerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DelayTimerBase"
  },
  {
    "label": "Calculator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Calculator"
  },
  {
    "label": "RawPtrMayDangle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrMayDangle"
  },
  {
    "label": "RawPtrBanDanglingIfSupported",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrBanDanglingIfSupported"
  },
  {
    "label": "RawPtrNoOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrNoOp"
  },
  {
    "label": "RawPtrTypeToImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrTypeToImpl"
  },
  {
    "label": "RawPtrNoOpImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrNoOpImpl"
  },
  {
    "label": "MTECheckedPtrImplPartitionAllocSupport",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MTECheckedPtrImplPartitionAllocSupport"
  },
  {
    "label": "MTECheckedPtrImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MTECheckedPtrImpl"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BackupRefPtrImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BackupRefPtrImpl"
  },
  {
    "label": "AsanBackupRefPtrImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AsanBackupRefPtrImpl"
  },
  {
    "label": "Super",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Super"
  },
  {
    "label": "RawPtrCountingImplWrapperForTest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrCountingImplWrapperForTest"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "IsRawPtrCountingImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsRawPtrCountingImpl"
  },
  {
    "label": "IsRawPtrCountingImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsRawPtrCountingImpl"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "IsSupportedType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsSupportedType"
  },
  {
    "label": "RawPtrTypeToImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrTypeToImpl"
  },
  {
    "label": "RawPtrTypeToImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrTypeToImpl"
  },
  {
    "label": "RawPtrTypeToImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrTypeToImpl"
  },
  {
    "label": "RawPtrTypeToImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrTypeToImpl"
  },
  {
    "label": "RawPtrTypeToImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RawPtrTypeToImpl"
  },
  {
    "label": "PA_TRIVIAL_ABI",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PA_TRIVIAL_ABI"
  },
  {
    "label": "SomeStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SomeStruct"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "raw_ptr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ptr"
  },
  {
    "label": "IsRawPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsRawPtr"
  },
  {
    "label": "IsRawPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsRawPtr"
  },
  {
    "label": "IsPointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsPointer"
  },
  {
    "label": "IsPointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsPointer"
  },
  {
    "label": "IsPointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IsPointer"
  },
  {
    "label": "RemovePointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemovePointer"
  },
  {
    "label": "RemovePointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemovePointer"
  },
  {
    "label": "RemovePointer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RemovePointer"
  },
  {
    "label": "less",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "less"
  },
  {
    "label": "iterator_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "iterator_traits"
  },
  {
    "label": "SafelyUnwrapPtrForDereference()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SafelyUnwrapPtrForDereference(wrapped_ptr)"
  },
  {
    "label": "ExtractPtr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ExtractPtr(wrapped_ptr)"
  },
  {
    "label": "CheckThatAddressIsntWithinFirstPartitionPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckThatAddressIsntWithinFirstPartitionPage(\n    uintptr_t address)"
  },
  {
    "label": "AcquireInternal()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "AcquireInternal(address)"
  },
  {
    "label": "BanSuperPageFromBRPPool()",
    "kind": "Method",
    "detail": "Function (partition_alloc::internal::AddressPoolManagerBitmap::)",
    "insertText": "BanSuperPageFromBRPPool(address)"
  },
  {
    "label": "ReleaseInternal()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "ReleaseInternal(address)"
  },
  {
    "label": "WrapRawPtr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "WrapRawPtr(wrapped_ptr)"
  },
  {
    "label": "AcquireInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AcquireInternal(uintptr_t address)"
  },
  {
    "label": "ReleaseInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseInternal(uintptr_t address)"
  },
  {
    "label": "IsPointeeAlive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPointeeAlive(uintptr_t address)"
  },
  {
    "label": "ReportIfDanglingInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportIfDanglingInternal(\n      uintptr_t address)"
  },
  {
    "label": "IsValidSignedDelta()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValidSignedDelta(address, ptrdiff_t{delta_in_bytes})"
  },
  {
    "label": "IsValidUnsignedDelta()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValidUnsignedDelta(address, size_t{delta_in_bytes})"
  },
  {
    "label": "IsValidSignedDelta()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidSignedDelta(\n      uintptr_t address,\n      ptrdiff_t delta_in_bytes)"
  },
  {
    "label": "IsValidUnsignedDelta()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidUnsignedDelta(\n      uintptr_t address,\n      size_t delta_in_bytes)"
  },
  {
    "label": "AsanCheckIfValidInstantiation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsanCheckIfValidInstantiation(\n      void const volatile* ptr)"
  },
  {
    "label": "AsanCheckIfValidDereference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsanCheckIfValidDereference(\n      void const volatile* ptr)"
  },
  {
    "label": "AsanCheckIfValidExtraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsanCheckIfValidExtraction(\n      void const volatile* ptr)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(raw_ptr_traits::IsSupportedType<T>::value,\n                \"raw_ptr<T> doesn't work with this kind of pointee type T\")"
  },
  {
    "label": "GetForExtraction()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetForExtraction()"
  },
  {
    "label": "GetForDereference()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetForDereference()"
  },
  {
    "label": "GetForExtraction()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetForExtraction()"
  },
  {
    "label": "GetForExtractionAndReset()",
    "kind": "Method",
    "detail": "Function (delete)",
    "insertText": "GetForExtractionAndReset()"
  },
  {
    "label": "res()",
    "kind": "Method",
    "detail": "Function (DanglingRawPtr)",
    "insertText": "res(ptr)"
  }
]