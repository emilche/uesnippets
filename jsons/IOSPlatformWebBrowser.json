[
  {
    "label": "SIOSWebBrowserWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SIOSWebBrowserWidget"
  },
  {
    "label": "SWebBrowserView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWebBrowserView"
  },
  {
    "label": "FWebBrowserWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebBrowserWindow"
  },
  {
    "label": "friend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "friend"
  },
  {
    "label": "FWebBrowserSingleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebBrowserSingleton"
  },
  {
    "label": "SWebBrowserView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWebBrowserView"
  },
  {
    "label": "CreateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateWidget()"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (called)",
    "insertText": "DECLARE_DERIVED_EVENT(FWebBrowserWindow, IWebBrowserWindow::FOnDocumentStateChanged, FOnDocumentStateChanged)"
  },
  {
    "label": "NotifyDocumentLoadingStateChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDocumentLoadingStateChange(const FString& InCurrentUrl, bool IsLoading)"
  },
  {
    "label": "NotifyDocumentError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyDocumentError(const FString& InCurrentUrl, int InErrorCode)"
  },
  {
    "label": "OnJsMessageReceived()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnJsMessageReceived(const FString& Command, const TArray<FString>& Params, const FString& Origin)"
  },
  {
    "label": "NotifyUrlChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUrlChanged(const FString& InCurrentUrl)"
  },
  {
    "label": "SetTickLastFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTickLastFrame()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  }
]