[
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "VideoCodecTestStatsImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoCodecTestStatsImpl"
  },
  {
    "label": "VideoCodecTestStatsImpl()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "VideoCodecTestStatsImpl()"
  },
  {
    "label": "AddFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFrame(const FrameStatistics& frame_stat)"
  },
  {
    "label": "SliceAndCalcAggregatedVideoStatistic()",
    "kind": "Method",
    "detail": "Function (VideoStatistics)",
    "insertText": "SliceAndCalcAggregatedVideoStatistic(size_t first_frame_num,\n                                                       size_t last_frame_num)"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Size(size_t spatial_idx)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "AggregateFrameStatistic()",
    "kind": "Method",
    "detail": "Function (VideoCodecTestStats::FrameStatistics)",
    "insertText": "AggregateFrameStatistic(\n      size_t frame_num,\n      size_t spatial_idx,\n      bool aggregate_independent_layers)"
  },
  {
    "label": "CalcLayerTargetBitrateKbps()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "CalcLayerTargetBitrateKbps(size_t first_frame_num,\n                                    size_t last_frame_num,\n                                    size_t spatial_idx,\n                                    size_t temporal_idx,\n                                    bool aggregate_independent_layers)"
  },
  {
    "label": "SliceAndCalcVideoStatistic()",
    "kind": "Method",
    "detail": "Function (VideoCodecTestStats::VideoStatistics)",
    "insertText": "SliceAndCalcVideoStatistic(\n      size_t first_frame_num,\n      size_t last_frame_num,\n      size_t spatial_idx,\n      size_t temporal_idx,\n      bool aggregate_independent_layers)"
  },
  {
    "label": "GetNumberOfEncodedLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNumberOfEncodedLayers(size_t first_frame_num,\n                                size_t last_frame_num,\n                                size_t* num_encoded_spatial_layers,\n                                size_t* num_encoded_temporal_layers)"
  }
]