[
  {
    "label": "VideoCodecTestStatsImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoCodecTestStatsImpl"
  },
  {
    "label": "VideoCodecTestStatsImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_TEST_VIDEOCODEC_TEST_STATS_IMPL_H_ # define MODULES_VIDEO_CODING_CODECS_TEST_VIDEOCODEC_TEST_STATS_IMPL_H_ # include<stddef . h> # include<map> # include<string> # include<vector> # include \" api / test / videocodec_test_stats . h \" namespace webrtc { namespace test { class VideoCodecTestStatsImpl : public VideoCodecTestStats { public :)",
    "insertText": "VideoCodecTestStatsImpl()"
  },
  {
    "label": "AddFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFrame(const FrameStatistics& frame_stat)"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (FrameStatistics*)",
    "insertText": "GetFrame(size_t frame_number, size_t spatial_idx)"
  },
  {
    "label": "GetFrameWithTimestamp()",
    "kind": "Method",
    "detail": "Function (FrameStatistics*)",
    "insertText": "GetFrameWithTimestamp(size_t timestamp, size_t spatial_idx)"
  },
  {
    "label": "GetFrameStatistics()",
    "kind": "Method",
    "detail": "Function (std::vector<FrameStatistics>)",
    "insertText": "GetFrameStatistics()"
  },
  {
    "label": "SliceAndCalcLayerVideoStatistic()",
    "kind": "Method",
    "detail": "Function (std::vector<VideoStatistics>)",
    "insertText": "SliceAndCalcLayerVideoStatistic(size_t first_frame_num, size_t last_frame_num)"
  },
  {
    "label": "SliceAndCalcAggregatedVideoStatistic()",
    "kind": "Method",
    "detail": "Function (VideoStatistics)",
    "insertText": "SliceAndCalcAggregatedVideoStatistic(size_t first_frame_num, size_t last_frame_num)"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Size(size_t spatial_idx)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "AggregateFrameStatistic()",
    "kind": "Method",
    "detail": "Function (private : VideoCodecTestStats::FrameStatistics)",
    "insertText": "AggregateFrameStatistic(size_t frame_num, size_t spatial_idx, bool aggregate_independent_layers)"
  },
  {
    "label": "CalcLayerTargetBitrateKbps()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "CalcLayerTargetBitrateKbps(size_t first_frame_num, size_t last_frame_num, size_t spatial_idx, size_t temporal_idx, bool aggregate_independent_layers)"
  },
  {
    "label": "SliceAndCalcVideoStatistic()",
    "kind": "Method",
    "detail": "Function (VideoCodecTestStats::VideoStatistics)",
    "insertText": "SliceAndCalcVideoStatistic(size_t first_frame_num, size_t last_frame_num, size_t spatial_idx, size_t temporal_idx, bool aggregate_independent_layers)"
  },
  {
    "label": "GetNumberOfEncodedLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNumberOfEncodedLayers(size_t first_frame_num, size_t last_frame_num, size_t* num_encoded_spatial_layers, size_t* num_encoded_temporal_layers)"
  }
]