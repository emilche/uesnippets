[
  {
    "label": "string_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "string_node"
  },
  {
    "label": "string_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "string_node"
  },
  {
    "label": "string_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "string_list"
  },
  {
    "label": "token",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "token"
  },
  {
    "label": "token_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "token_list"
  },
  {
    "label": "YYLTYPE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "YYLTYPE"
  },
  {
    "label": "token",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "token"
  },
  {
    "label": "token_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "token_node"
  },
  {
    "label": "token_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "token_node"
  },
  {
    "label": "token_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "token_list"
  },
  {
    "label": "argument_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "argument_node"
  },
  {
    "label": "argument_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "argument_node"
  },
  {
    "label": "argument_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "argument_list"
  },
  {
    "label": "glcpp_parser",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glcpp_parser"
  },
  {
    "label": "expansion_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "expansion_node"
  },
  {
    "label": "expansion_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "expansion_node"
  },
  {
    "label": "skip_type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "skip_type"
  },
  {
    "label": "skip_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "skip_node"
  },
  {
    "label": "skip_node",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "skip_node"
  },
  {
    "label": "active_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "active_list"
  },
  {
    "label": "active_list",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "active_list"
  },
  {
    "label": "glcpp_parser",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "glcpp_parser"
  },
  {
    "label": "hash_table",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash_table"
  },
  {
    "label": "gl_extensions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "gl_extensions"
  },
  {
    "label": "glcpp_parser_classify_token()",
    "kind": "Method",
    "detail": "Function (token_class_t)",
    "insertText": "glcpp_parser_classify_token(glcpp_parser_t *parser,\n\t\t\t     const char *identifier,\n\t\t\t     int *parameter_index)"
  },
  {
    "label": "glcpp_parser_parse()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glcpp_parser_parse(glcpp_parser_t *parser)"
  },
  {
    "label": "glcpp_parser_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glcpp_parser_destroy(glcpp_parser_t *parser)"
  },
  {
    "label": "preprocess()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "preprocess(void *ralloc_ctx, const char **shader, char **info_log)"
  },
  {
    "label": "glcpp_error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glcpp_error(YYLTYPE *locp, glcpp_parser_t *parser, const char *fmt, ...)"
  },
  {
    "label": "glcpp_warning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glcpp_warning(YYLTYPE *locp, glcpp_parser_t *parser, const char *fmt, ...)"
  },
  {
    "label": "glcpp_lex_init_extra()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glcpp_lex_init_extra(glcpp_parser_t *parser, yyscan_t* scanner)"
  },
  {
    "label": "glcpp_lex_set_source_string()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glcpp_lex_set_source_string(glcpp_parser_t *parser, const char *shader)"
  },
  {
    "label": "glcpp_lex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glcpp_lex(YYSTYPE *lvalp, YYLTYPE *llocp, yyscan_t scanner)"
  },
  {
    "label": "glcpp_lex_destroy()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "glcpp_lex_destroy(yyscan_t scanner)"
  },
  {
    "label": "yyparse()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "yyparse(glcpp_parser_t *parser)"
  }
]