[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "padded_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "padded_base"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "padded_base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "padded_base"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "padded",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "padded"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "no_assign",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "no_assign"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "no_copy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "no_copy"
  },
  {
    "label": "mutex_copy_deprecated_and_disabled",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mutex_copy_deprecated_and_disabled"
  },
  {
    "label": "mutex_copy_deprecated_and_disabled",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "mutex_copy_deprecated_and_disabled"
  },
  {
    "label": "version_tag_v3",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "version_tag_v3"
  },
  {
    "label": "split",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "split"
  },
  {
    "label": "proportional_split",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "proportional_split"
  },
  {
    "label": "allocator_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "allocator_type"
  },
  {
    "label": "allocator_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "allocator_type"
  },
  {
    "label": "bool_constant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bool_constant"
  },
  {
    "label": "select_size_t_constant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "select_size_t_constant"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "STATIC_ASSERTION_FAILED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "STATIC_ASSERTION_FAILED"
  },
  {
    "label": "STATIC_ASSERTION_FAILED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "STATIC_ASSERTION_FAILED"
  },
  {
    "label": "STATIC_ASSERTION_FAILED",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "STATIC_ASSERTION_FAILED"
  },
  {
    "label": "set_assertion_handler()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "set_assertion_handler( assertion_handler_type new_handler )"
  },
  {
    "label": "assertion_failure()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "assertion_failure( const char* filename, int line, const char* expression, const char* comment )"
  },
  {
    "label": "TBB_runtime_interface_version()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "TBB_runtime_interface_version()"
  },
  {
    "label": "handle_perror()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "handle_perror( int error_code, const char* aux_info )"
  },
  {
    "label": "runtime_warning()",
    "kind": "Method",
    "detail": "Function (__TBB_EXPORTED_FUNC)",
    "insertText": "runtime_warning( const char* format, ... )"
  },
  {
    "label": "no_copy()",
    "kind": "Method",
    "detail": "Function (construction)",
    "insertText": "no_copy( const no_copy& )"
  },
  {
    "label": "split()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "split()"
  }
]