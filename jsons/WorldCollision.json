[
  {
    "label": "FOverlapDatum",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapDatum"
  },
  {
    "label": "FTraceDatum",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceDatum"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "FTraceHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTraceHandle"
  },
  {
    "label": "FCollisionParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionParameters"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "FCollisionObjectQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionObjectQueryParams"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "FBaseTraceDatum",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBaseTraceDatum"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TTraceThreadData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTraceThreadData"
  },
  {
    "label": "AsyncTraceData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AsyncTraceData"
  },
  {
    "label": "FTraceHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / TaskGraphFwd . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # include \" CollisionQueryParams . h \" # include \" CollisionShape . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" Engine / OverlapResult . h \" # include \" Engine / HitResult . h \" # endif struct FOverlapDatum ; struct FTraceDatum ; struct FHitResult ; struct FOverlapResult ; typedef TArray<FGraphEventRef,TInlineAllocator<4>> FGraphEventArray ; struct FTraceHandle { union { uint64 _Handle ; struct { uint32 FrameNumber ; uint32 Index ; } _Data ; } ;)",
    "insertText": "FTraceHandle() : _Handle(0)"
  },
  {
    "label": "FTraceHandle()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "FTraceHandle(uint32 InFrameNumber, uint32 InIndex)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (_Data . FrameNumber = InFrameNumber ; _Data . Index = InIndex ; } uint32)",
    "insertText": "GetTypeHash(const FTraceHandle& Handle)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FTraceHandle const& Other)"
  },
  {
    "label": "FCollisionParameters()",
    "kind": "Method",
    "detail": "Function (_Handle = 0 ; } } ; struct FCollisionParameters { struct FCollisionQueryParams CollisionQueryParam ; struct FCollisionResponseParams ResponseParam ; struct FCollisionObjectQueryParams ObjectQueryParam ; struct FCollisionShape CollisionShape ;)",
    "insertText": "FCollisionParameters() : CollisionQueryParam(NAME_None, TStatId())"
  },
  {
    "label": "FBaseTraceDatum()",
    "kind": "Method",
    "detail": "Function (} } ; struct FBaseTraceDatum { TWeakObjectPtr<UWorld> PhysWorld ; FCollisionParameters CollisionParams ; ECollisionChannel TraceChannel ; uint32 FrameNumber ; uint32 UserData ;)",
    "insertText": "FBaseTraceDatum()"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "Set(UWorld * World, const FCollisionShape& InCollisionShape, const FCollisionQueryParams& Param, const struct FCollisionResponseParams &InResponseParam, const struct FCollisionObjectQueryParams& InObjectQueryParam, ECollisionChannel Channel, uint32 InUserData, int32 FrameCounter)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (} ; struct FTraceDatum ; struct FOverlapDatum ;)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FTraceDelegate, const FTraceHandle&, FTraceDatum &)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOverlapDelegate, const FTraceHandle&, FOverlapDatum &)"
  },
  {
    "label": "FTraceDatum()",
    "kind": "Method",
    "detail": "Function (enum class EAsyncTraceType : uint8 { Test,Single,Multi } ; struct FTraceDatum : public FBaseTraceDatum { FVector Start ; FVector End ; FQuat Rot ; FTraceDelegate Delegate ; TArray<struct FHitResult> OutHits ; EAsyncTraceType TraceType ;)",
    "insertText": "FTraceDatum()"
  },
  {
    "label": "FTraceDatum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTraceDatum(UWorld* World, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Param, const struct FCollisionResponseParams& InResponseParam, const struct FCollisionObjectQueryParams& InObjectQueryParam, ECollisionChannel Channel, uint32 InUserData, EAsyncTraceType InTraceType, const FVector& InStart, const FVector& InEnd, const FQuat& InRot, const FTraceDelegate* InDelegate, int32 FrameCounter)"
  },
  {
    "label": "FOverlapDatum()",
    "kind": "Method",
    "detail": "Function (} ; struct FOverlapDatum : FBaseTraceDatum { FVector Pos ; FQuat Rot ; FOverlapDelegate Delegate ; TArray<struct FOverlapResult> OutOverlaps ;)",
    "insertText": "FOverlapDatum()"
  },
  {
    "label": "FOverlapDatum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOverlapDatum(UWorld * World, const FCollisionShape& CollisionShape, const FCollisionQueryParams& Param, const struct FCollisionResponseParams &InResponseParam, const struct FCollisionObjectQueryParams& InObjectQueryParam, ECollisionChannel Channel, uint32 InUserData, const FVector& InPos, const FQuat& InRot, const FOverlapDelegate* InDelegate, int32 FrameCounter)"
  },
  {
    "label": "AsyncTraceData()",
    "kind": "Method",
    "detail": "Function (} ; # define ASYNC_TRACE_BUFFER_SIZE 6 4 template<T> struct TTraceThreadData { T Buffer [ ASYNC_TRACE_BUFFER_SIZE ] ; } ; struct AsyncTraceData : FNoncopyable { TArray<TUniquePtr<TTraceThreadData<FTraceDatum>>> TraceData ; TArray<TUniquePtr<TTraceThreadData<FOverlapDatum>>> OverlapData ; int32 NumQueuedTraceData ; int32 NumQueuedOverlapData ; bool bAsyncAllowed ; bool bAsyncTasksCompleted ; FGraphEventArray AsyncTraceCompletionEvent ;)",
    "insertText": "AsyncTraceData()"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (} ; ECollisionChannel DefaultCollisionChannel ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogCollision, Warning, All)"
  }
]