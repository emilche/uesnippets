[
  {
    "label": "FRecentProjectsMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRecentProjectsMenu"
  },
  {
    "label": "MakeMenu()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Paths . h \" # include \" ToolMenus . h \" # include \" Frame / MainFrameActions . h \" # include \" HAL / FileManager . h \" # include \" Settings / EditorSettings . h \" # define LOCTEXT_NAMESPACE \" FRecentProjectsMenu \" class FRecentProjectsMenu { public : void)",
    "insertText": "MakeMenu(UToolMenu* Menu)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const FString& ProjectName = FMainFrameActionCallbacks::RecentProjects [ ProjectIndex ] . ProjectName ;)",
    "insertText": "if(( IFileManager::Get().FileSize(*ProjectName) <= 0 ) || ( FPaths::GetProjectFilePath() == ProjectName ))"
  },
  {
    "label": "FindOrAddSection()",
    "kind": "Method",
    "detail": "Function (continue ; } FToolMenuSection& Section = Menu ->)",
    "insertText": "FindOrAddSection(\"Recent\")"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (const FText DisplayName =)",
    "insertText": "FromString(FPaths::GetBaseFilename(*ProjectName))"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (const FText Tooltip =)",
    "insertText": "FromString(IFileManager::Get().ConvertToAbsolutePathForExternalAppForRead(*ProjectName))"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (Section .)",
    "insertText": "AddMenuEntry(FMainFrameCommands::Get().SwitchProjectCommands[ ProjectIndex ], DisplayName, Tooltip)"
  }
]