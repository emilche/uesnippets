[
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "IDetailCategoryBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailCategoryBuilder"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" AnimGraphNode_SkeletalControlBase . h \" # include \" BoneControllers / AnimNode_BoneDrivenController . h \" # include \" AnimGraphNode_BoneDrivenController . generated . h \" class FCompilerResultsLog ; class FPrimitiveDrawInterface ; class IDetailCategoryBuilder ; class IDetailLayoutBuilder ; class IPropertyHandle ; class USkeletalMeshComponent ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category = Settings)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "ValidateAnimNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAnimNodeDuringCompilation(USkeleton* ForSkeleton, FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "Draw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw(FPrimitiveDrawInterface* PDI, USkeletalMeshComponent* SkelMeshComp)"
  },
  {
    "label": "GetControllerDescription()",
    "kind": "Method",
    "detail": "Function (protected : FText)",
    "insertText": "GetControllerDescription()"
  },
  {
    "label": "GetNode()",
    "kind": "Method",
    "detail": "Function (const FAnimNode_SkeletalControlBase*)",
    "insertText": "GetNode()"
  },
  {
    "label": "AreRemappingValuesVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "AreRemappingValuesVisible(IDetailLayoutBuilder* DetailLayoutBuilder)"
  },
  {
    "label": "AreTargetBonePropertiesVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "AreTargetBonePropertiesVisible(IDetailLayoutBuilder* DetailLayoutBuilder)"
  },
  {
    "label": "AreTargetCurvePropertiesVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "AreTargetCurvePropertiesVisible(IDetailLayoutBuilder* DetailLayoutBuilder)"
  },
  {
    "label": "AddTripletPropertyRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTripletPropertyRow(const FText& Name, const FText& Tooltip, IDetailCategoryBuilder& Category, TSharedRef<IPropertyHandle> PropertyHandle, const FName XPropertyName, const FName YPropertyName, const FName ZPropertyName, TAttribute<EVisibility> VisibilityAttribute)"
  },
  {
    "label": "AddRangePropertyRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRangePropertyRow(const FText& Name, const FText& Tooltip, IDetailCategoryBuilder& Category, TSharedRef<IPropertyHandle> PropertyHandle, const FName MinPropertyName, const FName MaxPropertyName, TAttribute<EVisibility> VisibilityAttribute)"
  },
  {
    "label": "ComponentTypeToText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "ComponentTypeToText(EComponentType::Type Component)"
  }
]