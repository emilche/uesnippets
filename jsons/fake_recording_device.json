[
  {
    "label": "FakeRecordingDeviceWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeRecordingDeviceWorker"
  },
  {
    "label": "FakeRecordingDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeRecordingDevice"
  },
  {
    "label": "FakeRecordingDevice()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_TEST_FAKE_RECORDING_DEVICE_H_ # define MODULES_AUDIO_PROCESSING_TEST_FAKE_RECORDING_DEVICE_H_ # include<algorithm> # include<memory> # include<vector> # include \" api / array_view . h \" # include \" common_audio / channel_buffer . h \" # include \" rtc_base / checks . h \" namespace webrtc { namespace test { class FakeRecordingDeviceWorker ; class FakeRecordingDevice final { public :)",
    "insertText": "FakeRecordingDevice(int initial_mic_level, int device_kind)"
  },
  {
    "label": "FakeRecordingDevice()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FakeRecordingDevice()"
  },
  {
    "label": "MicLevel()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "MicLevel()"
  },
  {
    "label": "SetMicLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMicLevel(int level)"
  },
  {
    "label": "SetUndoMicLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUndoMicLevel(int level)"
  },
  {
    "label": "SimulateAnalogGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimulateAnalogGain(rtc::ArrayView<int16_t> buffer)"
  },
  {
    "label": "SimulateAnalogGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimulateAnalogGain(ChannelBuffer<float>* buffer)"
  }
]