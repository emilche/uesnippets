[
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "FCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvas"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "FScopedTransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedTransaction"
  },
  {
    "label": "IMessageLogListing",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageLogListing"
  },
  {
    "label": "SFindInMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFindInMaterial"
  },
  {
    "label": "SGraphEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphEditor"
  },
  {
    "label": "SMaterialPalette",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialPalette"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "UMaterialEditorOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialEditorOptions"
  },
  {
    "label": "UMaterialExpressionComment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionComment"
  },
  {
    "label": "UMaterialExpressionComposite",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionComposite"
  },
  {
    "label": "UMaterialInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstance"
  },
  {
    "label": "UMaterialGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphNode"
  },
  {
    "label": "FGraphAppearanceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphAppearanceInfo"
  },
  {
    "label": "UMaterialFunctionInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialFunctionInstance"
  },
  {
    "label": "FMaterialCachedHLSLTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCachedHLSLTree"
  },
  {
    "label": "FMaterialCachedExpressionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialCachedExpressionData"
  },
  {
    "label": "SMaterialEditorSubstrateWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorSubstrateWidget"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMatExpressionPreview",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMatExpressionPreview"
  },
  {
    "label": "EBlendMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBlendMode"
  },
  {
    "label": "FMaterialExpression",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialExpression"
  },
  {
    "label": "FCategorizedMaterialExpressionNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCategorizedMaterialExpressionNode"
  },
  {
    "label": "FMaterialInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialInfo"
  },
  {
    "label": "FMaterialEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialEditor"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "TSharedRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TSharedRef"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialExpression",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpression"
  },
  {
    "label": "FTabInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabInfo"
  },
  {
    "label": "SMaterialEditor3DPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditor3DPreviewViewport"
  },
  {
    "label": "SMaterialEditorUIPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorUIPreviewViewport"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SMaterialParametersOverviewPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialParametersOverviewPanel"
  },
  {
    "label": "SMaterialCustomPrimitiveDataPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialCustomPrimitiveDataPanel"
  },
  {
    "label": "SMaterialLayersFunctionsInstanceWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialLayersFunctionsInstanceWrapper"
  },
  {
    "label": "SMaterialLayersFunctionsMaterialWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialLayersFunctionsMaterialWrapper"
  },
  {
    "label": "UMaterialEditorPreviewParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialEditorPreviewParameters"
  },
  {
    "label": "FMaterialStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialStats"
  },
  {
    "label": "IPropertyRowGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyRowGenerator"
  },
  {
    "label": "FMatExpressionPreview()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / IndirectArray . h \" # include \" Stats / Stats . h \" # include \" Misc / Guid . h \" # include \" UObject / GCObject . h \" # include \" Misc / NotifyHook . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Framework / Commands / InputChord . h \" # include \" EditorUndoClient . h \" # include \" MaterialDomain . h \" # include \" Materials / MaterialRenderProxy . h \" # include \" MaterialShared . h \" # include \" Toolkits / IToolkitHost . h \" # include \" WorkflowOrientedApp / WorkflowTabFactory . h \" # include \" WorkflowOrientedApp / WorkflowTabManager . h \" # include \" IMaterialEditor . h \" # include \" IDetailsView . h \" # include \" SMaterialEditorViewport . h \" # include \" Materials / Material . h \" # include \" Tickable . h \" # include \" UObject / WeakFieldPtr . h \" struct FAssetData ; struct FToolMenuSection ; class FCanvas ; class FMaterialCompiler ; class FScopedTransaction ; class IMessageLogListing ; class SFindInMaterial ; class SGraphEditor ; class SMaterialPalette ; class UEdGraph ; class UEdGraphPin ; class UFactory ; class UMaterialEditorOptions ; class UMaterialExpressionComment ; class UMaterialExpressionComposite ; class UMaterialInstance ; class UMaterialGraphNode ; struct FGraphAppearanceInfo ; class UMaterialFunctionInstance ; class FMaterialCachedHLSLTree ; struct FMaterialCachedExpressionData ; class SMaterialEditorSubstrateWidget ; typedef TSet<class UObject*> FGraphPanelSelectionSet ; class FMatExpressionPreview : public FMaterial,public FMaterialRenderProxy { public :)",
    "insertText": "FMatExpressionPreview()"
  },
  {
    "label": "FMatExpressionPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMatExpressionPreview(UMaterialExpression* InExpression)"
  },
  {
    "label": "PrepareDestroy_GameThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareDestroy_GameThread()"
  },
  {
    "label": "PrepareDestroy_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareDestroy_RenderThread()"
  },
  {
    "label": "ReleaseResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResource()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "ShouldCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldCache(EShaderPlatform Platform, const FShaderType* ShaderType, const FVertexFactoryType* VertexFactoryType)"
  },
  {
    "label": "GetReferencedTextures()",
    "kind": "Method",
    "detail": "Function (TArrayView<const TObjectPtr<UObject>>)",
    "insertText": "GetReferencedTextures()"
  },
  {
    "label": "GetReferencedTextureCollections()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<TObjectPtr<UTextureCollection>>)",
    "insertText": "GetReferencedTextureCollections()"
  },
  {
    "label": "GetMaterialNoFallback()",
    "kind": "Method",
    "detail": "Function (const FMaterial*)",
    "insertText": "GetMaterialNoFallback(ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetParameterValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetParameterValue(EMaterialParameterType Type, const FHashedMaterialParameterInfo& ParameterInfo, FMaterialParameterValue& OutValue, const FMaterialRenderContext& Context)"
  },
  {
    "label": "CompilePropertyAndSetMaterialProperty()",
    "kind": "Method",
    "detail": "Function (} return false ; } int32)",
    "insertText": "CompilePropertyAndSetMaterialProperty(EMaterialProperty Property, FMaterialCompiler* Compiler, EShaderFrequency OverrideShaderFrequency, bool bUsePreviousFrameTime)"
  },
  {
    "label": "GetMaterialGraphNodePreviewExpression()",
    "kind": "Method",
    "detail": "Function (UMaterialExpression*)",
    "insertText": "GetMaterialGraphNodePreviewExpression()"
  },
  {
    "label": "GetMaterialDomain()",
    "kind": "Method",
    "detail": "Function (} EMaterialDomain)",
    "insertText": "GetMaterialDomain()"
  },
  {
    "label": "IsPreview()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPreview()"
  },
  {
    "label": "IsPersistent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsPersistent()"
  },
  {
    "label": "GetMaterialInterface()",
    "kind": "Method",
    "detail": "Function (} UMaterialInterface*)",
    "insertText": "GetMaterialInterface()"
  },
  {
    "label": "NotifyCompilationFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCompilationFinished()"
  },
  {
    "label": "GetCachedHLSLTree()",
    "kind": "Method",
    "detail": "Function (const FMaterialCachedHLSLTree*)",
    "insertText": "GetCachedHLSLTree()"
  },
  {
    "label": "IsUsingControlFlow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingControlFlow()"
  },
  {
    "label": "IsUsingNewHLSLGenerator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingNewHLSLGenerator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FMatExpressionPreview& V)"
  },
  {
    "label": "GetAllExpressionsForCustomInterpolators()",
    "kind": "Method",
    "detail": "Function (Expression -> Material ->)",
    "insertText": "GetAllExpressionsForCustomInterpolators(OutExpressions)"
  },
  {
    "label": "CheckInValidStateForCompilation()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "CheckInValidStateForCompilation(class FMaterialCompiler* Compiler)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (float UnrelatedNodesOpacity ; private : TUniquePtr<FMaterialCachedExpressionData> CachedExpressionData ; TUniquePtr<FMaterialCachedHLSLTree> CachedHLSLTree ; TWeakObjectPtr<UMaterialExpression> Expression ; TArray<TObjectPtr<UObject>> ReferencedTextures ; TArray<TObjectPtr<UTextureCollection>> ReferencedTextureCollections ; FGuid Id ; } ; struct FMaterialExpression { FString Name ; UClass* MaterialClass ; FText CreationDescription ; FText CreationName ; bool)",
    "insertText": "operator(const FMaterialExpression& A,const FMaterialExpression& B)"
  },
  {
    "label": "RegisterToolbarTab()",
    "kind": "Method",
    "detail": "Function (} } ; class FMaterialEditor : public IMaterialEditor,public FGCObject,public FTickableGameObject,public FEditorUndoClient,public FNotifyHook { public : void)",
    "insertText": "RegisterToolbarTab(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitEditorForMaterial()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "InitEditorForMaterial(UMaterial* InMaterial)"
  },
  {
    "label": "InitEditorForMaterialFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitEditorForMaterialFunction(UMaterialFunction* InMaterialFunction)"
  },
  {
    "label": "InitMaterialEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMaterialEditor(const EToolkitMode::Type Mode, const TSharedPtr< class IToolkitHost >& InitToolkitHost, UObject* ObjectToEdit)"
  },
  {
    "label": "FMaterialEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMaterialEditor()"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "InitToolMenuContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitToolMenuContext(struct FToolMenuContext& MenuContext)"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (} FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "DrawMaterialInfoStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawMaterialInfoStrings(FCanvas* Canvas, const UMaterial* Material, const FMaterialResource* MaterialResource, const TArray<FString>& CompileErrors, int32 &DrawPositionY, bool bDrawInstructions, bool bGeneratedNewShaders = false)"
  },
  {
    "label": "DrawMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawMessages(FViewport* Viewport, FCanvas* Canvas)"
  },
  {
    "label": "RecenterEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecenterEditor()"
  },
  {
    "label": "SetPreviewAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviewAsset(UObject* InAsset)"
  },
  {
    "label": "SetPreviewAssetByName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviewAssetByName(const TCHAR* InAssetName)"
  },
  {
    "label": "SetPreviewMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewMaterial(UMaterialInterface* InMaterialInterface)"
  },
  {
    "label": "RefreshPreviewViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshPreviewViewport()"
  },
  {
    "label": "RegenerateCodeView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegenerateCodeView(bool bForce=false)"
  },
  {
    "label": "UpdatePreviewMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreviewMaterial(bool bForce=false)"
  },
  {
    "label": "UpdateOriginalMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateOriginalMaterial()"
  },
  {
    "label": "UpdateMaterialInfoList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialInfoList()"
  },
  {
    "label": "UpdateMaterialinfoList_Old()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialinfoList_Old()"
  },
  {
    "label": "UpdateGraphNodeStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGraphNodeStates()"
  },
  {
    "label": "UpdateGraphNodeState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateGraphNodeState(UEdGraph* Graph, const FMaterialResource* ErrorMaterialResource, TArray<UMaterialExpression*>& VisibleExpressions, bool bShowAllNodes)"
  },
  {
    "label": "GetDetailView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class IDetailsView>)",
    "insertText": "GetDetailView()"
  },
  {
    "label": "UpdateDetailView()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateDetailView()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetTickableTickType()",
    "kind": "Method",
    "detail": "Function (ETickableTickType)",
    "insertText": "GetTickableTickType()"
  },
  {
    "label": "UpdateThumbnailInfoPreviewMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateThumbnailInfoPreviewMesh(UMaterialInterface* MatInterface)"
  },
  {
    "label": "SetPreviewExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewExpression(UMaterialExpression* NewPreviewExpression)"
  },
  {
    "label": "JumpToNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToNode(const UEdGraphNode* Node)"
  },
  {
    "label": "OnGraphEditorFocused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGraphEditorFocused(const TSharedRef<class SGraphEditor>& InGraphEditor)"
  },
  {
    "label": "OnGraphEditorBackgrounded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGraphEditorBackgrounded(const TSharedRef<SGraphEditor>& InGraphEditor)"
  },
  {
    "label": "FindOpenTabsContainingDocument()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FindOpenTabsContainingDocument(const UObject* DocumentID, TArray< TSharedPtr<SDockTab> >& Results)"
  },
  {
    "label": "OpenDocument()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "OpenDocument(const UObject* DocumentID, FDocumentTracker::EOpenDocumentCause Cause)"
  },
  {
    "label": "CloseDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseDocumentTab(const UObject* DocumentID)"
  },
  {
    "label": "CreateNewMaterialExpression()",
    "kind": "Method",
    "detail": "Function (UMaterialExpression*)",
    "insertText": "CreateNewMaterialExpression(UClass* NewExpressionClass, const FVector2D& NodePos, bool bAutoSelect, bool bAutoAssignResource, const class UEdGraph* Graph = nullptr)"
  },
  {
    "label": "CreateNewMaterialExpressionComposite()",
    "kind": "Method",
    "detail": "Function (UMaterialExpressionComposite*)",
    "insertText": "CreateNewMaterialExpressionComposite(const FVector2D& NodePos, const class UEdGraph* Graph = nullptr)"
  },
  {
    "label": "CreateNewMaterialExpressionComment()",
    "kind": "Method",
    "detail": "Function (UMaterialExpressionComment*)",
    "insertText": "CreateNewMaterialExpressionComment(const FVector2D& NodePos, const class UEdGraph* Graph = nullptr)"
  },
  {
    "label": "ForceRefreshExpressionPreviews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRefreshExpressionPreviews()"
  },
  {
    "label": "AddToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToSelection(UMaterialExpression* Expression)"
  },
  {
    "label": "JumpToExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToExpression(UMaterialExpression* Expression)"
  },
  {
    "label": "DeleteSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedNodes()"
  },
  {
    "label": "GetOriginalObjectName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetOriginalObjectName()"
  },
  {
    "label": "UpdateMaterialAfterGraphChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaterialAfterGraphChange()"
  },
  {
    "label": "MarkMaterialDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkMaterialDirty()"
  },
  {
    "label": "JumpToHyperlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToHyperlink(const UObject* ObjectReference)"
  },
  {
    "label": "CanPasteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPasteNodes()"
  },
  {
    "label": "PasteNodesHere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodesHere(const FVector2D& Location, const class UEdGraph* Graph = nullptr)"
  },
  {
    "label": "GetNumberOfSelectedNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfSelectedNodes()"
  },
  {
    "label": "GetSelectedNodes()",
    "kind": "Method",
    "detail": "Function (TSet<UObject*>)",
    "insertText": "GetSelectedNodes()"
  },
  {
    "label": "GetBoundsForNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBoundsForNode(const UEdGraphNode* InNode, class FSlateRect& OutRect, float InPadding)"
  },
  {
    "label": "GetExpressionPreview()",
    "kind": "Method",
    "detail": "Function (FMatExpressionPreview*)",
    "insertText": "GetExpressionPreview(UMaterialExpression* InExpression)"
  },
  {
    "label": "DeleteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteNodes(const TArray<class UEdGraphNode*>& NodesToDelete)"
  },
  {
    "label": "GenerateInheritanceMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateInheritanceMenu(class UToolMenu* Menu)"
  },
  {
    "label": "RefreshStatsMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshStatsMaterials()"
  },
  {
    "label": "DeleteSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedNodes(bool bShowConfirmation)"
  },
  {
    "label": "DeleteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteNodes(const TArray<class UEdGraphNode*>& NodesToDelete, bool bShowConfirmation)"
  },
  {
    "label": "CopyNodesToBuffer()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CopyNodesToBuffer(const FGraphPanelSelectionSet& Nodes)"
  },
  {
    "label": "CopyNodesToBuffer()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "CopyNodesToBuffer(const TSet<UEdGraphNode*>& Nodes)"
  },
  {
    "label": "PasteNodesHereFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodesHereFromBuffer(const FVector2D& Location, const class UEdGraph* Graph, const FString& TextToImport, TMap<FGuid, FGuid>* OutOldToNewGuids)"
  },
  {
    "label": "UpdateStatsMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStatsMaterials()"
  },
  {
    "label": "GetMenuExtensibilityManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtensibilityManager>)",
    "insertText": "GetMenuExtensibilityManager()"
  },
  {
    "label": "FocusDetailsPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusDetailsPanel()"
  },
  {
    "label": "RebuildInheritanceList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildInheritanceList()"
  },
  {
    "label": "AddInheritanceMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInheritanceMenuEntry(FToolMenuSection& Section, const FAssetData& AssetData, bool bIsFunctionPreviewMaterial)"
  },
  {
    "label": "AddGraphEditorPinActionsToContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGraphEditorPinActionsToContextMenu(FToolMenuSection& InSection)"
  },
  {
    "label": "MatchesContext()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MatchesContext(const FTransactionContext& InContext, const TArray<TPair<UObject*, FTransactionObjectEvent>>& TransactionObjectContexts)"
  },
  {
    "label": "NotifyAllUserSceneTextureLoadOrUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAllUserSceneTextureLoadOrUnload(UMaterialInterface* MaterialInterface)"
  },
  {
    "label": "GetSaveableObjects()",
    "kind": "Method",
    "detail": "Function (public : bool bMaterialDirty ; bool bStatsFromPreviewMaterial ; bool bDestructing = false ; TObjectPtr<UMaterial> Material ; TArray<TObjectPtr<UMaterialInstance>> DerivedMaterialInstances ; TArray<TObjectPtr<UMaterialInstance>> OriginalDerivedMaterialInstances ; TObjectPtr<UMaterial> OriginalMaterial ; TObjectPtr<UMaterial> ExpressionPreviewMaterial ; TObjectPtr<UMaterial> EmptyMaterial ; TObjectPtr<UMaterialExpression> PreviewExpression ; TObjectPtr<UMaterialFunction> MaterialFunction ; UObject* OriginalMaterialObject ; TObjectPtr<UMaterialEditorOptions> EditorOptions ; TSharedPtr<FDocumentTracker> DocumentManager ; TWeakPtr<FDocumentTabFactory> GraphEditorTabFactoryPtr ; protected : void)",
    "insertText": "GetSaveableObjects(TArray<UObject*>& OutObjects)"
  },
  {
    "label": "SaveAsset_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAsset_Execute()"
  },
  {
    "label": "SaveAssetAs_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAssetAs_Execute()"
  },
  {
    "label": "OnRequestClose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnRequestClose(EAssetEditorCloseReason InCloseReason)"
  },
  {
    "label": "OnSelectedNodesChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnSelectedNodesChanged(const TSet<class UObject*>& NewSelection)"
  },
  {
    "label": "OnNodeDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeDoubleClicked(class UEdGraphNode* Node)"
  },
  {
    "label": "OnNodeTitleCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeTitleCommitted(const FText& NewText, ETextCommit::Type CommitInfo, UEdGraphNode* NodeBeingChanged)"
  },
  {
    "label": "OnVerifyNodeTextCommit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVerifyNodeTextCommit(const FText& NewText, UEdGraphNode* NodeBeingChanged, FText& OutErrorMessage)"
  },
  {
    "label": "OnSpawnGraphNodeByShortcut()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnSpawnGraphNodeByShortcut(FInputChord InChord, const FVector2D& InPosition, UEdGraph* InGraph)"
  },
  {
    "label": "ModifyMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyMaterial()"
  },
  {
    "label": "SelectAllNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllNodes()"
  },
  {
    "label": "CanSelectAllNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSelectAllNodes()"
  },
  {
    "label": "CanDeleteNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteNodes()"
  },
  {
    "label": "DeleteSelectedDuplicatableNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSelectedDuplicatableNodes()"
  },
  {
    "label": "DeleteNodesInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteNodesInternal(const TArray<class UEdGraphNode*>& NodesToDelete, bool& bHaveExpressionsToDelete, bool& bPreviewExpressionDeleted)"
  },
  {
    "label": "CopySelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySelectedNodes()"
  },
  {
    "label": "CanCopyNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCopyNodes()"
  },
  {
    "label": "PasteNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteNodes()"
  },
  {
    "label": "PostPasteMaterialExpression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteMaterialExpression(UMaterialExpression* NewExpression)"
  },
  {
    "label": "CutSelectedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CutSelectedNodes()"
  },
  {
    "label": "CanCutNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCutNodes()"
  },
  {
    "label": "DuplicateNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DuplicateNodes()"
  },
  {
    "label": "CanDuplicateNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateNodes()"
  },
  {
    "label": "UndoGraphAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UndoGraphAction()"
  },
  {
    "label": "RedoGraphAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RedoGraphAction()"
  },
  {
    "label": "OnRenameNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameNode()"
  },
  {
    "label": "CanRenameNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameNodes()"
  },
  {
    "label": "OnCollapseNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCollapseNodes()"
  },
  {
    "label": "CanCollapseNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCollapseNodes()"
  },
  {
    "label": "OnExpandNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpandNodes()"
  },
  {
    "label": "CanExpandNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExpandNodes()"
  },
  {
    "label": "OnAlignTop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignTop()"
  },
  {
    "label": "OnAlignMiddle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignMiddle()"
  },
  {
    "label": "OnAlignBottom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignBottom()"
  },
  {
    "label": "OnAlignLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignLeft()"
  },
  {
    "label": "OnAlignCenter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignCenter()"
  },
  {
    "label": "OnAlignRight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlignRight()"
  },
  {
    "label": "OnStraightenConnections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStraightenConnections()"
  },
  {
    "label": "OnDistributeNodesH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistributeNodesH()"
  },
  {
    "label": "OnDistributeNodesV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDistributeNodesV()"
  },
  {
    "label": "OnMessageLogLinkActivated()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnMessageLogLinkActivated(const class TSharedRef<IMessageToken>& Token)"
  },
  {
    "label": "ExtendToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolbar()"
  },
  {
    "label": "RegisterToolBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterToolBar()"
  },
  {
    "label": "FillToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillToolbar(FToolBarBuilder& ToolbarBuilder)"
  },
  {
    "label": "GeneratePreviewMenuContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratePreviewMenuContent(class UToolMenu* Menu)"
  },
  {
    "label": "ApproveSetPreviewAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApproveSetPreviewAsset(UObject* InAsset)"
  },
  {
    "label": "CreateInternalWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInternalWidgets()"
  },
  {
    "label": "GetAllMaterialExpressionGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllMaterialExpressionGroups(TArray<FString>* OutGroups)"
  },
  {
    "label": "UpdatePreviewViewportsVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePreviewViewportsVisibility()"
  },
  {
    "label": "NotifyUserSceneTextureLoadOrUnload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyUserSceneTextureLoadOrUnload()"
  },
  {
    "label": "CollapseNodesIntoGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollapseNodesIntoGraph(UEdGraphNode* InGatewayNode, UMaterialGraphNode* InEntryNode, UMaterialGraphNode* InResultNode, UEdGraph* InSourceGraph, UEdGraph* InDestinationGraph, TSet<UEdGraphNode*>& InCollapsableNodes)"
  },
  {
    "label": "CollapseNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollapseNodes(TSet<class UEdGraphNode*>& InCollapsableNodes)"
  },
  {
    "label": "ExpandNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandNode(UEdGraphNode* InNodeToExpand, UEdGraph* InSourceGraph, TSet<UEdGraphNode*>& OutExpandedNodes)"
  },
  {
    "label": "MoveNodesToAveragePos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveNodesToAveragePos(TSet<UEdGraphNode*>& AverageNodes, FVector2D SourcePos, bool bExpandedNodesNeedUniqueGuid = false)"
  },
  {
    "label": "MoveNodesToGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveNodesToGraph(TArray<UEdGraphNode*>& SourceNodes, UEdGraph* DestinationGraph, TSet<UEdGraphNode*>& OutExpandedNodes, UEdGraphNode** OutEntry, UEdGraphNode** OutResult, const bool bIsCollapsedGraph = false)"
  },
  {
    "label": "CollapseGatewayNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CollapseGatewayNode(UEdGraphNode* InNode, UEdGraphNode* InEntryNode, UEdGraphNode* InResultNode, TSet<UEdGraphNode*>* OutExpandedNodes = nullptr)"
  },
  {
    "label": "SetQualityPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQualityPreview(EMaterialQualityLevel::Type NewQuality)"
  },
  {
    "label": "IsQualityPreviewChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsQualityPreviewChecked(EMaterialQualityLevel::Type TestQuality)"
  },
  {
    "label": "SetFeaturePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFeaturePreview(ERHIFeatureLevel::Type NewFeatureLevel)"
  },
  {
    "label": "IsFeaturePreviewChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFeaturePreviewChecked(ERHIFeatureLevel::Type TestFeatureLevel)"
  },
  {
    "label": "IsFeaturePreviewAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFeaturePreviewAvailable(ERHIFeatureLevel::Type TestFeatureLevel)"
  },
  {
    "label": "UpdateSubstrateTopologyPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubstrateTopologyPreview()"
  },
  {
    "label": "CreateDerivedMaterialInstancesPreviews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDerivedMaterialInstancesPreviews()"
  },
  {
    "label": "LoadEditorSettings()",
    "kind": "Method",
    "detail": "Function (public : private : void)",
    "insertText": "LoadEditorSettings()"
  },
  {
    "label": "SaveEditorSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveEditorSettings()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnApply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApply()"
  },
  {
    "label": "OnApplyEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnApplyEnabled()"
  },
  {
    "label": "OnCameraHome()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCameraHome()"
  },
  {
    "label": "OnHideConnectors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHideConnectors()"
  },
  {
    "label": "IsOnHideConnectorsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOnHideConnectorsChecked()"
  },
  {
    "label": "ToggleLivePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleLivePreview()"
  },
  {
    "label": "IsToggleLivePreviewChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToggleLivePreviewChecked()"
  },
  {
    "label": "ToggleRealTimeExpressions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleRealTimeExpressions()"
  },
  {
    "label": "IsToggleRealTimeExpressionsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToggleRealTimeExpressionsChecked()"
  },
  {
    "label": "OnAlwaysRefreshAllPreviews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlwaysRefreshAllPreviews()"
  },
  {
    "label": "IsOnAlwaysRefreshAllPreviews()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOnAlwaysRefreshAllPreviews()"
  },
  {
    "label": "ToggleHideUnrelatedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleHideUnrelatedNodes()"
  },
  {
    "label": "IsToggleHideUnrelatedNodesChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToggleHideUnrelatedNodesChecked()"
  },
  {
    "label": "CollectDownstreamNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectDownstreamNodes(UMaterialGraphNode* CurrentNode, TArray<UMaterialGraphNode*>& CollectedNodes)"
  },
  {
    "label": "CollectUpstreamNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectUpstreamNodes(UMaterialGraphNode* CurrentNode, TArray<UMaterialGraphNode*>& CollectedNodes)"
  },
  {
    "label": "HideUnrelatedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideUnrelatedNodes()"
  },
  {
    "label": "MakeHideUnrelatedNodesOptionsMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeHideUnrelatedNodesOptionsMenu(class UToolMenu* Menu)"
  },
  {
    "label": "OnLockNodeStateCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLockNodeStateCheckStateChanged(ECheckBoxState NewCheckedState)"
  },
  {
    "label": "OnFocusWholeChainCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusWholeChainCheckStateChanged(ECheckBoxState NewCheckedState)"
  },
  {
    "label": "OnUseCurrentTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUseCurrentTexture()"
  },
  {
    "label": "OnConvertObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertObjects()"
  },
  {
    "label": "OnConvertTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertTextures()"
  },
  {
    "label": "OnCollapseToFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCollapseToFunction()"
  },
  {
    "label": "CanCollapseToFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCollapseToFunction()"
  },
  {
    "label": "OnExpandMaterialFunctionNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpandMaterialFunctionNode()"
  },
  {
    "label": "CanExpandMaterialFunctionNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExpandMaterialFunctionNode()"
  },
  {
    "label": "OnPromoteObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPromoteObjects()"
  },
  {
    "label": "OnSelectNamedRerouteDeclaration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectNamedRerouteDeclaration()"
  },
  {
    "label": "OnSelectNamedRerouteUsages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectNamedRerouteUsages()"
  },
  {
    "label": "OnConvertRerouteToNamedReroute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertRerouteToNamedReroute()"
  },
  {
    "label": "OnConvertNamedRerouteToReroute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConvertNamedRerouteToReroute()"
  },
  {
    "label": "OnPreviewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewNode()"
  },
  {
    "label": "OnToggleRealtimePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleRealtimePreview()"
  },
  {
    "label": "OnSelectDownstreamNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectDownstreamNodes()"
  },
  {
    "label": "OnSelectUpstreamNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectUpstreamNodes()"
  },
  {
    "label": "OnForceRefreshPreviews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnForceRefreshPreviews()"
  },
  {
    "label": "OnCreateComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateComment()"
  },
  {
    "label": "OnCreateComponentMaskNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreateComponentMaskNode()"
  },
  {
    "label": "OnFindInMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFindInMaterial()"
  },
  {
    "label": "OnPromoteToParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPromoteToParameter(const FToolMenuContext& InMenuContext)"
  },
  {
    "label": "OnCanPromoteToParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanPromoteToParameter(const FToolMenuContext& InMenuContext)"
  },
  {
    "label": "GetOnPromoteToParameterClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetOnPromoteToParameterClass(const UEdGraphPin* TargetPin)"
  },
  {
    "label": "OnCanResetToDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanResetToDefault(const FToolMenuContext& InMenuContext)"
  },
  {
    "label": "OnResetToDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetToDefault(const FToolMenuContext& InMenuContext)"
  },
  {
    "label": "OnCreateSubstrateNodeForPin()",
    "kind": "Method",
    "detail": "Function (enum class ESubstrateNodeForPin : uint8 { Slab,HorizontalMix,VerticalLayer,Weight } ; void)",
    "insertText": "OnCreateSubstrateNodeForPin(const FToolMenuContext& InMenuContext, ESubstrateNodeForPin NodeForPin)"
  },
  {
    "label": "OnCanCreateSubstrateNodeForPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnCanCreateSubstrateNodeForPin(const FToolMenuContext& InMenuContext, ESubstrateNodeForPin NodeForPin)"
  },
  {
    "label": "OnGoToDocumentation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGoToDocumentation()"
  },
  {
    "label": "CanGoToDocumentation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanGoToDocumentation()"
  },
  {
    "label": "GetDocLinkForSelectedNode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocLinkForSelectedNode()"
  },
  {
    "label": "GetDocLinkBaseUrlForSelectedNode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocLinkBaseUrlForSelectedNode()"
  },
  {
    "label": "RenameAssetFromRegistry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameAssetFromRegistry(const FAssetData& InAddedAssetData, const FString& InNewName)"
  },
  {
    "label": "OnMaterialUsageFlagsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialUsageFlagsChanged(class UMaterial* MaterialThatChanged, int32 FlagThatChanged)"
  },
  {
    "label": "OnAssetPostImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetPostImport(UFactory* InFactory, UObject* InObject)"
  },
  {
    "label": "OnNumericParameterDefaultChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNumericParameterDefaultChanged(class UMaterialExpression*, EMaterialParameterType Type, FName ParameterName, const UE::Shader::FValue& Value)"
  },
  {
    "label": "OnParameterDefaultChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnParameterDefaultChanged()"
  },
  {
    "label": "SetNumericParameterDefaultOnDependentMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumericParameterDefaultOnDependentMaterials(EMaterialParameterType Type, FName ParameterName, const UE::Shader::FValue& Value, bool bOverride)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bSuccess)"
  },
  {
    "label": "NotifyPreChange()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyPreChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FProperty* PropertyThatChanged)"
  },
  {
    "label": "SetMaterialDirty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialDirty()"
  },
  {
    "label": "ToggleCollapsed()",
    "kind": "Method",
    "detail": "Function (bMaterialDirty = true ; } void)",
    "insertText": "ToggleCollapsed(UMaterialExpression* MaterialExpression)"
  },
  {
    "label": "RefreshExpressionPreviews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshExpressionPreviews(bool bForceRefreshAll = false)"
  },
  {
    "label": "RefreshExpressionPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshExpressionPreview(UMaterialExpression* MaterialExpression, bool bRecompile)"
  },
  {
    "label": "GetExpressionPreview()",
    "kind": "Method",
    "detail": "Function (FMatExpressionPreview*)",
    "insertText": "GetExpressionPreview(UMaterialExpression* MaterialExpression, bool& bNewlyCreated)"
  },
  {
    "label": "OnColorPickerCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerCommitted(FLinearColor LinearColor, TWeakObjectPtr<UObject> ColorPickerObject)"
  },
  {
    "label": "CreateGraphEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SGraphEditor>)",
    "insertText": "CreateGraphEditorWidget(TSharedRef<class FTabInfo> InTabInfo, class UEdGraph* InGraph)"
  },
  {
    "label": "GetGraphAppearance()",
    "kind": "Method",
    "detail": "Function (FGraphAppearanceInfo)",
    "insertText": "GetGraphAppearance()"
  },
  {
    "label": "CleanUnusedExpressions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUnusedExpressions()"
  },
  {
    "label": "DeepCopyExpressions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeepCopyExpressions(UMaterialGraph* CopyGraph, UMaterialExpression* NewSubgraphExpression)"
  },
  {
    "label": "CheckExpressionRemovalWarnings()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckExpressionRemovalWarnings(const TArray<UEdGraphNode*>& NodesToRemove)"
  },
  {
    "label": "RemoveSelectedExpressionFromFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSelectedExpressionFromFavorites()"
  },
  {
    "label": "AddSelectedExpressionToFavorites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSelectedExpressionToFavorites()"
  },
  {
    "label": "SpawnTab_Preview()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Preview(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_MaterialProperties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_MaterialProperties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Palette()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Palette(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Find()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Find(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_PreviewSettings()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_PreviewSettings(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_ParameterDefaults()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_ParameterDefaults(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_CustomPrimitiveData()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_CustomPrimitiveData(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_LayerProperties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_LayerProperties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "SpawnTab_Substrate()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "SpawnTab_Substrate(const FSpawnTabArgs& Args)"
  },
  {
    "label": "OnFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinishedChangingProperties(const FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnFinishedChangingParametersFromOverview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinishedChangingParametersFromOverview(const FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnChangeBreadCrumbGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangeBreadCrumbGraph(class UEdGraph* InGraph)"
  },
  {
    "label": "GeneratorRowsRefreshed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GeneratorRowsRefreshed()"
  },
  {
    "label": "UpdateGenerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGenerator()"
  },
  {
    "label": "NavigateTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NavigateTab(FDocumentTracker::EOpenDocumentCause InCause)"
  }
]