[
  {
    "label": "ApmDataDumper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApmDataDumper"
  },
  {
    "label": "RenderBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RenderBuffer"
  },
  {
    "label": "FilterAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FilterAnalyzer"
  },
  {
    "label": "FilterAnalysisState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FilterAnalysisState"
  },
  {
    "label": "FilterRegion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FilterRegion"
  },
  {
    "label": "checks",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "checks"
  },
  {
    "label": "ConsistentFilterDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConsistentFilterDetector"
  },
  {
    "label": "FilterAnalysisState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FilterAnalysisState"
  },
  {
    "label": "FilterAnalyzer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FilterAnalyzer(const EchoCanceller3Config& config,\n                 size_t num_capture_channels)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(rtc::ArrayView<const std::vector<float>> filters_time_domain,\n              const RenderBuffer& render_buffer,\n              bool* any_filter_consistent,\n              float* max_echo_path_gain)"
  },
  {
    "label": "SetRegionToAnalyze()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRegionToAnalyze(size_t filter_size)"
  },
  {
    "label": "AnalyzeRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalyzeRegion(\n      rtc::ArrayView<const std::vector<float>> filters_time_domain,\n      const RenderBuffer& render_buffer)"
  },
  {
    "label": "UpdateFilterGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFilterGain(rtc::ArrayView<const float> filters_time_domain,\n                        FilterAnalysisState* st)"
  },
  {
    "label": "PreProcessFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreProcessFilters(\n      rtc::ArrayView<const std::vector<float>> filters_time_domain)"
  },
  {
    "label": "ResetRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRegion()"
  },
  {
    "label": "ConsistentFilterDetector()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ConsistentFilterDetector(const EchoCanceller3Config& config)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Detect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Detect(rtc::ArrayView<const float> filter_to_analyze,\n                const FilterRegion& region,\n                const Block& x_block,\n                size_t peak_index,\n                int delay_blocks)"
  }
]