[
  {
    "label": "FMovieSceneTransformBreadcrumbs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneTransformBreadcrumbs"
  },
  {
    "label": "TOptional",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOptional"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTransformTimeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransformTimeParams"
  },
  {
    "label": "FInverseTransformTimeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInverseTransformTimeParams"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / EnumClassFlags . h \" struct FMovieSceneTransformBreadcrumbs ; template<> struct TOptional ; namespace UE::MovieScene { enum class EInverseEvaluateFlags : uint8 { Forwards = 1<<0,Backwards = 1<<1,Equal = 1<<2,Cycle = 1<<3,IgnoreClamps = 1<<4,AnyDirection = Forwards | Equal | Backwards,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EInverseEvaluateFlags)"
  },
  {
    "label": "FTransformTimeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTransformTimeParams() : Breadcrumbs(nullptr) , CycleCount(nullptr) , bIgnoreClamps(false)"
  },
  {
    "label": "HarvestBreadcrumbs()",
    "kind": "Method",
    "detail": "Function (} FTransformTimeParams&)",
    "insertText": "HarvestBreadcrumbs(FMovieSceneTransformBreadcrumbs& OutBreadcrumbs)"
  },
  {
    "label": "AppendBreadcrumbs()",
    "kind": "Method",
    "detail": "Function (FTransformTimeParams&)",
    "insertText": "AppendBreadcrumbs(FMovieSceneTransformBreadcrumbs& OutBreadcrumbs)"
  },
  {
    "label": "TrackCycleCounts()",
    "kind": "Method",
    "detail": "Function (FTransformTimeParams&)",
    "insertText": "TrackCycleCounts(TOptional<int32>* OutCycleCounter)"
  },
  {
    "label": "IgnoreClamps()",
    "kind": "Method",
    "detail": "Function (FTransformTimeParams&)",
    "insertText": "IgnoreClamps()"
  },
  {
    "label": "FInverseTransformTimeParams()",
    "kind": "Method",
    "detail": "Function (public : FMovieSceneTransformBreadcrumbs* Breadcrumbs ; TOptional<int32>* CycleCount ; uint8 bIgnoreClamps : 1 ; } ; struct FInverseTransformTimeParams {)",
    "insertText": "FInverseTransformTimeParams() : Flags(EInverseEvaluateFlags::AnyDirection | EInverseEvaluateFlags::Cycle)"
  },
  {
    "label": "FInverseTransformTimeParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FInverseTransformTimeParams(EInverseEvaluateFlags InFlags) : Flags(InFlags)"
  }
]