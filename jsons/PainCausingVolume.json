[
  {
    "label": "APainCausingVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APainCausingVolume"
  },
  {
    "label": "AController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AController"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" Engine / EngineTypes . h \" # include \" GameFramework / PhysicsVolume . h \" # include \" GameFramework / DamageType . h \" # include \" PainCausingVolume . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, BlueprintReadWrite, Category=PainCausingVolume)"
  },
  {
    "label": "PainTimer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PainTimer()"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "PostInitializeComponents()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostInitializeComponents()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ActorEnteredVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorEnteredVolume(class AActor* Other)"
  },
  {
    "label": "CausePainTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CausePainTo(class AActor* Other)"
  }
]