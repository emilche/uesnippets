[
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UNavigationPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationPath"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" NavigationData . h \" # include \" NavigationPath . generated . h \" class APlayerController ; class UCanvas ; class UNavigationPath ;)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnNavigationPathUpdated, UNavigationPath*, AffectedPath, TEnumAsByte<ENavPathEvent::Type>, PathEvent)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(BlueprintAssignable)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (private : uint32 bIsValid : 1 ; uint32 bDebugDrawingEnabled : 1 ; FColor DebugDrawingColor ; FDelegateHandle DrawDebugDelegateHandle ; protected : FNavPathSharedPtr SharedPath ; FNavigationPath::FPathObserverDelegate::FDelegate PathObserver ; FDelegateHandle PathObserverDelegateHandle ; public : void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "SetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPath(FNavPathSharedPtr NewSharedPath)"
  },
  {
    "label": "GetPath()",
    "kind": "Method",
    "detail": "Function (FNavPathSharedPtr)",
    "insertText": "GetPath()"
  },
  {
    "label": "OnPathEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathEvent(FNavigationPath* Path, ENavPathEvent::Type PathEvent)"
  },
  {
    "label": "SetPathPointsFromPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPathPointsFromPath(FNavigationPath& NativePath)"
  }
]