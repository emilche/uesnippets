[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "IPoseWatchManagerColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPoseWatchManagerColumn"
  },
  {
    "label": "FPoseWatchManagerDefaultHierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseWatchManagerDefaultHierarchy"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "STreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeView"
  },
  {
    "label": "FPendingTreeOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingTreeOperation"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SPoseWatchManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPoseWatchManager"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const FPoseWatchManagerInitializationOptions& InitOptions)"
  },
  {
    "label": "RefreshSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSelection()"
  },
  {
    "label": "SetColumnVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnVisibility(FName ColumnId, bool bIsVisible)"
  },
  {
    "label": "RequestSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSort()"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const TArray<FPoseWatchManagerTreeItemPtr>& InItems, bool bSelected, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const FPoseWatchManagerTreeItemPtr& InItem, bool bSelected, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "GetTreeItem()",
    "kind": "Method",
    "detail": "Function (FPoseWatchManagerTreeItemPtr)",
    "insertText": "GetTreeItem(FObjectKey, bool bIncludePending = false)"
  },
  {
    "label": "EmptyTreeItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EmptyTreeItems()"
  },
  {
    "label": "Populate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Populate()"
  },
  {
    "label": "RepopulateEntireTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepopulateEntireTree()"
  },
  {
    "label": "AddPendingItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingItem(FPoseWatchManagerTreeItemPtr Item)"
  },
  {
    "label": "AddPendingItemAndChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingItemAndChildren(FPoseWatchManagerTreeItemPtr Item)"
  },
  {
    "label": "AddItemToTree()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemToTree(FPoseWatchManagerTreeItemRef InItem)"
  },
  {
    "label": "AddUnfilteredItemToTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnfilteredItemToTree(FPoseWatchManagerTreeItemRef Item)"
  },
  {
    "label": "EnsureParentForItem()",
    "kind": "Method",
    "detail": "Function (FPoseWatchManagerTreeItemPtr)",
    "insertText": "EnsureParentForItem(FPoseWatchManagerTreeItemRef Item)"
  },
  {
    "label": "Temporary()",
    "kind": "Method",
    "detail": "Function (TreeItemType)",
    "insertText": "Temporary(Data)"
  },
  {
    "label": "OnItemAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemAdded(const FObjectKey& ItemID, uint8 ActionMask)"
  },
  {
    "label": "OnPoseWatchesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPoseWatchesChanged(UAnimBlueprint* InAnimBlueprint, UEdGraphNode* InNode)"
  },
  {
    "label": "Delete_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delete_Execute()"
  },
  {
    "label": "SetupColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupColumns(SHeaderRow& HeaderRow)"
  },
  {
    "label": "RefreshColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshColumns()"
  },
  {
    "label": "ScrollItemIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScrollItemIntoView(const FPoseWatchManagerTreeItemPtr& Item)"
  },
  {
    "label": "OnGetChildrenForManagerTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForManagerTree(FPoseWatchManagerTreeItemPtr InParent, TArray< FPoseWatchManagerTreeItemPtr >& OutChildren)"
  },
  {
    "label": "OnManagerTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnManagerTreeSelectionChanged(FPoseWatchManagerTreeItemPtr TreeItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnManagerTreeItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnManagerTreeItemScrolledIntoView(FPoseWatchManagerTreeItemPtr TreeItem, const TSharedPtr<ITableRow>& Widget)"
  },
  {
    "label": "OnManagerTreeDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnManagerTreeDoubleClick(FPoseWatchManagerTreeItemPtr TreeItem)"
  },
  {
    "label": "OnHierarchyChangedEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHierarchyChangedEvent(FPoseWatchManagerHierarchyChangedData Event)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "OnOpenContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnOpenContextMenu()"
  },
  {
    "label": "OnCreateFolderClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCreateFolderClicked()"
  },
  {
    "label": "CreateFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFolder()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"PoseWatchManager::SPoseWatchManager\")"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColumnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(FPoseWatchManagerTreeItemPtr Model, bool bInExpansionState)"
  }
]