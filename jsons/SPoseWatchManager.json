[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "IPoseWatchManagerColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPoseWatchManagerColumn"
  },
  {
    "label": "FPoseWatchManagerDefaultHierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPoseWatchManagerDefaultHierarchy"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "STreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STreeView"
  },
  {
    "label": "FPendingTreeOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingTreeOperation"
  },
  {
    "label": "EType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EType"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SPoseWatchManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPoseWatchManager"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" EditorUndoClient . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Framework / Views / ITypedTableView . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Misc / Attribute . h \" # include \" Misc / TextFilter . h \" # include \" SlateFwd . h \" # include \" Styling / SlateColor . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Delegates / DelegateCombinations . h \" # include \" Framework / Views / ITypedTableView . h \" # include \" Types / SlateEnums . h \" # include \" BlueprintEditor . h \" # include \" Engine / PoseWatch . h \" # include \" PoseWatchManagerFolderTreeItem . h \" # include \" IPoseWatchManager . h \" # include \" PoseWatchManagerFwd . h \" # include \" SPoseWatchManagerTreeView . h \" # include \" PoseWatchManagerPublicTypes . h \" # include \" PoseWatchManagerStandaloneTypes . h \" # include \" PoseWatchManagerDragDrop . h \" class FMenuBuilder ; class UToolMenu ; class IPoseWatchManagerColumn ; class FPoseWatchManagerDefaultHierarchy ; class SComboButton ; template<ItemType> class STreeView ; namespace PoseWatchManager {)",
    "insertText": "DECLARE_EVENT_OneParam(SPoseWatchManager, FTreeItemPtrEvent, FPoseWatchManagerTreeItemPtr)"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_TwoParams(SPoseWatchManager, FOnItemSelectionChanged, FPoseWatchManagerTreeItemPtr, ESelectInfo::Type)"
  },
  {
    "label": "FPendingTreeOperation()",
    "kind": "Method",
    "detail": "Function (typedef TTextFilter<const IPoseWatchManagerTreeItem&> TreeItemTextFilter ; struct FPendingTreeOperation { enum EType { Added,Removed,Moved } ;)",
    "insertText": "FPendingTreeOperation(EType InType, TSharedRef<IPoseWatchManagerTreeItem> InItem) : Type(InType), Item(InItem)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} EType Type ; FPoseWatchManagerTreeItemRef Item ; } ; namespace ENewItemAction { enum Type { None = 0,Select = 1<<0,ScrollIntoView = 1<<1,Rename = 1<<2,} ; } } class SPoseWatchManager : public IPoseWatchManager,public FGCObject { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPoseWatchManager)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, const FPoseWatchManagerInitializationOptions& InitOptions)"
  },
  {
    "label": "SPoseWatchManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SPoseWatchManager()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "RefreshSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshSelection()"
  },
  {
    "label": "GetTree()",
    "kind": "Method",
    "detail": "Function (const STreeView<FPoseWatchManagerTreeItemPtr>&)",
    "insertText": "GetTree()"
  },
  {
    "label": "SetKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyboardFocus()"
  },
  {
    "label": "SetColumnVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnVisibility(FName ColumnId, bool bIsVisible)"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode(const FName ColumnId)"
  },
  {
    "label": "RequestSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSort()"
  },
  {
    "label": "FullRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullRefresh()"
  },
  {
    "label": "GetDoubleClickEvent()",
    "kind": "Method",
    "detail": "Function (public : PoseWatchManager::FTreeItemPtrEvent&)",
    "insertText": "GetDoubleClickEvent()"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const TArray<FPoseWatchManagerTreeItemPtr>& InItems, bool bSelected, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "SetItemSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemSelection(const FPoseWatchManagerTreeItemPtr& InItem, bool bSelected, ESelectInfo::Type SelectInfo = ESelectInfo::Direct)"
  },
  {
    "label": "GetSelection()",
    "kind": "Method",
    "detail": "Function (FPoseWatchManagerTreeItemPtr)",
    "insertText": "GetSelection()"
  },
  {
    "label": "FindParent()",
    "kind": "Method",
    "detail": "Function (} FPoseWatchManagerTreeItemPtr)",
    "insertText": "FindParent(const IPoseWatchManagerTreeItem& InItem)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "SetPendingRenameItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPendingRenameItem(const FPoseWatchManagerTreeItemPtr& InItem)"
  },
  {
    "label": "GetTreeItem()",
    "kind": "Method",
    "detail": "Function (} FPoseWatchManagerTreeItemPtr)",
    "insertText": "GetTreeItem(FObjectKey, bool bIncludePending = false)"
  },
  {
    "label": "CreateDragDropOperation()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FDragDropOperation>)",
    "insertText": "CreateDragDropOperation(const TArray<FPoseWatchManagerTreeItemPtr>& InTreeItems)"
  },
  {
    "label": "ParseDragDrop()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParseDragDrop(FPoseWatchManagerDragDropPayload& OutPayload, const FDragDropOperation& Operation)"
  },
  {
    "label": "ValidateDrop()",
    "kind": "Method",
    "detail": "Function (FPoseWatchManagerDragValidationInfo)",
    "insertText": "ValidateDrop(const IPoseWatchManagerTreeItem& DropTarget, const FPoseWatchManagerDragDropPayload& Payload)"
  },
  {
    "label": "OnDropPayload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDropPayload(IPoseWatchManagerTreeItem& DropTarget, const FPoseWatchManagerDragDropPayload& Payload, const FPoseWatchManagerDragValidationInfo& ValidationInfo)"
  },
  {
    "label": "OnDragOverItem()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragOverItem(const FDragDropEvent& Event, const IPoseWatchManagerTreeItem& Item)"
  },
  {
    "label": "GetTypeSortPriority()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeSortPriority(const IPoseWatchManagerTreeItem& Item)"
  },
  {
    "label": "GetIsReentrant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsReentrant()"
  },
  {
    "label": "Populate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Populate()"
  },
  {
    "label": "RepopulateEntireTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepopulateEntireTree()"
  },
  {
    "label": "AddPendingItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingItem(FPoseWatchManagerTreeItemPtr Item)"
  },
  {
    "label": "AddPendingItemAndChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingItemAndChildren(FPoseWatchManagerTreeItemPtr Item)"
  },
  {
    "label": "AddItemToTree()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddItemToTree(FPoseWatchManagerTreeItemRef InItem)"
  },
  {
    "label": "AddUnfilteredItemToTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUnfilteredItemToTree(FPoseWatchManagerTreeItemRef Item)"
  },
  {
    "label": "EnsureParentForItem()",
    "kind": "Method",
    "detail": "Function (FPoseWatchManagerTreeItemPtr)",
    "insertText": "EnsureParentForItem(FPoseWatchManagerTreeItemRef Item)"
  },
  {
    "label": "CreateItemFor()",
    "kind": "Method",
    "detail": "Function (public : template<TreeItemType,TreeItemData> FPoseWatchManagerTreeItemPtr)",
    "insertText": "CreateItemFor(const TreeItemData& Data, bool bForce = false)"
  },
  {
    "label": "Temporary()",
    "kind": "Method",
    "detail": "Function (const TreeItemType)",
    "insertText": "Temporary(Data)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (FPoseWatchManagerTreeItemPtr Result =)",
    "insertText": "MakeShareable(new TreeItemType(Data))"
  },
  {
    "label": "OnPoseWatchesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPoseWatchesChanged(UAnimBlueprint* InAnimBlueprint, UEdGraphNode* InNode)"
  },
  {
    "label": "Rename_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rename_Execute()"
  },
  {
    "label": "Delete_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delete_Execute()"
  },
  {
    "label": "GetColumns()",
    "kind": "Method",
    "detail": "Function (const TMap<FName,TSharedPtr<IPoseWatchManagerColumn>>&)",
    "insertText": "GetColumns()"
  },
  {
    "label": "PassesTextFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PassesTextFilter(const FPoseWatchManagerTreeItemPtr& Item)"
  },
  {
    "label": "HasSelectorFocus()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasSelectorFocus(FPoseWatchManagerTreeItemPtr Item)"
  },
  {
    "label": "SetupColumns()",
    "kind": "Method",
    "detail": "Function (} private : TMap<FName,TSharedPtr<IPoseWatchManagerColumn>> Columns ; void)",
    "insertText": "SetupColumns(SHeaderRow& HeaderRow)"
  },
  {
    "label": "RefreshColumns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshColumns()"
  },
  {
    "label": "PopulateSearchStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateSearchStrings(const IPoseWatchManagerTreeItem& Item, TArray< FString >& OutSearchStrings)"
  },
  {
    "label": "ScrollItemIntoView()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "ScrollItemIntoView(const FPoseWatchManagerTreeItemPtr& Item)"
  },
  {
    "label": "OnGenerateRowForManagerTree()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRowForManagerTree(FPoseWatchManagerTreeItemPtr Item, const TSharedRef< STableViewBase >& OwnerTable)"
  },
  {
    "label": "OnGetChildrenForManagerTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetChildrenForManagerTree(FPoseWatchManagerTreeItemPtr InParent, TArray< FPoseWatchManagerTreeItemPtr >& OutChildren)"
  },
  {
    "label": "OnManagerTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnManagerTreeSelectionChanged(FPoseWatchManagerTreeItemPtr TreeItem, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnManagerTreeItemScrolledIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnManagerTreeItemScrolledIntoView(FPoseWatchManagerTreeItemPtr TreeItem, const TSharedPtr<ITableRow>& Widget)"
  },
  {
    "label": "OnManagerTreeDoubleClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnManagerTreeDoubleClick(FPoseWatchManagerTreeItemPtr TreeItem)"
  },
  {
    "label": "OnItemExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnItemExpansionChanged(FPoseWatchManagerTreeItemPtr TreeItem, bool bIsExpanded)"
  },
  {
    "label": "OnHierarchyChangedEvent()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnHierarchyChangedEvent(FPoseWatchManagerHierarchyChangedData Event)"
  },
  {
    "label": "OnFilterTextChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnFilterTextChanged(const FText& InFilterText)"
  },
  {
    "label": "GetFilterButtonGlyph()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetFilterButtonGlyph()"
  },
  {
    "label": "GetFilterButtonToolTip()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFilterButtonToolTip()"
  },
  {
    "label": "GetFilterStatusVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFilterStatusVisibility()"
  },
  {
    "label": "GetEmptyLabelVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetEmptyLabelVisibility()"
  },
  {
    "label": "GetSelectionMode()",
    "kind": "Method",
    "detail": "Function (ESelectionMode::Type)",
    "insertText": "GetSelectionMode()"
  },
  {
    "label": "OnOpenContextMenu()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SWidget>)",
    "insertText": "OnOpenContextMenu()"
  },
  {
    "label": "OnCreateFolderClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnCreateFolderClicked()"
  },
  {
    "label": "CreateFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFolder()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (private : FOnContextMenuOpening OnContextMenuOpening ; TArray<PoseWatchManager::FPendingTreeOperation> PendingOperations ; TMap<FObjectKey,uint8> NewItemActions ; TSharedPtr<SPoseWatchManagerTreeView> PoseWatchManagerTreeView ; FPoseWatchManagerTreeItemMap TreeItemMap ; FPoseWatchManagerTreeItemMap PendingTreeItemMap ; TArray<FPoseWatchManagerTreeItemPtr> RootTreeItems ; TSharedPtr<FUICommandList> CommandList ; private : uint8 bNeedsRefresh : 1 ; uint8 bProcessingFullRefresh : 1 ; uint8 bFullRefresh : 1 ; uint8 bSelectionDirty : 1 ; uint8 bNeedsColumnRefresh : 1 ; bool bIsReentrant ; TSharedPtr<SSearchBox> FilterTextBoxWidget ; TSharedPtr<SHeaderRow> HeaderRowWidget ; TSharedPtr<PoseWatchManager::TreeItemTextFilter> SearchBoxFilter ; bool bPendingFocusNextFrame ; TWeakPtr<IPoseWatchManagerTreeItem> PendingRenameItem ; TUniquePtr<FPoseWatchManagerDefaultHierarchy> Hierarchy ; PoseWatchManager::FTreeItemPtrEvent OnDoubleClickOnTreeEvent ; PoseWatchManager::FOnItemSelectionChanged OnItemSelectionChanged ; private : void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (} ; FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "OnColumnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (} bool bDisableIntermediateSorting ; bool bSortDirty ; FName SortByColumn ; EColumnSortMode::Type SortMode ; FBlueprintEditor* BlueprintEditor ; void)",
    "insertText": "OnColumnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type InSortMode)"
  },
  {
    "label": "SortItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortItems(TArray<FPoseWatchManagerTreeItemPtr>& Items)"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(FPoseWatchManagerTreeItemPtr Model, bool bInExpansionState)"
  }
]