[
  {
    "label": "CloneSessionDescription()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_SDP_UTILS_H_ # define PC_SDP_UTILS_H_ # include<functional> # include<memory> # include<string> # include \" api / jsep . h \" # include \" p2p / base / transport_info . h \" # include \" pc / session_description . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { RTC_EXPORT std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CloneSessionDescription(const SessionDescriptionInterface* sdesc)"
  },
  {
    "label": "CloneSessionDescriptionAsType()",
    "kind": "Method",
    "detail": "Function (RTC_EXPORT std::unique_ptr<SessionDescriptionInterface>)",
    "insertText": "CloneSessionDescriptionAsType(const SessionDescriptionInterface* sdesc, SdpType type)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef std::function<)",
    "insertText": "bool(const cricket::ContentInfo*, const cricket::TransportInfo*)"
  },
  {
    "label": "SdpContentsAll()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SdpContentsAll(SdpContentPredicate pred, const cricket::SessionDescription* desc)"
  },
  {
    "label": "SdpContentsNone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SdpContentsNone(SdpContentPredicate pred, const cricket::SessionDescription* desc)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef std::function<)",
    "insertText": "void(cricket::ContentInfo*, cricket::TransportInfo*)"
  },
  {
    "label": "SdpContentsForEach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SdpContentsForEach(SdpContentMutator fn, cricket::SessionDescription* desc)"
  }
]