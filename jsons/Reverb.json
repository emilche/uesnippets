[
  {
    "label": "FWaveTableOsc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWaveTableOsc"
  },
  {
    "label": "FEarlyReflectionsSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEarlyReflectionsSettings"
  },
  {
    "label": "FEarlyReflections",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEarlyReflections"
  },
  {
    "label": "FFDNDelayData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFDNDelayData"
  },
  {
    "label": "FPlateReverbSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlateReverbSettings"
  },
  {
    "label": "FPlateReverb",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlateReverb"
  },
  {
    "label": "FPlate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlate"
  },
  {
    "label": "FEarlyReflectionsSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DSP / Delay . h \" # include \" DSP / AllPassFilter . h \" # include \" DSP / OnePole . h \" namespace Audio { class FWaveTableOsc ; struct FEarlyReflectionsSettings { float Gain ; float PreDelayMsec ; float Bandwidth ; float Decay ; float Absorption ;)",
    "insertText": "FEarlyReflectionsSettings() : Gain(1.0f) , PreDelayMsec(0.0f) , Bandwidth(0.8) , Decay(0.5) , Absorption(0.7)"
  },
  {
    "label": "FEarlyReflections()",
    "kind": "Method",
    "detail": "Function (} } ; class FEarlyReflections { public :)",
    "insertText": "FEarlyReflections()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const int32 InSampleRate)"
  },
  {
    "label": "SetSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSettings(const FEarlyReflectionsSettings& InSettings)"
  },
  {
    "label": "ProcessAudioFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAudioFrame(const float* InBuffer, const int32 InChannels, float* OutBuffer, const int32 OutChannels)"
  },
  {
    "label": "ApplySettings()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ApplySettings()"
  },
  {
    "label": "ProcessDelayLine()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ProcessDelayLine(const float InSample, FDelayAPF& InAPF, FOnePoleLPF& InLPF)"
  },
  {
    "label": "FPlateReverbSettings()",
    "kind": "Method",
    "detail": "Function (FEarlyReflectionsSettings Settings ; struct FFDNDelayData { FDelay PreDelay ; FOnePoleLPF InputLPF ; FDelayAPF APF [ 4 ] ; FOnePoleLPF LPF [ 4 ] ; float DelayLineInputs [ 4 ] ; float DelayLineOuputs [ 4 ] ; } ; float MatrixScaleFactor ; FFDNDelayData Data [ 2 ] ; } ; struct FPlateReverbSettings { FEarlyReflectionsSettings EarlyReflections ; float LateDelayMsec ; float LateGain ; float Bandwidth ; float Diffusion ; float Dampening ; float Decay ; float Density ; float Wetness ;)",
    "insertText": "FPlateReverbSettings() : LateDelayMsec(0.0f) , LateGain(0.0f) , Bandwidth(0.5f) , Diffusion(0.5f) , Dampening(0.5f) , Decay(0.5f) , Density(0.5f) , Wetness(0.5f)"
  },
  {
    "label": "FPlateReverb()",
    "kind": "Method",
    "detail": "Function (} } ; class FPlateReverb { public :)",
    "insertText": "FPlateReverb()"
  },
  {
    "label": "EnableLateReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableLateReflections(const bool bInEnableLateReflections)"
  },
  {
    "label": "EnableEarlyReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableEarlyReflections(const bool bInEnableEarlyReflections)"
  },
  {
    "label": "SetSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSettings(const FPlateReverbSettings& InSettings)"
  },
  {
    "label": "FPlate()",
    "kind": "Method",
    "detail": "Function (FPlateReverbSettings Settings ; FEarlyReflections EarlyReflections ; const int32 PresetSampleRate = 2 9 7 6 1 ; FDelay PreDelay ; FOnePoleLPF InputLPF ; FDelayAPF APF1 ; FDelayAPF APF2 ; FDelayAPF APF3 ; FDelayAPF APF4 ; TSharedPtr<FWaveTableOsc> LFO ; struct FPlate { FDelayAPF ModulatedAPF ; FDelay Delay1 ; FOnePoleLPF LPF ; FDelayAPF APF ; FDelay Delay2 ; float PreviousSample ; float ModulatedBaseDelayMsec ; float ModulatedDeltaDelayMsec ;)",
    "insertText": "FPlate() : PreviousSample(0.0f) , ModulatedBaseDelayMsec(0.0f) , ModulatedDeltaDelayMsec(0.0f)"
  }
]