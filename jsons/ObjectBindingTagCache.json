[
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FObjectBindingTagCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectBindingTagCache"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / Map . h \" # include \" Containers / SortedMap . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Math / Color . h \" # include \" Misc / Guid . h \" # include \" MovieSceneObjectBindingID . h \" # include \" UObject / NameTypes . h \" class UMovieSceneSequence ; class FObjectBindingTagCache { public : using TagIterator = TMultiMap<UE::MovieScene::FFixedObjectBindingID,FName>::TConstKeyIterator ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnUpdated, const FObjectBindingTagCache*)"
  },
  {
    "label": "ConditionalUpdate()",
    "kind": "Method",
    "detail": "Function (FOnUpdated OnUpdatedEvent ; void)",
    "insertText": "ConditionalUpdate(UMovieSceneSequence* RootSequence)"
  },
  {
    "label": "GetTagColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetTagColor(const FName& TagName)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (const FLinearColor* Color = ExposedNameColors .)",
    "insertText": "Find(TagName)"
  },
  {
    "label": "IterateTags()",
    "kind": "Method",
    "detail": "Function (} TagIterator)",
    "insertText": "IterateTags(const UE::MovieScene::FFixedObjectBindingID& BindingID)"
  }
]