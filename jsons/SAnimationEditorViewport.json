[
  {
    "label": "SAnimationEditorViewportTabBody",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationEditorViewportTabBody"
  },
  {
    "label": "FUICommandList_Pinnable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList_Pinnable"
  },
  {
    "label": "SAnimViewportToolBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimViewportToolBar"
  },
  {
    "label": "FAnimationEditorViewportRequiredArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationEditorViewportRequiredArgs"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "SAnimationEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimationEditorViewport"
  },
  {
    "label": "FAnimationViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationViewportClient"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "FAnimationEditorPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationEditorPreviewScene"
  },
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "STextComboBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextComboBox"
  },
  {
    "label": "FAnimationEditorViewportRequiredArgs()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" PersonaDelegates . h \" # include \" IPersonaViewport . h \" # include \" EngineDefines . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" BlueprintEditor . h \" # include \" IPersonaPreviewScene . h \" # include \" EditorViewportClient . h \" # include \" AnimationEditorViewportClient . h \" # include \" AnimationEditorPreviewScene . h \" # include \" SEditorViewport . h \" # include \" PersonaModule . h \" # include \" SNameComboBox . h \" class SAnimationEditorViewportTabBody ; class FUICommandList_Pinnable ; class SAnimViewportToolBar ; struct FAnimationEditorViewportRequiredArgs {)",
    "insertText": "FAnimationEditorViewportRequiredArgs(const TSharedRef<class IPersonaPreviewScene>& InPreviewScene, TSharedRef<class SAnimationEditorViewportTabBody> InTabBody, TSharedRef<class FAssetEditorToolkit> InAssetEditorToolkit, int32 InViewportIndex) : PreviewScene(InPreviewScene) , TabBody(InTabBody) , AssetEditorToolkit(InAssetEditorToolkit) , ViewportIndex(InViewportIndex)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<class IPersonaPreviewScene> PreviewScene ; TSharedRef<class SAnimationEditorViewportTabBody> TabBody ; TSharedRef<class FAssetEditorToolkit> AssetEditorToolkit ; int32 ViewportIndex ; } ; enum class ESectionDisplayMode { None = - 1,ShowAll,ShowOnlyClothSections,HideOnlyClothSections,NumSectionDisplayMode } ; class SAnimationEditorViewport : public SEditorViewport,public FEditorUndoClient { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimationEditorViewport) : _ContextName(NAME_None) , _ShowShowMenu(true) , _ShowLODMenu(true) , _ShowPlaySpeedMenu(true) , _ShowStats(true) , _ShowFloorOptions(true) , _ShowTurnTable(true) , _ShowPhysicsMenu(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TArray<TSharedPtr<FExtender>>, Extenders) SLATE_ARGUMENT(FName, ContextName) SLATE_ARGUMENT(bool, ShowShowMenu) SLATE_ARGUMENT(bool, ShowLODMenu) SLATE_ARGUMENT(bool, ShowPlaySpeedMenu) SLATE_ARGUMENT(bool, ShowStats) SLATE_ARGUMENT(bool, ShowFloorOptions) SLATE_ARGUMENT(bool, ShowTurnTable) SLATE_ARGUMENT(bool, ShowPhysicsMenu) SLATE_END_ARGS() void Construct(const FArguments& InArgs, const FAnimationEditorViewportRequiredArgs& InRequiredArgs)"
  },
  {
    "label": "SAnimationEditorViewport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SAnimationEditorViewport()"
  },
  {
    "label": "GetViewportToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SAnimViewportToolBar>)",
    "insertText": "GetViewportToolbar()"
  },
  {
    "label": "MakeViewportToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "MakeViewportToolbar()"
  },
  {
    "label": "OnFocusViewportToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusViewportToSelection()"
  },
  {
    "label": "PopulateViewportOverlays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateViewportOverlays(TSharedRef<SOverlay> Overlay)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<class FAnimationViewportClient> LevelViewportClient ; TWeakPtr<class SAnimationEditorViewportTabBody> TabBodyPtr ; TWeakPtr<class IPersonaPreviewScene> PreviewScenePtr ; FDelegateHandle PreviewFeatureLevelChangedHandle ; TWeakPtr<class FAssetEditorToolkit> AssetEditorToolkitPtr ; TSharedPtr<SAnimViewportToolBar> ViewportToolbar ; TArray<TSharedPtr<FExtender>> Extenders ; FName ContextName ; int32 ViewportIndex ; bool bShowShowMenu ; bool bShowLODMenu ; bool bShowPlaySpeedMenu ; bool bShowStats ; bool bShowFloorOptions ; bool bShowTurnTable ; bool bShowPhysicsMenu ; class SAnimationEditorViewportTabBody ; } ; class SAnimationEditorViewportTabBody : public IPersonaViewport { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimationEditorViewportTabBody ) : _BlueprintEditor() , _ContextName(NAME_None) , _ShowShowMenu(true) , _ShowLODMenu(true) , _ShowPlaySpeedMenu(true) , _ShowTimeline(true) , _ShowStats(true) , _AlwaysShowTransformToolbar(false) , _ShowFloorOptions(true) , _ShowTurnTable(true) , _ShowPhysicsMenu(false)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<FBlueprintEditor>, BlueprintEditor) SLATE_ARGUMENT(FOnInvokeTab, OnInvokeTab) SLATE_ARGUMENT(TArray<TSharedPtr<FExtender>>, Extenders) SLATE_ARGUMENT(FOnGetViewportText, OnGetViewportText) SLATE_ARGUMENT(FName, ContextName) SLATE_ARGUMENT(bool, ShowShowMenu) SLATE_ARGUMENT(bool, ShowLODMenu) SLATE_ARGUMENT(bool, ShowPlaySpeedMenu) SLATE_ARGUMENT(bool, ShowTimeline) SLATE_ARGUMENT(bool, ShowStats) SLATE_ARGUMENT(bool, AlwaysShowTransformToolbar) SLATE_ARGUMENT(bool, ShowFloorOptions) SLATE_ARGUMENT(bool, ShowTurnTable) SLATE_ARGUMENT(bool, ShowPhysicsMenu) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedRef<class IPersonaPreviewScene>& InPreviewScene, const TSharedRef<class FAssetEditorToolkit>& InAssetEditorToolkit, int32 InViewportIndex)"
  },
  {
    "label": "SAnimationEditorViewportTabBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SAnimationEditorViewportTabBody()"
  },
  {
    "label": "SaveState()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPersonaViewportState>)",
    "insertText": "SaveState()"
  },
  {
    "label": "RestoreState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreState(TSharedRef<IPersonaViewportState> InState)"
  },
  {
    "label": "GetViewportClient()",
    "kind": "Method",
    "detail": "Function (FEditorViewportClient&)",
    "insertText": "GetViewportClient()"
  },
  {
    "label": "GetPinnedCommandList()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IPinnedCommandList>)",
    "insertText": "GetPinnedCommandList()"
  },
  {
    "label": "AddNotification()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SWidget>)",
    "insertText": "AddNotification(TAttribute<EMessageSeverity::Type> InSeverity, TAttribute<bool> InCanBeDismissed, const TSharedRef<SWidget>& InNotificationWidget, FPersonaViewportNotificationOptions InOptions)"
  },
  {
    "label": "RemoveNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNotification(const TWeakPtr<SWidget>& InContainingWidget)"
  },
  {
    "label": "AddToolbarExtender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToolbarExtender(FName MenuToExtend, FMenuExtensionDelegate MenuBuilderDelegate)"
  },
  {
    "label": "GetKeyDownDelegate()",
    "kind": "Method",
    "detail": "Function (FPersonaViewportKeyDownDelegate&)",
    "insertText": "GetKeyDownDelegate()"
  },
  {
    "label": "RemoveOverlayWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveOverlayWidget(TSharedRef<SWidget> InOverlaidWidget)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "GetCommandList()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FUICommandList_Pinnable>&)",
    "insertText": "GetCommandList()"
  },
  {
    "label": "GetLODModelCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODModelCount()"
  },
  {
    "label": "IsLODModelSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLODModelSelected(int32 LODSelectionType)"
  },
  {
    "label": "IsTrackingAttachedMeshLOD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTrackingAttachedMeshLOD()"
  },
  {
    "label": "GetLODSelection()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODSelection()"
  },
  {
    "label": "OnSetPlaybackSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPlaybackSpeed(int32 PlaybackSpeedMode)"
  },
  {
    "label": "IsPlaybackSpeedSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlaybackSpeedSelected(int32 PlaybackSpeedMode)"
  },
  {
    "label": "GetViewportWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class SEditorViewport>)",
    "insertText": "GetViewportWidget()"
  },
  {
    "label": "GetDisplayString()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayString()"
  },
  {
    "label": "CanUseGizmos()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUseGizmos()"
  },
  {
    "label": "IsAutoAlignFloor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutoAlignFloor()"
  },
  {
    "label": "SetWindStrength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWindStrength(float SliderPos)"
  },
  {
    "label": "GetWindStrengthSliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "GetWindStrengthSliderValue()"
  },
  {
    "label": "GetWindStrengthLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWindStrengthLabel()"
  },
  {
    "label": "IsApplyingClothWind()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsApplyingClothWind()"
  },
  {
    "label": "SetGravityScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravityScale(float SliderPos)"
  },
  {
    "label": "GetGravityScaleSliderValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetGravityScaleSliderValue()"
  },
  {
    "label": "SetBoneDrawSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneDrawSize(float BoneDrawSize)"
  },
  {
    "label": "GetBoneDrawSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetBoneDrawSize()"
  },
  {
    "label": "SetCustomAnimationSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomAnimationSpeed(float AnimationSpeed)"
  },
  {
    "label": "GetCustomAnimationSpeed()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCustomAnimationSpeed()"
  },
  {
    "label": "SetCustomTurnTableSpeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomTurnTableSpeed(float InCustomTurnTableSpeed)"
  },
  {
    "label": "GetCustomTurnTableSpeed()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCustomTurnTableSpeed()"
  },
  {
    "label": "OnSetLODModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetLODModel(int32 LODSelectionType)"
  },
  {
    "label": "OnSetLODTrackDebuggedInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetLODTrackDebuggedInstance()"
  },
  {
    "label": "OnLODModelChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLODModelChanged()"
  },
  {
    "label": "OnDebugForcedLODChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDebugForcedLODChanged()"
  },
  {
    "label": "GetPreviewScene()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class FAnimationEditorPreviewScene>)",
    "insertText": "GetPreviewScene()"
  },
  {
    "label": "GetAssetEditorToolkit()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<class FAssetEditorToolkit>)",
    "insertText": "GetAssetEditorToolkit()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (} protected : private : bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "OnShowMorphTargets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowMorphTargets()"
  },
  {
    "label": "IsShowingMorphTargets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingMorphTargets()"
  },
  {
    "label": "OnShowRawAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowRawAnimation()"
  },
  {
    "label": "IsShowingRawAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingRawAnimation()"
  },
  {
    "label": "OnToggleDisablePostProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleDisablePostProcess()"
  },
  {
    "label": "CanDisablePostProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDisablePostProcess()"
  },
  {
    "label": "IsDisablePostProcessChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisablePostProcessChecked()"
  },
  {
    "label": "OnShowNonRetargetedAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowNonRetargetedAnimation()"
  },
  {
    "label": "IsShowingNonRetargetedPose()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingNonRetargetedPose()"
  },
  {
    "label": "OnShowSourceRawAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowSourceRawAnimation()"
  },
  {
    "label": "IsShowingSourceRawAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingSourceRawAnimation()"
  },
  {
    "label": "OnShowBakedAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowBakedAnimation()"
  },
  {
    "label": "IsShowingBakedAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingBakedAnimation()"
  },
  {
    "label": "OnShowAdditiveBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowAdditiveBase()"
  },
  {
    "label": "IsShowingAdditiveBase()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingAdditiveBase()"
  },
  {
    "label": "IsPreviewingAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreviewingAnimation()"
  },
  {
    "label": "OnShowBoneNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowBoneNames()"
  },
  {
    "label": "IsShowingBoneNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingBoneNames()"
  },
  {
    "label": "OnShowBoneColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowBoneColors()"
  },
  {
    "label": "IsShowingBoneColors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingBoneColors()"
  },
  {
    "label": "OnShowOverlayNone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowOverlayNone()"
  },
  {
    "label": "IsShowingOverlayNone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingOverlayNone()"
  },
  {
    "label": "OnShowOverlayBoneWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowOverlayBoneWeight()"
  },
  {
    "label": "IsShowingOverlayBoneWeight()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingOverlayBoneWeight()"
  },
  {
    "label": "OnShowOverlayMorphTargetVert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowOverlayMorphTargetVert()"
  },
  {
    "label": "IsShowingOverlayMorphTargetVerts()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingOverlayMorphTargetVerts()"
  },
  {
    "label": "OnSetBoneDrawMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetBoneDrawMode(int32 BoneDrawMode)"
  },
  {
    "label": "IsBoneDrawModeSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBoneDrawModeSet(int32 BoneDrawMode)"
  },
  {
    "label": "OnSetLocalAxesMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetLocalAxesMode(int32 LocalAxesMode)"
  },
  {
    "label": "IsLocalAxesModeSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocalAxesModeSet(int32 LocalAxesMode)"
  },
  {
    "label": "OnShowSockets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowSockets()"
  },
  {
    "label": "IsShowingSockets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingSockets()"
  },
  {
    "label": "OnShowAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowAttributes()"
  },
  {
    "label": "IsShowingAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingAttributes()"
  },
  {
    "label": "OnShowDisplayInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowDisplayInfo(int32 DisplayInfoMode)"
  },
  {
    "label": "IsShowingMeshInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowingMeshInfo(int32 DisplayInfoMode)"
  },
  {
    "label": "OnToggleShowTimecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleShowTimecode()"
  },
  {
    "label": "IsShowTimecode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowTimecode()"
  },
  {
    "label": "OnToggleAutoAlignFloor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleAutoAlignFloor()"
  },
  {
    "label": "ShowBound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowBound()"
  },
  {
    "label": "CanShowBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanShowBound()"
  },
  {
    "label": "IsShowBoundEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowBoundEnabled()"
  },
  {
    "label": "ToggleShowPreviewMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowPreviewMesh()"
  },
  {
    "label": "CanShowPreviewMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanShowPreviewMesh()"
  },
  {
    "label": "IsShowPreviewMeshEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowPreviewMeshEnabled()"
  },
  {
    "label": "GetPreviewScene()",
    "kind": "Method",
    "detail": "Function (TArray<UDebugSkelMeshComponent*> PreviewMeshComponents ;)",
    "insertText": "GetPreviewScene()->GetActor()->GetComponents(PreviewMeshComponents, true)"
  },
  {
    "label": "PerMeshFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerMeshFunction(PreviewMesh)"
  },
  {
    "label": "UseInGameBound()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "UseInGameBound()"
  },
  {
    "label": "CanUseInGameBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUseInGameBound()"
  },
  {
    "label": "IsUsingInGameBound()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingInGameBound()"
  },
  {
    "label": "UseFixedBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseFixedBounds()"
  },
  {
    "label": "CanUseFixedBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUseFixedBounds()"
  },
  {
    "label": "IsUsingFixedBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingFixedBounds()"
  },
  {
    "label": "UsePreSkinnedBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UsePreSkinnedBounds()"
  },
  {
    "label": "CanUsePreSkinnedBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUsePreSkinnedBounds()"
  },
  {
    "label": "IsUsingPreSkinnedBounds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingPreSkinnedBounds()"
  },
  {
    "label": "ComboBoxSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComboBoxSelectionChanged(TSharedPtr<FString> NewSelection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "PopulateNumUVChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateNumUVChannels()"
  },
  {
    "label": "PopulateUVChoices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateUVChoices()"
  },
  {
    "label": "PopulateSkinWeightProfileNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateSkinWeightProfileNames()"
  },
  {
    "label": "UpdateSkinWeightSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSkinWeightSelection(USkeletalMesh* InSkeletalMesh)"
  },
  {
    "label": "AnimChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnimChanged(UAnimationAsset* AnimAsset)"
  },
  {
    "label": "OpenPreviewSceneSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenPreviewSceneSettings()"
  },
  {
    "label": "SaveCameraAsDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveCameraAsDefault()"
  },
  {
    "label": "ClearDefaultCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDefaultCamera()"
  },
  {
    "label": "JumpToDefaultCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToDefaultCamera()"
  },
  {
    "label": "HasDefaultCameraSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDefaultCameraSet()"
  },
  {
    "label": "CanSaveCameraAsDefault()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSaveCameraAsDefault()"
  },
  {
    "label": "HandleFocusCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFocusCamera()"
  },
  {
    "label": "CanChangeCameraMode()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "CanChangeCameraMode()"
  },
  {
    "label": "GetBoneMoveModeButtonVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetBoneMoveModeButtonVisibility()"
  },
  {
    "label": "OnToggleMuteAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleMuteAudio()"
  },
  {
    "label": "IsAudioMuted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAudioMuted()"
  },
  {
    "label": "OnToggleUseAudioAttenuation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleUseAudioAttenuation()"
  },
  {
    "label": "IsAudioAttenuationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAudioAttenuationEnabled()"
  },
  {
    "label": "SetProcessRootMotionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProcessRootMotionMode(EProcessRootMotionMode Mode)"
  },
  {
    "label": "IsProcessRootMotionModeSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsProcessRootMotionModeSet(EProcessRootMotionMode Mode)"
  },
  {
    "label": "CanUseProcessRootMotionMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUseProcessRootMotionMode(EProcessRootMotionMode Mode)"
  },
  {
    "label": "SetVisualizeRootMotionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisualizeRootMotionMode(EVisualizeRootMotionMode Mode)"
  },
  {
    "label": "IsVisualizeRootMotionModeSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisualizeRootMotionModeSet(EVisualizeRootMotionMode Mode)"
  },
  {
    "label": "CanVisualizeRootMotion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanVisualizeRootMotion()"
  },
  {
    "label": "ToggleNotificationVisualizations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleNotificationVisualizations()"
  },
  {
    "label": "IsNotificationVisualizationsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNotificationVisualizationsEnabled()"
  },
  {
    "label": "ToggleAssetUserDataVisualizations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleAssetUserDataVisualizations()"
  },
  {
    "label": "IsAssetUserDataVisualizationsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetUserDataVisualizationsEnabled()"
  },
  {
    "label": "OnSetTurnTableSpeed()",
    "kind": "Method",
    "detail": "Function (private : EAnimationPlaybackSpeeds::Type SelectedTurnTableSpeed ; EPersonaTurnTableMode::Type SelectedTurnTableMode ; float CustomTurnTableSpeed = 1 . 0 f ; void)",
    "insertText": "OnSetTurnTableSpeed(int32 SpeedIndex)"
  },
  {
    "label": "OnSetTurnTableMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetTurnTableMode(int32 ModeIndex)"
  },
  {
    "label": "IsTurnTableModeSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTurnTableModeSelected(int32 ModeIndex)"
  },
  {
    "label": "SetCameraFollowMode()",
    "kind": "Method",
    "detail": "Function (FPersonaViewportKeyDownDelegate OnKeyDownDelegate ; public : void)",
    "insertText": "SetCameraFollowMode(EAnimationViewportCameraFollowMode InCameraFollowMode, FName InBoneName)"
  },
  {
    "label": "IsCameraFollowEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCameraFollowEnabled(EAnimationViewportCameraFollowMode InCameraFollowMode)"
  },
  {
    "label": "GetCameraFollowBoneName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetCameraFollowBoneName()"
  },
  {
    "label": "ToggleRotateCameraToFollowBone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleRotateCameraToFollowBone()"
  },
  {
    "label": "GetShouldRotateCameraToFollowBone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShouldRotateCameraToFollowBone()"
  },
  {
    "label": "TogglePauseAnimationOnCameraMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TogglePauseAnimationOnCameraMove()"
  },
  {
    "label": "GetShouldPauseAnimationOnCameraMove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShouldPauseAnimationOnCameraMove()"
  },
  {
    "label": "IsTurnTableSpeedSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTurnTableSpeedSelected(int32 SpeedIndex)"
  },
  {
    "label": "OnEnableClothSimulation()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnEnableClothSimulation()"
  },
  {
    "label": "IsClothSimulationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClothSimulationEnabled()"
  },
  {
    "label": "OnResetClothSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnResetClothSimulation()"
  },
  {
    "label": "OnPauseClothingSimWithAnim()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPauseClothingSimWithAnim()"
  },
  {
    "label": "IsPausingClothingSimWithAnim()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPausingClothingSimWithAnim()"
  },
  {
    "label": "OnEnableCollisionWithAttachedClothChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEnableCollisionWithAttachedClothChildren()"
  },
  {
    "label": "IsEnablingCollisionWithAttachedClothChildren()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnablingCollisionWithAttachedClothChildren()"
  },
  {
    "label": "OnSetSectionsDisplayMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetSectionsDisplayMode(ESectionDisplayMode DisplayMode)"
  },
  {
    "label": "IsSectionsDisplayMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSectionsDisplayMode(ESectionDisplayMode DisplayMode)"
  },
  {
    "label": "GetViewMinInput()",
    "kind": "Method",
    "detail": "Function (private : TWeakPtr<class FAnimationEditorPreviewScene> PreviewScenePtr ; TWeakPtr<class FAssetEditorToolkit> AssetEditorToolkitPtr ; TWeakPtr<class FBlueprintEditor> BlueprintEditorPtr ; bool bShowTimeline ; bool bAlwaysShowTransformToolbar ; bool bCameraFollowLockRotation ; TSharedPtr<FEditorViewportClient> LevelViewportClient ; TSharedPtr<class SAnimationEditorViewport> ViewportWidget ; TSharedPtr<SHorizontalBox> ToolbarBox ; TSharedPtr<FUICommandList_Pinnable> UICommandList ; FOnInvokeTab OnInvokeTab ; public : TSharedPtr<class STextComboBox> UVChannelCombo ; private : TArray<TSharedPtr<FString>> UVChannels ; TArray<int32> NumUVChannels ; public : TSharedPtr<SNameComboBox> SkinWeightCombo ; TArray<TSharedPtr<FName>> SkinWeightProfileNames ; TSharedPtr<SVerticalBox> ScrubPanelContainer ; TSharedPtr<SVerticalBox> ViewportNotificationsContainer ; TWeakPtr<SWidget> WeakPostProcessNotification ; TWeakPtr<SWidget> WeakRecordingNotification ; TWeakPtr<SWidget> WeakMinLODNotification ; TWeakPtr<SWidget> WeakSkinWeightPreviewNotification ; int32 LODSelection ; ESectionDisplayMode SectionsDisplayMode ; FOnGetViewportText OnGetViewportText ; float)",
    "insertText": "GetViewMinInput()"
  },
  {
    "label": "GetViewMaxInput()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetViewMaxInput()"
  },
  {
    "label": "UpdateShowFlagForMeshEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateShowFlagForMeshEdges()"
  },
  {
    "label": "UpdateScrubPanel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateScrubPanel(UAnimationAsset* AnimAsset)"
  },
  {
    "label": "AddRecordingNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRecordingNotification()"
  },
  {
    "label": "AddPostProcessNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPostProcessNotification()"
  },
  {
    "label": "AddMinLODNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMinLODNotification()"
  },
  {
    "label": "AddSkinWeightProfileNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSkinWeightProfileNotification()"
  }
]