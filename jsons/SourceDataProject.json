[
  {
    "label": "CSourceDataSnippet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSourceDataSnippet"
  },
  {
    "label": "CSourceDataPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSourceDataPackage"
  },
  {
    "label": "CSourceDataSnippet()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / SourceProject / SourceProject . h \" namespace uLang { class CSourceDataSnippet : public ISourceSnippet { public :)",
    "insertText": "CSourceDataSnippet(CUTF8String&& Path, CUTF8String&& Text) : _Path(Move(Path)) , _Text(Move(Text))"
  },
  {
    "label": "GetPath()",
    "kind": "Method",
    "detail": "Function (} CUTF8String)",
    "insertText": "GetPath()"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (_Path = Path ; } TOptional<CUTF8String>)",
    "insertText": "GetText()"
  },
  {
    "label": "CSourceDataPackage()",
    "kind": "Method",
    "detail": "Function (_Vst = Snippet ; } private : CUTF8String _Path ; CUTF8String _Text ; TOptional<TSRef<Verse::Vst::Snippet>> _Vst ; } ; class CSourceDataPackage : public CSourcePackage { public :)",
    "insertText": "CSourceDataPackage(const CUTF8String& Name, const CUTF8String& DirPath, const CSourcePackage::SSettings& Settings) : CSourcePackage(Name, TSRef<CSourceModule>::New(\"\")) , _DirPath(DirPath)"
  },
  {
    "label": "GetDirPath()",
    "kind": "Method",
    "detail": "Function (_Settings = Settings ; } const CUTF8String&)",
    "insertText": "GetDirPath()"
  }
]