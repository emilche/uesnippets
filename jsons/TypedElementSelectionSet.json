[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterface"
  },
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "FFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrame"
  },
  {
    "label": "FTypedElementSelectionNormalizationOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementSelectionNormalizationOptions"
  },
  {
    "label": "FTypedElementSelectionCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTypedElementSelectionCustomization"
  },
  {
    "label": "FTypedElementSelectionSetElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementSelectionSetElement"
  },
  {
    "label": "FTypedElementSelectionSetState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementSelectionSetState"
  },
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "UTypedElementSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTypedElementSelectionSet"
  },
  {
    "label": "GetNormalizedElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNormalizedElements(const TTypedElement<ITypedElementSelectionInterface>& InElementSelectionHandle, FTypedElementListConstRef InSelectionSet, const FTypedElementSelectionNormalizationOptions& InNormalizationOptions, FTypedElementListRef OutNormalizedElements)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsSet()"
  },
  {
    "label": "UTypedElementSelectionSet()",
    "kind": "Method",
    "detail": "Function (TYPEDELEMENTRUNTIME_API)",
    "insertText": "UTypedElementSelectionSet()"
  },
  {
    "label": "SelectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElement(const FTypedElementHandle& InElementHandle, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SelectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElements(const TArray<FTypedElementHandle>& InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SelectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElements(TArrayView<const FTypedElementHandle> InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SelectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElements(FTypedElementListConstRef InElementList, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "DeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElement(const FTypedElementHandle& InElementHandle, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "DeselectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElements(const TArray<FTypedElementHandle>& InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "DeselectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElements(TArrayView<const FTypedElementHandle> InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "DeselectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElements(FTypedElementListConstRef InElementList, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClearSelection(const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSelection(const TArray<FTypedElementHandle>& InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSelection(TArrayView<const FTypedElementHandle> InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSelection(FTypedElementListConstRef InElementList, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SetNameForTedsIntegration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNameForTedsIntegration(const FName InNameForIntegration)"
  },
  {
    "label": "RestoreSelectionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreSelectionState(const FTypedElementSelectionSetState& InSelectionState)"
  },
  {
    "label": "SelectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElement(const FScriptTypedElementHandle& InElementHandle, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SelectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectElements(const TArray<FScriptTypedElementHandle>& InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "DeselectElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElement(const FScriptTypedElementHandle& InElementHandle, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "DeselectElements()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeselectElements(const TArray<FScriptTypedElementHandle>& InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "SetSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSelection(const TArray<FScriptTypedElementHandle>& InElementHandles, const FTypedElementSelectionOptions InSelectionOptions)"
  },
  {
    "label": "OnElementReplaced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnElementReplaced(TArrayView<const TTuple<FTypedElementHandle, FTypedElementHandle>> InReplacedElements)"
  },
  {
    "label": "OnElementUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnElementUpdated(TArrayView<const FTypedElementHandle> InUpdatedElements)"
  },
  {
    "label": "OnElementListPreChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnElementListPreChange(const FTypedElementList& InElementList)"
  },
  {
    "label": "OnElementListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnElementListChanged(const FTypedElementList& InElementList)"
  }
]