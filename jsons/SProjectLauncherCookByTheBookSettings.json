[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SProjectLauncherCookByTheBookSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherCookByTheBookSettings"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Models / ProjectLauncherModel . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" class Error ; class SEditableTextBox ; namespace EShowMapsChoices { enum Type { ShowAllMaps,ShowCookedMaps,ShowMissingMaps,} ; } class SProjectLauncherCookByTheBookSettings : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherCookByTheBookSettings)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() public: ~SProjectLauncherCookByTheBookSettings()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<FProjectLauncherModel>& InModel, bool InShowSimple = false)"
  },
  {
    "label": "RefreshMapList()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "RefreshMapList()"
  },
  {
    "label": "RefreshCultureList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCultureList()"
  },
  {
    "label": "HandleAllCulturesHyperlinkNavigate()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleAllCulturesHyperlinkNavigate(bool AllPlatforms)"
  },
  {
    "label": "HandleAllCulturesHyperlinkVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleAllCulturesHyperlinkVisibility()"
  },
  {
    "label": "HandleAllMapsHyperlinkNavigate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAllMapsHyperlinkNavigate(bool AllPlatforms)"
  },
  {
    "label": "HandleCookConfigurationSelectorConfigurationSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCookConfigurationSelectorConfigurationSelected(EBuildConfiguration)"
  },
  {
    "label": "HandleCookConfigurationSelectorText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleCookConfigurationSelectorText()"
  },
  {
    "label": "HandleIncrementalCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleIncrementalCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleIncrementalCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleIncrementalCheckBoxIsChecked()"
  },
  {
    "label": "HandleSharedCookedBuildCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSharedCookedBuildCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleSharedCookedBuildCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleSharedCookedBuildCheckBoxIsChecked()"
  },
  {
    "label": "HandleCompressedCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCompressedCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleEncryptIniFilesCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEncryptIniFilesCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleCompressedCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleCompressedCheckBoxIsChecked()"
  },
  {
    "label": "HandleEncryptIniFilesCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleEncryptIniFilesCheckBoxIsChecked()"
  },
  {
    "label": "HandleMapListViewGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleMapListViewGenerateRow(TSharedPtr<FString> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleCultureListViewGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "HandleCultureListViewGenerateRow(TSharedPtr<FString> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "HandleMapSelectionHyperlinkVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleMapSelectionHyperlinkVisibility()"
  },
  {
    "label": "HandleNoMapSelectedBoxVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleNoMapSelectedBoxVisibility()"
  },
  {
    "label": "HandleNoMapsTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleNoMapsTextBlockText()"
  },
  {
    "label": "HandleProfileManagerProfileSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileManagerProfileSelected(const ILauncherProfilePtr& SelectedProfile, const ILauncherProfilePtr& PreviousProfile)"
  },
  {
    "label": "HandleShowCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleShowCheckBoxCheckStateChanged(ECheckBoxState NewState, EShowMapsChoices::Type Choice)"
  },
  {
    "label": "HandleShowCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleShowCheckBoxIsChecked(EShowMapsChoices::Type Choice)"
  },
  {
    "label": "HandleUnversionedCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUnversionedCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleUnversionedCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleUnversionedCheckBoxIsChecked()"
  },
  {
    "label": "HandleValidationErrorIconVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleValidationErrorIconVisibility(ELauncherProfileValidationErrors::Type Error)"
  },
  {
    "label": "HandleCookOptionsTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleCookOptionsTextBlockText()"
  },
  {
    "label": "HandleCookerOptionsCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCookerOptionsCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleProfileProjectChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleProfileProjectChanged()"
  },
  {
    "label": "HandleUnrealPakCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUnrealPakCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleUnrealPakCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleUnrealPakCheckBoxIsChecked()"
  },
  {
    "label": "HandleGenerateChunksCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGenerateChunksCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleGenerateChunksCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleGenerateChunksCheckBoxIsChecked()"
  },
  {
    "label": "HandleDontIncludeEditorContentCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDontIncludeEditorContentCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleDontIncludeEditorContentCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleDontIncludeEditorContentCheckBoxIsChecked()"
  },
  {
    "label": "HandleCreateReleaseVersionCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreateReleaseVersionCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleCreateReleaseVersionCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleCreateReleaseVersionCheckBoxIsChecked()"
  },
  {
    "label": "HandleCreateReleaseVersionNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreateReleaseVersionNameCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleCreateReleaseVersionNameTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleCreateReleaseVersionNameTextBlockText()"
  },
  {
    "label": "HandleBasedOnReleaseVersionNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBasedOnReleaseVersionNameCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleBasedOnReleaseVersionNameTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleBasedOnReleaseVersionNameTextBlockText()"
  },
  {
    "label": "HandleOriginalReleaseVersionNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOriginalReleaseVersionNameCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleOriginalReleaseVersionNameTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleOriginalReleaseVersionNameTextBlockText()"
  },
  {
    "label": "HandleOriginalReleaseVersionVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleOriginalReleaseVersionVisibility()"
  },
  {
    "label": "HandleGeneratePatchCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGeneratePatchCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleGeneratePatchCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleGeneratePatchCheckBoxIsChecked()"
  },
  {
    "label": "HandleAddPatchLevelCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddPatchLevelCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleAddPatchLevelCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleAddPatchLevelCheckBoxIsChecked()"
  },
  {
    "label": "HandleStageBaseReleasePaksCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleStageBaseReleasePaksCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleStageBaseReleasePaksCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleStageBaseReleasePaksCheckBoxIsChecked()"
  },
  {
    "label": "HandlePatchSourceContentPathTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandlePatchSourceContentPathTextBlockText()"
  },
  {
    "label": "HandlePatchSourceContentPathCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePatchSourceContentPathCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleBuildDLCCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBuildDLCCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleBuildDLCCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleBuildDLCCheckBoxIsChecked()"
  },
  {
    "label": "HandleDLCNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDLCNameCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "HandleDLCNameTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleDLCNameTextBlockText()"
  },
  {
    "label": "HandleDLCIncludeEngineContentCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDLCIncludeEngineContentCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleDLCIncludeEngineContentCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleDLCIncludeEngineContentCheckBoxIsChecked()"
  },
  {
    "label": "HandleHtppChunkInstallBrowseButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleHtppChunkInstallBrowseButtonClicked()"
  },
  {
    "label": "HandleHtppChunkInstallDirectoryText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleHtppChunkInstallDirectoryText()"
  },
  {
    "label": "HandleHtppChunkInstallDirectoryTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHtppChunkInstallDirectoryTextChanged(const FText& InText)"
  },
  {
    "label": "HandleHtppChunkInstallDirectoryTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHtppChunkInstallDirectoryTextCommitted(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "HandleHttpChunkInstallCheckBoxCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHttpChunkInstallCheckBoxCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HandleHttpChunkInstallCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleHttpChunkInstallCheckBoxIsChecked()"
  },
  {
    "label": "HandleHttpChunkInstallNameTextBlockText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleHttpChunkInstallNameTextBlockText()"
  },
  {
    "label": "HandleHtppChunkInstallNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHtppChunkInstallNameCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "MakeComplexWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeComplexWidget()"
  },
  {
    "label": "MakeSimpleWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeSimpleWidget()"
  }
]