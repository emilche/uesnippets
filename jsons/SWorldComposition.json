[
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SWorldCompositionGrid",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWorldCompositionGrid"
  },
  {
    "label": "SWrapBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWrapBox"
  },
  {
    "label": "SWorldComposition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWorldComposition"
  },
  {
    "label": "FWorldTileCollectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldTileCollectionModel"
  },
  {
    "label": "IMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMenu"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Framework / Application / IMenu . h \" # include \" Tiles / WorldTileCollectionModel . h \" class SButton ; class SWorldCompositionGrid ; class SWrapBox ; class SWorldComposition : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SWorldComposition) :_InWorld(nullptr)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(UWorld*, InWorld) SLATE_END_ARGS() SWorldComposition()"
  },
  {
    "label": "SWorldComposition()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SWorldComposition()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnBrowseWorld()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnBrowseWorld(UWorld* InWorld)"
  },
  {
    "label": "ConstructContentWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructContentWidget()"
  },
  {
    "label": "PopulateLayersList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateLayersList()"
  },
  {
    "label": "NewLayer_Clicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "NewLayer_Clicked()"
  },
  {
    "label": "CreateNewLayer()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "CreateNewLayer(const FWorldTileLayer& NewLayer)"
  },
  {
    "label": "GetZoomText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetZoomText()"
  },
  {
    "label": "GetCurrentOriginText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentOriginText()"
  },
  {
    "label": "GetCurrentLevelText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentLevelText()"
  },
  {
    "label": "GetMouseLocationText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMouseLocationText()"
  },
  {
    "label": "GetMarqueeSelectionSizeText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetMarqueeSelectionSizeText()"
  },
  {
    "label": "GetWorldSizeText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetWorldSizeText()"
  },
  {
    "label": "IsSimulationVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "IsSimulationVisible()"
  }
]