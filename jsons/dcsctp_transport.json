[
  {
    "label": "DcSctpTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DcSctpTransport"
  },
  {
    "label": "StreamState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StreamState"
  },
  {
    "label": "DcSctpTransport()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DcSctpTransport(rtc::Thread* network_thread,\n                  rtc::PacketTransportInternal* transport,\n                  Clock* clock)"
  },
  {
    "label": "ConnectTransportSignals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectTransportSignals()"
  },
  {
    "label": "DisconnectTransportSignals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisconnectTransportSignals()"
  },
  {
    "label": "OnTransportWritableState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransportWritableState(rtc::PacketTransportInternal* transport)"
  },
  {
    "label": "OnTransportReadPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransportReadPacket(rtc::PacketTransportInternal* transport,\n                             const char* data,\n                             size_t length,\n                             const int64_t& /* packet_time_us */,\n                             int flags)"
  },
  {
    "label": "OnTransportClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransportClosed(rtc::PacketTransportInternal* transport)"
  },
  {
    "label": "MaybeConnectSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaybeConnectSocket()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (stream_states_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (on_connected_callback_)",
    "insertText": "RTC_GUARDED_BY(network_thread_)"
  }
]