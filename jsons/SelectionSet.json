[
  {
    "label": "USelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USelectionSet"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UMeshSelectionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshSelectionSet"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Set . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" SelectionSet . generated . h \" class USelectionSet ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FSelectionSetModifiedSignature, USelectionSet*)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GetOnModified()",
    "kind": "Method",
    "detail": "Function (public : FSelectionSetModifiedSignature&)",
    "insertText": "GetOnModified()"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (OnModified .)",
    "insertText": "Broadcast(this)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: INTERACTIVETOOLSFRAMEWORK_API UMeshSelectionSet()"
  },
  {
    "label": "GetElements()",
    "kind": "Method",
    "detail": "Function (public : TArray<int>&)",
    "insertText": "GetElements(EMeshSelectionElementType ElementType)"
  },
  {
    "label": "AddIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIndices(EMeshSelectionElementType ElementType, const TArray<int32>& Indices)"
  },
  {
    "label": "AddIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIndices(EMeshSelectionElementType ElementType, const TSet<int32>& Indices)"
  },
  {
    "label": "RemoveIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveIndices(EMeshSelectionElementType ElementType, const TArray<int32>& Indices)"
  },
  {
    "label": "RemoveIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveIndices(EMeshSelectionElementType ElementType, const TSet<int32>& Indices)"
  }
]