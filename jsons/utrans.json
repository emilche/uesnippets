[
  {
    "label": "UTransDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTransDirection"
  },
  {
    "label": "UTransPosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTransPosition"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "LocalUTransliteratorPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LocalUTransliteratorPointer"
  },
  {
    "label": "repFunc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "repFunc"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "utrans_openU()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_openU(const UChar *id,\n             int32_t idLength,\n             UTransDirection dir,\n             const UChar *rules,\n             int32_t rulesLength,\n             UParseError *parseError,\n             UErrorCode *pErrorCode)"
  },
  {
    "label": "utrans_openInverse()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_openInverse(const UTransliterator* trans,\n                   UErrorCode* status)"
  },
  {
    "label": "utrans_clone()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_clone(const UTransliterator* trans,\n             UErrorCode* status)"
  },
  {
    "label": "utrans_close()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_close(UTransliterator* trans)"
  },
  {
    "label": "utrans_getUnicodeID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_getUnicodeID(const UTransliterator *trans,\n                    int32_t *resultLength)"
  },
  {
    "label": "utrans_register()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_register(UTransliterator* adoptedTrans,\n                UErrorCode* status)"
  },
  {
    "label": "utrans_unregisterID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_unregisterID(const UChar* id, int32_t idLength)"
  },
  {
    "label": "utrans_setFilter()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_setFilter(UTransliterator* trans,\n                 const UChar* filterPattern,\n                 int32_t filterPatternLen,\n                 UErrorCode* status)"
  },
  {
    "label": "utrans_countAvailableIDs()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_countAvailableIDs(void)"
  },
  {
    "label": "utrans_openIDs()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_openIDs(UErrorCode *pErrorCode)"
  },
  {
    "label": "utrans_trans()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_trans(const UTransliterator* trans,\n             UReplaceable* rep,\n             const UReplaceableCallbacks* repFunc,\n             int32_t start,\n             int32_t* limit,\n             UErrorCode* status)"
  },
  {
    "label": "utrans_transIncremental()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_transIncremental(const UTransliterator* trans,\n                        UReplaceable* rep,\n                        const UReplaceableCallbacks* repFunc,\n                        UTransPosition* pos,\n                        UErrorCode* status)"
  },
  {
    "label": "utrans_transUChars()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_transUChars(const UTransliterator* trans,\n                   UChar* text,\n                   int32_t* textLength,\n                   int32_t textCapacity,\n                   int32_t start,\n                   int32_t* limit,\n                   UErrorCode* status)"
  },
  {
    "label": "utrans_transIncrementalUChars()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_transIncrementalUChars(const UTransliterator* trans,\n                              UChar* text,\n                              int32_t* textLength,\n                              int32_t textCapacity,\n                              UTransPosition* pos,\n                              UErrorCode* status)"
  },
  {
    "label": "utrans_toRules()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_toRules(     const UTransliterator* trans,\n                    UBool escapeUnprintable,\n                    UChar* result, int32_t resultLength,\n                    UErrorCode* status)"
  },
  {
    "label": "utrans_getSourceSet()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_getSourceSet(const UTransliterator* trans,\n                    UBool ignoreFilter,\n                    USet* fillIn,\n                    UErrorCode* status)"
  },
  {
    "label": "utrans_open()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_open(const char* id,\n            UTransDirection dir,\n            const UChar* rules,         /* may be Null */\n            int32_t rulesLength,        /* -1 if null-terminated */ \n            UParseError* parseError,    /* may be Null */\n            UErrorCode* status)"
  },
  {
    "label": "utrans_getID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_getID(const UTransliterator* trans,\n             char* buf,\n             int32_t bufCapacity)"
  },
  {
    "label": "utrans_unregister()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_unregister(const char* id)"
  },
  {
    "label": "utrans_getAvailableID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "utrans_getAvailableID(int32_t index,\n                      char* buf,\n                      int32_t bufCapacity)"
  }
]