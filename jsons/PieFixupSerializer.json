[
  {
    "label": "FPIEFixupSerializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPIEFixupSerializer"
  },
  {
    "label": "FPIEFixupSerializer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Set . h \" # include \" Serialization / ArchiveUObject . h \" class FPIEFixupSerializer : public FArchiveUObject { public :)",
    "insertText": "FPIEFixupSerializer(UObject* InRoot, int32 InPIEInstanceID)"
  },
  {
    "label": "FPIEFixupSerializer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPIEFixupSerializer(UObject* InRoot, int32 InPIEInstanceID, TFunctionRef<void(int32, FSoftObjectPath&)> InSoftObjectPathFixupFunction)"
  },
  {
    "label": "ShouldSkipProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldSkipProperty(const FProperty* InProperty)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(UObject*& Object)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FSoftObjectPath& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FLazyObjectPtr& LazyObjectPtr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FSoftObjectPtr& Value)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (private : TFunctionRef<)",
    "insertText": "void(int32, FSoftObjectPath&)"
  }
]