[
  {
    "label": "TemporalLayersChecker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TemporalLayersChecker"
  },
  {
    "label": "BufferState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BufferState"
  },
  {
    "label": "TemporalLayersChecker()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_VP8_INCLUDE_TEMPORAL_LAYERS_CHECKER_H_ # define MODULES_VIDEO_CODING_CODECS_VP8_INCLUDE_TEMPORAL_LAYERS_CHECKER_H_ # include<stdint . h> # include<memory> # include \" api / video_codecs / vp8_frame_config . h \" # include \" api / video_codecs / vp8_temporal_layers . h \" namespace webrtc { class TemporalLayersChecker { public :)",
    "insertText": "TemporalLayersChecker(int num_temporal_layers)"
  },
  {
    "label": "TemporalLayersChecker()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TemporalLayersChecker()"
  },
  {
    "label": "CheckTemporalConfig()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CheckTemporalConfig(bool frame_is_keyframe, const Vp8FrameConfig& frame_config)"
  },
  {
    "label": "CreateTemporalLayersChecker()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<TemporalLayersChecker>)",
    "insertText": "CreateTemporalLayersChecker(Vp8TemporalLayersType type, int num_temporal_layers)"
  },
  {
    "label": "BufferState()",
    "kind": "Method",
    "detail": "Function (private : struct BufferState {)",
    "insertText": "BufferState() : is_keyframe(true), temporal_layer(0), sequence_number(0)"
  },
  {
    "label": "CheckAndUpdateBufferState()",
    "kind": "Method",
    "detail": "Function (} bool is_keyframe ; uint8_t temporal_layer ; uint32_t sequence_number ; } ; bool)",
    "insertText": "CheckAndUpdateBufferState(BufferState* state, bool* need_sync, bool frame_is_keyframe, uint8_t temporal_layer, Vp8FrameConfig::BufferFlags flags, uint32_t sequence_number, uint32_t* lowest_sequence_referenced)"
  }
]