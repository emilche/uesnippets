[
  {
    "label": "FWorldPartitionDraw2DContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionDraw2DContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSpatialHashSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpatialHashSettings"
  },
  {
    "label": "FSpatialHashStreamingGridLayerCell",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpatialHashStreamingGridLayerCell"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FSpatialHashStreamingGridLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpatialHashStreamingGridLevel"
  },
  {
    "label": "FSquare2DGridHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSquare2DGridHelper"
  },
  {
    "label": "FSpatialHashStreamingGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpatialHashStreamingGrid"
  },
  {
    "label": "UWorldPartitionRuntimeSpatialHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeSpatialHash"
  },
  {
    "label": "FAutoConsoleCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleCommand"
  },
  {
    "label": "FSpatialHashRuntimeGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpatialHashRuntimeGrid"
  },
  {
    "label": "ASpatialHashRuntimeGridInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ASpatialHashRuntimeGridInfo"
  },
  {
    "label": "URuntimeSpatialHashExternalStreamingObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeSpatialHashExternalStreamingObject"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UWorldPartitionStreamingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionStreamingPolicy"
  },
  {
    "label": "UWorldPartitionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionSubsystem"
  },
  {
    "label": "UWorldPartitionRuntimeHashSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeHashSet"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / HierarchicalLogArchive . h \" # include \" Math / MathFwd . h \" # include \" GameFramework / Info . h \" # include \" WorldPartition . h \" # include \" WorldPartition / DataLayer / DataLayersID . h \" # include \" WorldPartition / HLOD / HLODLayer . h \" # include \" WorldPartitionRuntimeHash . h \" # include \" WorldPartitionRuntimeSpatialHashGridPreviewer . h \" # include \" WorldPartitionRuntimeSpatialHash . generated . h \" typedef FInt64Vector3 FGridCellCoord ; typedef FInt64Vector2 FGridCellCoord2 ; class FWorldPartitionDraw2DContext ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (ProjectDefault,Disabled,Enabled,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FSpatialHashSettings() : bUseAlignedGridLevels(true) , bSnapNonAlignedGridLevelsToLowerLevels(true) #if WITH_EDITORONLY_DATA , bPlaceSmallActorsUsingLocation(false) , bPlacePartitionActorsUsingLocation(true)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FSpatialHashSettings& Lhs, const FSpatialHashSettings& Rhs)"
  },
  {
    "label": "UpdateSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSettings(const UWorldPartitionRuntimeSpatialHash& RuntimeSpatialHash)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FSpatialHashStreamingGridLayerCell()"
  },
  {
    "label": "FSpatialHashStreamingGridLayerCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpatialHashStreamingGridLayerCell(const FSpatialHashStreamingGridLayerCell& Other)"
  },
  {
    "label": "FSpatialHashStreamingGridLayerCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpatialHashStreamingGridLayerCell(FSpatialHashStreamingGridLayerCell&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSpatialHashStreamingGridLayerCell&)",
    "insertText": "operator(const FSpatialHashStreamingGridLayerCell& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSpatialHashStreamingGridLayerCell&)",
    "insertText": "operator(FSpatialHashStreamingGridLayerCell&& Other)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FSpatialHashStreamingGridLevel()"
  },
  {
    "label": "FSpatialHashStreamingGridLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpatialHashStreamingGridLevel(const FSpatialHashStreamingGridLevel& Other)"
  },
  {
    "label": "FSpatialHashStreamingGridLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpatialHashStreamingGridLevel(FSpatialHashStreamingGridLevel&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSpatialHashStreamingGridLevel&)",
    "insertText": "operator(const FSpatialHashStreamingGridLevel& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSpatialHashStreamingGridLevel&)",
    "insertText": "operator(FSpatialHashStreamingGridLevel&& Other)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FSpatialHashStreamingGrid()"
  },
  {
    "label": "FSpatialHashStreamingGrid()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSpatialHashStreamingGrid()"
  },
  {
    "label": "FSpatialHashStreamingGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpatialHashStreamingGrid(const FSpatialHashStreamingGrid& Other)"
  },
  {
    "label": "FSpatialHashStreamingGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpatialHashStreamingGrid(FSpatialHashStreamingGrid&& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSpatialHashStreamingGrid&)",
    "insertText": "operator(const FSpatialHashStreamingGrid& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSpatialHashStreamingGrid&)",
    "insertText": "operator(FSpatialHashStreamingGrid&& Other)"
  },
  {
    "label": "InjectExternalStreamingObjectGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectExternalStreamingObjectGrid(const FSpatialHashStreamingGrid& InExternalObjectStreamingGrid)"
  },
  {
    "label": "RemoveExternalStreamingObjectGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveExternalStreamingObjectGrid(const FSpatialHashStreamingGrid& InExternalObjectStreamingGrid)"
  },
  {
    "label": "InsertGridCell()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertGridCell(UWorldPartitionRuntimeCell* InGridCell, const FGridCellCoord& InGridCellCoords)"
  },
  {
    "label": "GetCellSize()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetCellSize(int32 Level)"
  },
  {
    "label": "GetCells()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCells(const FWorldPartitionStreamingQuerySource& QuerySource, TSet<const UWorldPartitionRuntimeCell*>& OutCells, bool bEnableZCulling, FWorldPartitionQueryCache* QueryCache = nullptr)"
  },
  {
    "label": "GetCells()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCells(const TArray<FWorldPartitionStreamingSource>& Sources, UWorldPartitionRuntimeHash::FStreamingSourceCells& OutActivateCells, UWorldPartitionRuntimeHash::FStreamingSourceCells& OutLoadCells, bool bEnableZCulling, const FWorldPartitionStreamingContext& Context)"
  },
  {
    "label": "GetNonSpatiallyLoadedCells()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNonSpatiallyLoadedCells(TSet<const UWorldPartitionRuntimeCell*>& OutActivateCells, TSet<const UWorldPartitionRuntimeCell*>& OutLoadCells, const FWorldPartitionStreamingContext& Context)"
  },
  {
    "label": "Draw2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw2D(const class UWorldPartitionRuntimeSpatialHash* Owner, const FBox2D& Region2D, const FBox2D& GridScreenBounds, TFunctionRef<FVector2D(const FVector2D&, bool)> WorldToScreen, FWorldPartitionDraw2DContext& DrawContext)"
  },
  {
    "label": "Draw3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw3D(const class UWorldPartitionRuntimeSpatialHash* Owner, const TArray<FWorldPartitionStreamingSource>& Sources, const FTransform& Transform)"
  },
  {
    "label": "ForEachRuntimeCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachRuntimeCell(TFunctionRef<bool(const UWorldPartitionRuntimeCell*)> Func)"
  },
  {
    "label": "GetGridHelper()",
    "kind": "Method",
    "detail": "Function (const FSquare2DGridHelper&)",
    "insertText": "GetGridHelper()"
  },
  {
    "label": "GetLoadingRange()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetLoadingRange()"
  },
  {
    "label": "DumpStateLog()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "DumpStateLog(FHierarchicalLogArchive& Ar)"
  },
  {
    "label": "ForEachRuntimeCell()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "ForEachRuntimeCell(const FGridCellCoord& Coords, TFunctionRef<void(const UWorldPartitionRuntimeCell*)> Func)"
  },
  {
    "label": "ForEachLayerCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachLayerCell(const FGridCellCoord& Coords, TFunctionRef<void(const FSpatialHashStreamingGridLayerCell*)> Func)"
  },
  {
    "label": "DrawStreamingSource2D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStreamingSource2D(const FBox2D& GridScreenBounds, const FSphericalSector& Shape, TFunctionRef<FVector2D(const FVector2D&)> WorldToScreen, const FColor& Color, FWorldPartitionDraw2DContext& DrawContext)"
  },
  {
    "label": "DrawStreamingSource3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawStreamingSource3D(UWorld* World, const FSphericalSector& Shape, const FTransform& Transform, const FColor& Color)"
  },
  {
    "label": "GetFilteredCellsForDebugDraw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredCellsForDebugDraw(const FSpatialHashStreamingGridLayerCell* LayerCell, TArray<const UWorldPartitionRuntimeCell*>& FilteredCells)"
  },
  {
    "label": "GetStreamingCellVisualizeMode()",
    "kind": "Method",
    "detail": "Function (EWorldPartitionRuntimeCellVisualizeMode)",
    "insertText": "GetStreamingCellVisualizeMode()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FSpatialHashRuntimeGrid() #if WITH_EDITORONLY_DATA : CellSize(12800) , LoadingRange(25600) , bBlockOnSlowStreaming(false) , Origin(FVector2D::ZeroVector) , Priority(0) , DebugColor(FLinearColor::MakeRandomColor()) , bClientOnlyVisible(false) , HLODLayer(nullptr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FSpatialHashRuntimeGrid& Other)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# endif } ;)",
    "insertText": "UCLASS(NotPlaceable)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() #if WITH_EDITOR virtual void DumpStateLog(FHierarchicalLogArchive& Ar)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: PRAGMA_DISABLE_DEPRECATION_WARNINGS UE_DEPRECATED(5.0, \"Use version that takes FObjectPreSaveContext instead.\") ENGINE_API virtual void PreSave(const class ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "PreSave()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "PreSave(FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "SetDefaultValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultValues()"
  },
  {
    "label": "SupportsHLODs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsHLODs()"
  },
  {
    "label": "PostSetupHLODActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSetupHLODActors(const UWorldPartition* InWorldPartition, const UWorldPartition::FSetupHLODActorsParams& InParams)"
  },
  {
    "label": "SetupHLODActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupHLODActors(const IStreamingGenerationContext* StreamingGenerationContext, const UWorldPartition::FSetupHLODActorsParams& Params)"
  },
  {
    "label": "IsValidGrid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidGrid(FName GridName, const UClass* ActorClass)"
  },
  {
    "label": "IsValidHLODLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidHLODLayer(FName GridName, const FSoftObjectPath& HLODLayerPath)"
  },
  {
    "label": "GetExternalStreamingObjectClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<URuntimeHashExternalStreamingObjectBase>)",
    "insertText": "GetExternalStreamingObjectClass()"
  },
  {
    "label": "GetCellNameString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetCellNameString(UWorld* InOuterWorld, FName InGridName, const FGridCellCoord& InCellGlobalCoord, const FDataLayersID& InDataLayerID, const FGuid& InContentBundleID, FString* OutInstanceSuffix = nullptr)"
  },
  {
    "label": "GetCellGuid()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "GetCellGuid(FName InGridName, int32 InCellSize, const FGridCellCoord& InCellGlobalCoord, const FDataLayersID& InDataLayerID, const FGuid& InContentBundleID)"
  },
  {
    "label": "GetPreviewGrids()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPreviewGrids()"
  },
  {
    "label": "SetPreviewGrids()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewGrids(bool bInPreviewGrids)"
  },
  {
    "label": "GetPreviewGridLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPreviewGridLevel()"
  },
  {
    "label": "SetPreviewGridLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewGridLevel(int32 InPreviewGridLevel)"
  },
  {
    "label": "ForEachStreamingCells()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "ForEachStreamingCells(TFunctionRef<bool(const UWorldPartitionRuntimeCell*)> Func)"
  },
  {
    "label": "ForEachStreamingCellsQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachStreamingCellsQuery(const FWorldPartitionStreamingQuerySource& QuerySource, TFunctionRef<bool(const UWorldPartitionRuntimeCell*)> Func, FWorldPartitionQueryCache* QueryCache = nullptr)"
  },
  {
    "label": "ForEachStreamingCellsSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachStreamingCellsSources(const TArray<FWorldPartitionStreamingSource>& Sources, TFunctionRef<bool(const UWorldPartitionRuntimeCell*, EStreamingSourceTargetState)> Func, const FWorldPartitionStreamingContext& Context = FWorldPartitionStreamingContext())"
  },
  {
    "label": "ComputeUpdateStreamingHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "ComputeUpdateStreamingHash()"
  },
  {
    "label": "InjectExternalStreamingObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InjectExternalStreamingObject(URuntimeHashExternalStreamingObjectBase* ExternalStreamingObject)"
  },
  {
    "label": "RemoveExternalStreamingObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveExternalStreamingObject(URuntimeHashExternalStreamingObjectBase* ExternalStreamingObject)"
  },
  {
    "label": "GetNumGrids()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumGrids()"
  },
  {
    "label": "GetCellCoordString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCellCoordString(const FGridCellCoord& InCellGlobalCoord)"
  },
  {
    "label": "ForEachStreamingGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachStreamingGrid(TFunctionRef<void(const FSpatialHashStreamingGrid&)> Func)"
  },
  {
    "label": "GetStreamingGridByName()",
    "kind": "Method",
    "detail": "Function (const FSpatialHashStreamingGrid*)",
    "insertText": "GetStreamingGridByName(FName InGridName)"
  },
  {
    "label": "ForEachStreamingGrid()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ForEachStreamingGrid(TFunctionRef<void(FSpatialHashStreamingGrid&)> Func)"
  },
  {
    "label": "ForEachStreamingGridBreakable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachStreamingGridBreakable(TFunctionRef<bool(const FSpatialHashStreamingGrid&)> Func)"
  },
  {
    "label": "GetStreamingPerformanceForCell()",
    "kind": "Method",
    "detail": "Function (EWorldPartitionStreamingPerformance)",
    "insertText": "GetStreamingPerformanceForCell(const UWorldPartitionRuntimeCell* Cell)"
  },
  {
    "label": "HasStreamingContent()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "HasStreamingContent()"
  },
  {
    "label": "StoreStreamingContentToExternalStreamingObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreStreamingContentToExternalStreamingObject(URuntimeHashExternalStreamingObjectBase* OutExternalStreamingObject)"
  },
  {
    "label": "FlushStreamingContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushStreamingContent()"
  },
  {
    "label": "GenerateStreaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateStreaming(class UWorldPartitionStreamingPolicy* StreamingPolicy, const IStreamingGenerationContext* StreamingGenerationContext, TArray<FString>* OutPackagesToGenerate = nullptr)"
  },
  {
    "label": "CreateFrom()",
    "kind": "Method",
    "detail": "Function (# endif private : # if WITH_EDITOR UWorldPartitionRuntimeSpatialHash*)",
    "insertText": "CreateFrom(const UWorldPartitionRuntimeHash* SrcHash)"
  },
  {
    "label": "SupportsWorldAssetStreaming()",
    "kind": "Method",
    "detail": "Function (TMap<FName,const FSpatialHashStreamingGrid*> NameToGridMapping ; bool bIsNameToGridMappingDirty ; bool)",
    "insertText": "SupportsWorldAssetStreaming(const FName& InTargetGrid)"
  },
  {
    "label": "RegisterWorldAssetStreaming()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "RegisterWorldAssetStreaming(const UWorldPartition::FRegisterWorldAssetStreamingParams& InParams)"
  },
  {
    "label": "UnregisterWorldAssetStreaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterWorldAssetStreaming(const FGuid& InWorldAssetStreamingGuid)"
  },
  {
    "label": "GetWorldAssetStreamingCells()",
    "kind": "Method",
    "detail": "Function (TArray<UWorldPartitionRuntimeCell*>)",
    "insertText": "GetWorldAssetStreamingCells(const FGuid& InWorldAssetStreamingGuid)"
  },
  {
    "label": "Draw2D()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Draw2D(FWorldPartitionDraw2DContext& DrawContext)"
  },
  {
    "label": "Draw3D()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Draw3D(const TArray<FWorldPartitionStreamingSource>& Sources)"
  },
  {
    "label": "ContainsRuntimeHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsRuntimeHash(const FString& Name)"
  },
  {
    "label": "IsStreaming3D()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStreaming3D()"
  },
  {
    "label": "GetShouldMergeStreamingSourceInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShouldMergeStreamingSourceInfo()"
  },
  {
    "label": "GetNameToGridMapping()",
    "kind": "Method",
    "detail": "Function (const TMap<FName,const FSpatialHashStreamingGrid*>&)",
    "insertText": "GetNameToGridMapping()"
  },
  {
    "label": "CreateStreamingGrid()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CreateStreamingGrid(const FSpatialHashRuntimeGrid& RuntimeGrid, const FSquare2DGridHelper& PartitionedActors, UWorldPartitionStreamingPolicy* StreamingPolicy, TArray<FString>* OutPackagesToGenerate = nullptr)"
  },
  {
    "label": "GetUseAlignedGridLevels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseAlignedGridLevels()"
  },
  {
    "label": "GetFilteredStreamingGrids()",
    "kind": "Method",
    "detail": "Function (# endif TArray<const FSpatialHashStreamingGrid*>)",
    "insertText": "GetFilteredStreamingGrids()"
  }
]