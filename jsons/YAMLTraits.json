[
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "MappingTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappingTraits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "MappingTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappingTraits"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "ScalarEnumerationTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarEnumerationTraits"
  },
  {
    "label": "ScalarEnumerationTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarEnumerationTraits"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "ScalarBitSetTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarBitSetTraits"
  },
  {
    "label": "ScalarBitSetTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarBitSetTraits"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "BlockScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BlockScalarTraits"
  },
  {
    "label": "BlockScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BlockScalarTraits"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "SequenceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SequenceTraits"
  },
  {
    "label": "SequenceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SequenceTraits"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "DocumentListTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DocumentListTraits"
  },
  {
    "label": "SameType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SameType"
  },
  {
    "label": "MissingTrait",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MissingTrait"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_ScalarEnumerationTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_ScalarEnumerationTraits"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_ScalarBitSetTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_ScalarBitSetTraits"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_ScalarTraits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_BlockScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_BlockScalarTraits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_MappingTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_MappingTraits"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_MappingValidateTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_MappingValidateTraits"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_SequenceMethodTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_SequenceMethodTraits"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "has_FlowTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has_FlowTraits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_FlowTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_FlowTraits"
  },
  {
    "label": "Fallback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Fallback"
  },
  {
    "label": "Derived",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Derived"
  },
  {
    "label": "has_SequenceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_SequenceTraits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "has_DocumentListTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "has_DocumentListTraits"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "missingTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "missingTraits"
  },
  {
    "label": "validatedMappingTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "validatedMappingTraits"
  },
  {
    "label": "unvalidatedMappingTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "unvalidatedMappingTraits"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "IO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IO"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "values",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "values"
  },
  {
    "label": "trying",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "trying"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "MappingNormalization",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappingNormalization"
  },
  {
    "label": "MappingNormalizationHeap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MappingNormalizationHeap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "builds",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "builds"
  },
  {
    "label": "Input",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Input"
  },
  {
    "label": "HNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HNode"
  },
  {
    "label": "EmptyHNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EmptyHNode"
  },
  {
    "label": "ScalarHNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScalarHNode"
  },
  {
    "label": "MapHNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MapHNode"
  },
  {
    "label": "SequenceHNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequenceHNode"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "Output",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Output"
  },
  {
    "label": "InState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "InState"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "_type",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_type"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "ScalarTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScalarTraits"
  },
  {
    "label": "SequenceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SequenceTraits"
  },
  {
    "label": "SequenceTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SequenceTraits"
  },
  {
    "label": "DocumentListTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DocumentListTraits"
  },
  {
    "label": "mapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "mapping(IO &io, T &fields)"
  },
  {
    "label": "validate()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "validate(IO &io, T &fields)"
  },
  {
    "label": "enumeration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "enumeration(IO &io, T &value)"
  },
  {
    "label": "bitset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bitset(IO &io, T &value)"
  },
  {
    "label": "StringRef()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "StringRef()"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const T &value, void *ctxt, llvm::raw_ostream &out)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef scalar, void *ctxt, T &value)"
  },
  {
    "label": "mustQuote()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "mustQuote(StringRef)"
  },
  {
    "label": "StringRef()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "StringRef()"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const T &Value, void *ctx, llvm::raw_ostream &Out)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef Scalar, void *ctxt, T &Value)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "size(IO &io, T &seq)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "size(IO &io, T &seq)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_enumeration, &U::enumeration>*)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_bitset, &U::bitset>*)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_input, &U::input> *,\n                   SameType<Signature_output, &U::output> *,\n                   SameType<Signature_mustQuote, &U::mustQuote> *)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_input, &U::input> *,\n                   SameType<Signature_output, &U::output> *)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_mapping, &U::mapping>*)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_validate, &U::validate>*)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_size, &U::size>*)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (char)",
    "insertText": "test(SameType<Signature_size, &U::size>*)"
  },
  {
    "label": "test()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "test(...)"
  },
  {
    "label": "IO()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "IO(void *Ctxt=nullptr)"
  },
  {
    "label": "setContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setContext(void *)"
  },
  {
    "label": "Buffer()",
    "kind": "Method",
    "detail": "Function (llvm::raw_string_ostream)",
    "insertText": "Buffer(Storage)"
  },
  {
    "label": "Buffer()",
    "kind": "Method",
    "detail": "Function (llvm::raw_string_ostream)",
    "insertText": "Buffer(Storage)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const bool &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, bool &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const StringRef &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, StringRef &)"
  },
  {
    "label": "needsQuotes()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "needsQuotes(S)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const std::string &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, std::string &)"
  },
  {
    "label": "needsQuotes()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "needsQuotes(S)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const uint8_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, uint8_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const uint16_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, uint16_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const uint32_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, uint32_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const uint64_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, uint64_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const int8_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, int8_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const int16_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, int16_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const int32_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, int32_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const int64_t &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, int64_t &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const float &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, float &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const double &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, double &)"
  },
  {
    "label": "TNorm()",
    "kind": "Method",
    "detail": "Function (new)",
    "insertText": "TNorm(io)"
  },
  {
    "label": "error()",
    "kind": "Method",
    "detail": "Function (std::error_code)",
    "insertText": "error()"
  },
  {
    "label": "anchor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "anchor()"
  },
  {
    "label": "isValidKey()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValidKey(StringRef key)"
  },
  {
    "label": "createHNodes()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Input::HNode>)",
    "insertText": "createHNodes(Node *node)"
  },
  {
    "label": "setError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setError(HNode *hnode, const Twine &message)"
  },
  {
    "label": "setError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setError(Node *node, const Twine &message)"
  },
  {
    "label": "setCurrentDocument()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "setCurrentDocument()"
  },
  {
    "label": "nextDocument()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "nextDocument()"
  },
  {
    "label": "Output()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Output(llvm::raw_ostream &, void *Ctxt = nullptr, int WrapColumn = 70)"
  },
  {
    "label": "beginDocuments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "beginDocuments()"
  },
  {
    "label": "preflightDocument()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "preflightDocument(unsigned)"
  },
  {
    "label": "postflightDocument()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "postflightDocument()"
  },
  {
    "label": "endDocuments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "endDocuments()"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(StringRef s)"
  },
  {
    "label": "outputUpToEndOfLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "outputUpToEndOfLine(StringRef s)"
  },
  {
    "label": "newLineCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "newLineCheck()"
  },
  {
    "label": "outputNewLine()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "outputNewLine()"
  },
  {
    "label": "paddedKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "paddedKey(StringRef key)"
  },
  {
    "label": "flowKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "flowKey(StringRef Key)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const Hex8 &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, Hex8 &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const Hex16 &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, Hex16 &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const Hex32 &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, Hex32 &)"
  },
  {
    "label": "output()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "output(const Hex64 &, void*, llvm::raw_ostream &)"
  },
  {
    "label": "input()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "input(StringRef, void*, Hex64 &)"
  }
]