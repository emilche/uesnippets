[
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FMaterialCompilationOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompilationOutput"
  },
  {
    "label": "FSharedShaderCompilerEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedShaderCompilerEnvironment"
  },
  {
    "label": "FMaterialCompileTargetParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialCompileTargetParameters"
  },
  {
    "label": "FStaticParameterSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticParameterSet"
  },
  {
    "label": "MaterialEmitHLSL()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" Templates / RefCounting . h \" class FMaterial ; class FMaterialCompilationOutput ; struct FSharedShaderCompilerEnvironment ; struct FMaterialCompileTargetParameters ; struct FStaticParameterSet ; bool)",
    "insertText": "MaterialEmitHLSL(const FMaterialCompileTargetParameters& InCompilerTarget, const FStaticParameterSet& InStaticParameters, FMaterial& InOutMaterial, FMaterialCompilationOutput& OutCompilationOutput, TRefCountPtr<FSharedShaderCompilerEnvironment>& OutMaterialEnvironment)"
  }
]