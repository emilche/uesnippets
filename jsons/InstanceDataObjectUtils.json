[
  {
    "label": "FFieldVariant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFieldVariant"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "FPropertyPathNameTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPathNameTree"
  },
  {
    "label": "FUnknownEnumNames",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUnknownEnumNames"
  },
  {
    "label": "IsInstanceDataObjectSupportEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # if WITH_EDITORONLY_DATA # define class FFieldVariant ; class FProperty ; class UClass ; class UObject ; class UStruct ; namespace UE { class FPropertyPathNameTree ; } namespace UE { class FUnknownEnumNames ; } namespace UE { bool)",
    "insertText": "IsInstanceDataObjectSupportEnabled()"
  },
  {
    "label": "IsInstanceDataObjectSupportEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInstanceDataObjectSupportEnabled(const UObject* Object)"
  },
  {
    "label": "StructContainsLooseProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StructContainsLooseProperties(const UStruct* Struct)"
  },
  {
    "label": "CanCreatePropertyBagPlaceholderTypeForImportClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreatePropertyBagPlaceholderTypeForImportClass(const UClass* ImportType)"
  },
  {
    "label": "IsClassOfInstanceDataObjectClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassOfInstanceDataObjectClass(UStruct* Class)"
  },
  {
    "label": "CreateInstanceDataObjectClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "CreateInstanceDataObjectClass(const FPropertyPathNameTree* PropertyTree, const FUnknownEnumNames* EnumNames, UClass* OwnerClass, UObject* Outer)"
  },
  {
    "label": "MarkPropertyValueSerialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkPropertyValueSerialized(const UStruct* Struct, void* StructData, const FProperty* Property, int32 ArrayIndex = 0)"
  },
  {
    "label": "WasPropertyValueSerialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WasPropertyValueSerialized(const UStruct* Struct, const void* StructData, const FProperty* Property, int32 ArrayIndex = 0)"
  },
  {
    "label": "CopyPropertyValueSerializedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPropertyValueSerializedData(const FFieldVariant& OldField, void* OldDataPtr, const FFieldVariant& NewField, void* NewDataPtr)"
  },
  {
    "label": "IsPropertyValueInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyValueInitialized(const UStruct* Struct, void* StructData, const FProperty* Property, int32 ArrayIndex = 0)"
  },
  {
    "label": "SetPropertyValueInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropertyValueInitialized(const UStruct* Struct, void* StructData, const FProperty* Property, int32 ArrayIndex = 0)"
  },
  {
    "label": "ClearPropertyValueInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPropertyValueInitialized(const UStruct* Struct, void* StructData, const FProperty* Property, int32 ArrayIndex = 0)"
  },
  {
    "label": "ResetPropertyValueInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPropertyValueInitialized(const UStruct* Struct, void* StructData)"
  }
]