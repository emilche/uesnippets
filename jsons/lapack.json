[
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (# ifndef LAPACK_H # define LAPACK_H # include \" blas . h \" # ifdef __cplusplus \" C \" { # endif int)",
    "insertText": "BLASFUNC(csymv) (const char *, const int *, const float *, const float *, const int *, const float *, const int *, const float *, float *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsymv) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsymv) (const char *, const int *, const double *, const double *, const int *, const double *, const int *, const double *, double *, const int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cspmv) (char *, int *, float *, float *, float *, int *, float *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zspmv) (char *, int *, double *, double *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xspmv) (char *, int *, double *, double *, double *, int *, double *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(csyr) (char *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zsyr) (char *, int *, double *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xsyr) (char *, int *, double *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cspr) (char *, int *, float *, float *, int *, float *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zspr) (char *, int *, double *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xspr) (char *, int *, double *, double *, int *, double *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgemt)(char *, int *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgemt)(char *, int *, int *, double *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgemt)(char *, int *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgemt)(char *, int *, int *, double *, double *, int *, double *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgema)(char *, char *, int *, int *, float *, float *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgema)(char *, char *, int *, int *, double *, double *, int *, double*, double *, int *, double*, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgema)(char *, char *, int *, int *, float *, float *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgema)(char *, char *, int *, int *, double *, double *, int *, double*, double *, int *, double*, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgems)(char *, char *, int *, int *, float *, float *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgems)(char *, char *, int *, int *, double *, double *, int *, double*, double *, int *, double*, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgems)(char *, char *, int *, int *, float *, float *, int *, float *, float *, int *, float *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgems)(char *, char *, int *, int *, double *, double *, int *, double*, double *, int *, double*, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgetf2)(int *, int *, float *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgetf2)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgetf2)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgetf2)(int *, int *, float *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgetf2)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgetf2)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgetrf)(int *, int *, float *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgetrf)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgetrf)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgetrf)(int *, int *, float *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgetrf)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgetrf)(int *, int *, double *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(slaswp)(int *, float *, int *, int *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dlaswp)(int *, double *, int *, int *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qlaswp)(int *, double *, int *, int *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(claswp)(int *, float *, int *, int *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zlaswp)(int *, double *, int *, int *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xlaswp)(int *, double *, int *, int *, int *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgetrs)(char *, int *, int *, float *, int *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgetrs)(char *, int *, int *, double *, int *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgetrs)(char *, int *, int *, double *, int *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgetrs)(char *, int *, int *, float *, int *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgetrs)(char *, int *, int *, double *, int *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgetrs)(char *, int *, int *, double *, int *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(sgesv)(int *, int *, float *, int *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dgesv)(int *, int *, double *, int *, int *, double*, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qgesv)(int *, int *, double *, int *, int *, double*, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cgesv)(int *, int *, float *, int *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zgesv)(int *, int *, double *, int *, int *, double*, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xgesv)(int *, int *, double *, int *, int *, double*, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(spotf2)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dpotf2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qpotf2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cpotf2)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zpotf2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xpotf2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(spotrf)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dpotrf)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qpotrf)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cpotrf)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zpotrf)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xpotrf)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(slauu2)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dlauu2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qlauu2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(clauu2)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zlauu2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xlauu2)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(slauum)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dlauum)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qlauum)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(clauum)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zlauum)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xlauum)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(strti2)(char *, char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtrti2)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtrti2)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctrti2)(char *, char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztrti2)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtrti2)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(strtri)(char *, char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dtrtri)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qtrtri)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ctrtri)(char *, char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(ztrtri)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xtrtri)(char *, char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(spotri)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(dpotri)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(qpotri)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(cpotri)(char *, int *, float *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(zpotri)(char *, int *, double *, int *, int *)"
  },
  {
    "label": "BLASFUNC()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "BLASFUNC(xpotri)(char *, int *, double *, int *, int *)"
  }
]