[
  {
    "label": "CallStatsObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CallStatsObserver"
  },
  {
    "label": "NackSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NackSender"
  },
  {
    "label": "KeyFrameRequestSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KeyFrameRequestSender"
  },
  {
    "label": "LossNotificationSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LossNotificationSender"
  },
  {
    "label": "OnRttUpdate()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_INCLUDE_MODULE_COMMON_TYPES_H_ # define MODULES_INCLUDE_MODULE_COMMON_TYPES_H_ # include<stdint . h> # include<vector> namespace webrtc { class CallStatsObserver { public : void)",
    "insertText": "OnRttUpdate(int64_t avg_rtt_ms, int64_t max_rtt_ms)"
  },
  {
    "label": "CallStatsObserver()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "CallStatsObserver()"
  },
  {
    "label": "SendNack()",
    "kind": "Method",
    "detail": "Function (} } ; class NackSender { public : void)",
    "insertText": "SendNack(const std::vector<uint16_t>& sequence_numbers, bool buffering_allowed)"
  },
  {
    "label": "NackSender()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "NackSender()"
  },
  {
    "label": "RequestKeyFrame()",
    "kind": "Method",
    "detail": "Function (} } ; class KeyFrameRequestSender { public : void)",
    "insertText": "RequestKeyFrame()"
  },
  {
    "label": "KeyFrameRequestSender()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "KeyFrameRequestSender()"
  },
  {
    "label": "LossNotificationSender()",
    "kind": "Method",
    "detail": "Function (} } ; class LossNotificationSender { public : ~)",
    "insertText": "LossNotificationSender()"
  },
  {
    "label": "SendLossNotification()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SendLossNotification(uint16_t last_decoded_seq_num, uint16_t last_received_seq_num, bool decodability_flag, bool buffering_allowed)"
  }
]