[
  {
    "label": "FAllInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllInputs"
  },
  {
    "label": "FSimModuleTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSimModuleTree"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "FMotorSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SimModule / TorqueSimModule . h \" namespace Chaos { struct FAllInputs ; class FSimModuleTree ; struct FMotorSettings {)",
    "insertText": "FMotorSettings() : MaxRPM(1.0f) , MaxTorque(100.0f) , EngineInertia(1.0f)"
  },
  {
    "label": "DEFINE_CHAOSSIMTYPENAME()",
    "kind": "Method",
    "detail": "Function (} float MaxRPM ; float MaxTorque ; float EngineInertia ; } ; class FMotorSimModule : public FTorqueSimModule,public TSimModuleSettings<FMotorSettings>,public TSimulationModuleTypeable<FMotorSimModule> { public :)",
    "insertText": "DEFINE_CHAOSSIMTYPENAME(FMotorSimModule)"
  },
  {
    "label": "FMotorSimModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMotorSimModule(const FMotorSettings& Settings)"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (const FString)",
    "insertText": "GetDebugName()"
  },
  {
    "label": "Simulate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Simulate(float DeltaTime, const FAllInputs& Inputs, FSimModuleTree& VehicleModuleSystem)"
  }
]