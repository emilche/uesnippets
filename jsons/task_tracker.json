[
  {
    "label": "ConditionVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConditionVariable"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "RegisteredTaskSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RegisteredTaskSource"
  },
  {
    "label": "State",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "State"
  },
  {
    "label": "TaskTracker()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TaskTracker()"
  },
  {
    "label": "StartShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartShutdown()"
  },
  {
    "label": "CompleteShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompleteShutdown()"
  },
  {
    "label": "FlushForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushForTesting()"
  },
  {
    "label": "FlushAsyncForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncForTesting(OnceClosure flush_callback)"
  },
  {
    "label": "SetCanRunPolicy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanRunPolicy(CanRunPolicy can_run_policy)"
  },
  {
    "label": "WillPostTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillPostTask(Task* task, TaskShutdownBehavior shutdown_behavior)"
  },
  {
    "label": "WillPostTaskNow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WillPostTaskNow(const Task& task, TaskPriority priority)"
  },
  {
    "label": "RegisterTaskSource()",
    "kind": "Method",
    "detail": "Function (RegisteredTaskSource)",
    "insertText": "RegisterTaskSource(\n      scoped_refptr<TaskSource> task_source)"
  },
  {
    "label": "RunAndPopNextTask()",
    "kind": "Method",
    "detail": "Function (RegisteredTaskSource)",
    "insertText": "RunAndPopNextTask(RegisteredTaskSource task_source)"
  },
  {
    "label": "RunTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunTask(Task task,\n                       TaskSource* task_source,\n                       const TaskTraits& traits)"
  },
  {
    "label": "BeginCompleteShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCompleteShutdown(base::WaitableEvent& shutdown_event)"
  },
  {
    "label": "PerformShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformShutdown()"
  },
  {
    "label": "BeforeQueueTaskSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeforeQueueTaskSource(TaskShutdownBehavior shutdown_behavior)"
  },
  {
    "label": "BeforeRunTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeforeRunTask(TaskShutdownBehavior shutdown_behavior)"
  },
  {
    "label": "AfterRunTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AfterRunTask(TaskShutdownBehavior shutdown_behavior)"
  },
  {
    "label": "UnregisterTaskSource()",
    "kind": "Method",
    "detail": "Function (scoped_refptr<TaskSource>)",
    "insertText": "UnregisterTaskSource(\n      scoped_refptr<TaskSource> task_source)"
  },
  {
    "label": "DecrementNumItemsBlockingShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecrementNumItemsBlockingShutdown()"
  },
  {
    "label": "DecrementNumIncompleteTaskSources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecrementNumIncompleteTaskSources()"
  },
  {
    "label": "InvokeFlushCallbacksForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvokeFlushCallbacksForTesting()"
  },
  {
    "label": "RunContinueOnShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunContinueOnShutdown(Task& task,\n                             const TaskTraits& traits,\n                             TaskSource* task_source,\n                             const SequenceToken& token)"
  },
  {
    "label": "RunSkipOnShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunSkipOnShutdown(Task& task,\n                         const TaskTraits& traits,\n                         TaskSource* task_source,\n                         const SequenceToken& token)"
  },
  {
    "label": "RunBlockShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunBlockShutdown(Task& task,\n                        const TaskTraits& traits,\n                        TaskSource* task_source,\n                        const SequenceToken& token)"
  },
  {
    "label": "RunTaskWithShutdownBehavior()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunTaskWithShutdownBehavior(Task& task,\n                                   const TaskTraits& traits,\n                                   TaskSource* task_source,\n                                   const SequenceToken& token)"
  },
  {
    "label": "RunTaskImpl()",
    "kind": "Method",
    "detail": "Function (NOT_TAIL_CALLED)",
    "insertText": "RunTaskImpl(Task& task,\n                                   const TaskTraits& traits,\n                                   TaskSource* task_source,\n                                   const SequenceToken& token)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (flush_callbacks_for_testing_)",
    "insertText": "GUARDED_BY(flush_lock_)"
  },
  {
    "label": "GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (shutdown_event_)",
    "insertText": "GUARDED_BY(shutdown_lock_)"
  }
]