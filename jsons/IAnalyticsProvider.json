[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "IAnalyticsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalyticsProvider"
  },
  {
    "label": "StartSession()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnalyticsEventAttribute . h \" # include \" CoreMinimal . h \" class Error ; class IAnalyticsProvider { public : bool)",
    "insertText": "StartSession()"
  },
  {
    "label": "StartSession()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StartSession(const TArray<FAnalyticsEventAttribute>& Attributes)"
  },
  {
    "label": "StartSession()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartSession(const FAnalyticsEventAttribute& Attribute)"
  },
  {
    "label": "StartSession()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "StartSession(const FString& ParamName, const FString& ParamValue)"
  },
  {
    "label": "EndSession()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EndSession()"
  },
  {
    "label": "GetSessionID()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSessionID()"
  },
  {
    "label": "SetSessionID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSessionID(const FString& InSessionID)"
  },
  {
    "label": "FlushEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushEvents()"
  },
  {
    "label": "SetUserID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUserID(const FString& InUserID)"
  },
  {
    "label": "GetUserID()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetUserID()"
  },
  {
    "label": "SetDefaultEventAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultEventAttributes(TArray<FAnalyticsEventAttribute>&& Attributes)"
  },
  {
    "label": "GetDefaultEventAttributesSafe()",
    "kind": "Method",
    "detail": "Function (TArray<FAnalyticsEventAttribute>)",
    "insertText": "GetDefaultEventAttributesSafe()"
  },
  {
    "label": "GetDefaultEventAttributeCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDefaultEventAttributeCount()"
  },
  {
    "label": "GetDefaultEventAttribute()",
    "kind": "Method",
    "detail": "Function (FAnalyticsEventAttribute)",
    "insertText": "GetDefaultEventAttribute(int AttributeIndex)"
  },
  {
    "label": "SetBuildInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBuildInfo(const FString& InBuildInfo)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"BuildInfo\"), TArray<FAnalyticsEventAttribute> { FAnalyticsEventAttribute(TEXT(\"BuildInfo\"), InBuildInfo) })"
  },
  {
    "label": "SetGender()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetGender(const FString& InGender)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Gender\"), TArray<FAnalyticsEventAttribute> { FAnalyticsEventAttribute(TEXT(\"Gender\"), InGender) })"
  },
  {
    "label": "SetLocation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetLocation(const FString& InLocation)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Location\"), TArray<FAnalyticsEventAttribute> { FAnalyticsEventAttribute(TEXT(\"Location\"), InLocation) })"
  },
  {
    "label": "SetAge()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAge(const int32 InAge)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Age\"), TArray<FAnalyticsEventAttribute> { FAnalyticsEventAttribute(TEXT(\"Age\"), InAge) })"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordEvent(const FString& EventName, const TArray<FAnalyticsEventAttribute>& Attributes)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(const FString& EventName)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(EventName, TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordEvent(const FString& EventName, const FAnalyticsEventAttribute& Attribute)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(EventName, TArray<FAnalyticsEventAttribute> { Attribute })"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordEvent(const FString& EventName, const FString& ParamName, const FString& ParamValue)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(EventName, TArray<FAnalyticsEventAttribute> { FAnalyticsEventAttribute(ParamName, ParamValue) })"
  },
  {
    "label": "RecordItemPurchase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordItemPurchase(const FString& ItemId, const FString& Currency, int PerItemCost, int ItemQuantity)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TArray<FAnalyticsEventAttribute> Params ; Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"Currency\"), Currency))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"PerItemCost\"), PerItemCost))"
  },
  {
    "label": "RecordItemPurchase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordItemPurchase(ItemId, ItemQuantity, Params)"
  },
  {
    "label": "RecordItemPurchase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordItemPurchase(const FString& ItemId, int ItemQuantity, const TArray<FAnalyticsEventAttribute>& EventAttrs)"
  },
  {
    "label": "Params()",
    "kind": "Method",
    "detail": "Function (TArray<FAnalyticsEventAttribute>)",
    "insertText": "Params(EventAttrs)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"ItemId\"), ItemId))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"ItemQuantity\"), ItemQuantity))"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Item Purchase\"), Params)"
  },
  {
    "label": "RecordItemPurchase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordItemPurchase(const FString& ItemId, int ItemQuantity)"
  },
  {
    "label": "RecordItemPurchase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordItemPurchase(ItemId, ItemQuantity, TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "RecordCurrencyPurchase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordCurrencyPurchase(const FString& GameCurrencyType, int GameCurrencyAmount, const FString& RealCurrencyType, float RealMoneyCost, const FString& PaymentProvider)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TArray<FAnalyticsEventAttribute> Params ; Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"RealCurrencyType\"), RealCurrencyType))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"RealMoneyCost\"), RealMoneyCost))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"PaymentProvider\"), PaymentProvider))"
  },
  {
    "label": "RecordCurrencyPurchase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordCurrencyPurchase(GameCurrencyType, GameCurrencyAmount, Params)"
  },
  {
    "label": "RecordCurrencyPurchase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordCurrencyPurchase(const FString& GameCurrencyType, int GameCurrencyAmount, const TArray<FAnalyticsEventAttribute>& EventAttrs)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"GameCurrencyType\"), GameCurrencyType))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"GameCurrencyAmount\"), GameCurrencyAmount))"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Currency Purchase\"), Params)"
  },
  {
    "label": "RecordCurrencyPurchase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordCurrencyPurchase(const FString& GameCurrencyType, int GameCurrencyAmount)"
  },
  {
    "label": "RecordCurrencyPurchase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordCurrencyPurchase(GameCurrencyType, GameCurrencyAmount, TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "RecordCurrencyGiven()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordCurrencyGiven(const FString& GameCurrencyType, int GameCurrencyAmount)"
  },
  {
    "label": "RecordCurrencyGiven()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordCurrencyGiven(GameCurrencyType, GameCurrencyAmount, TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "RecordCurrencyGiven()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordCurrencyGiven(const FString& GameCurrencyType, int GameCurrencyAmount, const TArray<FAnalyticsEventAttribute>& EventAttrs)"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Currency Given\"), Params)"
  },
  {
    "label": "RecordError()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordError(const FString& Error, const TArray<FAnalyticsEventAttribute>& EventAttrs)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"Error\"), *Error))"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Game Error\"), Params)"
  },
  {
    "label": "RecordError()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordError(const FString& Error)"
  },
  {
    "label": "RecordError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordError(Error, TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "RecordProgress()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordProgress(const FString& ProgressType, const TArray<FString>& ProgressHierarchy, const TArray<FAnalyticsEventAttribute>& EventAttrs)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"ProgressType\"), *ProgressType))"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (FString Hierarchy ;)",
    "insertText": "for(int32 Index = 0; Index < ProgressHierarchy.Num(); Index++)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Hierarchy + = ProgressHierarchy [ Index ] ;)",
    "insertText": "if(Index + 1 < ProgressHierarchy.Num())"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (Hierarchy + =)",
    "insertText": "TEXT(\".\")"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} } Params .)",
    "insertText": "Add(FAnalyticsEventAttribute(TEXT(\"ProgressHierarchy\"), *Hierarchy))"
  },
  {
    "label": "RecordEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordEvent(TEXT(\"Progression\"), Params)"
  },
  {
    "label": "RecordProgress()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordProgress(const FString& ProgressType, const FString& ProgressHierarchy)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TArray<FString> Hierarchy ; Hierarchy .)",
    "insertText": "Add(ProgressHierarchy)"
  },
  {
    "label": "RecordProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordProgress(ProgressType, Hierarchy, TArray<FAnalyticsEventAttribute>())"
  },
  {
    "label": "RecordProgress()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RecordProgress(const FString& ProgressType, const FString& ProgressHierarchy, const TArray<FAnalyticsEventAttribute>& EventAttrs)"
  },
  {
    "label": "RecordProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordProgress(ProgressType, Hierarchy, EventAttrs)"
  },
  {
    "label": "IAnalyticsProvider()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "IAnalyticsProvider()"
  }
]