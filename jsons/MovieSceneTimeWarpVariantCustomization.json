[
  {
    "label": "EVisibility",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EVisibility"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FMovieSceneTimeWarpVariantCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMovieSceneTimeWarpVariantCustomization"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IPropertyTypeCustomization . h \" # include \" Types / SlateEnums . h \" struct EVisibility ; class FText ; class UClass ; class SWidget ; namespace UE::MovieScene { class FMovieSceneTimeWarpVariantCustomization : public IPropertyTypeCustomization { public : void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> StructPropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> StructPropertyHandle, IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& StructCustomizationUtils)"
  },
  {
    "label": "IsFixed()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsFixed()"
  },
  {
    "label": "SetFixed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFixed()"
  },
  {
    "label": "SetFixedPlayRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFixedPlayRate(double InValue)"
  },
  {
    "label": "OnCommitFixedPlayRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCommitFixedPlayRate(double InValue, ETextCommit::Type Type = ETextCommit::Default)"
  },
  {
    "label": "GetTypeComboLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTypeComboLabel()"
  },
  {
    "label": "GetFixedVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetFixedVisibility()"
  },
  {
    "label": "BuildTypePickerMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildTypePickerMenu()"
  },
  {
    "label": "ChangeClassType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeClassType(UClass* InClass)"
  }
]