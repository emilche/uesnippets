[
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UIrisObjectReferencePackageMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UIrisObjectReferencePackageMap"
  },
  {
    "label": "FAnalyticsEventAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalyticsEventAttribute"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActorReplicationParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorReplicationParams"
  },
  {
    "label": "UEngineReplicationBridge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngineReplicationBridge"
  },
  {
    "label": "ShouldUseIrisReplication()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / ReplicationSystem / ObjectReplicationBridge . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / ObjectPtr . h \" # include \" EngineReplicationBridge . generated . h \" class UNetDriver ; class UIrisObjectReferencePackageMap ; struct FAnalyticsEventAttribute ; # if UE_WITH_IRIS class UActorComponent ; class UWorld ; namespace UE::Net { enum class ENetRefHandleError : uint32 ; } namespace UE::Net { bool)",
    "insertText": "ShouldUseIrisReplication(const UObject* Actor)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} struct FActorReplicationParams { bool bOverrideDynamicFilterConfig = false ; FName ExplicitDynamicFilterName ; } ; # endif)",
    "insertText": "UCLASS(Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UEngineReplicationBridge()"
  },
  {
    "label": "UEngineReplicationBridge()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "UEngineReplicationBridge()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# if UE_WITH_IRIS UEngineReplicationBridge*)",
    "insertText": "Create(UNetDriver* NetDriver)"
  },
  {
    "label": "SetNetDriver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetDriver(UNetDriver* const InNetDriver)"
  },
  {
    "label": "GetNetDriver()",
    "kind": "Method",
    "detail": "Function (UNetDriver*)",
    "insertText": "GetNetDriver()"
  },
  {
    "label": "StopReplicatingActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopReplicatingActor(AActor* Actor, EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "StartReplicatingComponent()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "StartReplicatingComponent(FNetRefHandle RootObjectHandle, UActorComponent* ActorComponent)"
  },
  {
    "label": "StartReplicatingSubObject()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "StartReplicatingSubObject(UObject* SubObject, const FSubObjectReplicationParams& Params)"
  },
  {
    "label": "StopReplicatingComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopReplicatingComponent(UActorComponent* ActorComponent, EEndReplicationFlags EndReplicationFlags = EEndReplicationFlags::None)"
  },
  {
    "label": "GetObjectReferencePackageMap()",
    "kind": "Method",
    "detail": "Function (UIrisObjectReferencePackageMap*)",
    "insertText": "GetObjectReferencePackageMap()"
  },
  {
    "label": "ActorChangedLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ActorChangedLevel(const AActor* Actor, const ULevel* PreviousLevel)"
  },
  {
    "label": "OnNetUpdateFrequencyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNetUpdateFrequencyChanged(const AActor* Actor)"
  },
  {
    "label": "WakeUpObjectInstantiatedFromRemote()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeUpObjectInstantiatedFromRemote(AActor* Actor)"
  },
  {
    "label": "ConsumeNetMetrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumeNetMetrics(TArray<FAnalyticsEventAttribute>& OutAttrs)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Initialize(UReplicationSystem* ReplicationSystem)"
  },
  {
    "label": "Deinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinitialize()"
  },
  {
    "label": "OnSubObjectCreatedFromReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSubObjectCreatedFromReplication(FNetRefHandle SubObjectHandle)"
  },
  {
    "label": "DestroyInstanceFromRemote()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyInstanceFromRemote(const FDestroyInstanceParams& Params)"
  },
  {
    "label": "GetInitialDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInitialDependencies(FNetRefHandle Handle, FNetDependencyInfoArray& OutDependencies)"
  },
  {
    "label": "RemapPathForPIE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemapPathForPIE(uint32 ConnectionId, FString& Path, bool bReading)"
  },
  {
    "label": "ObjectLevelHasFinishedLoading()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ObjectLevelHasFinishedLoading(UObject* Object)"
  },
  {
    "label": "IsAllowedToDestroyInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllowedToDestroyInstance(const UObject* Instance)"
  },
  {
    "label": "OnProtocolMismatchDetected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProtocolMismatchDetected(FNetRefHandle ObjectHandle)"
  },
  {
    "label": "OnProtocolMismatchReported()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProtocolMismatchReported(FNetRefHandle RefHandle, uint32 ConnectionId)"
  },
  {
    "label": "GetPollFrequencyOfRootObject()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetPollFrequencyOfRootObject(const UObject* ReplicatedObject)"
  },
  {
    "label": "PrintConnectionInfo()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FString)",
    "insertText": "PrintConnectionInfo(uint32 ConnectionId)"
  },
  {
    "label": "OnMaxTickRateChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnMaxTickRateChanged(UNetDriver* InNetDriver, int32 NewMaxTickRate, int32 OldMaxTickRate)"
  },
  {
    "label": "AddActorToLevelGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActorToLevelGroup(const AActor* Actor)"
  }
]