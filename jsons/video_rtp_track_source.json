[
  {
    "label": "VideoRtpTrackSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoRtpTrackSource"
  },
  {
    "label": "Callback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Callback"
  },
  {
    "label": "Callback()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_VIDEO_RTP_TRACK_SOURCE_H_ # define PC_VIDEO_RTP_TRACK_SOURCE_H_ # include<vector> # include \" api / sequence_checker . h \" # include \" api / video / recordable_encoded_frame . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" api / video / video_source_interface . h \" # include \" media / base / video_broadcaster . h \" # include \" pc / video_track_source . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / system / no_unique_address . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { class VideoRtpTrackSource : public VideoTrackSource { public : class Callback { public : ~)",
    "insertText": "Callback()"
  },
  {
    "label": "OnGenerateKeyFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGenerateKeyFrame()"
  },
  {
    "label": "OnEncodedSinkEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEncodedSinkEnabled(bool enable)"
  },
  {
    "label": "VideoRtpTrackSource()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "VideoRtpTrackSource(Callback* callback)"
  },
  {
    "label": "VideoRtpTrackSource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VideoRtpTrackSource(const VideoRtpTrackSource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (VideoRtpTrackSource&)",
    "insertText": "operator(const VideoRtpTrackSource&)"
  },
  {
    "label": "ClearCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCallback()"
  },
  {
    "label": "BroadcastRecordableEncodedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastRecordableEncodedFrame(const RecordableEncodedFrame& frame)"
  },
  {
    "label": "source()",
    "kind": "Method",
    "detail": "Function (rtc::VideoSourceInterface<VideoFrame>*)",
    "insertText": "source()"
  },
  {
    "label": "sink()",
    "kind": "Method",
    "detail": "Function (rtc::VideoSinkInterface<VideoFrame>*)",
    "insertText": "sink()"
  },
  {
    "label": "SupportsEncodedOutput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsEncodedOutput()"
  },
  {
    "label": "GenerateKeyFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateKeyFrame()"
  },
  {
    "label": "AddEncodedSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEncodedSink(rtc::VideoSinkInterface<RecordableEncodedFrame>* sink)"
  },
  {
    "label": "RemoveEncodedSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveEncodedSink(rtc::VideoSinkInterface<RecordableEncodedFrame>* sink)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : RTC_NO_UNIQUE_ADDRESS SequenceChecker worker_sequence_checker_ ; rtc::VideoBroadcaster broadcaster_ ; Mutex mu_ ; std::vector<rtc::VideoSinkInterface<RecordableEncodedFrame>*> encoded_sinks_)",
    "insertText": "RTC_GUARDED_BY(mu_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (Callback* callback_)",
    "insertText": "RTC_GUARDED_BY(worker_sequence_checker_)"
  }
]