[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FWindowsEventLogOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsEventLogOutputDevice"
  },
  {
    "label": "FWindowsEventLogOutputDevice()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / OutputDevice . h \" # include \" Windows / MinimalWindowsApi . h \" class FName ; class FWindowsEventLogOutputDevice : public FOutputDevice { Windows::HANDLE EventLog ; public :)",
    "insertText": "FWindowsEventLogOutputDevice()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* Buffer, ELogVerbosity::Type Verbosity, const class FName& Category)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush(void)"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown(void)"
  }
]