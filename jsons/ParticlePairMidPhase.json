[
  {
    "label": "FChaosVDDataWrapperUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosVDDataWrapperUtils"
  },
  {
    "label": "FCollisionConstraintAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionConstraintAllocator"
  },
  {
    "label": "FParticlePairMidPhaseCollisionKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhaseCollisionKey"
  },
  {
    "label": "EParticlePairMidPhaseType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticlePairMidPhaseType"
  },
  {
    "label": "FSingleShapePairCollisionDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSingleShapePairCollisionDetector"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FShapePairParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShapePairParticlePairMidPhase"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "FLeafImplicitObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLeafImplicitObject"
  },
  {
    "label": "FGenericParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericParticlePairMidPhase"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "FSphereApproximationParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSphereApproximationParticlePairMidPhase"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "FSingleShapePairCollisionDetector()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FSingleShapePairCollisionDetector(\n\t\t\tFGeometryParticleHandle* InParticle0,\n\t\t\tconst FPerShapeData* InShape0,\n\t\t\tFGeometryParticleHandle* InParticle1,\n\t\t\tconst FPerShapeData* InShape1,\n\t\t\tconst Private::FCollisionSortKey& InCollisionSortKey,\n\t\t\tconst EContactShapesType InShapePairType, \n\t\t\tFParticlePairMidPhase& MidPhase)"
  },
  {
    "label": "FSingleShapePairCollisionDetector()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FSingleShapePairCollisionDetector(FSingleShapePairCollisionDetector&& R)"
  },
  {
    "label": "GenerateCollision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateCollision(\n\t\t\tconst FRealSingle Dt,\n\t\t\tconst FRealSingle CullDistance,\n\t\t\tconst FVec3f& RelativeMovement,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionCCD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateCollisionCCD(\n\t\t\tconst FRealSingle Dt,\n\t\t\tconst FRealSingle CullDistance,\n\t\t\tconst FVec3f& RelativeMovement,\n\t\t\tconst bool bEnableCCDSweep,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "WakeCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeCollision(\n\t\t\tconst int32 SleepEpoch, \n\t\t\tconst int32 CurrentEpoch)"
  },
  {
    "label": "SetCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollision(\n\t\t\tconst FPBDCollisionConstraint& Constraint, \n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionImpl()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateCollisionImpl(\n\t\t\tconst FRealSingle Dt,\n\t\t\tconst FRealSingle CullDistance,\n\t\t\tconst FVec3f& RelativeMovement,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionCCDImpl()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateCollisionCCDImpl(\n\t\t\tconst FRealSingle Dt,\n\t\t\tconst FRealSingle CullDistance,\n\t\t\tconst FVec3f& RelativeMovement,\n\t\t\tconst bool bEnableCCDSweep,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionProbeImpl()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GenerateCollisionProbeImpl(\n\t\t\tconst FRealSingle Dt,\n\t\t\tconst FRealSingle CullDistance,\n\t\t\tconst FVec3f& RelativeMovement,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "DoBoundsOverlap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoBoundsOverlap(\n\t\t\tconst FRealSingle CullDistance, \n\t\t\tconst FVec3f& RelativeMovement,\n\t\t\tconst int32 CurrentEpoch)"
  },
  {
    "label": "CreateConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateConstraint(\n\t\t\tconst FReal CullDistance, \n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "CalculateMidPhaseType()",
    "kind": "Method",
    "detail": "Function (EParticlePairMidPhaseType)",
    "insertText": "CalculateMidPhaseType(FGeometryParticleHandle* InParticle0, FGeometryParticleHandle* InParticle1)"
  },
  {
    "label": "FParticlePairMidPhase()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FParticlePairMidPhase(const EParticlePairMidPhaseType InMidPhaseType)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(\n\t\t\tFGeometryParticleHandle* InParticle0,\n\t\t\tFGeometryParticleHandle* InParticle1,\n\t\t\tconst Private::FCollisionParticlePairKey& InKey,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "SetIsSleeping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSleeping(const bool bInIsSleeping, const int32 CurrentEpoch)"
  },
  {
    "label": "DetachParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DetachParticle(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ResetModifications()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetModifications()"
  },
  {
    "label": "GenerateCollisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCollisions(\n\t\t\tconst FReal CullDistance,\n\t\t\tconst FReal Dt,\n\t\t\tconst FCollisionContext& Context)"
  },
  {
    "label": "InjectCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InjectCollision(const FPBDCollisionConstraint& Constraint, const FCollisionContext& Context)"
  },
  {
    "label": "VisitCollisions()",
    "kind": "Method",
    "detail": "Function (ECollisionVisitorResult)",
    "insertText": "VisitCollisions(const TLambda& Visitor, const ECollisionVisitorFlags VisitFlags = ECollisionVisitorFlags::VisitDefault)"
  },
  {
    "label": "ShouldEnableCCDSweep()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldEnableCCDSweep(const FReal Dt)"
  },
  {
    "label": "InitThresholds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitThresholds()"
  },
  {
    "label": "FShapePairParticlePairMidPhase()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FShapePairParticlePairMidPhase()"
  },
  {
    "label": "TryAddShapePair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryAddShapePair(\n\t\t\tconst FPerShapeData* Shape0, \n\t\t\tconst int32 ShapeIndex0, \n\t\t\tconst FPerShapeData* Shape1, \n\t\t\tconst int32 ShapeIndex1)"
  },
  {
    "label": "FGenericParticlePairMidPhase()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FGenericParticlePairMidPhase()"
  },
  {
    "label": "GenerateCollisionsBVHBVH()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCollisionsBVHBVH(\n\t\t\tFGeometryParticleHandle* ParticleA, const Private::FImplicitBVH* BVHA,\n\t\t\tFGeometryParticleHandle* ParticleB, const Private::FImplicitBVH* BVHB,\n\t\t\tconst FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionsBVHImplicitHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCollisionsBVHImplicitHierarchy(\n\t\t\tFGeometryParticleHandle* ParticleA, const Private::FImplicitBVH* BVHA,\n\t\t\tFGeometryParticleHandle* ParticleB, const FImplicitObject* RootImplicitB, const Private::FConvexOptimizer* ConvexOptimizerB,\n\t\t\tconst FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionsImplicitHierarchyImplicitHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCollisionsImplicitHierarchyImplicitHierarchy(\n\t\t\tFGeometryParticleHandle* ParticleA, const FImplicitObject* RootImplicitA, const Private::FConvexOptimizer* ConvexOptimizerA,\n\t\t\tFGeometryParticleHandle* ParticleB, const FImplicitObject* RootImplicitB, const Private::FConvexOptimizer* ConvexOptimizerB,\n\t\t\tconst FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionsBVHImplicitLeaf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCollisionsBVHImplicitLeaf(\n\t\t\tFGeometryParticleHandle* ParticleA, const Private::FImplicitBVH* BVHA,\n\t\t\tFGeometryParticleHandle* ParticleB, const FImplicitObject* ImplicitB, const FShapeInstance* ShapeInstanceB, const FRigidTransform3& RelativeTransformB, const int32 LeafObjectIndexB,\n\t\t\tconst FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "GenerateCollisionsImplicitLeafImplicitLeaf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCollisionsImplicitLeafImplicitLeaf(\n\t\t\tFGeometryParticleHandle* ParticleA, const FImplicitObject* ImplicitA, const FShapeInstance* ShapeInstanceA, const FRigidTransform3 ParticleWorldTransformA, const FRigidTransform3& RelativeTransformA, const int32 LeafObjectIndexA,\n\t\t\tFGeometryParticleHandle* ParticleB, const FImplicitObject* ImplicitB, const FShapeInstance* ShapeInstanceB, const FRigidTransform3 ParticleWorldTransformB, const FRigidTransform3& RelativeTransformB, const int32 LeafObjectIndexB,\n\t\t\tconst FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "DoBoundsOverlap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoBoundsOverlap(\n\t\t\tconst FImplicitObject* ImplicitA, const FRigidTransform3& ParticleWorldTransformA, const FRigidTransform3& ShapeRelativeTransformA,\n\t\t\tconst FImplicitObject* ImplicitB, const FRigidTransform3& ParticleWorldTransformB, const FRigidTransform3& ShapeRelativeTransformB,\n\t\t\tconst Private::FImplicitBoundsTestFlags BoundsTestFlags, const FRealSingle DistanceCheckSize, const FReal CullDistance)"
  },
  {
    "label": "ProcessNewConstraints()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessNewConstraints(const FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "PruneConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PruneConstraints(const int32 CurrentEpoch)"
  },
  {
    "label": "UpdateCollision()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCollision(FPBDCollisionConstraint* Constraint, const FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "UpdateCollisionCCD()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCollisionCCD( FPBDCollisionConstraint* Constraint, const FReal CullDistance, const FReal Dt, const FCollisionContext& Context)"
  },
  {
    "label": "FSphereApproximationParticlePairMidPhase()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FSphereApproximationParticlePairMidPhase()"
  },
  {
    "label": "InitSphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSphere(const FGeometryParticleHandle* InParticle, FImplicitSphere3& OutSphere)"
  }
]