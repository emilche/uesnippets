[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Traits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Traits"
  },
  {
    "label": "ScopedGDIObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedGDIObject"
  },
  {
    "label": "DeleteObjectTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DeleteObjectTraits"
  },
  {
    "label": "DestroyCursorTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DestroyCursorTraits"
  },
  {
    "label": "ScopedGDIObject()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_WIN_SCOPED_GDI_HANDLE_H_ # define MODULES_DESKTOP_CAPTURE_WIN_SCOPED_GDI_HANDLE_H_ # include<windows . h> namespace webrtc { namespace win { template<class T,class Traits> class ScopedGDIObject { public :)",
    "insertText": "ScopedGDIObject() : handle_(NULL)"
  },
  {
    "label": "ScopedGDIObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ScopedGDIObject(T object) : handle_(object)"
  },
  {
    "label": "ScopedGDIObject()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "ScopedGDIObject()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(handle_)"
  },
  {
    "label": "ScopedGDIObject()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ScopedGDIObject(const ScopedGDIObject&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ScopedGDIObject&)",
    "insertText": "operator(const ScopedGDIObject&)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (T)",
    "insertText": "Get()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (handle_ = object ; } ScopedGDIObject&)",
    "insertText": "operator(T object)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(object)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T object = handle_ ; handle_ = NULL ; return object ; } operator)",
    "insertText": "T()"
  },
  {
    "label": "DeleteObjectTraits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteObjectTraits(const DeleteObjectTraits&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DeleteObjectTraits&)",
    "insertText": "operator(const DeleteObjectTraits&)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(T handle)"
  },
  {
    "label": "DestroyCursorTraits()",
    "kind": "Method",
    "detail": "Function (} } ; class DestroyCursorTraits { public :)",
    "insertText": "DestroyCursorTraits()"
  },
  {
    "label": "DestroyCursorTraits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyCursorTraits(const DestroyCursorTraits&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DestroyCursorTraits&)",
    "insertText": "operator(const DestroyCursorTraits&)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close(HCURSOR handle)"
  }
]