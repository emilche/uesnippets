[
  {
    "label": "Lex()",
    "kind": "Method",
    "detail": "Function (LexResultType)",
    "insertText": "Lex(const TCHAR* InExpression, const FTokenDefinitions& TokenDefinitions)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (CompileResultType)",
    "insertText": "Compile(const TCHAR* InExpression, const FTokenDefinitions& TokenDefinitions, const FExpressionGrammar& InGrammar)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (CompileResultType)",
    "insertText": "Compile(TArray<FExpressionToken> InTokens, const FExpressionGrammar& InGrammar)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (FExpressionResult)",
    "insertText": "Evaluate(const TCHAR* InExpression, const FTokenDefinitions& InTokenDefinitions, const FExpressionGrammar& InGrammar, const IOperatorEvaluationEnvironment& InEnvironment)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (FExpressionResult)",
    "insertText": "Evaluate(const TArray<FCompiledToken>& CompiledTokens, const IOperatorEvaluationEnvironment& InEnvironment)"
  },
  {
    "label": "Env()",
    "kind": "Method",
    "detail": "Function (TOperatorEvaluationEnvironment<ContextType>)",
    "insertText": "Env(InJumpTable, InContext)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Evaluate(InExpression, InTokenDefinitions, InGrammar, Env)"
  },
  {
    "label": "Env()",
    "kind": "Method",
    "detail": "Function (TOperatorEvaluationEnvironment<ContextType>)",
    "insertText": "Env(InJumpTable, InContext)"
  },
  {
    "label": "Evaluate()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Evaluate(CompiledTokens, Env)"
  }
]