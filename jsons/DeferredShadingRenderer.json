[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FLumenCardUpdateContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardUpdateContext"
  },
  {
    "label": "FSceneTextureParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneTextureParameters"
  },
  {
    "label": "FDistanceFieldCulledObjectBufferParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldCulledObjectBufferParameters"
  },
  {
    "label": "FTileIntersectionParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTileIntersectionParameters"
  },
  {
    "label": "FDistanceFieldAOParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAOParameters"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "FExponentialHeightFogSceneInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExponentialHeightFogSceneInfo"
  },
  {
    "label": "FLumenCardScatterContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardScatterContext"
  },
  {
    "label": "FRadianceCacheInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheInputs"
  },
  {
    "label": "FRadianceCacheInterpolationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRadianceCacheInterpolationParameters"
  },
  {
    "label": "FUpdateInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUpdateInputs"
  },
  {
    "label": "FFrameTemporaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameTemporaries"
  },
  {
    "label": "FRenderLightParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderLightParameters"
  },
  {
    "label": "FRayTracingScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRayTracingScene"
  },
  {
    "label": "FNaniteVisibility",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNaniteVisibility"
  },
  {
    "label": "FNaniteVisibilityQuery",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteVisibilityQuery"
  },
  {
    "label": "FSceneWithoutWaterTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneWithoutWaterTextures"
  },
  {
    "label": "FRayTracingReflectionOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingReflectionOptions"
  },
  {
    "label": "FHairStrandsTransmittanceMaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHairStrandsTransmittanceMaskData"
  },
  {
    "label": "FVolumetricFogLocalLightFunctionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVolumetricFogLocalLightFunctionInfo"
  },
  {
    "label": "FTranslucencyLightingVolumeTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslucencyLightingVolumeTextures"
  },
  {
    "label": "FLumenSceneFrameTemporaries",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenSceneFrameTemporaries"
  },
  {
    "label": "FSingleLayerWaterPrePassResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSingleLayerWaterPrePassResult"
  },
  {
    "label": "FBuildHZBAsyncComputeParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildHZBAsyncComputeParams"
  },
  {
    "label": "FForwardBasePassTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForwardBasePassTextures"
  },
  {
    "label": "FTranslucentLightInjectionCollector",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslucentLightInjectionCollector"
  },
  {
    "label": "FRayTracingPickingFeedback",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRayTracingPickingFeedback"
  },
  {
    "label": "FDBufferTextures",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDBufferTextures"
  },
  {
    "label": "FILCUpdatePrimTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FILCUpdatePrimTaskData"
  },
  {
    "label": "FLumenDirectLightingTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLumenDirectLightingTaskData"
  },
  {
    "label": "FFroxelRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFroxelRenderer"
  },
  {
    "label": "IVisibilityTaskData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVisibilityTaskData"
  },
  {
    "label": "FGatherInstancesTaskData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatherInstancesTaskData"
  },
  {
    "label": "FLumenCardRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenCardRenderer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAsyncLumenIndirectLightingOutputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncLumenIndirectLightingOutputs"
  },
  {
    "label": "FViewOutputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FViewOutputs"
  },
  {
    "label": "TPipelineState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TPipelineState"
  },
  {
    "label": "FGlobalIlluminationPluginResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalIlluminationPluginResources"
  },
  {
    "label": "FGlobalIlluminationPluginDelegates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalIlluminationPluginDelegates"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDeferredShadingSceneRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDeferredShadingSceneRenderer"
  },
  {
    "label": "from",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "from"
  },
  {
    "label": "FNaniteShadingCommands",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteShadingCommands"
  },
  {
    "label": "FNaniteShadingCommands",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteShadingCommands"
  },
  {
    "label": "FPerViewPipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerViewPipelineState"
  },
  {
    "label": "FFamilyPipelineState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFamilyPipelineState"
  },
  {
    "label": "FInitViewTaskDatas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitViewTaskDatas"
  },
  {
    "label": "FCardCaptureAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCardCaptureAtlas"
  },
  {
    "label": "FResampledCardCaptureAtlas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResampledCardCaptureAtlas"
  },
  {
    "label": "FCompositionLighting",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompositionLighting"
  },
  {
    "label": "FDistanceFieldAOParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDistanceFieldAOParameters"
  },
  {
    "label": "FLumenMeshSDFGridParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenMeshSDFGridParameters"
  },
  {
    "label": "FLumenScreenSpaceBentNormalParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenScreenSpaceBentNormalParameters"
  },
  {
    "label": "FLumenMeshSDFGridParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenMeshSDFGridParameters"
  },
  {
    "label": "FLumenScreenSpaceBentNormalParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenScreenSpaceBentNormalParameters"
  },
  {
    "label": "FLumenMeshSDFGridParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenMeshSDFGridParameters"
  },
  {
    "label": "FLumenFrontLayerTranslucencyGBufferParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLumenFrontLayerTranslucencyGBufferParameters"
  },
  {
    "label": "FPathTracingResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathTracingResources"
  },
  {
    "label": "FNaniteBasePassVisibility",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteBasePassVisibility"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FAnyRayTracingPassEnabled, bool& /*bAnyRayTracingPassEnabled*/)"
  },
  {
    "label": "InitializeRayTracingFlags_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeRayTracingFlags_RenderThread()"
  },
  {
    "label": "FDeferredShadingSceneRenderer()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "FDeferredShadingSceneRenderer(const FSceneViewFamily* InViewFamily, FHitProxyConsumer* HitProxyConsumer)"
  },
  {
    "label": "CommitFinalPipelineState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitFinalPipelineState()"
  },
  {
    "label": "CommitIndirectLightingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitIndirectLightingState()"
  },
  {
    "label": "ClearView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearView(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "RenderPrePassView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPrePassView(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "GatherLightsAndComputeLightGrid()",
    "kind": "Method",
    "detail": "Function (FComputeLightGridOutput)",
    "insertText": "GatherLightsAndComputeLightGrid(FRDGBuilder& GraphBuilder, bool bNeedLightGrid, const FSortedLightSetSceneInfo &SortedLightSet)"
  },
  {
    "label": "DebugLightGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugLightGrid(FRDGBuilder& GraphBuilder, FSceneTextures& SceneTextures, bool bNeedLightGrid)"
  },
  {
    "label": "RenderBasePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderBasePass(\n\t\tFDeferredShadingSceneRenderer& Renderer,\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tFSceneTextures& SceneTextures,\n\t\tconst FDBufferTextures& DBufferTextures,\n\t\tFExclusiveDepthStencil::Type BasePassDepthStencilAccess,\n\t\tFRDGTextureRef ForwardShadowMaskTexture,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tbool bNaniteEnabled,\n\t\tstruct FNaniteShadingCommands& NaniteBasePassShadingCommands,\n\t\tconst TArrayView<Nanite::FRasterResults>& NaniteRasterResults)"
  },
  {
    "label": "RenderBasePassInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderBasePassInternal(\n\t\tFDeferredShadingSceneRenderer& Renderer,\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FRenderTargetBindingSlots& BasePassRenderTargets,\n\t\tFExclusiveDepthStencil::Type BasePassDepthStencilAccess,\n\t\tconst FForwardBasePassTextures& ForwardBasePassTextures,\n\t\tconst FDBufferTextures& DBufferTextures,\n\t\tbool bParallelBasePass,\n\t\tbool bRenderLightmapDensity,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tbool bNaniteEnabled,\n\t\tstruct FNaniteShadingCommands& NaniteBasePassShadingCommands,\n\t\tconst TArrayView<Nanite::FRasterResults>& NaniteRasterResults)"
  },
  {
    "label": "RenderAnisotropyPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderAnisotropyPass(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tFSceneTextures& SceneTextures,\n\t\tconst FScene* Scene,\n\t\tbool bDoParallelPass)"
  },
  {
    "label": "RenderSingleLayerWater()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSingleLayerWater(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FSingleLayerWaterPrePassResult* SingleLayerWaterPrePassResult,\n\t\tbool bShouldRenderVolumetricCloud,\n\t\tFSceneWithoutWaterTextures& SceneWithoutWaterTextures,\n\t\tFLumenSceneFrameTemporaries& LumenFrameTemporaries,\n\t\tbool bIsCameraUnderWater)"
  },
  {
    "label": "RenderSingleLayerWaterInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSingleLayerWaterInner(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FSceneWithoutWaterTextures& SceneWithoutWaterTextures,\n\t\tconst FSingleLayerWaterPrePassResult* SingleLayerWaterPrePassResult)"
  },
  {
    "label": "RenderSingleLayerWaterReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSingleLayerWaterReflections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArrayView<FViewInfo> InViews,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FSceneWithoutWaterTextures& SceneWithoutWaterTextures,\n\t\tconst FSingleLayerWaterPrePassResult* SingleLayerWaterPrePassResult,\n\t\tFLumenSceneFrameTemporaries& LumenFrameTemporaries)"
  },
  {
    "label": "RenderOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderOcclusion(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tbool bIsOcclusionTesting,\n\t\tconst FBuildHZBAsyncComputeParams* BuildHZBAsyncComputeParams,\n\t\tFroxel::FRenderer& FroxelRenderer)"
  },
  {
    "label": "RenderHzb()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderHzb(FRDGBuilder& GraphBuilder, FRDGTextureRef SceneDepthTexture, const FBuildHZBAsyncComputeParams* AsyncComputeParams, Froxel::FRenderer& FroxelRenderer)"
  },
  {
    "label": "RenderVisualizeTexturePool()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderVisualizeTexturePool(FRHICommandListImmediate& RHICmdList)"
  },
  {
    "label": "CreatePerObjectProjectedShadow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePerObjectProjectedShadow(\n\t\tFRHICommandListImmediate& RHICmdList,\n\t\tFLightPrimitiveInteraction* Interaction,\n\t\tbool bCreateTranslucentObjectShadow,\n\t\tbool bCreateInsetObjectShadow,\n\t\tconst TArray<FProjectedShadowInfo*, SceneRenderingAllocator>& ViewDependentWholeSceneShadows,\n\t\tTArray<FProjectedShadowInfo*, SceneRenderingAllocator>& OutPreShadows)"
  },
  {
    "label": "PreVisibilityFrameSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreVisibilityFrameSetup(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "BeginInitDynamicShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginInitDynamicShadows(FRDGBuilder& GraphBuilder, FInitViewTaskDatas& TaskDatas, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "FinishInitDynamicShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishInitDynamicShadows(FRDGBuilder& GraphBuilder, FDynamicShadowsTaskData*& TaskData, FInstanceCullingManager& InstanceCullingManager)"
  },
  {
    "label": "ComputeLightVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeLightVisibility()"
  },
  {
    "label": "BeginInitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginInitViews(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTexturesConfig& SceneTexturesConfig,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tFRDGExternalAccessQueue& ExternalAccessQueue,\n\t\tFInitViewTaskDatas& TaskDatas)"
  },
  {
    "label": "EndInitViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndInitViews(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tFInitViewTaskDatas& TaskDatas)"
  },
  {
    "label": "BeginUpdateLumenSceneTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUpdateLumenSceneTasks(FRDGBuilder& GraphBuilder, FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "UpdateLumenScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLumenScene(FRDGBuilder& GraphBuilder, FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "RenderLumenSceneLighting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLumenSceneLighting(FRDGBuilder& GraphBuilder, const FLumenSceneFrameTemporaries& FrameTemporaries, const FLumenDirectLightingTaskData* DirectLightingTaskData)"
  },
  {
    "label": "BeginGatherLumenLights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGatherLumenLights(const FLumenSceneFrameTemporaries& FrameTemporaries, FLumenDirectLightingTaskData*& TaskData, IVisibilityTaskData* VisibilityTaskData, UE::Tasks::FTask UpdateLightFunctionAtlasTask)"
  },
  {
    "label": "RenderDirectLightingForLumenScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDirectLightingForLumenScene(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tconst FLumenDirectLightingTaskData* DirectLightingTaskData,\n\t\tconst FLumenCardUpdateContext& CardUpdateContext,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderRadiosityForLumenScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRadiosityForLumenScene(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tconst LumenRadiosity::FFrameTemporaries& RadiosityFrameTemporaries,\n\t\tconst FLumenCardUpdateContext& CardUpdateContext,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "ClearLumenSurfaceCacheAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLumenSurfaceCacheAtlas(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tconst FGlobalShaderMap* GlobalShaderMap)"
  },
  {
    "label": "UpdateLumenSurfaceCacheAtlas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLumenSurfaceCacheAtlas(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tconst TArray<FCardPageRenderData, SceneRenderingAllocator>& CardPagesToRender,\n\t\tFRDGBufferSRVRef CardCaptureRectBufferSRV,\n\t\tconst struct FCardCaptureAtlas& CardCaptureAtlas,\n\t\tconst struct FResampledCardCaptureAtlas& ResampledCardCaptureAtlas)"
  },
  {
    "label": "GetLumenTranslucencyGIVolumeRadianceCacheInputs()",
    "kind": "Method",
    "detail": "Function (LumenRadianceCache::FUpdateInputs)",
    "insertText": "GetLumenTranslucencyGIVolumeRadianceCacheInputs(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View, \n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "ComputeLumenTranslucencyGIVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeLumenTranslucencyGIVolume(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFViewInfo& View,\n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tLumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "CreateIndirectCapsuleShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateIndirectCapsuleShadows()"
  },
  {
    "label": "RenderPrePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPrePass(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> InViews, FRDGTextureRef SceneDepthTexture, FInstanceCullingManager& InstanceCullingManager, FRDGTextureRef* FirstStageDepthBuffer)"
  },
  {
    "label": "RenderPrePassHMD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPrePassHMD(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> InViews, FRDGTextureRef SceneDepthTexture)"
  },
  {
    "label": "RenderFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderFog(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFRDGTextureRef LightShaftOcclusionTexture,\n\t\tbool bFogComposeLocalFogVolumes)"
  },
  {
    "label": "RenderUnderWaterFog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderUnderWaterFog(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneWithoutWaterTextures& SceneWithoutWaterTextures,\n\t\tTRDGUniformBufferRef<FSceneTextureUniformParameters> SceneTexturesWithDepth)"
  },
  {
    "label": "RenderAtmosphere()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderAtmosphere(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFRDGTextureRef LightShaftOcclusionTexture)"
  },
  {
    "label": "SetupCommonDiffuseIndirectParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupCommonDiffuseIndirectParameters(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextureParameters& SceneTextures,\n\t\tconst FViewInfo& View,\n\t\tHybridIndirectLighting::FCommonParameters& OutCommonDiffuseParameters)"
  },
  {
    "label": "DispatchAsyncLumenIndirectLightingWork()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DispatchAsyncLumenIndirectLightingWork(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tclass FCompositionLighting& CompositionLighting,\n\t\tFSceneTextures& SceneTextures,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tFLumenSceneFrameTemporaries& LumenFrameTemporaries,\n\t\tFDynamicShadowsTaskData* DynamicShadowsTaskData,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tbool bHasLumenLights,\n\t\tFAsyncLumenIndirectLightingOutputs& Outputs)"
  },
  {
    "label": "RenderDiffuseIndirectAndAmbientOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDiffuseIndirectAndAmbientOcclusion(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tbool bHasLumenLights,\n\t\tbool bCompositeRegularLumenOnly,\n\t\tbool bIsVisualizePass,\n\t\tFAsyncLumenIndirectLightingOutputs& AsyncLumenIndirectLightingOutputs)"
  },
  {
    "label": "RenderDeferredReflectionsAndSkyLighting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDeferredReflectionsAndSkyLighting(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& LumenFrameTemporaries,\n\t\tTArray<FRDGTextureRef>& DynamicBentNormalAOTexture)"
  },
  {
    "label": "RenderDeferredReflectionsAndSkyLightingHair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDeferredReflectionsAndSkyLightingHair(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "RenderGlobalIlluminationPluginVisualizations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderGlobalIlluminationPluginVisualizations(FRDGBuilder& GraphBuilder, FRDGTextureRef LightingChannelsTexture)"
  },
  {
    "label": "RenderDFAOAsIndirectShadowing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDFAOAsIndirectShadowing(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tTArray<FRDGTextureRef>& DynamicBentNormalAOTextures)"
  },
  {
    "label": "RenderDistanceFieldLighting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDistanceFieldLighting(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst class FDistanceFieldAOParameters& Parameters,\n\t\tTArray<FRDGTextureRef>& OutDynamicBentNormalAOTextures,\n\t\tbool bModulateToSceneColor,\n\t\tbool bVisualizeAmbientOcclusion)"
  },
  {
    "label": "RenderDistanceFieldAOScreenGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDistanceFieldAOScreenGrid(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FViewInfo& View,\n\t\tconst FDistanceFieldCulledObjectBufferParameters& CulledObjectBufferParameters,\n\t\tFRDGBufferRef ObjectTilesIndirectArguments,\n\t\tconst FTileIntersectionParameters& TileIntersectionParameters,\n\t\tconst FDistanceFieldAOParameters& Parameters,\n\t\tFRDGTextureRef DistanceFieldNormal,\n\t\tFRDGTextureRef& OutDynamicBentNormalAO)"
  },
  {
    "label": "RenderMegaLights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderMegaLights(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderLumenFinalGather()",
    "kind": "Method",
    "detail": "Function (FSSDSignalTextures)",
    "insertText": "RenderLumenFinalGather(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tFViewInfo& View,\n\t\tFPreviousViewInfo* PreviousViewInfos,\n\t\tbool bRenderDirectLighting,\n\t\tclass FLumenMeshSDFGridParameters& MeshSDFGridParameters,\n\t\tLumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters,\n\t\tclass FLumenScreenSpaceBentNormalParameters& ScreenSpaceBentNormalParameters,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderLumenScreenProbeGather()",
    "kind": "Method",
    "detail": "Function (FSSDSignalTextures)",
    "insertText": "RenderLumenScreenProbeGather(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tFViewInfo& View,\n\t\tFPreviousViewInfo* PreviousViewInfos,\n\t\tbool bRenderDirectLighting,\n\t\tclass FLumenMeshSDFGridParameters& MeshSDFGridParameters,\n\t\tLumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters,\n\t\tclass FLumenScreenSpaceBentNormalParameters& ScreenBentNormalParameters,\n\t\tLumenRadianceCache::FRadianceCacheInterpolationParameters& TranslucencyVolumeRadianceCacheParameters,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderLumenReSTIRGather()",
    "kind": "Method",
    "detail": "Function (FSSDSignalTextures)",
    "insertText": "RenderLumenReSTIRGather(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tFViewInfo& View,\n\t\tFPreviousViewInfo* PreviousViewInfos,\n\t\tERDGPassFlags ComputePassFlags,\n\t\tFLumenScreenSpaceBentNormalParameters& ScreenSpaceBentNormalParameters)"
  },
  {
    "label": "StoreStochasticLightingSceneHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreStochasticLightingSceneHistory(FRDGBuilder& GraphBuilder, FLumenSceneFrameTemporaries& FrameTemporaries, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "QueueExtractStochasticLighting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueExtractStochasticLighting(FRDGBuilder& GraphBuilder, FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "RenderLumenIrradianceFieldGather()",
    "kind": "Method",
    "detail": "Function (FSSDSignalTextures)",
    "insertText": "RenderLumenIrradianceFieldGather(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tconst FViewInfo& View,\n\t\tLumenRadianceCache::FRadianceCacheInterpolationParameters& TranslucencyVolumeRadianceCacheParameters,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderLumenReflections()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "RenderLumenReflections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& FrameTemporaries,\n\t\tconst class FLumenMeshSDFGridParameters& MeshSDFGridParameters,\n\t\tconst LumenRadianceCache::FRadianceCacheInterpolationParameters& RadianceCacheParameters,\n\t\tELumenReflectionPass ReflectionPass,\n\t\tconst FTiledReflection* TiledReflectionInput,\n\t\tconst class FLumenFrontLayerTranslucencyGBufferParameters* FrontLayerReflectionGBuffer,\n\t\tERDGPassFlags ComputePassFlags)"
  },
  {
    "label": "RenderLumenFrontLayerTranslucencyReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLumenFrontLayerTranslucencyReflections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFViewInfo& View,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tFLumenSceneFrameTemporaries& LumenFrameTemporaries, \n\t\tconst FFrontLayerTranslucencyData& FrontLayerTranslucencyData)"
  },
  {
    "label": "RenderFrontLayerTranslucency()",
    "kind": "Method",
    "detail": "Function (FFrontLayerTranslucencyData)",
    "insertText": "RenderFrontLayerTranslucency(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTArray<FViewInfo>& Views,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tbool bRenderOnlyForVSMPageMarking)"
  },
  {
    "label": "RenderLumenMiscVisualizations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLumenMiscVisualizations(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures, const FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "RenderLumenRadianceCacheVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLumenRadianceCacheVisualization(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderLumenRadiosityProbeVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLumenRadiosityProbeVisualization(FRDGBuilder& GraphBuilder, const FMinimalSceneTextures& SceneTextures, const FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "LumenScenePDIVisualization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LumenScenePDIVisualization()"
  },
  {
    "label": "BeginGatheringLumenSurfaceCacheFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGatheringLumenSurfaceCacheFeedback(FRDGBuilder& GraphBuilder, const FViewInfo& View, FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "FinishGatheringLumenSurfaceCacheFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishGatheringLumenSurfaceCacheFeedback(FRDGBuilder& GraphBuilder, const FViewInfo& View, FLumenSceneFrameTemporaries& FrameTemporaries)"
  },
  {
    "label": "AddClusteredDeferredShadingPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClusteredDeferredShadingPass(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FSortedLightSetSceneInfo& SortedLightsSet,\n\t\tFRDGTextureRef ShadowMaskBits,\n\t\tFRDGTextureRef HairStrandsShadowMaskBits, \n\t\tFRDGTextureRef ShadowMaskBitsLightingChannelsTexture)"
  },
  {
    "label": "RenderLights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLights(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFMinimalSceneTextures& SceneTextures,\n\t\tconst FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tconst FSortedLightSetSceneInfo& SortedLightSet)"
  },
  {
    "label": "RenderStationaryLightOverlap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderStationaryLightOverlap(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFRDGTextureRef LightingChannelsTexture)"
  },
  {
    "label": "RenderTranslucency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderTranslucency(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures,\n\t\tFTranslucencyPassResourcesMap* OutTranslucencyResourceMap,\n\t\tETranslucencyView ViewsToRender,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tbool bStandardTranslucentCanRenderSeparate,\n\t\tFRDGTextureMSAA& OutSharedDepthTexture)"
  },
  {
    "label": "RenderTranslucencyInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderTranslucencyInner(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures,\n\t\tFTranslucencyPassResourcesMap* OutTranslucencyResourceMap,\n\t\tFRDGTextureMSAA SharedDepthTexture,\n\t\tETranslucencyView ViewsToRender,\n\t\tFRDGTextureRef SceneColorCopyTexture,\n\t\tETranslucencyPass::Type TranslucencyPass,\n\t\tFInstanceCullingManager& InstanceCullingManager,\n\t\tbool bStandardTranslucentCanRenderSeparate)"
  },
  {
    "label": "UpscaleTranslucencyIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpscaleTranslucencyIfNeeded(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tETranslucencyView ViewsToRender,\n\t\tFTranslucencyPassResourcesMap* OutTranslucencyResourceMap,\n\t\tFRDGTextureMSAA& InSharedDepthTexture)"
  },
  {
    "label": "RenderLightShaftOcclusion()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "RenderLightShaftOcclusion(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderLightShaftBloom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLightShaftBloom(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFTranslucencyPassResourcesMap& OutTranslucencyResourceMap)"
  },
  {
    "label": "RenderDistortion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDistortion(FRDGBuilder& GraphBuilder, \n\t\tFRDGTextureRef SceneColorTexture, \n\t\tFRDGTextureRef SceneDepthTexture,\n\t\tFRDGTextureRef SceneVelocityTexture,\n\t\tFTranslucencyPassResourcesMap& TranslucencyResourceMap)"
  },
  {
    "label": "CollectLightForTranslucencyLightingVolumeInjection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectLightForTranslucencyLightingVolumeInjection(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tbool bSupportShadowMaps,\n\t\tFTranslucentLightInjectionCollector& Collector)"
  },
  {
    "label": "RenderDeferredShadowProjections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDeferredShadowProjections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FTranslucencyLightingVolumeTextures& TranslucencyLightingVolumeTextures,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tFRDGTextureRef ScreenShadowMaskTexture,\n\t\tFRDGTextureRef ScreenShadowMaskSubPixelTexture)"
  },
  {
    "label": "RenderForwardShadowProjections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderForwardShadowProjections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFRDGTextureRef& ForwardScreenSpaceShadowMask,\n\t\tFRDGTextureRef& ForwardScreenSpaceShadowMaskSubPixel)"
  },
  {
    "label": "RenderLightFunction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderLightFunction(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tFRDGTextureRef ScreenShadowMaskTexture,\n\t\tbool bLightAttenuationCleared,\n\t\tbool bProjectingForForwardShading, \n\t\tbool bUseHairStrands)"
  },
  {
    "label": "RenderPreviewShadowsIndicator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderPreviewShadowsIndicator(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tFRDGTextureRef ScreenShadowMaskTexture,\n\t\tbool bLightAttenuationCleared,\n\t\tbool bUseHairStrands)"
  },
  {
    "label": "RenderLightFunctionForMaterial()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RenderLightFunctionForMaterial(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tFRDGTextureRef ScreenShadowMaskTexture,\n\t\tconst FMaterialRenderProxy* MaterialProxy,\n\t\tbool bLightAttenuationCleared,\n\t\tbool bProjectingForForwardShading,\n\t\tbool bRenderingPreviewShadowsIndicator, \n\t\tbool bUseHairStrands)"
  },
  {
    "label": "RenderLightsForHair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLightsForHair(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FSortedLightSetSceneInfo& SortedLightSet,\n\t\tFRDGTextureRef InScreenShadowMaskSubPixelTexture,\n\t\tFRDGTextureRef LightingChannelsTexture)"
  },
  {
    "label": "RenderLightForHair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderLightForHair(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFViewInfo& View,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FLightSceneInfo* LightSceneInfo,\n\t\tFRDGTextureRef ScreenShadowMaskSubPixelTexture,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tconst FHairStrandsTransmittanceMaskData& InTransmittanceMaskData,\n\t\tconst bool bForwardRendering,\n\t\tconst bool bCanLightUsesAtlasForUnbatchedLight,\n\t\tTRDGUniformBufferRef<FVirtualShadowMapUniformParameters> VirtualShadowMapUniformBuffer = nullptr,\n\t\tFRDGTextureRef ShadowMaskBits = nullptr,\n\t\tint32 VirtualShadowMapId = INDEX_NONE)"
  },
  {
    "label": "RenderSimpleLightsStandardDeferred()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderSimpleLightsStandardDeferred(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tconst FSimpleLightArray& SimpleLights)"
  },
  {
    "label": "CopyStencilToLightingChannelTexture()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "CopyStencilToLightingChannelTexture(\n\t\tFRDGBuilder& GraphBuilder, \n\t\tFRDGTextureSRVRef SceneStencilTexture,\n\t\tconst TArrayView<FRDGTextureRef> NaniteResolveTextures)"
  },
  {
    "label": "RenderHeterogeneousVolumeShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderHeterogeneousVolumeShadows(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderHeterogeneousVolumes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderHeterogeneousVolumes(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "CompositeHeterogeneousVolumes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompositeHeterogeneousVolumes(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "VisualizeVolumetricLightmap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisualizeVolumetricLightmap(FRDGBuilder& GraphBuilder, const FSceneTextures& SceneTextures)"
  },
  {
    "label": "RenderStandardDeferredImageBasedReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderStandardDeferredImageBasedReflections(FRHICommandListImmediate& RHICmdList, FGraphicsPipelineStateInitializer& GraphicsPSOInit, bool bReflectionEnv, const TRefCountPtr<IPooledRenderTarget>& DynamicBentNormalAO, TRefCountPtr<IPooledRenderTarget>& VelocityRT)"
  },
  {
    "label": "RenderDeferredPlanarReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDeferredPlanarReflections(FRDGBuilder& GraphBuilder, const FSceneTextureParameters& SceneTextures, const FViewInfo& View, FRDGTextureRef& ReflectionsOutput)"
  },
  {
    "label": "SetupImaginaryReflectionTextureParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupImaginaryReflectionTextureParameters(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tFSceneTextureParameters* OutTextures)"
  },
  {
    "label": "RenderRayTracingReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingReflections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextures& SceneTextures,\n\t\tconst FViewInfo& View,\n\t\tint DenoiserMode,\n\t\tconst FRayTracingReflectionOptions& Options,\n\t\tIScreenSpaceDenoiser::FReflectionsInputs* OutDenoiserInputs)"
  },
  {
    "label": "RenderRayTracingDeferredReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingDeferredReflections(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextureParameters& SceneTextures,\n\t\tconst FViewInfo& View,\n\t\tint DenoiserMode,\n\t\tconst FRayTracingReflectionOptions& Options,\n\t\tIScreenSpaceDenoiser::FReflectionsInputs* OutDenoiserInputs)"
  },
  {
    "label": "RenderDitheredLODFadingOutMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderDitheredLODFadingOutMask(FRDGBuilder& GraphBuilder, const FViewInfo& View, FRDGTextureRef SceneDepthTexture)"
  },
  {
    "label": "RenderRayTracingShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingShadows(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FSceneTextureParameters& SceneTextures,\n\t\tconst FViewInfo& View,\n\t\tconst FLightSceneInfo& LightSceneInfo,\n\t\tconst IScreenSpaceDenoiser::FShadowRayTracingConfig& RayTracingConfig,\n\t\tconst IScreenSpaceDenoiser::EShadowRequirements DenoiserRequirements,\n\t\tFRDGTextureRef LightingChannelsTexture,\n\t\tFRDGTextureUAV* OutShadowMaskUAV,\n\t\tFRDGTextureUAV* OutRayHitDistanceUAV,\n\t\tFRDGTextureUAV* SubPixelRayTracingShadowMaskUAV)"
  },
  {
    "label": "CompositeRayTracingSkyLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompositeRayTracingSkyLight(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FMinimalSceneTextures& SceneTextures,\n\t\tFRDGTextureRef SkyLightRT,\n\t\tFRDGTextureRef HitDistanceRT)"
  },
  {
    "label": "RenderRayTracingAmbientOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingAmbientOcclusion(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFViewInfo& View,\n\t\tconst FSceneTextureParameters& SceneTextures,\n\t\tFRDGTextureRef* OutAmbientOcclusionTexture)"
  },
  {
    "label": "RenderRayTracingRectLightInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingRectLightInternal(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tTRDGUniformBufferRef<FSceneTextureUniformParameters> SceneTexturesUniformBuffer,\n\t\tconst TArray<FViewInfo>& Views,\n\t\tconst FLightSceneInfo& RectLightSceneInfo,\n\t\tFRDGTextureRef ScreenShadowMaskTexture,\n\t\tFRDGTextureRef RayDistanceTexture)"
  },
  {
    "label": "RenderRayTracingSkyLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingSkyLight(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tFRDGTextureRef SceneColorTexture,\n\t\tFRDGTextureRef& OutSkyLightTexture,\n\t\tFRDGTextureRef& OutHitDistanceTexture)"
  },
  {
    "label": "RenderRayTracingPrimaryRaysView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingPrimaryRaysView(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tFRDGTextureRef* InOutColorTexture,\n\t\tFRDGTextureRef* InOutRayHitDistanceTexture,\n\t\tint32 SamplePerPixel,\n\t\tint32 HeightFog,\n\t\tfloat ResolutionFraction,\n\t\tERayTracingPrimaryRaysFlag Flags)"
  },
  {
    "label": "RenderRayTracingTranslucency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingTranslucency(FRDGBuilder& GraphBuilder, FRDGTextureMSAA SceneColorTexture)"
  },
  {
    "label": "RenderRayTracingTranslucencyView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingTranslucencyView(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tFRDGTextureRef* OutColorTexture,\n\t\tFRDGTextureRef* OutRayHitDistanceTexture,\n\t\tint32 SamplePerPixel,\n\t\tint32 HeightFog,\n\t\tfloat ResolutionFraction)"
  },
  {
    "label": "SetupRayTracingDefaultMissShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRayTracingDefaultMissShader(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "SetupPathTracingDefaultMissShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPathTracingDefaultMissShader(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "SetupRayTracingLightingMissShader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRayTracingLightingMissShader(FRHICommandList& RHICmdList, const FViewInfo& View)"
  },
  {
    "label": "RenderPathTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderPathTracing(\n\t\tFRDGBuilder& GraphBuilder,\n\t\tconst FViewInfo& View,\n\t\tTRDGUniformBufferRef<FSceneTextureUniformParameters> SceneTexturesUniformBuffer,\n\t\tFRDGTextureRef SceneColorOutputTexture,\n\t\tFRDGTextureRef SceneDepthOutputTexture,\n\t\tstruct FPathTracingResources& PathTracingResources)"
  },
  {
    "label": "ComputePathCompaction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputePathCompaction(FRHICommandListImmediate& RHICmdList, const FViewInfo& View, FRHITexture* RadianceTexture, FRHITexture* SampleCountTexture, FRHITexture* PixelPositionTexture,\n\t\tFRHIUnorderedAccessView* RadianceSortedRedUAV, FRHIUnorderedAccessView* RadianceSortedGreenUAV, FRHIUnorderedAccessView* RadianceSortedBlueUAV, FRHIUnorderedAccessView* RadianceSortedAlphaUAV, FRHIUnorderedAccessView* SampleCountSortedUAV)"
  },
  {
    "label": "WaitForRayTracingScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForRayTracingScene(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "RenderRayTracingDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingDebug(FRDGBuilder& GraphBuilder, const FViewInfo& View, FRDGTextureRef SceneColorOutputTexture, FRayTracingPickingFeedback& PickingFeedback)"
  },
  {
    "label": "RenderRayTracingBarycentrics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderRayTracingBarycentrics(FRDGBuilder& GraphBuilder, const FViewInfo& View, FRDGTextureRef SceneColorOutputTexture, bool bVisualizeProceduralPrimitives)"
  },
  {
    "label": "RayTracingDisplayPicking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RayTracingDisplayPicking(const FRayTracingPickingFeedback& PickingFeedback, FScreenMessageWriter& Writer)"
  },
  {
    "label": "SetupRayTracingPipelineStatesAndSBT()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupRayTracingPipelineStatesAndSBT(FRDGBuilder& GraphBuilder, bool bAnyLumenHardwareInlineRayTracingPassEnabled)"
  },
  {
    "label": "SetupRayTracingLightDataForViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupRayTracingLightDataForViews(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "DispatchRayTracingWorldUpdates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DispatchRayTracingWorldUpdates(FRDGBuilder& GraphBuilder, FRDGBufferRef& OutDynamicGeometryScratchBuffer)"
  },
  {
    "label": "CreateRayTracingMaterialPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateRayTracingMaterialPipeline(FRDGBuilder& GraphBuilder, FViewInfo& View, const TArrayView<FRHIRayTracingShader*>& RayGenShaderTable, uint32& OutMaxLocalBindingDataSize)"
  },
  {
    "label": "CreateLumenHardwareRayTracingMaterialPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateLumenHardwareRayTracingMaterialPipeline(FRDGBuilder& GraphBuilder, FViewInfo& View, const TArrayView<FRHIRayTracingShader*>& RayGenShaderTable, uint32& OutMaxLocalBindingDataSize)"
  },
  {
    "label": "SetupLumenHardwareRaytracingHitGroupBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupLumenHardwareRaytracingHitGroupBindings(FRDGBuilder& GraphBuilder, FViewInfo& View, ERayTracingShaderBindingMode ShaderBindingMode)"
  },
  {
    "label": "BindRayTracingMaterialPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindRayTracingMaterialPipeline(FRHICommandList& RHICmdList, FViewInfo& View)"
  },
  {
    "label": "BindLumenHardwareRayTracingMaterialPipeline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindLumenHardwareRayTracingMaterialPipeline(FRHICommandList& RHICmdList, FViewInfo& View)"
  },
  {
    "label": "SetupLumenHardwareRayTracingHitGroupBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupLumenHardwareRayTracingHitGroupBuffer(FRDGBuilder& GraphBuilder, FViewInfo& View)"
  },
  {
    "label": "SetupLumenHardwareRayTracingUniformBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupLumenHardwareRayTracingUniformBuffer(FViewInfo& View)"
  },
  {
    "label": "PrepareRayTracingShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingShadows(const FViewInfo& View, const FScene& Scene, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareRayTracingAmbientOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingAmbientOcclusion(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareRayTracingSkyLight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingSkyLight(const FViewInfo& View, const FScene& Scene, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareRayTracingGlobalIlluminationPlugin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingGlobalIlluminationPlugin(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareRayTracingTranslucency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingTranslucency(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareRayTracingVolumetricFogShadows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingVolumetricFogShadows(const FViewInfo& View, const FScene& Scene, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareRayTracingDebug()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareRayTracingDebug(const FSceneViewFamily& ViewFamily, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PreparePathTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreparePathTracing(const FSceneViewFamily& ViewFamily, const FScene& Scene, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingShortRangeAO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingShortRangeAO(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingScreenProbeGather()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingScreenProbeGather(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingRadianceCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingRadianceCache(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingReflections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingReflections(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingReSTIR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingReSTIR(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingVisualize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingVisualize(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareMegaLightsHardwareRayTracing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareMegaLightsHardwareRayTracing(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingTranslucencyVolumeLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingTranslucencyVolumeLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingVisualizeLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingVisualizeLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingReflectionsLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingReflectionsLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingReSTIRLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingReSTIRLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingScreenProbeGatherLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingScreenProbeGatherLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingRadianceCacheLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingRadianceCacheLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingRadiosityLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingRadiosityLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareLumenHardwareRayTracingDirectLightingLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareLumenHardwareRayTracingDirectLightingLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "PrepareMegaLightsHardwareRayTracingLumenMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareMegaLightsHardwareRayTracingLumenMaterial(const FViewInfo& View, TArray<FRHIRayTracingShader*>& OutRayGenShaders)"
  },
  {
    "label": "RenderNanite()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenderNanite(FRDGBuilder& GraphBuilder, const TArray<FViewInfo>& InViews, FSceneTextures& SceneTextures, bool bIsEarlyDepthComplete,\n\t\tFNaniteBasePassVisibility& InNaniteBasePassVisibility,\n\t\tTArray<Nanite::FRasterResults, TInlineAllocator<2>>& NaniteRasterResults,\n\t\tTArray<Nanite::FPackedView, SceneRenderingAllocator>& PrimaryNaniteViews)"
  }
]