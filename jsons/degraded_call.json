[
  {
    "label": "DegradedCall",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DegradedCall"
  },
  {
    "label": "TimeScopedNetworkConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TimeScopedNetworkConfig"
  },
  {
    "label": "FakeNetworkPipeOnTaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeNetworkPipeOnTaskQueue"
  },
  {
    "label": "ThreadedPacketReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadedPacketReceiver"
  },
  {
    "label": "FakeNetworkPipeTransportAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeNetworkPipeTransportAdapter"
  },
  {
    "label": "PlusInfinity()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_DEGRADED_CALL_H_ # define CALL_DEGRADED_CALL_H_ # include<stddef . h> # include<stdint . h> # include<map> # include<memory> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / call / transport . h \" # include \" api / fec_controller . h \" # include \" api / media_types . h \" # include \" api / rtp_headers . h \" # include \" api / task_queue / pending_task_safety_flag . h \" # include \" api / test / simulated_network . h \" # include \" call / audio_receive_stream . h \" # include \" call / audio_send_stream . h \" # include \" call / call . h \" # include \" call / fake_network_pipe . h \" # include \" call / flexfec_receive_stream . h \" # include \" call / packet_receiver . h \" # include \" call / rtp_transport_controller_send_interface . h \" # include \" call / simulated_network . h \" # include \" call / video_receive_stream . h \" # include \" call / video_send_stream . h \" # include \" rtc_base / copy_on_write_buffer . h \" # include \" rtc_base / network / sent_packet . h \" # include \" rtc_base / task_queue . h \" # include \" system_wrappers / include / clock . h \" # include \" video / config / video_encoder_config . h \" namespace webrtc { class DegradedCall : public Call,private PacketReceiver { public : struct TimeScopedNetworkConfig : public BuiltInNetworkBehaviorConfig { TimeDelta duration =)",
    "insertText": "PlusInfinity()"
  },
  {
    "label": "DegradedCall()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DegradedCall(std::unique_ptr<Call> call, const std::vector<TimeScopedNetworkConfig>& send_configs, const std::vector<TimeScopedNetworkConfig>& receive_configs)"
  },
  {
    "label": "DegradedCall()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "DegradedCall()"
  },
  {
    "label": "CreateAudioSendStream()",
    "kind": "Method",
    "detail": "Function (AudioSendStream*)",
    "insertText": "CreateAudioSendStream(const AudioSendStream::Config& config)"
  },
  {
    "label": "DestroyAudioSendStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAudioSendStream(AudioSendStream* send_stream)"
  },
  {
    "label": "CreateAudioReceiveStream()",
    "kind": "Method",
    "detail": "Function (AudioReceiveStreamInterface*)",
    "insertText": "CreateAudioReceiveStream(const AudioReceiveStreamInterface::Config& config)"
  },
  {
    "label": "DestroyAudioReceiveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyAudioReceiveStream(AudioReceiveStreamInterface* receive_stream)"
  },
  {
    "label": "CreateVideoSendStream()",
    "kind": "Method",
    "detail": "Function (VideoSendStream*)",
    "insertText": "CreateVideoSendStream(VideoSendStream::Config config, VideoEncoderConfig encoder_config)"
  },
  {
    "label": "CreateVideoSendStream()",
    "kind": "Method",
    "detail": "Function (VideoSendStream*)",
    "insertText": "CreateVideoSendStream(VideoSendStream::Config config, VideoEncoderConfig encoder_config, std::unique_ptr<FecController> fec_controller)"
  },
  {
    "label": "DestroyVideoSendStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyVideoSendStream(VideoSendStream* send_stream)"
  },
  {
    "label": "CreateVideoReceiveStream()",
    "kind": "Method",
    "detail": "Function (VideoReceiveStreamInterface*)",
    "insertText": "CreateVideoReceiveStream(VideoReceiveStreamInterface::Config configuration)"
  },
  {
    "label": "DestroyVideoReceiveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyVideoReceiveStream(VideoReceiveStreamInterface* receive_stream)"
  },
  {
    "label": "CreateFlexfecReceiveStream()",
    "kind": "Method",
    "detail": "Function (FlexfecReceiveStream*)",
    "insertText": "CreateFlexfecReceiveStream(const FlexfecReceiveStream::Config config)"
  },
  {
    "label": "DestroyFlexfecReceiveStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyFlexfecReceiveStream(FlexfecReceiveStream* receive_stream)"
  },
  {
    "label": "AddAdaptationResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAdaptationResource(rtc::scoped_refptr<Resource> resource)"
  },
  {
    "label": "Receiver()",
    "kind": "Method",
    "detail": "Function (PacketReceiver*)",
    "insertText": "Receiver()"
  },
  {
    "label": "GetTransportControllerSend()",
    "kind": "Method",
    "detail": "Function (RtpTransportControllerSendInterface*)",
    "insertText": "GetTransportControllerSend()"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (Stats)",
    "insertText": "GetStats()"
  },
  {
    "label": "trials()",
    "kind": "Method",
    "detail": "Function (const FieldTrialsView&)",
    "insertText": "trials()"
  },
  {
    "label": "network_thread()",
    "kind": "Method",
    "detail": "Function (TaskQueueBase*)",
    "insertText": "network_thread()"
  },
  {
    "label": "worker_thread()",
    "kind": "Method",
    "detail": "Function (TaskQueueBase*)",
    "insertText": "worker_thread()"
  },
  {
    "label": "SignalChannelNetworkState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SignalChannelNetworkState(MediaType media, NetworkState state)"
  },
  {
    "label": "OnAudioTransportOverheadChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAudioTransportOverheadChanged(int transport_overhead_per_packet)"
  },
  {
    "label": "OnLocalSsrcUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcUpdated(AudioReceiveStreamInterface& stream, uint32_t local_ssrc)"
  },
  {
    "label": "OnLocalSsrcUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcUpdated(VideoReceiveStreamInterface& stream, uint32_t local_ssrc)"
  },
  {
    "label": "OnLocalSsrcUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLocalSsrcUpdated(FlexfecReceiveStream& stream, uint32_t local_ssrc)"
  },
  {
    "label": "OnUpdateSyncGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUpdateSyncGroup(AudioReceiveStreamInterface& stream, absl::string_view sync_group)"
  },
  {
    "label": "OnSentPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSentPacket(const rtc::SentPacket& sent_packet)"
  },
  {
    "label": "DeliverPacket()",
    "kind": "Method",
    "detail": "Function (protected : DeliveryStatus)",
    "insertText": "DeliverPacket(MediaType media_type, rtc::CopyOnWriteBuffer packet, int64_t packet_time_us)"
  },
  {
    "label": "FakeNetworkPipeOnTaskQueue()",
    "kind": "Method",
    "detail": "Function (private : class FakeNetworkPipeOnTaskQueue { public :)",
    "insertText": "FakeNetworkPipeOnTaskQueue(TaskQueueBase* task_queue, rtc::scoped_refptr<PendingTaskSafetyFlag> call_alive, Clock* clock, std::unique_ptr<NetworkBehaviorInterface> network_behavior)"
  },
  {
    "label": "SendRtp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRtp(const uint8_t* packet, size_t length, const PacketOptions& options, Transport* transport)"
  },
  {
    "label": "SendRtcp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendRtcp(const uint8_t* packet, size_t length, Transport* transport)"
  },
  {
    "label": "AddActiveTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActiveTransport(Transport* transport)"
  },
  {
    "label": "RemoveActiveTransport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActiveTransport(Transport* transport)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "Process()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (Clock* const clock_ ; TaskQueueBase* const task_queue_ ; rtc::scoped_refptr<PendingTaskSafetyFlag> call_alive_ ; FakeNetworkPipe pipe_ ; absl::optional<int64_t> next_process_ms_)",
    "insertText": "RTC_GUARDED_BY(&task_queue_)"
  },
  {
    "label": "ThreadedPacketReceiver()",
    "kind": "Method",
    "detail": "Function (} ; class ThreadedPacketReceiver : public PacketReceiver { public :)",
    "insertText": "ThreadedPacketReceiver(webrtc::TaskQueueBase* worker_thread, webrtc::TaskQueueBase* network_thread, rtc::scoped_refptr<PendingTaskSafetyFlag> call_alive, PacketReceiver* receiver)"
  },
  {
    "label": "ThreadedPacketReceiver()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ThreadedPacketReceiver()"
  },
  {
    "label": "FakeNetworkPipeTransportAdapter()",
    "kind": "Method",
    "detail": "Function (private : webrtc::TaskQueueBase* const worker_thread_ ; webrtc::TaskQueueBase* const network_thread_ ; rtc::scoped_refptr<PendingTaskSafetyFlag> call_alive_ ; webrtc::PacketReceiver* const receiver_ ; } ; class FakeNetworkPipeTransportAdapter : public Transport { public :)",
    "insertText": "FakeNetworkPipeTransportAdapter(FakeNetworkPipeOnTaskQueue* fake_network, Call* call, Clock* clock, Transport* real_transport)"
  },
  {
    "label": "FakeNetworkPipeTransportAdapter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FakeNetworkPipeTransportAdapter()"
  },
  {
    "label": "SendRtp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRtp(const uint8_t* packet, size_t length, const PacketOptions& options)"
  },
  {
    "label": "SendRtcp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendRtcp(const uint8_t* packet, size_t length)"
  },
  {
    "label": "SetClientBitratePreferences()",
    "kind": "Method",
    "detail": "Function (private : FakeNetworkPipeOnTaskQueue* const network_pipe_ ; Call* const call_ ; Clock* const clock_ ; Transport* const real_transport_ ; } ; void)",
    "insertText": "SetClientBitratePreferences(const webrtc::BitrateSettings& preferences)"
  },
  {
    "label": "UpdateSendNetworkConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSendNetworkConfig()"
  },
  {
    "label": "UpdateReceiveNetworkConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateReceiveNetworkConfig()"
  }
]