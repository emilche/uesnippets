[
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (# ifndef RESBUND_H # define RESBUND_H # include \" unicode / utypes . h \" # include \" unicode / uobject . h \" # include \" unicode / ures . h \" # include \" unicode / unistr . h \" # include \" unicode / locid . h \" U_NAMESPACE_BEGIN class ResourceBundle : public UObject { public :)",
    "insertText": "ResourceBundle(const UnicodeString& packageName, const Locale& locale, UErrorCode& err)"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResourceBundle(const UnicodeString& packageName, UErrorCode& err)"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResourceBundle(UErrorCode &err)"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResourceBundle(const char* packageName, const Locale& locale, UErrorCode& err)"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResourceBundle(const ResourceBundle &original)"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResourceBundle(UResourceBundle *res, UErrorCode &status)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ResourceBundle&)",
    "insertText": "operator(const ResourceBundle& other)"
  },
  {
    "label": "ResourceBundle()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ResourceBundle()"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (ResourceBundle*)",
    "insertText": "clone()"
  },
  {
    "label": "getSize()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getSize(void)"
  },
  {
    "label": "getString()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getString(UErrorCode& status)"
  },
  {
    "label": "getBinary()",
    "kind": "Method",
    "detail": "Function (const uint8_t*)",
    "insertText": "getBinary(int32_t& len, UErrorCode& status)"
  },
  {
    "label": "getIntVector()",
    "kind": "Method",
    "detail": "Function (const int32_t*)",
    "insertText": "getIntVector(int32_t& len, UErrorCode& status)"
  },
  {
    "label": "getUInt()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "getUInt(UErrorCode& status)"
  },
  {
    "label": "getInt()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "getInt(UErrorCode& status)"
  },
  {
    "label": "hasNext()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "hasNext(void)"
  },
  {
    "label": "resetIterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resetIterator(void)"
  },
  {
    "label": "getKey()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getKey(void)"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "getName(void)"
  },
  {
    "label": "getType()",
    "kind": "Method",
    "detail": "Function (UResType)",
    "insertText": "getType(void)"
  },
  {
    "label": "getNext()",
    "kind": "Method",
    "detail": "Function (ResourceBundle)",
    "insertText": "getNext(UErrorCode& status)"
  },
  {
    "label": "getNextString()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getNextString(UErrorCode& status)"
  },
  {
    "label": "getNextString()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getNextString(const char ** key, UErrorCode& status)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (ResourceBundle)",
    "insertText": "get(int32_t index, UErrorCode& status)"
  },
  {
    "label": "getStringEx()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getStringEx(int32_t index, UErrorCode& status)"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (ResourceBundle)",
    "insertText": "get(const char* key, UErrorCode& status)"
  },
  {
    "label": "getStringEx()",
    "kind": "Method",
    "detail": "Function (UnicodeString)",
    "insertText": "getStringEx(const char* key, UErrorCode& status)"
  },
  {
    "label": "getVersionNumber()",
    "kind": "Method",
    "detail": "Function (# ifndef const char*)",
    "insertText": "getVersionNumber(void)"
  },
  {
    "label": "getVersion()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "getVersion(UVersionInfo versionInfo)"
  },
  {
    "label": "getLocale()",
    "kind": "Method",
    "detail": "Function (# ifndef const Locale&)",
    "insertText": "getLocale(void)"
  },
  {
    "label": "getLocale()",
    "kind": "Method",
    "detail": "Function (# endif const Locale)",
    "insertText": "getLocale(ULocDataLocaleType type, UErrorCode &status)"
  },
  {
    "label": "getWithFallback()",
    "kind": "Method",
    "detail": "Function (# ifndef ResourceBundle)",
    "insertText": "getWithFallback(const char* key, UErrorCode& status)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (# endif UClassID)",
    "insertText": "getDynamicClassID()"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (UClassID U_EXPORT2)",
    "insertText": "getStaticClassID()"
  },
  {
    "label": "constructForLocale()",
    "kind": "Method",
    "detail": "Function (UResourceBundle* fResource ; void)",
    "insertText": "constructForLocale(const UnicodeString& path, const Locale& locale, UErrorCode& error)"
  }
]