[
  {
    "label": "FrameEncryptorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FrameEncryptorInterface"
  },
  {
    "label": "RtcEventLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLog"
  },
  {
    "label": "RtpTransportControllerSendInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpTransportControllerSendInterface"
  },
  {
    "label": "CallSendStatistics",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CallSendStatistics"
  },
  {
    "label": "ReportBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReportBlock"
  },
  {
    "label": "ChannelSendInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelSendInterface"
  },
  {
    "label": "Zero()",
    "kind": "Method",
    "detail": "Function (# ifndef AUDIO_CHANNEL_SEND_H_ # define AUDIO_CHANNEL_SEND_H_ # include<memory> # include<string> # include<vector> # include \" api / audio / audio_frame . h \" # include \" api / audio_codecs / audio_encoder . h \" # include \" api / crypto / crypto_options . h \" # include \" api / field_trials_view . h \" # include \" api / frame_transformer_interface . h \" # include \" api / function_view . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" modules / rtp_rtcp / include / report_block_data . h \" # include \" modules / rtp_rtcp / source / rtp_rtcp_interface . h \" # include \" modules / rtp_rtcp / source / rtp_sender_audio . h \" namespace webrtc { class FrameEncryptorInterface ; class RtcEventLog ; class RtpTransportControllerSendInterface ; struct CallSendStatistics { int64_t rttMs ; int64_t payload_bytes_sent ; int64_t header_and_padding_bytes_sent ; uint64_t retransmitted_bytes_sent ; int packetsSent ; TimeDelta total_packet_send_delay =)",
    "insertText": "Zero()"
  },
  {
    "label": "ChannelSendInterface()",
    "kind": "Method",
    "detail": "Function (uint64_t retransmitted_packets_sent ; std::vector<ReportBlockData> report_block_datas ; uint32_t nacks_rcvd ; } ; struct ReportBlock { uint32_t sender_SSRC ; uint32_t source_SSRC ; uint8_t fraction_lost ; int32_t cumulative_num_packets_lost ; uint32_t extended_highest_sequence_number ; uint32_t interarrival_jitter ; uint32_t last_SR_timestamp ; uint32_t delay_since_last_SR ; } ; namespace voe { class ChannelSendInterface { public : ~)",
    "insertText": "ChannelSendInterface()"
  },
  {
    "label": "ReceivedRTCPPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedRTCPPacket(const uint8_t* packet, size_t length)"
  },
  {
    "label": "GetRTCPStatistics()",
    "kind": "Method",
    "detail": "Function (CallSendStatistics)",
    "insertText": "GetRTCPStatistics()"
  },
  {
    "label": "SetEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncoder(int payload_type, std::unique_ptr<AudioEncoder> encoder)"
  },
  {
    "label": "ModifyEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyEncoder(rtc::FunctionView<void(std::unique_ptr<AudioEncoder>*)> modifier)"
  },
  {
    "label": "CallEncoder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallEncoder(rtc::FunctionView<void(AudioEncoder*)> modifier)"
  },
  {
    "label": "SetRTCP_CNAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRTCP_CNAME(absl::string_view c_name)"
  },
  {
    "label": "SetSendAudioLevelIndicationStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendAudioLevelIndicationStatus(bool enable, int id)"
  },
  {
    "label": "RegisterSenderCongestionControlObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterSenderCongestionControlObjects(RtpTransportControllerSendInterface* transport, RtcpBandwidthObserver* bandwidth_observer)"
  },
  {
    "label": "ResetSenderCongestionControlObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSenderCongestionControlObjects()"
  },
  {
    "label": "GetRemoteRTCPReportBlocks()",
    "kind": "Method",
    "detail": "Function (std::vector<ReportBlock>)",
    "insertText": "GetRemoteRTCPReportBlocks()"
  },
  {
    "label": "GetANAStatistics()",
    "kind": "Method",
    "detail": "Function (ANAStats)",
    "insertText": "GetANAStatistics()"
  },
  {
    "label": "RegisterCngPayloadType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterCngPayloadType(int payload_type, int payload_frequency)"
  },
  {
    "label": "SetSendTelephoneEventPayloadType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendTelephoneEventPayloadType(int payload_type, int payload_frequency)"
  },
  {
    "label": "SendTelephoneEventOutband()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendTelephoneEventOutband(int event, int duration_ms)"
  },
  {
    "label": "OnBitrateAllocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBitrateAllocation(BitrateAllocationUpdate update)"
  },
  {
    "label": "GetTargetBitrate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTargetBitrate()"
  },
  {
    "label": "SetInputMute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInputMute(bool muted)"
  },
  {
    "label": "ProcessAndEncodeAudio()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAndEncodeAudio(std::unique_ptr<AudioFrame> audio_frame)"
  },
  {
    "label": "GetRtpRtcp()",
    "kind": "Method",
    "detail": "Function (RtpRtcpInterface*)",
    "insertText": "GetRtpRtcp()"
  },
  {
    "label": "GetRTT()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "GetRTT()"
  },
  {
    "label": "StartSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartSend()"
  },
  {
    "label": "StopSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopSend()"
  },
  {
    "label": "SetFrameEncryptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameEncryptor(rtc::scoped_refptr<FrameEncryptorInterface> frame_encryptor)"
  },
  {
    "label": "SetEncoderToPacketizerFrameTransformer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEncoderToPacketizerFrameTransformer(rtc::scoped_refptr<webrtc::FrameTransformerInterface> frame_transformer)"
  },
  {
    "label": "CreateChannelSend()",
    "kind": "Method",
    "detail": "Function (} ; std::unique_ptr<ChannelSendInterface>)",
    "insertText": "CreateChannelSend(Clock* clock, TaskQueueFactory* task_queue_factory, Transport* rtp_transport, RtcpRttStats* rtcp_rtt_stats, RtcEventLog* rtc_event_log, FrameEncryptorInterface* frame_encryptor, const webrtc::CryptoOptions& crypto_options, bool extmap_allow_mixed, int rtcp_report_interval_ms, uint32_t ssrc, rtc::scoped_refptr<FrameTransformerInterface> frame_transformer, TransportFeedbackObserver* feedback_observer, const FieldTrialsView& field_trials)"
  }
]