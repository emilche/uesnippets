[
  {
    "label": "TempWindowWin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TempWindowWin"
  },
  {
    "label": "RootWindowManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootWindowManager"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "base"
  },
  {
    "label": "GetWindowHandle()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_TESTS_CEFCLIENT_BROWSER_TEMP_WINDOW_WIN_H_ # define CEF_TESTS_CEFCLIENT_BROWSER_TEMP_WINDOW_WIN_H_ # pragma once # include \" include / cef_base . h \" namespace client { class TempWindowWin { public : CefWindowHandle)",
    "insertText": "GetWindowHandle()"
  },
  {
    "label": "TempWindowWin()",
    "kind": "Method",
    "detail": "Function (private : class RootWindowManager ; struct base::DefaultDeleter<TempWindowWin> ;)",
    "insertText": "TempWindowWin()"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (CefWindowHandle hwnd_ ;)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(TempWindowWin)"
  }
]