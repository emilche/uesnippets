[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "UMovieSceneEntitySystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystem"
  },
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FSystemSubsequentTasks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSystemSubsequentTasks"
  },
  {
    "label": "FSystemTaskPrerequisites",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSystemTaskPrerequisites"
  },
  {
    "label": "FEntityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntityManager"
  },
  {
    "label": "FEntitySystemScheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntitySystemScheduler"
  },
  {
    "label": "FMovieSceneEntitySystemGraphNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntitySystemGraphNode"
  },
  {
    "label": "FMovieSceneEntitySystemGraphNodes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntitySystemGraphNodes"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FMovieSceneEntitySystemGraph",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntitySystemGraph"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / TaskGraphInterfaces . h \" # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / BitArray . h \" # include \" Containers / ContainerAllocationPolicies . h \" # include \" Containers / SortedMap . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" EntitySystem / MovieSceneEntitySystemDirectedGraph . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Math / NumericLimits . h \" # include \" Misc / AssertionMacros . h \" # include \" Templates / Casts . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / SubclassOf . h \" # include \" UObject / Class . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" MovieSceneEntitySystemGraphs . generated . h \" class FReferenceCollector ; class UMovieSceneEntitySystem ; class UMovieSceneEntitySystemLinker ; template<FuncType> class TFunctionRef ; namespace UE { namespace MovieScene { struct FSystemSubsequentTasks ; struct FSystemTaskPrerequisites ; class FEntityManager ; class FEntitySystemScheduler ; } })",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "FMovieSceneEntitySystemGraphNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneEntitySystemGraphNode() : System(nullptr)"
  },
  {
    "label": "FMovieSceneEntitySystemGraphNode()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneEntitySystemGraphNode(UMovieSceneEntitySystem* InSystem) : System(InSystem)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() void AddStructReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (using FDirectionalEdge = UE::MovieScene::FDirectedGraph::FDirectionalEdge ;)",
    "insertText": "GENERATED_BODY() MOVIESCENE_API FMovieSceneEntitySystemGraph()"
  },
  {
    "label": "FMovieSceneEntitySystemGraph()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMovieSceneEntitySystemGraph()"
  },
  {
    "label": "FMovieSceneEntitySystemGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneEntitySystemGraph(const FMovieSceneEntitySystemGraph&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const FMovieSceneEntitySystemGraph&)"
  },
  {
    "label": "FMovieSceneEntitySystemGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMovieSceneEntitySystemGraph(FMovieSceneEntitySystemGraph&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FMovieSceneEntitySystemGraph&)",
    "insertText": "operator(FMovieSceneEntitySystemGraph&&)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReference(UMovieSceneEntitySystem* FromReference, UMovieSceneEntitySystem* ToReference)"
  },
  {
    "label": "RemoveReference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReference(UMovieSceneEntitySystem* FromReference, UMovieSceneEntitySystem* ToReference)"
  },
  {
    "label": "GatherReferencesFrom()",
    "kind": "Method",
    "detail": "Function (template<Allocator> void)",
    "insertText": "GatherReferencesFrom(const UMovieSceneEntitySystem* FromReference, TArray<UMovieSceneEntitySystem*, Allocator>& OutReferences)"
  },
  {
    "label": "IterateReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateReferences(FromReference, [&OutReferences](UMovieSceneEntitySystem* System){ OutReferences.Add(System); })"
  },
  {
    "label": "IterateReferencesFrom()",
    "kind": "Method",
    "detail": "Function (} template<Iter> void)",
    "insertText": "IterateReferencesFrom(const UMovieSceneEntitySystem* FromReference, Iter&& Iterator)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Iterator(Nodes.Array[Edge.ToNode])"
  },
  {
    "label": "GatherReferencesTo()",
    "kind": "Method",
    "detail": "Function (} } template<Allocator> void)",
    "insertText": "GatherReferencesTo(const UMovieSceneEntitySystem* ToReference, TArray<UMovieSceneEntitySystem*, Allocator>& OutReferences)"
  },
  {
    "label": "IterateReferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateReferences(ToReference, [&OutReferences](UMovieSceneEntitySystem* System){ OutReferences.Add(System); })"
  },
  {
    "label": "IterateReferencesTo()",
    "kind": "Method",
    "detail": "Function (} template<Iter> void)",
    "insertText": "IterateReferencesTo(const UMovieSceneEntitySystem* ToReference, Iter&& Iterator)"
  },
  {
    "label": "GetGraphID()",
    "kind": "Method",
    "detail": "Function (const uint16 ToNode =)",
    "insertText": "GetGraphID(ToReference)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Iterator(Nodes.Array[Edge.FromNode])"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (} } } bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "HasReferencesTo()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasReferencesTo(const UMovieSceneEntitySystem* ToReference)"
  },
  {
    "label": "HasReferencesFrom()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasReferencesFrom(const UMovieSceneEntitySystem* FromReference)"
  },
  {
    "label": "AddSystem()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddSystem(UMovieSceneEntitySystem* InSystem)"
  },
  {
    "label": "RemoveSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSystem(UMovieSceneEntitySystem* InSystem)"
  },
  {
    "label": "RemoveIrrelevantSystems()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveIrrelevantSystems(UMovieSceneEntitySystemLinker* Linker)"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "NumInPhase()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumInPhase(UE::MovieScene::ESystemPhase Phase)"
  },
  {
    "label": "ExecutePhase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutePhase(UE::MovieScene::ESystemPhase Phase, UMovieSceneEntitySystemLinker* Linker, FGraphEventArray& OutTasks)"
  },
  {
    "label": "IteratePhase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IteratePhase(UE::MovieScene::ESystemPhase Phase, TFunctionRef<void(UMovieSceneEntitySystem*)> InIter)"
  },
  {
    "label": "ReconstructTaskSchedule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReconstructTaskSchedule(UE::MovieScene::FEntityManager* EntityManager)"
  },
  {
    "label": "ScheduleTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ScheduleTasks(UE::MovieScene::FEntityManager* EntityManager)"
  },
  {
    "label": "GetSystems()",
    "kind": "Method",
    "detail": "Function (TArray<UMovieSceneEntitySystem*>)",
    "insertText": "GetSystems()"
  },
  {
    "label": "FindSystemOfType()",
    "kind": "Method",
    "detail": "Function (template<SystemType> SystemType*)",
    "insertText": "FindSystemOfType()"
  },
  {
    "label": "FindSystemOfType()",
    "kind": "Method",
    "detail": "Function (} UMovieSceneEntitySystem*)",
    "insertText": "FindSystemOfType(TSubclassOf<UMovieSceneEntitySystem> InClassType)"
  },
  {
    "label": "DebugPrint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugPrint()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "GetGraphID()",
    "kind": "Method",
    "detail": "Function (private : uint16)",
    "insertText": "GetGraphID(const UMovieSceneEntitySystem* InSystem)"
  },
  {
    "label": "UpdateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCache()"
  },
  {
    "label": "ExecutePhase()",
    "kind": "Method",
    "detail": "Function (template<ArrayType> void)",
    "insertText": "ExecutePhase(UE::MovieScene::ESystemPhase Phase, const ArrayType& RetrieveEntries, UMovieSceneEntitySystemLinker* Linker, FGraphEventArray& OutTasks)"
  }
]