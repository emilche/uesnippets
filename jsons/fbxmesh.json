[
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "DuplicateVertex",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DuplicateVertex"
  },
  {
    "label": "VertexNormalInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VertexNormalInfo"
  },
  {
    "label": "ESmoothness",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESmoothness"
  },
  {
    "label": "ESmoothness",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESmoothness"
  },
  {
    "label": "EBoundaryRule",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBoundaryRule"
  },
  {
    "label": "EBoundaryRule",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EBoundaryRule"
  },
  {
    "label": "PolygonDef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PolygonDef"
  },
  {
    "label": "ComponentMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ComponentMap"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "SplitEdgeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SplitEdgeData"
  },
  {
    "label": "PolygonIndexDef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PolygonIndexDef"
  },
  {
    "label": "V2PVMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "V2PVMap"
  },
  {
    "label": "EdgeLookupDef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EdgeLookupDef"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FbxGeometryConverter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxGeometryConverter"
  },
  {
    "label": "BeginPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPolygon(int pMaterial=-1, int pTexture=-1, int pGroup=-1, bool pLegacy=true)"
  },
  {
    "label": "BeginPolygonExt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPolygonExt(int pMaterial, int* pTextures)"
  },
  {
    "label": "AddPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPolygon(int pIndex, int pTextureUVIndex = -1)"
  },
  {
    "label": "EndPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPolygon()"
  },
  {
    "label": "RemovePolygon()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RemovePolygon(int pPolygonIndex)"
  },
  {
    "label": "RemoveDuplicatedEdges()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RemoveDuplicatedEdges(FbxArray<int>& pEdgeIndexList)"
  },
  {
    "label": "InitTextureUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTextureUV(int pCount, FbxLayerElement::EType pTypeIdentifier=FbxLayerElement::eTextureDiffuse)"
  },
  {
    "label": "AddTextureUV()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTextureUV(FbxVector2 pUV, FbxLayerElement::EType pTypeIdentifier=FbxLayerElement::eTextureDiffuse)"
  },
  {
    "label": "GetTextureUVCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTextureUVCount(FbxLayerElement::EType pTypeIdentifier=FbxLayerElement::eTextureDiffuse)"
  },
  {
    "label": "GetAllChannelUV()",
    "kind": "Method",
    "detail": "Function (FbxArray<FbxLayerElement::EType>)",
    "insertText": "GetAllChannelUV(int pLayer)"
  },
  {
    "label": "InitMaterialIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMaterialIndices(FbxLayerElement::EMappingMode pMappingMode)"
  },
  {
    "label": "InitTextureIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTextureIndices(FbxLayerElement::EMappingMode pMappingMode, FbxLayerElement::EType pTextureType)"
  },
  {
    "label": "InitTextureUVIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTextureUVIndices(FbxLayerElement::EMappingMode pMappingMode, FbxLayerElement::EType pTypeIdentifier=FbxLayerElement::eTextureDiffuse)"
  },
  {
    "label": "GetTextureUVIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTextureUVIndex(int pPolygonIndex, int pPositionInPolygon, FbxLayerElement::EType pTypeIdentifier=FbxLayerElement::eTextureDiffuse)"
  },
  {
    "label": "SetTextureUVIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureUVIndex(int pPolygonIndex, int pPositionInPolygon, int pIndex, FbxLayerElement::EType pTypeIdentifier)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GenerateNormals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateNormals(bool pOverwrite=false, bool pByCtrlPoint = false, bool pCW=false)"
  },
  {
    "label": "CheckIfVertexNormalsCCW()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CheckIfVertexNormalsCCW()"
  },
  {
    "label": "RemoveBadPolygons()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "RemoveBadPolygons()"
  },
  {
    "label": "SplitPoints()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SplitPoints(FbxLayerElement::EType pTypeIdentifier=FbxLayerElement::eTextureDiffuse)"
  },
  {
    "label": "BuildMergeList()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildMergeList(FbxArray<int>& pMergeList)"
  },
  {
    "label": "MergePointsForPolygonVerteNormals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergePointsForPolygonVerteNormals(FbxArray<int> &pMergeList)"
  },
  {
    "label": "BuildMeshEdgeArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildMeshEdgeArray()"
  },
  {
    "label": "GetMeshEdgeIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMeshEdgeIndex(int pStartVertexIndex, int pEndVertexIndex, bool& pReversed, int pExistedEdgeCount=-1)"
  },
  {
    "label": "BeginGetMeshEdgeIndexForPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGetMeshEdgeIndexForPolygon()"
  },
  {
    "label": "EndGetMeshEdgeIndexForPolygon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndGetMeshEdgeIndexForPolygon()"
  },
  {
    "label": "GetMeshEdgeIndexForPolygon()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetMeshEdgeIndexForPolygon(int pPolygon, int pPositionInPolygon)"
  },
  {
    "label": "BeginGetMeshEdgeVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginGetMeshEdgeVertices()"
  },
  {
    "label": "EndGetMeshEdgeVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndGetMeshEdgeVertices()"
  },
  {
    "label": "SetMeshEdgeCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshEdgeCount(int pEdgeCount)"
  },
  {
    "label": "AddMeshEdgeIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddMeshEdgeIndex(int pStartVertexIndex, int pEndVertexIndex, bool pCheckForDuplicates)"
  },
  {
    "label": "SetMeshEdgeIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "SetMeshEdgeIndex(int pEdgeIndex, int pStartVertexIndex, int pEndVertexIndex, bool pCheckForDuplicates, int pExistedEdgeCount=-1)"
  },
  {
    "label": "BeginAddMeshEdgeIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAddMeshEdgeIndex()"
  },
  {
    "label": "EndAddMeshEdgeIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndAddMeshEdgeIndex()"
  },
  {
    "label": "AddMeshEdgeIndexForPolygon()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddMeshEdgeIndexForPolygon(int pPolygonIndex, int pPositionInPolygon)"
  },
  {
    "label": "SetMeshEdgeIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMeshEdgeIndex(int pEdgeIndex, int pPolygonIndex, int pPositionInPolygon)"
  },
  {
    "label": "GetEdgeCreaseInfo()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetEdgeCreaseInfo(int pEdgeIndex)"
  },
  {
    "label": "GetEdgeCreaseInfoArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEdgeCreaseInfoArray(FbxLayerElementArrayTemplate<double>** pCreaseArray)"
  },
  {
    "label": "GetVertexCreaseInfo()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetVertexCreaseInfo(int pVertexIndex)"
  },
  {
    "label": "GetVertexCreaseInfoArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVertexCreaseInfoArray(FbxLayerElementArrayTemplate<double>** pCreaseArray)"
  },
  {
    "label": "SetEdgeCreaseInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEdgeCreaseInfo(int pEdgeIndex, double pWeight)"
  },
  {
    "label": "SetEdgeCreaseInfoArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEdgeCreaseInfoArray(FbxArray<double>* pWeightArray)"
  },
  {
    "label": "SetVertexCreaseInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVertexCreaseInfo(int pVertexIndex, double pWeight)"
  },
  {
    "label": "SetVertexCreaseInfoArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVertexCreaseInfoArray(FbxArray<double>* pWeightArray)"
  },
  {
    "label": "SetMeshSmoothness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshSmoothness(FbxMesh::ESmoothness pSmoothness)"
  },
  {
    "label": "SetMeshPreviewDivisionLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshPreviewDivisionLevels(int pPreviewDivisionLevels)"
  },
  {
    "label": "SetMeshRenderDivisionLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMeshRenderDivisionLevels(int pRenderDivisionLevels)"
  },
  {
    "label": "SetDisplaySubdivisions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDisplaySubdivisions(bool pDisplySubdivisions)"
  },
  {
    "label": "SetBoundaryRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoundaryRule(EBoundaryRule pBoundaryRule)"
  },
  {
    "label": "SetPreserveBorders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreserveBorders(bool pPreserveBorders)"
  },
  {
    "label": "SetPreserveHardEdges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreserveHardEdges(bool pPreserveHardEdges)"
  },
  {
    "label": "SetPropagateEdgeHardness()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPropagateEdgeHardness(bool pPropagateEdgeHardness)"
  },
  {
    "label": "GetPolyHoleInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPolyHoleInfo(int pFaceIndex)"
  },
  {
    "label": "GetPolyHoleInfoArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPolyHoleInfoArray(FbxLayerElementArrayTemplate<bool>** pHoleArray)"
  },
  {
    "label": "SetPolyHoleInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPolyHoleInfo(int pFaceIndex, bool pIsHole)"
  },
  {
    "label": "SetPolyHoleInfoArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPolyHoleInfoArray(FbxArray<bool>* pHoleArray)"
  },
  {
    "label": "GenerateTangentsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateTangentsData(const char* pUVSetName=NULL, bool pOverwrite=false, bool pIgnoreTangentFlip = false)"
  },
  {
    "label": "GenerateTangentsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateTangentsData(int pUVSetLayerIndex, bool pOverwrite=false, bool pIgnoreTangentFlip = false)"
  },
  {
    "label": "GenerateTangentsDataForAllUVSets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateTangentsDataForAllUVSets(bool pOverwrite=false, bool pIgnoreTangentFlip=false)"
  },
  {
    "label": "ComputeComponentMaps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeComponentMaps(ComponentMap& pEdgeToPolyMap, ComponentMap& pPolyToEdgeMap)"
  },
  {
    "label": "ControlPointToVerticesMap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ControlPointToVerticesMap()"
  },
  {
    "label": "Valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Valid()"
  },
  {
    "label": "Fill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Fill(FbxMesh* pMesh)"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCount()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init(int pNbEntries)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "ComputeControlPointToVerticesMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeControlPointToVerticesMap(ControlPointToVerticesMap& pMap)"
  },
  {
    "label": "ConformNormalsTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConformNormalsTo(const FbxMesh* pMesh)"
  },
  {
    "label": "InitTextureIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTextureIndices(FbxLayerElementTexture* pLayerElementTexture, FbxLayerElement::EMappingMode pMappingMode)"
  },
  {
    "label": "RemoveTextureIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTextureIndex(FbxLayerElementTexture* pLayerElementTextures, int pPolygonIndex, int pOffset)"
  },
  {
    "label": "RemoveUVIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUVIndex(FbxLayerElementUV* pLayerElementUV, int pPolygonIndex, int pOffset)"
  },
  {
    "label": "FindPolygonIndex()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "FindPolygonIndex(int pEdgeIndex)"
  },
  {
    "label": "PolygonIndexCompare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PolygonIndexCompare(const void* p1, const void* p2)"
  },
  {
    "label": "PolySetTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PolySetTexture(FbxLayer* pLayer, int pTextureIndex, FbxLayerElement::EType pTextureType)"
  },
  {
    "label": "GenerateTangentsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateTangentsData(FbxLayerElementUV* pUVSet, int pLayerIndex, bool pOverwrite=false, bool pIgnoreTangentFlip = false)"
  },
  {
    "label": "ComputeNormalsPerCtrlPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNormalsPerCtrlPoint(FbxArray<VertexNormalInfo>& lNormalInfo, bool pCW=false)"
  },
  {
    "label": "ComputeNormalsPerPolygonVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeNormalsPerPolygonVertex(FbxArray<VertexNormalInfo>& lNormalInfo, bool pCW=false)"
  },
  {
    "label": "GenerateNormalsByCtrlPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateNormalsByCtrlPoint(bool pCW)"
  }
]