[
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FGenericCrashContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericCrashContext"
  },
  {
    "label": "FProcHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProcHandle"
  },
  {
    "label": "FProgramCounterSymbolInfoEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProgramCounterSymbolInfoEx"
  },
  {
    "label": "FStackWalkModuleInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStackWalkModuleInfo"
  },
  {
    "label": "FProgramCounterSymbolInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProgramCounterSymbolInfo"
  },
  {
    "label": "FProgramCounterSymbolInfoEx",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FProgramCounterSymbolInfoEx"
  },
  {
    "label": "FGenericPlatformStackWalk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericPlatformStackWalk"
  },
  {
    "label": "EStackWalkFlags",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EStackWalkFlags"
  },
  {
    "label": "FProgramCounterSymbolInfo()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FProgramCounterSymbolInfo()"
  },
  {
    "label": "FProgramCounterSymbolInfoEx()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FProgramCounterSymbolInfoEx(FString InModuleName = \"\", FString InFunctionName = \"\", FString InFilename = \"\", uint32 InLineNumber = 0, uint64 InSymbolDisplacement = 0, uint64 InOffsetInModule = 0, uint64 InProgramCounter = 0)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "ProgramCounterToHumanReadableString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProgramCounterToHumanReadableString( int32 CurrentCallDepth, uint64 ProgramCounter, ANSICHAR* HumanReadableString, SIZE_T HumanReadableStringSize, FGenericCrashContext* Context = nullptr )"
  },
  {
    "label": "SymbolInfoToHumanReadableString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SymbolInfoToHumanReadableString( const FProgramCounterSymbolInfo& SymbolInfo, ANSICHAR* HumanReadableString, SIZE_T HumanReadableStringSize )"
  },
  {
    "label": "SymbolInfoToHumanReadableStringEx()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SymbolInfoToHumanReadableStringEx( const FProgramCounterSymbolInfoEx& SymbolInfo, FString& out_HumanReadableString )"
  },
  {
    "label": "CaptureStackBackTrace()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CaptureStackBackTrace( uint64* BackTrace, uint32 MaxDepth, void* Context = nullptr )"
  },
  {
    "label": "CaptureThreadStackBackTrace()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "CaptureThreadStackBackTrace(uint64 ThreadId, uint64* BackTrace, uint32 MaxDepth, void* Context = nullptr)"
  },
  {
    "label": "StackWalkAndDump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StackWalkAndDump( ANSICHAR* HumanReadableString, SIZE_T HumanReadableStringSize, int32 IgnoreCount, void* Context = nullptr )"
  },
  {
    "label": "StackWalkAndDump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StackWalkAndDump( ANSICHAR* HumanReadableString, SIZE_T HumanReadableStringSize, void* ProgramCounter, void* Context = nullptr )"
  },
  {
    "label": "GetStack()",
    "kind": "Method",
    "detail": "Function (TArray<FProgramCounterSymbolInfo>)",
    "insertText": "GetStack(int32 IgnoreCount, int32 MaxDepth = 100, void* Context = nullptr)"
  },
  {
    "label": "StackWalkAndDumpEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StackWalkAndDumpEx( ANSICHAR* HumanReadableString, SIZE_T HumanReadableStringSize, int32 IgnoreCount, uint32 Flags, void* Context = nullptr )"
  },
  {
    "label": "StackWalkAndDumpEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StackWalkAndDumpEx( ANSICHAR* HumanReadableString, SIZE_T HumanReadableStringSize, void* ProgramCounter, uint32 Flags, void* Context = nullptr )"
  },
  {
    "label": "GetSymbolMetaData()",
    "kind": "Method",
    "detail": "Function (FString>)",
    "insertText": "GetSymbolMetaData()"
  },
  {
    "label": "WantsDetailedCallstacksInNonMonolithicBuilds()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WantsDetailedCallstacksInNonMonolithicBuilds()"
  }
]