[
  {
    "label": "TConvexHull2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TConvexHull2"
  },
  {
    "label": "SolveSimplePolygon()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" CoreMinimal . h \" # include \" IndexTypes . h \" # include \" LineTypes . h \" # include \" Math / UnrealMathSSE . h \" # include \" Math / Vector2D . h \" # include \" MathUtil . h \" # include \" Misc / AssertionMacros . h \" # include \" PlaneTypes . h \" # include \" Polygon2 . h \" # include \" Templates / Function . h \" namespace UE { namespace Geometry { using namespace UE::Math ; template<RealType> class TConvexHull2 { public : bool)",
    "insertText": "SolveSimplePolygon(int32 NumPolygonPoints, TFunctionRef<TVector2<RealType>(int32)> GetPointFunc, bool bIsKnownCCW = false)"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Solve(int32 NumPoints, TFunctionRef<TVector2<RealType>(int32)> GetPointFunc, TFunctionRef<bool(int32)> FilterFunc = [](int32 Idx) {return true;})"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Solve(TArrayView<const TVector2<RealType>> Points, TFunctionRef<bool(int32)> FilterFunc)"
  },
  {
    "label": "Solve()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Solve(TArrayView<const TVector2<RealType>> Points)"
  },
  {
    "label": "IsSolutionAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSolutionAvailable()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (Dimension = 0 ; NumUniquePoints = 0 ; Hull .)",
    "insertText": "Empty()"
  },
  {
    "label": "GetDimension()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetDimension()"
  },
  {
    "label": "RealType()",
    "kind": "Method",
    "detail": "Function (} return TLine2<)",
    "insertText": "RealType()"
  },
  {
    "label": "GetHull()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "GetHull(TFunctionRef<TVector2<RealType>(int32)> GetPointFunc, TArray<int32>& Merged, int32& IdxFirst, int32& IdxLast)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(TFunctionRef<TVector2<RealType>(int32)> GetPointFunc, TArray<int32>& Merged, int32 j0, int32 j1, int32 j2, int32 j3, int32& i0, int32& i1)"
  },
  {
    "label": "GetTangent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTangent(TFunctionRef<TVector2<RealType>(int32)> GetPointFunc, TArray<int32>& Merged, int32 j0, int32 j1, int32 j2, int32 j3, int32& i0, int32& i1)"
  }
]