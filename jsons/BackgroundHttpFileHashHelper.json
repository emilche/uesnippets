[
  {
    "label": "FURLTempFileMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FURLTempFileMapping"
  },
  {
    "label": "FBackgroundHttpFileHashHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBackgroundHttpFileHashHelper"
  },
  {
    "label": "FURLTempFileMapping()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" struct FURLTempFileMapping { public : FString URL ; FString TempFilename ;)",
    "insertText": "FURLTempFileMapping() : URL() , TempFilename()"
  },
  {
    "label": "FURLTempFileMapping()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FURLTempFileMapping(const FString& URLIn, const FString& TempFilenameIn) : URL(URLIn) , TempFilename(TempFilenameIn)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "InitFromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitFromString(const FString& StringIn)"
  },
  {
    "label": "FBackgroundHttpFileHashHelper()",
    "kind": "Method",
    "detail": "Function (} ; class FBackgroundHttpFileHashHelper { public :)",
    "insertText": "FBackgroundHttpFileHashHelper() : bHasLoadedURLData(false) , bIsDirty(false) , URLFileMappings()"
  },
  {
    "label": "LoadData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LoadData()"
  },
  {
    "label": "SaveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveData()"
  },
  {
    "label": "FindTempFilenameMappingForURL()",
    "kind": "Method",
    "detail": "Function (const FString*)",
    "insertText": "FindTempFilenameMappingForURL(const FString& URL)"
  },
  {
    "label": "FindOrAddTempFilenameMappingForURL()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "FindOrAddTempFilenameMappingForURL(const FString& URL)"
  },
  {
    "label": "RemoveURLMapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveURLMapping(const FString& URL)"
  },
  {
    "label": "FindMappedURLForTempFilename()",
    "kind": "Method",
    "detail": "Function (const FString*)",
    "insertText": "FindMappedURLForTempFilename(const FString& TempFilename)"
  },
  {
    "label": "DeleteURLMappingsWithoutTempFiles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteURLMappingsWithoutTempFiles()"
  },
  {
    "label": "GetTemporaryRootPath()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetTemporaryRootPath()"
  },
  {
    "label": "GetTempFileExtension()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetTempFileExtension()"
  },
  {
    "label": "GetFullPathOfTempFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFullPathOfTempFilename(const FString& TempFilename)"
  },
  {
    "label": "GetURLMappingFilePath()",
    "kind": "Method",
    "detail": "Function (private : const FString&)",
    "insertText": "GetURLMappingFilePath()"
  },
  {
    "label": "FindMappingForURL()",
    "kind": "Method",
    "detail": "Function (const FURLTempFileMapping*)",
    "insertText": "FindMappingForURL(const FString& URL)"
  },
  {
    "label": "FindValidFilenameHashForURL()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FindValidFilenameHashForURL(const FString& URL)"
  },
  {
    "label": "GenerateHashedFilenameForURL()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateHashedFilenameForURL(const FString& URL, uint32 CollisionCount)"
  }
]