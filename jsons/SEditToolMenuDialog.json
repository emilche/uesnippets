[
  {
    "label": "UToolMenuEditorDialogEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenuEditorDialogEntry"
  },
  {
    "label": "SEditToolMenuDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditToolMenuDialog"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Input / SComboBox . h \" # include \" ToolMenus . h \" # include \" UObject / StrongObjectPtr . h \" # include \" ToolMenusEditor . h \" class UToolMenuEditorDialogEntry ; class SEditToolMenuDialog : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SEditToolMenuDialog)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<SWindow>, ParentWindow) SLATE_ARGUMENT(UToolMenu*, SourceMenu) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "OnToggleVisibleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleVisibleClicked(TSharedRef<const FMultiBlock> InBlock, TWeakPtr<SMultiBoxWidget> BaseWidget)"
  },
  {
    "label": "CloseContainingWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseContainingWindow()"
  },
  {
    "label": "OnWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWindowClosed(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "ModifyBlockWidgetAfterMake()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "ModifyBlockWidgetAfterMake(const TSharedRef<SMultiBoxWidget>& InMultiBoxWidget, const FMultiBlock& InBlock, const TSharedRef<SWidget>& InBlockWidget)"
  },
  {
    "label": "BuildWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildWidget()"
  },
  {
    "label": "HandleOnLiveCodingPatchComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOnLiveCodingPatchComplete()"
  },
  {
    "label": "InitMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitMenu(UToolMenu* InMenu)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Refresh()"
  },
  {
    "label": "HandleResetClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleResetClicked()"
  },
  {
    "label": "HandleResetAllClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleResetAllClicked()"
  },
  {
    "label": "UndoAllChanges()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "UndoAllChanges()"
  },
  {
    "label": "LoadSelectedObjectState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSelectedObjectState()"
  },
  {
    "label": "SaveSettingsToDisk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveSettingsToDisk()"
  },
  {
    "label": "BuildMenuPropertiesWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildMenuPropertiesWidget()"
  },
  {
    "label": "MakeMenuNameComboEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeMenuNameComboEntryWidget(TSharedPtr<FName> InEntry)"
  },
  {
    "label": "OnMenuNamesSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuNamesSelectionChanged(TSharedPtr<FName> InEntry, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "OnSelectedEntryChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedEntryChanged(TSharedRef<const FMultiBlock> InBlock)"
  },
  {
    "label": "SetSelectedItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedItem(const FName InName, ESelectedEditMenuEntryType InType)"
  }
]