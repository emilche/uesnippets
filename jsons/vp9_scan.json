[
  {
    "label": "get_coef_context()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_COMMON_VP9_SCAN_H_ # define VPX_VP9_COMMON_VP9_SCAN_H_ # include \" vpx / vpx_integer . h \" # include \" vpx_ports / mem . h \" # include \" vp9 / common / vp9_enums . h \" # include \" vp9 / common / vp9_blockd . h \" # ifdef __cplusplus \" C \" { # endif # define MAX_NEIGHBORS 2 typedef struct { const int16_t* scan ; const int16_t* iscan ; const int16_t* neighbors ; } scan_order ; const scan_order vp9_default_scan_orders [ TX_SIZES ] ; const scan_order vp9_scan_orders [ TX_SIZES ] [ TX_TYPES ] ; int)",
    "insertText": "get_coef_context(const int16_t *neighbors, const uint8_t *token_cache, int c)"
  },
  {
    "label": "get_scan()",
    "kind": "Method",
    "detail": "Function (} const scan_order*)",
    "insertText": "get_scan(const MACROBLOCKD *xd, TX_SIZE tx_size, PLANE_TYPE type, int block_idx)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (const MODE_INFO* const mi = xd -> mi [ 0 ] ;)",
    "insertText": "if(is_inter_block(mi) || type != PLANE_TYPE_Y || xd->lossless)"
  }
]