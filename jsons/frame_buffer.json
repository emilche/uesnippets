[
  {
    "label": "VCMFrameBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMFrameBuffer"
  },
  {
    "label": "VCMFrameBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_FRAME_BUFFER_H_ # define MODULES_VIDEO_CODING_FRAME_BUFFER_H_ # include<stddef . h> # include<stdint . h> # include<vector> # include \" modules / video_coding / codecs / h264 / include / h264_globals . h \" # include \" modules / video_coding / codecs / vp9 / include / vp9_globals . h \" # include \" modules / video_coding / encoded_frame . h \" # include \" modules / video_coding / include / video_coding . h \" # include \" modules / video_coding / jitter_buffer_common . h \" # include \" modules / video_coding / packet . h \" # include \" modules / video_coding / session_info . h \" namespace webrtc { class VCMFrameBuffer : public VCMEncodedFrame { public :)",
    "insertText": "VCMFrameBuffer()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "InsertPacket()",
    "kind": "Method",
    "detail": "Function (VCMFrameBufferEnum)",
    "insertText": "InsertPacket(const VCMPacket& packet, int64_t timeInMs, const FrameData& frame_data)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (VCMFrameBufferStateEnum)",
    "insertText": "GetState()"
  },
  {
    "label": "PrepareForDecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForDecode(bool continuous)"
  },
  {
    "label": "IsSessionComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSessionComplete()"
  },
  {
    "label": "HaveFirstPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HaveFirstPacket()"
  },
  {
    "label": "NumPackets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumPackets()"
  },
  {
    "label": "GetLowSeqNum()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "GetLowSeqNum()"
  },
  {
    "label": "GetHighSeqNum()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "GetHighSeqNum()"
  },
  {
    "label": "PictureId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "PictureId()"
  },
  {
    "label": "TemporalId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TemporalId()"
  },
  {
    "label": "LayerSync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LayerSync()"
  },
  {
    "label": "Tl0PicId()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Tl0PicId()"
  },
  {
    "label": "GetNaluInfos()",
    "kind": "Method",
    "detail": "Function (std::vector<NaluInfo>)",
    "insertText": "GetNaluInfos()"
  },
  {
    "label": "SetGofInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGofInfo(const GofInfoVP9& gof_info, size_t idx)"
  },
  {
    "label": "IncrementNackCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IncrementNackCount()"
  },
  {
    "label": "GetNackCount()",
    "kind": "Method",
    "detail": "Function (int16_t)",
    "insertText": "GetNackCount()"
  },
  {
    "label": "LatestPacketTimeMs()",
    "kind": "Method",
    "detail": "Function (int64_t)",
    "insertText": "LatestPacketTimeMs()"
  },
  {
    "label": "FrameType()",
    "kind": "Method",
    "detail": "Function (webrtc::VideoFrameType)",
    "insertText": "FrameType()"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetState(VCMFrameBufferStateEnum state)"
  }
]