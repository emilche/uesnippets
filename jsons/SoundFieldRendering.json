[
  {
    "label": "FAmbisonicsSoundfieldBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAmbisonicsSoundfieldBuffer"
  },
  {
    "label": "FAmbisonicsSoundfieldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAmbisonicsSoundfieldSettings"
  },
  {
    "label": "FSoundFieldDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundFieldDecoder"
  },
  {
    "label": "FSoundFieldEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundFieldEncoder"
  },
  {
    "label": "FSoundFieldEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSoundFieldEncoder"
  },
  {
    "label": "GetUnrealAmbisonicsFormatName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUnrealAmbisonicsFormatName()"
  },
  {
    "label": "CreateDefaultSourceAmbisonicsDecoder()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<ISoundfieldDecoderStream>)",
    "insertText": "CreateDefaultSourceAmbisonicsDecoder(Audio::FMixerDevice* InDevice)"
  },
  {
    "label": "FSoundFieldDecoder()",
    "kind": "Method",
    "detail": "Function (SOUNDFIELDRENDERING_API)",
    "insertText": "FSoundFieldDecoder()"
  },
  {
    "label": "DecodeAudioDirectlyToDeviceOutputPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeAudioDirectlyToDeviceOutputPositions(const FAmbisonicsSoundfieldBuffer& InputData, const FSoundfieldSpeakerPositionalData& OutputPositions, Audio::FAlignedFloatBuffer& OutputData)"
  },
  {
    "label": "DecodeAudioToSevenOneAndDownmixToDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeAudioToSevenOneAndDownmixToDevice(const FAmbisonicsSoundfieldBuffer& InputData, const FSoundfieldSpeakerPositionalData& OutputPositions, Audio::FAlignedFloatBuffer& OutputData)"
  },
  {
    "label": "RotateFirstOrderAmbisonicsBed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RotateFirstOrderAmbisonicsBed(const FAmbisonicsSoundfieldBuffer& InputData, FAmbisonicsSoundfieldBuffer& OutputData, const FQuat& DestinationRotation, const FQuat& PreviousRotation)"
  },
  {
    "label": "FoaRotationInPlace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FoaRotationInPlace(Audio::FAlignedFloatBuffer& InOutFrames, const float XRotDegrees, const float YRotDegrees, const float ZRotDegrees)"
  },
  {
    "label": "FirstOrderDecodeLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FirstOrderDecodeLoop(const int32 NumFrames, const int32 NumOutputChannels, const float* pAmbiFrame, const int32 NumAmbiChannels, float* SpeakerGainsPtr, float* OutputBufferPtrBuffer)"
  },
  {
    "label": "FirstOrderToSevenOneLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FirstOrderToSevenOneLoop(const int32 NumFrames, const int32 NumOutputChannels, const float* pAmbiFrame, const int32 NumAmbiChannels, float* SpeakerGainsPtr, float* OutputBufferPtrBuffer)"
  },
  {
    "label": "OddOrderDecodeLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OddOrderDecodeLoop(const int32 NumFrames, const int32 NumOutputChannels, const float* pAmbiFrame, const int32 NumAmbiChannels, float* SpeakerGainsPtr, float* OutputBufferPtrBuffer)"
  },
  {
    "label": "OddOrderToSevenOneLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OddOrderToSevenOneLoop(const int32 NumFrames, const int32 NumOutputChannels, const float* pAmbiFrame, const int32 NumAmbiChannels, float* SpeakerGainsPtr, float* OutputBufferPtrBuffer)"
  },
  {
    "label": "EvenOrderDecodeLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvenOrderDecodeLoop(const int32 NumFrames, const int32 NumOutputChannels, const float* pAmbiFrame, const int32 NumAmbiChannels, float* SpeakerGainsPtr, float* OutputBufferPtrBuffer)"
  },
  {
    "label": "EvenOrderToSevenOneLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvenOrderToSevenOneLoop(const int32 NumFrames, const int32 NumOutputChannels, const float* pAmbiFrame, const int32 NumAmbiChannels, float* SpeakerGainsPtr, float* OutputBufferPtrBuffer)"
  },
  {
    "label": "FSoundFieldEncoder()",
    "kind": "Method",
    "detail": "Function (SOUNDFIELDRENDERING_API)",
    "insertText": "FSoundFieldEncoder()"
  },
  {
    "label": "EncodeAudioDirectlyFromOutputPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeAudioDirectlyFromOutputPositions(const Audio::FAlignedFloatBuffer& InputData, const FSoundfieldSpeakerPositionalData& InputPositions, const FAmbisonicsSoundfieldSettings& Settings, FAmbisonicsSoundfieldBuffer& OutputData)"
  },
  {
    "label": "EncodeLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeLoop(const int32 NumFrames, const int32 NumInputChannels, const float* RESTRICT InputAudioPtr, const int32 NumAmbiChannels, float* RESTRICT SpeakerGainsPtr, float* RESTRICT OutputAmbiBuffer)"
  }
]