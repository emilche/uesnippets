[
  {
    "label": "UTF8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF8"
  },
  {
    "label": "UTF16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF16"
  },
  {
    "label": "UTF16LE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF16LE"
  },
  {
    "label": "UTF16BE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF16BE"
  },
  {
    "label": "UTF32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF32"
  },
  {
    "label": "UTF32LE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF32LE"
  },
  {
    "label": "UTF32BE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF32BE"
  },
  {
    "label": "ASCII",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ASCII"
  },
  {
    "label": "UTFType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTFType"
  },
  {
    "label": "AutoUTF",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AutoUTF"
  },
  {
    "label": "Transcoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Transcoder"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef RAPIDJSON_ENCODINGS_H_ # define RAPIDJSON_ENCODINGS_H_ # include \" rapidjson . h \" # if)",
    "insertText": "defined(_MSC_VER) && !defined(__clang__) RAPIDJSON_DIAG_PUSH RAPIDJSON_DIAG_OFF(4244) RAPIDJSON_DIAG_OFF(4702) #elif defined(__GNUC__) RAPIDJSON_DIAG_PUSH RAPIDJSON_DIAG_OFF(effc++) RAPIDJSON_DIAG_OFF(overflow)"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (typedef CharType Ch ; enum { supportUnicode = 1 } ; template<OutputStream> void)",
    "insertText": "Encode(OutputStream& os, unsigned codepoint)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0xC0 | ((codepoint >> 6) & 0xFF)))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0x80 | ((codepoint & 0x3F))))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(codepoint <= 0xFFFF)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0xE0 | ((codepoint >> 12) & 0xFF)))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0x80 | ((codepoint >> 6) & 0x3F)))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0x80 | (codepoint & 0x3F)))"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "RAPIDJSON_ASSERT(codepoint <= 0x10FFFF)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0xF0 | ((codepoint >> 18) & 0xFF)))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(0x80 | ((codepoint >> 12) & 0x3F)))"
  },
  {
    "label": "EncodeUnsafe()",
    "kind": "Method",
    "detail": "Function (} } template<OutputStream> void)",
    "insertText": "EncodeUnsafe(OutputStream& os, unsigned codepoint)"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0xC0 | ((codepoint >> 6) & 0xFF)))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0x80 | ((codepoint & 0x3F))))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0xE0 | ((codepoint >> 12) & 0xFF)))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0x80 | ((codepoint >> 6) & 0x3F)))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0x80 | (codepoint & 0x3F)))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0xF0 | ((codepoint >> 18) & 0xFF)))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(0x80 | ((codepoint >> 12) & 0x3F)))"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (} } template<InputStream> bool)",
    "insertText": "Decode(InputStream& is, unsigned* codepoint)"
  },
  {
    "label": "RAPIDJSON_COPY()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "RAPIDJSON_COPY() c = is.Take()"
  },
  {
    "label": "codepoint()",
    "kind": "Method",
    "detail": "Function (*)",
    "insertText": "codepoint(*codepoint << 6) | (static_cast<unsigned char>(c) & 0x3Fu) #define RAPIDJSON_TRANS(mask) result &= ((GetRange(static_cast<unsigned char>(c)) & mask) != 0) #define RAPIDJSON_TAIL() RAPIDJSON_COPY()"
  },
  {
    "label": "RAPIDJSON_TRANS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TRANS(0x70) typename InputStream::Ch c = is.Take()"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (* codepoint = static_cast<unsigned)",
    "insertText": "char(c)"
  },
  {
    "label": "codepoint()",
    "kind": "Method",
    "detail": "Function (* codepoint = 0 ; } else {*)",
    "insertText": "codepoint(0xFFu >> type) & static_cast<unsigned char>(c)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (} bool result = true ;)",
    "insertText": "switch(type)"
  },
  {
    "label": "RAPIDJSON_TAIL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TAIL()"
  },
  {
    "label": "RAPIDJSON_TRANS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TRANS(0x50)"
  },
  {
    "label": "RAPIDJSON_TRANS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TRANS(0x10)"
  },
  {
    "label": "RAPIDJSON_TRANS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TRANS(0x20)"
  },
  {
    "label": "RAPIDJSON_TRANS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TRANS(0x60)"
  },
  {
    "label": "RAPIDJSON_COPY()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "RAPIDJSON_COPY() os.Put(c = is.Take()) #define RAPIDJSON_TRANS(mask) result &= ((GetRange(static_cast<unsigned char>(c)) & mask) != 0) #define RAPIDJSON_TAIL() RAPIDJSON_COPY()"
  },
  {
    "label": "RAPIDJSON_TRANS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_TRANS(0x70)"
  },
  {
    "label": "RAPIDJSON_COPY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_COPY()"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (bool result = true ;)",
    "insertText": "switch(GetRange(static_cast<unsigned char>(c)))"
  },
  {
    "label": "TakeBOM()",
    "kind": "Method",
    "detail": "Function (const unsigned char type [ ] = { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x10,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x40,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,0 x20,8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1 0,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,1 1,6,6,6,5,8,8,8,8,8,8,8,8,8,8,8,} ; return type [ c ] ; } template<InputByteStream> CharType)",
    "insertText": "TakeBOM(InputByteStream& is)"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(typename InputByteStream::Ch) == 1)"
  },
  {
    "label": "Take()",
    "kind": "Method",
    "detail": "Function (InputByteStream::Ch c =)",
    "insertText": "Take(is)"
  },
  {
    "label": "Take()",
    "kind": "Method",
    "detail": "Function (c = is .)",
    "insertText": "Take()"
  },
  {
    "label": "PutBOM()",
    "kind": "Method",
    "detail": "Function (} template<OutputByteStream> void)",
    "insertText": "PutBOM(OutputByteStream& os)"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(typename OutputByteStream::Ch) == 1)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(0xEFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(0xBBu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(0xBFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (} template<OutputByteStream> void)",
    "insertText": "Put(OutputByteStream& os, Ch c)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(c))"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (} } ; template<CharType = wchar_t> struct UTF16 { typedef CharType Ch ;)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(Ch) >= 2)"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(typename OutputStream::Ch) >= 2)"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(codepoint < 0xD800 || codepoint > 0xDFFF)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputStream::Ch>(codepoint))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (unsigned v = codepoint - 0 x10000 ; os .)",
    "insertText": "Put(static_cast<typename OutputStream::Ch>((v >> 10) | 0xD800))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputStream::Ch>((v & 0x3FF) | 0xDC00))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<typename OutputStream::Ch>(codepoint))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (unsigned v = codepoint - 0 x10000 ;)",
    "insertText": "PutUnsafe(os, static_cast<typename OutputStream::Ch>((v >> 10) | 0xD800))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<typename OutputStream::Ch>((v & 0x3FF) | 0xDC00))"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(typename InputStream::Ch) >= 2)"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (* codepoint = static_cast<)",
    "insertText": "unsigned(c)"
  },
  {
    "label": "codepoint()",
    "kind": "Method",
    "detail": "Function (*)",
    "insertText": "codepoint(static_cast<unsigned>(c) & 0x3FF)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (* codepoint + = 0 x10000 ; return c> = 0 xDC00&& c<= 0 xDFFF ; } return false ; } template<InputStream,OutputStream> bool)",
    "insertText": "Validate(InputStream& is, OutputStream& os)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (InputStream::Ch c ; os .)",
    "insertText": "Put(static_cast<typename OutputStream::Ch>(c = is.Take()))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(c = is.Take())"
  },
  {
    "label": "Take()",
    "kind": "Method",
    "detail": "Function (} template<InputByteStream> CharType)",
    "insertText": "Take(InputByteStream& is)"
  },
  {
    "label": "uint8_t()",
    "kind": "Method",
    "detail": "Function (unsigned c = static_cast<)",
    "insertText": "uint8_t(is.Take())"
  },
  {
    "label": "unsigned()",
    "kind": "Method",
    "detail": "Function (c | = static_cast<)",
    "insertText": "unsigned(static_cast<uint8_t>(is.Take()))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(0xFFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(0xFEu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (} template<OutputByteStream> void)",
    "insertText": "Put(OutputByteStream& os, CharType c)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(static_cast<unsigned>(c) & 0xFFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>((static_cast<unsigned>(c) >> 8) & 0xFFu))"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (} } ; template<CharType = unsigned> struct UTF32 { typedef CharType Ch ;)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(Ch) >= 4)"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(typename OutputStream::Ch) >= 4)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(codepoint)"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, codepoint)"
  },
  {
    "label": "RAPIDJSON_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_STATIC_ASSERT(sizeof(typename InputStream::Ch) >= 4)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(0x00u))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>(c & 0xFFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>((c >> 8) & 0xFFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>((c >> 16) & 0xFFu))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputByteStream::Ch>((c >> 24) & 0xFFu))"
  },
  {
    "label": "RAPIDJSON_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RAPIDJSON_ASSERT(codepoint <= 0x7F)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<Ch>(codepoint & 0xFF))"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, static_cast<Ch>(codepoint & 0xFF))"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(static_cast<typename OutputStream::Ch>(c))"
  },
  {
    "label": "uint8_t()",
    "kind": "Method",
    "detail": "Function (uint8_t c = static_cast<)",
    "insertText": "uint8_t(Take(is))"
  },
  {
    "label": "RAPIDJSON_ENCODINGS_FUNC()",
    "kind": "Method",
    "detail": "Function (} } ; enum UTFType { kUTF8 = 0,kUTF16LE = 1,kUTF16BE = 2,kUTF32LE = 3,kUTF32BE = 4 } ; template<CharType> struct AutoUTF { typedef CharType Ch ; enum { supportUnicode = 1 } ; # define)",
    "insertText": "RAPIDJSON_ENCODINGS_FUNC(x) UTF8<Ch>::x, UTF16LE<Ch>::x, UTF16BE<Ch>::x, UTF32LE<Ch>::x, UTF32BE<Ch>::x template<typename OutputStream> static RAPIDJSON_FORCEINLINE void Encode(OutputStream& os, unsigned codepoint)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*EncodeFunc)(OutputStream&, unsigned)"
  },
  {
    "label": "RAPIDJSON_ENCODINGS_FUNC()",
    "kind": "Method",
    "detail": "Function (const EncodeFunc f [ ] = {)",
    "insertText": "RAPIDJSON_ENCODINGS_FUNC(Encode)"
  },
  {
    "label": "RAPIDJSON_ENCODINGS_FUNC()",
    "kind": "Method",
    "detail": "Function (const EncodeFunc f [ ] = {)",
    "insertText": "RAPIDJSON_ENCODINGS_FUNC(EncodeUnsafe)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "bool(*DecodeFunc)(InputStream&, unsigned*)"
  },
  {
    "label": "RAPIDJSON_ENCODINGS_FUNC()",
    "kind": "Method",
    "detail": "Function (const DecodeFunc f [ ] = {)",
    "insertText": "RAPIDJSON_ENCODINGS_FUNC(Decode)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "bool(*ValidateFunc)(InputStream&, OutputStream&)"
  },
  {
    "label": "RAPIDJSON_ENCODINGS_FUNC()",
    "kind": "Method",
    "detail": "Function (const ValidateFunc f [ ] = {)",
    "insertText": "RAPIDJSON_ENCODINGS_FUNC(Validate)"
  },
  {
    "label": "Transcode()",
    "kind": "Method",
    "detail": "Function (} # undef RAPIDJSON_ENCODINGS_FUNC } ; template<SourceEncoding,TargetEncoding> struct Transcoder { template<InputStream,OutputStream> RAPIDJSON_FORCEINLINE bool)",
    "insertText": "Transcode(InputStream& is, OutputStream& os)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (unsigned codepoint ;)",
    "insertText": "if(!SourceEncoding::Decode(is, &codepoint))"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Encode(os, codepoint)"
  },
  {
    "label": "EncodeUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EncodeUnsafe(os, codepoint)"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (} } ; template<Stream> void)",
    "insertText": "PutUnsafe(Stream& stream, typename Stream::Ch c)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (os .)",
    "insertText": "Put(is.Take())"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(os, is.Take())"
  }
]