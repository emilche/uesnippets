[
  {
    "label": "rapidjson",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "rapidjson"
  },
  {
    "label": "UTF8",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF8"
  },
  {
    "label": "UTF16",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF16"
  },
  {
    "label": "UTF16LE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF16LE"
  },
  {
    "label": "UTF16BE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF16BE"
  },
  {
    "label": "UTF32",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF32"
  },
  {
    "label": "UTF32LE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF32LE"
  },
  {
    "label": "UTF32BE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UTF32BE"
  },
  {
    "label": "ASCII",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ASCII"
  },
  {
    "label": "UTFType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "UTFType"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "AutoUTF",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AutoUTF"
  },
  {
    "label": "Transcoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Transcoder"
  },
  {
    "label": "Transcoder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Transcoder"
  },
  {
    "label": "License()",
    "kind": "Method",
    "detail": "Function (MIT)",
    "insertText": "License(the \"License\")"
  },
  {
    "label": "Encode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Encode(OutputStream& os, unsigned codepoint)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Decode(InputStream& is, unsigned* codepoint)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(InputStream& is, OutputStream& os)"
  },
  {
    "label": "TakeBOM()",
    "kind": "Method",
    "detail": "Function (CharType)",
    "insertText": "TakeBOM(InputByteStream& is)"
  },
  {
    "label": "Take()",
    "kind": "Method",
    "detail": "Function (Ch)",
    "insertText": "Take(InputByteStream& is)"
  },
  {
    "label": "PutBOM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutBOM(OutputByteStream& os)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Put(OutputByteStream& os, Ch c)"
  },
  {
    "label": "Transcode()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Transcode(is, os)"
  },
  {
    "label": "PutUnsafe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutUnsafe(Stream& stream, typename Stream::Ch c)"
  }
]