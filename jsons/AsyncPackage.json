[
  {
    "label": "FAsyncPackageDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncPackageDesc"
  },
  {
    "label": "GetInstancingContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / UObjectGlobals . h \" # include \" Misc / PackagePath . h \" # include \" Misc / PackageAccessTracking . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / ICookInfo . h \" # include \" UObject / LinkerInstancingContext . h \" struct FAsyncPackageDesc { int32 RequestID ; FName Name ; FPackagePath PackagePath ; TUniquePtr<FLoadPackageAsyncDelegate> PackageLoadedDelegate ; EPackageFlags PackageFlags ; TAsyncLoadPriority Priority ; int32 PIEInstanceID ; FLinkerInstancingContext InstancingContext ; # if UE_WITH_PACKAGE_ACCESS_TRACKING FName ReferencerPackageName ; FName ReferencerPackageOp ; # endif # if WITH_EDITOR ECookLoadType CookLoadType ; # endif const FLinkerInstancingContext*)",
    "insertText": "GetInstancingContext()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (InstancingContext =)",
    "insertText": "MoveTemp(InInstancingContext)"
  },
  {
    "label": "FAsyncPackageDesc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAsyncPackageDesc(int32 InRequestID, const FName& InName, const FPackagePath& InPackagePath, TUniquePtr<FLoadPackageAsyncDelegate>&& InCompletionDelegate = TUniquePtr<FLoadPackageAsyncDelegate>(), EPackageFlags InPackageFlags = PKG_None, int32 InPIEInstanceID = INDEX_NONE, TAsyncLoadPriority InPriority = 0) : RequestID(InRequestID) , Name(InName) , PackagePath(InPackagePath) , PackageLoadedDelegate(MoveTemp(InCompletionDelegate)) , PackageFlags(InPackageFlags) , Priority(InPriority) , PIEInstanceID(InPIEInstanceID) #if WITH_EDITOR , CookLoadType(ECookLoadType::Unexpected)"
  },
  {
    "label": "FAsyncPackageDesc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAsyncPackageDesc(const FAsyncPackageDesc& OldPackage) : RequestID(OldPackage.RequestID) , Name(OldPackage.Name) , PackagePath(OldPackage.PackagePath) , PackageFlags(OldPackage.PackageFlags) , Priority(OldPackage.Priority) , PIEInstanceID(OldPackage.PIEInstanceID) , InstancingContext(OldPackage.InstancingContext) #if UE_WITH_PACKAGE_ACCESS_TRACKING , ReferencerPackageName(OldPackage.ReferencerPackageName) , ReferencerPackageOp(OldPackage.ReferencerPackageOp) #endif #if WITH_EDITOR , CookLoadType(OldPackage.CookLoadType)"
  },
  {
    "label": "FAsyncPackageDesc()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAsyncPackageDesc(const FAsyncPackageDesc& OldPackage, TUniquePtr<FLoadPackageAsyncDelegate>&& InPackageLoadedDelegate) : FAsyncPackageDesc(OldPackage)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (PackageLoadedDelegate =)",
    "insertText": "MoveTemp(InPackageLoadedDelegate)"
  },
  {
    "label": "FAsyncPackageDesc()",
    "kind": "Method",
    "detail": "Function (} # if DO_GUARD_SLOW ~)",
    "insertText": "FAsyncPackageDesc()"
  }
]