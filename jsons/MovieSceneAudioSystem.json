[
  {
    "label": "IAudioParameterControllerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAudioParameterControllerInterface"
  },
  {
    "label": "UAudioComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAudioComponent"
  },
  {
    "label": "UMovieSceneAudioSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneAudioSection"
  },
  {
    "label": "USoundBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundBase"
  },
  {
    "label": "FMoveSceneAudioTriggerState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMoveSceneAudioTriggerState"
  },
  {
    "label": "FGatherAudioInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatherAudioInputs"
  },
  {
    "label": "FGatherAudioTriggers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGatherAudioTriggers"
  },
  {
    "label": "FEvaluateAudio",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvaluateAudio"
  },
  {
    "label": "FPreAnimatedAudioStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedAudioStorage"
  },
  {
    "label": "FAudioComponentInputEvaluationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioComponentInputEvaluationData"
  },
  {
    "label": "FAudioComponentEvaluationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioComponentEvaluationData"
  },
  {
    "label": "UMovieSceneAudioSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneAudioSystem"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneSequenceInstanceHandle . h \" # include \" MovieSceneTracksComponentTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" Channels / MovieSceneAudioTriggerChannel . h \" # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" MovieSceneAudioSystem . generated . h \" class IAudioParameterControllerInterface ; class UAudioComponent ; class UMovieSceneAudioSection ; class USoundBase ; struct FMoveSceneAudioTriggerState ; namespace UE::MovieScene { struct FGatherAudioInputs ; struct FGatherAudioTriggers ; struct FEvaluateAudio ; struct FPreAnimatedAudioStorage ; struct FAudioComponentInputEvaluationData { TMap<FName,float> Inputs_Float ; TMap<FName,FString> Inputs_String ; TMap<FName,bool> Inputs_Bool ; TMap<FName,int32> Inputs_Int ; TArray<FName> Inputs_Trigger ; } ; struct FAudioComponentEvaluationData { TWeakObjectPtr<UAudioComponent> AudioComponent ; double VolumeMultiplier ; double PitchMultiplier ; TOptional<float> PartialDesyncComputation ; bool bEvaluatedThisFrame ; } ; })",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UMovieSceneAudioSystem()",
    "kind": "Method",
    "detail": "Function (using FMovieSceneEntityID = UE::MovieScene::FMovieSceneEntityID ; using FAudioComponentEvaluationData = UE::MovieScene::FAudioComponentEvaluationData ; using FAudioComponentInputEvaluationData = UE::MovieScene::FAudioComponentInputEvaluationData ;)",
    "insertText": "UMovieSceneAudioSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLink()"
  },
  {
    "label": "OnUnlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnlink()"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "GetAudioComponentEvaluationData()",
    "kind": "Method",
    "detail": "Function (FAudioComponentEvaluationData*)",
    "insertText": "GetAudioComponentEvaluationData(FInstanceHandle InstanceHandle, FObjectKey ActorKey, FObjectKey SectionKey)"
  },
  {
    "label": "AddBoundObjectAudioComponent()",
    "kind": "Method",
    "detail": "Function (FAudioComponentEvaluationData*)",
    "insertText": "AddBoundObjectAudioComponent(FInstanceHandle InstanceHandle, UMovieSceneAudioSection* Section, UObject* PrincipalObject)"
  },
  {
    "label": "AddRootAudioComponent()",
    "kind": "Method",
    "detail": "Function (FAudioComponentEvaluationData*)",
    "insertText": "AddRootAudioComponent(FInstanceHandle InstanceHandle, UMovieSceneAudioSection* Section, UWorld* World)"
  },
  {
    "label": "StopSound()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopSound(FInstanceHandle InstanceHandle, FObjectKey ActorKey, FObjectKey SectionKey)"
  },
  {
    "label": "ResetSharedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSharedData()"
  }
]