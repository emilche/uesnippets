[
  {
    "label": "gp_AddExtension()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" graphStructures . h \" int)",
    "insertText": "gp_AddExtension(graphP theGraph, int *pModuleID, void *context, void *(*dupContext)(void *, void *), void (*freeContext)(void *), graphFunctionTableP overloadTable)"
  },
  {
    "label": "gp_FindExtension()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "gp_FindExtension(graphP theGraph, int moduleID, void **pContext)"
  },
  {
    "label": "gp_GetExtension()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "gp_GetExtension(graphP theGraph, int moduleID)"
  },
  {
    "label": "gp_RemoveExtension()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "gp_RemoveExtension(graphP theGraph, int moduleID)"
  },
  {
    "label": "gp_CopyExtensions()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "gp_CopyExtensions(graphP dstGraph, graphP srcGraph)"
  },
  {
    "label": "gp_FreeExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "gp_FreeExtensions(graphP theGraph)"
  }
]