[
  {
    "label": "iplCreateContext()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateContext(IPLLogFunction logCallback,\n                                     IPLAllocateFunction allocateCallback,\n                                     IPLFreeFunction freeCallback,\n                                     IPLhandle* context)"
  },
  {
    "label": "iplDestroyContext()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyContext(IPLhandle* context)"
  },
  {
    "label": "iplCleanup()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplCleanup()"
  },
  {
    "label": "iplCalculateRelativeDirection()",
    "kind": "Method",
    "detail": "Function (IPLVector3)",
    "insertText": "iplCalculateRelativeDirection(IPLVector3 sourcePosition, IPLVector3 listenerPosition,\n        IPLVector3 listenerAhead, IPLVector3 listenerUp)"
  },
  {
    "label": "iplCreateComputeDevice()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateComputeDevice(IPLhandle context, IPLComputeDeviceFilter deviceFilter, IPLhandle* device)"
  },
  {
    "label": "iplDestroyComputeDevice()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyComputeDevice(IPLhandle* device)"
  },
  {
    "label": "iplCreateScene()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateScene(IPLhandle context, IPLhandle computeDevice, \n                                   IPLSimulationSettings simulationSettings, IPLint32 numMaterials, \n                                   IPLMaterial* materials, IPLClosestHitCallback closestHitCallback, \n                                   IPLAnyHitCallback anyHitCallback, \n                                   IPLBatchedClosestHitCallback batchedClosestHitCallback,\n                                   IPLBatchedAnyHitCallback batchedAnyHitCallback, IPLvoid* userData, \n                                   IPLhandle* scene)"
  },
  {
    "label": "iplDestroyScene()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyScene(IPLhandle* scene)"
  },
  {
    "label": "iplCreateStaticMesh()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateStaticMesh(IPLhandle scene, IPLint32 numVertices, IPLint32 numTriangles,\n                                        IPLVector3* vertices, IPLTriangle* triangles, IPLint32* materialIndices,\n                                        IPLhandle* staticMesh)"
  },
  {
    "label": "iplDestroyStaticMesh()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyStaticMesh(IPLhandle* staticMesh)"
  },
  {
    "label": "iplSaveScene()",
    "kind": "Method",
    "detail": "Function (IPLint32)",
    "insertText": "iplSaveScene(IPLhandle scene, IPLbyte* data)"
  },
  {
    "label": "iplLoadScene()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplLoadScene(IPLhandle context, IPLSimulationSettings simulationSettings,\n        IPLbyte* data, IPLint32 size, IPLhandle computeDevice, IPLLoadSceneProgressCallback progressCallback, IPLhandle* scene)"
  },
  {
    "label": "iplSaveSceneAsObj()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplSaveSceneAsObj(IPLhandle scene, IPLstring fileBaseName)"
  },
  {
    "label": "iplCreateInstancedMesh()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateInstancedMesh(IPLhandle scene,\n                                           IPLhandle instancedScene,\n                                           IPLMatrix4x4 transform,\n                                           IPLhandle* instancedMesh)"
  },
  {
    "label": "iplDestroyInstancedMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iplDestroyInstancedMesh(IPLhandle* instancedMesh)"
  },
  {
    "label": "iplAddInstancedMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iplAddInstancedMesh(IPLhandle scene,\n                                    IPLhandle instancedMesh)"
  },
  {
    "label": "iplRemoveInstancedMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iplRemoveInstancedMesh(IPLhandle scene,\n                                       IPLhandle instancedMesh)"
  },
  {
    "label": "iplUpdateInstancedMeshTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iplUpdateInstancedMeshTransform(IPLhandle instancedMesh,\n                                                IPLMatrix4x4 transform)"
  },
  {
    "label": "iplCommitScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "iplCommitScene(IPLhandle scene)"
  },
  {
    "label": "iplCreateEnvironment()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateEnvironment(IPLhandle context, IPLhandle computeDevice,\n        IPLSimulationSettings simulationSettings, IPLhandle scene, IPLhandle probeManager, IPLhandle* environment)"
  },
  {
    "label": "iplDestroyEnvironment()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyEnvironment(IPLhandle* environment)"
  },
  {
    "label": "iplSetNumBounces()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplSetNumBounces(IPLhandle environment, IPLint32 numBounces)"
  },
  {
    "label": "iplMixAudioBuffers()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplMixAudioBuffers(IPLint32 numBuffers, IPLAudioBuffer* inputAudio, IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplInterleaveAudioBuffer()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplInterleaveAudioBuffer(IPLAudioBuffer inputAudio, IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplDeinterleaveAudioBuffer()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDeinterleaveAudioBuffer(IPLAudioBuffer inputAudio, IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplConvertAudioBufferFormat()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplConvertAudioBufferFormat(IPLAudioBuffer inputAudio, IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplCreateAmbisonicsRotator()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateAmbisonicsRotator(IPLhandle context, IPLint32 order, IPLhandle* rotator)"
  },
  {
    "label": "iplDestroyAmbisonicsRotator()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyAmbisonicsRotator(IPLhandle* rotator)"
  },
  {
    "label": "iplSetAmbisonicsRotation()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplSetAmbisonicsRotation(IPLhandle rotator, IPLVector3 listenerAhead, IPLVector3 listenerUp)"
  },
  {
    "label": "iplRotateAmbisonicsAudioBuffer()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplRotateAmbisonicsAudioBuffer(IPLhandle rotator, IPLAudioBuffer inputAudio,\n        IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplCreateBinauralRenderer()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateBinauralRenderer(IPLhandle context, IPLRenderingSettings renderingSettings,\n        IPLHrtfParams params, IPLhandle* renderer)"
  },
  {
    "label": "iplDestroyBinauralRenderer()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyBinauralRenderer(IPLhandle* renderer)"
  },
  {
    "label": "iplCreatePanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreatePanningEffect(IPLhandle renderer, IPLAudioFormat inputFormat, IPLAudioFormat outputFormat,\n        IPLhandle* effect)"
  },
  {
    "label": "iplDestroyPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyPanningEffect(IPLhandle* effect)"
  },
  {
    "label": "iplApplyPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyPanningEffect(IPLhandle effect, IPLhandle binauralRenderer, IPLAudioBuffer inputAudio, IPLVector3 direction,\n        IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplFlushPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushPanningEffect(IPLhandle effect)"
  },
  {
    "label": "iplCreateBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateBinauralEffect(IPLhandle renderer, IPLAudioFormat inputFormat,\n        IPLAudioFormat outputFormat, IPLhandle* effect)"
  },
  {
    "label": "iplDestroyBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyBinauralEffect(IPLhandle* effect)"
  },
  {
    "label": "HRTF()",
    "kind": "Method",
    "detail": "Function (an)",
    "insertText": "HRTF(which may be loaded from\n     *                              SOFA files)"
  },
  {
    "label": "iplApplyBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyBinauralEffect(IPLhandle effect, IPLhandle binauralRenderer, IPLAudioBuffer inputAudio, IPLVector3 direction,\n        IPLHrtfInterpolation interpolation, IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplApplyBinauralEffectWithParameters()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyBinauralEffectWithParameters(IPLhandle effect, IPLhandle binauralRenderer, IPLAudioBuffer inputAudio,\n        IPLVector3 direction, IPLHrtfInterpolation interpolation, IPLAudioBuffer outputAudio, IPLfloat32* leftDelay,\n        IPLfloat32* rightDelay)"
  },
  {
    "label": "iplFlushBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushBinauralEffect(IPLhandle effect)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (surround)",
    "insertText": "format(say 7.1)"
  },
  {
    "label": "iplCreateVirtualSurroundEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateVirtualSurroundEffect(IPLhandle renderer, IPLAudioFormat inputFormat,\n        IPLAudioFormat outputFormat, IPLhandle* effect)"
  },
  {
    "label": "iplDestroyVirtualSurroundEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyVirtualSurroundEffect(IPLhandle* effect)"
  },
  {
    "label": "HRTF()",
    "kind": "Method",
    "detail": "Function (an)",
    "insertText": "HRTF(which may be loaded from\n     *                              SOFA files)"
  },
  {
    "label": "iplApplyVirtualSurroundEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyVirtualSurroundEffect(IPLhandle effect, IPLhandle binauralRenderer, IPLAudioBuffer inputAudio,\n        IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplFlushVirtualSurroundEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushVirtualSurroundEffect(IPLhandle effect)"
  },
  {
    "label": "iplCreateAmbisonicsPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateAmbisonicsPanningEffect(IPLhandle renderer, IPLAudioFormat inputFormat,\n        IPLAudioFormat outputFormat, IPLhandle* effect)"
  },
  {
    "label": "iplDestroyAmbisonicsPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyAmbisonicsPanningEffect(IPLhandle* effect)"
  },
  {
    "label": "iplApplyAmbisonicsPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyAmbisonicsPanningEffect(IPLhandle effect, IPLhandle binauralRenderer, IPLAudioBuffer inputAudio,\n        IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplFlushAmbisonicsPanningEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushAmbisonicsPanningEffect(IPLhandle effect)"
  },
  {
    "label": "iplCreateAmbisonicsBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateAmbisonicsBinauralEffect(IPLhandle renderer, IPLAudioFormat inputFormat,\n        IPLAudioFormat outputFormat, IPLhandle* effect)"
  },
  {
    "label": "iplDestroyAmbisonicsBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyAmbisonicsBinauralEffect(IPLhandle* effect)"
  },
  {
    "label": "HRTF()",
    "kind": "Method",
    "detail": "Function (an)",
    "insertText": "HRTF(which may be loaded from\n     *                              SOFA files)"
  },
  {
    "label": "iplApplyAmbisonicsBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyAmbisonicsBinauralEffect(IPLhandle effect, IPLhandle binauralRenderer, IPLAudioBuffer inputAudio,\n        IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplFlushAmbisonicsBinauralEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushAmbisonicsBinauralEffect(IPLhandle effect)"
  },
  {
    "label": "iplCreateEnvironmentalRenderer()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateEnvironmentalRenderer(IPLhandle context, IPLhandle environment,\n        IPLRenderingSettings renderingSettings, IPLAudioFormat outputFormat,\n        IPLSimulationThreadCreateCallback threadCreateCallback,\n        IPLSimulationThreadDestroyCallback threadDestroyCallback, IPLhandle* renderer)"
  },
  {
    "label": "iplDestroyEnvironmentalRenderer()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyEnvironmentalRenderer(IPLhandle* renderer)"
  },
  {
    "label": "iplGetEnvironmentForRenderer()",
    "kind": "Method",
    "detail": "Function (IPLhandle)",
    "insertText": "iplGetEnvironmentForRenderer(IPLhandle renderer)"
  },
  {
    "label": "iplGetDirectSoundPath()",
    "kind": "Method",
    "detail": "Function (IPLDirectSoundPath)",
    "insertText": "iplGetDirectSoundPath(IPLhandle environment, IPLVector3 listenerPosition,\n        IPLVector3 listenerAhead, IPLVector3 listenerUp, IPLSource source, IPLfloat32 sourceRadius,\n        IPLDirectOcclusionMode occlusionMode, IPLDirectOcclusionMethod occlusionMethod)"
  },
  {
    "label": "iplCreateDirectSoundEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateDirectSoundEffect(IPLhandle renderer, IPLAudioFormat inputFormat, \n        IPLAudioFormat outputFormat, IPLhandle* effect)"
  },
  {
    "label": "iplDestroyDirectSoundEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyDirectSoundEffect(IPLhandle* effect)"
  },
  {
    "label": "iplApplyDirectSoundEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplApplyDirectSoundEffect(IPLhandle effect, IPLAudioBuffer inputAudio, \n        IPLDirectSoundPath directSoundPath, IPLDirectSoundEffectOptions options, IPLAudioBuffer outputAudio)"
  },
  {
    "label": "iplFlushDirectSoundEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushDirectSoundEffect(IPLhandle effect)"
  },
  {
    "label": "iplCreateConvolutionEffect()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateConvolutionEffect(IPLhandle renderer, IPLBakedDataIdentifier identifier, IPLSimulationType simulationType,\n        IPLAudioFormat inputFormat, IPLAudioFormat outputFormat, IPLhandle* effect)"
  },
  {
    "label": "iplDestroyConvolutionEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyConvolutionEffect(IPLhandle* effect)"
  },
  {
    "label": "iplSetConvolutionEffectIdentifier()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplSetConvolutionEffectIdentifier(IPLhandle effect, IPLBakedDataIdentifier identifier)"
  },
  {
    "label": "iplSetDryAudioForConvolutionEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplSetDryAudioForConvolutionEffect(IPLhandle effect, IPLSource source,\n        IPLAudioBuffer dryAudio)"
  },
  {
    "label": "iplGetWetAudioForConvolutionEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplGetWetAudioForConvolutionEffect(IPLhandle effect, IPLVector3 listenerPosition,\n        IPLVector3 listenerAhead, IPLVector3 listenerUp, IPLAudioBuffer wetAudio)"
  },
  {
    "label": "iplGetMixedEnvironmentalAudio()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplGetMixedEnvironmentalAudio(IPLhandle renderer, IPLVector3 listenerPosition,\n        IPLVector3 listenerAhead, IPLVector3 listenerUp, IPLAudioBuffer mixedWetAudio)"
  },
  {
    "label": "iplFlushConvolutionEffect()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFlushConvolutionEffect(IPLhandle effect)"
  },
  {
    "label": "iplCreateProbeBox()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateProbeBox(IPLhandle context, IPLhandle scene, IPLfloat32* boxLocalToWorldTransform,\n        IPLProbePlacementParams placementParams, IPLProbePlacementProgressCallback progressCallback,\n        IPLhandle* probeBox)"
  },
  {
    "label": "iplDestroyProbeBox()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyProbeBox(IPLhandle* probeBox)"
  },
  {
    "label": "iplGetProbeSpheres()",
    "kind": "Method",
    "detail": "Function (IPLint32)",
    "insertText": "iplGetProbeSpheres(IPLhandle probeBox, IPLSphere* probeSpheres)"
  },
  {
    "label": "iplSaveProbeBox()",
    "kind": "Method",
    "detail": "Function (IPLint32)",
    "insertText": "iplSaveProbeBox(IPLhandle probeBox, IPLbyte* data)"
  },
  {
    "label": "iplLoadProbeBox()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplLoadProbeBox(IPLhandle context, IPLbyte* data, IPLint32 size, IPLhandle* probeBox)"
  },
  {
    "label": "iplCreateProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateProbeBatch(IPLhandle context, IPLhandle* probeBatch)"
  },
  {
    "label": "iplDestroyProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyProbeBatch(IPLhandle* probeBatch)"
  },
  {
    "label": "iplAddProbeToBatch()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplAddProbeToBatch(IPLhandle probeBatch, IPLhandle probeBox, IPLint32 probeIndex)"
  },
  {
    "label": "iplFinalizeProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplFinalizeProbeBatch(IPLhandle probeBatch)"
  },
  {
    "label": "iplSaveProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLint32)",
    "insertText": "iplSaveProbeBatch(IPLhandle probeBatch, IPLbyte* data)"
  },
  {
    "label": "iplLoadProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplLoadProbeBatch(IPLhandle context, IPLbyte* data, IPLint32 size, IPLhandle* probeBatch)"
  },
  {
    "label": "iplCreateProbeManager()",
    "kind": "Method",
    "detail": "Function (IPLerror)",
    "insertText": "iplCreateProbeManager(IPLhandle context, IPLhandle* probeManager)"
  },
  {
    "label": "iplDestroyProbeManager()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDestroyProbeManager(IPLhandle* probeManager)"
  },
  {
    "label": "iplAddProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplAddProbeBatch(IPLhandle probeManager, IPLhandle probeBatch)"
  },
  {
    "label": "iplRemoveProbeBatch()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplRemoveProbeBatch(IPLhandle probeManager, IPLhandle probeBatch)"
  },
  {
    "label": "iplBakeReverb()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplBakeReverb(IPLhandle environment, IPLhandle probeBox, IPLBakingSettings bakingSettings,\n        IPLBakeProgressCallback progressCallback)"
  },
  {
    "label": "iplBakePropagation()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplBakePropagation(IPLhandle environment, IPLhandle probeBox, IPLSphere sourceInfluence,\n        IPLBakedDataIdentifier sourceIdentifier, IPLBakingSettings bakingSettings, IPLBakeProgressCallback progressCallback)"
  },
  {
    "label": "iplBakeStaticListener()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplBakeStaticListener(IPLhandle environment, IPLhandle probeBox, IPLSphere listenerInfluence,\n        IPLBakedDataIdentifier listenerIdentifier, IPLBakingSettings bakingSettings, IPLBakeProgressCallback progressCallback)"
  },
  {
    "label": "iplCancelBake()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplCancelBake()"
  },
  {
    "label": "iplDeleteBakedDataByIdentifier()",
    "kind": "Method",
    "detail": "Function (IPLvoid)",
    "insertText": "iplDeleteBakedDataByIdentifier(IPLhandle probeBox, IPLBakedDataIdentifier identifier)"
  },
  {
    "label": "iplGetBakedDataSizeByIdentifier()",
    "kind": "Method",
    "detail": "Function (IPLint32)",
    "insertText": "iplGetBakedDataSizeByIdentifier(IPLhandle probeBox, IPLBakedDataIdentifier identifier)"
  }
]