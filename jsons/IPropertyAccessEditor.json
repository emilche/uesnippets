[
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FButtonStyle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FButtonStyle"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "IPropertyAccessLibraryCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyAccessLibraryCompiler"
  },
  {
    "label": "FPropertyAccessLibrary",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAccessLibrary"
  },
  {
    "label": "FBindingChainElement",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBindingChainElement"
  },
  {
    "label": "FRedirectorBindingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRedirectorBindingInfo"
  },
  {
    "label": "FBindingContextStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBindingContextStruct"
  },
  {
    "label": "FPropertyBindingWidgetArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyBindingWidgetArgs"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPropertyAccessResolveResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAccessResolveResult"
  },
  {
    "label": "FPropertyAccessCopyContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAccessCopyContext"
  },
  {
    "label": "FPropertyAccessLibraryCompilerArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyAccessLibraryCompilerArgs"
  },
  {
    "label": "IPropertyAccessEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyAccessEditor"
  },
  {
    "label": "FResolvePropertyAccessArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResolvePropertyAccessArgs"
  },
  {
    "label": "FBindingChainElement()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Misc / Attribute . h \" # include \" Features / IModularFeature . h \" # include \" Input / Reply . h \" # include \" Styling / SlateColor . h \" # include \" UObject / Field . h \" # include \" UObject / UnrealType . h \" class UBlueprint ; class IPropertyHandle ; class UEdGraph ; class FExtender ; class SWidget ; struct FSlateBrush ; struct FButtonStyle ; struct FEdGraphPinType ; class IPropertyAccessLibraryCompiler ; struct FPropertyAccessLibrary ; struct FBindingChainElement {)",
    "insertText": "FBindingChainElement(FProperty* InProperty, int32 InArrayIndex = INDEX_NONE) : Field(InProperty) , ArrayIndex(InArrayIndex)"
  },
  {
    "label": "FBindingChainElement()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBindingChainElement(UFunction* InFunction) : Field(InFunction) , ArrayIndex(INDEX_NONE)"
  },
  {
    "label": "FRedirectorBindingInfo()",
    "kind": "Method",
    "detail": "Function (} FFieldVariant Field ; int32 ArrayIndex = INDEX_NONE ; } ; struct FRedirectorBindingInfo {)",
    "insertText": "FRedirectorBindingInfo(FName InName, const FText& InDescription, UStruct* InStruct) : Name(InName) , Description(InDescription) , Struct(InStruct)"
  },
  {
    "label": "FBindingContextStruct()",
    "kind": "Method",
    "detail": "Function (} FName Name = NAME_None ; FText Description ; UStruct* Struct = nullptr ; } ; struct FBindingContextStruct {)",
    "insertText": "FBindingContextStruct()"
  },
  {
    "label": "FBindingContextStruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBindingContextStruct(UStruct* InStruct, const FSlateBrush* InIcon = nullptr, const FText& InDisplayText = FText::GetEmpty(), const FText& InTooltipText = FText::GetEmpty(), const FText& InSection = FText::GetEmpty()) : Struct(InStruct) , Icon(InIcon) , DisplayText(InDisplayText) , TooltipText(InTooltipText) , Section(InSection)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (} UStruct* Struct = nullptr ; const FSlateBrush* Icon = nullptr ; TOptional<FLinearColor> Color ; FText DisplayText ; FText TooltipText ; FText Section ; FString Category ; } ;)",
    "insertText": "DECLARE_DELEGATE_RetVal(FString, FOnGenerateBindingName)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnGotoBinding, FName)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanGotoBinding, FName)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnCanAcceptPropertyOrChildrenWithBindingChain, FProperty* , TConstArrayView<FBindingChainElement>)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanAcceptPropertyOrChildren, FProperty*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnCanBindPropertyWithBindingChain, FProperty* , TConstArrayView<FBindingChainElement>)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanBindProperty, FProperty*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanBindFunction, UFunction*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanBindToClass, UClass*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanBindToContextStruct, UStruct*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FOnCanBindToContextStructWithIndex, UStruct* , int32)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanBindToSubObjectClass, UClass*)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnAddBinding, FName , const TArray<FBindingChainElement>&)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRemoveBinding, FName)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool, FOnCanRemoveBinding, FName)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnNewFunctionBindingCreated, UEdGraph* , UFunction*)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(UStruct*, FOnResolveIndirection, const TArray<FBindingChainElement>&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FReply, FOnDrop, const FGeometry&, const FDragDropEvent&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(bool, FOnHasAnyBindings)"
  },
  {
    "label": "FPropertyBindingWidgetArgs()",
    "kind": "Method",
    "detail": "Function (struct FPropertyBindingWidgetArgs { PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FPropertyBindingWidgetArgs()"
  },
  {
    "label": "FPropertyBindingWidgetArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyBindingWidgetArgs(const FPropertyBindingWidgetArgs&)"
  },
  {
    "label": "FPropertyBindingWidgetArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPropertyBindingWidgetArgs(FPropertyBindingWidgetArgs&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPropertyBindingWidgetArgs&)",
    "insertText": "operator(const FPropertyBindingWidgetArgs&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPropertyBindingWidgetArgs&)",
    "insertText": "operator(FPropertyBindingWidgetArgs&&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnCanBindToContextStructWithIndex OnCanBindToContextStructWithIndex ; FOnCanBindToSubObjectClass OnCanBindToSubObjectClass ; FOnAddBinding OnAddBinding ; FOnRemoveBinding OnRemoveBinding ; FOnCanRemoveBinding OnCanRemoveBinding ; FOnHasAnyBindings OnHasAnyBindings ; FOnNewFunctionBindingCreated OnNewFunctionBindingCreated ; FOnResolveIndirection OnResolveIndirection ; FOnDrop OnDrop ; TAttribute<FText> CurrentBindingText ; TAttribute<FSlateColor> CurrentBindingTextColor ; TAttribute<FText> CurrentBindingToolTipText ; TAttribute<const FSlateBrush*> CurrentBindingImage ; TAttribute<FLinearColor> CurrentBindingColor ; TSharedPtr<FExtender> MenuExtender ; const FButtonStyle* BindButtonStyle = nullptr ; uint8 MaxDepth = 1 0 ; bool bGeneratePureBindings = true ; bool bAllowFunctionBindings = true ; bool bAllowFunctionLibraryBindings = false ; bool bAllowPropertyBindings = true ; bool bAllowArrayElementBindings = false ; bool bAllowStructMemberBindings = true ; bool bAllowNewBindings = true ; bool bAllowUObjectFunctions = false ; bool bAllowOnlyThreadSafeFunctions = false ; bool bAllowStructFunctions = false ; bool bUseLinkIconStyle = false ; } ; enum class EPropertyAccessResolveResult { Failed,SucceededInternal,SucceededExternal,Succeeded,} ; struct FPropertyAccessResolveResult { EPropertyAccessResolveResult Result = EPropertyAccessResolveResult::Failed ; bool bIsThreadSafe = false ; } ; enum class EPropertyAccessCompatibility { Incompatible,Compatible,Promotable,} ; struct FPropertyAccessCopyContext { UObject* Object ; FName ContextId ; FText SourcePathAsText ; FText DestPathAsText ; bool bSourceThreadSafe ; bool bDestThreadSafe ; } ;)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(int32, FOnPropertyAccessDetermineBatchId, const FPropertyAccessCopyContext&)"
  },
  {
    "label": "FPropertyAccessLibraryCompilerArgs()",
    "kind": "Method",
    "detail": "Function (struct FPropertyAccessLibraryCompilerArgs {)",
    "insertText": "FPropertyAccessLibraryCompilerArgs(FPropertyAccessLibrary& InLibrary, const UClass* InClassContext) : Library(InLibrary) , ClassContext(InClassContext)"
  },
  {
    "label": "IPropertyAccessEditor()",
    "kind": "Method",
    "detail": "Function (} FPropertyAccessLibrary& Library ; const UClass* ClassContext ; FOnPropertyAccessDetermineBatchId OnDetermineBatchId ; } ; class IPropertyAccessEditor : public IModularFeature { public : ~)",
    "insertText": "IPropertyAccessEditor()"
  },
  {
    "label": "MakePropertyBindingWidget()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "MakePropertyBindingWidget(UBlueprint* InBlueprint, const FPropertyBindingWidgetArgs& InArgs = FPropertyBindingWidgetArgs())"
  },
  {
    "label": "MakePropertyBindingWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakePropertyBindingWidget(const TArray<FBindingContextStruct>& InBindingContextStructs, const FPropertyBindingWidgetArgs& InArgs = FPropertyBindingWidgetArgs())"
  },
  {
    "label": "ResolvePropertyAccess()",
    "kind": "Method",
    "detail": "Function (FPropertyAccessResolveResult)",
    "insertText": "ResolvePropertyAccess(const UStruct* InStruct, TArrayView<const FString> InPath, FProperty*& OutProperty, int32& OutArrayIndex)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct FResolvePropertyAccessArgs { TFunction<)",
    "insertText": "void(int32 , FProperty* , int32)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "void(int32 , FArrayProperty* , int32)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TFunction<)",
    "insertText": "void(int32 , UFunction* , FProperty*)"
  },
  {
    "label": "ResolvePropertyAccess()",
    "kind": "Method",
    "detail": "Function (bool bUseMostUpToDateClasses = false ; } ; FPropertyAccessResolveResult)",
    "insertText": "ResolvePropertyAccess(const UStruct* InStruct, TArrayView<const FString> InPath, const FResolvePropertyAccessArgs& InArgs)"
  },
  {
    "label": "ResolvePropertyAccess()",
    "kind": "Method",
    "detail": "Function (const FPropertyAccessResolveResult Result =)",
    "insertText": "ResolvePropertyAccess(InStruct, InPath, OutProperty, OutArrayIndex)"
  },
  {
    "label": "GetPinTypeCompatibility()",
    "kind": "Method",
    "detail": "Function (EPropertyAccessCompatibility)",
    "insertText": "GetPinTypeCompatibility(const FEdGraphPinType& InPinTypeA, const FEdGraphPinType& InPinTypeB)"
  },
  {
    "label": "MakeStringPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeStringPath(const TArray<FBindingChainElement>& InBindingChain, TArray<FString>& OutStringPath)"
  },
  {
    "label": "MakePropertyAccessCompiler()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<IPropertyAccessLibraryCompiler>)",
    "insertText": "MakePropertyAccessCompiler(const FPropertyAccessLibraryCompilerArgs& InArgs)"
  },
  {
    "label": "MakeTextPath()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "MakeTextPath(const TArray<FString>& InPath, const UStruct* InStruct = nullptr)"
  }
]