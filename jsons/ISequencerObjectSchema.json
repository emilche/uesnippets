[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "FObjectSchemaRelevancy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectSchemaRelevancy"
  },
  {
    "label": "SEQUENCER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEQUENCER_API"
  },
  {
    "label": "FObjectSchemaRelevancy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Containers / ContainersFwd . h \" class UObject ; class FExtender ; class ISequencer ; class FUICommandList ; template<> class TFunctionRef ; namespace UE::Sequencer { struct FObjectSchemaRelevancy { UClass* Class ; uint32 Priority ;)",
    "insertText": "FObjectSchemaRelevancy() : Class(nullptr) , Priority(0)"
  },
  {
    "label": "FObjectSchemaRelevancy()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObjectSchemaRelevancy(UClass* InClass, uint32 InPriority = 0) : Class(InClass) , Priority(InPriority)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FObjectSchemaRelevancy& A, const FObjectSchemaRelevancy& B)"
  },
  {
    "label": "ComputeRelevancy()",
    "kind": "Method",
    "detail": "Function (} ; class IObjectSchema : public TSharedFromThis<IObjectSchema> { public : TMap<const IObjectSchema*,TArray<UObject*>>)",
    "insertText": "ComputeRelevancy(TArrayView<UObject* const> InObjects)"
  },
  {
    "label": "IObjectSchema()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IObjectSchema()"
  },
  {
    "label": "GetParentObject()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetParentObject(UObject* Object)"
  },
  {
    "label": "GetRelevancy()",
    "kind": "Method",
    "detail": "Function (FObjectSchemaRelevancy)",
    "insertText": "GetRelevancy(const UObject* InObject)"
  },
  {
    "label": "ExtendObjectBindingMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "ExtendObjectBindingMenu(TSharedRef<FUICommandList> CommandList, TWeakPtr<ISequencer> WeakSequencer, TArrayView<UObject* const> ContextSensitiveObjects)"
  },
  {
    "label": "GetPrettyName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPrettyName(const UObject* Object)"
  }
]