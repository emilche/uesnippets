[
  {
    "label": "OpenSSLKeyPair",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OpenSSLKeyPair"
  },
  {
    "label": "OpenSSLKeyPair()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_OPENSSL_KEY_PAIR_H_ # define RTC_BASE_OPENSSL_KEY_PAIR_H_ # include<openssl / ossl_typ . h> # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / ssl_identity . h \" namespace rtc { class OpenSSLKeyPair final { public :)",
    "insertText": "OpenSSLKeyPair(EVP_PKEY* pkey) : pkey_(pkey)"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(pkey_ != nullptr)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (} std::unique_ptr<OpenSSLKeyPair>)",
    "insertText": "Generate(const KeyParams& key_params)"
  },
  {
    "label": "FromPrivateKeyPEMString()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<OpenSSLKeyPair>)",
    "insertText": "FromPrivateKeyPEMString(absl::string_view pem_string)"
  },
  {
    "label": "OpenSSLKeyPair()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "OpenSSLKeyPair()"
  },
  {
    "label": "OpenSSLKeyPair()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenSSLKeyPair(const OpenSSLKeyPair&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OpenSSLKeyPair&)",
    "insertText": "operator(const OpenSSLKeyPair&)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<OpenSSLKeyPair>)",
    "insertText": "Clone()"
  },
  {
    "label": "pkey()",
    "kind": "Method",
    "detail": "Function (EVP_PKEY*)",
    "insertText": "pkey()"
  },
  {
    "label": "PublicKeyToPEMString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "PublicKeyToPEMString()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const OpenSSLKeyPair& other)"
  },
  {
    "label": "AddReference()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "AddReference()"
  }
]