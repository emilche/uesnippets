[
  {
    "label": "FCrashResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCrashResult"
  },
  {
    "label": "FMarker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMarker"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifndef NV_AFTERMATH # define NV_AFTERMATH 0 # endif # if NV_AFTERMATH # include \" RHIBreadcrumbs . h \" # define NV_AFTERMATH_USE_BREADCRUMB_PTRS 0 namespace UE::RHICore::Nvidia::Aftermath { typedef TUniqueFunction<)",
    "insertText": "void(const void* MarkerData, const uint32_t MarkerDataSize, void* UserData, void** ResolvedMarkerData, uint32_t* ResolvedMarkerDataSize)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "AreMarkersEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreMarkersEnabled()"
  },
  {
    "label": "InitializeBeforeDeviceCreation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeBeforeDeviceCreation(FResolveMarkerFunc ResolveMarkerFunc = {})"
  },
  {
    "label": "InitializeDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeDevice(TFunctionRef<uint32(uint32 AftermathFeatureFlags)> InitCallback)"
  },
  {
    "label": "OnGPUCrash()",
    "kind": "Method",
    "detail": "Function (struct FCrashResult { FString OutputLog ; TOptional<FString> DumpPath ; TOptional<uint64> GPUFaultAddress ; } ; FCrashResult)",
    "insertText": "OnGPUCrash()"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (TCHAR RootNodeName [ ] =)",
    "insertText": "TEXT(\"<root>\")"
  },
  {
    "label": "FMarker()",
    "kind": "Method",
    "detail": "Function (# if WITH_RHI_BREADCRUMBS class FMarker { # if ! NV_AFTERMATH_USE_BREADCRUMB_PTRS FRHIBreadcrumb::FBuffer Buffer ; # endif void const* Ptr = nullptr ; uint32 Size = 0 ; public :)",
    "insertText": "FMarker(FRHIBreadcrumbNode* Breadcrumb)"
  },
  {
    "label": "GetTCHAR()",
    "kind": "Method",
    "detail": "Function (# if NV_AFTERMATH_USE_BREADCRUMB_PTRS Ptr = Breadcrumb ? Breadcrumb : FRHIBreadcrumbNode::Sentinel ; # else TCHAR const* NameStr = Breadcrumb ? Breadcrumb -> Name .)",
    "insertText": "GetTCHAR(Buffer)"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (Ptr = NameStr ;)",
    "insertText": "Size(FCString::Strlen(NameStr) + 1) * sizeof(TCHAR)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# endif } operator)",
    "insertText": "bool()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetSize()"
  }
]