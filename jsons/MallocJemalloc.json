[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FMallocJemalloc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMallocJemalloc"
  },
  {
    "label": "MEM_TIME()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreGlobals . h \" # include \" CoreTypes . h \" # include \" HAL / MemoryBase . h \" # include \" Logging / LogCategory . h \" # include \" Logging / LogMacros . h \" # include \" Trace / Detail / Channel . h \" class FOutputDevice ; # if PLATFORM_SUPPORTS_JEMALLOC # define)",
    "insertText": "MEM_TIME(st)"
  },
  {
    "label": "FMallocJemalloc()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FMallocJemalloc() : MemTime(0.0)"
  },
  {
    "label": "Malloc()",
    "kind": "Method",
    "detail": "Function (} public : void*)",
    "insertText": "Malloc(SIZE_T Size, uint32 Alignment)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Realloc(void* Ptr, SIZE_T NewSize, uint32 Alignment)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* Ptr)"
  },
  {
    "label": "DumpAllocatorStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpAllocatorStats(FOutputDevice& Ar)"
  },
  {
    "label": "GetAllocationSize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllocationSize(void *Original, SIZE_T &SizeOut)"
  },
  {
    "label": "IsInternallyThreadSafe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInternallyThreadSafe()"
  },
  {
    "label": "OutOfMemory()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "OutOfMemory()"
  }
]