[
  {
    "label": "FKismetCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FKismetCompilerContext"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFunction"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "UK2Node_PromotableOperator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node_PromotableOperator"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" K2Node_AddPinInterface . h \" # include \" K2Node_CallFunction . h \" # include \" UObject / NameTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" K2Node_PromotableOperator . generated . h \" class FKismetCompilerContext ; class FString ; class UEdGraph ; class UEdGraphPin ; class UFunction ; class UGraphNodeContextMenuContext ; class UObject ; class UToolMenu ; struct FEdGraphPinType ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual void AllocateDefaultPins()"
  },
  {
    "label": "GetNodeContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeContextMenuActions(UToolMenu* Menu, UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "PinDefaultValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinDefaultValueChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "NodeConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NodeConnectionListChanged()"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "ExpandNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandNode(FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "NotifyPinConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPinConnectionListChanged(UEdGraphPin* ChangedPin)"
  },
  {
    "label": "PostReconstructNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostReconstructNode()"
  },
  {
    "label": "IsConnectionDisallowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsConnectionDisallowed(const UEdGraphPin* MyPin, const UEdGraphPin* OtherPin, FString& OutReason)"
  },
  {
    "label": "ReallocatePinsDuringReconstruction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReallocatePinsDuringReconstruction(TArray<UEdGraphPin*>& OldPins)"
  },
  {
    "label": "AutowireNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutowireNewNode(UEdGraphPin* FromPin)"
  },
  {
    "label": "GetPinHoverText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinHoverText(const UEdGraphPin& Pin, FString& HoverTextOut)"
  },
  {
    "label": "AddInputPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInputPin()"
  },
  {
    "label": "CanAddPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddPin()"
  },
  {
    "label": "CanRemovePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemovePin(const UEdGraphPin* Pin)"
  },
  {
    "label": "RemoveInputPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInputPin(UEdGraphPin* Pin)"
  },
  {
    "label": "GetAdditionalPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetAdditionalPin(int32 PinIndex)"
  },
  {
    "label": "FindTolerancePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindTolerancePin()"
  },
  {
    "label": "SetFromFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFromFunction(const UFunction* Function)"
  },
  {
    "label": "ResetNodeToWildcard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetNodeToWildcard()"
  },
  {
    "label": "CanToggleNodePurity()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "CanToggleNodePurity()"
  },
  {
    "label": "IsAdditionalPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAdditionalPin(const UEdGraphPin& Pin)"
  },
  {
    "label": "IsTolerancePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTolerancePin(const UEdGraphPin& Pin)"
  },
  {
    "label": "RecombineAllSplitPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecombineAllSplitPins()"
  },
  {
    "label": "UpdateFromBestMatchingFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateFromBestMatchingFunction()"
  },
  {
    "label": "HasAnyConnectionsOrDefaults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAnyConnectionsOrDefaults()"
  },
  {
    "label": "HasDeterminingComparisonTypes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDeterminingComparisonTypes()"
  },
  {
    "label": "CreateIntermediateCast()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateIntermediateCast(UK2Node_CallFunction* SourceNode, FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph, UEdGraphPin* InputPin, UEdGraphPin* OutputPin)"
  },
  {
    "label": "CreateIntermediateNode()",
    "kind": "Method",
    "detail": "Function (UK2Node_CallFunction*)",
    "insertText": "CreateIntermediateNode(UK2Node_CallFunction* PreviousNode, const UFunction* const OpFunction, FKismetCompilerContext& CompilerContext, UEdGraph* SourceGraph)"
  },
  {
    "label": "EvaluatePinsFromChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EvaluatePinsFromChange(UEdGraphPin* ChangedPin, const bool bFromConversion = false)"
  },
  {
    "label": "UpdateOpName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateOpName()"
  },
  {
    "label": "UpdatePinsFromFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePinsFromFunction(const UFunction* Function, UEdGraphPin* ChangedPin = nullptr, bool bIsFromConversion = false)"
  },
  {
    "label": "GetInputPins()",
    "kind": "Method",
    "detail": "Function (TArray<UEdGraphPin*>)",
    "insertText": "GetInputPins(bool bIncludeLinks = false)"
  },
  {
    "label": "GetPinsToConsider()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinsToConsider(TArray<UEdGraphPin*>& OutArray)"
  },
  {
    "label": "CreateConversionMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateConversionMenu(struct FToolMenuSection& ConversionSection, UEdGraphPin* ContextPin)"
  },
  {
    "label": "GetOutputPin()",
    "kind": "Method",
    "detail": "Function (bool bDefaultValueReentranceGuard ; public : UEdGraphPin*)",
    "insertText": "GetOutputPin()"
  },
  {
    "label": "GetOperationName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetOperationName()"
  },
  {
    "label": "CanConvertPinType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConvertPinType(const UEdGraphPin* Pin)"
  },
  {
    "label": "CanConvertComparisonOperatorNodeType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanConvertComparisonOperatorNodeType(const UEdGraphNode* Node)"
  },
  {
    "label": "ConvertComparisonOperatorNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertComparisonOperatorNode(UEdGraphNode* Node, const FName NewOpName)"
  }
]