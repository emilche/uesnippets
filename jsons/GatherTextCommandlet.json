[
  {
    "label": "Format",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Format"
  },
  {
    "label": "UGatherTextCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGatherTextCommandlet"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Commandlets / GatherTextCommandletBase . h \" # include \" GatherTextCommandlet . generated . h \" namespace EOutputJson { enum Format { Manifest,Archive } ; })",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual int32 Main(const FString& Params)"
  },
  {
    "label": "ProcessGatherConfig()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessGatherConfig(const FString& GatherTextConfigPath, const TSharedPtr<FLocalizationSCC>& CommandletSourceControlInfo, const TArray<FString>& Tokens, const TArray<FString>& Switches, const TMap<FString, FString>& ParamVals)"
  },
  {
    "label": "ShouldRunInPreview()",
    "kind": "Method",
    "detail": "Function (const FString UsageText ; bool)",
    "insertText": "ShouldRunInPreview(const TArray<FString>& Switches, const TMap<FString, FString>& ParamVals)"
  }
]