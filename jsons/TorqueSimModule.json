[
  {
    "label": "FTorqueSimModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTorqueSimModule"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "DEFINE_CHAOSSIMTYPENAME()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DEFINE_CHAOSSIMTYPENAME(FTorqueSimModule)"
  },
  {
    "label": "OmegaToRPM()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "OmegaToRPM(AngularVelocity)"
  },
  {
    "label": "TransmitTorque()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransmitTorque(const FSimModuleTree& BlockSystem, float PushedTorque, float BrakeTorque = 0.f, float GearingRatio = 1.0f, float ClutchSlip = 1.0f)"
  },
  {
    "label": "IntegrateAngularVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IntegrateAngularVelocity(float DeltaTime, float Inertia, float MaxRotationVel = MAX_FLT)"
  },
  {
    "label": "DEFINE_CHAOSSIMTYPENAME()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DEFINE_CHAOSSIMTYPENAME(FWheelBaseInterface)"
  }
]