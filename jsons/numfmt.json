[
  {
    "label": "NumberFormatTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NumberFormatTest"
  },
  {
    "label": "SharedNumberFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SharedNumberFormat"
  },
  {
    "label": "NumberFormatFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NumberFormatFactory"
  },
  {
    "label": "StringEnumeration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringEnumeration"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "ERoundingMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ERoundingMode"
  },
  {
    "label": "have",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "have"
  },
  {
    "label": "EAlignmentFields",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAlignmentFields"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "DecimalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecimalFormat"
  },
  {
    "label": "DecimalFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecimalFormat"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "ICUNumberFormatFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICUNumberFormatFactory"
  },
  {
    "label": "ICUNumberFormatService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICUNumberFormatService"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "result()",
    "kind": "Method",
    "detail": "Function (Formattable)",
    "insertText": "result(-999)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (to)",
    "insertText": "format(int32_t number...)"
  },
  {
    "label": "format()",
    "kind": "Method",
    "detail": "Function (to)",
    "insertText": "format(int32_t number...)"
  },
  {
    "label": "setParseIntegerOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setParseIntegerOnly(UBool value)"
  },
  {
    "label": "setLenient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setLenient(UBool enable)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(UErrorCode&)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(const Locale& inLocale,\n                                        UErrorCode&)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(const Locale& desiredLocale,\n                                                  UNumberFormatStyle style,\n                                                  UErrorCode& errorCode)"
  },
  {
    "label": "createSharedInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createSharedInstance(\n            const Locale& inLocale, UNumberFormatStyle style, UErrorCode& status)"
  },
  {
    "label": "createCurrencyInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createCurrencyInstance(UErrorCode&)"
  },
  {
    "label": "createCurrencyInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createCurrencyInstance(const Locale& inLocale,\n                                                UErrorCode&)"
  },
  {
    "label": "createPercentInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createPercentInstance(UErrorCode&)"
  },
  {
    "label": "createPercentInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createPercentInstance(const Locale& inLocale,\n                                               UErrorCode&)"
  },
  {
    "label": "createScientificInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createScientificInstance(UErrorCode&)"
  },
  {
    "label": "createScientificInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createScientificInstance(const Locale& inLocale,\n                                                UErrorCode&)"
  },
  {
    "label": "getAvailableLocales()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableLocales(int32_t& count)"
  },
  {
    "label": "registerFactory()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "registerFactory(NumberFormatFactory* toAdopt, UErrorCode& status)"
  },
  {
    "label": "unregister()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unregister(URegistryKey key, UErrorCode& status)"
  },
  {
    "label": "getAvailableLocales()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableLocales(void)"
  },
  {
    "label": "setGroupingUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setGroupingUsed(UBool newValue)"
  },
  {
    "label": "setMaximumIntegerDigits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMaximumIntegerDigits(int32_t newValue)"
  },
  {
    "label": "setMinimumIntegerDigits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMinimumIntegerDigits(int32_t newValue)"
  },
  {
    "label": "setMaximumFractionDigits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMaximumFractionDigits(int32_t newValue)"
  },
  {
    "label": "setMinimumFractionDigits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMinimumFractionDigits(int32_t newValue)"
  },
  {
    "label": "setCurrency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCurrency(const char16_t* theCurrency, UErrorCode& ec)"
  },
  {
    "label": "setContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setContext(UDisplayContext value, UErrorCode& status)"
  },
  {
    "label": "setRoundingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setRoundingMode(ERoundingMode roundingMode)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "isStyleSupported()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "isStyleSupported(UNumberFormatStyle style)"
  }
]