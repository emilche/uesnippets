[
  {
    "label": "predef_info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "predef_info"
  },
  {
    "label": "add_predef_entry()",
    "kind": "Method",
    "detail": "Function (# include<rpc / msgpack / predef . h> # define MSGPACK_PREDEF_INTERNAL_GENERATE_TESTS void*)",
    "insertText": "add_predef_entry(const char * name, const char * description, unsigned value) #undef MSGPACK_PREDEF_DECLARE_TEST #define MSGPACK_PREDEF_DECLARE_TEST(x,s) void predef_entry_##x()"
  },
  {
    "label": "add_predef_entry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "add_predef_entry(#x, s, x) } #include <rpc/msgpack/predef.h> #undef MSGPACK_PREDEF_DECLARE_TEST #define MSGPACK_PREDEF_DECLARE_TEST(x,s) predef_entry_##x() void create_predef_entries()"
  },
  {
    "label": "add_predef_entry()",
    "kind": "Method",
    "detail": "Function (# include<rpc / msgpack / predef . h> } # ifdef __cplusplus # include<cstring> # include<cstdio> # include<cstdlib> using namespace std # else # include<string . h> # include<stdio . h> # include<stdlib . h> # endif typedef struct predef_info { const char* name const char* description unsigned value } predef_info # ifdef __cplusplus using namespace std # endif unsigned generated_predef_info_count = 0 predef_info* generated_predef_info = 0 void*)",
    "insertText": "add_predef_entry(const char * name, const char * description, unsigned value)"
  },
  {
    "label": "generated_predef_info()",
    "kind": "Method",
    "detail": "Function (generated_predef_info_count = 1)",
    "insertText": "generated_predef_info(predef_info*)malloc(sizeof(predef_info))"
  },
  {
    "label": "generated_predef_info()",
    "kind": "Method",
    "detail": "Function (generated_predef_info_count + = 1)",
    "insertText": "generated_predef_info(predef_info*)realloc(generated_predef_info, generated_predef_info_count*sizeof(predef_info)) } generated_predef_info[generated_predef_info_count-1].name = name generated_predef_info[generated_predef_info_count-1].description = description generated_predef_info[generated_predef_info_count-1].value = value return 0 } int predef_info_compare(const void * a, const void * b)"
  }
]