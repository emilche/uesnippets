[
  {
    "label": "SctpTransportFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SctpTransportFactory"
  },
  {
    "label": "SctpTransportFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_SCTP_SCTP_TRANSPORT_FACTORY_H_ # define MEDIA_SCTP_SCTP_TRANSPORT_FACTORY_H_ # include<memory> # include \" api / transport / sctp_transport_factory_interface . h \" # include \" media / sctp / sctp_transport_internal . h \" # include \" rtc_base / thread . h \" namespace cricket { class SctpTransportFactory : public webrtc::SctpTransportFactoryInterface { public :)",
    "insertText": "SctpTransportFactory(rtc::Thread* network_thread)"
  },
  {
    "label": "CreateSctpTransport()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<SctpTransportInternal>)",
    "insertText": "CreateSctpTransport(rtc::PacketTransportInternal* transport)"
  }
]