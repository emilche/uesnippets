[
  {
    "label": "hb_ot_tags_from_script_and_language()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_tags_from_script_and_language(hb_script_t   script,\n\t\t\t\t     hb_language_t language,\n\t\t\t\t     unsigned int *script_count /* IN/OUT */,\n\t\t\t\t     hb_tag_t     *script_tags /* OUT */,\n\t\t\t\t     unsigned int *language_count /* IN/OUT */,\n\t\t\t\t     hb_tag_t     *language_tags /* OUT */)"
  },
  {
    "label": "hb_ot_tag_to_script()",
    "kind": "Method",
    "detail": "Function (hb_script_t)",
    "insertText": "hb_ot_tag_to_script(hb_tag_t tag)"
  },
  {
    "label": "hb_ot_tag_to_language()",
    "kind": "Method",
    "detail": "Function (hb_language_t)",
    "insertText": "hb_ot_tag_to_language(hb_tag_t tag)"
  },
  {
    "label": "hb_ot_tags_to_script_and_language()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_tags_to_script_and_language(hb_tag_t       script_tag,\n\t\t\t\t   hb_tag_t       language_tag,\n\t\t\t\t   hb_script_t   *script /* OUT */,\n\t\t\t\t   hb_language_t *language /* OUT */)"
  },
  {
    "label": "hb_ot_layout_has_glyph_classes()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_has_glyph_classes(hb_face_t *face)"
  },
  {
    "label": "hb_ot_layout_get_glyph_class()",
    "kind": "Method",
    "detail": "Function (hb_ot_layout_glyph_class_t)",
    "insertText": "hb_ot_layout_get_glyph_class(hb_face_t      *face,\n\t\t\t      hb_codepoint_t  glyph)"
  },
  {
    "label": "hb_ot_layout_get_glyphs_in_class()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_layout_get_glyphs_in_class(hb_face_t                  *face,\n\t\t\t\t  hb_ot_layout_glyph_class_t  klass,\n\t\t\t\t  hb_set_t                   *glyphs /* OUT */)"
  },
  {
    "label": "hb_ot_layout_get_attach_points()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_get_attach_points(hb_face_t      *face,\n\t\t\t\thb_codepoint_t  glyph,\n\t\t\t\tunsigned int    start_offset,\n\t\t\t\tunsigned int   *point_count /* IN/OUT */,\n\t\t\t\tunsigned int   *point_array /* OUT */)"
  },
  {
    "label": "hb_ot_layout_get_ligature_carets()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_get_ligature_carets(hb_font_t      *font,\n\t\t\t\t  hb_direction_t  direction,\n\t\t\t\t  hb_codepoint_t  glyph,\n\t\t\t\t  unsigned int    start_offset,\n\t\t\t\t  unsigned int   *caret_count /* IN/OUT */,\n\t\t\t\t  hb_position_t  *caret_array /* OUT */)"
  },
  {
    "label": "hb_ot_layout_table_get_script_tags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_table_get_script_tags(hb_face_t    *face,\n\t\t\t\t    hb_tag_t      table_tag,\n\t\t\t\t    unsigned int  start_offset,\n\t\t\t\t    unsigned int *script_count /* IN/OUT */,\n\t\t\t\t    hb_tag_t     *script_tags /* OUT */)"
  },
  {
    "label": "hb_ot_layout_table_find_script()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_table_find_script(hb_face_t    *face,\n\t\t\t\thb_tag_t      table_tag,\n\t\t\t\thb_tag_t      script_tag,\n\t\t\t\tunsigned int *script_index)"
  },
  {
    "label": "hb_ot_layout_table_select_script()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_table_select_script(hb_face_t      *face,\n\t\t\t\t  hb_tag_t        table_tag,\n\t\t\t\t  unsigned int    script_count,\n\t\t\t\t  const hb_tag_t *script_tags,\n\t\t\t\t  unsigned int   *script_index /* OUT */,\n\t\t\t\t  hb_tag_t       *chosen_script /* OUT */)"
  },
  {
    "label": "hb_ot_layout_table_get_feature_tags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_table_get_feature_tags(hb_face_t    *face,\n\t\t\t\t     hb_tag_t      table_tag,\n\t\t\t\t     unsigned int  start_offset,\n\t\t\t\t     unsigned int *feature_count /* IN/OUT */,\n\t\t\t\t     hb_tag_t     *feature_tags /* OUT */)"
  },
  {
    "label": "hb_ot_layout_script_get_language_tags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_script_get_language_tags(hb_face_t    *face,\n\t\t\t\t       hb_tag_t      table_tag,\n\t\t\t\t       unsigned int  script_index,\n\t\t\t\t       unsigned int  start_offset,\n\t\t\t\t       unsigned int *language_count /* IN/OUT */,\n\t\t\t\t       hb_tag_t     *language_tags /* OUT */)"
  },
  {
    "label": "hb_ot_layout_script_select_language()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_script_select_language(hb_face_t      *face,\n\t\t\t\t     hb_tag_t        table_tag,\n\t\t\t\t     unsigned int    script_index,\n\t\t\t\t     unsigned int    language_count,\n\t\t\t\t     const hb_tag_t *language_tags,\n\t\t\t\t     unsigned int   *language_index /* OUT */)"
  },
  {
    "label": "hb_ot_layout_language_get_required_feature_index()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_language_get_required_feature_index(hb_face_t    *face,\n\t\t\t\t\t\t  hb_tag_t      table_tag,\n\t\t\t\t\t\t  unsigned int  script_index,\n\t\t\t\t\t\t  unsigned int  language_index,\n\t\t\t\t\t\t  unsigned int *feature_index)"
  },
  {
    "label": "hb_ot_layout_language_get_required_feature()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_language_get_required_feature(hb_face_t    *face,\n\t\t\t\t\t    hb_tag_t      table_tag,\n\t\t\t\t\t    unsigned int  script_index,\n\t\t\t\t\t    unsigned int  language_index,\n\t\t\t\t\t    unsigned int *feature_index,\n\t\t\t\t\t    hb_tag_t     *feature_tag)"
  },
  {
    "label": "hb_ot_layout_language_get_feature_indexes()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_language_get_feature_indexes(hb_face_t    *face,\n\t\t\t\t\t   hb_tag_t      table_tag,\n\t\t\t\t\t   unsigned int  script_index,\n\t\t\t\t\t   unsigned int  language_index,\n\t\t\t\t\t   unsigned int  start_offset,\n\t\t\t\t\t   unsigned int *feature_count /* IN/OUT */,\n\t\t\t\t\t   unsigned int *feature_indexes /* OUT */)"
  },
  {
    "label": "hb_ot_layout_language_get_feature_tags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_language_get_feature_tags(hb_face_t    *face,\n\t\t\t\t\thb_tag_t      table_tag,\n\t\t\t\t\tunsigned int  script_index,\n\t\t\t\t\tunsigned int  language_index,\n\t\t\t\t\tunsigned int  start_offset,\n\t\t\t\t\tunsigned int *feature_count /* IN/OUT */,\n\t\t\t\t\thb_tag_t     *feature_tags /* OUT */)"
  },
  {
    "label": "hb_ot_layout_language_find_feature()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_language_find_feature(hb_face_t    *face,\n\t\t\t\t    hb_tag_t      table_tag,\n\t\t\t\t    unsigned int  script_index,\n\t\t\t\t    unsigned int  language_index,\n\t\t\t\t    hb_tag_t      feature_tag,\n\t\t\t\t    unsigned int *feature_index)"
  },
  {
    "label": "hb_ot_layout_feature_get_lookups()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_feature_get_lookups(hb_face_t    *face,\n\t\t\t\t  hb_tag_t      table_tag,\n\t\t\t\t  unsigned int  feature_index,\n\t\t\t\t  unsigned int  start_offset,\n\t\t\t\t  unsigned int *lookup_count /* IN/OUT */,\n\t\t\t\t  unsigned int *lookup_indexes /* OUT */)"
  },
  {
    "label": "hb_ot_layout_table_get_lookup_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_table_get_lookup_count(hb_face_t    *face,\n\t\t\t\t     hb_tag_t      table_tag)"
  },
  {
    "label": "hb_ot_layout_collect_features()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_layout_collect_features(hb_face_t      *face,\n                               hb_tag_t        table_tag,\n                               const hb_tag_t *scripts,\n                               const hb_tag_t *languages,\n                               const hb_tag_t *features,\n                               hb_set_t       *feature_indexes /* OUT */)"
  },
  {
    "label": "hb_ot_layout_collect_lookups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_layout_collect_lookups(hb_face_t      *face,\n\t\t\t      hb_tag_t        table_tag,\n\t\t\t      const hb_tag_t *scripts,\n\t\t\t      const hb_tag_t *languages,\n\t\t\t      const hb_tag_t *features,\n\t\t\t      hb_set_t       *lookup_indexes /* OUT */)"
  },
  {
    "label": "hb_ot_layout_lookup_collect_glyphs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_layout_lookup_collect_glyphs(hb_face_t    *face,\n\t\t\t\t    hb_tag_t      table_tag,\n\t\t\t\t    unsigned int  lookup_index,\n\t\t\t\t    hb_set_t     *glyphs_before, /* OUT.  May be NULL */\n\t\t\t\t    hb_set_t     *glyphs_input,  /* OUT.  May be NULL */\n\t\t\t\t    hb_set_t     *glyphs_after,  /* OUT.  May be NULL */\n\t\t\t\t    hb_set_t     *glyphs_output  /* OUT.  May be NULL */)"
  },
  {
    "label": "Xhb_ot_layout_lookup_enumerate_sequences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Xhb_ot_layout_lookup_enumerate_sequences(hb_face_t    *face,\n\t\t\t\t\t hb_tag_t      table_tag,\n\t\t\t\t\t unsigned int  lookup_index,\n\t\t\t\t\t hb_ot_layout_glyph_sequence_func_t callback,\n\t\t\t\t\t void         *user_data)"
  },
  {
    "label": "hb_ot_layout_table_find_feature_variations()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_table_find_feature_variations(hb_face_t    *face,\n\t\t\t\t\t    hb_tag_t      table_tag,\n\t\t\t\t\t    const int    *coords,\n\t\t\t\t\t    unsigned int  num_coords,\n\t\t\t\t\t    unsigned int *variations_index /* out */)"
  },
  {
    "label": "hb_ot_layout_feature_with_variations_get_lookups()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_feature_with_variations_get_lookups(hb_face_t    *face,\n\t\t\t\t\t\t  hb_tag_t      table_tag,\n\t\t\t\t\t\t  unsigned int  feature_index,\n\t\t\t\t\t\t  unsigned int  variations_index,\n\t\t\t\t\t\t  unsigned int  start_offset,\n\t\t\t\t\t\t  unsigned int *lookup_count /* IN/OUT */,\n\t\t\t\t\t\t  unsigned int *lookup_indexes /* OUT */)"
  },
  {
    "label": "hb_ot_layout_has_substitution()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_has_substitution(hb_face_t *face)"
  },
  {
    "label": "hb_ot_layout_lookup_would_substitute()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_lookup_would_substitute(hb_face_t            *face,\n\t\t\t\t      unsigned int          lookup_index,\n\t\t\t\t      const hb_codepoint_t *glyphs,\n\t\t\t\t      unsigned int          glyphs_length,\n\t\t\t\t      hb_bool_t             zero_context)"
  },
  {
    "label": "hb_ot_layout_lookup_substitute_closure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_layout_lookup_substitute_closure(hb_face_t    *face,\n\t\t\t\t        unsigned int  lookup_index,\n\t\t\t\t        hb_set_t     *glyphs\n\t\t\t\t\t/*TODO , hb_bool_t  inclusive */)"
  },
  {
    "label": "hb_ot_layout_lookups_substitute_closure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_ot_layout_lookups_substitute_closure(hb_face_t      *face,\n                                         const hb_set_t *lookups,\n                                         hb_set_t       *glyphs)"
  },
  {
    "label": "Xhb_ot_layout_lookup_substitute()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "Xhb_ot_layout_lookup_substitute(hb_font_t            *font,\n\t\t\t\tunsigned int          lookup_index,\n\t\t\t\tconst hb_ot_layout_glyph_sequence_t *sequence,\n\t\t\t\tunsigned int          out_size,\n\t\t\t\thb_codepoint_t       *glyphs_out,   /* OUT */\n\t\t\t\tunsigned int         *clusters_out, /* OUT */\n\t\t\t\tunsigned int         *out_length    /* OUT */)"
  },
  {
    "label": "hb_ot_layout_has_positioning()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_has_positioning(hb_face_t *face)"
  },
  {
    "label": "Xhb_ot_layout_lookup_position()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "Xhb_ot_layout_lookup_position(hb_font_t            *font,\n\t\t\t      unsigned int          lookup_index,\n\t\t\t      const hb_ot_layout_glyph_sequence_t *sequence,\n\t\t\t      hb_glyph_position_t  *positions /* IN / OUT */)"
  },
  {
    "label": "hb_ot_layout_get_size_params()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_get_size_params(hb_face_t       *face,\n\t\t\t      unsigned int    *design_size,       /* OUT.  May be NULL */\n\t\t\t      unsigned int    *subfamily_id,      /* OUT.  May be NULL */\n\t\t\t      hb_ot_name_id_t *subfamily_name_id, /* OUT.  May be NULL */\n\t\t\t      unsigned int    *range_start,       /* OUT.  May be NULL */\n\t\t\t      unsigned int    *range_end          /* OUT.  May be NULL */)"
  },
  {
    "label": "hb_ot_layout_feature_get_name_ids()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_ot_layout_feature_get_name_ids(hb_face_t       *face,\n\t\t\t\t   hb_tag_t         table_tag,\n\t\t\t\t   unsigned int     feature_index,\n\t\t\t\t   hb_ot_name_id_t *label_id             /* OUT.  May be NULL */,\n\t\t\t\t   hb_ot_name_id_t *tooltip_id           /* OUT.  May be NULL */,\n\t\t\t\t   hb_ot_name_id_t *sample_id            /* OUT.  May be NULL */,\n\t\t\t\t   unsigned int    *num_named_parameters /* OUT.  May be NULL */,\n\t\t\t\t   hb_ot_name_id_t *first_param_id       /* OUT.  May be NULL */)"
  },
  {
    "label": "hb_ot_layout_feature_get_characters()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_ot_layout_feature_get_characters(hb_face_t      *face,\n\t\t\t\t     hb_tag_t        table_tag,\n\t\t\t\t     unsigned int    feature_index,\n\t\t\t\t     unsigned int    start_offset,\n\t\t\t\t     unsigned int   *char_count    /* IN/OUT.  May be NULL */,\n\t\t\t\t     hb_codepoint_t *characters    /* OUT.     May be NULL */)"
  }
]