[
  {
    "label": "FZeroLoad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FZeroLoad"
  },
  {
    "label": "AddHitchMessage()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / ThreadSafeCounter . h \" # include \" ProfilingDebugging / Histogram . h \" # include \" HAL / Runnable . h \" class FZeroLoad : public FRunnable { FThreadSafeCounter ExitRequest ; double TickRate ; FHistogram TickTimeHistogram ; FCriticalSection HitchMessagesLock ; TArray<FString> HitchMessagesToBeLogged ; void)",
    "insertText": "AddHitchMessage(double HitchDurationInMs)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "Init()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "GetHitchMessages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHitchMessages(TArray<FString>& OutArray)"
  },
  {
    "label": "GetFrameTimeHistogram()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFrameTimeHistogram(FHistogram& OutHistogram)"
  },
  {
    "label": "FZeroLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FZeroLoad(double InTickRate)"
  },
  {
    "label": "FZeroLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FZeroLoad(double InTickRate, const TArray<double>& FrameTimeHistogramBucketsMs)"
  },
  {
    "label": "FZeroLoad()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FZeroLoad()"
  }
]