[
  {
    "label": "ISceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutliner"
  },
  {
    "label": "FTypeInfoColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTypeInfoColumn"
  },
  {
    "label": "FTypeInfoColumn()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" Widgets / Views / STableRow . h \" # include \" SceneOutlinerPublicTypes . h \" # include \" Misc / EnumRange . h \" # include \" ISceneOutlinerColumn . h \" class ISceneOutliner ; class FTypeInfoColumn : public ISceneOutlinerColumn { public :)",
    "insertText": "FTypeInfoColumn(ISceneOutliner& Outliner)"
  },
  {
    "label": "FTypeInfoColumn()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTypeInfoColumn()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetID()"
  },
  {
    "label": "GetColumnID()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetColumnID()"
  },
  {
    "label": "ConstructHeaderRowColumn()",
    "kind": "Method",
    "detail": "Function (SHeaderRow::FColumn::FArguments)",
    "insertText": "ConstructHeaderRowColumn()"
  },
  {
    "label": "ConstructRowWidget()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<SWidget>)",
    "insertText": "ConstructRowWidget(FSceneOutlinerTreeItemRef TreeItem, const STableRow<FSceneOutlinerTreeItemPtr>& Row)"
  },
  {
    "label": "PopulateSearchStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateSearchStrings(const ISceneOutlinerTreeItem& Item, TArray< FString >& OutSearchStrings)"
  },
  {
    "label": "SupportsSorting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSorting()"
  },
  {
    "label": "SortItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortItems(TArray<FSceneOutlinerTreeItemPtr>& RootItems, const EColumnSortMode::Type SortMode)"
  },
  {
    "label": "GetTextForItem()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTextForItem(const TWeakPtr<ISceneOutlinerTreeItem> TreeItem)"
  },
  {
    "label": "ConstructClassHyperlink()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SWidget>)",
    "insertText": "ConstructClassHyperlink(ISceneOutlinerTreeItem& TreeItem)"
  },
  {
    "label": "GetColumnDataVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetColumnDataVisibility(bool bIsClassHyperlink)"
  },
  {
    "label": "MakeComboText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "MakeComboText()"
  },
  {
    "label": "MakeComboToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "MakeComboToolTipText()"
  },
  {
    "label": "GetSelectedMode()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSelectedMode()"
  }
]