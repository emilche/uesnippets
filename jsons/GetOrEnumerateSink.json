[
  {
    "label": "TGetOrEnumerateSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGetOrEnumerateSink"
  },
  {
    "label": "TGetOrEnumerateSink()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Templates / Function . h \" # include \" Templates / Invoke . h \" template<ItemType> class TGetOrEnumerateSink { public :)",
    "insertText": "TGetOrEnumerateSink(TFunctionRef<bool(ItemType&&)> InCallback) : Callback(MoveTemp(InCallback))"
  },
  {
    "label": "TGetOrEnumerateSink()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TGetOrEnumerateSink(TArray<ItemType>& InOutput) : Array(&InOutput)"
  },
  {
    "label": "TGetOrEnumerateSink()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "TGetOrEnumerateSink(const TGetOrEnumerateSink&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TGetOrEnumerateSink&)",
    "insertText": "operator(const TGetOrEnumerateSink&)"
  },
  {
    "label": "TGetOrEnumerateSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TGetOrEnumerateSink(TGetOrEnumerateSink&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TGetOrEnumerateSink&)",
    "insertText": "operator(TGetOrEnumerateSink&&)"
  },
  {
    "label": "ReserveMore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReserveMore(int32 NumAdditionalItems)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (Array ->)",
    "insertText": "Reserve(Array->Num() + NumAdditionalItems)"
  },
  {
    "label": "ProduceItem()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "ProduceItem(ItemType&& Item)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Array ->)",
    "insertText": "Add(MoveTemp(Item))"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} } private : TArray<ItemType>* Array = nullptr ; TOptional<TFunctionRef<)",
    "insertText": "bool(ItemType&&)"
  }
]