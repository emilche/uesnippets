[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "SLinkedBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SLinkedBox"
  },
  {
    "label": "FLinkedBoxManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkedBoxManager"
  },
  {
    "label": "FLinkedBoxManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" SlotBase . h \" # include \" Containers / Ticker . h \" # include \" Layout / Margin . h \" # include \" Layout / Children . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SPanel . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / Layout / SBox . h \" class FArrangedChildren ; class SLinkedBox ; class FLinkedBoxManager : public TSharedFromThis<FLinkedBoxManager> { public :)",
    "insertText": "FLinkedBoxManager()"
  },
  {
    "label": "RegisterLinkedBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterLinkedBox(SLinkedBox* InBox)"
  },
  {
    "label": "UnregisterLinkedBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterLinkedBox(SLinkedBox* InBox)"
  },
  {
    "label": "GetUniformCellSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetUniformCellSize()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (protected : uint64 FrameCounterLastCached = 0 ; FVector2D CachedUniformSize ; private : TSet<SLinkedBox*> Siblings ; } ; class SLinkedBox : public SBox { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SLinkedBox) : _HAlign(HAlign_Fill) , _VAlign(VAlign_Fill) , _Padding(0.0f) , _Content() , _WidthOverride(FOptionalSize()) , _HeightOverride(FOptionalSize()) , _MinDesiredWidth(FOptionalSize()) , _MinDesiredHeight(FOptionalSize()) , _MaxDesiredWidth(FOptionalSize()) , _MaxDesiredHeight(FOptionalSize())"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_ARGUMENT(EHorizontalAlignment, HAlign) SLATE_ARGUMENT(EVerticalAlignment, VAlign) SLATE_ATTRIBUTE(FMargin, Padding) SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_ATTRIBUTE(FOptionalSize, WidthOverride) SLATE_ATTRIBUTE(FOptionalSize, HeightOverride) SLATE_ATTRIBUTE(FOptionalSize, MinDesiredWidth) SLATE_ATTRIBUTE(FOptionalSize, MinDesiredHeight) SLATE_ATTRIBUTE(FOptionalSize, MaxDesiredWidth) SLATE_ATTRIBUTE(FOptionalSize, MaxDesiredHeight) SLATE_ATTRIBUTE(FOptionalSize, MinAspectRatio) SLATE_ATTRIBUTE(FOptionalSize, MaxAspectRatio) SLATE_END_ARGS() SLATE_API FVector2D GetChildrensDesiredSize()"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<FLinkedBoxManager> InManager)"
  },
  {
    "label": "SLinkedBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLinkedBox()"
  },
  {
    "label": "CustomPrepass()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "CustomPrepass(float LayoutScaleMultiplier)"
  },
  {
    "label": "CustomChildPrepass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomChildPrepass()"
  }
]