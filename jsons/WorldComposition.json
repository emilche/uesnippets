[
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "FWorldCompositionTile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldCompositionTile"
  },
  {
    "label": "FPackageNameMatcher",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageNameMatcher"
  },
  {
    "label": "FDistanceVisibleLevel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDistanceVisibleLevel"
  },
  {
    "label": "UWorldComposition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldComposition"
  },
  {
    "label": "FWorldCompositionTile()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / WorldCompositionUtility . h \" # include \" WorldComposition . generated . h \" class ULevel ; class ULevelStreaming ; struct FWorldCompositionTile {)",
    "insertText": "FWorldCompositionTile() : StreamingLevelStateChangeTime(0.0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FName PackageName ; TArray<FName> LODPackageNames ; FWorldTileInfo Info ; double StreamingLevelStateChangeTime ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FWorldCompositionTile& D)"
  },
  {
    "label": "FPackageNameMatcher()",
    "kind": "Method",
    "detail": "Function (Ar<<D . PackageName<<D . Info<<D . LODPackageNames ; return Ar ; } struct FPackageNameMatcher {)",
    "insertText": "FPackageNameMatcher(const FName& InPackageName ) : PackageName( InPackageName)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Matches(const FWorldCompositionTile& Candidate)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "UpdateStreamingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingState()"
  },
  {
    "label": "UpdateStreamingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingState(const FVector& InLocation)"
  },
  {
    "label": "UpdateStreamingState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingState(const FVector* InLocation, int32 Num)"
  },
  {
    "label": "UpdateStreamingStateCinematic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStreamingStateCinematic(const FVector* InLocation, int32 Num)"
  },
  {
    "label": "UpdateEditorStreamingState()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "UpdateEditorStreamingState(const FVector& InLocation)"
  },
  {
    "label": "GetDistanceDependentLayers()",
    "kind": "Method",
    "detail": "Function (TArray<FWorldTileLayer>)",
    "insertText": "GetDistanceDependentLayers()"
  },
  {
    "label": "EvaluateWorldOriginLocation()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "EvaluateWorldOriginLocation(const FVector& ViewLocation)"
  },
  {
    "label": "GetDistanceVisibleLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDistanceVisibleLevels(const FVector& InLocation, TArray<FDistanceVisibleLevel>& OutVisibleLevels, TArray<FDistanceVisibleLevel>& OutHiddenLevels)"
  },
  {
    "label": "GetDistanceVisibleLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDistanceVisibleLevels(const FVector* InLocations, int32 Num, TArray<FDistanceVisibleLevel>& OutVisibleLevels, TArray<FDistanceVisibleLevel>& OutHiddenLevels)"
  },
  {
    "label": "IsDistanceDependentLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDistanceDependentLevel(FName PackageName)"
  },
  {
    "label": "GetWorldRoot()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldRoot()"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "OnLevelPostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelPostLoad(ULevel* InLevel)"
  },
  {
    "label": "OnLevelPreSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelPreSave(ULevel* InLevel)"
  },
  {
    "label": "OnLevelPostSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelPostSave(ULevel* InLevel)"
  },
  {
    "label": "OnLevelAddedToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAddedToWorld(ULevel* InLevel)"
  },
  {
    "label": "OnLevelRemovedFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemovedFromWorld(ULevel* InLevel)"
  },
  {
    "label": "GetLevelOffset()",
    "kind": "Method",
    "detail": "Function (FIntVector)",
    "insertText": "GetLevelOffset(ULevel* InLevel)"
  },
  {
    "label": "GetLevelBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetLevelBounds(ULevel* InLevel)"
  },
  {
    "label": "Rescan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Rescan()"
  },
  {
    "label": "ReinitializeForPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReinitializeForPIE()"
  },
  {
    "label": "DoesTileExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesTileExists(const FName& TilePackageName)"
  },
  {
    "label": "GetTilesList()",
    "kind": "Method",
    "detail": "Function (FTilesList&)",
    "insertText": "GetTilesList()"
  },
  {
    "label": "GetTileInfo()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FWorldTileInfo)",
    "insertText": "GetTileInfo(const FName& InPackageName)"
  },
  {
    "label": "OnTileInfoUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTileInfoUpdated(const FName& InPackageName, const FWorldTileInfo& InInfo)"
  },
  {
    "label": "RestoreDirtyTilesInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreDirtyTilesInfo(const FTilesList& TilesPrevState)"
  },
  {
    "label": "CollectTilesToCook()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectTilesToCook(TArray<FString>& PackageNames)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(bool, FEnableWorldCompositionEvent, UWorld*, bool)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FEnableWorldCompositionEvent EnableWorldCompositionEvent ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FWorldCompositionChangedEvent, UWorld*)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (FWorldCompositionChangedEvent WorldCompositionChangedEvent ; # endif private : void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PopulateStreamingLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateStreamingLevels()"
  },
  {
    "label": "CaclulateTilesAbsolutePositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CaclulateTilesAbsolutePositions()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "CreateStreamingLevel()",
    "kind": "Method",
    "detail": "Function (ULevelStreaming*)",
    "insertText": "CreateStreamingLevel(const FWorldCompositionTile& Info)"
  },
  {
    "label": "FixupForPIE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupForPIE(int32 PIEInstanceID)"
  },
  {
    "label": "FindTileIndexByName()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindTileIndexByName(const FName& InPackageName)"
  },
  {
    "label": "FindTileByName()",
    "kind": "Method",
    "detail": "Function (FWorldCompositionTile*)",
    "insertText": "FindTileByName(const FName& InPackageName)"
  },
  {
    "label": "IsDistanceDependentLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDistanceDependentLevel(int32 TileIdx)"
  },
  {
    "label": "CommitTileStreamingState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommitTileStreamingState(UWorld* PersistentWorld, int32 TileIdx, bool bShouldBeLoaded, bool bShouldBeVisible, bool bShouldBlock, int32 LODIdx)"
  }
]