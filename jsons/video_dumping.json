[
  {
    "label": "VideoWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoWriter"
  },
  {
    "label": "VideoWriter()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_PC_E2E_ANALYZER_VIDEO_VIDEO_DUMPING_H_ # define TEST_PC_E2E_ANALYZER_VIDEO_VIDEO_DUMPING_H_ # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" api / test / video / video_frame_writer . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_sink_interface . h \" # include \" test / testsupport / video_frame_writer . h \" namespace webrtc { namespace webrtc_pc_e2e { class VideoWriter final : public rtc::VideoSinkInterface<VideoFrame> { public :)",
    "insertText": "VideoWriter(test::VideoFrameWriter* video_writer, int sampling_modulo)"
  },
  {
    "label": "VideoWriter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VideoWriter(const VideoWriter&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (VideoWriter&)",
    "insertText": "operator(const VideoWriter&)"
  },
  {
    "label": "VideoWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "VideoWriter()"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(const VideoFrame& frame)"
  },
  {
    "label": "CreateVideoFrameWithIdsWriter()",
    "kind": "Method",
    "detail": "Function (private : test::VideoFrameWriter* const video_writer_ ; const int sampling_modulo_ ; int64_t frames_counter_ = 0 ; } ; std::unique_ptr<test::VideoFrameWriter>)",
    "insertText": "CreateVideoFrameWithIdsWriter(std::unique_ptr<test::VideoFrameWriter> video_writer_delegate, absl::string_view frame_ids_dump_file_name)"
  }
]