[
  {
    "label": "FPreviewProfileController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewProfileController"
  },
  {
    "label": "FMaterialEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialEditorViewportClient"
  },
  {
    "label": "IMaterialEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMaterialEditor"
  },
  {
    "label": "SMaterialEditorUIPreviewZoomer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorUIPreviewZoomer"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "SMaterialEditor3DPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditor3DPreviewViewport"
  },
  {
    "label": "FAdvancedPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAdvancedPreviewScene"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "SOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOverlay"
  },
  {
    "label": "APostProcessVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APostProcessVolume"
  },
  {
    "label": "SMaterialEditorUIPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorUIPreviewViewport"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SlateFwd . h \" # include \" UObject / GCObject . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" PreviewScene . h \" # include \" EditorViewportClient . h \" # include \" ThumbnailRendering / ThumbnailManager . h \" # include \" SEditorViewport . h \" # include \" SCommonEditorViewportToolbarBase . h \" # include \" MaterialEditorSettings . h \" # include \" Animation / CurveSequence . h \" class FPreviewProfileController ; class FMaterialEditorViewportClient ; class IMaterialEditor ; class SMaterialEditorUIPreviewZoomer ; class UMaterialInterface ; class UMeshComponent ; class SMaterialEditor3DPreviewViewport : public SEditorViewport,public FGCObject,public ICommonEditorViewportToolbarInfoProvider { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMaterialEditor3DPreviewViewport)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<IMaterialEditor>, MaterialEditor) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "SMaterialEditor3DPreviewViewport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SMaterialEditor3DPreviewViewport()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "SetPreviewAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviewAsset(UObject* InAsset)"
  },
  {
    "label": "SetPreviewAssetByName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviewAssetByName(const TCHAR* InAssetName)"
  },
  {
    "label": "SetPreviewMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewMaterial(UMaterialInterface* InMaterialInterface)"
  },
  {
    "label": "OnAddedToTab()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UMeshComponent> PreviewMeshComponent ; TObjectPtr<UMaterialInterface> PreviewMaterial ; EThumbnailPrimType PreviewPrimType ; void)",
    "insertText": "OnAddedToTab(const TSharedRef<SDockTab>& OwnerTab)"
  },
  {
    "label": "GetPreviewScene()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class FAdvancedPreviewScene>)",
    "insertText": "GetPreviewScene()"
  },
  {
    "label": "OnSetPreviewPrimitive()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnSetPreviewPrimitive(EThumbnailPrimType PrimType, bool bInitialLoad = false)"
  },
  {
    "label": "IsPreviewPrimitiveChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreviewPrimitiveChecked(EThumbnailPrimType PrimType)"
  },
  {
    "label": "OnSetPreviewMeshFromSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPreviewMeshFromSelection()"
  },
  {
    "label": "IsPreviewMeshFromSelectionChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreviewMeshFromSelectionChecked()"
  },
  {
    "label": "TogglePreviewBackground()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TogglePreviewBackground()"
  },
  {
    "label": "IsTogglePreviewBackgroundChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTogglePreviewBackgroundChecked()"
  },
  {
    "label": "OnAssetViewerSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetViewerSettingsChanged(const FName& InPropertyName)"
  },
  {
    "label": "GetViewportWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SEditorViewport>)",
    "insertText": "GetViewportWidget()"
  },
  {
    "label": "GetExtenders()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "GetExtenders()"
  },
  {
    "label": "OnFloatingButtonClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFloatingButtonClicked()"
  },
  {
    "label": "MakeEditorViewportClient()",
    "kind": "Method",
    "detail": "Function (protected : TSharedRef<FEditorViewportClient>)",
    "insertText": "MakeEditorViewportClient()"
  },
  {
    "label": "BuildViewportToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildViewportToolbar()"
  },
  {
    "label": "PopulateViewportOverlays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateViewportOverlays(TSharedRef<class SOverlay> Overlay)"
  },
  {
    "label": "OnGetViewportContentVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetViewportContentVisibility()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "OnFocusViewportToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusViewportToSelection()"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnPropertyChanged(UObject* ObjectBeingModified, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SDockTab> ParentTab ; bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<IMaterialEditor> MaterialEditorPtr ; TSharedPtr<class FMaterialEditorViewportClient> EditorViewportClient ; TSharedPtr<class FAdvancedPreviewScene> AdvancedPreviewScene ; TSharedPtr<FPreviewProfileController> PreviewProfileController ; TObjectPtr<class APostProcessVolume> PostProcessVolumeActor ; FCoreUObjectDelegates::FOnObjectPropertyChanged::FDelegate OnPropertyChangedHandle ; FDelegateHandle OnPropertyChangedHandleDelegateHandle ; FDelegateHandle PreviewFeatureLevelChangedHandle ; } ; class SMaterialEditorUIPreviewViewport : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SMaterialEditorUIPreviewViewport)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct( const FArguments& InArgs, UMaterialInterface* PreviewMaterial)"
  },
  {
    "label": "SMaterialEditorUIPreviewViewport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SMaterialEditorUIPreviewViewport()"
  },
  {
    "label": "OnPreviewXChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnPreviewXChanged(int32 NewValue)"
  },
  {
    "label": "OnPreviewXCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewXCommitted(int32 NewValue, ETextCommit::Type)"
  },
  {
    "label": "OnPreviewYChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewYChanged(int32 NewValue)"
  },
  {
    "label": "OnPreviewYCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewYCommitted(int32 NewValue, ETextCommit::Type)"
  },
  {
    "label": "OnGetPreviewXValue()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "OnGetPreviewXValue()"
  },
  {
    "label": "IsShowBorderChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowBorderChecked()"
  },
  {
    "label": "SetBackgroundType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackgroundType(EBackgroundType NewBackgroundType)"
  },
  {
    "label": "ToggleShowBorder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowBorder()"
  },
  {
    "label": "BuildViewOptionsMenu()",
    "kind": "Method",
    "detail": "Function (FMenuBuilder)",
    "insertText": "BuildViewOptionsMenu(bool bForContextMenu = false)"
  },
  {
    "label": "OnViewportClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnViewportClicked(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "ShowContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowContextMenu(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseWheel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseWheel(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleSettingsActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingsActionExecute()"
  },
  {
    "label": "HandleSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingsChanged()"
  },
  {
    "label": "HandleDidZoom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDidZoom()"
  },
  {
    "label": "ExecuteZoomToActual()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteZoomToActual()"
  },
  {
    "label": "CanZoomToActual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanZoomToActual()"
  },
  {
    "label": "GetZoomTextColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetZoomTextColorAndOpacity()"
  },
  {
    "label": "GetZoomText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetZoomText()"
  },
  {
    "label": "GetDisplayedAtSizeText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDisplayedAtSizeText()"
  }
]