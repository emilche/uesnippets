[
  {
    "label": "FPreviewProfileController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPreviewProfileController"
  },
  {
    "label": "FMaterialEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialEditorViewportClient"
  },
  {
    "label": "IMaterialEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMaterialEditor"
  },
  {
    "label": "SMaterialEditorUIPreviewZoomer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorUIPreviewZoomer"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "SMaterialEditor3DPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditor3DPreviewViewport"
  },
  {
    "label": "FAdvancedPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAdvancedPreviewScene"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "SOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOverlay"
  },
  {
    "label": "FMaterialEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialEditorViewportClient"
  },
  {
    "label": "FAdvancedPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAdvancedPreviewScene"
  },
  {
    "label": "APostProcessVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APostProcessVolume"
  },
  {
    "label": "SMaterialEditorUIPreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorUIPreviewViewport"
  },
  {
    "label": "SMaterialEditorUIPreviewZoomer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMaterialEditorUIPreviewZoomer"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SMaterialEditor3DPreviewViewport\")"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "SetPreviewAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviewAsset(UObject* InAsset)"
  },
  {
    "label": "SetPreviewAssetByName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviewAssetByName(const TCHAR* InAssetName)"
  },
  {
    "label": "SetPreviewMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewMaterial(UMaterialInterface* InMaterialInterface)"
  },
  {
    "label": "OnAddedToTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddedToTab( const TSharedRef<SDockTab>& OwnerTab )"
  },
  {
    "label": "OnSetPreviewPrimitive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPreviewPrimitive(EThumbnailPrimType PrimType, bool bInitialLoad = false)"
  },
  {
    "label": "OnSetPreviewMeshFromSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetPreviewMeshFromSelection()"
  },
  {
    "label": "TogglePreviewBackground()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TogglePreviewBackground()"
  },
  {
    "label": "OnAssetViewerSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetViewerSettingsChanged(const FName& InPropertyName)"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyChanged(UObject* ObjectBeingModified, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, UMaterialInterface* PreviewMaterial )"
  },
  {
    "label": "SetPreviewMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPreviewMaterial(UMaterialInterface* InMaterialInterface)"
  },
  {
    "label": "OnPreviewXChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewXChanged( int32 NewValue )"
  },
  {
    "label": "OnPreviewXCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewXCommitted( int32 NewValue, ETextCommit::Type )"
  },
  {
    "label": "OnPreviewYChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewYChanged( int32 NewValue )"
  },
  {
    "label": "OnPreviewYCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreviewYCommitted( int32 NewValue, ETextCommit::Type )"
  },
  {
    "label": "SetBackgroundType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBackgroundType(EBackgroundType NewBackgroundType)"
  },
  {
    "label": "ToggleShowBorder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowBorder()"
  },
  {
    "label": "BuildViewOptionsMenu()",
    "kind": "Method",
    "detail": "Function (FMenuBuilder)",
    "insertText": "BuildViewOptionsMenu(bool bForContextMenu = false)"
  },
  {
    "label": "OnViewportClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnViewportClicked(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "ShowContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowContextMenu(const FGeometry& Geometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseWheel()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseWheel(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "HandleSettingsActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingsActionExecute()"
  },
  {
    "label": "HandleSettingsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingsChanged()"
  },
  {
    "label": "HandleDidZoom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDidZoom()"
  },
  {
    "label": "ExecuteZoomToActual()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteZoomToActual()"
  }
]