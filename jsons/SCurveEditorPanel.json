[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "IGraphEditorView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IGraphEditorView"
  },
  {
    "label": "ITimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimeSliderController"
  },
  {
    "label": "SCurveEditorToolProperties",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorToolProperties"
  },
  {
    "label": "SCurveEditorView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorView"
  },
  {
    "label": "SCurveEditorViewContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorViewContainer"
  },
  {
    "label": "SCurveEditorFilterPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorFilterPanel"
  },
  {
    "label": "SCurveKeyDetailPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveKeyDetailPanel"
  },
  {
    "label": "SScrollBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UCurveEditorFilterBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveEditorFilterBase"
  },
  {
    "label": "FCurveEditorDelayedDrag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorDelayedDrag"
  },
  {
    "label": "FCurveEditorEditObjectContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorEditObjectContainer"
  },
  {
    "label": "FCurveEditorToolID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveEditorToolID"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "SSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSplitter"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" CurveDataAbstraction . h \" # include \" CurveDrawInfo . h \" # include \" CurveEditor . h \" # include \" CurveEditorTypes . h \" # include \" WidgetFocusUtils . h \" # include \" Curves / RealCurve . h \" # include \" Curves / RichCurve . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Layout / Geometry . h \" # include \" Layout / Visibility . h \" # include \" Math / Axis . h \" # include \" Math / Color . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / SubclassOf . h \" # include \" Templates / UniquePtr . h \" # include \" Textures / SlateIcon . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FCurveEditor ; class FExtender ; class FTabManager ; class FUICommandList ; class IDetailsView ; class IGraphEditorView ; class ITimeSliderController ; class SCurveEditorToolProperties ; class SCurveEditorView ; class SCurveEditorViewContainer ; class SCurveEditorFilterPanel ; class SCurveKeyDetailPanel ; class SScrollBox ; class SWidget ; class UCurveEditorFilterBase ; struct FCurveEditorDelayedDrag ; struct FCurveEditorEditObjectContainer ; struct FCurveEditorToolID ; struct FKeyEvent ; class SCurveEditorPanel : public SCompoundWidget {)",
    "insertText": "SLATE_BEGIN_ARGS(SCurveEditorPanel) : _GridLineTint(FLinearColor(0.1f, 0.1f, 0.1f, 1.f)) , _MinimumViewPanelHeight(300.0f)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FLinearColor, GridLineTint) SLATE_ARGUMENT(TSharedPtr<FTabManager>, TabManager) SLATE_ARGUMENT(TSharedPtr<ITimeSliderController>, ExternalTimeSliderController) SLATE_ATTRIBUTE(FText, DisabledTimeSnapTooltip) SLATE_NAMED_SLOT(FArguments, TreeContent) SLATE_ARGUMENT(float, MinimumViewPanelHeight) SLATE_END_ARGS() SCurveEditorPanel()"
  },
  {
    "label": "SCurveEditorPanel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SCurveEditorPanel()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<FCurveEditor> InCurveEditor)"
  },
  {
    "label": "GetCommands()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FUICommandList>)",
    "insertText": "GetCommands()"
  },
  {
    "label": "RemoveView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveView(TSharedRef<SCurveEditorView> ViewToRemove)"
  },
  {
    "label": "GetToolbarExtender()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FExtender>)",
    "insertText": "GetToolbarExtender()"
  },
  {
    "label": "GetScrollPanelGeometry()",
    "kind": "Method",
    "detail": "Function (const FGeometry&)",
    "insertText": "GetScrollPanelGeometry()"
  },
  {
    "label": "GetViewContainerGeometry()",
    "kind": "Method",
    "detail": "Function (const FGeometry&)",
    "insertText": "GetViewContainerGeometry()"
  },
  {
    "label": "GetViews()",
    "kind": "Method",
    "detail": "Function (TArrayView<const TSharedPtr<SCurveEditorView>>)",
    "insertText": "GetViews()"
  },
  {
    "label": "GetGridLineTint()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetGridLineTint()"
  },
  {
    "label": "ScrollBy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ScrollBy(float Amount)"
  },
  {
    "label": "FindViews()",
    "kind": "Method",
    "detail": "Function (TMultiMap<FCurveModelID,TSharedRef<SCurveEditorView>>::TConstKeyIterator)",
    "insertText": "FindViews(TRetainedRef<FCurveModelID> InCurveID)"
  },
  {
    "label": "RemoveCurveFromViews()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveCurveFromViews(FCurveModelID InCurveID)"
  },
  {
    "label": "GetViewMode()",
    "kind": "Method",
    "detail": "Function (ECurveEditorViewID)",
    "insertText": "GetViewMode()"
  },
  {
    "label": "ResetMinMaxes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMinMaxes()"
  },
  {
    "label": "UpdateAxisSnapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAxisSnapping()"
  },
  {
    "label": "FilterClassChanged()",
    "kind": "Method",
    "detail": "Function (FSimpleDelegate OnFilterClassChanged ; void)",
    "insertText": "FilterClassChanged()"
  },
  {
    "label": "EnablePendingFocusOnHovering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnablePendingFocusOnHovering(const bool InEnabled)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnMouseEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseEnter(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseLeave(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "MakeTimeSnapMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeTimeSnapMenu()"
  },
  {
    "label": "GetTimeSnapMenuTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTimeSnapMenuTooltip()"
  },
  {
    "label": "MakeGridSpacingMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeGridSpacingMenu()"
  },
  {
    "label": "MakeAxisSnapMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeAxisSnapMenu()"
  },
  {
    "label": "MakeViewModeMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeViewModeMenu()"
  },
  {
    "label": "IsInlineEditPanelEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInlineEditPanelEditable()"
  },
  {
    "label": "ShouldInstructionOverlayBeVisible()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "ShouldInstructionOverlayBeVisible()"
  },
  {
    "label": "GetSplitterVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "GetSplitterVisibility()"
  },
  {
    "label": "UpdateTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTime()"
  },
  {
    "label": "UpdateEditBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateEditBox()"
  },
  {
    "label": "UpdateCommonCurveInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCommonCurveInfo()"
  },
  {
    "label": "MakeCurveEditorCurveViewOptionsMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeCurveEditorCurveViewOptionsMenu()"
  },
  {
    "label": "MakeCurveExtrapolationMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeCurveExtrapolationMenu(const bool bInPostExtrapolation)"
  },
  {
    "label": "GetCurveExtrapolationPreIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetCurveExtrapolationPreIcon()"
  },
  {
    "label": "GetCurveExtrapolationPostIcon()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetCurveExtrapolationPostIcon()"
  },
  {
    "label": "ShowCurveFilterUI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowCurveFilterUI(TSubclassOf<UCurveEditorFilterBase> FilterClass)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "SetKeyAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAttributes(FKeyAttributes KeyAttributes, FText Description)"
  },
  {
    "label": "SetCurveAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveAttributes(FCurveAttributes CurveAttributes, FText Description)"
  },
  {
    "label": "CompareCommonInterpolationMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareCommonInterpolationMode(ERichCurveInterpMode InterpMode)"
  },
  {
    "label": "CompareCommonTangentMode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CompareCommonTangentMode(ERichCurveInterpMode InterpMode, ERichCurveTangentMode TangentMode)"
  },
  {
    "label": "CompareCommonTangentWeightMode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CompareCommonTangentWeightMode(ERichCurveInterpMode InterpMode, ERichCurveTangentWeightMode TangentWeightMode)"
  },
  {
    "label": "CompareCommonPreExtrapolationMode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CompareCommonPreExtrapolationMode(ERichCurveExtrapolation PreExtrapolationMode)"
  },
  {
    "label": "CompareCommonPostExtrapolationMode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CompareCommonPostExtrapolationMode(ERichCurveExtrapolation PostExtrapolationMode)"
  },
  {
    "label": "ToggleWeightedTangents()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ToggleWeightedTangents()"
  },
  {
    "label": "CanToggleWeightedTangents()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanToggleWeightedTangents()"
  },
  {
    "label": "CanSetKeyInterpolation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSetKeyInterpolation()"
  },
  {
    "label": "SetAxisSnapping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAxisSnapping(ECurveEditorSnapAxis)"
  },
  {
    "label": "GetCurveEditor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCurveEditor>)",
    "insertText": "GetCurveEditor()"
  },
  {
    "label": "OnSplitterFinishedResizing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSplitterFinishedResizing()"
  },
  {
    "label": "CreateViewOfType()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<SCurveEditorView>)",
    "insertText": "CreateViewOfType(FCurveModelID CurveModelID, ECurveEditorViewID ViewTypeID, bool bPinned)"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FCurveEditor> CurveEditor ; TMultiMap<FCurveModelID,TSharedRef<SCurveEditorView>> CurveViews ; TSet<TSharedRef<SCurveEditorView>> ExternalViews ; TOptional<FCurveEditorDelayedDrag> DragOperation ; FCurveAttributes CachedCommonCurveAttributes ; FKeyAttributes CachedCommonKeyAttributes ; bool bSelectionSupportsWeightedTangents ; TAttribute<FLinearColor> GridLineTintAttribute ; TAttribute<FText> DisabledTimeSnapTooltipAttribute ; TSharedPtr<SCurveKeyDetailPanel> KeyDetailsView ; TSharedPtr<SCurveEditorFilterPanel> FilterPanel ; TSharedPtr<SCurveEditorToolProperties> ToolPropertiesPanel ; TMap<FCurveModelID,TSharedPtr<SWidget>> CurveToEditUI ; TSharedPtr<FUICommandList> CommandList ; uint32 CachedSelectionSerialNumber ; private : void)",
    "insertText": "SetViewMode(const ECurveEditorViewID NewViewMode)"
  },
  {
    "label": "CompareViewMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompareViewMode(const ECurveEditorViewID InViewMode)"
  },
  {
    "label": "RebuildCurveViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildCurveViews()"
  },
  {
    "label": "OnCurveEditorToolChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurveEditorToolChanged(FCurveEditorToolID InToolId)"
  }
]