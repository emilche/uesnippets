[
  {
    "label": "CefCreateDirectory()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_FILE_UTIL_H_ # define CEF_INCLUDE_CEF_FILE_UTIL_H_ # pragma once # include \" include / cef_base . h \" bool)",
    "insertText": "CefCreateDirectory(const CefString& full_path)"
  },
  {
    "label": "CefGetTempDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefGetTempDirectory(CefString& temp_dir)"
  },
  {
    "label": "CefCreateNewTempDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefCreateNewTempDirectory(const CefString& prefix, CefString& new_temp_path)"
  },
  {
    "label": "CefCreateTempDirectoryInDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefCreateTempDirectoryInDirectory(const CefString& base_dir, const CefString& prefix, CefString& new_dir)"
  },
  {
    "label": "CefDirectoryExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefDirectoryExists(const CefString& path)"
  },
  {
    "label": "CefDeleteFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefDeleteFile(const CefString& path, bool recursive)"
  },
  {
    "label": "CefZipDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CefZipDirectory(const CefString& src_dir, const CefString& dest_file, bool include_hidden_files)"
  },
  {
    "label": "CefLoadCRLSetsFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CefLoadCRLSetsFile(const CefString& path)"
  }
]