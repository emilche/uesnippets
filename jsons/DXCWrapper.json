[
  {
    "label": "FDllHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDllHandle"
  },
  {
    "label": "SHADERCOMPILERCOMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHADERCOMPILERCOMMON_API"
  },
  {
    "label": "FDllHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Templates / RefCounting . h \" struct FDllHandle : public FRefCountedObject { private : void* Handle = nullptr ; public :)",
    "insertText": "FDllHandle(const TCHAR* InFilename)"
  },
  {
    "label": "FDllHandle()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDllHandle()"
  },
  {
    "label": "GetModuleVersionHash()",
    "kind": "Method",
    "detail": "Function (} ; class FDxcModuleWrapper { private : uint32 ModuleVersionHash = 0 ; protected : uint32)",
    "insertText": "GetModuleVersionHash()"
  },
  {
    "label": "FDxcModuleWrapper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDxcModuleWrapper()"
  },
  {
    "label": "FShaderConductorModuleWrapper()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FShaderConductorModuleWrapper()"
  }
]