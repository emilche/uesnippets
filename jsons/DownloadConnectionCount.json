[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IDownloadServiceStatistics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDownloadServiceStatistics"
  },
  {
    "label": "IDownloadConnectionCount",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDownloadConnectionCount"
  },
  {
    "label": "FDownloadConnectionCountConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDownloadConnectionCountConfig"
  },
  {
    "label": "FDownloadConnectionCountFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDownloadConnectionCountFactory"
  },
  {
    "label": "GetAdjustedCount()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / ChunkSource . h \" # include \" Installer / Controllable . h \" # include \" BuildPatchManifest . h \" # include \" Interfaces / IBuildInstaller . h \" enum class EBuildPatchDownloadHealth ; namespace BuildPatchServices { class IDownloadServiceStatistics ; class IDownloadConnectionCount { public : uint32)",
    "insertText": "GetAdjustedCount(uint32 NumProcessing, EBuildPatchDownloadHealth CurrentHealth)"
  },
  {
    "label": "IDownloadConnectionCount()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IDownloadConnectionCount()"
  },
  {
    "label": "FDownloadConnectionCountConfig()",
    "kind": "Method",
    "detail": "Function (} } ; struct FDownloadConnectionCountConfig { uint32 MaxLimit ; uint32 MinLimit ; uint32 NegativeHysteresis ; uint32 AverageSpeedMinCount ; uint32 PositiveHysteresis ; double HighBandwidthFactor ; double LowBandwidthFactor ; bool bDisableConnectionScaling ; uint32 FallbackCount ; uint32 HealthHysteresis ;)",
    "insertText": "FDownloadConnectionCountConfig() : MaxLimit(100U) , MinLimit(8U) , NegativeHysteresis(8U) , AverageSpeedMinCount(8U) , PositiveHysteresis(4U) , HighBandwidthFactor(0.85L) , LowBandwidthFactor(0.65L) , bDisableConnectionScaling(false) , FallbackCount(16) , HealthHysteresis(8)"
  },
  {
    "label": "FDownloadConnectionCountConfig()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FDownloadConnectionCountConfig(const FDownloadConnectionCountConfig& CopyThis) : MaxLimit(CopyThis.MaxLimit) , MinLimit(CopyThis.MinLimit) , NegativeHysteresis(CopyThis.NegativeHysteresis) , AverageSpeedMinCount(CopyThis.AverageSpeedMinCount) , PositiveHysteresis(CopyThis.PositiveHysteresis) , HighBandwidthFactor(CopyThis.HighBandwidthFactor) , LowBandwidthFactor(CopyThis.LowBandwidthFactor) , bDisableConnectionScaling(CopyThis.bDisableConnectionScaling) , FallbackCount(CopyThis.FallbackCount) , HealthHysteresis(CopyThis.HealthHysteresis)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } ; class FDownloadConnectionCountFactory { public : IDownloadConnectionCount*)",
    "insertText": "Create(FDownloadConnectionCountConfig Configuration, IDownloadServiceStatistics* InDownloadStatistics)"
  }
]