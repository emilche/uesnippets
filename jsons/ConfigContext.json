[
  {
    "label": "FConfigCacheIni",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigCacheIni"
  },
  {
    "label": "FConfigFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigFile"
  },
  {
    "label": "FConfigBranch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigBranch"
  },
  {
    "label": "FConfigContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConfigContext"
  },
  {
    "label": "FPerPlatformDirs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerPlatformDirs"
  },
  {
    "label": "ReadIntoLocalFile()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreGlobals . h \" # include \" CoreTypes . h \" # include \" Misc / ConfigTypes . h \" # include \" Misc / ConfigCacheIni . h \" # ifndef CUSTOM_CONFIG # define CUSTOM_CONFIG \" \" # endif # ifndef DISABLE_GENERATED_INI_WHEN_COOKED # define DISABLE_GENERATED_INI_WHEN_COOKED 0 # endif class FConfigCacheIni ; class FConfigFile ; class FConfigBranch ; class FConfigContext { public : FConfigContext)",
    "insertText": "ReadIntoLocalFile(FConfigFile& DestConfigFile, const FString& Platform=FString())"
  },
  {
    "label": "ReadSingleIntoLocalFile()",
    "kind": "Method",
    "detail": "Function (} FConfigContext)",
    "insertText": "ReadSingleIntoLocalFile(FConfigFile& DestConfigFile, const FString& Platform=FString())"
  },
  {
    "label": "ReadIntoGConfig()",
    "kind": "Method",
    "detail": "Function (} FConfigContext)",
    "insertText": "ReadIntoGConfig()"
  },
  {
    "label": "ForceReloadIntoGConfig()",
    "kind": "Method",
    "detail": "Function (} FConfigContext)",
    "insertText": "ForceReloadIntoGConfig()"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (FConfigContext)",
    "insertText": "Context(GConfig, true, FString())"
  },
  {
    "label": "ReadSingleIntoGConfig()",
    "kind": "Method",
    "detail": "Function (Context . bForceReload = true ; return Context ; } FConfigContext)",
    "insertText": "ReadSingleIntoGConfig()"
  },
  {
    "label": "ReadIntoConfigSystem()",
    "kind": "Method",
    "detail": "Function (} FConfigContext)",
    "insertText": "ReadIntoConfigSystem(FConfigCacheIni* ConfigSystem, const FString& Platform)"
  },
  {
    "label": "ReadSingleIntoConfigSystem()",
    "kind": "Method",
    "detail": "Function (} FConfigContext)",
    "insertText": "ReadSingleIntoConfigSystem(FConfigCacheIni* ConfigSystem, const FString& Platform)"
  },
  {
    "label": "ReadIntoPluginFile()",
    "kind": "Method",
    "detail": "Function (} FConfigContext)",
    "insertText": "ReadIntoPluginFile(FConfigFile& DestConfigFile, const FString& PluginRootDir, const TArray<FString>& ChildPluginsBaseDirs, const FString& Platform = FString())"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (FConfigContext)",
    "insertText": "Context(nullptr, true, Platform, &DestConfigFile)"
  },
  {
    "label": "ReadPluginIntoConfigSystem()",
    "kind": "Method",
    "detail": "Function (Context . bIsForPlugin = true ; Context . PluginRootDir = PluginRootDir ; Context . ChildPluginBaseDirs = ChildPluginsBaseDirs ; Context . bWriteDestIni = true ; return Context ; } FConfigContext)",
    "insertText": "ReadPluginIntoConfigSystem(FConfigCacheIni* ConfigSystem, FName PluginName, const FString& PluginRootDir, const TArray<FString>& ChildPluginsBaseDirs)"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (FConfigContext)",
    "insertText": "Context(ConfigSystem, true, FString())"
  },
  {
    "label": "ReadPluginToModifyConfigSystem()",
    "kind": "Method",
    "detail": "Function (Context . bIsForPlugin = true ; Context . PluginRootDir = PluginRootDir ; Context . ChildPluginBaseDirs = ChildPluginsBaseDirs ; Context . ConfigFileTag = PluginName ; return Context ; } FConfigContext)",
    "insertText": "ReadPluginToModifyConfigSystem(FConfigCacheIni* ConfigSystem, DynamicLayerPriority Priority, FName PluginName, const FString& PluginRootDir, const TArray<FString>& ChildPluginsBaseDirs, FConfigModificationTracker* ChangeTracker=nullptr)"
  },
  {
    "label": "ReadUpToBeforeFile()",
    "kind": "Method",
    "detail": "Function (Context . bIsForPlugin = true ; Context . bIsForPluginModification = true ; Context . PluginRootDir = PluginRootDir ; Context . ChildPluginBaseDirs = ChildPluginsBaseDirs ; Context . ConfigFileTag = PluginName ; Context . ChangeTracker = ChangeTracker ; Context . PluginModificationPriority = Priority ; return Context ; } FConfigContext)",
    "insertText": "ReadUpToBeforeFile(FConfigFile& DestConfigFile, const FString& Platform, const FString& StartSkippingAtFilename)"
  },
  {
    "label": "EnsureRequiredGlobalPathsHaveBeenInitialized()",
    "kind": "Method",
    "detail": "Function (Context . StartSkippingAtFilename = StartSkippingAtFilename ; return Context ; } void)",
    "insertText": "EnsureRequiredGlobalPathsHaveBeenInitialized()"
  },
  {
    "label": "VisualizeHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisualizeHierarchy(FOutputDevice& Ar, const TCHAR* IniName, const TCHAR* OverridePlatform, const TCHAR* OverrideProjectOrProgramDataDir, const TCHAR* OverridePluginDir=nullptr, const TArray<FString>* ChildPluginBaseDirs=nullptr)"
  },
  {
    "label": "VisualizeHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisualizeHierarchy(FOutputDevice& Ar, const TCHAR* IniName)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Load(const TCHAR* IniName)"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Load(const TCHAR* IniName, FString& OutFilename)"
  },
  {
    "label": "GetPerPlatformDirs()",
    "kind": "Method",
    "detail": "Function (struct FPerPlatformDirs { FString PlatformExtensionEngineDir ; FString PlatformExtensionProjectDir ; FString PlatformExtensionPluginDir ; } ; const FPerPlatformDirs&)",
    "insertText": "GetPerPlatformDirs(const FString& PlatformName)"
  },
  {
    "label": "FConfigContext()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FConfigContext()"
  },
  {
    "label": "FConfigContext()",
    "kind": "Method",
    "detail": "Function (FConfigCacheIni* ConfigSystem ; FConfigFile* ExistingFile = nullptr ; FConfigBranch* Branch = nullptr ; FConfigBranch* TemporaryBranch = nullptr ; FString DestIniFilename ; FString Platform ; FString SavePlatform ; FString GeneratedConfigDir ; FString BaseIniName ; FString StartSkippingAtFilename ; FString EngineConfigDir ; FString EngineRootDir ; FString ProjectConfigDir ; FString ProjectRootDir ; FString PluginRootDir ; TArray<FString> ChildPluginBaseDirs ; FConfigModificationTracker* ChangeTracker = nullptr ; FName ConfigFileTag ; FString ProjectLimitedAccessDir ; FString ProjectNotForLicenseesDir ; FString ProjectNoRedistDir ; TMap<FString,FPerPlatformDirs> PerPlatformDirs ; TArray<FConfigLayer> OverrideLayers ; bool bUseHierarchyCache = false ; bool bAllowGeneratedIniWhenCooked = false ; bool bForceReload = false ; bool bAllowRemoteConfig = false ; bool bIsHierarchicalConfig ; bool bWriteDestIni = false ; bool bDefaultEngineRequired = false ; bool bIsForPlugin = false ; bool bIsForPluginModification = false ; bool bIncludeTagNameInBranchName = false ; DynamicLayerPriority PluginModificationPriority ; const TSet<FString>* IniCacheSet = nullptr ; protected : bool bDoNotResetConfigFile = false ; bool bCacheOnNextLoad = true ;)",
    "insertText": "FConfigContext(FConfigCacheIni* InConfigSystem, bool InIsHierarchicalConfig, const FString& InPlatform, FConfigFile* DestConfigFile=nullptr)"
  },
  {
    "label": "ResetBaseIni()",
    "kind": "Method",
    "detail": "Function (private : FConfigContext&)",
    "insertText": "ResetBaseIni(const TCHAR* InBaseIniName)"
  },
  {
    "label": "CachePaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CachePaths()"
  },
  {
    "label": "PrepareForLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareForLoad(bool& bPerformLoad)"
  },
  {
    "label": "PerformLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformLoad()"
  },
  {
    "label": "PerformSingleFileLoad()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PerformSingleFileLoad()"
  },
  {
    "label": "AddStaticLayersToHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddStaticLayersToHierarchy(TArray<FString>* GatheredLayerFilenames=nullptr, bool bIsForLogging=false)"
  },
  {
    "label": "LoadIniFileHierarchy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadIniFileHierarchy()"
  },
  {
    "label": "GenerateDestIniFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateDestIniFile()"
  },
  {
    "label": "PerformFinalExpansions()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "PerformFinalExpansions(const FString& InString, const FString& Platform)"
  },
  {
    "label": "LogVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LogVariables(const TCHAR* InBaseIniName, const FString& Platform)"
  },
  {
    "label": "DoesConfigFileExistWrapper()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "DoesConfigFileExistWrapper(const TCHAR* IniFile, const TSet<FString>* IniCacheSet = nullptr)"
  }
]