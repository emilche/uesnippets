[
  {
    "label": "PatchTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PatchTable"
  },
  {
    "label": "StencilTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StencilTable"
  },
  {
    "label": "LimitStencilTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LimitStencilTable"
  },
  {
    "label": "GLStencilTableSSBO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLStencilTableSSBO"
  },
  {
    "label": "GLComputeEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLComputeEvaluator"
  },
  {
    "label": "_StencilKernel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_StencilKernel"
  },
  {
    "label": "_PatchKernel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_PatchKernel"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENSUBDIV3_OSD_GL_COMPUTE_EVALUATOR_H # define OPENSUBDIV3_OSD_GL_COMPUTE_EVALUATOR_H # include \" . . / version . h \" # include \" . . / osd / opengl . h \" # include \" . . / osd / types . h \" # include \" . . / osd / bufferDescriptor . h \" namespace OpenSubdiv { namespace OPENSUBDIV_VERSION { namespace Far { class PatchTable ; class StencilTable ; class LimitStencilTable ; } namespace Osd { class GLStencilTableSSBO { public : GLStencilTableSSBO*)",
    "insertText": "Create(Far::StencilTable const *stencilTable, void *deviceContext = NULL)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} GLStencilTableSSBO*)",
    "insertText": "Create(Far::LimitStencilTable const *limitStencilTable, void *deviceContext = NULL)"
  },
  {
    "label": "GLStencilTableSSBO()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "GLStencilTableSSBO(Far::StencilTable const *stencilTable)"
  },
  {
    "label": "GLStencilTableSSBO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GLStencilTableSSBO(Far::LimitStencilTable const *limitStencilTable)"
  },
  {
    "label": "GLStencilTableSSBO()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GLStencilTableSSBO()"
  },
  {
    "label": "GetSizesBuffer()",
    "kind": "Method",
    "detail": "Function (GLuint)",
    "insertText": "GetSizesBuffer()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} GLComputeEvaluator*)",
    "insertText": "Create(BufferDescriptor const &srcDesc, BufferDescriptor const &dstDesc, BufferDescriptor const &duDesc, BufferDescriptor const &dvDesc, BufferDescriptor const &duuDesc, BufferDescriptor const &duvDesc, BufferDescriptor const &dvvDesc, void * deviceContext = NULL)"
  },
  {
    "label": "GLComputeEvaluator()",
    "kind": "Method",
    "detail": "Function (GLComputeEvaluator* instance = new)",
    "insertText": "GLComputeEvaluator()"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, STENCIL_TABLE const *stencilTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "else()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "else(void)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (instance =)",
    "insertText": "Create(srcDesc, dstDesc, BufferDescriptor(), BufferDescriptor())"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalStencils(srcBuffer, srcDesc, dstBuffer, dstDesc, stencilTable)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, STENCIL_TABLE const *stencilTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (instance =)",
    "insertText": "Create(srcDesc, dstDesc, duDesc, dvDesc)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalStencils(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, stencilTable)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, STENCIL_TABLE const *stencilTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (instance =)",
    "insertText": "Create(srcDesc, dstDesc, duDesc, dvDesc, duuDesc, duvDesc, dvvDesc)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalStencils(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, stencilTable)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, STENCIL_TABLE const *stencilTable)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, STENCIL_TABLE const *stencilTable)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,STENCIL_TABLE> bool)",
    "insertText": "EvalStencils(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, STENCIL_TABLE const *stencilTable)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalStencils(GLuint srcBuffer, BufferDescriptor const &srcDesc, GLuint dstBuffer, BufferDescriptor const &dstDesc, GLuint duBuffer, BufferDescriptor const &duDesc, GLuint dvBuffer, BufferDescriptor const &dvDesc, GLuint sizesBuffer, GLuint offsetsBuffer, GLuint indicesBuffer, GLuint weightsBuffer, GLuint duWeightsBuffer, GLuint dvWeightsBuffer, int start, int end)"
  },
  {
    "label": "EvalStencils()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvalStencils(GLuint srcBuffer, BufferDescriptor const &srcDesc, GLuint dstBuffer, BufferDescriptor const &dstDesc, GLuint duBuffer, BufferDescriptor const &duDesc, GLuint dvBuffer, BufferDescriptor const &dvDesc, GLuint duuBuffer, BufferDescriptor const &duuDesc, GLuint duvBuffer, BufferDescriptor const &duvDesc, GLuint dvvBuffer, BufferDescriptor const &dvvDesc, GLuint sizesBuffer, GLuint offsetsBuffer, GLuint indicesBuffer, GLuint weightsBuffer, GLuint duWeightsBuffer, GLuint dvWeightsBuffer, GLuint duuWeightsBuffer, GLuint duvWeightsBuffer, GLuint dvvWeightsBuffer, int start, int end)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatches(srcBuffer, srcDesc, dstBuffer, dstDesc, numPatchCoords, patchCoords, patchTable)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatches(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, numPatchCoords, patchCoords, patchTable)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatches(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, numPatchCoords, patchCoords, patchTable)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatches(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EvalPatches(GLuint srcBuffer, BufferDescriptor const &srcDesc, GLuint dstBuffer, BufferDescriptor const &dstDesc, GLuint duBuffer, BufferDescriptor const &duDesc, GLuint dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, GLuint patchCoordsBuffer, const PatchArrayVector &patchArrays, GLuint patchIndexBuffer, GLuint patchParamsBuffer)"
  },
  {
    "label": "EvalPatches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EvalPatches(GLuint srcBuffer, BufferDescriptor const &srcDesc, GLuint dstBuffer, BufferDescriptor const &dstDesc, GLuint duBuffer, BufferDescriptor const &duDesc, GLuint dvBuffer, BufferDescriptor const &dvDesc, GLuint duuBuffer, BufferDescriptor const &duuDesc, GLuint duvBuffer, BufferDescriptor const &duvDesc, GLuint dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, GLuint patchCoordsBuffer, const PatchArrayVector &patchArrays, GLuint patchIndexBuffer, GLuint patchParamsBuffer)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, numPatchCoords, patchCoords, patchTable)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, numPatchCoords, patchCoords, patchTable)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, numPatchCoords, patchCoords, patchTable)"
  },
  {
    "label": "EvalPatchesVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesFaceVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, numPatchCoords, patchCoords, patchTable, fvarChannel)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel = 0)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesFaceVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, numPatchCoords, patchCoords, patchTable, fvarChannel)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel = 0)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (} template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel, GLComputeEvaluator const *instance, void * deviceContext = NULL)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (bool r = instance ->)",
    "insertText": "EvalPatchesFaceVarying(srcBuffer, srcDesc, dstBuffer, dstDesc, duBuffer, duDesc, dvBuffer, dvDesc, duuBuffer, duuDesc, duvBuffer, duvDesc, dvvBuffer, dvvDesc, numPatchCoords, patchCoords, patchTable, fvarChannel)"
  },
  {
    "label": "EvalPatchesFaceVarying()",
    "kind": "Method",
    "detail": "Function (delete instance ; return r ; } return false ; } } template<SRC_BUFFER,DST_BUFFER,PATCHCOORD_BUFFER,PATCH_TABLE> bool)",
    "insertText": "EvalPatchesFaceVarying(SRC_BUFFER *srcBuffer, BufferDescriptor const &srcDesc, DST_BUFFER *dstBuffer, BufferDescriptor const &dstDesc, DST_BUFFER *duBuffer, BufferDescriptor const &duDesc, DST_BUFFER *dvBuffer, BufferDescriptor const &dvDesc, DST_BUFFER *duuBuffer, BufferDescriptor const &duuDesc, DST_BUFFER *duvBuffer, BufferDescriptor const &duvDesc, DST_BUFFER *dvvBuffer, BufferDescriptor const &dvvDesc, int numPatchCoords, PATCHCOORD_BUFFER *patchCoords, PATCH_TABLE *patchTable, int fvarChannel = 0)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Compile(BufferDescriptor const &srcDesc, BufferDescriptor const &dstDesc, BufferDescriptor const &duDesc = BufferDescriptor(), BufferDescriptor const &dvDesc = BufferDescriptor(), BufferDescriptor const &duuDesc = BufferDescriptor(), BufferDescriptor const &duvDesc = BufferDescriptor(), BufferDescriptor const &dvvDesc = BufferDescriptor())"
  },
  {
    "label": "Synchronize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Synchronize(void *deviceContext)"
  },
  {
    "label": "_StencilKernel()",
    "kind": "Method",
    "detail": "Function (private : struct _StencilKernel {)",
    "insertText": "_StencilKernel()"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Compile(BufferDescriptor const &srcDesc, BufferDescriptor const &dstDesc, BufferDescriptor const &duDesc, BufferDescriptor const &dvDesc, BufferDescriptor const &duuDesc, BufferDescriptor const &duvDesc, BufferDescriptor const &dvvDesc, int workGroupSize)"
  },
  {
    "label": "_PatchKernel()",
    "kind": "Method",
    "detail": "Function (GLuint program ; GLuint uniformStart ; GLuint uniformEnd ; GLuint uniformSrcOffset ; GLuint uniformDstOffset ; GLuint uniformDuDesc ; GLuint uniformDvDesc ; GLuint uniformDuuDesc ; GLuint uniformDuvDesc ; GLuint uniformDvvDesc ; } _stencilKernel ; struct _PatchKernel {)",
    "insertText": "_PatchKernel()"
  }
]