[
  {
    "label": "NSString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NSString"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_STRINGS_SYS_STRING_CONVERSIONS_H_ # define BASE_STRINGS_SYS_STRING_CONVERSIONS_H_ # include<stdint . h> # include<string> # include \" base / base_export . h \" # include \" base / strings / string_piece . h \" # include \" build / build_config . h \" # if)",
    "insertText": "BUILDFLAG(IS_APPLE)"
  },
  {
    "label": "SysWideToUTF8()",
    "kind": "Method",
    "detail": "Function (# endif # endif namespace base { [ [ nodiscard ] ] BASE_EXPORT std::string)",
    "insertText": "SysWideToUTF8(const std::wstring& wide)"
  },
  {
    "label": "SysUTF8ToWide()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::wstring)",
    "insertText": "SysUTF8ToWide(StringPiece utf8)"
  },
  {
    "label": "SysWideToNativeMB()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::string)",
    "insertText": "SysWideToNativeMB(const std::wstring& wide)"
  },
  {
    "label": "SysNativeMBToWide()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::wstring)",
    "insertText": "SysNativeMBToWide(StringPiece native_mb)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(IS_WIN) [[nodiscard]] BASE_EXPORT std::wstring SysMultiByteToWide(StringPiece mb, uint32_t code_page)"
  },
  {
    "label": "SysWideToMultiByte()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::string)",
    "insertText": "SysWideToMultiByte(const std::wstring& wide, uint32_t code_page)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# endif # if)",
    "insertText": "BUILDFLAG(IS_APPLE) [[nodiscard]] BASE_EXPORT ScopedCFTypeRef<CFStringRef> SysUTF8ToCFStringRef( StringPiece utf8)"
  },
  {
    "label": "SysUTF16ToCFStringRef()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT ScopedCFTypeRef<CFStringRef>)",
    "insertText": "SysUTF16ToCFStringRef(StringPiece16 utf16)"
  },
  {
    "label": "SysCFStringRefToUTF8()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::string)",
    "insertText": "SysCFStringRefToUTF8(CFStringRef ref)"
  },
  {
    "label": "SysCFStringRefToUTF16()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::u16string)",
    "insertText": "SysCFStringRefToUTF16(CFStringRef ref)"
  },
  {
    "label": "SysUTF8ToNSString()",
    "kind": "Method",
    "detail": "Function (# ifdef __OBJC__ [ [ nodiscard ] ] BASE_EXPORT NSString*)",
    "insertText": "SysUTF8ToNSString(StringPiece utf8)"
  },
  {
    "label": "SysUTF16ToNSString()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT NSString*)",
    "insertText": "SysUTF16ToNSString(StringPiece16 utf16)"
  },
  {
    "label": "SysNSStringToUTF8()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::string)",
    "insertText": "SysNSStringToUTF8(NSString* ref)"
  },
  {
    "label": "SysNSStringToUTF16()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] BASE_EXPORT std::u16string)",
    "insertText": "SysNSStringToUTF16(NSString* ref)"
  }
]