[
  {
    "label": "EncoderBitrateAdjuster",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EncoderBitrateAdjuster"
  },
  {
    "label": "EncoderBitrateAdjuster()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_ENCODER_BITRATE_ADJUSTER_H_ # define VIDEO_ENCODER_BITRATE_ADJUSTER_H_ # include<memory> # include \" api / video / encoded_image . h \" # include \" api / video / video_bitrate_allocation . h \" # include \" api / video_codecs / video_encoder . h \" # include \" video / encoder_overshoot_detector . h \" namespace webrtc { class EncoderBitrateAdjuster { public : int64_t kWindowSizeMs = 3 0 0 0 ; size_t kMinFramesSinceLayoutChange = 3 0 ; double kDefaultUtilizationFactor = 1 . 2 ;)",
    "insertText": "EncoderBitrateAdjuster(const VideoCodec& codec_settings)"
  },
  {
    "label": "EncoderBitrateAdjuster()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EncoderBitrateAdjuster()"
  },
  {
    "label": "AdjustRateAllocation()",
    "kind": "Method",
    "detail": "Function (VideoBitrateAllocation)",
    "insertText": "AdjustRateAllocation(const VideoEncoder::RateControlParameters& rates)"
  },
  {
    "label": "OnEncoderInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEncoderInfo(const VideoEncoder::EncoderInfo& encoder_info)"
  },
  {
    "label": "OnEncodedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEncodedFrame(DataSize size, int spatial_index, int temporal_index)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  }
]