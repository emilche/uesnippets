[
  {
    "label": "FFeedbackContextAnsi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFeedbackContextAnsi"
  },
  {
    "label": "LocalPrint()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / StringConv . h \" # include \" Containers / UnrealString . h \" # include \" CoreGlobals . h \" # include \" Misc / App . h \" # include \" Misc / OutputDeviceConsole . h \" # include \" Misc / OutputDeviceHelper . h \" # include \" Misc / OutputDeviceRedirector . h \" # include \" Misc / FeedbackContext . h \" class FFeedbackContextAnsi : public FFeedbackContext { public : FContextSupplier* Context = nullptr ; FOutputDevice* AuxOut = nullptr ; void)",
    "insertText": "LocalPrint(const TCHAR* Str)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* V, ELogVerbosity::Type Verbosity, const FName& Category)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* V, ELogVerbosity::Type Verbosity, const FName& Category, double Time)"
  },
  {
    "label": "SerializeRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeRecord(const UE::FLogRecord& Record)"
  },
  {
    "label": "YesNof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "YesNof(const FText& Question)"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (FContextSupplier*)",
    "insertText": "GetContext()"
  },
  {
    "label": "IsUsingLocalPrint()",
    "kind": "Method",
    "detail": "Function (Context = InContext ; } private : bool)",
    "insertText": "IsUsingLocalPrint()"
  }
]