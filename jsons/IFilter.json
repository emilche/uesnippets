[
  {
    "label": "IFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFilter"
  },
  {
    "label": "IFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" template<TItemType> class IFilter { public : typedef TItemType ItemType ; ~)",
    "insertText": "IFilter()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetName()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IFilter<TItemType>, FChangedEvent)"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (FChangedEvent&)",
    "insertText": "OnChanged()"
  }
]