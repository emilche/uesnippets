[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DispatchOps()",
    "kind": "Method",
    "detail": "Function (template<HandlerType> void)",
    "insertText": "DispatchOps(FOp* OpsBegin, FOp* OpsEnd, HandlerType& Handler)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (FOp* Op = OpsBegin ;)",
    "insertText": "while(Op < OpsEnd)"
  },
  {
    "label": "VISIT_OP()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "VISIT_OP(Name) \\ case EOpcode::Name: \\ Handler(*static_cast<FOp##Name*>(Op))"
  },
  {
    "label": "FOp()",
    "kind": "Method",
    "detail": "Function (\\ Op = BitCast<)",
    "insertText": "FOp(static_cast<FOp##Name*>(Op) + 1)"
  },
  {
    "label": "VERSE_ENUM_OPS()",
    "kind": "Method",
    "detail": "Function (\\ break ;)",
    "insertText": "VERSE_ENUM_OPS(VISIT_OP) #undef VISIT_OP default: V_DIE(\"Invalid opcode: %u\", static_cast<FOpcodeInt>(Op->Opcode))"
  }
]