[
  {
    "label": "NetEqFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEqFactory"
  },
  {
    "label": "NetEqFactory()",
    "kind": "Method",
    "detail": "Function (# ifndef API_NETEQ_NETEQ_FACTORY_H_ # define API_NETEQ_NETEQ_FACTORY_H_ # include<memory> # include \" api / audio_codecs / audio_decoder_factory . h \" # include \" api / neteq / neteq . h \" # include \" system_wrappers / include / clock . h \" namespace webrtc { class NetEqFactory { public : ~)",
    "insertText": "NetEqFactory()"
  },
  {
    "label": "CreateNetEq()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<NetEq>)",
    "insertText": "CreateNetEq(const NetEq::Config& config, const rtc::scoped_refptr<AudioDecoderFactory>& decoder_factory, Clock* clock)"
  }
]