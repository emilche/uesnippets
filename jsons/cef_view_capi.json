[
  {
    "label": "_cef_browser_view_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_view_t"
  },
  {
    "label": "_cef_button_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_button_t"
  },
  {
    "label": "_cef_panel_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_panel_t"
  },
  {
    "label": "_cef_scroll_view_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_scroll_view_t"
  },
  {
    "label": "_cef_textfield_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_textfield_t"
  },
  {
    "label": "_cef_window_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_window_t"
  },
  {
    "label": "_cef_view_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_view_t"
  },
  {
    "label": "_cef_view_delegate_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_view_delegate_t"
  },
  {
    "label": "_cef_browser_view_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_VIEWS_CEF_VIEW_CAPI_H_ # define CEF_INCLUDE_CAPI_VIEWS_CEF_VIEW_CAPI_H_ # pragma once # include \" include / capi / views / cef_view_delegate_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_browser_view_t ; struct _cef_button_t ; struct _cef_panel_t ; struct _cef_scroll_view_t ; struct _cef_textfield_t ; struct _cef_window_t ; typedef struct _cef_view_t { cef_base_ref_counted_t base ; struct)",
    "insertText": "_cef_browser_view_t(CEF_CALLBACK* as_browser_view)( struct _cef_view_t* self)"
  },
  {
    "label": "_cef_button_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_button_t(CEF_CALLBACK* as_button)(struct _cef_view_t* self)"
  },
  {
    "label": "_cef_panel_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_panel_t(CEF_CALLBACK* as_panel)(struct _cef_view_t* self)"
  },
  {
    "label": "_cef_scroll_view_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_scroll_view_t(CEF_CALLBACK* as_scroll_view)( struct _cef_view_t* self)"
  },
  {
    "label": "_cef_textfield_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_textfield_t(CEF_CALLBACK* as_textfield)( struct _cef_view_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_type_string)( struct _cef_view_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* to_string)(struct _cef_view_t* self, int include_children)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_valid)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_attached)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_same)(struct _cef_view_t* self, struct _cef_view_t* that)"
  },
  {
    "label": "_cef_view_delegate_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_view_delegate_t(CEF_CALLBACK* get_delegate)( struct _cef_view_t* self)"
  },
  {
    "label": "_cef_window_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_window_t(CEF_CALLBACK* get_window)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_id)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_id)(struct _cef_view_t* self, int id)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_group_id)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_group_id)(struct _cef_view_t* self, int group_id)"
  },
  {
    "label": "_cef_view_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_view_t(CEF_CALLBACK* get_parent_view)(struct _cef_view_t* self)"
  },
  {
    "label": "_cef_view_t()",
    "kind": "Method",
    "detail": "Function (struct)",
    "insertText": "_cef_view_t(CEF_CALLBACK* get_view_for_id)(struct _cef_view_t* self, int id)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_bounds)(struct _cef_view_t* self, const cef_rect_t* bounds)"
  },
  {
    "label": "cef_rect_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_rect_t(CEF_CALLBACK* get_bounds)(struct _cef_view_t* self)"
  },
  {
    "label": "cef_rect_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_rect_t(CEF_CALLBACK* get_bounds_in_screen)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_size)(struct _cef_view_t* self, const cef_size_t* size)"
  },
  {
    "label": "cef_size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_size_t(CEF_CALLBACK* get_size)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_position)(struct _cef_view_t* self, const cef_point_t* position)"
  },
  {
    "label": "cef_point_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_point_t(CEF_CALLBACK* get_position)(struct _cef_view_t* self)"
  },
  {
    "label": "cef_size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_size_t(CEF_CALLBACK* get_preferred_size)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* size_to_preferred_size)(struct _cef_view_t* self)"
  },
  {
    "label": "cef_size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_size_t(CEF_CALLBACK* get_minimum_size)(struct _cef_view_t* self)"
  },
  {
    "label": "cef_size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_size_t(CEF_CALLBACK* get_maximum_size)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* get_height_for_width)(struct _cef_view_t* self, int width)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* invalidate_layout)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_visible)(struct _cef_view_t* self, int visible)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_visible)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_drawn)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_enabled)(struct _cef_view_t* self, int enabled)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_enabled)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_focusable)(struct _cef_view_t* self, int focusable)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_focusable)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_accessibility_focusable)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* request_focus)(struct _cef_view_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* set_background_color)(struct _cef_view_t* self, cef_color_t color)"
  },
  {
    "label": "cef_color_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_color_t(CEF_CALLBACK* get_background_color)(struct _cef_view_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* convert_point_to_screen)(struct _cef_view_t* self, cef_point_t* point)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* convert_point_from_screen)(struct _cef_view_t* self, cef_point_t* point)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* convert_point_to_window)(struct _cef_view_t* self, cef_point_t* point)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* convert_point_from_window)(struct _cef_view_t* self, cef_point_t* point)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* convert_point_to_view)(struct _cef_view_t* self, struct _cef_view_t* view, cef_point_t* point)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* convert_point_from_view)(struct _cef_view_t* self, struct _cef_view_t* view, cef_point_t* point)"
  }
]