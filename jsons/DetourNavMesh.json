[
  {
    "label": "dtMeshTile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtMeshTile"
  },
  {
    "label": "dtTileFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "dtTileFlags"
  },
  {
    "label": "dtStraightPathFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "dtStraightPathFlags"
  },
  {
    "label": "dtStraightPathOptions",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "dtStraightPathOptions"
  },
  {
    "label": "dtPolyTypes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "dtPolyTypes"
  },
  {
    "label": "dtPoly",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtPoly"
  },
  {
    "label": "dtPolyDetail",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtPolyDetail"
  },
  {
    "label": "dtLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtLink"
  },
  {
    "label": "dtBVNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtBVNode"
  },
  {
    "label": "dtOffMeshSegmentConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtOffMeshSegmentConnection"
  },
  {
    "label": "dtOffMeshConnection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtOffMeshConnection"
  },
  {
    "label": "dtCluster",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtCluster"
  },
  {
    "label": "dtClusterLink",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtClusterLink"
  },
  {
    "label": "dtMeshHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtMeshHeader"
  },
  {
    "label": "dtMeshTile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtMeshTile"
  },
  {
    "label": "dtNavMeshResParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtNavMeshResParams"
  },
  {
    "label": "dtNavMeshParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtNavMeshParams"
  },
  {
    "label": "dtNavMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNavMesh"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FConnectingPolyData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConnectingPolyData"
  },
  {
    "label": "ReadTilesHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ReadTilesHelper"
  },
  {
    "label": "dtMeshTile",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dtMeshTile"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (NAVMESH_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogDetour, Log, All)"
  },
  {
    "label": "dtStatsSetCustom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtStatsSetCustom(dtStatsPostAddTileFunc* addFunc, dtStatsPreRemoveTileFunc* removeFunc)"
  },
  {
    "label": "dtNavMesh()",
    "kind": "Method",
    "detail": "Function (NAVMESH_API)",
    "insertText": "dtNavMesh()"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "init(const dtNavMeshParams* params)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "init(unsigned char* data, const int dataSize, const int flags)"
  },
  {
    "label": "addTile()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "addTile(unsigned char* data, int dataSize, int flags, dtTileRef lastRef, dtTileRef* result)"
  },
  {
    "label": "removeTile()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "removeTile(dtTileRef ref, unsigned char** data, int* dataSize)"
  },
  {
    "label": "updateOffMeshConnectionByUserId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateOffMeshConnectionByUserId(unsigned long long int userId, unsigned char newArea, unsigned short newFlags)"
  },
  {
    "label": "updateOffMeshSegmentConnectionByUserId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "updateOffMeshSegmentConnectionByUserId(unsigned int userId, unsigned char newArea, unsigned short newFlags)"
  },
  {
    "label": "setPolyFlags()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "setPolyFlags(dtPolyRef ref, unsigned short flags)"
  },
  {
    "label": "setPolyArea()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "setPolyArea(dtPolyRef ref, unsigned char area)"
  },
  {
    "label": "restoreTileState()",
    "kind": "Method",
    "detail": "Function (dtStatus)",
    "insertText": "restoreTileState(dtMeshTile* tile, const unsigned char* data, const int maxDataSize)"
  },
  {
    "label": "decodePolyIdTile()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "decodePolyIdTile(ref)"
  },
  {
    "label": "decodePolyIdPoly()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "decodePolyIdPoly(ref)"
  },
  {
    "label": "applyWorldOffset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyWorldOffset(const dtReal* offset)"
  },
  {
    "label": "linkOffMeshHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "linkOffMeshHelper(dtMeshTile* tile0, unsigned int polyIdx0, dtMeshTile* tile1, unsigned int polyIdx1, unsigned char side, unsigned char edge)"
  },
  {
    "label": "applyAreaCostOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyAreaCostOrder(unsigned char* costOrder)"
  },
  {
    "label": "connectIntLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "connectIntLinks(dtMeshTile* tile)"
  },
  {
    "label": "baseOffMeshLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "baseOffMeshLinks(dtMeshTile* tile)"
  },
  {
    "label": "connectExtLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "connectExtLinks(dtMeshTile* tile, dtMeshTile* target, int side, bool updateCLinks)"
  },
  {
    "label": "connectExtOffMeshLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "connectExtOffMeshLinks(dtMeshTile* tile, dtMeshTile* target, int side, bool updateCLinks)"
  },
  {
    "label": "unconnectExtLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unconnectExtLinks(dtMeshTile* tile, dtMeshTile* target)"
  },
  {
    "label": "connectClusterLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "connectClusterLink(dtMeshTile* tile0, unsigned int cluster0,\n\t\t\t\t\t\t\tdtMeshTile* tile1, unsigned int cluster1,\n\t\t\t\t\t\t\tunsigned char flags, bool bCheckExisting = true)"
  },
  {
    "label": "unconnectClusterLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unconnectClusterLinks(dtMeshTile* tile, dtMeshTile* target)"
  },
  {
    "label": "dtFreeNavMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dtFreeNavMesh(dtNavMesh* navmesh)"
  }
]