[
  {
    "label": "SampleStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SampleStats"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_NUMERICS_SAMPLE_STATS_H_ # define RTC_BASE_NUMERICS_SAMPLE_STATS_H_ # include \" api / numerics / samples_stats_counter . h \" # include \" api / units / data_rate . h \" # include \" api / units / time_delta . h \" # include \" api / units / timestamp . h \" namespace webrtc { template<T> class SampleStats ; template<> class SampleStats<double> : public SamplesStatsCounter { public : double)",
    "insertText": "Max()"
  },
  {
    "label": "Count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Count()"
  },
  {
    "label": "AddSample()",
    "kind": "Method",
    "detail": "Function (} ; template<> class SampleStats<TimeDelta> { public : void)",
    "insertText": "AddSample(TimeDelta delta)"
  },
  {
    "label": "AddSampleMs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSampleMs(double delta_ms)"
  },
  {
    "label": "AddSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSamples(const SampleStats<TimeDelta>& other)"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "Mean()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "Mean()"
  },
  {
    "label": "Median()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "Median()"
  },
  {
    "label": "Quantile()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "Quantile(double quantile)"
  },
  {
    "label": "Min()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "Min()"
  },
  {
    "label": "Variance()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "Variance()"
  },
  {
    "label": "StandardDeviation()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "StandardDeviation()"
  },
  {
    "label": "AddSample()",
    "kind": "Method",
    "detail": "Function (private : SampleStats<double> stats_ ; } ; template<> class SampleStats<DataRate> { public : void)",
    "insertText": "AddSample(DataRate rate)"
  },
  {
    "label": "AddSampleBps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSampleBps(double rate_bps)"
  },
  {
    "label": "AddSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSamples(const SampleStats<DataRate>& other)"
  }
]