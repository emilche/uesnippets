[
  {
    "label": "CSymbol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CSymbol"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "VISIT_RESERVED_SYMBOL()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / Common / Containers / Set . h \" # include \" uLang / Common / Text / UTF8String . h \" # include \" uLang / Parser / ReservedSymbols . inl \" # include \" uLang / SourceProject / UploadedAtFNVersion . h \" # include \" uLang / SourceProject / VerseVersion . h \" namespace uLang { class CSymbol ; enum class EIsReservedSymbolResult : uint8_t { NotReserved,Reserved,ReservedFuture } ; # define)",
    "insertText": "VISIT_RESERVED_SYMBOL(Name, Symbol, Reservation, VerseVersion, FNVersion)"
  },
  {
    "label": "VERSE_ENUMERATE_RESERVED_SYMBOLS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VERSE_ENUMERATE_RESERVED_SYMBOLS(VISIT_RESERVED_SYMBOL)"
  },
  {
    "label": "GetReservedSymbol()",
    "kind": "Method",
    "detail": "Function (# undef VISIT_RESERVED_SYMBOL CUTF8StringView)",
    "insertText": "GetReservedSymbol(const EReservedSymbol Identifier)"
  },
  {
    "label": "GetReservationForSymbol()",
    "kind": "Method",
    "detail": "Function (EIsReservedSymbolResult)",
    "insertText": "GetReservationForSymbol(const EReservedSymbol Identifier, const uint32_t CurrentVerseVersion, const uint32_t CurrentUploadedAtFNVersion)"
  },
  {
    "label": "GetReservationForSymbol()",
    "kind": "Method",
    "detail": "Function (EIsReservedSymbolResult)",
    "insertText": "GetReservationForSymbol(const CSymbol& Identifier, const uint32_t CurrentVerseVersion, const uint32_t CurrentUploadedAtFNVersion)"
  },
  {
    "label": "GetReservedSymbols()",
    "kind": "Method",
    "detail": "Function (TSet<CUTF8String>)",
    "insertText": "GetReservedSymbols(const uint32_t CurrentVerseVersion, const uint32_t CurrentUploadedAtFNVersion)"
  }
]