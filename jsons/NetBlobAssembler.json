[
  {
    "label": "USequentialPartialNetBlobHandlerConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USequentialPartialNetBlobHandlerConfig"
  },
  {
    "label": "FNetBlobAssemblerInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetBlobAssemblerInitParams"
  },
  {
    "label": "FNetBlobAssembler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBlobAssembler"
  },
  {
    "label": "FNetBlobAssembler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / ReplicationSystem / NetBlob / PartialNetBlob . h \" # include \" Iris / Serialization / NetBitStreamWriter . h \" class USequentialPartialNetBlobHandlerConfig ; namespace UE::Net { struct FNetBlobAssemblerInitParams { const USequentialPartialNetBlobHandlerConfig* PartialNetBlobHandlerConfig = nullptr ; } ; class FNetBlobAssembler { public :)",
    "insertText": "FNetBlobAssembler()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FNetBlobAssemblerInitParams& InitParams)"
  },
  {
    "label": "AddPartialNetBlob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPartialNetBlob(FNetSerializationContext& Context, FNetRefHandle RefHandle, const TRefCountPtr<FPartialNetBlob>& PartialNetBlob)"
  },
  {
    "label": "IsReadyToAssemble()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyToAssemble()"
  }
]