[
  {
    "label": "AStaticMeshActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AStaticMeshActor"
  },
  {
    "label": "FEdMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdMode"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "UEditorEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEditorEngine"
  },
  {
    "label": "FCanDeleteAssetResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCanDeleteAssetResult"
  },
  {
    "label": "FCanLoadMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCanLoadMap"
  },
  {
    "label": "FEditorDelegates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditorDelegates"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UActorFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorFactory"
  },
  {
    "label": "UNREALED_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNREALED_API"
  },
  {
    "label": "ETAxis",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETAxis"
  },
  {
    "label": "FScopedObjectMovement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopedObjectMovement"
  },
  {
    "label": "FImportObjectParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportObjectParams"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FMergeStaticMeshParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMergeStaticMeshParams"
  },
  {
    "label": "FEditorModeTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorModeTools"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FCopyOptions",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCopyOptions"
  },
  {
    "label": "FMultiStepsImportObjectParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMultiStepsImportObjectParams"
  },
  {
    "label": "FLevelEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorViewportClient"
  },
  {
    "label": "GetEditorResourcesDir()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Templates / ScopedCallback . h \" # include \" Engine / Level . h \" # include \" AssetRegistry / AssetData . h \" # include \" Editor / EditorEngine . h \" # include \" Editor / UnrealEdTypes . h \" # include \" Engine / StaticMesh . h \" # include \" Subsystems / ImportSubsystem . h \" # define CAMERA_ZOOM_DAMPEN 2 0 0 . f class AStaticMeshActor ; class FEdMode ; class UFactory ; struct FGuid ; typedef FName FEditorModeID ; class UEditorEngine* GEditor ; # define MAX_CONTENT_FOLDER_NAME_LENGTH 3 2 # define MAX_ASSET_NAME_LENGTH 6 4 const FString)",
    "insertText": "GetEditorResourcesDir()"
  },
  {
    "label": "FCanDeleteAssetResult()",
    "kind": "Method",
    "detail": "Function (struct FCanDeleteAssetResult { public :)",
    "insertText": "FCanDeleteAssetResult() : bResult(true)"
  },
  {
    "label": "FCanDeleteAssetResult()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCanDeleteAssetResult(const FCanDeleteAssetResult&)"
  },
  {
    "label": "FCanDeleteAssetResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCanDeleteAssetResult(FCanDeleteAssetResult&&)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const bool InValue)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (bResult& = InValue ; } bool)",
    "insertText": "Get()"
  },
  {
    "label": "FCanLoadMap()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCanLoadMap(const FCanLoadMap&)"
  },
  {
    "label": "FCanLoadMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCanLoadMap(FCanLoadMap&&)"
  },
  {
    "label": "SetFalse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFalse()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnModeChanged, FEditorModeID)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FourParams(FOnEditorCameraMoved, const FVector&, const FRotator&, ELevelViewportType, int32)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnDollyPerspectiveCamera, const FVector&, int32)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnPreSaveWorldWithContext, class UWorld*, FObjectPreSaveContext)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnPostSaveWorldWithContext, class UWorld*, FObjectPostSaveContext)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPreSaveExternalActors, class UWorld*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPostSaveExternalActors, class UWorld*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPIEEvent, const bool)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnStandaloneLocalPlayEvent, const uint32)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNewAssetCreation, UFactory*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnPreDestructiveAssetAction, const TArray<UObject*>&, EDestructiveAssetActions, FResultMessage&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_FiveParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_FiveParams(FOnAssetPreImport, UFactory*, UClass*, UObject*, const FName&, const TCHAR*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnAssetPostImport, UFactory*, UObject*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnAssetReimport, UObject*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnFinishPickingBlueprintClass, UClass*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnNewActorsDropped, const TArray<UObject*>&, const TArray<AActor*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnNewActorsPlaced, UObject*, const TArray<AActor*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnEditorActorReplaced, AActor*, AActor*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnApplyObjectToActor, UObject*, AActor*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnGridSnappingChanged, bool, float)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnFocusViewportOnActors, const TArray<AActor*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnMapLoad, const FString& , FCanLoadMap&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnMapOpened, const FString& , bool)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnEditorModeTransitioned, FEdMode*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnEditorModeIDTransitioned, const FEditorModeID&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnAssetsCanDelete, const TArray<UObject*>& , FCanDeleteAssetResult&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPackageDeleted, UPackage*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnAddExtraObjectsToDelete, const TArray<UObject*>&, TSet<UObject*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnAssetsPreDelete, const TArray<UObject*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPreForceDeleteObjects, const TArray<UObject*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnAssetsDeleted, const TArray<UClass*>&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnAssetDragStarted, const TArray<FAssetData>&, class UActorFactory*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnAddLevelToWorld, ULevel*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnFitTextureToSurface, UWorld*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnEditCutActorsBegin)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnEditCutActorsEnd)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnEditCopyActorsBegin)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnEditCopyActorsEnd)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnEditPasteActorsBegin)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnEditPasteActorsEnd)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnDuplicateActorsBegin)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnDuplicateActorsEnd)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnDeleteActorsBegin)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnDeleteActorsEnd)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnViewAssetIdentifiers, TArray<FAssetIdentifier>)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnOpenReferenceViewer, const TArray<FAssetIdentifier>, const FReferenceViewerParams)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(bool , FOnRestartRequested, const FString&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnEditorBoot, double Duration)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnEditorInitialized, double Duration)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_ThreeParams(FOnExternalContentResolved, const FGuid&, const FAssetData& , const FAssetData&)"
  },
  {
    "label": "DECLARE_SCOPED_DELEGATE()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS FOnAddExtraObjectsToDelete OnAddExtraObjectsToDelete ; FOnAssetsPreDelete OnAssetsPreDelete ; FOnAssetsDeleted OnAssetsDeleted ; FOnAssetDragStarted OnAssetDragStarted ; FOnPreForceDeleteObjects OnPreForceDeleteObjects ; FSimpleMulticastDelegate OnEnableGestureRecognizerChanged ; FSimpleMulticastDelegate OnActionAxisMappingsChanged ; FOnAddLevelToWorld OnAddLevelToWorld ; FOnEditCutActorsBegin OnEditCutActorsBegin ; FOnEditCutActorsEnd OnEditCutActorsEnd ; FOnEditCopyActorsBegin OnEditCopyActorsBegin ; FOnEditCopyActorsEnd OnEditCopyActorsEnd ; FOnEditPasteActorsBegin OnEditPasteActorsBegin ; FOnEditPasteActorsEnd OnEditPasteActorsEnd ; FOnDuplicateActorsBegin OnDuplicateActorsBegin ; FOnDuplicateActorsEnd OnDuplicateActorsEnd ; FOnDeleteActorsBegin OnDeleteActorsBegin ; FOnDeleteActorsEnd OnDeleteActorsEnd ; FOnOpenReferenceViewer OnOpenReferenceViewer ; FOnViewAssetIdentifiers OnOpenSizeMap ; FOnViewAssetIdentifiers OnOpenAssetAudit ; FOnViewAssetIdentifiers OnEditAssetIdentifiers ; FOnRestartRequested OnRestartRequested ; FOnEditorBoot OnEditorBoot ; FOnEditorInitialized OnEditorInitialized ; FOnExternalContentResolved OnExternalContentResolved ; } ; # define)",
    "insertText": "DECLARE_SCOPED_DELEGATE(CallbackName, TriggerFunc)"
  },
  {
    "label": "FireCallback()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ void)",
    "insertText": "FireCallback()"
  },
  {
    "label": "DECLARE_SCOPED_DELEGATE()",
    "kind": "Method",
    "detail": "Function (TriggerFunc ; } \\ } ; \\ \\ typedef TScopedCallback<FScoped # # CallbackName # # Impl> FScoped # # CallbackName ;)",
    "insertText": "DECLARE_SCOPED_DELEGATE(ActorPropertiesChange, FEditorDelegates::ActorPropertiesChange.Broadcast())"
  },
  {
    "label": "DECLARE_SCOPED_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_SCOPED_DELEGATE(RefreshAllBrowsers, FEditorDelegates::RefreshAllBrowsers.Broadcast())"
  },
  {
    "label": "FScopedObjectMovement()",
    "kind": "Method",
    "detail": "Function (# undef DECLARE_SCOPED_DELEGATE enum ETAxis { TAXIS_X = 0,TAXIS_Y = 1,TAXIS_Z = 2,TAXIS_WALLS = 3,TAXIS_AUTO = 4,} ; namespace MapChangeEventFlags { typedef uint32 Type ; const Type Default = 0 ; const Type NewMap = 1<<0 ; const Type MapRebuild = 1<<1 ; const Type WorldTornDown = 1<<2 ; } class FScopedObjectMovement { public :)",
    "insertText": "FScopedObjectMovement(UObject* InObject ) : Object( InObject)"
  },
  {
    "label": "BroadcastBeginObjectMovement()",
    "kind": "Method",
    "detail": "Function (GEditor ->)",
    "insertText": "BroadcastBeginObjectMovement(*Object)"
  },
  {
    "label": "FScopedObjectMovement()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FScopedObjectMovement()"
  },
  {
    "label": "BroadcastEndObjectMovement()",
    "kind": "Method",
    "detail": "Function (GEditor ->)",
    "insertText": "BroadcastEndObjectMovement(*Object)"
  },
  {
    "label": "ImportObjectProperties()",
    "kind": "Method",
    "detail": "Function (} } private : TWeakObjectPtr<UObject> Object ; } ; struct FImportObjectParams { uint8* DestData = nullptr ; const TCHAR* SourceText = nullptr ; UStruct* ObjectStruct = nullptr ; UObject* SubobjectRoot = nullptr ; UObject* SubobjectOuter = nullptr ; FFeedbackContext* Warn = nullptr ; int32 Depth = 0 ; int32 LineNumber = INDEX_NONE ; FObjectInstancingGraph* InInstanceGraph = nullptr ; const TMap<FSoftObjectPath,UObject*>* ObjectRemapper = nullptr ; bool bShouldCallEditChange = true ; } ; const TCHAR*)",
    "insertText": "ImportObjectProperties(FImportObjectParams& InParams)"
  },
  {
    "label": "ImportObjectProperties()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ImportObjectProperties(uint8* DestData, const TCHAR* SourceText, UStruct* ObjectStruct, UObject* SubobjectRoot, UObject* SubobjectOuter, FFeedbackContext* Warn, int32 Depth, int32 LineNumber = INDEX_NONE, FObjectInstancingGraph* InstanceGraph = nullptr, const TMap<FSoftObjectPath, UObject*>* ObjectRemapper = nullptr)"
  },
  {
    "label": "CreateStaticMesh()",
    "kind": "Method",
    "detail": "Function (bool GBuildStaticMeshCollision ; UStaticMesh*)",
    "insertText": "CreateStaticMesh(struct FMeshDescription& RawMesh,TArray<FStaticMaterial>& Materials,UObject* Outer,FName Name)"
  },
  {
    "label": "FMergeStaticMeshParams()",
    "kind": "Method",
    "detail": "Function (struct FMergeStaticMeshParams {)",
    "insertText": "FMergeStaticMeshParams()"
  },
  {
    "label": "MergeStaticMesh()",
    "kind": "Method",
    "detail": "Function (FVector Offset ; FRotator Rotation ; float ScaleFactor ; FVector ScaleFactor3D ; bool bDeferBuild ; int32 OverrideElement ; bool bUseUVChannelRemapping ; int32 UVChannelRemap [ 8 ] ; bool bUseUVScaleBias ; FVector4 UVScaleBias [ 8 ] ; } ; void)",
    "insertText": "MergeStaticMesh(UStaticMesh* DestMesh, UStaticMesh* SourceMesh, const FMergeStaticMeshParams& Params)"
  },
  {
    "label": "GetBrushMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBrushMesh(ABrush* Brush, UModel* Model, struct FMeshDescription& OutMesh, TArray<FStaticMaterial>& OutMaterials)"
  },
  {
    "label": "CreateStaticMeshFromBrush()",
    "kind": "Method",
    "detail": "Function (UStaticMesh*)",
    "insertText": "CreateStaticMeshFromBrush(UObject* Outer,FName Name,ABrush* Brush,UModel* Model)"
  },
  {
    "label": "CreateModelFromStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateModelFromStaticMesh(UModel* Model,AStaticMeshActor* StaticMeshActor)"
  },
  {
    "label": "SetPlayInEditorWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "SetPlayInEditorWorld(UWorld* PlayInEditorWorld)"
  },
  {
    "label": "RestoreEditorWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreEditorWorld(UWorld* EditorWorld)"
  },
  {
    "label": "GetFVECTOR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFVECTOR(const TCHAR* Stream, const TCHAR* Match, FVector& Value)"
  },
  {
    "label": "GetFVECTOR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFVECTOR(const TCHAR* Stream, FVector& Value)"
  },
  {
    "label": "GetFVECTORSpaceDelimited()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetFVECTORSpaceDelimited(const TCHAR* Stream, FVector& Value)"
  },
  {
    "label": "GetFROTATOR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFROTATOR(const TCHAR* Stream, const TCHAR* Match, FRotator& Rotation, int32 ScaleFactor)"
  },
  {
    "label": "GetFROTATOR()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFROTATOR(const TCHAR* Stream, FRotator& Rotation, int ScaleFactor)"
  },
  {
    "label": "GetFROTATORSpaceDelimited()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetFROTATORSpaceDelimited(const TCHAR* Stream, FRotator& Rotation, int32 ScaleFactor)"
  },
  {
    "label": "GetBEGIN()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetBEGIN(const TCHAR** Stream, const TCHAR* Match)"
  },
  {
    "label": "GetEND()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEND(const TCHAR** Stream, const TCHAR* Match)"
  },
  {
    "label": "GetREMOVE()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetREMOVE(const TCHAR** Stream, const TCHAR* Match)"
  },
  {
    "label": "GetSUBSTRING()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSUBSTRING(const TCHAR* Stream, const TCHAR* Match, TCHAR* Value, int32 MaxLen)"
  },
  {
    "label": "SetFVECTOR()",
    "kind": "Method",
    "detail": "Function (TCHAR*)",
    "insertText": "SetFVECTOR(TCHAR* Dest, const FVector* Value)"
  },
  {
    "label": "IsUniqueObjectName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUniqueObjectName(const FName& InName, UObject* Outer, FText* InReason = nullptr)"
  },
  {
    "label": "IsGloballyUniqueObjectName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsGloballyUniqueObjectName(const FName& InName, FText* InReason = nullptr)"
  },
  {
    "label": "IsUniqueObjectName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUniqueObjectName(const FName& InName, UObject* Outer, FText& InReason)"
  },
  {
    "label": "GLevelEditorModeTools()",
    "kind": "Method",
    "detail": "Function (class FEditorModeTools&)",
    "insertText": "GLevelEditorModeTools()"
  },
  {
    "label": "GetEditorWorldCounterpartActor()",
    "kind": "Method",
    "detail": "Function (namespace EditorUtilities { AActor*)",
    "insertText": "GetEditorWorldCounterpartActor(AActor* Actor)"
  },
  {
    "label": "GetSimWorldCounterpartActor()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetSimWorldCounterpartActor(AActor* Actor)"
  },
  {
    "label": "FindMatchingComponentInstance()",
    "kind": "Method",
    "detail": "Function (UActorComponent*)",
    "insertText": "FindMatchingComponentInstance(UActorComponent* SourceComponent, AActor* TargetActor)"
  },
  {
    "label": "FCopyOptions()",
    "kind": "Method",
    "detail": "Function (namespace ECopyOptions { enum Type { Default = 0,PreviewOnly = 1<<0,CallPostEditChangeProperty = 1<<1,CallPostEditMove = 1<<2,OnlyCopyEditOrInterpProperties = 1<<3,PropagateChangesToArchetypeInstances = 1<<4,FilterBlueprintReadOnly = 1<<5,SkipInstanceOnlyProperties = 1<<6,} ; } struct FCopyOptions {)",
    "insertText": "FCopyOptions(const ECopyOptions::Type InFlags) : Flags(InFlags)"
  },
  {
    "label": "CanCopyProperty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanCopyProperty(FProperty& Property, UObject& Object)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} ECopyOptions::Type Flags ; TFunction<)",
    "insertText": "bool(FProperty&, UObject&)"
  },
  {
    "label": "CopySingleProperty()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "CopySingleProperty(const UObject* const InSourceObject, UObject* const InTargetObject, FProperty* const InProperty)"
  },
  {
    "label": "CopyActorProperties()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CopyActorProperties(AActor* SourceActor, AActor* TargetActor, const FCopyOptions& Options = FCopyOptions(ECopyOptions::Default))"
  },
  {
    "label": "ImportCreateObjectsStep()",
    "kind": "Method",
    "detail": "Function (struct FMultiStepsImportObjectParams { uint8* DestData = nullptr ; FStringView SourceText ; UStruct* ObjectStruct = nullptr ; UObject* SubobjectRoot = nullptr ; UObject* SubobjectOuter = nullptr ; FFeedbackContext* Warn = nullptr ; int32 Depth = 0 ; int32 LineNumber = INDEX_NONE ; FObjectInstancingGraph* InInstanceGraph = nullptr ; TMap<FSoftObjectPath,UObject*>* ObjectRemapper = nullptr ; TSet<FProperty*>* PropertiesToSkip = nullptr ; bool bShouldCallEditChange = false ; } ; const TCHAR*)",
    "insertText": "ImportCreateObjectsStep(FMultiStepsImportObjectParams& InParams)"
  },
  {
    "label": "ImportObjectsPropertiesStep()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "ImportObjectsPropertiesStep(FMultiStepsImportObjectParams& InParams)"
  }
]