[
  {
    "label": "UsesImplicitCollisionType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GeometryCollection / GeometryCollectionObject . h \" namespace GeometryCollection { namespace SizeSpecific { bool)",
    "insertText": "UsesImplicitCollisionType(const TArray<FGeometryCollectionSizeSpecificData>& SizeSpecificData, EImplicitTypeEnum ImplicitType)"
  },
  {
    "label": "SetImplicitCollisionType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetImplicitCollisionType(TArray<FGeometryCollectionSizeSpecificData>& SizeSpecificData, EImplicitTypeEnum ImplicitTypeTo, EImplicitTypeEnum ImplicitTypeFrom = EImplicitTypeEnum::Chaos_Implicit_None)"
  }
]