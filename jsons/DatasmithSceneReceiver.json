[
  {
    "label": "IDatasmithElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithElement"
  },
  {
    "label": "IDatasmithScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDatasmithScene"
  },
  {
    "label": "FElementSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FElementSnapshot"
  },
  {
    "label": "FSceneSnapshot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneSnapshot"
  },
  {
    "label": "DATASMITHCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHCORE_API"
  },
  {
    "label": "ISceneChangeListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneChangeListener"
  },
  {
    "label": "FSceneState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneState"
  },
  {
    "label": "FDatasmithElementPointers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDatasmithElementPointers"
  },
  {
    "label": "FFinalizableNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFinalizableNode"
  },
  {
    "label": "FSceneHashTable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneHashTable"
  },
  {
    "label": "OnOpenDelta()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" Containers / SparseArray . h \" # include \" DirectLinkCommon . h \" # include \" DirectLinkDeltaConsumer . h \" # include \" DirectLinkSceneGraphNode . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" class IDatasmithElement ; class IDatasmithScene ; namespace DirectLink { class FElementSnapshot ; } namespace DirectLink { class FSceneSnapshot ; } class FDatasmithSceneReceiver : public DirectLink::ISceneReceiver { public : class ISceneChangeListener { public : void)",
    "insertText": "OnOpenDelta()"
  },
  {
    "label": "OnNewScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewScene(const DirectLink::FSceneIdentifier& SceneId)"
  },
  {
    "label": "OnAddElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddElement(DirectLink::FSceneGraphId, TSharedPtr<IDatasmithElement> Element)"
  },
  {
    "label": "OnChangedElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChangedElement(DirectLink::FSceneGraphId, TSharedPtr<IDatasmithElement> Element)"
  },
  {
    "label": "OnRemovedElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemovedElement(DirectLink::FSceneGraphId ElementId)"
  },
  {
    "label": "OnCloseDelta()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCloseDelta()"
  },
  {
    "label": "FDatasmithSceneReceiver()",
    "kind": "Method",
    "detail": "Function (} ; public :)",
    "insertText": "FDatasmithSceneReceiver()"
  },
  {
    "label": "SetChangeListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetChangeListener(ISceneChangeListener* Listener)"
  },
  {
    "label": "GetScene()",
    "kind": "Method",
    "detail": "Function (ChangeListener = Listener ; } TSharedPtr<IDatasmithScene>)",
    "insertText": "GetScene()"
  },
  {
    "label": "FinalSnapshot()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "FinalSnapshot(const DirectLink::FSceneSnapshot& SceneSnapshot)"
  },
  {
    "label": "ParseSnapshot()",
    "kind": "Method",
    "detail": "Function (struct FSceneState ; TUniquePtr<FSceneState>)",
    "insertText": "ParseSnapshot(const DirectLink::FSceneSnapshot& SceneSnapshot)"
  },
  {
    "label": "AsSharedPtr()",
    "kind": "Method",
    "detail": "Function (private : struct FDatasmithElementPointers : public DirectLink::IReferenceResolutionProvider { TSharedPtr<DirectLink::ISceneGraphNode>)",
    "insertText": "AsSharedPtr(DirectLink::FSceneGraphId NodeId)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Remove(DirectLink::FSceneGraphId NodeId)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (ElementsSharedPtrs .)",
    "insertText": "Remove(NodeId)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Add(DirectLink::FSceneGraphId Id, TSharedPtr<IDatasmithElement> Element)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ElementsSharedPtrs .)",
    "insertText": "Add(Id, Element)"
  },
  {
    "label": "FromSceneSnapshot()",
    "kind": "Method",
    "detail": "Function (} TMap<DirectLink::FSceneGraphId,TSharedPtr<IDatasmithElement>> ElementsSharedPtrs ; } ; struct FFinalizableNode { TSharedPtr<IDatasmithElement> Element ; const DirectLink::FElementSnapshot* Snapshot ; } ; ISceneChangeListener* ChangeListener = nullptr ; struct FSceneHashTable { TMap<DirectLink::FSceneGraphId,DirectLink::FElementHash> ElementHashes ; FSceneHashTable)",
    "insertText": "FromSceneSnapshot(const DirectLink::FSceneSnapshot& SceneSnapshot)"
  }
]