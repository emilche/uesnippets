[
  {
    "label": "FLatentActionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatentActionInfo"
  },
  {
    "label": "FTakeScreenshotAfterTimeLatentAction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTakeScreenshotAfterTimeLatentAction"
  },
  {
    "label": "FWaitForScreenshotComparisonLatentAction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWaitForScreenshotComparisonLatentAction"
  },
  {
    "label": "FTakeScreenshotAfterTimeLatentAction()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / WeakObjectPtr . h \" # include \" AutomationScreenshotOptions . h \" # include \" LatentActions . h \" struct FLatentActionInfo ; class FTakeScreenshotAfterTimeLatentAction : public FPendingLatentAction { public :)",
    "insertText": "FTakeScreenshotAfterTimeLatentAction(const FLatentActionInfo& LatentInfo, const FString& InScreenshotName, const FString& InNotes, FAutomationScreenshotOptions InOptions)"
  },
  {
    "label": "FTakeScreenshotAfterTimeLatentAction()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTakeScreenshotAfterTimeLatentAction()"
  },
  {
    "label": "UpdateOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOperation(FLatentResponse& Response)"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FString)",
    "insertText": "GetDescription()"
  },
  {
    "label": "OnScreenshotTakenAndCompared()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "OnScreenshotTakenAndCompared()"
  },
  {
    "label": "FWaitForScreenshotComparisonLatentAction()",
    "kind": "Method",
    "detail": "Function (private : FName ExecutionFunction ; int32 OutputLink ; FWeakObjectPtr CallbackTarget ; FString ScreenshotName ; FString Notes ; float SecondsRemaining ; bool FinishedLoading ; bool IssuedScreenshotCapture ; bool TakenScreenshot ; FAutomationScreenshotOptions Options ; } ; class FWaitForScreenshotComparisonLatentAction : public FPendingLatentAction { public :)",
    "insertText": "FWaitForScreenshotComparisonLatentAction(const FLatentActionInfo& LatentInfo)"
  },
  {
    "label": "FWaitForScreenshotComparisonLatentAction()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FWaitForScreenshotComparisonLatentAction()"
  }
]