[
  {
    "label": "RtpSenderEgress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpSenderEgress"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "NonPacedPacketSender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NonPacedPacketSender"
  },
  {
    "label": "NonPacedPacketSender()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NonPacedPacketSender(RtpSenderEgress* sender, PacketSequencer* sequencer)"
  },
  {
    "label": "PrepareForSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForSend(RtpPacketToSend* packet)"
  },
  {
    "label": "RTC_LOCKS_EXCLUDED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_LOCKS_EXCLUDED(lock_)"
  },
  {
    "label": "RTC_LOCKS_EXCLUDED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_LOCKS_EXCLUDED(lock_)"
  },
  {
    "label": "RTC_LOCKS_EXCLUDED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_LOCKS_EXCLUDED(lock_)"
  },
  {
    "label": "RTC_LOCKS_EXCLUDED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_LOCKS_EXCLUDED(lock_)"
  },
  {
    "label": "SetFecProtectionParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFecProtectionParameters(const FecProtectionParams& delta_params,\n                                  const FecProtectionParams& key_params)"
  },
  {
    "label": "FetchFecPackets()",
    "kind": "Method",
    "detail": "Function (std::vector<std::unique_ptr<RtpPacketToSend>>)",
    "insertText": "FetchFecPackets()"
  },
  {
    "label": "OnAbortedRetransmissions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAbortedRetransmissions(\n      rtc::ArrayView<const uint16_t> sequence_numbers)"
  },
  {
    "label": "RTC_EXCLUSIVE_LOCKS_REQUIRED()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "RTC_EXCLUSIVE_LOCKS_REQUIRED(lock_)"
  },
  {
    "label": "AddPacketToTransportFeedback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPacketToTransportFeedback(uint16_t packet_id,\n                                    const RtpPacketToSend& packet,\n                                    const PacedPacketInfo& pacing_info)"
  },
  {
    "label": "UpdateDelayStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDelayStatistics(int64_t capture_time_ms,\n                             int64_t now_ms,\n                             uint32_t ssrc)"
  },
  {
    "label": "UpdateOnSendPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOnSendPacket(int packet_id,\n                          int64_t capture_time_ms,\n                          uint32_t ssrc)"
  },
  {
    "label": "SendPacketToNetwork()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendPacketToNetwork(const RtpPacketToSend& packet,\n                           const PacketOptions& options,\n                           const PacedPacketInfo& pacing_info)"
  },
  {
    "label": "UpdateRtpStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateRtpStats(int64_t now_ms,\n                      uint32_t packet_ssrc,\n                      RtpPacketMediaType packet_type,\n                      RtpPacketCounter counter,\n                      size_t packet_size)"
  },
  {
    "label": "BweTestLoggingPlot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BweTestLoggingPlot(int64_t now_ms, uint32_t packet_ssrc)"
  },
  {
    "label": "PeriodicUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PeriodicUpdate()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (fec_generator_)",
    "insertText": "RTC_GUARDED_BY(pacer_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_sent_seq_)",
    "insertText": "RTC_GUARDED_BY(pacer_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (last_sent_rtx_seq_)",
    "insertText": "RTC_GUARDED_BY(pacer_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (media_has_been_sent_)",
    "insertText": "RTC_GUARDED_BY(pacer_checker_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (force_part_of_allocation_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (timestamp_offset_)",
    "insertText": "RTC_GUARDED_BY(worker_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (send_delays_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (max_delay_it_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (sum_delays_ms_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtp_stats_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtx_rtp_stats_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (send_rates_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (pending_fec_params_)",
    "insertText": "RTC_GUARDED_BY(lock_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (rtp_sequence_number_map_)",
    "insertText": "RTC_GUARDED_BY(worker_queue_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (update_task_)",
    "insertText": "RTC_GUARDED_BY(worker_queue_)"
  }
]