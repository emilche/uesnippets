[
  {
    "label": "IPoseWatchManagerTreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPoseWatchManagerTreeItem"
  },
  {
    "label": "IPoseWatchManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPoseWatchManager"
  },
  {
    "label": "EPoseWatchTreeItemType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPoseWatchTreeItemType"
  },
  {
    "label": "PERSONA_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PERSONA_API"
  },
  {
    "label": "FPoseWatchManagerHierarchyChangedData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPoseWatchManagerHierarchyChangedData"
  },
  {
    "label": "GetForegroundColor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Paths . h \" # include \" UObject / ObjectKey . h \" # include \" Templates / MaxSizeof . h \" struct IPoseWatchManagerTreeItem ; class IPoseWatchManager ; typedef TSharedPtr<IPoseWatchManagerTreeItem> FPoseWatchManagerTreeItemPtr ; typedef TSharedRef<IPoseWatchManagerTreeItem> FPoseWatchManagerTreeItemRef ; typedef TMap<FObjectKey,FPoseWatchManagerTreeItemPtr> FPoseWatchManagerTreeItemMap ; enum EPoseWatchTreeItemType { PoseWatch,Folder,Element } ; struct FPoseWatchManagerCommonLabelData { TWeakPtr<IPoseWatchManager> WeakPoseWatchManager ; const FLinearColor DisabledColor ; TOptional<FLinearColor>)",
    "insertText": "GetForegroundColor(const IPoseWatchManagerTreeItem& TreeItem)"
  },
  {
    "label": "CanExecuteRenameRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExecuteRenameRequest(const IPoseWatchManagerTreeItem& Item)"
  }
]