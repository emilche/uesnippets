[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FDataLayerMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerMode"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "FWorldPartitionActorDescInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDescInstance"
  },
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "FSceneOutlinerTreeItemID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSceneOutlinerTreeItemID"
  },
  {
    "label": "FDataLayerHierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerHierarchy"
  },
  {
    "label": "FDataLayerHierarchy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" DataLayer / DataLayerAction . h \" # include \" ISceneOutlinerHierarchy . h \" # include \" ISceneOutlinerTreeItem . h \" # include \" SceneOutlinerFwd . h \" # include \" Templates / UniquePtr . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class AActor ; class FDataLayerMode ; class FWorldPartitionActorDesc ; class FWorldPartitionActorDescInstance ; class UDataLayerInstance ; class ULevel ; class UWorld ; class UWorldPartition ; struct FSceneOutlinerTreeItemID ; class FDataLayerHierarchy : public ISceneOutlinerHierarchy { public : ~)",
    "insertText": "FDataLayerHierarchy()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FDataLayerHierarchy>)",
    "insertText": "Create(FDataLayerMode* Mode, const TWeakObjectPtr<UWorld>& World)"
  },
  {
    "label": "CreateItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateItems(TArray<FSceneOutlinerTreeItemPtr>& OutItems)"
  },
  {
    "label": "CreateChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateChildren(const FSceneOutlinerTreeItemPtr& Item, TArray<FSceneOutlinerTreeItemPtr>& OutChildren)"
  },
  {
    "label": "FindOrCreateParentItem()",
    "kind": "Method",
    "detail": "Function (} FSceneOutlinerTreeItemPtr)",
    "insertText": "FindOrCreateParentItem(const ISceneOutlinerTreeItem& Item, const TMap<FSceneOutlinerTreeItemID, FSceneOutlinerTreeItemPtr>& Items, bool bCreate = false)"
  },
  {
    "label": "SetShowEditorDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowEditorDataLayers(bool bInShowEditorDataLayers)"
  },
  {
    "label": "SetShowRuntimeDataLayers()",
    "kind": "Method",
    "detail": "Function (bShowEditorDataLayers = bInShowEditorDataLayers ; } void)",
    "insertText": "SetShowRuntimeDataLayers(bool bInShowRuntimeDataLayers)"
  },
  {
    "label": "SetShowDataLayerActors()",
    "kind": "Method",
    "detail": "Function (bShowRuntimeDataLayers = bInShowRuntimeDataLayers ; } void)",
    "insertText": "SetShowDataLayerActors(bool bInShowDataLayerActors)"
  },
  {
    "label": "SetShowUnloadedActors()",
    "kind": "Method",
    "detail": "Function (bShowDataLayerActors = bInShowDataLayerActors ; } void)",
    "insertText": "SetShowUnloadedActors(bool bInShowUnloadedActors)"
  },
  {
    "label": "SetShowOnlySelectedActors()",
    "kind": "Method",
    "detail": "Function (bShowUnloadedActors = bInShowUnloadedActors ; } void)",
    "insertText": "SetShowOnlySelectedActors(bool bInbShowOnlySelectedActors)"
  },
  {
    "label": "SetHighlightSelectedDataLayers()",
    "kind": "Method",
    "detail": "Function (bShowOnlySelectedActors = bInbShowOnlySelectedActors ; } void)",
    "insertText": "SetHighlightSelectedDataLayers(bool bInHighlightSelectedDataLayers)"
  },
  {
    "label": "SetShowLevelInstanceContent()",
    "kind": "Method",
    "detail": "Function (bHighlightSelectedDataLayers = bInHighlightSelectedDataLayers ; } void)",
    "insertText": "SetShowLevelInstanceContent(bool bInShowLevelInstanceContent)"
  },
  {
    "label": "GetShowLevelInstanceContent()",
    "kind": "Method",
    "detail": "Function (bShowLevelInstanceContent = bInShowLevelInstanceContent ; } bool)",
    "insertText": "GetShowLevelInstanceContent()"
  },
  {
    "label": "FDataLayerHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDataLayerHierarchy(FDataLayerMode* Mode, const TWeakObjectPtr<UWorld>& Worlds)"
  },
  {
    "label": "FDataLayerHierarchy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDataLayerHierarchy(const FDataLayerHierarchy&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FDataLayerHierarchy&)",
    "insertText": "operator(const FDataLayerHierarchy&)"
  },
  {
    "label": "OnWorldPartitionCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionCreated(UWorld* InWorld)"
  },
  {
    "label": "OnLevelActorsAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorsAdded(const TArray<AActor*>& InActors)"
  },
  {
    "label": "OnLevelActorsRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorsRemoved(const TArray<AActor*>& InActors)"
  },
  {
    "label": "OnLevelActorAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorAdded(AActor* InActor)"
  },
  {
    "label": "OnLevelActorDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorDeleted(AActor* InActor)"
  },
  {
    "label": "OnLevelActorListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelActorListChanged()"
  },
  {
    "label": "OnWorldPartitionInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionInitialized(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "OnWorldPartitionUninitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldPartitionUninitialized(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "OnLevelAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelAdded(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "OnLevelRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLevelRemoved(ULevel* InLevel, UWorld* InWorld)"
  },
  {
    "label": "OnLoadedActorAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadedActorAdded(AActor& InActor)"
  },
  {
    "label": "OnLoadedActorRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLoadedActorRemoved(AActor& InActor)"
  },
  {
    "label": "OnActorDescInstanceAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorDescInstanceAdded(FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "OnActorDescInstanceRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorDescInstanceRemoved(FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "OnActorDataLayersChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorDataLayersChanged(const TWeakObjectPtr<AActor>& InActor)"
  },
  {
    "label": "OnDataLayerChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataLayerChanged(const EDataLayerAction Action, const TWeakObjectPtr<const UDataLayerInstance>& ChangedDataLayer, const FName& ChangedProperty)"
  },
  {
    "label": "FullRefreshEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullRefreshEvent()"
  },
  {
    "label": "CreateDataLayerTreeItem()",
    "kind": "Method",
    "detail": "Function (FSceneOutlinerTreeItemPtr)",
    "insertText": "CreateDataLayerTreeItem(UDataLayerInstance* InDataLayer, bool bInForce = false)"
  },
  {
    "label": "IsDataLayerPartOfSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDataLayerPartOfSelection(const UDataLayerInstance* DataLayer)"
  }
]