[
  {
    "label": "LLVMContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LLVMContext"
  },
  {
    "label": "DiagnosticInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DiagnosticInfo"
  },
  {
    "label": "GlobalValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalValue"
  },
  {
    "label": "Mangler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Mangler"
  },
  {
    "label": "MemoryBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryBuffer"
  },
  {
    "label": "TargetLibraryInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLibraryInfo"
  },
  {
    "label": "TargetMachine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetMachine"
  },
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "raw_pwrite_stream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_pwrite_stream"
  },
  {
    "label": "LTOCodeGenerator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LTOCodeGenerator"
  },
  {
    "label": "LTOModule",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LTOModule"
  },
  {
    "label": "getVersionString()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_LTO_LTOCODEGENERATOR_H # define LLVM_LTO_LTOCODEGENERATOR_H # include \" llvm - c / lto . h \" # include \" llvm / ADT / ArrayRef . h \" # include \" llvm / ADT / SmallPtrSet . h \" # include \" llvm / ADT / StringMap . h \" # include \" llvm / Linker / Linker . h \" # include \" llvm / Target / TargetOptions . h \" # include<string> # include<vector> namespace llvm { class LLVMContext ; class DiagnosticInfo ; class GlobalValue ; class Mangler ; class MemoryBuffer ; class TargetLibraryInfo ; class TargetMachine ; class raw_ostream ; class raw_pwrite_stream ; struct LTOCodeGenerator { const char*)",
    "insertText": "getVersionString()"
  },
  {
    "label": "LTOCodeGenerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LTOCodeGenerator()"
  },
  {
    "label": "LTOCodeGenerator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LTOCodeGenerator(std::unique_ptr<LLVMContext> Context)"
  },
  {
    "label": "addModule()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "addModule(struct LTOModule *)"
  },
  {
    "label": "setModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setModule(struct LTOModule *)"
  },
  {
    "label": "setTargetOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTargetOptions(TargetOptions options)"
  },
  {
    "label": "setDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDebugInfo(lto_debug_model)"
  },
  {
    "label": "setCodePICModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCodePICModel(lto_codegen_model)"
  },
  {
    "label": "setCpu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCpu(const char *mCpu)"
  },
  {
    "label": "setAttr()",
    "kind": "Method",
    "detail": "Function (MCpu = mCpu ; } void)",
    "insertText": "setAttr(const char *mAttr)"
  },
  {
    "label": "setOptLevel()",
    "kind": "Method",
    "detail": "Function (MAttr = mAttr ; } void)",
    "insertText": "setOptLevel(unsigned optLevel)"
  },
  {
    "label": "setShouldInternalize()",
    "kind": "Method",
    "detail": "Function (OptLevel = optLevel ; } void)",
    "insertText": "setShouldInternalize(bool Value)"
  },
  {
    "label": "setShouldEmbedUselists()",
    "kind": "Method",
    "detail": "Function (ShouldInternalize = Value ; } void)",
    "insertText": "setShouldEmbedUselists(bool Value)"
  },
  {
    "label": "addMustPreserveSymbol()",
    "kind": "Method",
    "detail": "Function (ShouldEmbedUselists = Value ; } void)",
    "insertText": "addMustPreserveSymbol(StringRef sym)"
  },
  {
    "label": "setCodeGenDebugOptions()",
    "kind": "Method",
    "detail": "Function (MustPreserveSymbols [ sym ] = 1 ; } void)",
    "insertText": "setCodeGenDebugOptions(const char *opts)"
  },
  {
    "label": "parseCodeGenDebugOptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "parseCodeGenDebugOptions()"
  },
  {
    "label": "writeMergedModules()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "writeMergedModules(const char *path, std::string &errMsg)"
  },
  {
    "label": "compile_to_file()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "compile_to_file(const char **name, bool disableInline, bool disableGVNLoadPRE, bool disableVectorization, std::string &errMsg)"
  },
  {
    "label": "compile()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<MemoryBuffer>)",
    "insertText": "compile(bool disableInline, bool disableGVNLoadPRE, bool disableVectorization, std::string &errMsg)"
  },
  {
    "label": "optimize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "optimize(bool disableInline, bool disableGVNLoadPRE, bool disableVectorization, std::string &errMsg)"
  },
  {
    "label": "compileOptimized()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<MemoryBuffer>)",
    "insertText": "compileOptimized(std::string &errMsg)"
  },
  {
    "label": "setDiagnosticHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDiagnosticHandler(lto_diagnostic_handler_t, void *)"
  },
  {
    "label": "getContext()",
    "kind": "Method",
    "detail": "Function (LLVMContext&)",
    "insertText": "getContext()"
  },
  {
    "label": "compileOptimized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "compileOptimized(raw_pwrite_stream &out, std::string &errMsg)"
  },
  {
    "label": "compileOptimizedToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "compileOptimizedToFile(const char **name, std::string &errMsg)"
  },
  {
    "label": "applyScopeRestrictions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyScopeRestrictions()"
  },
  {
    "label": "applyRestriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "applyRestriction(GlobalValue &GV, ArrayRef<StringRef> Libcalls, std::vector<const char *> &MustPreserveList, SmallPtrSetImpl<GlobalValue *> &AsmUsed, Mangler &Mangler)"
  },
  {
    "label": "determineTarget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "determineTarget(std::string &errMsg)"
  },
  {
    "label": "DiagnosticHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiagnosticHandler(const DiagnosticInfo &DI, void *Context)"
  },
  {
    "label": "DiagnosticHandler2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiagnosticHandler2(const DiagnosticInfo &DI)"
  },
  {
    "label": "destroyMergedModule()",
    "kind": "Method",
    "detail": "Function (typedef StringMap<uint8_t> StringSet ; void)",
    "insertText": "destroyMergedModule()"
  }
]