[
  {
    "label": "NearendDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NearendDetector"
  },
  {
    "label": "NearendDetector()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_AEC3_NEAREND_DETECTOR_H_ # define MODULES_AUDIO_PROCESSING_AEC3_NEAREND_DETECTOR_H_ # include<vector> # include \" api / array_view . h \" # include \" api / audio / echo_canceller3_config . h \" # include \" modules / audio_processing / aec3 / aec3_common . h \" namespace webrtc { class NearendDetector { public : ~)",
    "insertText": "NearendDetector()"
  },
  {
    "label": "IsNearendState()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNearendState()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> nearend_spectrum, rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> residual_echo_spectrum, rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> comfort_noise_spectrum, bool initial_state)"
  }
]