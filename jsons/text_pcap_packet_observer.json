[
  {
    "label": "TextPcapPacketObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TextPcapPacketObserver"
  },
  {
    "label": "TextPcapPacketObserver()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PUBLIC_TEXT_PCAP_PACKET_OBSERVER_H_ # define NET_DCSCTP_PUBLIC_TEXT_PCAP_PACKET_OBSERVER_H_ # include<string> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" net / dcsctp / public / packet_observer . h \" # include \" net / dcsctp / public / types . h \" namespace dcsctp { class TextPcapPacketObserver : public dcsctp::PacketObserver { public :)",
    "insertText": "TextPcapPacketObserver(absl::string_view name) : name_(name)"
  },
  {
    "label": "OnSentPacket()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnSentPacket(dcsctp::TimeMs now, rtc::ArrayView<const uint8_t> payload)"
  },
  {
    "label": "OnReceivedPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedPacket(dcsctp::TimeMs now, rtc::ArrayView<const uint8_t> payload)"
  },
  {
    "label": "PrintPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintPacket(absl::string_view prefix, absl::string_view socket_name, dcsctp::TimeMs now, rtc::ArrayView<const uint8_t> payload)"
  }
]