[
  {
    "label": "FCUDAModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCUDAModule"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" CudaWrapper . h \" # include \" Delegates / Delegate . h \" # include \" HAL / Platform . h \" # include \" HAL / PlatformCrt . h \" # include \" Logging / LogMacros . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \")",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnPostCUDAInit) DECLARE_LOG_CATEGORY_EXTERN(LogCUDA, Log, All)"
  },
  {
    "label": "CUDA()",
    "kind": "Method",
    "detail": "Function (class FCUDAModule : public IModuleInterface { public : CUDA_DRIVER_API_FUNCTION_LIST)",
    "insertText": "CUDA()"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "DriverAPI()",
    "kind": "Method",
    "detail": "Function (const CUDA_DRIVER_API_FUNCTION_LIST*)",
    "insertText": "DriverAPI()"
  },
  {
    "label": "GetCudaContext()",
    "kind": "Method",
    "detail": "Function (CUcontext)",
    "insertText": "GetCudaContext()"
  },
  {
    "label": "GetCudaDeviceIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetCudaDeviceIndex()"
  },
  {
    "label": "GetCudaContextForDevice()",
    "kind": "Method",
    "detail": "Function (CUcontext)",
    "insertText": "GetCudaContextForDevice(int DeviceIndex)"
  },
  {
    "label": "IsDeviceIndexRHISelected()",
    "kind": "Method",
    "detail": "Function (FOnPostCUDAInit OnPostCUDAInit ; bool)",
    "insertText": "IsDeviceIndexRHISelected(int DeviceIndex)"
  },
  {
    "label": "LoadCuda()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "LoadCuda()"
  },
  {
    "label": "UnloadCuda()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnloadCuda()"
  },
  {
    "label": "InitCuda()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitCuda()"
  },
  {
    "label": "IsRHISelectedDevice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRHISelectedDevice(CUdevice cuDevice)"
  }
]