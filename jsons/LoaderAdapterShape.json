[
  {
    "label": "FLoaderAdapterShape",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoaderAdapterShape"
  },
  {
    "label": "FLoaderAdapterShape()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" WorldPartition / LoaderAdapter / LoaderAdapterSpatial . h \" # if WITH_EDITOR class FLoaderAdapterShape : public ILoaderAdapterSpatial { public :)",
    "insertText": "FLoaderAdapterShape(UWorld* InWorld, const FBox& InBoundingBox, const FString& InLabel)"
  },
  {
    "label": "GetBoundingBox()",
    "kind": "Method",
    "detail": "Function (TOptional<FBox>)",
    "insertText": "GetBoundingBox()"
  },
  {
    "label": "GetLabel()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "GetLabel()"
  },
  {
    "label": "Intersect()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "Intersect(const FBox& Box)"
  }
]