[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FInternetAddr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternetAddr"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FPacketTimestamp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPacketTimestamp"
  },
  {
    "label": "FSocketDeleter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketDeleter"
  },
  {
    "label": "ISocketSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISocketSubsystem"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FResolveInfoCached",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveInfoCached"
  },
  {
    "label": "FResolveInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FResolveInfo"
  },
  {
    "label": "FInternetAddr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternetAddr"
  },
  {
    "label": "FInternetAddr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternetAddr"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "FSocketDeleter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocketDeleter"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (SOCKETS_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogSockets, Log, All)"
  },
  {
    "label": "ShutdownAllSystems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownAllSystems()"
  },
  {
    "label": "ISocketSubsystem()",
    "kind": "Method",
    "detail": "Function (SOCKETS_API)",
    "insertText": "ISocketSubsystem()"
  },
  {
    "label": "NoProtocolTypeName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "NoProtocolTypeName(NAME_None)"
  },
  {
    "label": "CreateSocket()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateSocket(SocketType, SocketDescription, NoProtocolTypeName)"
  },
  {
    "label": "CreateUniqueSocket()",
    "kind": "Method",
    "detail": "Function (FUniqueSocket)",
    "insertText": "CreateUniqueSocket(const FName& SocketType, const FString& SocketDescription, bool bForceUDP = false)"
  },
  {
    "label": "CreateUniqueSocket()",
    "kind": "Method",
    "detail": "Function (FUniqueSocket)",
    "insertText": "CreateUniqueSocket(const FName& SocketType, const FString& SocketDescription, const FName& ProtocolName)"
  },
  {
    "label": "GetAddressInfoAsync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAddressInfoAsync(FAsyncGetAddressInfoCallback Callback, const TCHAR* HostName,\n\t\tconst TCHAR* ServiceName = nullptr, EAddressInfoFlags QueryFlags = EAddressInfoFlags::Default,\n\t\tconst FName ProtocolTypeName = NAME_None,\n\t\tESocketType SocketType = ESocketType::SOCKTYPE_Unknown)"
  },
  {
    "label": "CreateInternetAddr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CreateInternetAddr()"
  },
  {
    "label": "CreateRecvMulti()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FRecvMulti>)",
    "insertText": "CreateRecvMulti(int32 MaxNumPackets, int32 MaxPacketSize,\n\t\t\t\t\t\t\t\t\t\t\t\t\tERecvMultiFlags Flags=ERecvMultiFlags::None)"
  },
  {
    "label": "GetLocalAdapterAddresses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetLocalAdapterAddresses(TArray<TSharedPtr<FInternetAddr>>& OutAddresses)"
  },
  {
    "label": "GetLocalBindAddr()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FInternetAddr>)",
    "insertText": "GetLocalBindAddr(FOutputDevice& Out)"
  },
  {
    "label": "GetLocalBindAddresses()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<FInternetAddr>>)",
    "insertText": "GetLocalBindAddresses()"
  },
  {
    "label": "BindNextPort()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "BindNextPort(FSocket* Socket, FInternetAddr& Addr, int32 PortCount, int32 PortIncrement)"
  },
  {
    "label": "GetLocalHostAddr()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FInternetAddr>)",
    "insertText": "GetLocalHostAddr(FOutputDevice& Out, bool& bCanBindAll)"
  },
  {
    "label": "GetMultihomeAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMultihomeAddress(TSharedRef<FInternetAddr>& Addr)"
  },
  {
    "label": "GetHostByNameFromCache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHostByNameFromCache(const ANSICHAR* HostName, TSharedPtr<class FInternetAddr>& Addr)"
  },
  {
    "label": "AddHostNameToCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddHostNameToCache(const ANSICHAR* HostName, TSharedPtr<class FInternetAddr> Addr)"
  },
  {
    "label": "RemoveHostNameFromCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveHostNameFromCache(const ANSICHAR* HostName)"
  },
  {
    "label": "TranslatePacketTimestamp()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "TranslatePacketTimestamp(const FPacketTimestamp& Timestamp,\n\t\t\t\t\t\t\t\t\t\t\tETimestampTranslation Translation=ETimestampTranslation::LocalTimestamp)"
  }
]