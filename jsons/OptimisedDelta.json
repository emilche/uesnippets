[
  {
    "label": "IDownloadService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDownloadService"
  },
  {
    "label": "IOptimisedDelta",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IOptimisedDelta"
  },
  {
    "label": "FOptimisedDeltaConfiguration",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptimisedDeltaConfiguration"
  },
  {
    "label": "FOptimisedDeltaDependencies",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOptimisedDeltaDependencies"
  },
  {
    "label": "FOptimisedDeltaFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptimisedDeltaFactory"
  },
  {
    "label": "IOptimisedDelta()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / ValueOrError . h \" # include \" BuildPatchManifest . h \" # include \" BuildPatchSettings . h \" namespace BuildPatchServices { class IDownloadService ; class IOptimisedDelta { public : ~)",
    "insertText": "IOptimisedDelta()"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (} typedef TValueOrError<FBuildPatchAppManifestPtr,FString> FResultValueOrError ; const IOptimisedDelta::FResultValueOrError&)",
    "insertText": "GetResult()"
  },
  {
    "label": "GetMetaDownloadSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMetaDownloadSize()"
  },
  {
    "label": "FOptimisedDeltaConfiguration()",
    "kind": "Method",
    "detail": "Function (} ; struct FOptimisedDeltaConfiguration { public :)",
    "insertText": "FOptimisedDeltaConfiguration(FBuildPatchAppManifestRef DestinationManifest)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (public : FBuildPatchAppManifestPtr SourceManifest ; FBuildPatchAppManifestRef DestinationManifest ; TArray<FString> CloudDirectories ; EDeltaPolicy DeltaPolicy ; EInstallMode InstallMode ; } ; struct FOptimisedDeltaDependencies { public : IDownloadService* DownloadService = nullptr ; TUniqueFunction<)",
    "insertText": "void(const IOptimisedDelta::FResultValueOrError&)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FOptimisedDeltaFactory { public : IOptimisedDelta*)",
    "insertText": "Create(const FOptimisedDeltaConfiguration& Configuration, FOptimisedDeltaDependencies&& Dependencies)"
  }
]