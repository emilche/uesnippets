[
  {
    "label": "FGraphPartitioner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraphPartitioner"
  },
  {
    "label": "FGraphData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphData"
  },
  {
    "label": "FRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRange"
  },
  {
    "label": "FGraphPartitioner()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FGraphPartitioner( uint32 InNumElements, int32 InMinPartitionSize, int32 InMaxPartitionSize )"
  },
  {
    "label": "AddAdjacency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAdjacency( FGraphData* Graph, uint32 AdjIndex, idx_t Cost )"
  },
  {
    "label": "AddLocalityLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalityLinks( FGraphData* Graph, uint32 Index, idx_t Cost )"
  },
  {
    "label": "BuildLocalityLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildLocalityLinks( FDisjointSet& DisjointSet, const FBounds3f& Bounds, TConstArrayView< const int32 > GroupIndexes, FGetCenter& GetCenter )"
  },
  {
    "label": "Partition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Partition( FGraphData* Graph )"
  },
  {
    "label": "PartitionStrict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PartitionStrict( FGraphData* Graph, bool bThreaded )"
  },
  {
    "label": "BisectGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BisectGraph( FGraphData* Graph, FGraphData* ChildGraphs[2] )"
  },
  {
    "label": "RecursiveBisectGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecursiveBisectGraph( FGraphData* Graph )"
  }
]