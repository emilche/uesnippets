[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneEvaluationKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationKey"
  },
  {
    "label": "FMovieSceneObjectBindingID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneObjectBindingID"
  },
  {
    "label": "FSharedPersistentDataKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPersistentDataKey"
  },
  {
    "label": "IPersistentEvaluationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPersistentEvaluationData"
  },
  {
    "label": "FInstanceHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInstanceHandle"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "FMovieSceneObjectCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneObjectCache"
  },
  {
    "label": "FBoundObjects",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBoundObjects"
  },
  {
    "label": "TFastGuidKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TFastGuidKeyFuncs"
  },
  {
    "label": "FMovieSceneEvaluationState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationState"
  },
  {
    "label": "FVersionedObjectCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVersionedObjectCache"
  },
  {
    "label": "FindBoundObjects()",
    "kind": "Method",
    "detail": "Function (TArrayView<TWeakObjectPtr<>>)",
    "insertText": "FindBoundObjects(const FGuid& InBindingID, TSharedRef<const FSharedPlaybackState> InSharedPlaybackState)"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSequence(UMovieSceneSequence& InSequence, FMovieSceneSequenceIDRef InSequenceID, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "FindObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindObjectId(UObject& InObject, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "FindCachedObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindCachedObjectId(UObject& InObject, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "InvalidateExpiredObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateExpiredObjects()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(const FGuid& InGuid)"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(const FGuid& InGuid, FMovieSceneSequenceIDRef InSequenceID)"
  },
  {
    "label": "InvalidateIfValid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateIfValid(const FGuid& InGuid)"
  },
  {
    "label": "SetBindingActivation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBindingActivation(const FGuid& InGuid, bool bActive)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear(TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "FilterObjectBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterObjectBindings(UObject* PredicateObject, TSharedRef<const FSharedPlaybackState> SharedPlaybackState, TArray<FMovieSceneObjectBindingID>* OutBindings)"
  },
  {
    "label": "FindBoundObjects()",
    "kind": "Method",
    "detail": "Function (TArrayView<TWeakObjectPtr<>>)",
    "insertText": "FindBoundObjects(const FGuid& InBindingID, IMovieScenePlayer& Player)"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSequence(UMovieSceneSequence& InSequence, FMovieSceneSequenceIDRef InSequenceID, IMovieScenePlayer& Player)"
  },
  {
    "label": "FindObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindObjectId(UObject& InObject, IMovieScenePlayer& Player)"
  },
  {
    "label": "FindCachedObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindCachedObjectId(UObject& InObject, IMovieScenePlayer& Player)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear(IMovieScenePlayer& Player)"
  },
  {
    "label": "FilterObjectBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterObjectBindings(UObject* PredicateObject, IMovieScenePlayer& Player, TArray<FMovieSceneObjectBindingID>* OutBindings)"
  },
  {
    "label": "UpdateBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBindings(const FGuid& InGuid, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "InvalidateInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InvalidateInternal(const FGuid& InGuid)"
  },
  {
    "label": "InvalidateIfValidInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InvalidateIfValidInternal(const FGuid& InGuid)"
  },
  {
    "label": "UpdateSerialNumber()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSerialNumber()"
  },
  {
    "label": "AssignSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignSequence(FMovieSceneSequenceIDRef InSequenceID, UMovieSceneSequence& InSequence, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "FindObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindObjectId(UObject& Object, FMovieSceneSequenceIDRef InSequenceID, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "FindCachedObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindCachedObjectId(UObject& Object, FMovieSceneSequenceIDRef InSequenceID, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "FilterObjectBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterObjectBindings(UObject* PredicateObject, TSharedRef<const FSharedPlaybackState> SharedPlaybackState, TArray<FMovieSceneObjectBindingID>* OutBindings)"
  },
  {
    "label": "FindBoundObjects()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FindBoundObjects(Operand.ObjectBindingID, Operand.SequenceID, SharedPlaybackState)"
  },
  {
    "label": "InvalidateExpiredObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateExpiredObjects()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate(const FGuid& InGuid, FMovieSceneSequenceIDRef InSequenceID)"
  },
  {
    "label": "SetBindingActivation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBindingActivation(const FGuid& InGuid, FMovieSceneSequenceIDRef InSequenceID, bool bActive)"
  },
  {
    "label": "ClearObjectCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearObjectCaches(TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "GetSerialNumber()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetSerialNumber()"
  },
  {
    "label": "RegisterObjectCacheEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterObjectCacheEvents(UMovieSceneEntitySystemLinker* Linker, const UE::MovieScene::FInstanceHandle& InstanceHandle, const FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "AssignSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AssignSequence(FMovieSceneSequenceIDRef InSequenceID, UMovieSceneSequence& InSequence, IMovieScenePlayer& Player)"
  },
  {
    "label": "FindObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindObjectId(UObject& Object, FMovieSceneSequenceIDRef InSequenceID, IMovieScenePlayer& Player)"
  },
  {
    "label": "FindCachedObjectId()",
    "kind": "Method",
    "detail": "Function (FGuid)",
    "insertText": "FindCachedObjectId(UObject& Object, FMovieSceneSequenceIDRef InSequenceID, IMovieScenePlayer& Player)"
  },
  {
    "label": "FilterObjectBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterObjectBindings(UObject* PredicateObject, IMovieScenePlayer& Player, TArray<FMovieSceneObjectBindingID>* OutBindings)"
  },
  {
    "label": "ClearObjectCaches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearObjectCaches(IMovieScenePlayer& Player)"
  }
]