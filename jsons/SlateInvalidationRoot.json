[
  {
    "label": "FSlateCachedElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateCachedElementData"
  },
  {
    "label": "FSlateInvalidationWidgetList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetList"
  },
  {
    "label": "FSlateInvalidationWidgetPreHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetPreHeap"
  },
  {
    "label": "FSlateInvalidationWidgetPrepassHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetPrepassHeap"
  },
  {
    "label": "FSlateInvalidationWidgetPostHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationWidgetPostHeap"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "FSlateInvalidationPaintFastPathContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateInvalidationPaintFastPathContext"
  },
  {
    "label": "FSlateInvalidationContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateInvalidationContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FSlateInvalidationResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateInvalidationResult"
  },
  {
    "label": "FSlateInvalidationRoot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateInvalidationRoot"
  },
  {
    "label": "FSlateUpdateFastWidgetPathTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateUpdateFastWidgetPathTask"
  },
  {
    "label": "FSlateUpdateFastPathAndHitTestGridTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateUpdateFastPathAndHitTestGridTask"
  },
  {
    "label": "FWidgetProxyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetProxyHandle"
  },
  {
    "label": "FPerformanceStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerformanceStat"
  },
  {
    "label": "FSlateInvalidationContext()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / GCObject . h \" # include \" WidgetProxy . h \" # include \" FastUpdate / SlateInvalidationRootHandle . h \" # include \" FastUpdate / SlateInvalidationWidgetIndex . h \" # include \" FastUpdate / SlateInvalidationWidgetSortOrder . h \" # include \" Rendering / DrawElements . h \" struct FSlateCachedElementData ; class FSlateInvalidationWidgetList ; class FSlateInvalidationWidgetPreHeap ; class FSlateInvalidationWidgetPrepassHeap ; class FSlateInvalidationWidgetPostHeap ; class FSlateWindowElementList ; class FWidgetStyle ; namespace UE::Slate::Private { struct FSlateInvalidationPaintFastPathContext ; } # define UE_SLATE_DEBUGGING_CLEAR_ALL_FAST_PATH_DATA 0 struct FSlateInvalidationContext {)",
    "insertText": "FSlateInvalidationContext(FSlateWindowElementList& InWindowElementList, const FWidgetStyle& InWidgetStyle) : ViewOffset(0.0f, 0.0f) , PaintArgs(nullptr) , WidgetStyle(InWidgetStyle) , WindowElementList(&InWindowElementList) , LayoutScaleMultiplier(1.0f) , IncomingLayerId(0) , bParentEnabled(true) , bAllowFastPathUpdate(false)"
  },
  {
    "label": "FSlateInvalidationResult()",
    "kind": "Method",
    "detail": "Function (} FSlateRect CullingRect ; UE::Slate::FDeprecateVector2DResult ViewOffset ; const FPaintArgs* PaintArgs ; const FWidgetStyle& WidgetStyle ; FSlateWindowElementList* WindowElementList ; float LayoutScaleMultiplier ; int32 IncomingLayerId ; bool bParentEnabled ; bool bAllowFastPathUpdate ; } ; enum class ESlateInvalidationPaintType { None,Slow,Fast,} ; struct FSlateInvalidationResult {)",
    "insertText": "FSlateInvalidationResult() : ViewOffset(0.0f, 0.0f) , MaxLayerIdPainted(0) , bRepaintedWidgets(false)"
  },
  {
    "label": "FSlateInvalidationRoot()",
    "kind": "Method",
    "detail": "Function (} UE::Slate::FDeprecateVector2DResult ViewOffset ; int32 MaxLayerIdPainted ; bool bRepaintedWidgets ; } ; class FSlateInvalidationRoot : public FGCObject,public FNoncopyable { class FSlateUpdateFastWidgetPathTask ; class FSlateUpdateFastPathAndHitTestGridTask ; class FWidgetProxyHandle ; public :)",
    "insertText": "FSlateInvalidationRoot()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "InvalidateRootChildOrder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateRootChildOrder(const SWidget* Investigator = nullptr)"
  },
  {
    "label": "InvalidateRootLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateRootLayout(const SWidget* Investigator = nullptr)"
  },
  {
    "label": "InvalidateScreenPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateScreenPosition(const SWidget* Investigator = nullptr)"
  },
  {
    "label": "NeedsSlowPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsSlowPath()"
  },
  {
    "label": "PaintInvalidationRoot()",
    "kind": "Method",
    "detail": "Function (FSlateInvalidationResult)",
    "insertText": "PaintInvalidationRoot(const FSlateInvalidationContext& Context)"
  },
  {
    "label": "OnWidgetDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWidgetDestroyed(const SWidget* Widget)"
  },
  {
    "label": "Advanced_ResetInvalidation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advanced_ResetInvalidation(bool bClearResourcesImmediately)"
  },
  {
    "label": "GetLastPaintType()",
    "kind": "Method",
    "detail": "Function (# if WITH_SLATE_DEBUGGING ESlateInvalidationPaintType)",
    "insertText": "GetLastPaintType()"
  },
  {
    "label": "GetPerformanceStat()",
    "kind": "Method",
    "detail": "Function (LastPaintType = Value ; } struct FPerformanceStat { double WidgetsPreUpdate = 0 . 0 ; double WidgetsAttribute = 0 . 0 ; double WidgetsPrepass = 0 . 0 ; double WidgetsUpdate = 0 . 0 ; double InvalidationProcessing = 0 . 0 ; } ; FPerformanceStat)",
    "insertText": "GetPerformanceStat()"
  },
  {
    "label": "PaintSlowPath()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "PaintSlowPath(const FSlateInvalidationContext& Context)"
  },
  {
    "label": "SetInvalidationRootWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInvalidationRootWidget(SWidget& InInvalidationRootWidget)"
  },
  {
    "label": "SetInvalidationRootHittestGrid()",
    "kind": "Method",
    "detail": "Function (InvalidationRootWidget =& InInvalidationRootWidget ; } void)",
    "insertText": "SetInvalidationRootHittestGrid(FHittestGrid& InHittestGrid)"
  },
  {
    "label": "GetCachedMaxLayerId()",
    "kind": "Method",
    "detail": "Function (RootHittestGrid =& InHittestGrid ; } int32)",
    "insertText": "GetCachedMaxLayerId()"
  },
  {
    "label": "ClearAllFastPathData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllFastPathData(bool bClearResourcesImmediately)"
  },
  {
    "label": "OnRootInvalidated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRootInvalidated()"
  },
  {
    "label": "SetNeedsSlowPath()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetNeedsSlowPath(bool InNeedsSlowPath)"
  },
  {
    "label": "GetFastPathWidgetList()",
    "kind": "Method",
    "detail": "Function (private : FSlateInvalidationWidgetList&)",
    "insertText": "GetFastPathWidgetList()"
  },
  {
    "label": "PaintFastPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PaintFastPath(const FSlateInvalidationContext& Context)"
  },
  {
    "label": "PaintFastPath_UpdateNextWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PaintFastPath_UpdateNextWidget(const FSlateInvalidationContext& Context, UE::Slate::Private::FSlateInvalidationPaintFastPathContext& FastPathContext)"
  },
  {
    "label": "PaintFastPath_FixupLayerId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PaintFastPath_FixupLayerId(UE::Slate::Private::FSlateInvalidationPaintFastPathContext& FastPathContext, const FWidgetProxy& InvalidationWidget, const int32 NewOutgoingLayerId)"
  },
  {
    "label": "PaintFastPath_FixupParentLayerId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PaintFastPath_FixupParentLayerId(UE::Slate::Private::FSlateInvalidationPaintFastPathContext& FastPathContext, const FWidgetProxy& InvalidationWidget, const int32 NewOutgoingLayerId)"
  },
  {
    "label": "PaintFastPath_AddUniqueSortedToFinalUpdateList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PaintFastPath_AddUniqueSortedToFinalUpdateList(const FSlateInvalidationWidgetIndex InvalidationWidgetIndex)"
  },
  {
    "label": "InvalidateWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateWidget(FWidgetProxy& Proxy, EInvalidateWidgetReason InvalidateReason)"
  },
  {
    "label": "BuildFastPathWidgetList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFastPathWidgetList(const TSharedRef<SWidget>& RootWidget)"
  },
  {
    "label": "AdjustWidgetsDesktopGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustWidgetsDesktopGeometry(UE::Slate::FDeprecateVector2DParameter WindowToDesktopTransform)"
  },
  {
    "label": "ProcessPreUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPreUpdate()"
  },
  {
    "label": "ProcessAttributeUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAttributeUpdate()"
  },
  {
    "label": "ProcessPrepassUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPrepassUpdate()"
  },
  {
    "label": "ProcessPostUpdate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessPostUpdate()"
  }
]