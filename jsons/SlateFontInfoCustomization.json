[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FSlateFontInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateFontInfo"
  },
  {
    "label": "DETAILCUSTOMIZATIONS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DETAILCUSTOMIZATIONS_API"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" HAL / PlatformCrt . h \" # include \" IPropertyTypeCustomization . h \" # include \" Internationalization / Text . h \" # include \" Misc / Optional . h \" # include \" Serialization / Archive . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Widgets / SWidget . h \" class IPropertyHandle ; class SWidget ; struct FAssetData ; struct FSlateFontInfo ; class FSlateFontInfoStructCustomization : public IPropertyTypeCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<class IPropertyHandle> InStructPropertyHandle, class FDetailWidgetRow& InHeaderRow, IPropertyTypeCustomizationUtils& InStructCustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<class IPropertyHandle> InStructPropertyHandle, class IDetailChildrenBuilder& InStructBuilder, IPropertyTypeCustomizationUtils& InStructCustomizationUtils)"
  },
  {
    "label": "AddFontSizeProperty()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "AddFontSizeProperty(IDetailChildrenBuilder& InStructBuilder)"
  },
  {
    "label": "IsFontSizeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFontSizeEnabled()"
  },
  {
    "label": "OnFontSizeGetValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "OnFontSizeGetValue()"
  },
  {
    "label": "OnFontSizeValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontSizeValueChanged(float NewDisplayValue)"
  },
  {
    "label": "OnFontSizeValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontSizeValueCommitted(float NewDisplayValue, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "OnFontSizeBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontSizeBeginSliderMovement()"
  },
  {
    "label": "OnFontSizeEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontSizeEndSliderMovement(float NewDisplayValue)"
  },
  {
    "label": "GetFontSizeTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFontSizeTooltipText()"
  },
  {
    "label": "ConvertFontSizeFromNativeToDisplay()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ConvertFontSizeFromNativeToDisplay(float FontSize)"
  },
  {
    "label": "ConvertFontSizeFromDisplayToNative()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ConvertFontSizeFromDisplayToNative(float FontSize)"
  },
  {
    "label": "OnFilterFontAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnFilterFontAsset(const FAssetData& InAssetData)"
  },
  {
    "label": "OnFontChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontChanged(const FAssetData& InAssetData)"
  },
  {
    "label": "IsFontEntryComboEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFontEntryComboEnabled()"
  },
  {
    "label": "OnFontEntryComboOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontEntryComboOpening()"
  },
  {
    "label": "OnFontEntrySelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFontEntrySelectionChanged(TSharedPtr<FName> InNewSelection, ESelectInfo::Type)"
  },
  {
    "label": "MakeFontEntryWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFontEntryWidget(TSharedPtr<FName> InFontEntry)"
  },
  {
    "label": "GetFontEntryComboText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetFontEntryComboText()"
  },
  {
    "label": "GetActiveFontEntry()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetActiveFontEntry()"
  },
  {
    "label": "GetFontInfoBeingEdited()",
    "kind": "Method",
    "detail": "Function (TArray<FSlateFontInfo*>)",
    "insertText": "GetFontInfoBeingEdited()"
  }
]