[
  {
    "label": "FPropertySaveOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertySaveOverride"
  },
  {
    "label": "FObjectSaveOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectSaveOverride"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" UObject / FieldPath . h \" # include \" UObject / ObjectMacros . h \" struct FPropertySaveOverride { void)",
    "insertText": "Merge(const FPropertySaveOverride& Other)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (bMarkTransient | = Other . bMarkTransient ; } FFieldPath PropertyPath ; bool bMarkTransient ; } ; struct FObjectSaveOverride { void)",
    "insertText": "Merge(const FObjectSaveOverride& Other)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bForceTransient | = Other . bForceTransient ;)",
    "insertText": "if(PropOverrides.IsEmpty())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (PropOverrides = Other . PropOverrides ; } else)",
    "insertText": "if(!Other.PropOverrides.IsEmpty())"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (MatchingPropOverride ->)",
    "insertText": "Merge(OtherPropOverride)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} else { PropOverrides .)",
    "insertText": "Add(OtherPropOverride)"
  }
]