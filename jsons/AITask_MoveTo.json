[
  {
    "label": "AAIController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AAIController"
  },
  {
    "label": "UAITask_MoveTo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAITask_MoveTo"
  },
  {
    "label": "UAITask_MoveTo()",
    "kind": "Method",
    "detail": "Function (AIMODULE_API)",
    "insertText": "UAITask_MoveTo(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "ConditionalPerformMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalPerformMove()"
  },
  {
    "label": "SetUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUp(AAIController* Controller, const FAIMoveRequest& InMoveRequest)"
  },
  {
    "label": "SetContinuousGoalTracking()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContinuousGoalTracking(bool bEnable)"
  },
  {
    "label": "FinishMoveTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishMoveTask(EPathFollowingResult::Type InResult)"
  },
  {
    "label": "SetObservedPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObservedPath(FNavPathSharedPtr InPath)"
  },
  {
    "label": "ResetObservers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetObservers()"
  },
  {
    "label": "ResetTimers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTimers()"
  },
  {
    "label": "ConditionalUpdatePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalUpdatePath()"
  },
  {
    "label": "PerformMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformMove()"
  },
  {
    "label": "OnPathEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPathEvent(FNavigationPath* InPath, ENavPathEvent::Type Event)"
  },
  {
    "label": "OnRequestFinished()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRequestFinished(FAIRequestID RequestID, const FPathFollowingResult& Result)"
  }
]