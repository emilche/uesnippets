[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FReply",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReply"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FLogEntryItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogEntryItem"
  },
  {
    "label": "FVisualLoggerEvents",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerEvents"
  },
  {
    "label": "FVisualLoggerTimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisualLoggerTimeSliderController"
  },
  {
    "label": "LOGVISUALIZER_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LOGVISUALIZER_API"
  },
  {
    "label": "SVisualLogger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVisualLogger"
  },
  {
    "label": "FLogVisualizer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogVisualizer"
  },
  {
    "label": "SVisualLoggerViewer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVisualLoggerViewer"
  },
  {
    "label": "SVisualLoggerView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVisualLoggerView"
  },
  {
    "label": "FVisualLoggerCanvasRenderer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualLoggerCanvasRenderer"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FText ; struct FGeometry ; struct FKeyEvent ; class FReply ; class FString ; class UWorld ; class UObject ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnFiltersSearchChanged, const FText&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnFiltersChanged)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnLogLineSelectionChanged, TSharedPtr<struct FLogEntryItem> , int64 , FName)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(FReply, FOnKeyboardEvent, const FGeometry& , const FKeyEvent&)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal(float, FGetAnimationOutlinerFillPercentageFunc)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (struct FVisualLoggerEvents { FOnFiltersChanged OnFiltersChanged ; FOnLogLineSelectionChanged OnLogLineSelectionChanged ; FOnKeyboardEvent OnKeyboardEvent ; FGetAnimationOutlinerFillPercentageFunc GetAnimationOutlinerFillPercentageFunc ; } ; class FVisualLoggerTimeSliderController ; struct FLogVisualizer { void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetColorForCategory()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorForCategory(int32 Index)"
  },
  {
    "label": "GetColorForCategory()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetColorForCategory(const FString& InFilterName)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld(UObject* OptionalObject = nullptr)"
  },
  {
    "label": "GetEvents()",
    "kind": "Method",
    "detail": "Function (FVisualLoggerEvents&)",
    "insertText": "GetEvents()"
  },
  {
    "label": "SetAnimationOutlinerFillPercentage()",
    "kind": "Method",
    "detail": "Function (CurrentVisualizer = Visualizer ; } void)",
    "insertText": "SetAnimationOutlinerFillPercentage(float FillPercentage)"
  },
  {
    "label": "GetAnimationOutlinerFillPercentage()",
    "kind": "Method",
    "detail": "Function (AnimationOutlinerFillPercentage = FillPercentage ; } float)",
    "insertText": "GetAnimationOutlinerFillPercentage()"
  },
  {
    "label": "SetAnimationOutlinerFillPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimationOutlinerFillPercentage(VisualLoggerEvents.GetAnimationOutlinerFillPercentageFunc.Execute())"
  },
  {
    "label": "GetNextItem()",
    "kind": "Method",
    "detail": "Function (} return AnimationOutlinerFillPercentage ; } int32)",
    "insertText": "GetNextItem(FName RowName, int32 MoveDistance = 1)"
  },
  {
    "label": "GetPreviousItem()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPreviousItem(FName RowName, int32 MoveDistance = 1)"
  },
  {
    "label": "GotoNextItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GotoNextItem(FName RowName, int32 MoveDistance = 1)"
  },
  {
    "label": "GotoPreviousItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GotoPreviousItem(FName RowName, int32 MoveDistance = 1)"
  },
  {
    "label": "GotoFirstItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GotoFirstItem(FName RowName)"
  },
  {
    "label": "GotoLastItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GotoLastItem(FName RowName)"
  },
  {
    "label": "UpdateCameraPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCameraPosition(FName Rowname, int32 ItemIndes)"
  },
  {
    "label": "SeekToTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeekToTime(float Time)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FLogVisualizer&)",
    "insertText": "Get()"
  },
  {
    "label": "GetTimeSliderController()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<FVisualLoggerTimeSliderController>)",
    "insertText": "GetTimeSliderController()"
  }
]