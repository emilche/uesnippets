[
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "ConfigureAsHinge()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FConstraintInstance ; namespace ConstraintUtils { void)",
    "insertText": "ConfigureAsHinge(FConstraintInstance& ConstraintInstance, bool bOverwriteLimits = true)"
  },
  {
    "label": "IsHinge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHinge(const FConstraintInstance& ConstraintInstance)"
  },
  {
    "label": "ConfigureAsPrismatic()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureAsPrismatic(FConstraintInstance& ConstraintInstance, bool bOverwriteLimits = true)"
  },
  {
    "label": "IsPrismatic()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrismatic(const FConstraintInstance& ConstraintInstance)"
  },
  {
    "label": "ConfigureAsSkelJoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureAsSkelJoint(FConstraintInstance& ConstraintInstance, bool bOverwriteLimits = true)"
  },
  {
    "label": "IsSkelJoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSkelJoint(const FConstraintInstance& ConstraintInstance)"
  },
  {
    "label": "ConfigureAsBallAndSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConfigureAsBallAndSocket(FConstraintInstance& ConstraintInstance, bool bOverwriteLimits = true)"
  },
  {
    "label": "IsBallAndSocket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBallAndSocket(const FConstraintInstance& ConstraintInstance)"
  }
]