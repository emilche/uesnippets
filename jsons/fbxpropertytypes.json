[
  {
    "label": "EFbxType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EFbxType"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T1"
  },
  {
    "label": "T2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T2"
  },
  {
    "label": "FbxColor()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_PROPERTY_TYPES_H_ # define _FBXSDK_CORE_PROPERTY_TYPES_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / core / base / fbxtime . h> # include<fbxsdk / core / math / fbxvector2 . h> # include<fbxsdk / core / math / fbxvector4 . h> # include<fbxsdk / core / math / fbxmatrix . h> # include<fbxsdk / core / fbxsystemunit . h> # include<fbxsdk / fbxsdk_nsbegin . h> enum EFbxType { eFbxUndefined,eFbxChar,eFbxUChar,eFbxShort,eFbxUShort,eFbxUInt,eFbxLongLong,eFbxULongLong,eFbxHalfFloat,eFbxBool,eFbxInt,eFbxFloat,eFbxDouble,eFbxDouble2,eFbxDouble3,eFbxDouble4,eFbxDouble4x4,eFbxEnum = 1 7,eFbxEnumM = - 1 7,eFbxString = 1 8,eFbxTime,eFbxReference,eFbxBlob,eFbxDistance,eFbxDateTime,eFbxTypeCount = 2 4 } ; class FBXSDK_DLL FbxColor { public :)",
    "insertText": "FbxColor()"
  },
  {
    "label": "FbxColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxColor(const double pRed, const double pGreen, const double pBlue, const double pAlpha=1.0)"
  },
  {
    "label": "FbxColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxColor(const FbxDouble3& pRGB, const double pAlpha=1.0)"
  },
  {
    "label": "FbxColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxColor(const FbxDouble4& pRGBA)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(const double pRed, const double pGreen, const double pBlue, const double pAlpha=1.0)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const double&)",
    "insertText": "operator(int pIndex)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxColor&)",
    "insertText": "operator(const FbxColor& pColor)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxColor&)",
    "insertText": "operator(const FbxDouble3& pColor)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxColor&)",
    "insertText": "operator(const FbxDouble4& pColor)"
  },
  {
    "label": "FbxHalfFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxHalfFloat(float pVal)"
  },
  {
    "label": "FbxHalfFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxHalfFloat(const FbxHalfFloat& pVal)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxHalfFloat&)",
    "insertText": "operator(const FbxHalfFloat& pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxHalfFloat& pRHS)"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "value()"
  },
  {
    "label": "internal_value()",
    "kind": "Method",
    "detail": "Function (unsigned short)",
    "insertText": "internal_value()"
  },
  {
    "label": "FtoHF()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS private : typedef unsigned short half ; half mValue ; half)",
    "insertText": "FtoHF(float *f)"
  },
  {
    "label": "HFtoF()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "HFtoF(half h)"
  },
  {
    "label": "FbxBlob()",
    "kind": "Method",
    "detail": "Function (# endif } ; class FBXSDK_DLL FbxBlob { public :)",
    "insertText": "FbxBlob()"
  },
  {
    "label": "FbxBlob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxBlob(int pSize)"
  },
  {
    "label": "FbxBlob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxBlob(const FbxBlob& pRHS)"
  },
  {
    "label": "FbxBlob()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxBlob(const void* pData, int pSize)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxBlob&)",
    "insertText": "operator(const FbxBlob& pValue)"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Assign(const void* pData, int pSize)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxBlob& pRHS)"
  },
  {
    "label": "Modify()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "Modify()"
  },
  {
    "label": "Access()",
    "kind": "Method",
    "detail": "Function (const void*)",
    "insertText": "Access()"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Size()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "FbxDateTime()",
    "kind": "Method",
    "detail": "Function (protected : int* mRefCount ; void* mData ; int mSize ; } ; class FBXSDK_DLL FbxDateTime { public :)",
    "insertText": "FbxDateTime()"
  },
  {
    "label": "FbxDateTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxDateTime(int pDay, int pMonth, int pYear, int pHour, int pMin, int pSec, int pMillisecond=0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxDateTime& pRHS)"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValid()"
  },
  {
    "label": "setDate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setDate(int pDay, int pMonth, int pYear)"
  },
  {
    "label": "setTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setTime(int pHour, int pMin, int pSec, int pMillisecond = 0)"
  },
  {
    "label": "toString()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "toString()"
  },
  {
    "label": "fromString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "fromString(const char*)"
  },
  {
    "label": "currentDateTimeGMT()",
    "kind": "Method",
    "detail": "Function (FbxDateTime)",
    "insertText": "currentDateTimeGMT()"
  },
  {
    "label": "FbxDistance()",
    "kind": "Method",
    "detail": "Function (private : FbxShort mMillisecond ; FbxShort mYear ; FbxChar mMonth ; FbxChar mDay ; FbxChar mHour ; FbxChar mMinute ; FbxChar mSecond ; } ; class FBXSDK_DLL FbxDistance { public :)",
    "insertText": "FbxDistance()"
  },
  {
    "label": "FbxDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxDistance(float pValue, FbxSystemUnit pUnit)"
  },
  {
    "label": "FbxDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxDistance(float pValue, const char* pUnit)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxDistance&)",
    "insertText": "operator(const FbxDistance& pValue)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FbxDistance& pRHS)"
  },
  {
    "label": "unitName()",
    "kind": "Method",
    "detail": "Function (const FbxString)",
    "insertText": "unitName()"
  },
  {
    "label": "unit()",
    "kind": "Method",
    "detail": "Function (const FbxSystemUnit)",
    "insertText": "unit()"
  },
  {
    "label": "internalValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "internalValue()"
  },
  {
    "label": "valueAs()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "valueAs(const FbxSystemUnit& pUnit)"
  },
  {
    "label": "FbxTypeSizeOf()",
    "kind": "Method",
    "detail": "Function (private : float mValue ; FbxSystemUnit mUnit ; } ; FBXSDK_DLL size_t)",
    "insertText": "FbxTypeSizeOf(const EFbxType pType)"
  },
  {
    "label": "FbxTypeComponentCount()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL size_t)",
    "insertText": "FbxTypeComponentCount(const EFbxType pType)"
  },
  {
    "label": "FbxTypeOf()",
    "kind": "Method",
    "detail": "Function (EFbxType)",
    "insertText": "FbxTypeOf(const FbxChar&)"
  },
  {
    "label": "FBX_ASSERT_NOW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT_NOW(\"Unknown type!\")"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxBool& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxInt& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxChar& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxUChar& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxShort& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxUShort& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxUInt& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxLongLong& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxULongLong& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopyStr()",
    "kind": "Method",
    "detail": "Function (bool FBXSDK_DLL)",
    "insertText": "FbxTypeCopyStr(FbxHalfFloat& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (template<class T1,class T2> bool)",
    "insertText": "FbxTypeCopy(T1&, const T2&)"
  },
  {
    "label": "FBX_ASSERT_NOW()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT_NOW(\"Incompatible type assignment!\")"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxUChar& pDst, const FbxUChar& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxShort& pDst, const FbxShort& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxUShort& pDst, const FbxUShort& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxUInt& pDst, const FbxUInt& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxLongLong& pDst, const FbxLongLong& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxULongLong& pDst, const FbxULongLong& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxHalfFloat& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxBool& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxInt& pDst, const FbxInt& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxFloat& pDst, const FbxFloat& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble& pDst, const FbxDouble& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble2& pDst, const FbxDouble2& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble3& pDst, const FbxDouble3& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble4& pDst, const FbxDouble4& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble4x4& pDst, const FbxDouble4x4& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxString& pDst, const FbxString& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxTime& pDst, const FbxTime& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxReference& pDst, const FbxReference& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBlob& pDst, const FbxBlob& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDistance& pDst, const FbxDistance& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDateTime& pDst, const FbxDateTime& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxChar& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxUChar& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxShort& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxUShort& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxUInt& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxLongLong& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxULongLong& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& , const FbxHalfFloat&)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxFloat& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 . f ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& pDst, const FbxDouble& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc = = 0 . ? false : true ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxBool& , const FbxDouble2&)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxBool& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxChar)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxChar& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxUChar)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxUChar& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxShort)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxShort& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxUShort)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxUShort& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxInt)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxInt& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxUInt)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxUInt& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxLongLong)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxLongLong& , const FbxTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxULongLong)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxULongLong& , const FbxTime&)"
  },
  {
    "label": "hf()",
    "kind": "Method",
    "detail": "Function (FbxHalfFloat)",
    "insertText": "hf((float)pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxUChar& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxShort& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxUShort& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxUInt& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxLongLong& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxULongLong& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxBool& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxInt& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxFloat& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& pDst, const FbxDouble& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& , const FbxDouble2&)"
  },
  {
    "label": "hf()",
    "kind": "Method",
    "detail": "Function (FbxHalfFloat)",
    "insertText": "hf(pSrc.internalValue())"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = hf ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxHalfFloat& , const FbxDateTime&)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxFloat)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxDouble)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxDouble)pSrc.value()"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxDouble& pDst, const FbxTime& pSrc)"
  },
  {
    "label": "pDst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "pDst(FbxDouble)pSrc.GetSecondDouble()"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble3& , const FbxDouble4x4&)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxDouble4& , const FbxDouble4x4&)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString((int)pSrc)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString((float)pSrc.value())"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = pSrc ? \" true \" : \" false \" ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxString& pDst, const FbxInt& pSrc)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString(pSrc)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString(pSrc[0])+\",\"+FbxString(pSrc[1])"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString(pSrc[0])+\",\"+FbxString(pSrc[1])+\",\"+FbxString(pSrc[2])"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString(pSrc[0])+\",\"+FbxString(pSrc[1])+\",\"+FbxString(pSrc[2])+\",\"+FbxString(pSrc[3])"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString(pSrc[0][0])+\",\"+FbxString(pSrc[0][1])+\",\"+FbxString(pSrc[0][2])+\",\"+FbxString(pSrc[0][3])"
  },
  {
    "label": "GetTimeString()",
    "kind": "Method",
    "detail": "Function (char lTimeStr [ 1 2 8 ] ; pSrc .)",
    "insertText": "GetTimeString(lTimeStr, FbxUShort(128))"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = lTimeStr ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxString& pDst, const FbxReference&)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = \"<reference> \" ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxString& pDst, const FbxBlob&)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (pDst = \"<blob> \" ; return true ; } bool)",
    "insertText": "FbxTypeCopy(FbxString& pDst, const FbxDistance& pSrc)"
  },
  {
    "label": "FbxString()",
    "kind": "Method",
    "detail": "Function (pDst =)",
    "insertText": "FbxString(pSrc.value()) + \" \" +pSrc.unitName()"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (pDst .)",
    "insertText": "Assign(&pSrc, sizeof(pSrc))"
  },
  {
    "label": "GetLen()",
    "kind": "Method",
    "detail": "Function (bool lCastable = pSrc .)",
    "insertText": "GetLen() == pSrc.GetLen()"
  },
  {
    "label": "FBX_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBX_ASSERT(lCastable)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FbxLongLong t = pSrc .)",
    "insertText": "Get()"
  },
  {
    "label": "Assign()",
    "kind": "Method",
    "detail": "Function (pDst .)",
    "insertText": "Assign(&t, sizeof(t))"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "FbxTypeCopy(FbxDateTime& , const FbxTime&)"
  },
  {
    "label": "FBX_ASSERT_NOW()",
    "kind": "Method",
    "detail": "Function (break ; default :)",
    "insertText": "FBX_ASSERT_NOW(\"Trying to assign an unknown type\")"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (break ; } return false ; } template<class T> bool)",
    "insertText": "FbxTypeCopy(void* pDst, EFbxType pDstType, const T& pSrc)"
  },
  {
    "label": "FbxTypeCopy()",
    "kind": "Method",
    "detail": "Function (break ; } return false ; } bool)",
    "insertText": "FbxTypeCopy(void* pDst, EFbxType pDstType, const void* pSrc, EFbxType pSrcType)"
  },
  {
    "label": "FbxTypeAllocate()",
    "kind": "Method",
    "detail": "Function (break ; } return false ; } FBXSDK_DLL void*)",
    "insertText": "FbxTypeAllocate(const EFbxType pType)"
  },
  {
    "label": "FbxTypeAllocate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL bool)",
    "insertText": "FbxTypeAllocate(const EFbxType pType, void* &pData, size_t pDataSize)"
  },
  {
    "label": "FbxTypeDeallocate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL bool)",
    "insertText": "FbxTypeDeallocate(const EFbxType pType, void* pData)"
  },
  {
    "label": "FbxTypeDeallocate()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL bool)",
    "insertText": "FbxTypeDeallocate(const EFbxType pType, void* &pData, size_t pDataSize)"
  },
  {
    "label": "FbxTypeCompare()",
    "kind": "Method",
    "detail": "Function (FBXSDK_DLL bool)",
    "insertText": "FbxTypeCompare(const void* pA, const void* pB, const EFbxType pType)"
  }
]