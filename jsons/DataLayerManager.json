[
  {
    "label": "UDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerAsset"
  },
  {
    "label": "UDataLayerInstanceWithAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstanceWithAsset"
  },
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "UDataLayerLoadingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerLoadingPolicy"
  },
  {
    "label": "UExternalDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerAsset"
  },
  {
    "label": "ExternalDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExternalDataLayerInstance"
  },
  {
    "label": "UActorDescContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainer"
  },
  {
    "label": "UActorDescContainerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainerInstance"
  },
  {
    "label": "UCanvas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCanvas"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FDataLayersEditorBroadcast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayersEditorBroadcast"
  },
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FAutoConsoleCommand",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleCommand"
  },
  {
    "label": "FAutoConsoleCommandWithOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutoConsoleCommandWithOutputDevice"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "UDataLayerSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerSubsystem"
  },
  {
    "label": "UExternalDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerManager"
  },
  {
    "label": "UExternalDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerInstance"
  },
  {
    "label": "UWorldPartitionStreamingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionStreamingPolicy"
  },
  {
    "label": "UWorldPartitionRuntimeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeCell"
  },
  {
    "label": "UWorldPartitionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionSubsystem"
  },
  {
    "label": "FWorldPartitionDebugHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionDebugHelper"
  },
  {
    "label": "UVerseDataLayerManagerBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVerseDataLayerManagerBase"
  },
  {
    "label": "FWorldPartitionStreamingContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldPartitionStreamingContext"
  },
  {
    "label": "SDataLayerTreeLabel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDataLayerTreeLabel"
  },
  {
    "label": "IWorldPartitionActorLoaderInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWorldPartitionActorLoaderInterface"
  },
  {
    "label": "FWorldPartitionStreamingGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionStreamingGenerator"
  },
  {
    "label": "FWorldPartitionActorDesc",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWorldPartitionActorDesc"
  },
  {
    "label": "UWorldPartitionRuntimeSpatialHash",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeSpatialHash"
  },
  {
    "label": "UWorldPartitionRuntimeHashSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeHashSet"
  },
  {
    "label": "UWorldPartitionConvertCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionConvertCommandlet"
  },
  {
    "label": "FDataLayersBroadcast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayersBroadcast"
  },
  {
    "label": "FDataLayerUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerUtils"
  },
  {
    "label": "FDataLayerMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerMode"
  },
  {
    "label": "FDataLayerHierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerHierarchy"
  },
  {
    "label": "FActorBrowsingMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorBrowsingMode"
  },
  {
    "label": "UDataLayerEditorSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerEditorSubsystem"
  },
  {
    "label": "UActorPartitionSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorPartitionSubsystem"
  },
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" WorldPartition / WorldPartition . h \" # include \" WorldPartition / WorldPartitionHandle . h \" # include \" WorldPartition / WorldPartitionHelpers . h \" # include \" WorldPartition / DataLayer / ActorDataLayer . h \" # include \" WorldPartition / DataLayer / DataLayerInstance . h \" # include \" WorldPartition / DataLayer / DataLayerEditorContext . h \" # include \" WorldPartition / DataLayer / WorldDataLayers . h \" # include \" WorldPartition / DataLayer / ExternalDataLayerInstance . h \" # include \" Templates / SubclassOf . h \" # include \" DataLayerManager . generated . h \" class UDataLayerAsset ; class UDataLayerInstanceWithAsset ; class UDataLayerInstance ; class UDataLayerLoadingPolicy ; class UExternalDataLayerAsset ; class ExternalDataLayerInstance ; class UActorDescContainer ; class UActorDescContainerInstance ; class UCanvas ; class UWorld ;)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnDataLayerInstanceRuntimeStateChanged, const UDataLayerInstance*, DataLayer, EDataLayerRuntimeState, State)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR class FDataLayersEditorBroadcast { public : FDataLayersEditorBroadcast&)",
    "insertText": "Get()"
  },
  {
    "label": "StaticOnActorDataLayersEditorLoadingStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticOnActorDataLayersEditorLoadingStateChanged(bool bIsFromUserChange)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(FDataLayersEditorBroadcast, FOnActorDataLayersEditorLoadingStateChanged, bool)"
  },
  {
    "label": "OnActorDataLayersEditorLoadingStateChanged()",
    "kind": "Method",
    "detail": "Function (FOnActorDataLayersEditorLoadingStateChanged&)",
    "insertText": "OnActorDataLayersEditorLoadingStateChanged()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: template <class T> static UDataLayerManager* GetDataLayerManager(const T* InObject)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (UWorldPartition* WorldPartition =)",
    "insertText": "IsValid(InObject) ? FWorldPartitionHelpers::GetWorldPartition(InObject)"
  },
  {
    "label": "GetDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (template<class T> const UDataLayerInstance*)",
    "insertText": "GetDataLayerInstance(const T& InDataLayerIdentifier)"
  },
  {
    "label": "GetDataLayerInstances()",
    "kind": "Method",
    "detail": "Function (template<class T> TArray<const UDataLayerInstance*>)",
    "insertText": "GetDataLayerInstances(const TArray<T>& InDataLayerIdentifiers)"
  },
  {
    "label": "GetDataLayerInstanceNames()",
    "kind": "Method",
    "detail": "Function (template<class T> TArray<FName>)",
    "insertText": "GetDataLayerInstanceNames(const TArray<T>& InDataLayerIdentifiers)"
  },
  {
    "label": "ForEachDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachDataLayerInstance(TFunctionRef<bool(UDataLayerInstance*)> Func)"
  },
  {
    "label": "GetEffectiveActiveDataLayerNames()",
    "kind": "Method",
    "detail": "Function (const TSet<FName>&)",
    "insertText": "GetEffectiveActiveDataLayerNames()"
  },
  {
    "label": "GetEffectiveLoadedDataLayerNames()",
    "kind": "Method",
    "detail": "Function (const TSet<FName>&)",
    "insertText": "GetEffectiveLoadedDataLayerNames()"
  },
  {
    "label": "IsAnyDataLayerInEffectiveRuntimeState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyDataLayerInEffectiveRuntimeState(TArrayView<const FName> InDataLayerNames, EDataLayerRuntimeState InState)"
  },
  {
    "label": "IsAllDataLayerInEffectiveRuntimeState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllDataLayerInEffectiveRuntimeState(TArrayView<const FName> InDataLayerNames, EDataLayerRuntimeState InState)"
  },
  {
    "label": "UDataLayerManager()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "UDataLayerManager()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "DeInitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeInitialize()"
  },
  {
    "label": "DrawDataLayersStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawDataLayersStatus(UCanvas* Canvas, FVector2D& Offset)"
  },
  {
    "label": "DumpDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpDataLayers(FOutputDevice& OutputDevice)"
  },
  {
    "label": "ConvertArgsToDataLayers()",
    "kind": "Method",
    "detail": "Function (TArray<UDataLayerInstance*>)",
    "insertText": "ConvertArgsToDataLayers(const TArray<FString>& InArgs)"
  },
  {
    "label": "AddReferencedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObject(UObject* InObject)"
  },
  {
    "label": "RemoveReferencedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveReferencedObject(UObject* InObject)"
  },
  {
    "label": "GetReferencedObjects()",
    "kind": "Method",
    "detail": "Function (const TSet<TObjectPtr<UObject>>&)",
    "insertText": "GetReferencedObjects()"
  },
  {
    "label": "GetDataLayerInstanceFromAssetName()",
    "kind": "Method",
    "detail": "Function (const UDataLayerInstance*)",
    "insertText": "GetDataLayerInstanceFromAssetName(const FName& InDataLayerAssetPathName)"
  },
  {
    "label": "BroadcastOnDataLayerInstanceRuntimeStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastOnDataLayerInstanceRuntimeStateChanged(const UDataLayerInstance* InDataLayer, EDataLayerRuntimeState InState)"
  },
  {
    "label": "IsAnyDataLayerInEffectiveRuntimeState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAnyDataLayerInEffectiveRuntimeState(TArrayView<const FName> InDataLayerNames, EDataLayerRuntimeState InState, const FWorldDataLayersEffectiveStates& InEffectiveStates)"
  },
  {
    "label": "IsAllDataLayerInEffectiveRuntimeState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAllDataLayerInEffectiveRuntimeState(TArrayView<const FName> InDataLayerNames, EDataLayerRuntimeState InState, const FWorldDataLayersEffectiveStates& InEffectiveStates)"
  },
  {
    "label": "PushActorEditorContext()",
    "kind": "Method",
    "detail": "Function (class FAutoConsoleCommand ToggleDataLayerActivation ; class FAutoConsoleCommand SetDataLayerRuntimeStateCommand ; class FAutoConsoleCommandWithOutputDevice DumpDataLayersCommand ; TMap<const UDataLayerInstance*,double> ActiveDataLayersLoadTime ; class UWorldPartition ; class AWorldDataLayers ; class UDataLayerSubsystem ; class UDataLayerInstanceWithAsset ; class UExternalDataLayerManager ; class UExternalDataLayerInstance ; class UWorldPartitionStreamingPolicy ; class UWorldPartitionRuntimeCell ; class UWorldPartitionSubsystem ; class FWorldPartitionDebugHelper ; class UVerseDataLayerManagerBase ; struct FWorldPartitionStreamingContext ; # if WITH_EDITOR private : void)",
    "insertText": "PushActorEditorContext(bool bDuplicateContext)"
  },
  {
    "label": "PopActorEditorContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopActorEditorContext()"
  },
  {
    "label": "GetActorEditorContextDataLayers()",
    "kind": "Method",
    "detail": "Function (TArray<UDataLayerInstance*>)",
    "insertText": "GetActorEditorContextDataLayers()"
  },
  {
    "label": "GetActorEditorContextWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (TArray<AWorldDataLayers*>)",
    "insertText": "GetActorEditorContextWorldDataLayers()"
  },
  {
    "label": "GetDataLayerEditorContextHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetDataLayerEditorContextHash()"
  },
  {
    "label": "CanResolveDataLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanResolveDataLayers()"
  },
  {
    "label": "ResolveActorDescContainersDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveActorDescContainersDataLayers()"
  },
  {
    "label": "OnActorDescContainerInstanceInitialized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorDescContainerInstanceInitialized(UActorDescContainerInstance* InActorDescContainerInstance)"
  },
  {
    "label": "ResolveActorDescContainerInstanceDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveActorDescContainerInstanceDataLayers(UActorDescContainerInstance* InActorDescContainerInstance)"
  },
  {
    "label": "ResolveActorDescInstanceDataLayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveActorDescInstanceDataLayers(FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "ResolveActorDescContainerInstanceDataLayersInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResolveActorDescContainerInstanceDataLayersInternal(UActorDescContainerInstance* InActorDescContainerInstance, FWorldPartitionActorDescInstance* InActorDescInstance)"
  },
  {
    "label": "LoadWorldDataLayersActor()",
    "kind": "Method",
    "detail": "Function (FWorldPartitionReference)",
    "insertText": "LoadWorldDataLayersActor(UActorDescContainerInstance* InActorDescContainerInstance)"
  },
  {
    "label": "GetDataLayerLoadingPolicyClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UDataLayerLoadingPolicy>)",
    "insertText": "GetDataLayerLoadingPolicyClass()"
  },
  {
    "label": "ResolveIsLoadedInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolveIsLoadedInEditor(const TArray<FName>& InDataLayerInstanceNames)"
  },
  {
    "label": "GetDataLayerInstanceWithAssetClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UDataLayerInstanceWithAsset>)",
    "insertText": "GetDataLayerInstanceWithAssetClass()"
  },
  {
    "label": "GetRuntimeDataLayerInstances()",
    "kind": "Method",
    "detail": "Function (TArray<const UDataLayerInstance*>)",
    "insertText": "GetRuntimeDataLayerInstances(const TArray<FName>& InDataLayerInstanceNames)"
  },
  {
    "label": "UpdateDataLayerEditorPerProjectUserSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDataLayerEditorPerProjectUserSettings()"
  },
  {
    "label": "GetUserLoadedInEditorStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUserLoadedInEditorStates(TArray<FName>& OutDataLayersLoadedInEditor, TArray<FName>& OutDataLayersNotLoadedInEditor)"
  },
  {
    "label": "GetWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (AWorldDataLayers* WorldDataLayers =)",
    "insertText": "GetWorldDataLayers()"
  }
]