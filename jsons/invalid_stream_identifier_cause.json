[
  {
    "label": "InvalidStreamIdentifierCauseConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InvalidStreamIdentifierCauseConfig"
  },
  {
    "label": "InvalidStreamIdentifierCause",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InvalidStreamIdentifierCause"
  },
  {
    "label": "InvalidStreamIdentifierCause()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PACKET_ERROR_CAUSE_INVALID_STREAM_IDENTIFIER_CAUSE_H_ # define NET_DCSCTP_PACKET_ERROR_CAUSE_INVALID_STREAM_IDENTIFIER_CAUSE_H_ # include<stddef . h> # include<stdint . h> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" net / dcsctp / packet / error_cause / error_cause . h \" # include \" net / dcsctp / packet / tlv_trait . h \" # include \" net / dcsctp / public / types . h \" namespace dcsctp { struct InvalidStreamIdentifierCauseConfig : public ParameterConfig { int kType = 1 ; size_t kHeaderSize = 8 ; size_t kVariableLengthAlignment = 0 ; } ; class InvalidStreamIdentifierCause : public Parameter,public TLVTrait<InvalidStreamIdentifierCauseConfig> { public : int kType = InvalidStreamIdentifierCauseConfig::kType ;)",
    "insertText": "InvalidStreamIdentifierCause(StreamID stream_id) : stream_id_(stream_id)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (} absl::optional<InvalidStreamIdentifierCause>)",
    "insertText": "Parse(rtc::ArrayView<const uint8_t> data)"
  },
  {
    "label": "SerializeTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeTo(std::vector<uint8_t>& out)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToString()"
  },
  {
    "label": "stream_id()",
    "kind": "Method",
    "detail": "Function (StreamID)",
    "insertText": "stream_id()"
  }
]