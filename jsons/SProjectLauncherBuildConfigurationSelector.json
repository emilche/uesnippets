[
  {
    "label": "SProjectLauncherBuildConfigurationSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProjectLauncherBuildConfigurationSelector"
  },
  {
    "label": "FConfigInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConfigInfo"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Layout / Margin . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / CoreStyle . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Textures / SlateIcon . h \" # include \" Framework / Commands / UIAction . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" Widgets / Input / SComboButton . h \" # include \" InstalledPlatformInfo . h \" # define LOCTEXT_NAMESPACE \" SProjectLauncherBuildConfigurationSelector \")",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSessionSProjectLauncherBuildConfigurationSelected, EBuildConfiguration)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "SLATE_BEGIN_ARGS(SProjectLauncherBuildConfigurationSelector)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnSessionSProjectLauncherBuildConfigurationSelected, OnConfigurationSelected) SLATE_ATTRIBUTE(FText, Text) SLATE_ATTRIBUTE(FSlateFontInfo, Font) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs)"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (OnConfigurationSelected = InArgs . _OnConfigurationSelected ; struct FConfigInfo { FText ToolTip ; EBuildConfiguration Configuration ; } ; const FConfigInfo Configurations [ ] = { {)",
    "insertText": "LOCTEXT(\"DebugActionHint\", \"Debug configuration.\")"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LOCTEXT(\"DebugGameActionHint\", \"DebugGame configuration.\")"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LOCTEXT(\"DevelopmentActionHint\", \"Development configuration.\")"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LOCTEXT(\"ShippingActionHint\", \"Shipping configuration.\")"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LOCTEXT(\"TestActionHint\", \"Test configuration.\")"
  },
  {
    "label": "MenuBuilder()",
    "kind": "Method",
    "detail": "Function (FMenuBuilder)",
    "insertText": "MenuBuilder(true, NULL)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function ({)",
    "insertText": "for(const FConfigInfo& ConfigInfo : Configurations)"
  },
  {
    "label": "UIAction()",
    "kind": "Method",
    "detail": "Function (FUIAction)",
    "insertText": "UIAction(FExecuteAction::CreateSP(this, &SProjectLauncherBuildConfigurationSelector::HandleMenuEntryClicked, ConfigInfo.Configuration))"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (MenuBuilder .)",
    "insertText": "AddMenuEntry(EBuildConfigurations::ToText(ConfigInfo.Configuration), ConfigInfo.ToolTip, FSlateIcon(), UIAction)"
  },
  {
    "label": "IsSet()",
    "kind": "Method",
    "detail": "Function (} } } FSlateFontInfo TextFont = InArgs . _Font .)",
    "insertText": "IsSet() ? InArgs._Font.Get() : FCoreStyle::Get().GetFontStyle(TEXT(\"SmallFont\"))"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (ChildSlot [)",
    "insertText": "SNew(SComboButton) .VAlign(VAlign_Center) .ButtonContent() [ SNew(STextBlock) .Font(TextFont) .Text(InArgs._Text) ] .ContentPadding(FMargin(6.0f, 0.0f)) .MenuContent() [ MenuBuilder.MakeWidget()"
  },
  {
    "label": "HandleMenuEntryClicked()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "HandleMenuEntryClicked(EBuildConfiguration Configuration)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnConfigurationSelected .)",
    "insertText": "ExecuteIfBound(Configuration)"
  }
]