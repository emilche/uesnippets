[
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTCALC_H__ # define __FTCALC_H__ # include<ft2build . h> # include FT_FREETYPE_H FT_BEGIN_HEADER)",
    "insertText": "FT_BASE(FT_Int32 ) FT_SqrtFixed( FT_Int32 x)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (# ifdef FT_CONFIG_OPTION_OLD_INTERNALS)",
    "insertText": "FT_EXPORT(FT_Int32 ) FT_Sqrt32( FT_Int32 x)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "FT_BASE(FT_Long ) FT_MulDiv_No_Round( FT_Long a, FT_Long b, FT_Long c)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(void ) FT_Matrix_Multiply_Scaled( const FT_Matrix* a, FT_Matrix *b, FT_Long scaling)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(void ) FT_Vector_Transform_Scaled( FT_Vector* vector, const FT_Matrix* matrix, FT_Long scaling)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(FT_Int ) ft_corner_orientation( FT_Pos in_x, FT_Pos in_y, FT_Pos out_x, FT_Pos out_y)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(FT_Int ) ft_corner_is_flat( FT_Pos in_x, FT_Pos in_y, FT_Pos out_x, FT_Pos out_y)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(FT_Int ) FT_MSB( FT_UInt32 z)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(FT_Fixed ) FT_Hypot( FT_Fixed x, FT_Fixed y)"
  }
]