[
  {
    "label": "FContentBrowserItemData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBrowserItemData"
  },
  {
    "label": "FTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTreeItem"
  },
  {
    "label": "FTreeItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTreeItem"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (items)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FSortTreeItemChildrenDelegate, const FTreeItem* /* OptionalOwner */, TArray<TSharedPtr<FTreeItem>>& /* Items to sort */)"
  },
  {
    "label": "DefaultSort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DefaultSort(TArray<TSharedPtr<FTreeItem>>& InChildren)"
  },
  {
    "label": "FTreeItem()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTreeItem(FContentBrowserItem&& InItem)"
  },
  {
    "label": "FTreeItem()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTreeItem(const FContentBrowserItem& InItem)"
  },
  {
    "label": "FTreeItem()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTreeItem(FContentBrowserItemData&& InItemData)"
  },
  {
    "label": "FTreeItem()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FTreeItem(const FContentBrowserItemData& InItemData)"
  },
  {
    "label": "SetItemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemData(FContentBrowserItem InItem)"
  },
  {
    "label": "AppendItemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendItemData(const FContentBrowserItem& InItem)"
  },
  {
    "label": "AppendItemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendItemData(const FContentBrowserItemData& InItemData)"
  },
  {
    "label": "RemoveItemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveItemData(const FContentBrowserItem& InItem)"
  },
  {
    "label": "RemoveItemData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveItemData(const FContentBrowserItemData& InItemData)"
  },
  {
    "label": "RemoveItemData()",
    "kind": "Method",
    "detail": "Function (FContentBrowserItemData)",
    "insertText": "RemoveItemData(const FContentBrowserMinimalItemData& InItemKey)"
  },
  {
    "label": "SetVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVisible(bool bInIsVisible)"
  },
  {
    "label": "SetHasVisibleDescendants()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasVisibleDescendants(bool bValue)"
  },
  {
    "label": "SetNamingFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNamingFolder(const bool InNamingFolder)"
  },
  {
    "label": "IsChildOf()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsChildOf(const FTreeItem& InParent)"
  },
  {
    "label": "AddChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddChild(const TSharedRef<FTreeItem>& InChild)"
  },
  {
    "label": "RemoveChild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChild(const TSharedRef<FTreeItem>& InChild)"
  },
  {
    "label": "RemoveAllChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllChildren()"
  },
  {
    "label": "FindItemRecursive()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTreeItem>)",
    "insertText": "FindItemRecursive(const FName InFullPath)"
  },
  {
    "label": "RequestSortChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSortChildren()"
  },
  {
    "label": "GetSortedVisibleChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSortedVisibleChildren(TArray<TSharedPtr<FTreeItem>>& OutChildren)"
  }
]