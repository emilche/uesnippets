[
  {
    "label": "FAllocationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocationInfo"
  },
  {
    "label": "FCombinedAllocationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCombinedAllocationInfo"
  },
  {
    "label": "FNodeAllocationInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeAllocationInfo"
  },
  {
    "label": "FRawStatsMemoryProfiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRawStatsMemoryProfiler"
  },
  {
    "label": "FStatsReader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatsReader"
  },
  {
    "label": "SortBySize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortBySize()"
  },
  {
    "label": "PrepareCallstackData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareCallstackData( const TArray<FName>& InDecodedCallstack )"
  },
  {
    "label": "UpdateGenerateMemoryMapProgress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGenerateMemoryMapProgress( const int32 AllocationIndex )"
  },
  {
    "label": "SortSequenceAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortSequenceAllocations()"
  },
  {
    "label": "GenerateAllocationMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateAllocationMap()"
  },
  {
    "label": "ProcessAlloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAlloc( const FAllocationInfo& AllocInfo, TMap<uint64, FAllocationInfo>& AllocationMap )"
  },
  {
    "label": "ProcessFree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFree( const FAllocationInfo& FreeInfo, TMap<uint64, FAllocationInfo>& AllocationMap, const bool bReallocFree )"
  },
  {
    "label": "DumpDebugAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpDebugAllocations()"
  },
  {
    "label": "FreeDebugInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeDebugInformation()"
  },
  {
    "label": "ProcessAndDumpUObjectAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAndDumpUObjectAllocations( const FName SnapshotName )"
  },
  {
    "label": "DumpScopedAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpScopedAllocations( const TCHAR* Name, const TMap<FString, FCombinedAllocationInfo>& CombinedAllocations )"
  },
  {
    "label": "GenerateScopedAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateScopedAllocations( const TMap<uint64, FAllocationInfo>& InAllocationMap, TMap<FName, FCombinedAllocationInfo>& out_CombinedAllocations, uint64& TotalAllocatedMemory, uint64& NumAllocations )"
  },
  {
    "label": "GenerateScopedTreeAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateScopedTreeAllocations( const TMap<FName, FCombinedAllocationInfo>& ScopedAllocations, FNodeAllocationInfo& out_Root )"
  },
  {
    "label": "PrepareSnapshot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareSnapshot( const FName SnapshotName, const TMap<uint64, FAllocationInfo>& InAllocationMap )"
  },
  {
    "label": "CompareSnapshots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompareSnapshots( const FName BeginSnaphotName, const FName EndSnaphotName, TMap<FName, FCombinedAllocationInfo>& out_Result )"
  },
  {
    "label": "CompareSnapshotsHumanReadable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompareSnapshotsHumanReadable( const FName BeginSnaphotName, const FName EndSnaphotName, TMap<FString, FCombinedAllocationInfo>& out_Result )"
  }
]