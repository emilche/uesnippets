[
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "FBlueprintActionUiSpec",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintActionUiSpec"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "NodeType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NodeType"
  },
  {
    "label": "FBlueprintActionUiSpec()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" BlueprintActionFilter . h \" # include \" BlueprintNodeBinder . h \" # include \" BlueprintNodeSignature . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" EdGraph / EdGraphNode . h \" # include \" Internationalization / Text . h \" # include \" Math / Color . h \" # include \" Math / Vector2D . h \" # include \" Templates / Casts . h \" # include \" Templates / SubclassOf . h \" # include \" Templates / UnrealTemplate . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" BlueprintNodeSpawner . generated . h \" class UEdGraph ; class UEdGraphNode ; struct FBlueprintActionUiSpec {)",
    "insertText": "FBlueprintActionUiSpec() : IconTint(FLinearColor::White)"
  },
  {
    "label": "FBlueprintActionUiSpec()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBlueprintActionUiSpec(FBlueprintActionUiSpec&& Other)"
  },
  {
    "label": "Move()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Move(Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FBlueprintActionUiSpec&)",
    "insertText": "operator(FBlueprintActionUiSpec&& Other)"
  },
  {
    "label": "FBlueprintActionUiSpec()",
    "kind": "Method",
    "detail": "Function (} return* this ; })",
    "insertText": "FBlueprintActionUiSpec(const FBlueprintActionUiSpec& Other)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Copy(Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FBlueprintActionUiSpec&)",
    "insertText": "operator(const FBlueprintActionUiSpec& Other)"
  },
  {
    "label": "FBlueprintActionUiSpec()",
    "kind": "Method",
    "detail": "Function (} return* this ; } ~)",
    "insertText": "FBlueprintActionUiSpec()"
  },
  {
    "label": "Move()",
    "kind": "Method",
    "detail": "Function (} FText MenuName ; FText Category ; FText Tooltip ; FText Keywords ; FSlateIcon Icon ; FLinearColor IconTint ; FString DocLink ; FString DocExcerptTag ; private : void)",
    "insertText": "Move(FBlueprintActionUiSpec& Other)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (MenuName =)",
    "insertText": "MoveTemp(Other.MenuName)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Category =)",
    "insertText": "MoveTemp(Other.Category)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Tooltip =)",
    "insertText": "MoveTemp(Other.Tooltip)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Keywords =)",
    "insertText": "MoveTemp(Other.Keywords)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (Icon =)",
    "insertText": "MoveTemp(Other.Icon)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (IconTint =)",
    "insertText": "MoveTemp(Other.IconTint)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Copy(const FBlueprintActionUiSpec& Other)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (MenuName = Other . MenuName ; Category = Other . Category ; Tooltip = Other . Tooltip ; Keywords = Other . Keywords ; Icon = Other . Icon ; IconTint = Other . IconTint ; DocLink = Other . DocLink ; DocExcerptTag = Other . DocExcerptTag ; } } ;)",
    "insertText": "UCLASS(Transient)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() DECLARE_DELEGATE_TwoParams(FCustomizeNodeDelegate, UEdGraphNode*, bool)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FUiSpecOverrideDelegate, FBlueprintActionContext const&, FBindingSet const&, FBlueprintActionUiSpec*)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (public : UBlueprintNodeSpawner*)",
    "insertText": "Create(TSubclassOf<UEdGraphNode> const NodeClass, UObject* Outer = nullptr, FCustomizeNodeDelegate PostSpawnDelegate = FCustomizeNodeDelegate())"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (template<class NodeType> UBlueprintNodeSpawner*)",
    "insertText": "Create(UObject* Outer = nullptr, FCustomizeNodeDelegate PostSpawnDelegate = FCustomizeNodeDelegate())"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (FBlueprintActionUiSpec DefaultMenuSignature ; FCustomizeNodeDelegate CustomizeNodeDelegate ; FUiSpecOverrideDelegate DynamicUiSignatureGetter ; void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "Prime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Prime()"
  },
  {
    "label": "PrimeDefaultUiSpec()",
    "kind": "Method",
    "detail": "Function (FBlueprintActionUiSpec const&)",
    "insertText": "PrimeDefaultUiSpec(UEdGraph* TargetGraph = nullptr)"
  },
  {
    "label": "GetSpawnerSignature()",
    "kind": "Method",
    "detail": "Function (FBlueprintNodeSignature)",
    "insertText": "GetSpawnerSignature()"
  },
  {
    "label": "GetUiSpec()",
    "kind": "Method",
    "detail": "Function (FBlueprintActionUiSpec)",
    "insertText": "GetUiSpec(FBlueprintActionContext const& Context, FBindingSet const& Bindings)"
  },
  {
    "label": "Invoke()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode*)",
    "insertText": "Invoke(UEdGraph* ParentGraph, FBindingSet const& Bindings, FVector2D const Location)"
  },
  {
    "label": "GetCachedTemplateNode()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode*)",
    "insertText": "GetCachedTemplateNode()"
  },
  {
    "label": "GetTemplateNode()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode*)",
    "insertText": "GetTemplateNode(UEdGraph* TargetGraph = nullptr, FBindingSet const& Bindings = FBindingSet())"
  },
  {
    "label": "ClearCachedTemplateNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedTemplateNode()"
  },
  {
    "label": "IsTemplateNodeFilteredOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTemplateNodeFilteredOut(FBlueprintActionFilter const& Filter)"
  },
  {
    "label": "IsBindingCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBindingCompatible(FBindingObject BindingCandidate)"
  },
  {
    "label": "SpawnNode()",
    "kind": "Method",
    "detail": "Function (template<class NodeType> NodeType*)",
    "insertText": "SpawnNode(UEdGraph* ParentGraph, FBindingSet const& Bindings, FVector2D const Location, FCustomizeNodeDelegate PostSpawnDelegate)"
  },
  {
    "label": "SpawnEdGraphNode()",
    "kind": "Method",
    "detail": "Function (private : UEdGraphNode*)",
    "insertText": "SpawnEdGraphNode(TSubclassOf<UEdGraphNode> NodeClass, UEdGraph* ParentGraph, const FBindingSet& Bindings, FVector2D Location, FCustomizeNodeDelegate PostSpawnDelegate)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; template<class NodeType> UBlueprintNodeSpawner*)",
    "insertText": "Create(UObject* Outer, FCustomizeNodeDelegate PostSpawnDelegate)"
  },
  {
    "label": "SpawnNode()",
    "kind": "Method",
    "detail": "Function (} template<class NodeType> NodeType*)",
    "insertText": "SpawnNode(TSubclassOf<UEdGraphNode> InNodeClass, UEdGraph* ParentGraph, FBindingSet const& Bindings, FVector2D const Location, FCustomizeNodeDelegate PostSpawnDelegate)"
  }
]