[
  {
    "label": "swap_endian_16()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VPX_PORTS_MEM_OPS_ALIGNED_H_ # define VPX_VPX_PORTS_MEM_OPS_ALIGNED_H_ # include \" vpx / vpx_integer . h \" # ifndef INCLUDED_BY_MEM_OPS_H # error Include mem_ops . h,not mem_ops_aligned . h directly . # endif # define)",
    "insertText": "swap_endian_16(val, raw)"
  },
  {
    "label": "val()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "val(uint16_t)(((raw >> 8) & 0x00ff) | ((raw << 8) & 0xff00))"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define swap_endian_32(val, raw)"
  },
  {
    "label": "val()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "val((raw >> 24) & 0x000000ff) | ((raw >> 8) & 0x0000ff00) | \\ ((raw << 8) & 0x00ff0000) | ((raw << 24) & 0xff000000)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define swap_endian_16_se(val, raw)"
  },
  {
    "label": "val()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "val((val << 16) >> 16)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (\\ })",
    "insertText": "while(0) #define swap_endian_32_se(val, raw) swap_endian_32(val, raw) #define mem_get_ne_aligned_generic(end, sz) \\ static VPX_INLINE unsigned MEM_VALUE_T mem_get_##end##sz##_aligned( \\ const void *vmem)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (\\ const uint # # sz # # _t*)",
    "insertText": "mem(const uint##sz##_t *)"
  },
  {
    "label": "mem_get_sne_aligned_generic()",
    "kind": "Method",
    "detail": "Function (\\ return* mem ; \\ } # define)",
    "insertText": "mem_get_sne_aligned_generic(end, sz) \\ static VPX_INLINE signed MEM_VALUE_T mem_get_s##end##sz##_aligned( \\ const void *vmem)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (\\ const int # # sz # # _t*)",
    "insertText": "mem(const int##sz##_t *)"
  },
  {
    "label": "mem_get_se_aligned_generic()",
    "kind": "Method",
    "detail": "Function (\\ return* mem ; \\ } # define)",
    "insertText": "mem_get_se_aligned_generic(end, sz) \\ static VPX_INLINE unsigned MEM_VALUE_T mem_get_##end##sz##_aligned( \\ const void *vmem)"
  },
  {
    "label": "sz()",
    "kind": "Method",
    "detail": "Function (\\ unsigned MEM_VALUE_T val,raw =* mem ; \\ swap_endian_ # #)",
    "insertText": "sz(val, raw)"
  },
  {
    "label": "mem_get_sse_aligned_generic()",
    "kind": "Method",
    "detail": "Function (\\ return val ; \\ } # define)",
    "insertText": "mem_get_sse_aligned_generic(end, sz) \\ static VPX_INLINE signed MEM_VALUE_T mem_get_s##end##sz##_aligned( \\ const void *vmem)"
  },
  {
    "label": "_se()",
    "kind": "Method",
    "detail": "Function (\\ unsigned MEM_VALUE_T val,raw =* mem ; \\ swap_endian_ # # sz # #)",
    "insertText": "_se(val, raw)"
  },
  {
    "label": "mem_put_ne_aligned_generic()",
    "kind": "Method",
    "detail": "Function (\\ return val ; \\ } # define)",
    "insertText": "mem_put_ne_aligned_generic(end, sz) \\ static VPX_INLINE void mem_put_##end##sz##_aligned(void *vmem, \\ MEM_VALUE_T val)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (\\ uint # # sz # # _t*)",
    "insertText": "mem(uint##sz##_t *)"
  },
  {
    "label": "mem()",
    "kind": "Method",
    "detail": "Function (\\*)",
    "insertText": "mem(uint##sz##_t)"
  },
  {
    "label": "mem_put_se_aligned_generic()",
    "kind": "Method",
    "detail": "Function (\\ } # define)",
    "insertText": "mem_put_se_aligned_generic(end, sz) \\ static VPX_INLINE void mem_put_##end##sz##_aligned(void *vmem, \\ MEM_VALUE_T val)"
  },
  {
    "label": "sz()",
    "kind": "Method",
    "detail": "Function (\\ swap_endian_ # #)",
    "insertText": "sz(raw, val)"
  }
]