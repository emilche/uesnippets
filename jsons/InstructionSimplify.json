[
  {
    "label": "ArrayRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ArrayRef"
  },
  {
    "label": "AssumptionCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssumptionCache"
  },
  {
    "label": "DominatorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DominatorTree"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "DataLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayout"
  },
  {
    "label": "FastMathFlags",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FastMathFlags"
  },
  {
    "label": "TargetLibraryInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLibraryInfo"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "hierarchy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "hierarchy"
  },
  {
    "label": "replaceAndRecursivelySimplify()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "replaceAndRecursivelySimplify(Instruction *I, Value *SimpleV,\n                                     const TargetLibraryInfo *TLI = nullptr,\n                                     const DominatorTree *DT = nullptr,\n                                     AssumptionCache *AC = nullptr)"
  },
  {
    "label": "recursivelySimplifyInstruction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "recursivelySimplifyInstruction(Instruction *I,\n                                      const TargetLibraryInfo *TLI = nullptr,\n                                      const DominatorTree *DT = nullptr,\n                                      AssumptionCache *AC = nullptr)"
  }
]