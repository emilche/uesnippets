[
  {
    "label": "BAUECompressAllocFnType()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<stdint . h> typedef void*)",
    "insertText": "BAUECompressAllocFnType(uintptr_t ByteCount)"
  },
  {
    "label": "BAUECompressFreeFnType()",
    "kind": "Method",
    "detail": "Function (typedef void)",
    "insertText": "BAUECompressFreeFnType(void* Ptr)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# define BINKA_COMPRESS_SUCCESS 0 # define BINKA_COMPRESS_ERROR_CHANS 1 # define BINKA_COMPRESS_ERROR_SAMPLES 2 # define BINKA_COMPRESS_ERROR_RATE 3 # define BINKA_COMPRESS_ERROR_QUALITY 4 # define BINKA_COMPRESS_ERROR_ALLOCATORS 5 # define BINKA_COMPRESS_ERROR_OUTPUT 6 # define BINKA_COMPRESS_ERROR_SEEKTABLE 7 # define BINKA_COMPRESS_ERROR_SIZE 8 # define BINKA_MAX_CHANS_STR)",
    "insertText": "TEXT(\"16\") #define BINKA_MIN_RATE_STR TEXT(\"2 khz\") #define BINKA_MAX_RATE_STR TEXT(\"256 khz\") uint8_t UECompressBinkAudio( void* PcmData, uint32_t PcmDataLen, uint32_t PcmRate, uint8_t PcmChannels, uint8_t Quality, uint8_t GenerateSeekTable, uint16_t SeekTableMaxEntries, BAUECompressAllocFnType* MemAlloc, BAUECompressFreeFnType* MemFree, void** OutData, uint32_t* OutDataLen)"
  }
]