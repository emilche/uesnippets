[
  {
    "label": "TTC_HeaderRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTC_HeaderRec_"
  },
  {
    "label": "SFNT_HeaderRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SFNT_HeaderRec_"
  },
  {
    "label": "TT_TableRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_TableRec_"
  },
  {
    "label": "TT_LongMetricsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_LongMetricsRec_"
  },
  {
    "label": "TT_NameEntryRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_NameEntryRec_"
  },
  {
    "label": "TT_NameTableRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_NameTableRec_"
  },
  {
    "label": "TT_GaspRangeRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_GaspRangeRec_"
  },
  {
    "label": "TT_Gasp_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_Gasp_"
  },
  {
    "label": "TT_HdmxEntryRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_HdmxEntryRec_"
  },
  {
    "label": "TT_HdmxRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_HdmxRec_"
  },
  {
    "label": "TT_Kern0_PairRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_Kern0_PairRec_"
  },
  {
    "label": "TT_SBit_MetricsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_MetricsRec_"
  },
  {
    "label": "TT_SBit_Small_Metrics_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_Small_Metrics_"
  },
  {
    "label": "TT_SBit_LineMetricsRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_LineMetricsRec_"
  },
  {
    "label": "TT_SBit_RangeRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_RangeRec_"
  },
  {
    "label": "TT_SBit_StrikeRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_StrikeRec_"
  },
  {
    "label": "TT_SBit_ComponentRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_ComponentRec_"
  },
  {
    "label": "TT_SBit_ScaleRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_SBit_ScaleRec_"
  },
  {
    "label": "TT_Post_20Rec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_Post_20Rec_"
  },
  {
    "label": "TT_Post_25_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_Post_25_"
  },
  {
    "label": "TT_Post_NamesRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_Post_NamesRec_"
  },
  {
    "label": "GX_BlendRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GX_BlendRec_"
  },
  {
    "label": "TT_BDFRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_BDFRec_"
  },
  {
    "label": "TT_FaceRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_FaceRec_"
  },
  {
    "label": "TT_LoaderRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_LoaderRec_"
  },
  {
    "label": "TT_GlyphZoneRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_GlyphZoneRec_"
  },
  {
    "label": "TT_ExecContextRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TT_ExecContextRec_"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (# ifndef __TTTYPES_H__ # define __TTTYPES_H__ # include<ft2build . h> # include FT_TRUETYPE_TABLES_H # include FT_INTERNAL_OBJECTS_H # ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT # include FT_MULTIPLE_MASTERS_H # endif FT_BEGIN_HEADER typedef struct TTC_HeaderRec_ { FT_ULong tag ; FT_Fixed version ; FT_Long count ; FT_ULong* offsets ; } TTC_HeaderRec ; typedef struct SFNT_HeaderRec_ { FT_ULong format_tag ; FT_UShort num_tables ; FT_UShort search_range ; FT_UShort entry_selector ; FT_UShort range_shift ; FT_ULong offset ; } SFNT_HeaderRec,* SFNT_Header ; typedef struct TT_TableRec_ { FT_ULong Tag ; FT_ULong CheckSum ; FT_ULong Offset ; FT_ULong Length ; } TT_TableRec,* TT_Table ; typedef struct TT_LongMetricsRec_ { FT_UShort advance ; FT_Short bearing ; } TT_LongMetricsRec,* TT_LongMetrics ; typedef FT_Short TT_ShortMetrics ; typedef struct TT_NameEntryRec_ { FT_UShort platformID ; FT_UShort encodingID ; FT_UShort languageID ; FT_UShort nameID ; FT_UShort stringLength ; FT_ULong stringOffset ; FT_Byte* string ; } TT_NameEntryRec,* TT_NameEntry ; typedef struct TT_NameTableRec_ { FT_UShort format ; FT_UInt numNameRecords ; FT_UInt storageOffset ; TT_NameEntryRec* names ; FT_Stream stream ; } TT_NameTableRec,* TT_NameTable ; typedef struct TT_GaspRangeRec_ { FT_UShort maxPPEM ; FT_UShort gaspFlag ; } TT_GaspRangeRec,* TT_GaspRange ; # define TT_GASP_GRIDFIT 0 x01 # define TT_GASP_DOGRAY 0 x02 typedef struct TT_Gasp_ { FT_UShort version ; FT_UShort numRanges ; TT_GaspRange gaspRanges ; } TT_GaspRec ; # ifdef FT_CONFIG_OPTION_OLD_INTERNALS typedef struct TT_HdmxEntryRec_ { FT_Byte ppem ; FT_Byte max_width ; FT_Byte* widths ; } TT_HdmxEntryRec,* TT_HdmxEntry ; typedef struct TT_HdmxRec_ { FT_UShort version ; FT_Short num_records ; TT_HdmxEntry records ; } TT_HdmxRec,* TT_Hdmx ; typedef struct TT_Kern0_PairRec_ { FT_UShort left ; FT_UShort right ; FT_FWord value ; } TT_Kern0_PairRec,* TT_Kern0_Pair ; # endif typedef struct TT_SBit_MetricsRec_ { FT_Byte height ; FT_Byte width ; FT_Char horiBearingX ; FT_Char horiBearingY ; FT_Byte horiAdvance ; FT_Char vertBearingX ; FT_Char vertBearingY ; FT_Byte vertAdvance ; } TT_SBit_MetricsRec,* TT_SBit_Metrics ; typedef struct TT_SBit_Small_Metrics_ { FT_Byte height ; FT_Byte width ; FT_Char bearingX ; FT_Char bearingY ; FT_Byte advance ; } TT_SBit_SmallMetricsRec,* TT_SBit_SmallMetrics ; typedef struct TT_SBit_LineMetricsRec_ { FT_Char ascender ; FT_Char descender ; FT_Byte max_width ; FT_Char caret_slope_numerator ; FT_Char caret_slope_denominator ; FT_Char caret_offset ; FT_Char min_origin_SB ; FT_Char min_advance_SB ; FT_Char max_before_BL ; FT_Char min_after_BL ; FT_Char pads [ 2 ] ; } TT_SBit_LineMetricsRec,* TT_SBit_LineMetrics ; typedef struct TT_SBit_RangeRec_ { FT_UShort first_glyph ; FT_UShort last_glyph ; FT_UShort index_format ; FT_UShort image_format ; FT_ULong image_offset ; FT_ULong image_size ; TT_SBit_MetricsRec metrics ; FT_ULong num_glyphs ; FT_ULong* glyph_offsets ; FT_UShort* glyph_codes ; FT_ULong table_offset ; } TT_SBit_RangeRec,* TT_SBit_Range ; typedef struct TT_SBit_StrikeRec_ { FT_Int num_ranges ; TT_SBit_Range sbit_ranges ; FT_ULong ranges_offset ; FT_ULong color_ref ; TT_SBit_LineMetricsRec hori ; TT_SBit_LineMetricsRec vert ; FT_UShort start_glyph ; FT_UShort end_glyph ; FT_Byte x_ppem ; FT_Byte y_ppem ; FT_Byte bit_depth ; FT_Char flags ; } TT_SBit_StrikeRec,* TT_SBit_Strike ; typedef struct TT_SBit_ComponentRec_ { FT_UShort glyph_code ; FT_Char x_offset ; FT_Char y_offset ; } TT_SBit_ComponentRec,* TT_SBit_Component ; typedef struct TT_SBit_ScaleRec_ { TT_SBit_LineMetricsRec hori ; TT_SBit_LineMetricsRec vert ; FT_Byte x_ppem ; FT_Byte y_ppem ; FT_Byte x_ppem_substitute ; FT_Byte y_ppem_substitute ; } TT_SBit_ScaleRec,* TT_SBit_Scale ; typedef struct TT_Post_20Rec_ { FT_UShort num_glyphs ; FT_UShort num_names ; FT_UShort* glyph_indices ; FT_Char** glyph_names ; } TT_Post_20Rec,* TT_Post_20 ; typedef struct TT_Post_25_ { FT_UShort num_glyphs ; FT_Char* offsets ; } TT_Post_25Rec,* TT_Post_25 ; typedef struct TT_Post_NamesRec_ { FT_Bool loaded ; union { TT_Post_20Rec format_20 ; TT_Post_25Rec format_25 ; } names ; } TT_Post_NamesRec,* TT_Post_Names ; # ifdef TT_CONFIG_OPTION_GX_VAR_SUPPORT typedef struct GX_BlendRec_* GX_Blend ; # endif # ifdef TT_CONFIG_OPTION_BDF typedef struct TT_BDFRec_ { FT_Byte* table ; FT_Byte* table_end ; FT_Byte* strings ; FT_ULong strings_size ; FT_UInt num_strikes ; FT_Bool loaded ; } TT_BDFRec,* TT_BDF ; # endif typedef struct TT_FaceRec_* TT_Face ; typedef)",
    "insertText": "FT_Error(*TT_Interpreter)( void* exec_context)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef struct TT_LoaderRec_* TT_Loader ; typedef)",
    "insertText": "FT_Error(*TT_Loader_GotoTableFunc)( TT_Face face, FT_ULong tag, FT_Stream stream, FT_ULong* length)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*TT_Loader_StartGlyphFunc)( TT_Loader loader, FT_UInt glyph_index, FT_ULong offset, FT_UInt byte_count)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*TT_Loader_ReadGlyphFunc)( TT_Loader loader)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*TT_Loader_EndGlyphFunc)( TT_Loader loader)"
  }
]