[
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "MemCpyInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemCpyInst"
  },
  {
    "label": "DxilTypeSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilTypeSystem"
  },
  {
    "label": "PointerStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PointerStatus"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "analyze()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" llvm / ADT / SetVector . h \" namespace llvm { class Function ; class Value ; class MemCpyInst ; } namespace hlsl { class DxilTypeSystem ; namespace hlutil { struct PointerStatus { enum class StoredType { NotStored,InitializerStored,StoredOnce,MemcopyDestOnce,Stored } storedType ; enum class LoadedType { NotLoaded,MemcopySrcOnce,Loaded } loadedType ; llvm::Value* StoredOnceValue ; llvm::SetVector<llvm::MemCpyInst*> memcpySet ; llvm::MemCpyInst* StoringMemcpy ; llvm::MemCpyInst* LoadingMemcpy ; const llvm::Function* AccessingFunction ; bool HasMultipleAccessingFunctions ; unsigned Size ; llvm::Value* Ptr ; bool bLoadStoreOnly ; void)",
    "insertText": "analyze(DxilTypeSystem &typeSys, bool bStructElt)"
  },
  {
    "label": "PointerStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PointerStatus(llvm::Value *ptr, unsigned size, bool bLdStOnly)"
  },
  {
    "label": "MarkAsStored()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsStored()"
  },
  {
    "label": "MarkAsLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsLoaded()"
  },
  {
    "label": "HasStored()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasStored()"
  },
  {
    "label": "HasLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLoaded()"
  }
]