[
  {
    "label": "FileWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileWrapper"
  },
  {
    "label": "OpenReadOnly()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_SYSTEM_FILE_WRAPPER_H_ # define RTC_BASE_SYSTEM_FILE_WRAPPER_H_ # include<stddef . h> # include<stdio . h> # include<string> # include \" absl / strings / string_view . h \" namespace webrtc { class FileWrapper final { public : FileWrapper)",
    "insertText": "OpenReadOnly(absl::string_view file_name_utf8)"
  },
  {
    "label": "OpenWriteOnly()",
    "kind": "Method",
    "detail": "Function (FileWrapper)",
    "insertText": "OpenWriteOnly(absl::string_view file_name_utf8, int* error = nullptr)"
  },
  {
    "label": "FileWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileWrapper()"
  },
  {
    "label": "FileWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileWrapper(FILE* file) : file_(file)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "FileWrapper()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FileWrapper(const FileWrapper&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FileWrapper&)",
    "insertText": "operator(const FileWrapper&)"
  },
  {
    "label": "FileWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FileWrapper(FileWrapper&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FileWrapper&)",
    "insertText": "operator(FileWrapper&&)"
  },
  {
    "label": "is_open()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "is_open()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (FILE*)",
    "insertText": "Release()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Flush()"
  },
  {
    "label": "Rewind()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Rewind()"
  },
  {
    "label": "SeekRelative()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SeekRelative(int64_t offset)"
  },
  {
    "label": "SeekTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SeekTo(int64_t position)"
  },
  {
    "label": "FileSize()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "FileSize()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Read(void* buf, size_t length)"
  },
  {
    "label": "ReadEof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadEof()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(const void* buf, size_t length)"
  }
]