[
  {
    "label": "TIoStatusOr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TIoStatusOr"
  },
  {
    "label": "FIoBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoBuffer"
  },
  {
    "label": "EAssumeOwnershipTag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAssumeOwnershipTag"
  },
  {
    "label": "ECloneTag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECloneTag"
  },
  {
    "label": "EWrapTag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EWrapTag"
  },
  {
    "label": "BufCore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BufCore"
  },
  {
    "label": "FIoBufferManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoBufferManager"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Memory / MemoryView . h \" # include \" Templates / RefCounting . h \" template<T> class TIoStatusOr ; class FIoBuffer { public : enum EAssumeOwnershipTag { AssumeOwnership } ; enum ECloneTag { Clone } ; enum EWrapTag { Wrap } ;)",
    "insertText": "FIoBuffer()"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(uint64 InSize)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(const void* Data, uint64 InSize, const FIoBuffer& OuterBuffer)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(FMemoryView Memory, const FIoBuffer& OuterBuffer)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(EAssumeOwnershipTag, const void* Data, uint64 InSize)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(EAssumeOwnershipTag, FMemoryView Memory)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(ECloneTag, const void* Data, uint64 InSize)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(ECloneTag, FMemoryView Memory)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(EWrapTag, const void* Data, uint64 InSize)"
  },
  {
    "label": "FIoBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FIoBuffer(EWrapTag, FMemoryView Memory)"
  },
  {
    "label": "Data()",
    "kind": "Method",
    "detail": "Function (const uint8*)",
    "insertText": "Data()"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (} const uint8*)",
    "insertText": "GetData()"
  },
  {
    "label": "DataSize()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "DataSize()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetView()",
    "kind": "Method",
    "detail": "Function (} FMemoryView)",
    "insertText": "GetView()"
  },
  {
    "label": "GetMutableView()",
    "kind": "Method",
    "detail": "Function (} FMutableMemoryView)",
    "insertText": "GetMutableView()"
  },
  {
    "label": "SetSize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSize(uint64 InSize)"
  },
  {
    "label": "IsMemoryOwned()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsMemoryOwned()"
  },
  {
    "label": "EnsureOwned()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnsureOwned()"
  },
  {
    "label": "MakeOwned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeOwned()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "operator(const FIoBuffer& Rhs)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] TIoStatusOr<uint8*>)",
    "insertText": "Release()"
  },
  {
    "label": "BufCore()",
    "kind": "Method",
    "detail": "Function (private : struct BufCore {)",
    "insertText": "BufCore()"
  },
  {
    "label": "BufCore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufCore(uint64 InSize)"
  },
  {
    "label": "BufCore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufCore(const uint8* InData, uint64 InSize, bool InOwnsMemory)"
  },
  {
    "label": "BufCore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufCore(const uint8* InData, uint64 InSize, const BufCore* InOuter)"
  },
  {
    "label": "BufCore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufCore(ECloneTag, uint8* InData, uint64 InSize)"
  },
  {
    "label": "BufCore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufCore(const BufCore& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BufCore&)",
    "insertText": "operator(const BufCore& Rhs)"
  },
  {
    "label": "SetDataAndSize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetDataAndSize(const uint8* InData, uint64 InSize)"
  },
  {
    "label": "ReleaseMemory()",
    "kind": "Method",
    "detail": "Function (TIoStatusOr<uint8*>)",
    "insertText": "ReleaseMemory()"
  },
  {
    "label": "SetIsOwned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsOwned(bool InOwnsMemory)"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (Flags | = OwnsMemory ; } else { Flags& = ~ OwnsMemory ; } } uint32)",
    "insertText": "AddRef()"
  },
  {
    "label": "CheckRefCount()",
    "kind": "Method",
    "detail": "Function (# if DO_CHECK)",
    "insertText": "CheckRefCount()"
  },
  {
    "label": "InterlockedDecrement()",
    "kind": "Method",
    "detail": "Function (# endif const int32 Refs =)",
    "insertText": "InterlockedDecrement(&NumRefs)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (delete this ; } return)",
    "insertText": "uint32(Refs)"
  },
  {
    "label": "GetRefCount()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetRefCount()"
  },
  {
    "label": "FlagsMask()",
    "kind": "Method",
    "detail": "Function (uint8* DataPtr = nullptr ; uint32 DataSizeLow = 0 ; int32 NumRefs = 0 ; TRefCountPtr<const BufCore> OuterCore ; uint8 DataSizeHigh = 0 ; uint8 Flags = 0 ; enum { OwnsMemory = 1<<0,ReadOnlyBuffer = 1<<1,)",
    "insertText": "FlagsMask(1 << 2)"
  },
  {
    "label": "EnsureDataIsResident()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureDataIsResident()"
  },
  {
    "label": "ClearFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearFlags()"
  }
]