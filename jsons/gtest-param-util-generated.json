[
  {
    "label": "Container",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Container"
  },
  {
    "label": "ValueArray1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray1"
  },
  {
    "label": "ValueArray2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray2"
  },
  {
    "label": "ValueArray3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray3"
  },
  {
    "label": "ValueArray4",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray4"
  },
  {
    "label": "ValueArray5",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray5"
  },
  {
    "label": "ValueArray6",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray6"
  },
  {
    "label": "ValueArray7",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray7"
  },
  {
    "label": "ValueArray8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray8"
  },
  {
    "label": "ValueArray9",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray9"
  },
  {
    "label": "ValueArray10",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray10"
  },
  {
    "label": "ValueArray11",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray11"
  },
  {
    "label": "ValueArray12",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray12"
  },
  {
    "label": "ValueArray13",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray13"
  },
  {
    "label": "ValueArray14",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray14"
  },
  {
    "label": "ValueArray15",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray15"
  },
  {
    "label": "ValueArray16",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray16"
  },
  {
    "label": "ValueArray17",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray17"
  },
  {
    "label": "ValueArray18",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray18"
  },
  {
    "label": "ValueArray19",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray19"
  },
  {
    "label": "ValueArray20",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray20"
  },
  {
    "label": "ValueArray21",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray21"
  },
  {
    "label": "ValueArray22",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray22"
  },
  {
    "label": "ValueArray23",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray23"
  },
  {
    "label": "ValueArray24",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray24"
  },
  {
    "label": "ValueArray25",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray25"
  },
  {
    "label": "ValueArray26",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray26"
  },
  {
    "label": "ValueArray27",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray27"
  },
  {
    "label": "ValueArray28",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray28"
  },
  {
    "label": "ValueArray29",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray29"
  },
  {
    "label": "ValueArray30",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray30"
  },
  {
    "label": "ValueArray31",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray31"
  },
  {
    "label": "ValueArray32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray32"
  },
  {
    "label": "ValueArray33",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray33"
  },
  {
    "label": "ValueArray34",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray34"
  },
  {
    "label": "ValueArray35",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray35"
  },
  {
    "label": "ValueArray36",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray36"
  },
  {
    "label": "ValueArray37",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray37"
  },
  {
    "label": "ValueArray38",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray38"
  },
  {
    "label": "ValueArray39",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray39"
  },
  {
    "label": "ValueArray40",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray40"
  },
  {
    "label": "ValueArray41",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray41"
  },
  {
    "label": "ValueArray42",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray42"
  },
  {
    "label": "ValueArray43",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray43"
  },
  {
    "label": "ValueArray44",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray44"
  },
  {
    "label": "ValueArray45",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray45"
  },
  {
    "label": "ValueArray46",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray46"
  },
  {
    "label": "ValueArray47",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray47"
  },
  {
    "label": "ValueArray48",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray48"
  },
  {
    "label": "ValueArray49",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray49"
  },
  {
    "label": "ValueArray50",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ValueArray50"
  },
  {
    "label": "CartesianProductGenerator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator2"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Iterator"
  },
  {
    "label": "CartesianProductGenerator3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator3"
  },
  {
    "label": "CartesianProductGenerator4",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator4"
  },
  {
    "label": "CartesianProductGenerator5",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator5"
  },
  {
    "label": "CartesianProductGenerator6",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator6"
  },
  {
    "label": "CartesianProductGenerator7",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator7"
  },
  {
    "label": "CartesianProductGenerator8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator8"
  },
  {
    "label": "CartesianProductGenerator9",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator9"
  },
  {
    "label": "CartesianProductGenerator10",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductGenerator10"
  },
  {
    "label": "Generator1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator1"
  },
  {
    "label": "Generator2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator2"
  },
  {
    "label": "CartesianProductHolder2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder2"
  },
  {
    "label": "Generator3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator3"
  },
  {
    "label": "CartesianProductHolder3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder3"
  },
  {
    "label": "Generator4",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator4"
  },
  {
    "label": "CartesianProductHolder4",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder4"
  },
  {
    "label": "Generator5",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator5"
  },
  {
    "label": "CartesianProductHolder5",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder5"
  },
  {
    "label": "Generator6",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator6"
  },
  {
    "label": "CartesianProductHolder6",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder6"
  },
  {
    "label": "Generator7",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator7"
  },
  {
    "label": "CartesianProductHolder7",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder7"
  },
  {
    "label": "Generator8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator8"
  },
  {
    "label": "CartesianProductHolder8",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder8"
  },
  {
    "label": "Generator9",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator9"
  },
  {
    "label": "CartesianProductHolder9",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder9"
  },
  {
    "label": "Generator10",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Generator10"
  },
  {
    "label": "CartesianProductHolder10",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CartesianProductHolder10"
  },
  {
    "label": "ValuesIn()",
    "kind": "Method",
    "detail": "Function (# ifndef GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_ # define GTEST_INCLUDE_GTEST_INTERNAL_GTEST_PARAM_UTIL_GENERATED_H_ # include \" gtest / internal / gtest - param - util . h \" # include \" gtest / internal / gtest - port . h \" # if GTEST_HAS_PARAM_TEST namespace testing { template<ForwardIterator> internal::ParamGenerator<::testing::internal::IteratorTraits<ForwardIterator>::value_type>)",
    "insertText": "ValuesIn(ForwardIterator begin, ForwardIterator end)"
  },
  {
    "label": "ValuesIn()",
    "kind": "Method",
    "detail": "Function (template<T,size_t N> internal::ParamGenerator<T>)",
    "insertText": "ValuesIn(const T (&array)[N])"
  },
  {
    "label": "ValuesIn()",
    "kind": "Method",
    "detail": "Function (template<class Container> internal::ParamGenerator<Container::value_type>)",
    "insertText": "ValuesIn(const Container& container)"
  },
  {
    "label": "ValueArray1()",
    "kind": "Method",
    "detail": "Function (namespace internal { template<T1> class ValueArray1 { public :)",
    "insertText": "ValueArray1(T1 v1) : v1_(v1)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (} template<T> operator ParamGenerator<)",
    "insertText": "T()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray1& other)"
  },
  {
    "label": "ValueArray2()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; } ; template<T1,T2> class ValueArray2 { public :)",
    "insertText": "ValueArray2(T1 v1, T2 v2) : v1_(v1), v2_(v2)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray2& other)"
  },
  {
    "label": "ValueArray3()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; } ; template<T1,T2,T3> class ValueArray3 { public :)",
    "insertText": "ValueArray3(T1 v1, T2 v2, T3 v3) : v1_(v1), v2_(v2), v3_(v3)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray3& other)"
  },
  {
    "label": "ValueArray4()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; } ; template<T1,T2,T3,T4> class ValueArray4 { public :)",
    "insertText": "ValueArray4(T1 v1, T2 v2, T3 v3, T4 v4) : v1_(v1), v2_(v2), v3_(v3), v4_(v4)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray4& other)"
  },
  {
    "label": "ValueArray5()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; } ; template<T1,T2,T3,T4,T5> class ValueArray5 { public :)",
    "insertText": "ValueArray5(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray5& other)"
  },
  {
    "label": "ValueArray6()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; } ; template<T1,T2,T3,T4,T5,T6> class ValueArray6 { public :)",
    "insertText": "ValueArray6(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray6& other)"
  },
  {
    "label": "ValueArray7()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; } ; template<T1,T2,T3,T4,T5,T6,T7> class ValueArray7 { public :)",
    "insertText": "ValueArray7(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray7& other)"
  },
  {
    "label": "ValueArray8()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8> class ValueArray8 { public :)",
    "insertText": "ValueArray8(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray8& other)"
  },
  {
    "label": "ValueArray9()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9> class ValueArray9 { public :)",
    "insertText": "ValueArray9(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray9& other)"
  },
  {
    "label": "ValueArray10()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10> class ValueArray10 { public :)",
    "insertText": "ValueArray10(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray10& other)"
  },
  {
    "label": "ValueArray11()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11> class ValueArray11 { public :)",
    "insertText": "ValueArray11(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray11& other)"
  },
  {
    "label": "ValueArray12()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12> class ValueArray12 { public :)",
    "insertText": "ValueArray12(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray12& other)"
  },
  {
    "label": "ValueArray13()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13> class ValueArray13 { public :)",
    "insertText": "ValueArray13(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray13& other)"
  },
  {
    "label": "ValueArray14()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14> class ValueArray14 { public :)",
    "insertText": "ValueArray14(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray14& other)"
  },
  {
    "label": "ValueArray15()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15> class ValueArray15 { public :)",
    "insertText": "ValueArray15(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray15& other)"
  },
  {
    "label": "ValueArray16()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16> class ValueArray16 { public :)",
    "insertText": "ValueArray16(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray16& other)"
  },
  {
    "label": "ValueArray17()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17> class ValueArray17 { public :)",
    "insertText": "ValueArray17(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray17& other)"
  },
  {
    "label": "ValueArray18()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18> class ValueArray18 { public :)",
    "insertText": "ValueArray18(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray18& other)"
  },
  {
    "label": "ValueArray19()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19> class ValueArray19 { public :)",
    "insertText": "ValueArray19(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray19& other)"
  },
  {
    "label": "ValueArray20()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20> class ValueArray20 { public :)",
    "insertText": "ValueArray20(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray20& other)"
  },
  {
    "label": "ValueArray21()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21> class ValueArray21 { public :)",
    "insertText": "ValueArray21(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray21& other)"
  },
  {
    "label": "ValueArray22()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22> class ValueArray22 { public :)",
    "insertText": "ValueArray22(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray22& other)"
  },
  {
    "label": "ValueArray23()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23> class ValueArray23 { public :)",
    "insertText": "ValueArray23(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray23& other)"
  },
  {
    "label": "ValueArray24()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24> class ValueArray24 { public :)",
    "insertText": "ValueArray24(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray24& other)"
  },
  {
    "label": "ValueArray25()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25> class ValueArray25 { public :)",
    "insertText": "ValueArray25(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray25& other)"
  },
  {
    "label": "ValueArray26()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26> class ValueArray26 { public :)",
    "insertText": "ValueArray26(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray26& other)"
  },
  {
    "label": "ValueArray27()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27> class ValueArray27 { public :)",
    "insertText": "ValueArray27(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray27& other)"
  },
  {
    "label": "ValueArray28()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28> class ValueArray28 { public :)",
    "insertText": "ValueArray28(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray28& other)"
  },
  {
    "label": "ValueArray29()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29> class ValueArray29 { public :)",
    "insertText": "ValueArray29(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray29& other)"
  },
  {
    "label": "ValueArray30()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30> class ValueArray30 { public :)",
    "insertText": "ValueArray30(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray30& other)"
  },
  {
    "label": "ValueArray31()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31> class ValueArray31 { public :)",
    "insertText": "ValueArray31(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray31& other)"
  },
  {
    "label": "ValueArray32()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32> class ValueArray32 { public :)",
    "insertText": "ValueArray32(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray32& other)"
  },
  {
    "label": "ValueArray33()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33> class ValueArray33 { public :)",
    "insertText": "ValueArray33(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray33& other)"
  },
  {
    "label": "ValueArray34()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34> class ValueArray34 { public :)",
    "insertText": "ValueArray34(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray34& other)"
  },
  {
    "label": "ValueArray35()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35> class ValueArray35 { public :)",
    "insertText": "ValueArray35(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray35& other)"
  },
  {
    "label": "ValueArray36()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36> class ValueArray36 { public :)",
    "insertText": "ValueArray36(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray36& other)"
  },
  {
    "label": "ValueArray37()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37> class ValueArray37 { public :)",
    "insertText": "ValueArray37(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray37& other)"
  },
  {
    "label": "ValueArray38()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38> class ValueArray38 { public :)",
    "insertText": "ValueArray38(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray38& other)"
  },
  {
    "label": "ValueArray39()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39> class ValueArray39 { public :)",
    "insertText": "ValueArray39(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray39& other)"
  },
  {
    "label": "ValueArray40()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40> class ValueArray40 { public :)",
    "insertText": "ValueArray40(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray40& other)"
  },
  {
    "label": "ValueArray41()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41> class ValueArray41 { public :)",
    "insertText": "ValueArray41(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray41& other)"
  },
  {
    "label": "ValueArray42()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42> class ValueArray42 { public :)",
    "insertText": "ValueArray42(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray42& other)"
  },
  {
    "label": "ValueArray43()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43> class ValueArray43 { public :)",
    "insertText": "ValueArray43(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray43& other)"
  },
  {
    "label": "ValueArray44()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44> class ValueArray44 { public :)",
    "insertText": "ValueArray44(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray44& other)"
  },
  {
    "label": "ValueArray45()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45> class ValueArray45 { public :)",
    "insertText": "ValueArray45(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_), static_cast<T>(v45_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray45& other)"
  },
  {
    "label": "ValueArray46()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; const T45 v45_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46> class ValueArray46 { public :)",
    "insertText": "ValueArray46(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_), static_cast<T>(v45_), static_cast<T>(v46_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray46& other)"
  },
  {
    "label": "ValueArray47()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; const T45 v45_ ; const T46 v46_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47> class ValueArray47 { public :)",
    "insertText": "ValueArray47(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46), v47_(v47)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_), static_cast<T>(v45_), static_cast<T>(v46_), static_cast<T>(v47_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray47& other)"
  },
  {
    "label": "ValueArray48()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; const T45 v45_ ; const T46 v46_ ; const T47 v47_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48> class ValueArray48 { public :)",
    "insertText": "ValueArray48(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46), v47_(v47), v48_(v48)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_), static_cast<T>(v45_), static_cast<T>(v46_), static_cast<T>(v47_), static_cast<T>(v48_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray48& other)"
  },
  {
    "label": "ValueArray49()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; const T45 v45_ ; const T46 v46_ ; const T47 v47_ ; const T48 v48_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49> class ValueArray49 { public :)",
    "insertText": "ValueArray49(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46), v47_(v47), v48_(v48), v49_(v49)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_), static_cast<T>(v45_), static_cast<T>(v46_), static_cast<T>(v47_), static_cast<T>(v48_), static_cast<T>(v49_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray49& other)"
  },
  {
    "label": "ValueArray50()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; const T45 v45_ ; const T46 v46_ ; const T47 v47_ ; const T48 v48_ ; const T49 v49_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,T17,T18,T19,T20,T21,T22,T23,T24,T25,T26,T27,T28,T29,T30,T31,T32,T33,T34,T35,T36,T37,T38,T39,T40,T41,T42,T43,T44,T45,T46,T47,T48,T49,T50> class ValueArray50 { public :)",
    "insertText": "ValueArray50(T1 v1, T2 v2, T3 v3, T4 v4, T5 v5, T6 v6, T7 v7, T8 v8, T9 v9, T10 v10, T11 v11, T12 v12, T13 v13, T14 v14, T15 v15, T16 v16, T17 v17, T18 v18, T19 v19, T20 v20, T21 v21, T22 v22, T23 v23, T24 v24, T25 v25, T26 v26, T27 v27, T28 v28, T29 v29, T30 v30, T31 v31, T32 v32, T33 v33, T34 v34, T35 v35, T36 v36, T37 v37, T38 v38, T39 v39, T40 v40, T41 v41, T42 v42, T43 v43, T44 v44, T45 v45, T46 v46, T47 v47, T48 v48, T49 v49, T50 v50) : v1_(v1), v2_(v2), v3_(v3), v4_(v4), v5_(v5), v6_(v6), v7_(v7), v8_(v8), v9_(v9), v10_(v10), v11_(v11), v12_(v12), v13_(v13), v14_(v14), v15_(v15), v16_(v16), v17_(v17), v18_(v18), v19_(v19), v20_(v20), v21_(v21), v22_(v22), v23_(v23), v24_(v24), v25_(v25), v26_(v26), v27_(v27), v28_(v28), v29_(v29), v30_(v30), v31_(v31), v32_(v32), v33_(v33), v34_(v34), v35_(v35), v36_(v36), v37_(v37), v38_(v38), v39_(v39), v40_(v40), v41_(v41), v42_(v42), v43_(v43), v44_(v44), v45_(v45), v46_(v46), v47_(v47), v48_(v48), v49_(v49), v50_(v50)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T array [ ] = { static_cast<)",
    "insertText": "T(v1_), static_cast<T>(v2_), static_cast<T>(v3_), static_cast<T>(v4_), static_cast<T>(v5_), static_cast<T>(v6_), static_cast<T>(v7_), static_cast<T>(v8_), static_cast<T>(v9_), static_cast<T>(v10_), static_cast<T>(v11_), static_cast<T>(v12_), static_cast<T>(v13_), static_cast<T>(v14_), static_cast<T>(v15_), static_cast<T>(v16_), static_cast<T>(v17_), static_cast<T>(v18_), static_cast<T>(v19_), static_cast<T>(v20_), static_cast<T>(v21_), static_cast<T>(v22_), static_cast<T>(v23_), static_cast<T>(v24_), static_cast<T>(v25_), static_cast<T>(v26_), static_cast<T>(v27_), static_cast<T>(v28_), static_cast<T>(v29_), static_cast<T>(v30_), static_cast<T>(v31_), static_cast<T>(v32_), static_cast<T>(v33_), static_cast<T>(v34_), static_cast<T>(v35_), static_cast<T>(v36_), static_cast<T>(v37_), static_cast<T>(v38_), static_cast<T>(v39_), static_cast<T>(v40_), static_cast<T>(v41_), static_cast<T>(v42_), static_cast<T>(v43_), static_cast<T>(v44_), static_cast<T>(v45_), static_cast<T>(v46_), static_cast<T>(v47_), static_cast<T>(v48_), static_cast<T>(v49_), static_cast<T>(v50_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const ValueArray50& other)"
  },
  {
    "label": "CartesianProductGenerator2()",
    "kind": "Method",
    "detail": "Function (const T1 v1_ ; const T2 v2_ ; const T3 v3_ ; const T4 v4_ ; const T5 v5_ ; const T6 v6_ ; const T7 v7_ ; const T8 v8_ ; const T9 v9_ ; const T10 v10_ ; const T11 v11_ ; const T12 v12_ ; const T13 v13_ ; const T14 v14_ ; const T15 v15_ ; const T16 v16_ ; const T17 v17_ ; const T18 v18_ ; const T19 v19_ ; const T20 v20_ ; const T21 v21_ ; const T22 v22_ ; const T23 v23_ ; const T24 v24_ ; const T25 v25_ ; const T26 v26_ ; const T27 v27_ ; const T28 v28_ ; const T29 v29_ ; const T30 v30_ ; const T31 v31_ ; const T32 v32_ ; const T33 v33_ ; const T34 v34_ ; const T35 v35_ ; const T36 v36_ ; const T37 v37_ ; const T38 v38_ ; const T39 v39_ ; const T40 v40_ ; const T41 v41_ ; const T42 v42_ ; const T43 v43_ ; const T44 v44_ ; const T45 v45_ ; const T46 v46_ ; const T47 v47_ ; const T48 v48_ ; const T49 v49_ ; const T50 v50_ ; } ; # if GTEST_HAS_COMBINE template<T1,T2> class CartesianProductGenerator2 : public ParamGeneratorInterface<::testing::tuple<T1,T2>> { public : typedef::testing::tuple<T1,T2> ParamType ;)",
    "insertText": "CartesianProductGenerator2(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2) : g1_(g1), g2_(g2)"
  },
  {
    "label": "CartesianProductGenerator2()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator2()"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (} ParamIteratorInterface<ParamType>*)",
    "insertText": "Begin()"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (} ParamIteratorInterface<ParamType>*)",
    "insertText": "End()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2)"
  },
  {
    "label": "ComputeCurrentValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeCurrentValue()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "Iterator()"
  },
  {
    "label": "BaseGenerator()",
    "kind": "Method",
    "detail": "Function (} const ParamGeneratorInterface<ParamType>*)",
    "insertText": "BaseGenerator()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(!AtEnd())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current2_ ;)",
    "insertText": "if(current2_ == end2_)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (} ParamIteratorInterface<ParamType>*)",
    "insertText": "Clone()"
  },
  {
    "label": "Current()",
    "kind": "Method",
    "detail": "Function (} const ParamType*)",
    "insertText": "Current()"
  },
  {
    "label": "GTEST_CHECK_()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GTEST_CHECK_(BaseGenerator() == other.BaseGenerator())"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (const Iterator* typed_other = CheckedDowncastToActualType<const)",
    "insertText": "Iterator(&other)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_)"
  },
  {
    "label": "AtEnd()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AtEnd()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator2& other)"
  },
  {
    "label": "CartesianProductGenerator3()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; } ; template<T1,T2,T3> class CartesianProductGenerator3 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3>> { public : typedef::testing::tuple<T1,T2,T3> ParamType ;)",
    "insertText": "CartesianProductGenerator3(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3) : g1_(g1), g2_(g2), g3_(g3)"
  },
  {
    "label": "CartesianProductGenerator3()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator3()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current3_ ;)",
    "insertText": "if(current3_ == end3_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator3& other)"
  },
  {
    "label": "CartesianProductGenerator4()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; } ; template<T1,T2,T3,T4> class CartesianProductGenerator4 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4>> { public : typedef::testing::tuple<T1,T2,T3,T4> ParamType ;)",
    "insertText": "CartesianProductGenerator4(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4) : g1_(g1), g2_(g2), g3_(g3), g4_(g4)"
  },
  {
    "label": "CartesianProductGenerator4()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator4()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current4_ ;)",
    "insertText": "if(current4_ == end4_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator4& other)"
  },
  {
    "label": "CartesianProductGenerator5()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; } ; template<T1,T2,T3,T4,T5> class CartesianProductGenerator5 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4,T5>> { public : typedef::testing::tuple<T1,T2,T3,T4,T5> ParamType ;)",
    "insertText": "CartesianProductGenerator5(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4, const ParamGenerator<T5>& g5) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5)"
  },
  {
    "label": "CartesianProductGenerator5()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator5()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4, const ParamGenerator<T5>& g5, const typename ParamGenerator<T5>::iterator& current5) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4), begin5_(g5.begin()), end5_(g5.end()), current5_(current5)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current5_ ;)",
    "insertText": "if(current5_ == end5_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_), begin5_(other.begin5_), end5_(other.end5_), current5_(other.current5_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; const ParamGenerator<T5>::iterator begin5_ ; const ParamGenerator<T5>::iterator end5_ ; ParamGenerator<T5>::iterator current5_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator5& other)"
  },
  {
    "label": "CartesianProductGenerator6()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; const ParamGenerator<T5> g5_ ; } ; template<T1,T2,T3,T4,T5,T6> class CartesianProductGenerator6 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4,T5,T6>> { public : typedef::testing::tuple<T1,T2,T3,T4,T5,T6> ParamType ;)",
    "insertText": "CartesianProductGenerator6(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4, const ParamGenerator<T5>& g5, const ParamGenerator<T6>& g6) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6)"
  },
  {
    "label": "CartesianProductGenerator6()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator6()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4, const ParamGenerator<T5>& g5, const typename ParamGenerator<T5>::iterator& current5, const ParamGenerator<T6>& g6, const typename ParamGenerator<T6>::iterator& current6) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4), begin5_(g5.begin()), end5_(g5.end()), current5_(current5), begin6_(g6.begin()), end6_(g6.end()), current6_(current6)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current6_ ;)",
    "insertText": "if(current6_ == end6_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_), begin5_(other.begin5_), end5_(other.end5_), current5_(other.current5_), begin6_(other.begin6_), end6_(other.end6_), current6_(other.current6_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; const ParamGenerator<T5>::iterator begin5_ ; const ParamGenerator<T5>::iterator end5_ ; ParamGenerator<T5>::iterator current5_ ; const ParamGenerator<T6>::iterator begin6_ ; const ParamGenerator<T6>::iterator end6_ ; ParamGenerator<T6>::iterator current6_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator6& other)"
  },
  {
    "label": "CartesianProductGenerator7()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; const ParamGenerator<T5> g5_ ; const ParamGenerator<T6> g6_ ; } ; template<T1,T2,T3,T4,T5,T6,T7> class CartesianProductGenerator7 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4,T5,T6,T7>> { public : typedef::testing::tuple<T1,T2,T3,T4,T5,T6,T7> ParamType ;)",
    "insertText": "CartesianProductGenerator7(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4, const ParamGenerator<T5>& g5, const ParamGenerator<T6>& g6, const ParamGenerator<T7>& g7) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7)"
  },
  {
    "label": "CartesianProductGenerator7()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator7()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4, const ParamGenerator<T5>& g5, const typename ParamGenerator<T5>::iterator& current5, const ParamGenerator<T6>& g6, const typename ParamGenerator<T6>::iterator& current6, const ParamGenerator<T7>& g7, const typename ParamGenerator<T7>::iterator& current7) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4), begin5_(g5.begin()), end5_(g5.end()), current5_(current5), begin6_(g6.begin()), end6_(g6.end()), current6_(current6), begin7_(g7.begin()), end7_(g7.end()), current7_(current7)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current7_ ;)",
    "insertText": "if(current7_ == end7_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_), begin5_(other.begin5_), end5_(other.end5_), current5_(other.current5_), begin6_(other.begin6_), end6_(other.end6_), current6_(other.current6_), begin7_(other.begin7_), end7_(other.end7_), current7_(other.current7_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; const ParamGenerator<T5>::iterator begin5_ ; const ParamGenerator<T5>::iterator end5_ ; ParamGenerator<T5>::iterator current5_ ; const ParamGenerator<T6>::iterator begin6_ ; const ParamGenerator<T6>::iterator end6_ ; ParamGenerator<T6>::iterator current6_ ; const ParamGenerator<T7>::iterator begin7_ ; const ParamGenerator<T7>::iterator end7_ ; ParamGenerator<T7>::iterator current7_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator7& other)"
  },
  {
    "label": "CartesianProductGenerator8()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; const ParamGenerator<T5> g5_ ; const ParamGenerator<T6> g6_ ; const ParamGenerator<T7> g7_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8> class CartesianProductGenerator8 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8>> { public : typedef::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8> ParamType ;)",
    "insertText": "CartesianProductGenerator8(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4, const ParamGenerator<T5>& g5, const ParamGenerator<T6>& g6, const ParamGenerator<T7>& g7, const ParamGenerator<T8>& g8) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8)"
  },
  {
    "label": "CartesianProductGenerator8()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator8()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4, const ParamGenerator<T5>& g5, const typename ParamGenerator<T5>::iterator& current5, const ParamGenerator<T6>& g6, const typename ParamGenerator<T6>::iterator& current6, const ParamGenerator<T7>& g7, const typename ParamGenerator<T7>::iterator& current7, const ParamGenerator<T8>& g8, const typename ParamGenerator<T8>::iterator& current8) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4), begin5_(g5.begin()), end5_(g5.end()), current5_(current5), begin6_(g6.begin()), end6_(g6.end()), current6_(current6), begin7_(g7.begin()), end7_(g7.end()), current7_(current7), begin8_(g8.begin()), end8_(g8.end()), current8_(current8)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current8_ ;)",
    "insertText": "if(current8_ == end8_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_), begin5_(other.begin5_), end5_(other.end5_), current5_(other.current5_), begin6_(other.begin6_), end6_(other.end6_), current6_(other.current6_), begin7_(other.begin7_), end7_(other.end7_), current7_(other.current7_), begin8_(other.begin8_), end8_(other.end8_), current8_(other.current8_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; const ParamGenerator<T5>::iterator begin5_ ; const ParamGenerator<T5>::iterator end5_ ; ParamGenerator<T5>::iterator current5_ ; const ParamGenerator<T6>::iterator begin6_ ; const ParamGenerator<T6>::iterator end6_ ; ParamGenerator<T6>::iterator current6_ ; const ParamGenerator<T7>::iterator begin7_ ; const ParamGenerator<T7>::iterator end7_ ; ParamGenerator<T7>::iterator current7_ ; const ParamGenerator<T8>::iterator begin8_ ; const ParamGenerator<T8>::iterator end8_ ; ParamGenerator<T8>::iterator current8_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator8& other)"
  },
  {
    "label": "CartesianProductGenerator9()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; const ParamGenerator<T5> g5_ ; const ParamGenerator<T6> g6_ ; const ParamGenerator<T7> g7_ ; const ParamGenerator<T8> g8_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9> class CartesianProductGenerator9 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9>> { public : typedef::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9> ParamType ;)",
    "insertText": "CartesianProductGenerator9(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4, const ParamGenerator<T5>& g5, const ParamGenerator<T6>& g6, const ParamGenerator<T7>& g7, const ParamGenerator<T8>& g8, const ParamGenerator<T9>& g9) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8), g9_(g9)"
  },
  {
    "label": "CartesianProductGenerator9()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator9()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4, const ParamGenerator<T5>& g5, const typename ParamGenerator<T5>::iterator& current5, const ParamGenerator<T6>& g6, const typename ParamGenerator<T6>::iterator& current6, const ParamGenerator<T7>& g7, const typename ParamGenerator<T7>::iterator& current7, const ParamGenerator<T8>& g8, const typename ParamGenerator<T8>::iterator& current8, const ParamGenerator<T9>& g9, const typename ParamGenerator<T9>::iterator& current9) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4), begin5_(g5.begin()), end5_(g5.end()), current5_(current5), begin6_(g6.begin()), end6_(g6.end()), current6_(current6), begin7_(g7.begin()), end7_(g7.end()), current7_(current7), begin8_(g8.begin()), end8_(g8.end()), current8_(current8), begin9_(g9.begin()), end9_(g9.end()), current9_(current9)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current9_ ;)",
    "insertText": "if(current9_ == end9_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_), begin5_(other.begin5_), end5_(other.end5_), current5_(other.current5_), begin6_(other.begin6_), end6_(other.end6_), current6_(other.current6_), begin7_(other.begin7_), end7_(other.end7_), current7_(other.current7_), begin8_(other.begin8_), end8_(other.end8_), current8_(other.current8_), begin9_(other.begin9_), end9_(other.end9_), current9_(other.current9_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; const ParamGenerator<T5>::iterator begin5_ ; const ParamGenerator<T5>::iterator end5_ ; ParamGenerator<T5>::iterator current5_ ; const ParamGenerator<T6>::iterator begin6_ ; const ParamGenerator<T6>::iterator end6_ ; ParamGenerator<T6>::iterator current6_ ; const ParamGenerator<T7>::iterator begin7_ ; const ParamGenerator<T7>::iterator end7_ ; ParamGenerator<T7>::iterator current7_ ; const ParamGenerator<T8>::iterator begin8_ ; const ParamGenerator<T8>::iterator end8_ ; ParamGenerator<T8>::iterator current8_ ; const ParamGenerator<T9>::iterator begin9_ ; const ParamGenerator<T9>::iterator end9_ ; ParamGenerator<T9>::iterator current9_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator9& other)"
  },
  {
    "label": "CartesianProductGenerator10()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; const ParamGenerator<T5> g5_ ; const ParamGenerator<T6> g6_ ; const ParamGenerator<T7> g7_ ; const ParamGenerator<T8> g8_ ; const ParamGenerator<T9> g9_ ; } ; template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10> class CartesianProductGenerator10 : public ParamGeneratorInterface<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10>> { public : typedef::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10> ParamType ;)",
    "insertText": "CartesianProductGenerator10(const ParamGenerator<T1>& g1, const ParamGenerator<T2>& g2, const ParamGenerator<T3>& g3, const ParamGenerator<T4>& g4, const ParamGenerator<T5>& g5, const ParamGenerator<T6>& g6, const ParamGenerator<T7>& g7, const ParamGenerator<T8>& g8, const ParamGenerator<T9>& g9, const ParamGenerator<T10>& g10) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8), g9_(g9), g10_(g10)"
  },
  {
    "label": "CartesianProductGenerator10()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "CartesianProductGenerator10()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private : class Iterator : public ParamIteratorInterface<ParamType> { public :)",
    "insertText": "Iterator(const ParamGeneratorInterface<ParamType>* base, const ParamGenerator<T1>& g1, const typename ParamGenerator<T1>::iterator& current1, const ParamGenerator<T2>& g2, const typename ParamGenerator<T2>::iterator& current2, const ParamGenerator<T3>& g3, const typename ParamGenerator<T3>::iterator& current3, const ParamGenerator<T4>& g4, const typename ParamGenerator<T4>::iterator& current4, const ParamGenerator<T5>& g5, const typename ParamGenerator<T5>::iterator& current5, const ParamGenerator<T6>& g6, const typename ParamGenerator<T6>::iterator& current6, const ParamGenerator<T7>& g7, const typename ParamGenerator<T7>::iterator& current7, const ParamGenerator<T8>& g8, const typename ParamGenerator<T8>::iterator& current8, const ParamGenerator<T9>& g9, const typename ParamGenerator<T9>::iterator& current9, const ParamGenerator<T10>& g10, const typename ParamGenerator<T10>::iterator& current10) : base_(base), begin1_(g1.begin()), end1_(g1.end()), current1_(current1), begin2_(g2.begin()), end2_(g2.end()), current2_(current2), begin3_(g3.begin()), end3_(g3.end()), current3_(current3), begin4_(g4.begin()), end4_(g4.end()), current4_(current4), begin5_(g5.begin()), end5_(g5.end()), current5_(current5), begin6_(g6.begin()), end6_(g6.end()), current6_(current6), begin7_(g7.begin()), end7_(g7.end()), current7_(current7), begin8_(g8.begin()), end8_(g8.end()), current8_(current8), begin9_(g9.begin()), end9_(g9.end()), current9_(current9), begin10_(g10.begin()), end10_(g10.end()), current10_(current10)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (+ + current10_ ;)",
    "insertText": "if(current10_ == end10_)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "Iterator(const Iterator& other) : base_(other.base_), begin1_(other.begin1_), end1_(other.end1_), current1_(other.current1_), begin2_(other.begin2_), end2_(other.end2_), current2_(other.current2_), begin3_(other.begin3_), end3_(other.end3_), current3_(other.current3_), begin4_(other.begin4_), end4_(other.end4_), current4_(other.current4_), begin5_(other.begin5_), end5_(other.end5_), current5_(other.current5_), begin6_(other.begin6_), end6_(other.end6_), current6_(other.current6_), begin7_(other.begin7_), end7_(other.end7_), current7_(other.current7_), begin8_(other.begin8_), end8_(other.end8_), current8_(other.current8_), begin9_(other.begin9_), end9_(other.end9_), current9_(other.current9_), begin10_(other.begin10_), end10_(other.end10_), current10_(other.current10_)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (const ParamGeneratorInterface<ParamType>* const base_ ; const ParamGenerator<T1>::iterator begin1_ ; const ParamGenerator<T1>::iterator end1_ ; ParamGenerator<T1>::iterator current1_ ; const ParamGenerator<T2>::iterator begin2_ ; const ParamGenerator<T2>::iterator end2_ ; ParamGenerator<T2>::iterator current2_ ; const ParamGenerator<T3>::iterator begin3_ ; const ParamGenerator<T3>::iterator end3_ ; ParamGenerator<T3>::iterator current3_ ; const ParamGenerator<T4>::iterator begin4_ ; const ParamGenerator<T4>::iterator end4_ ; ParamGenerator<T4>::iterator current4_ ; const ParamGenerator<T5>::iterator begin5_ ; const ParamGenerator<T5>::iterator end5_ ; ParamGenerator<T5>::iterator current5_ ; const ParamGenerator<T6>::iterator begin6_ ; const ParamGenerator<T6>::iterator end6_ ; ParamGenerator<T6>::iterator current6_ ; const ParamGenerator<T7>::iterator begin7_ ; const ParamGenerator<T7>::iterator end7_ ; ParamGenerator<T7>::iterator current7_ ; const ParamGenerator<T8>::iterator begin8_ ; const ParamGenerator<T8>::iterator end8_ ; ParamGenerator<T8>::iterator current8_ ; const ParamGenerator<T9>::iterator begin9_ ; const ParamGenerator<T9>::iterator end9_ ; ParamGenerator<T9>::iterator current9_ ; const ParamGenerator<T10>::iterator begin10_ ; const ParamGenerator<T10>::iterator end10_ ; ParamGenerator<T10>::iterator current10_ ; ParamType current_value_ ; } ; void)",
    "insertText": "operator(const CartesianProductGenerator10& other)"
  },
  {
    "label": "CartesianProductHolder2()",
    "kind": "Method",
    "detail": "Function (const ParamGenerator<T1> g1_ ; const ParamGenerator<T2> g2_ ; const ParamGenerator<T3> g3_ ; const ParamGenerator<T4> g4_ ; const ParamGenerator<T5> g5_ ; const ParamGenerator<T6> g6_ ; const ParamGenerator<T7> g7_ ; const ParamGenerator<T8> g8_ ; const ParamGenerator<T9> g9_ ; const ParamGenerator<T10> g10_ ; } ; template<class Generator1,class Generator2> class CartesianProductHolder2 { public :)",
    "insertText": "CartesianProductHolder2(const Generator1& g1, const Generator2& g2) : g1_(g1), g2_(g2)"
  },
  {
    "label": "T2()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2> operator ParamGenerator<::testing::tuple<T1,)",
    "insertText": "T2()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder2& other)"
  },
  {
    "label": "CartesianProductHolder3()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; } ; template<class Generator1,class Generator2,class Generator3> class CartesianProductHolder3 { public :)",
    "insertText": "CartesianProductHolder3(const Generator1& g1, const Generator2& g2, const Generator3& g3) : g1_(g1), g2_(g2), g3_(g3)"
  },
  {
    "label": "T3()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3> operator ParamGenerator<::testing::tuple<T1,T2,)",
    "insertText": "T3()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder3& other)"
  },
  {
    "label": "CartesianProductHolder4()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4> class CartesianProductHolder4 { public :)",
    "insertText": "CartesianProductHolder4(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4) : g1_(g1), g2_(g2), g3_(g3), g4_(g4)"
  },
  {
    "label": "T4()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4> operator ParamGenerator<::testing::tuple<T1,T2,T3,)",
    "insertText": "T4()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder4& other)"
  },
  {
    "label": "CartesianProductHolder5()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; const Generator4 g4_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4,class Generator5> class CartesianProductHolder5 { public :)",
    "insertText": "CartesianProductHolder5(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4, const Generator5& g5) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5)"
  },
  {
    "label": "T5()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4,T5> operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,)",
    "insertText": "T5()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder5& other)"
  },
  {
    "label": "CartesianProductHolder6()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; const Generator4 g4_ ; const Generator5 g5_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4,class Generator5,class Generator6> class CartesianProductHolder6 { public :)",
    "insertText": "CartesianProductHolder6(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4, const Generator5& g5, const Generator6& g6) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6)"
  },
  {
    "label": "T6()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4,T5,T6> operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,)",
    "insertText": "T6()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder6& other)"
  },
  {
    "label": "CartesianProductHolder7()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; const Generator4 g4_ ; const Generator5 g5_ ; const Generator6 g6_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4,class Generator5,class Generator6,class Generator7> class CartesianProductHolder7 { public :)",
    "insertText": "CartesianProductHolder7(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4, const Generator5& g5, const Generator6& g6, const Generator7& g7) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7)"
  },
  {
    "label": "T7()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4,T5,T6,T7> operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,)",
    "insertText": "T7()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder7& other)"
  },
  {
    "label": "CartesianProductHolder8()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; const Generator4 g4_ ; const Generator5 g5_ ; const Generator6 g6_ ; const Generator7 g7_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4,class Generator5,class Generator6,class Generator7,class Generator8> class CartesianProductHolder8 { public :)",
    "insertText": "CartesianProductHolder8(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4, const Generator5& g5, const Generator6& g6, const Generator7& g7, const Generator8& g8) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8)"
  },
  {
    "label": "T8()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4,T5,T6,T7,T8> operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,)",
    "insertText": "T8()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder8& other)"
  },
  {
    "label": "CartesianProductHolder9()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; const Generator4 g4_ ; const Generator5 g5_ ; const Generator6 g6_ ; const Generator7 g7_ ; const Generator8 g8_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4,class Generator5,class Generator6,class Generator7,class Generator8,class Generator9> class CartesianProductHolder9 { public :)",
    "insertText": "CartesianProductHolder9(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4, const Generator5& g5, const Generator6& g6, const Generator7& g7, const Generator8& g8, const Generator9& g9) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8), g9_(g9)"
  },
  {
    "label": "T9()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4,T5,T6,T7,T8,T9> operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,)",
    "insertText": "T9()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder9& other)"
  },
  {
    "label": "CartesianProductHolder10()",
    "kind": "Method",
    "detail": "Function (const Generator1 g1_ ; const Generator2 g2_ ; const Generator3 g3_ ; const Generator4 g4_ ; const Generator5 g5_ ; const Generator6 g6_ ; const Generator7 g7_ ; const Generator8 g8_ ; const Generator9 g9_ ; } ; template<class Generator1,class Generator2,class Generator3,class Generator4,class Generator5,class Generator6,class Generator7,class Generator8,class Generator9,class Generator10> class CartesianProductHolder10 { public :)",
    "insertText": "CartesianProductHolder10(const Generator1& g1, const Generator2& g2, const Generator3& g3, const Generator4& g4, const Generator5& g5, const Generator6& g6, const Generator7& g7, const Generator8& g8, const Generator9& g9, const Generator10& g10) : g1_(g1), g2_(g2), g3_(g3), g4_(g4), g5_(g5), g6_(g6), g7_(g7), g8_(g8), g9_(g9), g10_(g10)"
  },
  {
    "label": "T10()",
    "kind": "Method",
    "detail": "Function (} template<T1,T2,T3,T4,T5,T6,T7,T8,T9,T10> operator ParamGenerator<::testing::tuple<T1,T2,T3,T4,T5,T6,T7,T8,T9,)",
    "insertText": "T10()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "operator(const CartesianProductHolder10& other)"
  }
]