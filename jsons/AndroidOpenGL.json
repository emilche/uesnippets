[
  {
    "label": "FAndroidOpenGL",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAndroidOpenGL"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "HasHardwareHiddenSurfaceRemoval()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" OpenGLThirdParty . h \" # include \" AndroidOpenGLPlatform . h \" # include \" AndroidEGL . h \" # include \" OpenGLES . h \" struct FAndroidOpenGL : public FOpenGLES { bool)",
    "insertText": "HasHardwareHiddenSurfaceRemoval()"
  },
  {
    "label": "DeleteSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteSync(UGLsync Sync)"
  },
  {
    "label": "glDeleteSync()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glDeleteSync(Sync)"
  },
  {
    "label": "FenceSync()",
    "kind": "Method",
    "detail": "Function (} } UGLsync)",
    "insertText": "FenceSync(GLenum Condition, GLbitfield Flags)"
  },
  {
    "label": "IsSync()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsSync(UGLsync Sync)"
  },
  {
    "label": "ClientWaitSync()",
    "kind": "Method",
    "detail": "Function (} return true ; } EFenceResult)",
    "insertText": "ClientWaitSync(UGLsync Sync, GLbitfield Flags, GLuint64 Timeout)"
  },
  {
    "label": "glClientWaitSync()",
    "kind": "Method",
    "detail": "Function (GLenum Result =)",
    "insertText": "glClientWaitSync(Sync, Flags, Timeout)"
  },
  {
    "label": "glFramebufferFetchBarrierQCOM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "glFramebufferFetchBarrierQCOM()"
  },
  {
    "label": "ProcessExtensions()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ProcessExtensions(const FString& ExtensionsString)"
  },
  {
    "label": "SetupDefaultGLContextState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDefaultGLContextState(const FString& ExtensionsString)"
  },
  {
    "label": "RequiresAdrenoTilingModeHint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresAdrenoTilingModeHint()"
  },
  {
    "label": "EnableAdrenoTilingModeHint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableAdrenoTilingModeHint(bool bEnable)"
  },
  {
    "label": "ResetNonCoherentFramebufferFetch()",
    "kind": "Method",
    "detail": "Function (bool bRequiresAdrenoTilingHint ; bool)",
    "insertText": "ResetNonCoherentFramebufferFetch()"
  },
  {
    "label": "DisableNonCoherentFramebufferFetch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableNonCoherentFramebufferFetch()"
  },
  {
    "label": "GetMajorVersion()",
    "kind": "Method",
    "detail": "Function (bool bDefaultStateNonCoherentFramebufferFetchEnabled ; int32 GLMajorVerion ; int32 GLMinorVersion ; GLuint)",
    "insertText": "GetMajorVersion()"
  },
  {
    "label": "AreRemoteCompileServicesActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreRemoteCompileServicesActive()"
  },
  {
    "label": "StartRemoteCompileServices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRemoteCompileServices(int NumServices)"
  },
  {
    "label": "StopRemoteCompileServices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRemoteCompileServices()"
  }
]