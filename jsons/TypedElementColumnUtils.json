[
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "Argument",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Argument"
  },
  {
    "label": "SetColumnValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / ArrayView . h \" class UScriptStruct ; namespace TypedElement::ColumnUtils { struct Argument { FName Name ; FString Value ; } ; void)",
    "insertText": "SetColumnValue(void* ColumnData, const UScriptStruct* ColumnType, FName ArgumentName, const FString& ArgumentValue)"
  },
  {
    "label": "SetColumnValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnValues(void* ColumnData, const UScriptStruct* ColumnType, TConstArrayView<Argument> Arguments)"
  },
  {
    "label": "SetColumnValue()",
    "kind": "Method",
    "detail": "Function (template<ColumnType> void)",
    "insertText": "SetColumnValue(ColumnType& Column, FName ArgumentName, const FString& ArgumentValue)"
  },
  {
    "label": "SetColumnValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnValue(&Column, ColumnType::StaticStruct(), ArgumentName, ArgumentValue)"
  },
  {
    "label": "SetColumnValues()",
    "kind": "Method",
    "detail": "Function (} template<ColumnType> void)",
    "insertText": "SetColumnValues(ColumnType& Column, TConstArrayView<Argument> Arguments)"
  },
  {
    "label": "SetColumnValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnValues(&Column, ColumnType::StaticStruct(), Arguments)"
  }
]