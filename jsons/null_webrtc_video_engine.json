[
  {
    "label": "Call",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Call"
  },
  {
    "label": "VideoMediaChannel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoMediaChannel"
  },
  {
    "label": "NullWebRtcVideoEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NullWebRtcVideoEngine"
  },
  {
    "label": "send_codecs()",
    "kind": "Method",
    "detail": "Function (# ifndef MEDIA_ENGINE_NULL_WEBRTC_VIDEO_ENGINE_H_ # define MEDIA_ENGINE_NULL_WEBRTC_VIDEO_ENGINE_H_ # include<vector> # include \" media / base / media_channel . h \" # include \" media / base / media_engine . h \" namespace webrtc { class Call ; } namespace cricket { class VideoMediaChannel ; class NullWebRtcVideoEngine : public VideoEngineInterface { public : std::vector<VideoCodec>)",
    "insertText": "send_codecs(bool)"
  },
  {
    "label": "recv_codecs()",
    "kind": "Method",
    "detail": "Function (} std::vector<VideoCodec>)",
    "insertText": "recv_codecs(bool)"
  },
  {
    "label": "send_codecs()",
    "kind": "Method",
    "detail": "Function (} std::vector<VideoCodec>)",
    "insertText": "send_codecs()"
  },
  {
    "label": "recv_codecs()",
    "kind": "Method",
    "detail": "Function (} std::vector<VideoCodec>)",
    "insertText": "recv_codecs()"
  },
  {
    "label": "GetRtpHeaderExtensions()",
    "kind": "Method",
    "detail": "Function (} std::vector<webrtc::RtpHeaderExtensionCapability>)",
    "insertText": "GetRtpHeaderExtensions()"
  }
]