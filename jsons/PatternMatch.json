[
  {
    "label": "OneUse_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OneUse_match"
  },
  {
    "label": "class_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "class_match"
  },
  {
    "label": "match_combine_or",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "match_combine_or"
  },
  {
    "label": "match_combine_and",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "match_combine_and"
  },
  {
    "label": "match_zero",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "match_zero"
  },
  {
    "label": "match_neg_zero",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "match_neg_zero"
  },
  {
    "label": "apint_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "apint_match"
  },
  {
    "label": "constantint_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "constantint_match"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "cst_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "cst_pred_ty"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "api_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "api_pred_ty"
  },
  {
    "label": "is_one",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_one"
  },
  {
    "label": "is_all_ones",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_all_ones"
  },
  {
    "label": "is_sign_bit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_sign_bit"
  },
  {
    "label": "is_power2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_power2"
  },
  {
    "label": "is_maxsignedvalue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_maxsignedvalue"
  },
  {
    "label": "bind_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bind_ty"
  },
  {
    "label": "specificval_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "specificval_ty"
  },
  {
    "label": "specific_fpval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "specific_fpval"
  },
  {
    "label": "bind_const_intval_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "bind_const_intval_ty"
  },
  {
    "label": "specific_intval",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "specific_intval"
  },
  {
    "label": "AnyBinaryOp_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AnyBinaryOp_match"
  },
  {
    "label": "BinaryOp_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BinaryOp_match"
  },
  {
    "label": "OverflowingBinaryOp_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OverflowingBinaryOp_match"
  },
  {
    "label": "BinOp2_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BinOp2_match"
  },
  {
    "label": "Exact_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Exact_match"
  },
  {
    "label": "CmpClass_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CmpClass_match"
  },
  {
    "label": "SelectClass_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SelectClass_match"
  },
  {
    "label": "CastClass_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CastClass_match"
  },
  {
    "label": "not_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "not_match"
  },
  {
    "label": "neg_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "neg_match"
  },
  {
    "label": "fneg_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "fneg_match"
  },
  {
    "label": "br_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "br_match"
  },
  {
    "label": "brc_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "brc_match"
  },
  {
    "label": "MaxMin_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MaxMin_match"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "smax_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "smax_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "smin_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "smin_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "umax_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "umax_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "umin_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "umin_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ofmax_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ofmax_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ofmin_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ofmin_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ufmax_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ufmax_pred_ty"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "ufmin_pred_ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ufmin_pred_ty"
  },
  {
    "label": "UAddWithOverflow_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UAddWithOverflow_match"
  },
  {
    "label": "Argument_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Argument_match"
  },
  {
    "label": "IntrinsicID_match",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IntrinsicID_match"
  },
  {
    "label": "m_Intrinsic_Ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "m_Intrinsic_Ty"
  },
  {
    "label": "m_Intrinsic_Ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "m_Intrinsic_Ty"
  },
  {
    "label": "m_Intrinsic_Ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "m_Intrinsic_Ty"
  },
  {
    "label": "m_Intrinsic_Ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "m_Intrinsic_Ty"
  },
  {
    "label": "m_Intrinsic_Ty",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "m_Intrinsic_Ty"
  },
  {
    "label": "match_zero()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "match_zero()"
  },
  {
    "label": "match_neg_zero()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "match_neg_zero()"
  },
  {
    "label": "specific_fpval()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "specific_fpval(V)"
  },
  {
    "label": "m_SpecificFP()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "m_SpecificFP(1.0)"
  },
  {
    "label": "specific_intval()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "specific_intval(V)"
  },
  {
    "label": "br_match()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "br_match(Succ)"
  },
  {
    "label": "CS()",
    "kind": "Method",
    "detail": "Function (CallSite)",
    "insertText": "CS(V)"
  },
  {
    "label": "IntrinsicID_match()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IntrinsicID_match(IntrID)"
  }
]