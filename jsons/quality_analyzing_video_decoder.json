[
  {
    "label": "QualityAnalyzingVideoDecoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QualityAnalyzingVideoDecoder"
  },
  {
    "label": "DecoderCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecoderCallback"
  },
  {
    "label": "QualityAnalyzingVideoDecoderFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QualityAnalyzingVideoDecoderFactory"
  },
  {
    "label": "QualityAnalyzingVideoDecoder()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "QualityAnalyzingVideoDecoder(absl::string_view peer_name,\n                               std::unique_ptr<VideoDecoder> delegate,\n                               EncodedImageDataExtractor* extractor,\n                               VideoQualityAnalyzerInterface* analyzer)"
  },
  {
    "label": "DecoderCallback()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "DecoderCallback(QualityAnalyzingVideoDecoder* decoder)"
  },
  {
    "label": "SetDelegateCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDelegateCallback(DecodedImageCallback* delegate)"
  },
  {
    "label": "IrrelevantSimulcastStreamDecoded()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "IrrelevantSimulcastStreamDecoded(uint16_t frame_id,\n                                             uint32_t timestamp_ms)"
  },
  {
    "label": "GetDummyFrameBuffer()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<webrtc::VideoFrameBuffer>)",
    "insertText": "GetDummyFrameBuffer()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (delegate_callback_)",
    "insertText": "RTC_GUARDED_BY(callback_mutex_)"
  },
  {
    "label": "OnFrameDecoded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrameDecoded(VideoFrame* frame,\n                      absl::optional<int32_t> decode_time_ms,\n                      absl::optional<uint8_t> qp)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (codec_name_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (timestamp_to_frame_id_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (decoding_images_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  },
  {
    "label": "QualityAnalyzingVideoDecoderFactory()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "QualityAnalyzingVideoDecoderFactory(\n      absl::string_view peer_name,\n      std::unique_ptr<VideoDecoderFactory> delegate,\n      EncodedImageDataExtractor* extractor,\n      VideoQualityAnalyzerInterface* analyzer)"
  }
]