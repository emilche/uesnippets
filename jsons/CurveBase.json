[
  {
    "label": "UCurveBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveBase"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportData"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" UObject / ScriptMacros . h \" # include \" Curves / CurveOwnerInterface . h \" # include \" CurveBase . generated . h \")",
    "insertText": "UCLASS(abstract, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UFUNCTION(BlueprintCallable, Category=\"Math|Curves\") ENGINE_API void GetTimeRange(float& MinTime, float& MaxTime)"
  },
  {
    "label": "GetTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetTimeRange(double& MinTime, double& MaxTime)"
  },
  {
    "label": "GetValueRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValueRange(double& MinValue, double& MaxValue)"
  },
  {
    "label": "CreateCurveFromCSVString()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "CreateCurveFromCSVString(const FString& InString)"
  },
  {
    "label": "ImportFromJSONString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportFromJSONString(const FString& InString, TArray<FString>& OutProblems)"
  },
  {
    "label": "ExportAsJSONString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ExportAsJSONString()"
  },
  {
    "label": "ResetCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCurve()"
  },
  {
    "label": "GetCurves()",
    "kind": "Method",
    "detail": "Function (public : TArray<FRichCurveEditInfoConst>)",
    "insertText": "GetCurves()"
  },
  {
    "label": "ModifyOwner()",
    "kind": "Method",
    "detail": "Function (TArray<FRichCurveEditInfo> Curves ; return Curves ; } void)",
    "insertText": "ModifyOwner()"
  },
  {
    "label": "GetOwners()",
    "kind": "Method",
    "detail": "Function (TArray<const UObject*>)",
    "insertText": "GetOwners()"
  },
  {
    "label": "MakeTransactional()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeTransactional()"
  },
  {
    "label": "OnCurveChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCurveChanged(const TArray<FRichCurveEditInfo>& ChangedCurveEditInfos)"
  },
  {
    "label": "RepointCurveOwner()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RepointCurveOwner(const FPackageReloadedEvent& InPackageReloadedEvent, FCurveOwnerInterface*& OutNewCurveOwner)"
  },
  {
    "label": "IsValidCurve()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidCurve(FRichCurveEditInfo CurveInfo)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FOnUpdateCurve, UCurveBase* , EPropertyChangeType::Type)"
  }
]