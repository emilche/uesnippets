[
  {
    "label": "ACameraActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ACameraActor"
  },
  {
    "label": "UCameraComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCameraComponent"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FPostProcessSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPostProcessSettings"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" Engine / Scene . h \" # include \" CameraActor . generated . h \")",
    "insertText": "UCLASS(ClassGroup=Common, hideCategories=(Input, Rendering), showcategories=(\"Input|MouseInput\", \"Input|TouchInput\"), Blueprintable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() private: UPROPERTY(Category=\"AutoPlayerActivation\", EditAnywhere)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostLoadSubobjects()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostLoadSubobjects(FObjectInstancingGraph* OuterInstanceGraph)"
  },
  {
    "label": "GetDefaultAttachComponent()",
    "kind": "Method",
    "detail": "Function (# endif class USceneComponent*)",
    "insertText": "GetDefaultAttachComponent()"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "GetCameraComponent()",
    "kind": "Method",
    "detail": "Function (public : class UCameraComponent*)",
    "insertText": "GetCameraComponent()"
  }
]