[
  {
    "label": "silk_VQ_WMat_EC_sse4_1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "silk_VQ_WMat_EC_sse4_1(\n    opus_int8                   *ind,                           /* O    index of best codebook vector               */\n    opus_int32                  *res_nrg_Q15,                   /* O    best residual energy                        */\n    opus_int32                  *rate_dist_Q8,                  /* O    best total bitrate                          */\n    opus_int                    *gain_Q7,                       /* O    sum of absolute LTP coefficients            */\n    const opus_int32            *XX_Q17,                        /* I    correlation matrix                          */\n    const opus_int32            *xX_Q17,                        /* I    correlation vector                          */\n    const opus_int8             *cb_Q7,                         /* I    codebook                                    */\n    const opus_uint8            *cb_gain_Q7,                    /* I    codebook effective gain                     */\n    const opus_uint8            *cl_Q5,                         /* I    code length for each codebook vector        */\n    const opus_int              subfr_len,                      /* I    number of samples per subframe              */\n    const opus_int32            max_gain_Q7,                    /* I    maximum sum of absolute LTP coefficients    */\n    const opus_int              L                               /* I    number of vectors in codebook               */\n)"
  },
  {
    "label": "silk_NSQ_sse4_1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "silk_NSQ_sse4_1(\n    const silk_encoder_state    *psEncC,                                      /* I    Encoder State                   */\n    silk_nsq_state              *NSQ,                                         /* I/O  NSQ state                       */\n    SideInfoIndices             *psIndices,                                   /* I/O  Quantization Indices            */\n    const opus_int16            x16[],                                        /* I    Input                           */\n    opus_int8                   pulses[],                                     /* O    Quantized pulse signal          */\n    const opus_int16            PredCoef_Q12[ 2 * MAX_LPC_ORDER ],            /* I    Short term prediction coefs     */\n    const opus_int16            LTPCoef_Q14[ LTP_ORDER * MAX_NB_SUBFR ],      /* I    Long term prediction coefs      */\n    const opus_int16            AR_Q13[ MAX_NB_SUBFR * MAX_SHAPE_LPC_ORDER ], /* I    Noise shaping coefs             */\n    const opus_int              HarmShapeGain_Q14[ MAX_NB_SUBFR ],            /* I    Long term shaping coefs         */\n    const opus_int              Tilt_Q14[ MAX_NB_SUBFR ],                     /* I    Spectral tilt                   */\n    const opus_int32            LF_shp_Q14[ MAX_NB_SUBFR ],                   /* I    Low frequency shaping coefs     */\n    const opus_int32            Gains_Q16[ MAX_NB_SUBFR ],                    /* I    Quantization step sizes         */\n    const opus_int              pitchL[ MAX_NB_SUBFR ],                       /* I    Pitch lags                      */\n    const opus_int              Lambda_Q10,                                   /* I    Rate/distortion tradeoff        */\n    const opus_int              LTP_scale_Q14                                 /* I    LTP state scaling               */\n)"
  },
  {
    "label": "silk_NSQ_del_dec_sse4_1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "silk_NSQ_del_dec_sse4_1(\n    const silk_encoder_state    *psEncC,                                      /* I    Encoder State                   */\n    silk_nsq_state              *NSQ,                                         /* I/O  NSQ state                       */\n    SideInfoIndices             *psIndices,                                   /* I/O  Quantization Indices            */\n    const opus_int16            x16[],                                        /* I    Input                           */\n    opus_int8                   pulses[],                                     /* O    Quantized pulse signal          */\n    const opus_int16            PredCoef_Q12[ 2 * MAX_LPC_ORDER ],            /* I    Short term prediction coefs     */\n    const opus_int16            LTPCoef_Q14[ LTP_ORDER * MAX_NB_SUBFR ],      /* I    Long term prediction coefs      */\n    const opus_int16            AR_Q13[ MAX_NB_SUBFR * MAX_SHAPE_LPC_ORDER ], /* I    Noise shaping coefs             */\n    const opus_int              HarmShapeGain_Q14[ MAX_NB_SUBFR ],            /* I    Long term shaping coefs         */\n    const opus_int              Tilt_Q14[ MAX_NB_SUBFR ],                     /* I    Spectral tilt                   */\n    const opus_int32            LF_shp_Q14[ MAX_NB_SUBFR ],                   /* I    Low frequency shaping coefs     */\n    const opus_int32            Gains_Q16[ MAX_NB_SUBFR ],                    /* I    Quantization step sizes         */\n    const opus_int              pitchL[ MAX_NB_SUBFR ],                       /* I    Pitch lags                      */\n    const opus_int              Lambda_Q10,                                   /* I    Rate/distortion tradeoff        */\n    const opus_int              LTP_scale_Q14                                 /* I    LTP state scaling               */\n)"
  },
  {
    "label": "silk_noise_shape_quantizer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "silk_noise_shape_quantizer(\n    silk_nsq_state      *NSQ,                   /* I/O  NSQ state                       */\n    opus_int            signalType,             /* I    Signal type                     */\n    const opus_int32    x_sc_Q10[],             /* I                                    */\n    opus_int8           pulses[],               /* O                                    */\n    opus_int16          xq[],                   /* O                                    */\n    opus_int32          sLTP_Q15[],             /* I/O  LTP state                       */\n    const opus_int16    a_Q12[],                /* I    Short term prediction coefs     */\n    const opus_int16    b_Q14[],                /* I    Long term prediction coefs      */\n    const opus_int16    AR_shp_Q13[],           /* I    Noise shaping AR coefs          */\n    opus_int            lag,                    /* I    Pitch lag                       */\n    opus_int32          HarmShapeFIRPacked_Q14, /* I                                    */\n    opus_int            Tilt_Q14,               /* I    Spectral tilt                   */\n    opus_int32          LF_shp_Q14,             /* I                                    */\n    opus_int32          Gain_Q16,               /* I                                    */\n    opus_int            Lambda_Q10,             /* I                                    */\n    opus_int            offset_Q10,             /* I                                    */\n    opus_int            length,                 /* I    Input length                    */\n    opus_int            shapingLPCOrder,        /* I    Noise shaping AR filter order   */\n    opus_int            predictLPCOrder,        /* I    Prediction filter order         */\n    int                 arch                    /* I    Architecture                    */\n)"
  },
  {
    "label": "silk_VAD_GetNoiseLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "silk_VAD_GetNoiseLevels(\n    const opus_int32            pX[ VAD_N_BANDS ],  /* I    subband energies                            */\n    silk_VAD_state              *psSilk_VAD         /* I/O  Pointer to Silk VAD state                   */\n)"
  },
  {
    "label": "silk_VAD_GetSA_Q8_sse4_1()",
    "kind": "Method",
    "detail": "Function (opus_int)",
    "insertText": "silk_VAD_GetSA_Q8_sse4_1(\n    silk_encoder_state *psEnC,\n    const opus_int16   pIn[]\n)"
  }
]