[
  {
    "label": "IAsyncOperationProgress",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncOperationProgress"
  },
  {
    "label": "FMemAllocGroupingBySize",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemAllocGroupingBySize"
  },
  {
    "label": "FThreshold",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThreshold"
  },
  {
    "label": "INSIGHTS_DECLARE_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" InsightsCore / Table / ViewModels / BaseTreeNode . h \" # include \" InsightsCore / Table / ViewModels / TreeNodeGrouping . h \" namespace UE::Insights { class IAsyncOperationProgress ; } namespace UE::Insights::MemoryProfiler { class FMemAllocGroupingBySize : public FTreeNodeGrouping {)",
    "insertText": "INSIGHTS_DECLARE_RTTI(FMemAllocGroupingBySize, FTreeNodeGrouping)"
  },
  {
    "label": "FMemAllocGroupingBySize()",
    "kind": "Method",
    "detail": "Function (uint64 Size ; FText Name ; } ; public :)",
    "insertText": "FMemAllocGroupingBySize()"
  },
  {
    "label": "GetThresholds()",
    "kind": "Method",
    "detail": "Function (const TArray<FThreshold>&)",
    "insertText": "GetThresholds()"
  },
  {
    "label": "IsPow2()",
    "kind": "Method",
    "detail": "Function (bIsPow2 = false ; return Thresholds ; } bool)",
    "insertText": "IsPow2()"
  },
  {
    "label": "GroupNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GroupNodes(const TArray<FTableTreeNodePtr>& Nodes, FTableTreeNode& ParentGroup, TWeakPtr<FTable> InParentTable, IAsyncOperationProgress& InAsyncOperationProgress)"
  }
]