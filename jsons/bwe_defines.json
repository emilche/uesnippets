[
  {
    "label": "BweNames",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "BweNames"
  },
  {
    "label": "RateControlInput",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RateControlInput"
  },
  {
    "label": "BitsPerSec()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_REMOTE_BITRATE_ESTIMATOR_INCLUDE_BWE_DEFINES_H_ # define MODULES_REMOTE_BITRATE_ESTIMATOR_INCLUDE_BWE_DEFINES_H_ # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / network_state_predictor . h \" # include \" api / units / data_rate . h \" namespace webrtc { DataRate kCongestionControllerMinBitrate =)",
    "insertText": "BitsPerSec(5000)"
  },
  {
    "label": "RateControlInput()",
    "kind": "Method",
    "detail": "Function (const int64_t kBitrateWindowMs = 1 0 0 0 ; const char kBweTypeHistogram [ ] ; enum BweNames { kReceiverNoExtension = 0,kReceiverTOffset = 1,kReceiverAbsSendTime = 2,kSendSideTransportSeqNum = 3,kBweNamesMax = 4 } ; struct RateControlInput {)",
    "insertText": "RateControlInput(BandwidthUsage bw_state, const absl::optional<DataRate>& estimated_throughput)"
  },
  {
    "label": "RateControlInput()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RateControlInput()"
  }
]