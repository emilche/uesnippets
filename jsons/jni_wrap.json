[
  {
    "label": "Object",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Object"
  },
  {
    "label": "OutputStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OutputStream"
  },
  {
    "label": "OutputStreamWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OutputStreamWriter"
  },
  {
    "label": "Writer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Writer"
  },
  {
    "label": "BufferedWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferedWriter"
  },
  {
    "label": "InputStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputStream"
  },
  {
    "label": "Reader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Reader"
  },
  {
    "label": "InputStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InputStreamReader"
  },
  {
    "label": "BufferedReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferedReader"
  },
  {
    "label": "File",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "File"
  },
  {
    "label": "UUID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUID"
  },
  {
    "label": "List",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "List"
  },
  {
    "label": "URLConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URLConnection"
  },
  {
    "label": "HttpURLConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HttpURLConnection"
  },
  {
    "label": "URL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URL"
  },
  {
    "label": "MessageDigest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessageDigest"
  },
  {
    "label": "FeatureInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FeatureInfo"
  },
  {
    "label": "ApplicationInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApplicationInfo"
  },
  {
    "label": "PackageInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PackageInfo"
  },
  {
    "label": "PackageManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PackageManager"
  },
  {
    "label": "AssetManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AssetManager"
  },
  {
    "label": "Intent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Intent"
  },
  {
    "label": "IntentFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IntentFilter"
  },
  {
    "label": "BroadcastReceiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BroadcastReceiver"
  },
  {
    "label": "Context",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Context"
  },
  {
    "label": "DebugClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DebugClass"
  },
  {
    "label": "Build",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Build"
  },
  {
    "label": "Process",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Process"
  },
  {
    "label": "BatteryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BatteryManager"
  },
  {
    "label": "PowerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PowerManager"
  },
  {
    "label": "ConnectivityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConnectivityManager"
  },
  {
    "label": "MemoryInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MemoryInfo"
  },
  {
    "label": "ActivityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ActivityManager"
  },
  {
    "label": "ApplicationExitInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ApplicationExitInfo"
  },
  {
    "label": "Object()",
    "kind": "Method",
    "detail": "Function (# pragma once # include<sstream> # include \" jni / jni_helper . h \" namespace gamesdk { namespace jni { namespace java { class Object { public : LocalObject obj_ ;)",
    "insertText": "Object(const char* className, const char* ctorSig, ...)"
  },
  {
    "label": "va_start()",
    "kind": "Method",
    "detail": "Function (va_list argptr ;)",
    "insertText": "va_start(argptr, ctorSig)"
  },
  {
    "label": "NewObjectV()",
    "kind": "Method",
    "detail": "Function (obj_ =)",
    "insertText": "NewObjectV(className, ctorSig, argptr)"
  },
  {
    "label": "va_end()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "va_end(argptr)"
  },
  {
    "label": "Object()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Object(LocalObject&& o) : obj_(std::move(o))"
  },
  {
    "label": "Object()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Object(jobject o)"
  },
  {
    "label": "Cast()",
    "kind": "Method",
    "detail": "Function (obj_ = o ; obj_ .)",
    "insertText": "Cast()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "valid()"
  },
  {
    "label": "CallVVMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallVVMethod(const char* name)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "CallVoidMethod(name, \"()V\")"
  },
  {
    "label": "CallIVMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallIVMethod(const char* name, int a)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "CallVoidMethod(name, \"(I)V\", a)"
  },
  {
    "label": "CallVIMethod()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "CallVIMethod(const char* name)"
  },
  {
    "label": "CallIIMethod()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "CallIIMethod(const char* name, const int a)"
  },
  {
    "label": "CallZVMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallZVMethod(const char* name, bool a)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "CallVoidMethod(name, \"(Z)V\", a)"
  },
  {
    "label": "CallSVMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallSVMethod(const char* name, const char* a)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "CallVoidMethod(name, \"(Ljava/lang/String;)V\", String(a).J())"
  },
  {
    "label": "CallVSMethod()",
    "kind": "Method",
    "detail": "Function (} String)",
    "insertText": "CallVSMethod(const char* name)"
  },
  {
    "label": "CallSSVMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallSSVMethod(const char* name, const char* a, const char* b)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "CallVoidMethod(name, \"(Ljava/lang/String;Ljava/lang/String;)V\", String(a).J(), String(b).J())"
  },
  {
    "label": "CallAOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallAOMethod(const char* name, const char* returnClass)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str()"
  },
  {
    "label": "CallObjectMethod()",
    "kind": "Method",
    "detail": "Function (\" ; jobject o = obj_ .)",
    "insertText": "CallObjectMethod(name, str.str().c_str())"
  },
  {
    "label": "CallVOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallVOMethod(const char* name, const char* returnClass)"
  },
  {
    "label": "CallIOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallIOMethod(const char* name, int a, const char* returnClass)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str(I)"
  },
  {
    "label": "CallObjectMethod()",
    "kind": "Method",
    "detail": "Function (\" ; jobject o = obj_ .)",
    "insertText": "CallObjectMethod(name, str.str().c_str(), a)"
  },
  {
    "label": "CallOVMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CallOVMethod(const char* name, const char* parameterClassA, const Object& a)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str(L\" << parameterClassA << \";)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "CallVoidMethod(name, str.str().c_str(), (jobject)a.obj_)"
  },
  {
    "label": "CallSIOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallSIOMethod(const char* name, const char* a, int b, const char* returnClass)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str(Ljava/lang/String;I)"
  },
  {
    "label": "CallObjectMethod()",
    "kind": "Method",
    "detail": "Function (\" ; jobject o = obj_ .)",
    "insertText": "CallObjectMethod(name, str.str().c_str(), String(a).J(), b)"
  },
  {
    "label": "CallOOOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallOOOMethod(const char* name, const char* parameterClassA, const Object& a, const char* parameterClassB, const Object& b, const char* returnClass)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str(L\" << parameterClassA << \";L\" << parameterClassB << \";)"
  },
  {
    "label": "CallObjectMethod()",
    "kind": "Method",
    "detail": "Function (\" ; jobject o = obj_ .)",
    "insertText": "CallObjectMethod(name, str.str().c_str(), (jobject)a.obj_, (jobject)b.obj_)"
  },
  {
    "label": "CallSIIMethod()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "CallSIIMethod(const char* name, const char* a, const int b)"
  },
  {
    "label": "CallSIIOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallSIIOMethod(const char* name, const char* a, int b, int c, const char* returnClass)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str(Ljava/lang/String;II)"
  },
  {
    "label": "CallObjectMethod()",
    "kind": "Method",
    "detail": "Function (\" ; jobject o = obj_ .)",
    "insertText": "CallObjectMethod(name, str.str().c_str(), String(a).J(), b, c)"
  },
  {
    "label": "CallSOMethod()",
    "kind": "Method",
    "detail": "Function (} Object)",
    "insertText": "CallSOMethod(const char* name, const char* a, const char* returnClass)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::stringstream str ;)",
    "insertText": "str(Ljava/lang/String;)"
  },
  {
    "label": "CallObjectMethod()",
    "kind": "Method",
    "detail": "Function (\" ; jobject o = obj_ .)",
    "insertText": "CallObjectMethod(name, str.str().c_str(), String(a).J())"
  },
  {
    "label": "CallVZMethod()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CallVZMethod(const char* name)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "OutputStream()",
    "kind": "Method",
    "detail": "Function (} } ; namespace io { class OutputStream : public Object { public :)",
    "insertText": "OutputStream(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "close()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "close()"
  },
  {
    "label": "CallVVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallVVMethod(\"close\")"
  },
  {
    "label": "OutputStreamWriter()",
    "kind": "Method",
    "detail": "Function (} } ; class OutputStreamWriter : public Object { public :)",
    "insertText": "OutputStreamWriter(OutputStream& o, const std::string& s) : Object(\"java/io/OutputStreamWriter\", \"(Ljava/io/OutputStream;Ljava/lang/String;)V\", (jobject)o.obj_, String(s.c_str()).J())"
  },
  {
    "label": "Writer()",
    "kind": "Method",
    "detail": "Function (} } ; class Writer : public Object { public :)",
    "insertText": "Writer(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "write()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "write(const std::string& s)"
  },
  {
    "label": "CallSVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallSVMethod(\"write\", s.c_str())"
  },
  {
    "label": "flush()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "flush()"
  },
  {
    "label": "CallVVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallVVMethod(\"flush\")"
  },
  {
    "label": "BufferedWriter()",
    "kind": "Method",
    "detail": "Function (} } ; class BufferedWriter : public Writer { public :)",
    "insertText": "BufferedWriter(const Writer& w) : Writer(Object(\"java/io/BufferedWriter\", \"(Ljava/io/Writer;)V\", (jobject)w.obj_))"
  },
  {
    "label": "InputStream()",
    "kind": "Method",
    "detail": "Function (} } ; class InputStream : public Object { public :)",
    "insertText": "InputStream(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "Reader()",
    "kind": "Method",
    "detail": "Function (} } ; class Reader : public Object { public :)",
    "insertText": "Reader(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "readLine()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "readLine()"
  },
  {
    "label": "InputStreamReader()",
    "kind": "Method",
    "detail": "Function (} } ; class InputStreamReader : public Reader { public :)",
    "insertText": "InputStreamReader(const InputStream& is, const std::string& s) : Reader(Object(\"java/io/InputStreamReader\", \"(Ljava/io/InputStream;Ljava/lang/String;)V\", (jobject)is.obj_, String(s.c_str()).J()))"
  },
  {
    "label": "BufferedReader()",
    "kind": "Method",
    "detail": "Function (} } ; class BufferedReader : public Reader { public :)",
    "insertText": "BufferedReader(const Reader& r) : Reader(Object(\"java/io/BufferedReader\", \"(Ljava/io/Reader;)V\", (jobject)r.obj_))"
  },
  {
    "label": "File()",
    "kind": "Method",
    "detail": "Function (} } ; class File : public Object { public :)",
    "insertText": "File(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "getPath()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "getPath()"
  },
  {
    "label": "UUID()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace util { class UUID : public Object { public :)",
    "insertText": "UUID(LocalObject&& o) : Object(std::move(o))"
  },
  {
    "label": "randomUUID()",
    "kind": "Method",
    "detail": "Function (} UUID)",
    "insertText": "randomUUID()"
  },
  {
    "label": "obj()",
    "kind": "Method",
    "detail": "Function (LocalObject)",
    "insertText": "obj(nullptr, Env()->FindClass(\"java/util/UUID\"))"
  },
  {
    "label": "CallStaticObjectMethod()",
    "kind": "Method",
    "detail": "Function (auto o = obj .)",
    "insertText": "CallStaticObjectMethod(\"randomUUID\", \"()Ljava/util/UUID;\")"
  },
  {
    "label": "SetObj()",
    "kind": "Method",
    "detail": "Function (obj .)",
    "insertText": "SetObj(o)"
  },
  {
    "label": "List()",
    "kind": "Method",
    "detail": "Function (} } ; class List : public java::Object { public :)",
    "insertText": "List(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} java::Object)",
    "insertText": "get(int index)"
  },
  {
    "label": "isEmpty()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isEmpty()"
  },
  {
    "label": "toString()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "toString()"
  },
  {
    "label": "URLConnection()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace net { class URLConnection : public Object { public :)",
    "insertText": "URLConnection(Object&& o) : Object(std::move(o))"
  },
  {
    "label": "HttpURLConnection()",
    "kind": "Method",
    "detail": "Function (} } ; class HttpURLConnection : public URLConnection { public :)",
    "insertText": "HttpURLConnection(URLConnection&& u) : URLConnection(std::move(u))"
  },
  {
    "label": "Cast()",
    "kind": "Method",
    "detail": "Function (obj_ .)",
    "insertText": "Cast(\"java/net/HttpURLConnection\")"
  },
  {
    "label": "setRequestMethod()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setRequestMethod(const std::string& method)"
  },
  {
    "label": "CallSVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallSVMethod(\"setRequestMethod\", method.c_str())"
  },
  {
    "label": "setConnectTimeout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setConnectTimeout(int t)"
  },
  {
    "label": "CallIVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallIVMethod(\"setConnectTimeout\", t)"
  },
  {
    "label": "setReadTimeout()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setReadTimeout(int timeout)"
  },
  {
    "label": "CallIVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallIVMethod(\"setReadTimeout\", timeout)"
  },
  {
    "label": "setDoOutput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setDoOutput(bool d)"
  },
  {
    "label": "CallZVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallZVMethod(\"setDoOutput\", d)"
  },
  {
    "label": "setDoInput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setDoInput(bool d)"
  },
  {
    "label": "CallZVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallZVMethod(\"setDoInput\", d)"
  },
  {
    "label": "setUseCaches()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setUseCaches(bool d)"
  },
  {
    "label": "CallZVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallZVMethod(\"setUseCaches\", d)"
  },
  {
    "label": "setRequestProperty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setRequestProperty(const std::string& name, const std::string& value)"
  },
  {
    "label": "CallSSVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallSSVMethod(\"setRequestProperty\", name.c_str(), value.c_str())"
  },
  {
    "label": "getOutputStream()",
    "kind": "Method",
    "detail": "Function (} io::OutputStream)",
    "insertText": "getOutputStream()"
  },
  {
    "label": "connect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "connect()"
  },
  {
    "label": "CallVVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallVVMethod(\"connect\")"
  },
  {
    "label": "disconnect()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "disconnect()"
  },
  {
    "label": "CallVVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallVVMethod(\"disconnect\")"
  },
  {
    "label": "getResponseCode()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "getResponseCode()"
  },
  {
    "label": "getResponseMessage()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "getResponseMessage()"
  },
  {
    "label": "getInputStream()",
    "kind": "Method",
    "detail": "Function (} io::InputStream)",
    "insertText": "getInputStream()"
  },
  {
    "label": "URL()",
    "kind": "Method",
    "detail": "Function (} } ; class URL : public Object { public :)",
    "insertText": "URL(LocalObject o) : Object(o)"
  },
  {
    "label": "URL()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "URL(const std::string& s) : Object(\"java/net/URL\", \"(Ljava/lang/String;)V\", String(s.c_str()).J())"
  },
  {
    "label": "openConnection()",
    "kind": "Method",
    "detail": "Function (} URLConnection)",
    "insertText": "openConnection()"
  },
  {
    "label": "MessageDigest()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace security { class MessageDigest : public java::Object { public :)",
    "insertText": "MessageDigest(const std::string& instance) : java::Object(nullptr)"
  },
  {
    "label": "temp()",
    "kind": "Method",
    "detail": "Function (LocalObject)",
    "insertText": "temp(nullptr, FindClass(\"java/security/MessageDigest\"))"
  },
  {
    "label": "CallStaticObjectMethod()",
    "kind": "Method",
    "detail": "Function (auto o = temp .)",
    "insertText": "CallStaticObjectMethod(\"getInstance\", \"(Ljava/lang/String;)Ljava/security/MessageDigest;\", String(instance.c_str()).J())"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (obj_ =)",
    "insertText": "move(temp)"
  },
  {
    "label": "digest()",
    "kind": "Method",
    "detail": "Function (} std::vector<unsigned char>)",
    "insertText": "digest(const std::vector<unsigned char>& bs)"
  },
  {
    "label": "Env()",
    "kind": "Method",
    "detail": "Function (auto env =)",
    "insertText": "Env()"
  },
  {
    "label": "NewByteArray()",
    "kind": "Method",
    "detail": "Function (jbyteArray jbs = env ->)",
    "insertText": "NewByteArray(bs.size())"
  },
  {
    "label": "SetByteArrayRegion()",
    "kind": "Method",
    "detail": "Function (env ->)",
    "insertText": "SetByteArrayRegion(jbs, 0, bs.size(), reinterpret_cast<const jbyte*>(bs.data()))"
  },
  {
    "label": "jbyteArray()",
    "kind": "Method",
    "detail": "Function (jbyteArray out = reinterpret_cast<)",
    "insertText": "jbyteArray(obj_.CallObjectMethod(\"digest\", \"([B)[B\", jbs))"
  },
  {
    "label": "DeleteLocalRef()",
    "kind": "Method",
    "detail": "Function (env ->)",
    "insertText": "DeleteLocalRef(jbs)"
  },
  {
    "label": "FeatureInfo()",
    "kind": "Method",
    "detail": "Function (} } ; } } namespace android { namespace content { namespace pm { class FeatureInfo : public java::Object { public :)",
    "insertText": "FeatureInfo(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "jname()",
    "kind": "Method",
    "detail": "Function (jni::String)",
    "insertText": "jname((jstring)obj_.GetObjectField(\"name\", \"Ljava/lang/String;\") .ObjNewRef())"
  },
  {
    "label": "GetIntField()",
    "kind": "Method",
    "detail": "Function (reqGlEsVersion = obj_ .)",
    "insertText": "GetIntField(\"reqGlEsVersion\")"
  },
  {
    "label": "ApplicationInfo()",
    "kind": "Method",
    "detail": "Function (} int GL_ES_VERSION_UNDEFINED = 0 x0000000 ; std::string name ; int reqGlEsVersion ; } ; class ApplicationInfo : public java::Object { public :)",
    "insertText": "ApplicationInfo(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "flags()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "flags()"
  },
  {
    "label": "PackageInfo()",
    "kind": "Method",
    "detail": "Function (} const int FLAG_DEBUGGABLE = 2 ; } ; class PackageInfo : public java::Object { public :)",
    "insertText": "PackageInfo(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "signatures()",
    "kind": "Method",
    "detail": "Function (} typedef std::vector<unsigned char> Signature ; std::vector<Signature>)",
    "insertText": "signatures()"
  },
  {
    "label": "GetObjectField()",
    "kind": "Method",
    "detail": "Function (auto jsigs = obj_ .)",
    "insertText": "GetObjectField(\"signatures\", \"[Landroid/content/pm/Signature;\")"
  },
  {
    "label": "AsObjectArray()",
    "kind": "Method",
    "detail": "Function (jobjectArray sigs = jsigs .)",
    "insertText": "AsObjectArray()"
  },
  {
    "label": "GetArrayLength()",
    "kind": "Method",
    "detail": "Function (} ; int n = env ->)",
    "insertText": "GetArrayLength(sigs)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (std::vector<std::vector<unsigned char>> ret ;)",
    "insertText": "for(int i = 0; i < n; ++i)"
  },
  {
    "label": "sig()",
    "kind": "Method",
    "detail": "Function (Object)",
    "insertText": "sig(env->GetObjectArrayElement(sigs, i))"
  },
  {
    "label": "jbyteArray()",
    "kind": "Method",
    "detail": "Function (jbyteArray bytes = reinterpret_cast<)",
    "insertText": "jbyteArray(sig.obj_.CallObjectMethod(\"toByteArray\", \"()[B\"))"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (ret .)",
    "insertText": "push_back(GetByteArrayBytesAndDeleteRef(bytes))"
  },
  {
    "label": "versionCode()",
    "kind": "Method",
    "detail": "Function (} return ret ; } else return { } ; } int)",
    "insertText": "versionCode()"
  },
  {
    "label": "applicationInfo()",
    "kind": "Method",
    "detail": "Function (} ApplicationInfo)",
    "insertText": "applicationInfo()"
  },
  {
    "label": "GetObjectField()",
    "kind": "Method",
    "detail": "Function (auto appInfo = obj_ .)",
    "insertText": "GetObjectField(\"applicationInfo\", \"[Landroid/content/pm/ApplicationInfo;\")"
  },
  {
    "label": "PackageManager()",
    "kind": "Method",
    "detail": "Function (} } ; class PackageManager : public java::Object { public :)",
    "insertText": "PackageManager(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "getPackageInfo()",
    "kind": "Method",
    "detail": "Function (} int GET_SIGNATURES = 0 x0000040 ; PackageInfo)",
    "insertText": "getPackageInfo(const std::string& name, int flags)"
  },
  {
    "label": "getSystemAvailableFeatures()",
    "kind": "Method",
    "detail": "Function (} std::vector<FeatureInfo>)",
    "insertText": "getSystemAvailableFeatures()"
  },
  {
    "label": "CallAOMethod()",
    "kind": "Method",
    "detail": "Function (auto jfeatures =)",
    "insertText": "CallAOMethod(\"getSystemAvailableFeatures\", \"android/content/pm/FeatureInfo\")"
  },
  {
    "label": "GetArrayLength()",
    "kind": "Method",
    "detail": "Function (int n = env ->)",
    "insertText": "GetArrayLength(features)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (std::vector<FeatureInfo> ret ;)",
    "insertText": "if(n > 0)"
  },
  {
    "label": "f()",
    "kind": "Method",
    "detail": "Function (FeatureInfo)",
    "insertText": "f(Object(env->GetObjectArrayElement(features, i)))"
  },
  {
    "label": "push_back()",
    "kind": "Method",
    "detail": "Function (ret .)",
    "insertText": "push_back(std::move(f))"
  },
  {
    "label": "AssetManager()",
    "kind": "Method",
    "detail": "Function (} } return ret ; } } ; } namespace res { class AssetManager : public java::Object { public :)",
    "insertText": "AssetManager(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "Intent()",
    "kind": "Method",
    "detail": "Function (} } ; } class Intent : java::Object { public : const char* ACTION_BATTERY_CHANGED = \" android . intent . action . BATTERY_CHANGED \" ;)",
    "insertText": "Intent(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "getIntExtra()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "getIntExtra(const char* name, int defaultValue)"
  },
  {
    "label": "IntentFilter()",
    "kind": "Method",
    "detail": "Function (} } ; class IntentFilter : public java::Object { public :)",
    "insertText": "IntentFilter(jobject o) : java::Object(o)"
  },
  {
    "label": "IntentFilter()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IntentFilter(const char* action) : Object(\"android/content/IntentFilter\", \"(Ljava/lang/String;)V\", String(action).J())"
  },
  {
    "label": "BroadcastReceiver()",
    "kind": "Method",
    "detail": "Function (} } ; class BroadcastReceiver : public java::Object { public :)",
    "insertText": "BroadcastReceiver(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "Context()",
    "kind": "Method",
    "detail": "Function (} } ; class Context : public java::Object { public : const char* CONNECTIVITY_SERVICE = \" connectivity \" ; const char* BATTERY_SERVICE = \" batterymanager \" ; const char* POWER_SERVICE = \" power \" ; const char* ACTIVITY_SERVICE = \" activity \" ;)",
    "insertText": "Context(jobject o) : java::Object(o)"
  },
  {
    "label": "getPackageManager()",
    "kind": "Method",
    "detail": "Function (} pm::PackageManager)",
    "insertText": "getPackageManager()"
  },
  {
    "label": "getPackageName()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "getPackageName()"
  },
  {
    "label": "getAssets()",
    "kind": "Method",
    "detail": "Function (} res::AssetManager)",
    "insertText": "getAssets()"
  },
  {
    "label": "getCacheDir()",
    "kind": "Method",
    "detail": "Function (} java::io::File)",
    "insertText": "getCacheDir()"
  },
  {
    "label": "getSystemService()",
    "kind": "Method",
    "detail": "Function (} java::Object)",
    "insertText": "getSystemService(const char* name)"
  },
  {
    "label": "registerReceiver()",
    "kind": "Method",
    "detail": "Function (} java::Object)",
    "insertText": "registerReceiver(BroadcastReceiver& broadcastReceiver, IntentFilter& intentFilter)"
  },
  {
    "label": "getNativeHeapAllocatedSize()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace os { class DebugClass { jmethodID getNativeHeapAllocatedSize_method_id_ ; public : uint64_t)",
    "insertText": "getNativeHeapAllocatedSize()"
  },
  {
    "label": "Cast()",
    "kind": "Method",
    "detail": "Function (LocalObject obj ; obj .)",
    "insertText": "Cast(\"android/os/Debug\")"
  },
  {
    "label": "GetStaticMethodID()",
    "kind": "Method",
    "detail": "Function (jclass clz = obj ; jmethodID method = env ->)",
    "insertText": "GetStaticMethodID(clz, \"getNativeHeapAllocatedSize\", \"()J\")"
  },
  {
    "label": "getNativeHeapFreeSize()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } uint64_t)",
    "insertText": "getNativeHeapFreeSize()"
  },
  {
    "label": "GetStaticMethodID()",
    "kind": "Method",
    "detail": "Function (jclass clz = obj ; jmethodID method = env ->)",
    "insertText": "GetStaticMethodID(clz, \"getNativeHeapFreeSize\", \"()J\")"
  },
  {
    "label": "getNativeHeapSize()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } uint64_t)",
    "insertText": "getNativeHeapSize()"
  },
  {
    "label": "GetStaticMethodID()",
    "kind": "Method",
    "detail": "Function (jclass clz = obj ; jmethodID method = env ->)",
    "insertText": "GetStaticMethodID(clz, \"getNativeHeapSize\", \"()J\")"
  },
  {
    "label": "getPss()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } uint64_t)",
    "insertText": "getPss()"
  },
  {
    "label": "GetStaticMethodID()",
    "kind": "Method",
    "detail": "Function (jclass clz = obj ; jmethodID method = env ->)",
    "insertText": "GetStaticMethodID(clz, \"getPss\", \"()J\")"
  },
  {
    "label": "MODEL()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } } ; class Build { const char class_name [ ] = \" android / os / Build \" ; public : jni::String)",
    "insertText": "MODEL()"
  },
  {
    "label": "BRAND()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "BRAND()"
  },
  {
    "label": "PRODUCT()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "PRODUCT()"
  },
  {
    "label": "DEVICE()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "DEVICE()"
  },
  {
    "label": "FINGERPRINT()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "FINGERPRINT()"
  },
  {
    "label": "SOC_MODEL()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "SOC_MODEL()"
  },
  {
    "label": "SOC_MANUFACTURER()",
    "kind": "Method",
    "detail": "Function (} jni::String)",
    "insertText": "SOC_MANUFACTURER()"
  },
  {
    "label": "myPid()",
    "kind": "Method",
    "detail": "Function (} } ; class Process { public : int)",
    "insertText": "myPid()"
  },
  {
    "label": "Cast()",
    "kind": "Method",
    "detail": "Function (LocalObject obj ; obj .)",
    "insertText": "Cast(\"android/os/Process\")"
  },
  {
    "label": "GetStaticMethodID()",
    "kind": "Method",
    "detail": "Function (jclass clz = obj ; jmethodID method = env ->)",
    "insertText": "GetStaticMethodID(clz, \"myPid\", \"()I\")"
  },
  {
    "label": "BatteryManager()",
    "kind": "Method",
    "detail": "Function (} return 0 ; } } ; class BatteryManager : java::Object { public : const char* EXTRA_LEVEL = \" level \" ; const char* EXTRA_SCALE = \" scale \" ; const char* EXTRA_PLUGGED = \" plugged \" ; const int BATTERY_PROPERTY_CHARGE_COUNTER = 1 ;)",
    "insertText": "BatteryManager(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "getIntProperty()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "getIntProperty(int id)"
  },
  {
    "label": "PowerManager()",
    "kind": "Method",
    "detail": "Function (} } ; class PowerManager : java::Object { public :)",
    "insertText": "PowerManager(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "getCurrentThermalStatus()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "getCurrentThermalStatus()"
  },
  {
    "label": "isPowerSaveMode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isPowerSaveMode()"
  },
  {
    "label": "ConnectivityManager()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace net { class ConnectivityManager : java::Object { public :)",
    "insertText": "ConnectivityManager(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "isActiveNetworkMetered()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isActiveNetworkMetered()"
  },
  {
    "label": "MemoryInfo()",
    "kind": "Method",
    "detail": "Function (} } ; } namespace app { class MemoryInfo : public java::Object { public :)",
    "insertText": "MemoryInfo(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "MemoryInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MemoryInfo() : java::Object(\"android/app/ActivityManager$MemoryInfo\", \"()V\")"
  },
  {
    "label": "threshold()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "threshold()"
  },
  {
    "label": "availMem()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "availMem()"
  },
  {
    "label": "lowMemory()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "lowMemory()"
  },
  {
    "label": "totalMem()",
    "kind": "Method",
    "detail": "Function (} int64_t)",
    "insertText": "totalMem()"
  },
  {
    "label": "ActivityManager()",
    "kind": "Method",
    "detail": "Function (} } ; class ActivityManager : public java::Object { public :)",
    "insertText": "ActivityManager(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "getMemoryInfo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "getMemoryInfo(MemoryInfo& memoryInfo)"
  },
  {
    "label": "CallOVMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallOVMethod(\"getMemoryInfo\", \"android/app/ActivityManager$MemoryInfo\", memoryInfo)"
  },
  {
    "label": "getMemoryClass()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "getMemoryClass()"
  },
  {
    "label": "getLargeMemoryClass()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "getLargeMemoryClass()"
  },
  {
    "label": "isLowRamDevice()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isLowRamDevice()"
  },
  {
    "label": "getHistoricalProcessExitReasons()",
    "kind": "Method",
    "detail": "Function (} java::util::List)",
    "insertText": "getHistoricalProcessExitReasons(std::string& packageName, int pid, int maxNum)"
  },
  {
    "label": "ApplicationExitInfo()",
    "kind": "Method",
    "detail": "Function (} } ; class ApplicationExitInfo : java::Object { public : int REASON_LOW_MEMORY = 3 ;)",
    "insertText": "ApplicationExitInfo(java::Object&& o) : java::Object(std::move(o))"
  },
  {
    "label": "getReason()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "getReason()"
  },
  {
    "label": "AppContext()",
    "kind": "Method",
    "detail": "Function (} } ; } } android::content::Context)",
    "insertText": "AppContext()"
  }
]