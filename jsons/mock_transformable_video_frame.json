[
  {
    "label": "MockTransformableVideoFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockTransformableVideoFrame"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_TRANSFORMABLE_VIDEO_FRAME_H_ # define API_TEST_MOCK_TRANSFORMABLE_VIDEO_FRAME_H_ # include<vector> # include \" api / frame_transformer_interface . h \" # include \" test / gmock . h \" namespace webrtc { class MockTransformableVideoFrame : public webrtc::TransformableVideoFrameInterface { public :)",
    "insertText": "MOCK_METHOD(rtc::ArrayView<const uint8_t>, GetData, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetData, (rtc::ArrayView<const uint8_t> data), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(uint32_t, GetTimestamp, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(uint32_t, GetSsrc, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, IsKeyFrame, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<uint8_t>, GetAdditionalData, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const webrtc::VideoFrameMetadata&, GetMetadata, (), (const, override))"
  }
]