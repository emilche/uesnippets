[
  {
    "label": "IModularFeatures",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModularFeatures"
  },
  {
    "label": "FScopedLockModularFeatureList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopedLockModularFeatureList"
  },
  {
    "label": "IModularFeature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IModularFeature"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" UObject / NameTypes . h \" # include \" Delegates / Delegate . h \" # include \" IModularFeature . h \" class IModularFeatures { public : IModularFeatures&)",
    "insertText": "Get()"
  },
  {
    "label": "IModularFeatures()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IModularFeatures()"
  },
  {
    "label": "IsModularFeatureAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsModularFeatureAvailable(const FName Type)"
  },
  {
    "label": "GetModularFeature()",
    "kind": "Method",
    "detail": "Function (} template<TModularFeature> TModularFeature&)",
    "insertText": "GetModularFeature(const FName Type)"
  },
  {
    "label": "GetModularFeatureImplementations()",
    "kind": "Method",
    "detail": "Function (} template<TModularFeature> TArray<TModularFeature*>)",
    "insertText": "GetModularFeatureImplementations(const FName Type)"
  },
  {
    "label": "GetModularFeatureImplementationCount()",
    "kind": "Method",
    "detail": "Function (TArray<TModularFeature*> FeatureImplementations ; const int32 NumImplementations =)",
    "insertText": "GetModularFeatureImplementationCount(Type)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FeatureImplementations .)",
    "insertText": "Add(static_cast<TModularFeature*>( GetModularFeatureImplementation( Type, CurImplementation ) ))"
  },
  {
    "label": "LockModularFeatureList()",
    "kind": "Method",
    "detail": "Function (} return FeatureImplementations ; } public : void)",
    "insertText": "LockModularFeatureList()"
  },
  {
    "label": "UnlockModularFeatureList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockModularFeatureList()"
  },
  {
    "label": "FScopedLockModularFeatureList()",
    "kind": "Method",
    "detail": "Function (struct FScopedLockModularFeatureList {)",
    "insertText": "FScopedLockModularFeatureList()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().LockModularFeatureList()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().UnlockModularFeatureList()"
  },
  {
    "label": "FScopedLockModularFeatureList()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FScopedLockModularFeatureList(const FScopedLockModularFeatureList&)"
  },
  {
    "label": "FScopedLockModularFeatureList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScopedLockModularFeatureList(FScopedLockModularFeatureList&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScopedLockModularFeatureList&)",
    "insertText": "operator(const FScopedLockModularFeatureList&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScopedLockModularFeatureList&)",
    "insertText": "operator(FScopedLockModularFeatureList&&)"
  },
  {
    "label": "GetModularFeatureImplementationCount()",
    "kind": "Method",
    "detail": "Function (} ; int32)",
    "insertText": "GetModularFeatureImplementationCount(const FName Type)"
  },
  {
    "label": "GetModularFeatureImplementation()",
    "kind": "Method",
    "detail": "Function (class IModularFeature*)",
    "insertText": "GetModularFeatureImplementation(const FName Type, const int32 Index)"
  },
  {
    "label": "RegisterModularFeature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterModularFeature(const FName Type, class IModularFeature* ModularFeature)"
  },
  {
    "label": "UnregisterModularFeature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterModularFeature(const FName Type, class IModularFeature* ModularFeature)"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_TwoParams(IModularFeatures, FOnModularFeatureRegistered, const FName& , class IModularFeature*)"
  },
  {
    "label": "OnModularFeatureRegistered()",
    "kind": "Method",
    "detail": "Function (FOnModularFeatureRegistered&)",
    "insertText": "OnModularFeatureRegistered()"
  },
  {
    "label": "DECLARE_EVENT_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_TwoParams(IModularFeatures, FOnModularFeatureUnregistered, const FName& , class IModularFeature*)"
  },
  {
    "label": "OnModularFeatureUnregistered()",
    "kind": "Method",
    "detail": "Function (FOnModularFeatureUnregistered&)",
    "insertText": "OnModularFeatureUnregistered()"
  }
]