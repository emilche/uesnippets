[
  {
    "label": "FbxStatus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxStatus"
  },
  {
    "label": "FbxGeometryWeightedMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxGeometryWeightedMap"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "has",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "has"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "ESurfaceMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESurfaceMode"
  },
  {
    "label": "AddDeformer()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddDeformer(FbxDeformer* pDeformer)"
  },
  {
    "label": "AddShape()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddShape(int pBlendShapeIndex, int pBlendShapeChannelIndex, FbxShape* pShape, double pPercent = 100, FbxStatus* pStatus = NULL)"
  },
  {
    "label": "ClearShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearShape()"
  },
  {
    "label": "SetPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPivot(FbxAMatrix& pXMatrix)"
  },
  {
    "label": "ApplyPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPivot()"
  },
  {
    "label": "SetDefaultShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultShape(int pBlendShapeIndex, int pBlendShapeChannelIndex, double pPercent)"
  },
  {
    "label": "SetDefaultShape()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultShape(FbxBlendShapeChannel* pBlendShapeChannel,  double pPercent)"
  },
  {
    "label": "CleanShapeChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanShapeChannels(FbxAnimLayer* pAnimLayer)"
  },
  {
    "label": "CleanShapeChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanShapeChannel(FbxAnimLayer* pAnimLayer, int pShapeIndex)"
  },
  {
    "label": "CreateShapeChannelProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateShapeChannelProperties(FbxString& pShapeName)"
  },
  {
    "label": "ConvertShapeNamesToV5Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertShapeNamesToV5Format(FbxString pTakeNodeName)"
  },
  {
    "label": "ConvertShapeNamesToV5Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertShapeNamesToV5Format(FbxString pTakeNodeName, int pShapeIndex)"
  },
  {
    "label": "RevertShapeNamesToV6Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RevertShapeNamesToV6Format(FbxString pTakeNodeName)"
  },
  {
    "label": "RevertShapeNamesToV6Format()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RevertShapeNamesToV6Format(FbxString pTakeNodeName, int pShapeIndex)"
  },
  {
    "label": "ClearTemporaryShapeNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTemporaryShapeNames()"
  },
  {
    "label": "CreateShapeChannelName()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "CreateShapeChannelName(int pShapeIndex)"
  },
  {
    "label": "CreateShapeChannelName()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "CreateShapeChannelName(FbxString pShapeName)"
  },
  {
    "label": "CopyDeformers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDeformers(const FbxGeometry* pGeometry)"
  },
  {
    "label": "CopyPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPivot(const FbxGeometry* pSource)"
  }
]