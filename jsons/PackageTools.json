[
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "FPackageReloadedEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackageReloadedEvent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UPackageTools",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackageTools"
  },
  {
    "label": "containing",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containing"
  },
  {
    "label": "FUnloadPackageParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUnloadPackageParams"
  },
  {
    "label": "containg",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "containg"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "GetFilteredPackageList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredPackageList(TSet<UPackage*>& OutFilteredPackageMap)"
  },
  {
    "label": "GetObjectsInPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetObjectsInPackages( const TArray<UPackage*>* InPackages, TArray<UObject*>& OutObjects )"
  },
  {
    "label": "HandleFullyLoadingPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleFullyLoadingPackages( const TArray<UPackage*>& TopLevelPackages, const FText& OperationText )"
  },
  {
    "label": "UnloadPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnloadPackages( const TArray<UPackage*>& PackagesToUnload )"
  },
  {
    "label": "UnloadPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnloadPackages( const TArray<UPackage*>& PackagesToUnload, FText& OutErrorMessage, bool bUnloadDirtyPackages = false)"
  },
  {
    "label": "UnloadPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnloadPackages(FUnloadPackageParams& Params)"
  },
  {
    "label": "ReloadPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReloadPackages( const TArray<UPackage*>& PackagesToReload )"
  },
  {
    "label": "ReloadPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReloadPackages( const TArray<UPackage*>& PackagesToReload, FText& OutErrorMessage, const bool bInteractive = true )"
  },
  {
    "label": "ReloadPackages()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReloadPackages( const TArray<UPackage*>& PackagesToReload, FText& OutErrorMessage, const EReloadPackagesInteractionMode InteractionMode = EReloadPackagesInteractionMode::Interactive )"
  },
  {
    "label": "ExportPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportPackages( const TArray<UPackage*>& PackagesToExport, FString* ExportPath=NULL, bool bUseProvidedExportPath = false )"
  },
  {
    "label": "DoBulkExport()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DoBulkExport(const TArray<UPackage*>& TopLevelPackages, FString LastExportPath, const TSet<UClass*>* FilteredClasses = NULL, bool bUseProvidedExportPath = false )"
  },
  {
    "label": "CheckOutRootPackages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckOutRootPackages( const TArray<UPackage*>& Packages )"
  },
  {
    "label": "IsPackagePathExternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPackagePathExternal(const FString& PackagePath)"
  },
  {
    "label": "IsPackageExternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPackageExternal(const UPackage& Package)"
  },
  {
    "label": "SavePackagesForObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SavePackagesForObjects(const TArray<UObject*>& ObjectsToSave)"
  },
  {
    "label": "IsSingleAssetPackage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSingleAssetPackage(const FString& Package)"
  },
  {
    "label": "SanitizePackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "SanitizePackageName(const FString& InPackageName)"
  },
  {
    "label": "FilenameToPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FilenameToPackageName(const FString& Filename)"
  },
  {
    "label": "FlushAsyncCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAsyncCompilation(TArrayView<UPackage* const> Packages)"
  },
  {
    "label": "RestoreStandaloneOnReachableObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreStandaloneOnReachableObjects()"
  },
  {
    "label": "HandlePackageReloaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePackageReloaded(const EPackageReloadPhase InPackageReloadPhase, FPackageReloadedEvent* InPackageReloadedEvent)"
  }
]