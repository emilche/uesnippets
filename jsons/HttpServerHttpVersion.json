[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" namespace HttpVersion { enum class EHttpServerHttpVersion : uint8 { HTTP_VERSION_UNKNOWN,HTTP_VERSION_1_0,HTTP_VERSION_1_1 } ; bool)",
    "insertText": "FromString(const FString& HttpVersionStr, EHttpServerHttpVersion& OutHttpVersion)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutHttpVersion = EHttpServerHttpVersion::HTTP_VERSION_UNKNOWN ; return true ; })",
    "insertText": "if(0 == HttpVersionStr.Compare(TEXT(\"HTTP/1.0\")))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (OutHttpVersion = EHttpServerHttpVersion::HTTP_VERSION_1_0 ; return true ; })",
    "insertText": "if(0 == HttpVersionStr.Compare(TEXT(\"HTTP/1.1\")))"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (OutHttpVersion = EHttpServerHttpVersion::HTTP_VERSION_1_1 ; return true ; } return false ; } FString)",
    "insertText": "ToString(EHttpServerHttpVersion& InHttpVersion)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (FString Result ;)",
    "insertText": "switch(InHttpVersion)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (break ; case EHttpServerHttpVersion::HTTP_VERSION_1_0 : Result =)",
    "insertText": "TEXT(\"HTTP/1.0\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (break ; case EHttpServerHttpVersion::HTTP_VERSION_1_1 : Result =)",
    "insertText": "TEXT(\"HTTP/1.1\")"
  },
  {
    "label": "ensure()",
    "kind": "Method",
    "detail": "Function (break ; default :)",
    "insertText": "ensure(false)"
  }
]