[
  {
    "label": "FNetBitStreamWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetBitStreamWriter"
  },
  {
    "label": "FNetBitStreamWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" namespace UE::Net { class FNetBitStreamWriter { public :)",
    "insertText": "FNetBitStreamWriter()"
  },
  {
    "label": "InitBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBytes(void* Buffer, uint32 ByteCount)"
  },
  {
    "label": "WriteBits()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBits(uint32 Value, uint32 BitCount)"
  },
  {
    "label": "WriteBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteBool(bool Value)"
  },
  {
    "label": "WriteBitStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteBitStream(const uint32* Src, uint32 SrcBitOffset, uint32 BitCount)"
  },
  {
    "label": "CommitWrites()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitWrites()"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Seek(uint32 BitPosition)"
  },
  {
    "label": "GetPosBytes()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPosBytes()"
  },
  {
    "label": "GetPosBits()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetPosBits()"
  },
  {
    "label": "DoOverflow()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoOverflow()"
  },
  {
    "label": "IsOverflown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOverflown()"
  },
  {
    "label": "CommitSubstream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitSubstream(FNetBitStreamWriter& Substream)"
  },
  {
    "label": "DiscardSubstream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiscardSubstream(FNetBitStreamWriter& Substream)"
  },
  {
    "label": "WriteBits()",
    "kind": "Method",
    "detail": "Function (volatile int8 ValueAsInt8 = Value ;)",
    "insertText": "WriteBits(ValueAsInt8 ? 1U : 0U, 1U)"
  }
]