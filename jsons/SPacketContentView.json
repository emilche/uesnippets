[
  {
    "label": "SScrollBar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SScrollBar"
  },
  {
    "label": "SNetworkingProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNetworkingProfilerWindow"
  },
  {
    "label": "FNetworkPacketEventRef",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkPacketEventRef"
  },
  {
    "label": "SPacketContentView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPacketContentView"
  },
  {
    "label": "FAggregationModeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAggregationModeItem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<SNetworkingProfilerWindow> InProfilerWindow)"
  },
  {
    "label": "ResetPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPacket()"
  },
  {
    "label": "SetPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPacket(uint32 InGameInstanceIndex, uint32 InConnectionIndex, TraceServices::ENetProfilerConnectionMode InConnectionMode, uint32 InPacketIndex, int64 InPacketBitSize)"
  },
  {
    "label": "SetFilterNetId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterNetId(const uint64 InNetId)"
  },
  {
    "label": "SetFilterEventType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFilterEventType(const uint32 InEventTypeIndex, const FText& InEventName)"
  },
  {
    "label": "EnableFilterEventType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableFilterEventType(const uint32 InEventTypeIndex)"
  },
  {
    "label": "DisableFilterEventType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableFilterEventType()"
  },
  {
    "label": "FindFirstEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindFirstEvent()"
  },
  {
    "label": "FindPreviousEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindPreviousEvent(EEventNavigationType NavigationType)"
  },
  {
    "label": "FindNextEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindNextEvent(EEventNavigationType NavigationType)"
  },
  {
    "label": "FindLastEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindLastEvent()"
  },
  {
    "label": "FindPreviousLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindPreviousLevel()"
  },
  {
    "label": "FindNextLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindNextLevel()"
  },
  {
    "label": "FindPreviousPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindPreviousPacket()"
  },
  {
    "label": "FindNextPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindNextPacket()"
  },
  {
    "label": "Packet_OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Packet_OnTextCommitted(const FText& InNewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "FilterByNetId_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterByNetId_OnCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "FilterNetId_OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterNetId_OnTextCommitted(const FText& InNewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "FilterByEventType_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterByEventType_OnCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "HighlightFilteredEvents_OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HighlightFilteredEvents_OnCheckStateChanged(ECheckBoxState NewState)"
  },
  {
    "label": "ShowContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowContextMenu(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "HorizontalScrollBar_OnUserScrolled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HorizontalScrollBar_OnUserScrolled(float ScrollOffset)"
  },
  {
    "label": "UpdateHorizontalScrollBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHorizontalScrollBar()"
  },
  {
    "label": "ZoomHorizontally()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomHorizontally(const float Delta, const float X)"
  },
  {
    "label": "BringIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringIntoView(const float X1, const float X2)"
  },
  {
    "label": "BringEventIntoView()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BringEventIntoView(const FNetworkPacketEventRef& EventRef)"
  },
  {
    "label": "UpdateState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateState(float FontScale)"
  },
  {
    "label": "UpdateHoveredEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHoveredEvent()"
  },
  {
    "label": "GetEventAtMousePosition()",
    "kind": "Method",
    "detail": "Function (FNetworkPacketEventRef)",
    "insertText": "GetEventAtMousePosition(float X, float Y)"
  },
  {
    "label": "OnSelectedEventChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedEventChanged()"
  },
  {
    "label": "SelectHoveredEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectHoveredEvent()"
  },
  {
    "label": "AdjustForSplitContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustForSplitContent()"
  },
  {
    "label": "CreateAggregationModeComboBox()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateAggregationModeComboBox()"
  },
  {
    "label": "AggregationMode_OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AggregationMode_OnSelectionChanged(TSharedPtr<FAggregationModeItem> NewAggregationMode, ESelectInfo::Type SelectInfo)"
  }
]