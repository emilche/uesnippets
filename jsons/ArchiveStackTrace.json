[
  {
    "label": "FLinkerLoad",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinkerLoad"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FUObjectThreadContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUObjectThreadContext"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FArchiveDiffStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FArchiveDiffStats"
  },
  {
    "label": "FArchiveStackTraceIgnoreScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveStackTraceIgnoreScope"
  },
  {
    "label": "FArchiveStackTraceDisabledScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveStackTraceDisabledScope"
  },
  {
    "label": "FPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageData"
  },
  {
    "label": "FDeleteByFree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeleteByFree"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FCallstackAtOffset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallstackAtOffset"
  },
  {
    "label": "FCallstackData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCallstackData"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FPackageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPackageData"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UE_DEPRECATED",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE_DEPRECATED"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FArchiveStackTraceReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveStackTraceReader"
  },
  {
    "label": "FSerializeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSerializeData"
  },
  {
    "label": "FArchiveStackTraceIgnoreScope()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FArchiveStackTraceIgnoreScope(bool bInIgnore = true)"
  },
  {
    "label": "FArchiveStackTraceDisabledScope()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FArchiveStackTraceDisabledScope()"
  },
  {
    "label": "LoadPackageIntoMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadPackageIntoMemory(const TCHAR* InFilename,\n\tFPackageData& OutPackageData, TUniquePtr<uint8, FDeleteByFree>& OutLoadedBytes)"
  },
  {
    "label": "ForceKillPackageAndLinker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceKillPackageAndLinker(FLinkerLoad* Linker)"
  },
  {
    "label": "ShouldIgnoreDiff()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldIgnoreDiff()"
  },
  {
    "label": "ShouldBypassDiff()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldBypassDiff()"
  },
  {
    "label": "FArchiveCallstacks()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FArchiveCallstacks(UObject* InAsset)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(\n\t\tint64 Offset,\n\t\tint64 Length,\n\t\tUObject* SerializedObject,\n\t\tFProperty* SerializedProperty,\n\t\tTArrayView<const FName> DebugDataStack,\n\t\tbool bIsCollectingCallstacks,\n\t\tbool bCollectCurrentCallstack,\n\t\tint32 StackIgnoreCount)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Append(const FArchiveCallstacks& Other, int64 Offset = 0)"
  },
  {
    "label": "FArchiveStackTraceWriter()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FArchiveStackTraceWriter(\n\t\tFArchive& InInner,\n\t\tFArchiveCallstacks& InCallstacks,\n\t\tconst FArchiveDiffMap* InDiffMap = nullptr,\n\t\tint64 InDiffMapStartOffset = 0)"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compare(\n\t\tconst FPackageData& SourcePackage,\n\t\tconst FPackageData& DestPackage,\n\t\tconst FArchiveCallstacks& Callstacks,\n\t\tconst FArchiveDiffMap& DiffMap,\n\t\tconst TCHAR* AssetFilename,\n\t\tconst TCHAR* CallstackCutoffText,\n\t\tconst int64 MaxDiffsToLog,\n\t\tint32& InOutDiffsLogged,\n\t\tTMap<FName, FArchiveDiffStats>& OutStats,\n\t\tbool bSuppressLogging = false)"
  },
  {
    "label": "GenerateDiffMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateDiffMap(\n\t\tconst FPackageData& SourcePackage,\n\t\tconst FPackageData& DestPackage,\n\t\tconst FArchiveCallstacks& Callstacks,\n\t\tint32 MaxDiffsToFind,\n\t\tFArchiveDiffMap& OutDiffMap)"
  },
  {
    "label": "DumpPackageHeaderDiffs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpPackageHeaderDiffs(\n\t\tconst FPackageData& SourcePackage,\n\t\tconst FPackageData& DestPackage,\n\t\tconst FString& AssetFilename,\n\t\tconst int32 MaxDiffsToLog,\n\t\tconst EPackageHeaderFormat PackageHeaderFormat = EPackageHeaderFormat::PackageFileSummary)"
  },
  {
    "label": "FArchiveStackTraceMemoryWriter()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FArchiveStackTraceMemoryWriter(\n\t\tFArchiveCallstacks& Callstacks,\n\t\tconst FArchiveDiffMap* DiffMap = nullptr,\n\t\tconst int64 DiffMapOffset = 0,\n\t\tconst int64 PreAllocateBytes = 0,\n\t\tbool bIsPersistent = false,\n\t\tconst TCHAR* Filename = nullptr)"
  },
  {
    "label": "FArchiveStackTrace()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FArchiveStackTrace(UObject* InAsset, const TCHAR* InFilename, bool bInCollectCallstacks = true, const FArchiveDiffMap* InDiffMap = nullptr)"
  },
  {
    "label": "CompareWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompareWith(const TCHAR* InFilename, const int64 TotalHeaderSize, const TCHAR* CallstackCutoffText,\n\t\tconst int32 MaxDiffsToLog, TMap<FName, FArchiveDiffStats>& OutStats)"
  },
  {
    "label": "CompareWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompareWith(const FPackageData& SourcePackage, const TCHAR* FileDisplayName, const int64 TotalHeaderSize,\n\t\tconst TCHAR* CallstackCutoffText, const int32 MaxDiffsToLog, TMap<FName, FArchiveDiffStats>& OutStats,\n\t\tconst FArchiveStackTraceWriter::EPackageHeaderFormat PackageHeaderFormat = FArchiveStackTraceWriter::EPackageHeaderFormat::PackageFileSummary)"
  },
  {
    "label": "GenerateDiffMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateDiffMap(const TCHAR* InFilename, int64 TotalHeaderSize, int32 MaxDiffsToFind, FArchiveDiffMap& OutDiffMap)"
  },
  {
    "label": "GenerateDiffMap()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateDiffMap(const FPackageData& SourcePackage, int64 TotalHeaderSize, int32 MaxDiffsToFind,\n\t\tFArchiveDiffMap& OutDiffMap)"
  },
  {
    "label": "IsIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIdentical(const TCHAR* InFilename, int64 BufferSize, const uint8* BufferData)"
  },
  {
    "label": "IsIdentical()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIdentical(const FPackageData& SourcePackage, int64 BufferSize, const uint8* BufferData)"
  },
  {
    "label": "LoadPackageIntoMemory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadPackageIntoMemory(const TCHAR* InFilename, FPackageData& OutPackageData,\n\t\tTUniquePtr<uint8, UE::ArchiveStackTrace::FDeleteByFree>& OutLoadedBytes)"
  },
  {
    "label": "FArchiveStackTraceReader()",
    "kind": "Method",
    "detail": "Function (COREUOBJECT_API)",
    "insertText": "FArchiveStackTraceReader(const TCHAR* InFilename, const uint8* InData, const int64 Num)"
  }
]