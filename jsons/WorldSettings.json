[
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UAssetUserData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetUserData"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "UNavigationSystemConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemConfig"
  },
  {
    "label": "UAISystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAISystemBase"
  },
  {
    "label": "UHierarchicalLODSetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UHierarchicalLODSetup"
  },
  {
    "label": "FHierarchicalSimplification",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHierarchicalSimplification"
  },
  {
    "label": "EVisibilityAggressiveness",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVisibilityAggressiveness"
  },
  {
    "label": "EVolumeLightingMethod",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EVolumeLightingMethod"
  },
  {
    "label": "FLightmassWorldInfoSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLightmassWorldInfoSettings"
  },
  {
    "label": "FNetViewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetViewer"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FNaniteSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNaniteSettings"
  },
  {
    "label": "FBroadphaseSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBroadphaseSettings"
  },
  {
    "label": "AWorldSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldSettings"
  },
  {
    "label": "ADefaultPhysicsVolume",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADefaultPhysicsVolume"
  },
  {
    "label": "UPhysicsCollisionHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsCollisionHandler"
  },
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "AGameNetworkManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameNetworkManager"
  },
  {
    "label": "USoundMix",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundMix"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UBookMark",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBookMark"
  },
  {
    "label": "APlayerState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerState"
  },
  {
    "label": "UBookmarkBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBookmarkBase"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Templates / SubclassOf . h \" # include \" Interfaces / Interface_AssetUserData . h \" # include \" GameFramework / Actor . h \" # include \" GameFramework / DamageType . h \" # include \" GameFramework / Info . h \" # include \" Sound / AudioVolume . h \" # include \" UObject / ConstructorHelpers . h \" # include \" WorldGridPreviewer . h \" # include \" WorldPartition / WorldPartitionEditorPerProjectUserSettings . h \" # include \" WorldSettings . generated . h \" class UWorldPartition ; class UAssetUserData ; class UNetConnection ; class UNavigationSystemConfig ; class UAISystemBase ; class UHierarchicalLODSetup ; struct FHierarchicalSimplification ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (VIS_LeastAggressive)",
    "insertText": "UMETA(DisplayName = \"Least Aggressive\"), VIS_ModeratelyAggressive UMETA(DisplayName = \"Moderately Aggressive\"), VIS_MostAggressive UMETA(DisplayName = \"Most Aggressive\"), VIS_Max UMETA(Hidden)"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (VLM_VolumetricLightmap)",
    "insertText": "UMETA(DisplayName = \"Volumetric Lightmap\"), VLM_SparseVolumeLightingSamples UMETA(DisplayName = \"Sparse Volume Lighting Samples\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY(BlueprintReadWrite, EditAnywhere, Category=LightmassGeneral, AdvancedDisplay, meta=(UIMin = \"1.0\", UIMax = \"4.0\"))"
  },
  {
    "label": "FLightmassWorldInfoSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLightmassWorldInfoSettings() : StaticLightingLevelScale(1) , NumIndirectLightingBounces(3) , NumSkyLightingBounces(1) , IndirectLightingQuality(1) , IndirectLightingSmoothness(1) , EnvironmentColor(ForceInit) , EnvironmentIntensity(1.0f) , EmissiveBoost(1.0f) , DiffuseBoost(1.0f) , VolumeLightingMethod(VLM_VolumetricLightmap) , bUseAmbientOcclusion(false) , bGenerateAmbientOcclusionMaterialMask(false) , bVisualizeMaterialDiffuse(false) , bVisualizeAmbientOcclusion(false) , bCompressLightmaps(true) , VolumetricLightmapDetailCellSize(200) , VolumetricLightmapMaximumBrickMemoryMb(30) , VolumetricLightmapLoadingCellSize(3200) , VolumetricLightmapSphericalHarmonicSmoothing(.02f) , VolumeLightSamplePlacementScale(1) , DirectIlluminationOcclusionFraction(0.5f) , IndirectIlluminationOcclusionFraction(1.0f) , OcclusionExponent(1.0f) , FullyOccludedSamplesFraction(1.0f) , MaxOcclusionDistance(200.0f) , bWorldPartition(false)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FNetViewer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNetViewer() : Connection(nullptr) , InViewer(nullptr) , ViewTarget(nullptr) , ViewLocation(ForceInit) , ViewDir(ForceInit)"
  },
  {
    "label": "FNetViewer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNetViewer(UNetConnection* InConnection, float DeltaSeconds)"
  },
  {
    "label": "FNetViewer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNetViewer(AController* InController)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "FNaniteSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNaniteSettings() : bAllowMaskedMaterials(true)"
  },
  {
    "label": "FBroadphaseSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBroadphaseSettings() : bUseMBPOnClient(false) , bUseMBPOnServer(false) , bUseMBPOuterBounds(false) , MBPBounds(EForceInit::ForceInitToZero) , MBPOuterBounds(EForceInit::ForceInitToZero) , MBPNumSubdivs(2)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(config=game, hidecategories=(Actor, Advanced, Display, Events, Object, Attachment, Info, Input, Blueprint, Layers, Tags, Replication, LevelInstance), showcategories=(Rendering, WorldPartition, \"Input|MouseInput\", \"Input|TouchInput\"), notplaceable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() ENGINE_API virtual void GetLifetimeReplicatedProps(TArray< FLifetimeProperty > & OutLifetimeProps)"
  },
  {
    "label": "GetPhysicsCollisionHandlerClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<class UPhysicsCollisionHandler>)",
    "insertText": "GetPhysicsCollisionHandlerClass()"
  },
  {
    "label": "SetAllowMaskedMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowMaskedMaterials(bool bState)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostTransacted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostTransacted(const FTransactionObjectEvent& TransactionEvent)"
  },
  {
    "label": "CheckForErrors()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "CheckForErrors()"
  },
  {
    "label": "IsSelectable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelectable()"
  },
  {
    "label": "CanReplaceSelectedActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReplaceSelectedActor(FText& OutReason)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PreInitializeComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreInitializeComponents()"
  },
  {
    "label": "PostRegisterAllComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRegisterAllComponents()"
  },
  {
    "label": "GetWorldPartition()",
    "kind": "Method",
    "detail": "Function (UWorldPartition*)",
    "insertText": "GetWorldPartition()"
  },
  {
    "label": "IsPartitionedWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPartitionedWorld()"
  },
  {
    "label": "SetWorldPartition()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetWorldPartition(UWorldPartition* InWorldPartition)"
  },
  {
    "label": "ApplyWorldPartitionForcedSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWorldPartitionForcedSettings()"
  },
  {
    "label": "SupportsWorldPartitionStreaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsWorldPartitionStreaming()"
  },
  {
    "label": "GetGravityZ()",
    "kind": "Method",
    "detail": "Function (# endif float)",
    "insertText": "GetGravityZ()"
  },
  {
    "label": "GetEffectiveTimeDilation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetEffectiveTimeDilation()"
  },
  {
    "label": "SetTimeDilation()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "SetTimeDilation(float NewTimeDilation)"
  },
  {
    "label": "GetNavigationSystemConfig()",
    "kind": "Method",
    "detail": "Function (UNavigationSystemConfig* const)",
    "insertText": "GetNavigationSystemConfig()"
  },
  {
    "label": "GetNavigationSystemConfigOverride()",
    "kind": "Method",
    "detail": "Function (const UNavigationSystemConfig*)",
    "insertText": "GetNavigationSystemConfigOverride()"
  },
  {
    "label": "IsAISystemEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAISystemEnabled()"
  },
  {
    "label": "NotifyMatchStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMatchStarted()"
  },
  {
    "label": "AddAssetUserData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAssetUserData(UAssetUserData* InUserData)"
  },
  {
    "label": "RemoveUserDataOfClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUserDataOfClass(TSubclassOf<UAssetUserData> InUserDataClass)"
  },
  {
    "label": "GetAssetUserDataOfClass()",
    "kind": "Method",
    "detail": "Function (UAssetUserData*)",
    "insertText": "GetAssetUserDataOfClass(TSubclassOf<UAssetUserData> InUserDataClass)"
  },
  {
    "label": "GetAssetUserDataArray()",
    "kind": "Method",
    "detail": "Function (const TArray<UAssetUserData*>*)",
    "insertText": "GetAssetUserDataArray()"
  },
  {
    "label": "GetHierarchicalLODSetup()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const TArray<FHierarchicalSimplification>&)",
    "insertText": "GetHierarchicalLODSetup()"
  },
  {
    "label": "GetNumHierarchicalLODLevels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumHierarchicalLODLevels()"
  },
  {
    "label": "GetHierarchicalLODBaseMaterial()",
    "kind": "Method",
    "detail": "Function (UMaterialInterface*)",
    "insertText": "GetHierarchicalLODBaseMaterial()"
  },
  {
    "label": "ResetHierarchicalLODSetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetHierarchicalLODSetup()"
  },
  {
    "label": "SaveDefaultWorldPartitionSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveDefaultWorldPartitionSettings()"
  },
  {
    "label": "ResetDefaultWorldPartitionSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDefaultWorldPartitionSettings()"
  },
  {
    "label": "GetDefaultWorldPartitionSettings()",
    "kind": "Method",
    "detail": "Function (const FWorldPartitionPerWorldSettings*)",
    "insertText": "GetDefaultWorldPartitionSettings()"
  },
  {
    "label": "GetPauserPlayerState()",
    "kind": "Method",
    "detail": "Function (# endif class APlayerState*)",
    "insertText": "GetPauserPlayerState()"
  },
  {
    "label": "RewindForReplay()",
    "kind": "Method",
    "detail": "Function (PauserPlayerState = PlayerState ; } void)",
    "insertText": "RewindForReplay()"
  },
  {
    "label": "HIDE_ACTOR_TRANSFORM_FUNCTIONS()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "HIDE_ACTOR_TRANSFORM_FUNCTIONS()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "InternalPostPropertyChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InternalPostPropertyChanged(FName PropertyName)"
  },
  {
    "label": "AdjustNumberOfBookmarks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AdjustNumberOfBookmarks()"
  },
  {
    "label": "UpdateNumberOfBookmarks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNumberOfBookmarks()"
  },
  {
    "label": "SanitizeBookmarkClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanitizeBookmarkClasses()"
  },
  {
    "label": "UpdateBookmarkClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBookmarkClass()"
  },
  {
    "label": "GetAISystemClassName()",
    "kind": "Method",
    "detail": "Function (public : FSoftClassPath)",
    "insertText": "GetAISystemClassName()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (const uint32 NumMappedBookmarks = 1 0 ; # if WITH_EDITOR)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnBookmarkClassChanged, AWorldSettings*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnBookmarkClassChanged OnBookmarkClassChanged ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNumberOfBookmarksChanged, AWorldSettings*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (FOnNumberOfBookmarksChanged OnNumberOfBoomarksChanged ; # endif)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNaniteSettingsChanged, AWorldSettings*)"
  },
  {
    "label": "GetMaxNumberOfBookmarks()",
    "kind": "Method",
    "detail": "Function (FOnNaniteSettingsChanged OnNaniteSettingsChanged ; const int32)",
    "insertText": "GetMaxNumberOfBookmarks()"
  },
  {
    "label": "GetOrAddBookmark()",
    "kind": "Method",
    "detail": "Function (class UBookmarkBase*)",
    "insertText": "GetOrAddBookmark(const uint32 BookmarkIndex, const bool bRecreateOnClassMismatch)"
  },
  {
    "label": "AddBookmark()",
    "kind": "Method",
    "detail": "Function (class UBookmarkBase*)",
    "insertText": "AddBookmark(const TSubclassOf<UBookmarkBase> BookmarkClass, const bool bExpandIfNecessary)"
  },
  {
    "label": "ClearBookmark()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearBookmark(const uint32 BookmarkIndex)"
  },
  {
    "label": "ClearAllBookmarks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllBookmarks()"
  }
]