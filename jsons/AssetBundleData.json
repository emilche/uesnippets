[
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAssetBundleEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetBundleEntry"
  },
  {
    "label": "FAssetBundleData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetBundleData"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FAssetBundleEntry()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" UObject / Class . h \" # include \" UObject / NameTypes . h \" # include \" UObject / PrimaryAssetId . h \" # include \" UObject / SoftObjectPath . h \" # include \" UObject / SoftObjectPtr . h \" # include \" UObject / TopLevelAssetPath . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" CoreMinimal . h \" # endif class FOutputDevice ; class UObject ; struct FAssetBundleEntry {)",
    "insertText": "FAssetBundleEntry()"
  },
  {
    "label": "FAssetBundleEntry()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAssetBundleEntry(const FAssetBundleEntry&)"
  },
  {
    "label": "FAssetBundleEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetBundleEntry(FAssetBundleEntry&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetBundleEntry&)",
    "insertText": "operator(const FAssetBundleEntry&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetBundleEntry&)",
    "insertText": "operator(FAssetBundleEntry&&)"
  },
  {
    "label": "FAssetBundleEntry()",
    "kind": "Method",
    "detail": "Function (# endif TArray<FTopLevelAssetPath> AssetPaths ;)",
    "insertText": "FAssetBundleEntry(FName InBundleName) : BundleName(InBundleName)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FAssetBundleEntry& Other)"
  },
  {
    "label": "ExportTextItem()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ExportTextItem(FString& ValueStr, const FAssetBundleEntry& DefaultValue, UObject* Parent, int32 PortFlags, UObject* ExportRootScope)"
  },
  {
    "label": "ImportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTextItem(const TCHAR*& Buffer, int32 PortFlags, UObject* Parent, FOutputDevice* ErrorText)"
  },
  {
    "label": "FAssetBundleData()",
    "kind": "Method",
    "detail": "Function (} ; struct FAssetBundleData {)",
    "insertText": "FAssetBundleData()"
  },
  {
    "label": "FAssetBundleData()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAssetBundleData(const FAssetBundleData&)"
  },
  {
    "label": "FAssetBundleData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAssetBundleData(FAssetBundleData&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetBundleData&)",
    "insertText": "operator(const FAssetBundleData&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAssetBundleData&)",
    "insertText": "operator(FAssetBundleData&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TArray<FAssetBundleEntry> Bundles ; bool)",
    "insertText": "operator(const FAssetBundleData& Other)"
  },
  {
    "label": "FindEntry()",
    "kind": "Method",
    "detail": "Function (} FAssetBundleEntry*)",
    "insertText": "FindEntry(FName SearchName)"
  },
  {
    "label": "AddBundleAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBundleAsset(BundleName, SoftObjectPtr.ToSoftObjectPath().GetAssetPath())"
  },
  {
    "label": "AddBundleAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBundleAsset(FName BundleName, const FTopLevelAssetPath& AssetPath)"
  },
  {
    "label": "AddBundleAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBundleAssets(FName BundleName, const TArray<FTopLevelAssetPath>& AssetPaths)"
  },
  {
    "label": "SetBundleAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBundleAssets(FName BundleName, TArray<FTopLevelAssetPath>&& AssetPaths)"
  },
  {
    "label": "AddBundleAssetTruncated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBundleAssetTruncated(FName BundleName, const FSoftObjectPath& AssetPath)"
  },
  {
    "label": "AddBundleAssetsTruncated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBundleAssetsTruncated(FName BundleName, const TArray<FSoftObjectPath>& AssetPaths)"
  },
  {
    "label": "SetBundleAssetsTruncated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBundleAssetsTruncated(FName BundleName, const TArray<FSoftObjectPath>& AssetPaths)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ExportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportTextItem(FString& ValueStr, FAssetBundleData const& DefaultValue, UObject* Parent, int32 PortFlags, UObject* ExportRootScope)"
  },
  {
    "label": "ToDebugString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToDebugString()"
  }
]