[
  {
    "label": "currently",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "currently"
  },
  {
    "label": "currently",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "currently"
  },
  {
    "label": "PeerConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PeerConnection"
  },
  {
    "label": "InitializePortAllocatorResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InitializePortAllocatorResult"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (RTCErrorOr<rtc::scoped_refptr<PeerConnection>>)",
    "insertText": "Create(\n      rtc::scoped_refptr<ConnectionContext> context,\n      const PeerConnectionFactoryInterface::Options& options,\n      std::unique_ptr<RtcEventLog> event_log,\n      std::unique_ptr<Call> call,\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      PeerConnectionDependencies dependencies)"
  },
  {
    "label": "AddTrack()",
    "kind": "Method",
    "detail": "Function (RTCErrorOr<rtc::scoped_refptr<RtpSenderInterface>>)",
    "insertText": "AddTrack(\n      rtc::scoped_refptr<MediaStreamTrackInterface> track,\n      const std::vector<std::string>& stream_ids,\n      const std::vector<RtpEncodingParameters>* init_send_encodings)"
  },
  {
    "label": "ice_connection_state()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ice_connection_state()"
  },
  {
    "label": "LookupDtlsTransportByMidInternal()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<DtlsTransport>)",
    "insertText": "LookupDtlsTransportByMidInternal(\n      const std::string& mid)"
  },
  {
    "label": "RequestUsagePatternReportForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUsagePatternReportForTesting()"
  },
  {
    "label": "PeerConnection()",
    "kind": "Method",
    "detail": "Function (creation)",
    "insertText": "PeerConnection(rtc::scoped_refptr<ConnectionContext> context,\n                 const PeerConnectionFactoryInterface::Options& options,\n                 bool is_unified_plan,\n                 std::unique_ptr<RtcEventLog> event_log,\n                 std::unique_ptr<Call> call,\n                 PeerConnectionDependencies& dependencies,\n                 bool dtls_enabled)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "Initialize(\n      const PeerConnectionInterface::RTCConfiguration& configuration,\n      PeerConnectionDependencies dependencies)"
  },
  {
    "label": "OnNegotiationNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNegotiationNeeded()"
  },
  {
    "label": "InitializePortAllocator_n()",
    "kind": "Method",
    "detail": "Function (InitializePortAllocatorResult)",
    "insertText": "InitializePortAllocator_n(\n      const cricket::ServerAddresses& stun_servers,\n      const std::vector<cricket::RelayServerConfig>& turn_servers,\n      const RTCConfiguration& configuration)"
  },
  {
    "label": "ReconfigurePortAllocator_n()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReconfigurePortAllocator_n(\n      const cricket::ServerAddresses& stun_servers,\n      const std::vector<cricket::RelayServerConfig>& turn_servers,\n      IceTransportsType type,\n      int candidate_pool_size,\n      PortPrunePolicy turn_port_prune_policy,\n      webrtc::TurnCustomizer* turn_customizer,\n      absl::optional<int> stun_candidate_keepalive_interval,\n      bool have_local_description)"
  },
  {
    "label": "StartRtcEventLog_w()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartRtcEventLog_w(std::unique_ptr<RtcEventLogOutput> output,\n                          int64_t output_period_ms)"
  },
  {
    "label": "StopRtcEventLog_w()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRtcEventLog_w()"
  },
  {
    "label": "GetTransportDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTransportDescription(\n      const cricket::SessionDescription* description,\n      const std::string& content_name,\n      cricket::TransportDescription* info)"
  },
  {
    "label": "OnTransportControllerDtlsHandshakeError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransportControllerDtlsHandshakeError(rtc::SSLHandshakeError error)"
  },
  {
    "label": "ReportBestConnectionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportBestConnectionState(const cricket::TransportStats& stats)"
  },
  {
    "label": "ReportNegotiatedCiphers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportNegotiatedCiphers(\n      bool dtls_enabled,\n      const cricket::TransportStats& stats,\n      const std::set<cricket::MediaType>& media_types)"
  },
  {
    "label": "ReportRemoteIceCandidateAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportRemoteIceCandidateAdded(const cricket::Candidate& candidate)"
  }
]