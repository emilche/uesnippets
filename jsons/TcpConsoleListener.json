[
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FTcpListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTcpListener"
  },
  {
    "label": "TcpConsoleListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TcpConsoleListener"
  },
  {
    "label": "TcpConsoleListener()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Runnable . h \" # include \" Interfaces / IPv4 / IPv4Endpoint . h \" class FSocket ; class FTcpListener ; class TcpConsoleListener : FRunnable { public :)",
    "insertText": "TcpConsoleListener(const FIPv4Endpoint& InListenEndpoint)"
  },
  {
    "label": "TcpConsoleListener()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TcpConsoleListener()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Exit()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Init()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Run()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "HandleListenerConnectionAccepted()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "HandleListenerConnectionAccepted(FSocket* ClientSocket, const FIPv4Endpoint& ClientEndpoint)"
  }
]