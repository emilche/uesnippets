[
  {
    "label": "mi_bitmap_index_create()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mi_bitmap_index_create(full_bitidx / MI_BITMAP_FIELD_BITS, full_bitidx % MI_BITMAP_FIELD_BITS)"
  },
  {
    "label": "_mi_bitmap_try_find_claim_field()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_try_find_claim_field(mi_bitmap_t bitmap, size_t idx, const size_t count, mi_bitmap_index_t* bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_try_find_from_claim()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_try_find_from_claim(mi_bitmap_t bitmap, const size_t bitmap_fields, const size_t start_field_idx, const size_t count, mi_bitmap_index_t* bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_unclaim()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_unclaim(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_claim()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_claim(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx, bool* any_zero)"
  },
  {
    "label": "_mi_bitmap_is_claimed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_is_claimed(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_is_any_claimed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_is_any_claimed(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_try_find_from_claim_across()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_try_find_from_claim_across(mi_bitmap_t bitmap, const size_t bitmap_fields, const size_t start_field_idx, const size_t count, mi_bitmap_index_t* bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_unclaim_across()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_unclaim_across(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_claim_across()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_claim_across(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx, bool* pany_zero)"
  },
  {
    "label": "_mi_bitmap_is_claimed_across()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_is_claimed_across(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx)"
  },
  {
    "label": "_mi_bitmap_is_any_claimed_across()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "_mi_bitmap_is_any_claimed_across(mi_bitmap_t bitmap, size_t bitmap_fields, size_t count, mi_bitmap_index_t bitmap_idx)"
  }
]