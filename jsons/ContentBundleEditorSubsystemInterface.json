[
  {
    "label": "FContentBundleEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContentBundleEditor"
  },
  {
    "label": "IContentBundleEditorSubsystemInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IContentBundleEditorSubsystemInterface"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FContentBundleEditor ; # if WITH_EDITOR class IContentBundleEditorSubsystemInterface { public : IContentBundleEditorSubsystemInterface*)",
    "insertText": "Get()"
  },
  {
    "label": "NotifyContentBundleAdded()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "NotifyContentBundleAdded(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "NotifyContentBundleRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleRemoved(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "NotifyContentBundleInjectedContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleInjectedContent(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "NotifyContentBundleRemovedContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleRemovedContent(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "NotifyContentBundleChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyContentBundleChanged(const FContentBundleEditor* ContentBundle)"
  },
  {
    "label": "GetEditorContentBundle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FContentBundleEditor>)",
    "insertText": "GetEditorContentBundle(const FGuid& ContentBundleGuid)"
  },
  {
    "label": "IsEditingContentBundle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditingContentBundle()"
  },
  {
    "label": "ActivateContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ActivateContentBundleEditing(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "DeactivateContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeactivateContentBundleEditing(TSharedPtr<FContentBundleEditor>& ContentBundleEditor)"
  },
  {
    "label": "DeactivateCurrentContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeactivateCurrentContentBundleEditing()"
  },
  {
    "label": "PushContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushContentBundleEditing()"
  },
  {
    "label": "PushContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushContentBundleEditing(false)"
  },
  {
    "label": "PushContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PushContentBundleEditing(bool bDuplicateContext)"
  },
  {
    "label": "PopContentBundleEditing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopContentBundleEditing()"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT_OneParam(UContentBundleEditorSubsystem, FOnContentBundleAdded, const FContentBundleEditor*)"
  },
  {
    "label": "OnContentBundleAdded()",
    "kind": "Method",
    "detail": "Function (FOnContentBundleAdded&)",
    "insertText": "OnContentBundleAdded()"
  },
  {
    "label": "OnContentBundleRemoved()",
    "kind": "Method",
    "detail": "Function (FOnContentBundleRemoved&)",
    "insertText": "OnContentBundleRemoved()"
  },
  {
    "label": "OnContentBundleRemovedContent()",
    "kind": "Method",
    "detail": "Function (FOnContentBundleRemovedContent&)",
    "insertText": "OnContentBundleRemovedContent()"
  },
  {
    "label": "OnContentBundleChanged()",
    "kind": "Method",
    "detail": "Function (FOnContentBundleChanged&)",
    "insertText": "OnContentBundleChanged()"
  }
]