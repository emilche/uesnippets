[
  {
    "label": "FbxLogFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxLogFile"
  },
  {
    "label": "FbxMessageEmitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxMessageEmitter"
  },
  {
    "label": "FbxUserNotificationFilteredIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxUserNotificationFilteredIterator"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EClass",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EClass"
  },
  {
    "label": "FbxUserNotification",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxUserNotification"
  },
  {
    "label": "EEntryID",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEntryID"
  },
  {
    "label": "EOutputSource",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOutputSource"
  },
  {
    "label": "AESequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AESequence"
  },
  {
    "label": "FbxAccumulatorEntry()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_UTILS_USER_NOTIFICATION_H_ # define _FBXSDK_UTILS_USER_NOTIFICATION_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxarray . h> # include<fbxsdk / core / base / fbxstring . h> # include<fbxsdk / core / base / fbxmultimap . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxLogFile ; class FbxMessageEmitter ; class FbxUserNotificationFilteredIterator ; class FBXSDK_DLL FbxAccumulatorEntry { public : enum EClass { eError = 1,eWarning = 2,eInformation = 4,eAny = 7 } ;)",
    "insertText": "FbxAccumulatorEntry(EClass pAEClass, const FbxString& pName, const FbxString& pDescr, FbxString pDetail=\"\", bool pMuteState=true)"
  },
  {
    "label": "FbxAccumulatorEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxAccumulatorEntry(const FbxAccumulatorEntry& pAE, bool pSkipDetails)"
  },
  {
    "label": "FbxAccumulatorEntry()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxAccumulatorEntry()"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (EClass)",
    "insertText": "GetClass()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetName()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetDetailsCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDetailsCount()"
  },
  {
    "label": "GetDetail()",
    "kind": "Method",
    "detail": "Function (const FbxString*)",
    "insertText": "GetDetail(int id)"
  },
  {
    "label": "IsMuted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMuted()"
  },
  {
    "label": "GetDetails()",
    "kind": "Method",
    "detail": "Function (private : FbxArray<FbxString*>&)",
    "insertText": "GetDetails()"
  },
  {
    "label": "Mute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Mute(bool pState)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool mMute ; EClass mAEClass ; FbxString mName ; FbxString mDescr ; FbxArray<FbxString*> mDetails ; class FbxUserNotification ; } ; class FBXSDK_DLL FbxUserNotification { public : FbxUserNotification*)",
    "insertText": "Create(FbxManager* pManager, const FbxString& pLogFileName, const FbxString& pSessionDescription)"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(FbxManager* pManager)"
  },
  {
    "label": "FbxUserNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxUserNotification(FbxManager* pManager, FbxString const& pLogFileName, FbxString const& pSessionDescription)"
  },
  {
    "label": "FbxUserNotification()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxUserNotification()"
  },
  {
    "label": "InitAccumulator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitAccumulator()"
  },
  {
    "label": "ClearAccumulator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAccumulator()"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (enum EEntryID { eBindPoseInvalidObject,eBindPoseInvalidRoot,eBindPoseNotAllAncestorsNodes,eBindPoseNotAllDeformingNodes,eBindPoseNotAllAncestorsDefinitionNodes,eBindPoseRelativeMatrix,eEmbedMediaNotify,eFileIONotify,eFileIONotifyMaterial,eFileIONotifyDXFNotSupportNurbs,eEntryStartID } ; int)",
    "insertText": "AddEntry(const int pID, const FbxString& pName, const FbxString& pDescr, FbxAccumulatorEntry::EClass pClass=FbxAccumulatorEntry::eWarning)"
  },
  {
    "label": "AddDetail()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddDetail(int pEntryId)"
  },
  {
    "label": "AddDetail()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddDetail(int pEntryId, FbxString pString)"
  },
  {
    "label": "AddDetail()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "AddDetail(int pEntryId, FbxNode* pNode)"
  },
  {
    "label": "GetNbEntries()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNbEntries()"
  },
  {
    "label": "GetEntry()",
    "kind": "Method",
    "detail": "Function (const FbxAccumulatorEntry*)",
    "insertText": "GetEntry(int pEntryId)"
  },
  {
    "label": "GetEntryAt()",
    "kind": "Method",
    "detail": "Function (const FbxAccumulatorEntry*)",
    "insertText": "GetEntryAt(int pEntryIndex)"
  },
  {
    "label": "GetNbDetails()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNbDetails()"
  },
  {
    "label": "GetDetail()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetDetail(int pDetailId, const FbxAccumulatorEntry*& pAE)"
  },
  {
    "label": "Output()",
    "kind": "Method",
    "detail": "Function (enum EOutputSource { eAccumulatorEntry,eSequencedDetails } ; bool)",
    "insertText": "Output(EOutputSource pOutSrc=eAccumulatorEntry, int pIndex = -1, bool pExtraDevicesOnly = false)"
  },
  {
    "label": "OutputById()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OutputById(EEntryID pId, EOutputSource pOutSrc=eAccumulatorEntry, bool pExtraDevicesOnly = false)"
  },
  {
    "label": "Output()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Output(const FbxString& pName, const FbxString& pDescr, FbxAccumulatorEntry::EClass pClass, bool pExtraDevicesOnly = false)"
  },
  {
    "label": "Output()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Output(FbxUserNotificationFilteredIterator& pAEFIter, bool pExtraDevicesOnly = false)"
  },
  {
    "label": "SetLogMessageEmitter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLogMessageEmitter(FbxMessageEmitter * pLogMessageEmitter)"
  },
  {
    "label": "GetLogFilePath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLogFilePath(FbxString& pPath)"
  },
  {
    "label": "GetLogFileName()",
    "kind": "Method",
    "detail": "Function (FbxString)",
    "insertText": "GetLogFileName()"
  },
  {
    "label": "AE()",
    "kind": "Method",
    "detail": "Function (} ; FbxAccumulatorEntry*)",
    "insertText": "AE()"
  },
  {
    "label": "AccumulatorInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccumulatorInit()"
  },
  {
    "label": "AccumulatorClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AccumulatorClear()"
  },
  {
    "label": "OpenExtraDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenExtraDevices()"
  },
  {
    "label": "SendToExtraDevices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendToExtraDevices(bool pOutputNow, FbxArray<FbxAccumulatorEntry*>& pEntries)"
  },
  {
    "label": "SendToExtraDevices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendToExtraDevices(bool pOutputNow, FbxArray<AESequence*>& pAESequence)"
  },
  {
    "label": "SendToExtraDevices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendToExtraDevices(bool pOutputNow, const FbxAccumulatorEntry* pAccEntry, int pDetailId = -1)"
  },
  {
    "label": "CloseExtraDevices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseExtraDevices()"
  },
  {
    "label": "ResetAccumulator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAccumulator()"
  },
  {
    "label": "ResetSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetSequence()"
  },
  {
    "label": "SendToLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendToLog(EOutputSource pOutSrc, int pId)"
  },
  {
    "label": "SendToLog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendToLog(const FbxAccumulatorEntry* pAccEntry, int pDetailId = -1)"
  },
  {
    "label": "FbxUserNotificationFilteredIterator()",
    "kind": "Method",
    "detail": "Function (private : FbxString mLogFileName ; FbxString* mLog ; FbxLogFile* mLogFile ; FbxMessageEmitter* mLogMessageEmitter ; bool mProperlyInitialized ; FbxString mSessionDescription ; bool mProperlyCleaned ; FbxMultiMap mAccuHT ; FbxArray<FbxAccumulatorEntry*> mAccu ; FbxArray<AESequence*> mAESequence ; FbxManager* mSdkManager ; } ; class FBXSDK_DLL FbxUserNotificationFilteredIterator { public :)",
    "insertText": "FbxUserNotificationFilteredIterator(FbxUserNotification& pAccumulator, int pFilterClass, FbxUserNotification::EOutputSource pSrc = FbxUserNotification::eSequencedDetails, bool pNoDetail = true)"
  },
  {
    "label": "FbxUserNotificationFilteredIterator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FbxUserNotificationFilteredIterator()"
  },
  {
    "label": "GetNbItems()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetNbItems()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "First()",
    "kind": "Method",
    "detail": "Function (FbxAccumulatorEntry*)",
    "insertText": "First()"
  },
  {
    "label": "Previous()",
    "kind": "Method",
    "detail": "Function (FbxAccumulatorEntry*)",
    "insertText": "Previous()"
  },
  {
    "label": "Next()",
    "kind": "Method",
    "detail": "Function (FbxAccumulatorEntry*)",
    "insertText": "Next()"
  },
  {
    "label": "BuildFilteredList()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BuildFilteredList(FbxUserNotification& pAccumulator)"
  }
]