[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FStructuredArchiveSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructuredArchiveSlot"
  },
  {
    "label": "UField",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UField"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "FPropertyTypeNameBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyTypeNameBuilder"
  },
  {
    "label": "FPropertyTypeNameNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTypeNameNode"
  },
  {
    "label": "FPropertyTypeName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyTypeName"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Containers / StringFwd . h \" # include \" UObject / NameTypes . h \" # define class FArchive ; class FStructuredArchiveSlot ; class UField ; struct FGuid ; namespace UE { class FPropertyTypeNameBuilder ; } namespace UE { struct FPropertyTypeNameNode { FName Name ; int32 InnerCount = 0 ; } ; class FPropertyTypeName { public : bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "GetParameterCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetParameterCount()"
  },
  {
    "label": "GetParameter()",
    "kind": "Method",
    "detail": "Function (FPropertyTypeName)",
    "insertText": "GetParameter(int32 ParamIndex)"
  },
  {
    "label": "GetParameterName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetParameterName(int32 ParamIndex)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "IsStruct()",
    "kind": "Method",
    "detail": "Function (Index = 0 ; } bool)",
    "insertText": "IsStruct(FName StructName)"
  },
  {
    "label": "IsEnum()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnum(FName EnumName)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (private : uint32)",
    "insertText": "GetTypeHash(const FPropertyTypeName& TypeName)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FPropertyTypeName& Lhs, const FPropertyTypeName& Rhs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FPropertyTypeName& TypeName)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(FStructuredArchiveSlot Slot, FPropertyTypeName& TypeName)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStringBuilderBase&)",
    "insertText": "operator(FStringBuilderBase& Builder, const FPropertyTypeName& TypeName)"
  },
  {
    "label": "AddName()",
    "kind": "Method",
    "detail": "Function (int32 Index = 0 ; FPropertyTypeNameBuilder ; } ; class FPropertyTypeNameBuilder { public : void)",
    "insertText": "AddName(FName Name)"
  },
  {
    "label": "AddGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddGuid(const FGuid& Guid)"
  },
  {
    "label": "AddPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPath(const UField* Field)"
  },
  {
    "label": "AddType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddType(FPropertyTypeName Name)"
  },
  {
    "label": "BeginParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginParameters()"
  },
  {
    "label": "EndParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndParameters()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (FPropertyTypeName)",
    "insertText": "Build()"
  },
  {
    "label": "TryParse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryParse(FStringView Name)"
  }
]