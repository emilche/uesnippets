[
  {
    "label": "RTCSceneTy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCSceneTy"
  },
  {
    "label": "RTCGeometryTy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCGeometryTy"
  },
  {
    "label": "RTCGeometryType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCGeometryType"
  },
  {
    "label": "RTCSubdivisionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCSubdivisionMode"
  },
  {
    "label": "RTCCurveFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCCurveFlags"
  },
  {
    "label": "RTCBoundsFunctionArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBoundsFunctionArguments"
  },
  {
    "label": "RTCBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBounds"
  },
  {
    "label": "RTCBoundsFunctionArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBoundsFunctionArguments"
  },
  {
    "label": "RTCIntersectFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectFunctionNArguments"
  },
  {
    "label": "RTCIntersectContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectContext"
  },
  {
    "label": "RTCRayHitN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitN"
  },
  {
    "label": "RTCIntersectFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectFunctionNArguments"
  },
  {
    "label": "RTCOccludedFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCOccludedFunctionNArguments"
  },
  {
    "label": "RTCIntersectContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectContext"
  },
  {
    "label": "RTCRayN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayN"
  },
  {
    "label": "RTCOccludedFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCOccludedFunctionNArguments"
  },
  {
    "label": "RTCDisplacementFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCDisplacementFunctionNArguments"
  },
  {
    "label": "RTCDisplacementFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCDisplacementFunctionNArguments"
  },
  {
    "label": "RTCGeometryType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCGeometryType"
  },
  {
    "label": "RTCBuildQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBuildQuality"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCIntersectFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectFunctionNArguments"
  },
  {
    "label": "RTCFilterFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCFilterFunctionNArguments"
  },
  {
    "label": "RTCOccludedFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCOccludedFunctionNArguments"
  },
  {
    "label": "RTCFilterFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCFilterFunctionNArguments"
  },
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCQuaternionDecomposition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCQuaternionDecomposition"
  },
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCSubdivisionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCSubdivisionMode"
  },
  {
    "label": "RTCInterpolateArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateArguments"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCInterpolateArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateArguments"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCInterpolateArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateArguments"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCInterpolateArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateArguments"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCInterpolateArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateArguments"
  },
  {
    "label": "RTCInterpolateNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateNArguments"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCInterpolateNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateNArguments"
  },
  {
    "label": "RTCGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCGrid"
  },
  {
    "label": "rtcNewGeometry()",
    "kind": "Method",
    "detail": "Function (RTCGeometry)",
    "insertText": "rtcNewGeometry(RTCDevice device, enum RTCGeometryType type)"
  },
  {
    "label": "rtcRetainGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcRetainGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcReleaseGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcReleaseGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcCommitGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcCommitGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcEnableGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcEnableGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcDisableGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcDisableGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcSetGeometryTimeStepCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTimeStepCount(RTCGeometry geometry, unsigned int timeStepCount)"
  },
  {
    "label": "rtcSetGeometryTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTimeRange(RTCGeometry geometry, float startTime, float endTime)"
  },
  {
    "label": "rtcSetGeometryVertexAttributeCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryVertexAttributeCount(RTCGeometry geometry, unsigned int vertexAttributeCount)"
  },
  {
    "label": "rtcSetGeometryMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryMask(RTCGeometry geometry, unsigned int mask)"
  },
  {
    "label": "rtcSetGeometryBuildQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryBuildQuality(RTCGeometry geometry, enum RTCBuildQuality quality)"
  },
  {
    "label": "rtcSetGeometryMaxRadiusScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryMaxRadiusScale(RTCGeometry geometry, float maxRadiusScale)"
  },
  {
    "label": "rtcSetGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot, enum RTCFormat format, RTCBuffer buffer, size_t byteOffset, size_t byteStride, size_t itemCount)"
  },
  {
    "label": "rtcSetSharedGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetSharedGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot, enum RTCFormat format, const void* ptr, size_t byteOffset, size_t byteStride, size_t itemCount)"
  },
  {
    "label": "rtcUpdateGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcUpdateGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot)"
  },
  {
    "label": "rtcSetGeometryIntersectFilterFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryIntersectFilterFunction(RTCGeometry geometry, RTCFilterFunctionN filter)"
  },
  {
    "label": "rtcSetGeometryOccludedFilterFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryOccludedFilterFunction(RTCGeometry geometry, RTCFilterFunctionN filter)"
  },
  {
    "label": "rtcSetGeometryUserData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryUserData(RTCGeometry geometry, void* ptr)"
  },
  {
    "label": "rtcSetGeometryPointQueryFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryPointQueryFunction(RTCGeometry geometry, RTCPointQueryFunction pointQuery)"
  },
  {
    "label": "rtcSetGeometryUserPrimitiveCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryUserPrimitiveCount(RTCGeometry geometry, unsigned int userPrimitiveCount)"
  },
  {
    "label": "rtcSetGeometryBoundsFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryBoundsFunction(RTCGeometry geometry, RTCBoundsFunction bounds, void* userPtr)"
  },
  {
    "label": "rtcSetGeometryIntersectFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryIntersectFunction(RTCGeometry geometry, RTCIntersectFunctionN intersect)"
  },
  {
    "label": "rtcSetGeometryOccludedFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryOccludedFunction(RTCGeometry geometry, RTCOccludedFunctionN occluded)"
  },
  {
    "label": "rtcFilterIntersection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcFilterIntersection(const struct RTCIntersectFunctionNArguments* args, const struct RTCFilterFunctionNArguments* filterArgs)"
  },
  {
    "label": "rtcFilterOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcFilterOcclusion(const struct RTCOccludedFunctionNArguments* args, const struct RTCFilterFunctionNArguments* filterArgs)"
  },
  {
    "label": "rtcSetGeometryInstancedScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryInstancedScene(RTCGeometry geometry, RTCScene scene)"
  },
  {
    "label": "rtcSetGeometryTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTransform(RTCGeometry geometry, unsigned int timeStep, enum RTCFormat format, const void* xfm)"
  },
  {
    "label": "rtcSetGeometryTransformQuaternion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTransformQuaternion(RTCGeometry geometry, unsigned int timeStep, const struct RTCQuaternionDecomposition* qd)"
  },
  {
    "label": "rtcGetGeometryTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcGetGeometryTransform(RTCGeometry geometry, float time, enum RTCFormat format, void* xfm)"
  },
  {
    "label": "rtcSetGeometryTessellationRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTessellationRate(RTCGeometry geometry, float tessellationRate)"
  },
  {
    "label": "rtcSetGeometryTopologyCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTopologyCount(RTCGeometry geometry, unsigned int topologyCount)"
  },
  {
    "label": "rtcSetGeometrySubdivisionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometrySubdivisionMode(RTCGeometry geometry, unsigned int topologyID, enum RTCSubdivisionMode mode)"
  },
  {
    "label": "rtcSetGeometryVertexAttributeTopology()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryVertexAttributeTopology(RTCGeometry geometry, unsigned int vertexAttributeID, unsigned int topologyID)"
  },
  {
    "label": "rtcSetGeometryDisplacementFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryDisplacementFunction(RTCGeometry geometry, RTCDisplacementFunctionN displacement)"
  },
  {
    "label": "rtcGetGeometryFirstHalfEdge()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtcGetGeometryFirstHalfEdge(RTCGeometry geometry, unsigned int faceID)"
  },
  {
    "label": "rtcGetGeometryFace()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtcGetGeometryFace(RTCGeometry geometry, unsigned int edgeID)"
  },
  {
    "label": "rtcGetGeometryNextHalfEdge()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtcGetGeometryNextHalfEdge(RTCGeometry geometry, unsigned int edgeID)"
  },
  {
    "label": "rtcGetGeometryPreviousHalfEdge()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtcGetGeometryPreviousHalfEdge(RTCGeometry geometry, unsigned int edgeID)"
  },
  {
    "label": "rtcGetGeometryOppositeHalfEdge()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "rtcGetGeometryOppositeHalfEdge(RTCGeometry geometry, unsigned int topologyID, unsigned int edgeID)"
  },
  {
    "label": "rtcInterpolate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcInterpolate(const struct RTCInterpolateArguments* args)"
  },
  {
    "label": "rtcInterpolateN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcInterpolateN(const struct RTCInterpolateNArguments* args)"
  }
]