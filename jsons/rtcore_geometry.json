[
  {
    "label": "RTCSceneTy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCSceneTy"
  },
  {
    "label": "RTCGeometryTy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCGeometryTy"
  },
  {
    "label": "RTCGeometryType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCGeometryType"
  },
  {
    "label": "RTCSubdivisionMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCSubdivisionMode"
  },
  {
    "label": "RTCCurveFlags",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCCurveFlags"
  },
  {
    "label": "RTCBoundsFunctionArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBoundsFunctionArguments"
  },
  {
    "label": "RTCBounds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCBounds"
  },
  {
    "label": "RTCIntersectFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectFunctionNArguments"
  },
  {
    "label": "RTCIntersectContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCIntersectContext"
  },
  {
    "label": "RTCRayHitN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayHitN"
  },
  {
    "label": "RTCOccludedFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCOccludedFunctionNArguments"
  },
  {
    "label": "RTCRayN",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCRayN"
  },
  {
    "label": "RTCDisplacementFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCDisplacementFunctionNArguments"
  },
  {
    "label": "RTCBuildQuality",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBuildQuality"
  },
  {
    "label": "RTCBufferType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCBufferType"
  },
  {
    "label": "RTCFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RTCFormat"
  },
  {
    "label": "RTCFilterFunctionNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCFilterFunctionNArguments"
  },
  {
    "label": "RTCQuaternionDecomposition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCQuaternionDecomposition"
  },
  {
    "label": "RTCInterpolateArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateArguments"
  },
  {
    "label": "RTCInterpolateNArguments",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCInterpolateNArguments"
  },
  {
    "label": "RTCGrid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RTCGrid"
  },
  {
    "label": "RTC_CURVE_FLAG_NEIGHBOR_LEFT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" rtcore_buffer . h \" # include \" rtcore_quaternion . h \" RTC_NAMESPACE_BEGIN typedef struct RTCSceneTy* RTCScene ; typedef struct RTCGeometryTy* RTCGeometry ; enum RTCGeometryType { RTC_GEOMETRY_TYPE_TRIANGLE = 0,RTC_GEOMETRY_TYPE_QUAD = 1,RTC_GEOMETRY_TYPE_GRID = 2,RTC_GEOMETRY_TYPE_SUBDIVISION = 8,RTC_GEOMETRY_TYPE_CONE_LINEAR_CURVE = 1 5,RTC_GEOMETRY_TYPE_ROUND_LINEAR_CURVE = 1 6,RTC_GEOMETRY_TYPE_FLAT_LINEAR_CURVE = 1 7,RTC_GEOMETRY_TYPE_ROUND_BEZIER_CURVE = 2 4,RTC_GEOMETRY_TYPE_FLAT_BEZIER_CURVE = 2 5,RTC_GEOMETRY_TYPE_NORMAL_ORIENTED_BEZIER_CURVE = 2 6,RTC_GEOMETRY_TYPE_ROUND_BSPLINE_CURVE = 3 2,RTC_GEOMETRY_TYPE_FLAT_BSPLINE_CURVE = 3 3,RTC_GEOMETRY_TYPE_NORMAL_ORIENTED_BSPLINE_CURVE = 3 4,RTC_GEOMETRY_TYPE_ROUND_HERMITE_CURVE = 4 0,RTC_GEOMETRY_TYPE_FLAT_HERMITE_CURVE = 4 1,RTC_GEOMETRY_TYPE_NORMAL_ORIENTED_HERMITE_CURVE = 4 2,RTC_GEOMETRY_TYPE_SPHERE_POINT = 5 0,RTC_GEOMETRY_TYPE_DISC_POINT = 5 1,RTC_GEOMETRY_TYPE_ORIENTED_DISC_POINT = 5 2,RTC_GEOMETRY_TYPE_ROUND_CATMULL_ROM_CURVE = 5 8,RTC_GEOMETRY_TYPE_FLAT_CATMULL_ROM_CURVE = 5 9,RTC_GEOMETRY_TYPE_NORMAL_ORIENTED_CATMULL_ROM_CURVE = 6 0,RTC_GEOMETRY_TYPE_USER = 1 2 0,RTC_GEOMETRY_TYPE_INSTANCE = 1 2 1 } ; enum RTCSubdivisionMode { RTC_SUBDIVISION_MODE_NO_BOUNDARY = 0,RTC_SUBDIVISION_MODE_SMOOTH_BOUNDARY = 1,RTC_SUBDIVISION_MODE_PIN_CORNERS = 2,RTC_SUBDIVISION_MODE_PIN_BOUNDARY = 3,RTC_SUBDIVISION_MODE_PIN_ALL = 4,} ; enum RTCCurveFlags {)",
    "insertText": "RTC_CURVE_FLAG_NEIGHBOR_LEFT(1 << 0), RTC_CURVE_FLAG_NEIGHBOR_RIGHT = (1 << 1)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct RTCBoundsFunctionArguments { void* geometryUserPtr ; unsigned int primID ; unsigned int timeStep ; struct RTCBounds* bounds_o ; } ; typedef)",
    "insertText": "void(*RTCBoundsFunction)(const struct RTCBoundsFunctionArguments* args)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct RTCIntersectFunctionNArguments { int* valid ; void* geometryUserPtr ; unsigned int primID ; struct RTCIntersectContext* context ; struct RTCRayHitN* rayhit ; unsigned int N ; unsigned int geomID ; } ; typedef)",
    "insertText": "void(*RTCIntersectFunctionN)(const struct RTCIntersectFunctionNArguments* args)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct RTCOccludedFunctionNArguments { int* valid ; void* geometryUserPtr ; unsigned int primID ; struct RTCIntersectContext* context ; struct RTCRayN* ray ; unsigned int N ; unsigned int geomID ; } ; typedef)",
    "insertText": "void(*RTCOccludedFunctionN)(const struct RTCOccludedFunctionNArguments* args)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct RTCDisplacementFunctionNArguments { void* geometryUserPtr ; RTCGeometry geometry ; unsigned int primID ; unsigned int timeStep ; const float* u ; const float* v ; const float* Ng_x ; const float* Ng_y ; const float* Ng_z ; float* P_x ; float* P_y ; float* P_z ; unsigned int N ; } ; typedef)",
    "insertText": "void(*RTCDisplacementFunctionN)(const struct RTCDisplacementFunctionNArguments* args)"
  },
  {
    "label": "rtcNewGeometry()",
    "kind": "Method",
    "detail": "Function (RTCGeometry)",
    "insertText": "rtcNewGeometry(RTCDevice device, enum RTCGeometryType type)"
  },
  {
    "label": "rtcRetainGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcRetainGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcReleaseGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcReleaseGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcCommitGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcCommitGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcEnableGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcEnableGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcDisableGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcDisableGeometry(RTCGeometry geometry)"
  },
  {
    "label": "rtcSetGeometryTimeStepCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTimeStepCount(RTCGeometry geometry, unsigned int timeStepCount)"
  },
  {
    "label": "rtcSetGeometryTimeRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTimeRange(RTCGeometry geometry, float startTime, float endTime)"
  },
  {
    "label": "rtcSetGeometryVertexAttributeCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryVertexAttributeCount(RTCGeometry geometry, unsigned int vertexAttributeCount)"
  },
  {
    "label": "rtcSetGeometryMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryMask(RTCGeometry geometry, unsigned int mask)"
  },
  {
    "label": "rtcSetGeometryBuildQuality()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryBuildQuality(RTCGeometry geometry, enum RTCBuildQuality quality)"
  },
  {
    "label": "rtcSetGeometryMaxRadiusScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryMaxRadiusScale(RTCGeometry geometry, float maxRadiusScale)"
  },
  {
    "label": "rtcSetGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot, enum RTCFormat format, RTCBuffer buffer, size_t byteOffset, size_t byteStride, size_t itemCount)"
  },
  {
    "label": "rtcSetSharedGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetSharedGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot, enum RTCFormat format, const void* ptr, size_t byteOffset, size_t byteStride, size_t itemCount)"
  },
  {
    "label": "rtcSetNewGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "rtcSetNewGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot, enum RTCFormat format, size_t byteStride, size_t itemCount)"
  },
  {
    "label": "rtcGetGeometryBufferData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "rtcGetGeometryBufferData(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot)"
  },
  {
    "label": "rtcUpdateGeometryBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcUpdateGeometryBuffer(RTCGeometry geometry, enum RTCBufferType type, unsigned int slot)"
  },
  {
    "label": "rtcSetGeometryIntersectFilterFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryIntersectFilterFunction(RTCGeometry geometry, RTCFilterFunctionN filter)"
  },
  {
    "label": "rtcSetGeometryOccludedFilterFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryOccludedFilterFunction(RTCGeometry geometry, RTCFilterFunctionN filter)"
  },
  {
    "label": "rtcSetGeometryUserData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryUserData(RTCGeometry geometry, void* ptr)"
  },
  {
    "label": "rtcGetGeometryUserData()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "rtcGetGeometryUserData(RTCGeometry geometry)"
  },
  {
    "label": "rtcSetGeometryPointQueryFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryPointQueryFunction(RTCGeometry geometry, RTCPointQueryFunction pointQuery)"
  },
  {
    "label": "rtcSetGeometryUserPrimitiveCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryUserPrimitiveCount(RTCGeometry geometry, unsigned int userPrimitiveCount)"
  },
  {
    "label": "rtcSetGeometryBoundsFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryBoundsFunction(RTCGeometry geometry, RTCBoundsFunction bounds, void* userPtr)"
  },
  {
    "label": "rtcSetGeometryIntersectFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryIntersectFunction(RTCGeometry geometry, RTCIntersectFunctionN intersect)"
  },
  {
    "label": "rtcSetGeometryOccludedFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryOccludedFunction(RTCGeometry geometry, RTCOccludedFunctionN occluded)"
  },
  {
    "label": "rtcFilterIntersection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcFilterIntersection(const struct RTCIntersectFunctionNArguments* args, const struct RTCFilterFunctionNArguments* filterArgs)"
  },
  {
    "label": "rtcFilterOcclusion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcFilterOcclusion(const struct RTCOccludedFunctionNArguments* args, const struct RTCFilterFunctionNArguments* filterArgs)"
  },
  {
    "label": "rtcSetGeometryInstancedScene()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryInstancedScene(RTCGeometry geometry, RTCScene scene)"
  },
  {
    "label": "rtcSetGeometryTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTransform(RTCGeometry geometry, unsigned int timeStep, enum RTCFormat format, const void* xfm)"
  },
  {
    "label": "rtcSetGeometryTransformQuaternion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTransformQuaternion(RTCGeometry geometry, unsigned int timeStep, const struct RTCQuaternionDecomposition* qd)"
  },
  {
    "label": "rtcGetGeometryTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcGetGeometryTransform(RTCGeometry geometry, float time, enum RTCFormat format, void* xfm)"
  },
  {
    "label": "rtcSetGeometryTessellationRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTessellationRate(RTCGeometry geometry, float tessellationRate)"
  },
  {
    "label": "rtcSetGeometryTopologyCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryTopologyCount(RTCGeometry geometry, unsigned int topologyCount)"
  },
  {
    "label": "rtcSetGeometrySubdivisionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometrySubdivisionMode(RTCGeometry geometry, unsigned int topologyID, enum RTCSubdivisionMode mode)"
  },
  {
    "label": "rtcSetGeometryVertexAttributeTopology()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryVertexAttributeTopology(RTCGeometry geometry, unsigned int vertexAttributeID, unsigned int topologyID)"
  },
  {
    "label": "rtcSetGeometryDisplacementFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rtcSetGeometryDisplacementFunction(RTCGeometry geometry, RTCDisplacementFunctionN displacement)"
  },
  {
    "label": "rtcGetGeometryFirstHalfEdge()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "rtcGetGeometryFirstHalfEdge(RTCGeometry geometry, unsigned int faceID)"
  },
  {
    "label": "rtcGetGeometryFace()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "rtcGetGeometryFace(RTCGeometry geometry, unsigned int edgeID)"
  },
  {
    "label": "rtcGetGeometryNextHalfEdge()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "rtcGetGeometryNextHalfEdge(RTCGeometry geometry, unsigned int edgeID)"
  },
  {
    "label": "rtcGetGeometryPreviousHalfEdge()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "rtcGetGeometryPreviousHalfEdge(RTCGeometry geometry, unsigned int edgeID)"
  },
  {
    "label": "rtcGetGeometryOppositeHalfEdge()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "rtcGetGeometryOppositeHalfEdge(RTCGeometry geometry, unsigned int topologyID, unsigned int edgeID)"
  },
  {
    "label": "rtcInterpolate()",
    "kind": "Method",
    "detail": "Function (struct RTCInterpolateArguments { RTCGeometry geometry ; unsigned int primID ; float u ; float v ; enum RTCBufferType bufferType ; unsigned int bufferSlot ; float* P ; float* dPdu ; float* dPdv ; float* ddPdudu ; float* ddPdvdv ; float* ddPdudv ; unsigned int valueCount ; } ; void)",
    "insertText": "rtcInterpolate(const struct RTCInterpolateArguments* args)"
  },
  {
    "label": "rtcInterpolate0()",
    "kind": "Method",
    "detail": "Function (RTC_FORCEINLINE void)",
    "insertText": "rtcInterpolate0(RTCGeometry geometry, unsigned int primID, float u, float v, enum RTCBufferType bufferType, unsigned int bufferSlot, float* P, unsigned int valueCount)"
  },
  {
    "label": "rtcInterpolate()",
    "kind": "Method",
    "detail": "Function (struct RTCInterpolateArguments args ; args . geometry = geometry ; args . primID = primID ; args . u = u ; args . v = v ; args . bufferType = bufferType ; args . bufferSlot = bufferSlot ; args . P = P ; args . dPdu = NULL ; args . dPdv = NULL ; args . ddPdudu = NULL ; args . ddPdvdv = NULL ; args . ddPdudv = NULL ; args . valueCount = valueCount ;)",
    "insertText": "rtcInterpolate(&args)"
  },
  {
    "label": "rtcInterpolate1()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE void)",
    "insertText": "rtcInterpolate1(RTCGeometry geometry, unsigned int primID, float u, float v, enum RTCBufferType bufferType, unsigned int bufferSlot, float* P, float* dPdu, float* dPdv, unsigned int valueCount)"
  },
  {
    "label": "rtcInterpolate2()",
    "kind": "Method",
    "detail": "Function (} RTC_FORCEINLINE void)",
    "insertText": "rtcInterpolate2(RTCGeometry geometry, unsigned int primID, float u, float v, enum RTCBufferType bufferType, unsigned int bufferSlot, float* P, float* dPdu, float* dPdv, float* ddPdudu, float* ddPdvdv, float* ddPdudv, unsigned int valueCount)"
  },
  {
    "label": "rtcInterpolateN()",
    "kind": "Method",
    "detail": "Function (} struct RTCInterpolateNArguments { RTCGeometry geometry ; const void* valid ; const unsigned int* primIDs ; const float* u ; const float* v ; unsigned int N ; enum RTCBufferType bufferType ; unsigned int bufferSlot ; float* P ; float* dPdu ; float* dPdv ; float* ddPdudu ; float* ddPdvdv ; float* ddPdudv ; unsigned int valueCount ; } ; void)",
    "insertText": "rtcInterpolateN(const struct RTCInterpolateNArguments* args)"
  }
]