[
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "URuntimeVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeVirtualTexture"
  },
  {
    "label": "USparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTexture"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UFont",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFont"
  },
  {
    "label": "FMeshUVChannelInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshUVChannelInfo"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Materials / MaterialInstance . h \" # include \" MaterialInstanceDynamic . generated . h \")",
    "insertText": "UCLASS(hidecategories=Object, collapsecategories, BlueprintType, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITOR ENGINE_API virtual void UpdateCachedData()"
  },
  {
    "label": "InitializeVectorParameterAndGetIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeVectorParameterAndGetIndex(const FName& ParameterName, const FLinearColor& Value, int32& OutParameterIndex)"
  },
  {
    "label": "SetVectorParameterByIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetVectorParameterByIndex(int32 ParameterIndex, const FLinearColor& Value)"
  },
  {
    "label": "SetVectorParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorParameterValue(FName ParameterName, const FVector& Value)"
  },
  {
    "label": "SetVectorParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorParameterValue(ParameterName, FLinearColor(Value))"
  },
  {
    "label": "SetVectorParameterValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetVectorParameterValue(FName ParameterName, const FVector4& Value)"
  },
  {
    "label": "SetVectorParameterValueByInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorParameterValueByInfo(const FMaterialParameterInfo& ParameterInfo, const FVector& Value)"
  },
  {
    "label": "SetVectorParameterValueByInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorParameterValueByInfo(ParameterInfo, FLinearColor(Value))"
  },
  {
    "label": "SetVectorParameterValueByInfo()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetVectorParameterValueByInfo(const FMaterialParameterInfo& ParameterInfo, const FVector4& Value)"
  },
  {
    "label": "CopyMaterialUniformParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMaterialUniformParameters(UMaterialInterface* Source)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (UMaterialInstanceDynamic*)",
    "insertText": "Create(class UMaterialInterface* ParentMaterial, class UObject* InOuter, FName Name = NAME_None)"
  },
  {
    "label": "SetFontParameterValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFontParameterValue(const FMaterialParameterInfo& ParameterInfo, class UFont* FontValue, int32 FontPage)"
  },
  {
    "label": "ClearParameterValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearParameterValues()"
  },
  {
    "label": "CopyScalarAndVectorParameters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyScalarAndVectorParameters(const UMaterialInterface& SourceMaterialToCopyFrom, ERHIFeatureLevel::Type FeatureLevel)"
  },
  {
    "label": "SetNaniteOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNaniteOverride(UMaterialInterface* InMaterial)"
  },
  {
    "label": "HasOverridenBaseProperties()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasOverridenBaseProperties()"
  },
  {
    "label": "GetCastDynamicShadowAsMasked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCastDynamicShadowAsMasked()"
  },
  {
    "label": "GetShadingModels()",
    "kind": "Method",
    "detail": "Function (FMaterialShadingModelField)",
    "insertText": "GetShadingModels()"
  },
  {
    "label": "IsShadingModelFromMaterialExpression()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShadingModelFromMaterialExpression()"
  },
  {
    "label": "GetBlendMode()",
    "kind": "Method",
    "detail": "Function (EBlendMode)",
    "insertText": "GetBlendMode()"
  },
  {
    "label": "IsTwoSided()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTwoSided()"
  },
  {
    "label": "IsThinSurface()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThinSurface()"
  },
  {
    "label": "IsTranslucencyWritingVelocity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslucencyWritingVelocity()"
  },
  {
    "label": "IsDitheredLODTransition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDitheredLODTransition()"
  },
  {
    "label": "IsMasked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMasked()"
  },
  {
    "label": "GetDisplacementScaling()",
    "kind": "Method",
    "detail": "Function (FDisplacementScaling)",
    "insertText": "GetDisplacementScaling()"
  },
  {
    "label": "IsDisplacementFadeEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDisplacementFadeEnabled()"
  },
  {
    "label": "GetDisplacementFadeRange()",
    "kind": "Method",
    "detail": "Function (FDisplacementFadeRange)",
    "insertText": "GetDisplacementFadeRange()"
  },
  {
    "label": "GetMaxWorldPositionOffsetDisplacement()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMaxWorldPositionOffsetDisplacement()"
  },
  {
    "label": "HasPixelAnimation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPixelAnimation()"
  },
  {
    "label": "GetTextureDensity()",
    "kind": "Method",
    "detail": "Function (TMap<FName,TArray<FName>> RenamedTextures ; float)",
    "insertText": "GetTextureDensity(FName TextureName, const struct FMeshUVChannelInfo& UVChannelData)"
  },
  {
    "label": "InitializeMID()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "InitializeMID(class UMaterialInterface* ParentMaterial)"
  },
  {
    "label": "UpdateCachedDataDynamic()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateCachedDataDynamic()"
  }
]