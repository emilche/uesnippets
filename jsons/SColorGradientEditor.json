[
  {
    "label": "FCurveOwnerInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveOwnerInterface"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FGradientStopMark",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGradientStopMark"
  },
  {
    "label": "SColorGradientEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorGradientEditor"
  },
  {
    "label": "FGradientStopMark()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "FGradientStopMark()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid( FCurveOwnerInterface& CurveOwner )"
  },
  {
    "label": "SetColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColor( const FLinearColor& InColor, FCurveOwnerInterface& CurveOwner )"
  },
  {
    "label": "SetTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTime( float NewTime, FCurveOwnerInterface& CurveOwner )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "SetCurveOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveOwner( FCurveOwnerInterface* InCurveOwner )"
  },
  {
    "label": "OpenGradientStopContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenGradientStopContextMenu(const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OpenGradientStopColorPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenGradientStopColorPicker()"
  },
  {
    "label": "OnSelectedStopColorChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedStopColorChanged( FLinearColor InNewColor )"
  },
  {
    "label": "OnCancelSelectedStopColorChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCancelSelectedStopColorChange( FLinearColor PreviousColor )"
  },
  {
    "label": "OnBeginChangeAlphaValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeginChangeAlphaValue()"
  },
  {
    "label": "OnEndChangeAlphaValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndChangeAlphaValue( float NewValue )"
  },
  {
    "label": "OnAlphaValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlphaValueChanged( float NewValue )"
  },
  {
    "label": "OnAlphaValueCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAlphaValueCommitted( float NewValue, ETextCommit::Type )"
  },
  {
    "label": "OnRemoveSelectedGradientStop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveSelectedGradientStop()"
  },
  {
    "label": "OnSetGradientStopTimeFromPopup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetGradientStopTimeFromPopup( const FText& NewText, ETextCommit::Type Type )"
  },
  {
    "label": "GetGradientStopAtPoint()",
    "kind": "Method",
    "detail": "Function (FGradientStopMark)",
    "insertText": "GetGradientStopAtPoint( const FVector2D& MousePos, const FGeometry& MyGeometry )"
  },
  {
    "label": "DeleteStop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteStop( const FGradientStopMark& InMark )"
  },
  {
    "label": "AddStop()",
    "kind": "Method",
    "detail": "Function (FGradientStopMark)",
    "insertText": "AddStop( const FVector2D& Position, const FGeometry& MyGeometry, bool bColorStop )"
  },
  {
    "label": "MoveStop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveStop( FGradientStopMark& Mark, float NewTime )"
  }
]