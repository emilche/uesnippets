[
  {
    "label": "CefStreamReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefStreamReader"
  },
  {
    "label": "CefZipArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefZipArchive"
  },
  {
    "label": "File",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "File"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "base"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_WRAPPER_CEF_ZIP_ARCHIVE_H_ # define CEF_INCLUDE_WRAPPER_CEF_ZIP_ARCHIVE_H_ # pragma once # include<map> # include \" include / base / cef_lock . h \" # include \" include / base / cef_macros . h \" # include \" include / base / cef_ref_counted . h \" # include \" include / cef_base . h \" class CefStreamReader ; class CefZipArchive : public base::RefCountedThreadSafe<CefZipArchive> { public : class File : public CefBaseRefCounted { public : const unsigned char*)",
    "insertText": "GetData()"
  },
  {
    "label": "GetDataSize()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetDataSize()"
  },
  {
    "label": "GetStreamReader()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefStreamReader>)",
    "insertText": "GetStreamReader()"
  },
  {
    "label": "CefZipArchive()",
    "kind": "Method",
    "detail": "Function (} ; typedef std::map<CefString,CefRefPtr<File>> FileMap ;)",
    "insertText": "CefZipArchive()"
  },
  {
    "label": "Load()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Load(CefRefPtr<CefStreamReader> stream, const CefString& password, bool overwriteExisting)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "GetFileCount()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetFileCount()"
  },
  {
    "label": "HasFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasFile(const CefString& fileName)"
  },
  {
    "label": "GetFile()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<File>)",
    "insertText": "GetFile(const CefString& fileName)"
  },
  {
    "label": "RemoveFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFile(const CefString& fileName)"
  },
  {
    "label": "GetFiles()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetFiles(FileMap& map)"
  },
  {
    "label": "DISALLOW_COPY_AND_ASSIGN()",
    "kind": "Method",
    "detail": "Function (FileMap contents_ ; base::Lock lock_ ;)",
    "insertText": "DISALLOW_COPY_AND_ASSIGN(CefZipArchive)"
  }
]