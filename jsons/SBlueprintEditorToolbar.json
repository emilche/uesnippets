[
  {
    "label": "FBlueprintEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditor"
  },
  {
    "label": "FExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExtender"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FToolBarBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolBarBuilder"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprintEditorToolMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprintEditorToolMenuContext"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "FFullBlueprintEditorCommands",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFullBlueprintEditorCommands"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "SetupBlueprintEditorMenu()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Framework / Commands / Commands . h \" # include \" HAL / Platform . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" SourceControlOperations . h \" # include \" Styling / AppStyle . h \" # include \" Templates / SharedPointer . h \" # include \" Textures / SlateIcon . h \" # include \" UObject / NameTypes . h \" # include \" UObject / UnrealNames . h \" # include \" Widgets / SWidget . h \" # include \" WorkflowOrientedApp / SModeWidget . h \" class FBlueprintEditor ; class FExtender ; class FMenuBuilder ; class FToolBarBuilder ; class FUICommandInfo ; class SWidget ; class UBlueprintEditorToolMenuContext ; class UToolMenu ; struct FToolMenuContext ; class FKismet2Menu { public : void)",
    "insertText": "SetupBlueprintEditorMenu(const FName MainMenuName)"
  },
  {
    "label": "FillFileMenuBlueprintSection()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "FillFileMenuBlueprintSection(UToolMenu* Menu)"
  },
  {
    "label": "FillEditMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillEditMenu(UToolMenu* Menu)"
  },
  {
    "label": "FillViewMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillViewMenu(UToolMenu* Menu)"
  },
  {
    "label": "FillDebugMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDebugMenu(UToolMenu* Menu)"
  },
  {
    "label": "FillDeveloperMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillDeveloperMenu(UToolMenu* Menu)"
  },
  {
    "label": "FFullBlueprintEditorCommands()",
    "kind": "Method",
    "detail": "Function (} ; class FFullBlueprintEditorCommands : public TCommands<FFullBlueprintEditorCommands> { public :)",
    "insertText": "FFullBlueprintEditorCommands() : TCommands<FFullBlueprintEditorCommands>(\"FullBlueprintEditor\", NSLOCTEXT(\"Contexts\", \"FullBlueprintEditor\", \"Full Blueprint Editor\"), NAME_None, FAppStyle::GetAppStyleSetName())"
  },
  {
    "label": "RegisterCommands()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FUICommandInfo> Compile ; TSharedPtr<FUICommandInfo> SaveOnCompile_Never ; TSharedPtr<FUICommandInfo> SaveOnCompile_SuccessOnly ; TSharedPtr<FUICommandInfo> SaveOnCompile_Always ; TSharedPtr<FUICommandInfo> JumpToErrorNode ; TSharedPtr<FUICommandInfo> SwitchToScriptingMode ; TSharedPtr<FUICommandInfo> SwitchToBlueprintDefaultsMode ; TSharedPtr<FUICommandInfo> SwitchToComponentsMode ; TSharedPtr<FUICommandInfo> EditGlobalOptions ; TSharedPtr<FUICommandInfo> EditClassDefaults ; void)",
    "insertText": "RegisterCommands()"
  },
  {
    "label": "FBlueprintEditorToolbar()",
    "kind": "Method",
    "detail": "Function (} ; class FBlueprintEditorToolbar : public TSharedFromThis<FBlueprintEditorToolbar> { public :)",
    "insertText": "FBlueprintEditorToolbar(TSharedPtr<FBlueprintEditor> InBlueprintEditor) : BlueprintEditor(InBlueprintEditor)"
  },
  {
    "label": "AddBlueprintGlobalOptionsToolbar()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBlueprintGlobalOptionsToolbar(UToolMenu* InMenu, bool bRegisterViewport = false)"
  },
  {
    "label": "AddCompileToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCompileToolbar(UToolMenu* InMenu)"
  },
  {
    "label": "AddNewToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNewToolbar(UToolMenu* InMenu)"
  },
  {
    "label": "AddScriptingToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddScriptingToolbar(UToolMenu* InMenu)"
  },
  {
    "label": "AddDebuggingToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDebuggingToolbar(UToolMenu* InMenu)"
  },
  {
    "label": "GetStatusImage()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetStatusImage()"
  },
  {
    "label": "GetStatusTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetStatusTooltip()"
  },
  {
    "label": "DiffAgainstRevision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffAgainstRevision(class UBlueprint* Current, int32 OldRevision)"
  },
  {
    "label": "MakeDiffMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeDiffMenu(const UBlueprintEditorToolMenuContext* InContext)"
  }
]