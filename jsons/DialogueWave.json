[
  {
    "label": "UDialogueSoundWaveProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueSoundWaveProxy"
  },
  {
    "label": "UDialogueVoice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueVoice"
  },
  {
    "label": "USoundBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundBase"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "FPropertyChangedChainEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedChainEvent"
  },
  {
    "label": "FDialogueConstants",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDialogueConstants"
  },
  {
    "label": "FDialogueContextMapping",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDialogueContextMapping"
  },
  {
    "label": "UDialogueWaveFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueWaveFactory"
  },
  {
    "label": "UDialogueWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueWave"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / Guid . h \" # include \" Sound / DialogueTypes . h \" # include \" DialogueWave . generated . h \" class UDialogueSoundWaveProxy ; class UDialogueVoice ; class USoundBase ; class USoundWave ; struct FPropertyChangedChainEvent ; struct FDialogueConstants { const FString DialogueNamespace ; const FString DialogueNotesNamespace ; const FString SubtitleKeySuffix ; # if WITH_EDITORONLY_DATA const FString ActingDirectionKeySuffix ; const FString PropertyName_AudioFile ; const FString PropertyName_VoiceActorDirection ; const FString PropertyName_Speaker ; const FString PropertyName_Targets ; const FString PropertyName_GrammaticalGender ; const FString PropertyName_GrammaticalPlurality ; const FString PropertyName_TargetGrammaticalGender ; const FString PropertyName_TargetGrammaticalNumber ; const FString PropertyName_DialogueContext ; const FString PropertyName_IsMature ; # endif } ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FDialogueContextMapping()"
  },
  {
    "label": "GetLocalizationKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalizationKey()"
  },
  {
    "label": "GetLocalizationKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalizationKey(const FString& InOwnerDialogueWaveKey)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "operator(const FDialogueContextMapping& LHS, const FDialogueContextMapping& RHS)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (class UDialogueWaveFactory ;)",
    "insertText": "UCLASS(hidecategories=Object, editinlinenew, MinimalAPI, BlueprintType, Meta = (LoadBehavior = \"LazyOnDemand\"))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, BlueprintReadOnly, Category=Filter, AssetRegistrySearchable)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "IsReadyForFinishDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForFinishDestroy()"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDesc()"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeChainProperty()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PostEditChangeChainProperty(FPropertyChangedChainEvent& PropertyChangedEvent)"
  },
  {
    "label": "SupportsContext()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "SupportsContext(const FDialogueContext& Context)"
  },
  {
    "label": "GetWaveFromContext()",
    "kind": "Method",
    "detail": "Function (USoundBase*)",
    "insertText": "GetWaveFromContext(const FDialogueContext& Context)"
  },
  {
    "label": "GetWaveFromContext()",
    "kind": "Method",
    "detail": "Function (USoundBase*)",
    "insertText": "GetWaveFromContext(const FDialogueContextMapping& ContextMapping)"
  },
  {
    "label": "GetLocalizedSpokenText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedSpokenText()"
  },
  {
    "label": "GetLocalizedSpokenText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedSpokenText(const FDialogueContext& Context)"
  },
  {
    "label": "GetLocalizedSpokenText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedSpokenText(const FDialogueContextMapping& ContextMapping)"
  },
  {
    "label": "GetLocalizedSubtitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedSubtitle()"
  },
  {
    "label": "GetLocalizedSubtitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedSubtitle(const FDialogueContext& Context)"
  },
  {
    "label": "GetLocalizedSubtitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedSubtitle(const FDialogueContextMapping& ContextMapping)"
  },
  {
    "label": "GetContextLocalizationKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContextLocalizationKey(const FDialogueContext& Context)"
  },
  {
    "label": "GetContextLocalizationKey()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContextLocalizationKey(const FDialogueContextMapping& ContextMapping)"
  },
  {
    "label": "GetContextRecordedAudioFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContextRecordedAudioFilename(const FDialogueContext& Context)"
  },
  {
    "label": "GetContextRecordedAudioFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetContextRecordedAudioFilename(const FDialogueContextMapping& ContextMapping)"
  },
  {
    "label": "BuildRecordedAudioFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "BuildRecordedAudioFilename(const FString& FormatString, const FGuid& DialogueGuid, const FString& DialogueName, const FString& ContextId, const int32 ContextIndex)"
  },
  {
    "label": "UpdateContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateContext(FDialogueContextMapping& ContextMapping, USoundWave* SoundWave, UDialogueVoice* Speaker, const TArray<UDialogueVoice*>& Targets)"
  },
  {
    "label": "UpdateMappingProxy()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateMappingProxy(FDialogueContextMapping& ContextMapping)"
  },
  {
    "label": "CopySoundBasePropertiesToProxy()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CopySoundBasePropertiesToProxy(const USoundBase* InSoundBase, USoundBase* Proxy)"
  }
]