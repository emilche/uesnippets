[
  {
    "label": "FToolElementRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolElementRegistry"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "which",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "which"
  },
  {
    "label": "should",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "should"
  },
  {
    "label": "WIDGETREGISTRATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WIDGETREGISTRATION_API"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "WIDGETREGISTRATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WIDGETREGISTRATION_API"
  },
  {
    "label": "WIDGETREGISTRATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WIDGETREGISTRATION_API"
  },
  {
    "label": "FToolElementRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FToolElementRegistry"
  },
  {
    "label": "WIDGETREGISTRATION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WIDGETREGISTRATION_API"
  },
  {
    "label": "GenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GenerateWidget()"
  },
  {
    "label": "GenerateWidgetSharedRef()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetSharedRef()"
  },
  {
    "label": "UpdateWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWidget()"
  },
  {
    "label": "ResetWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetWidget()"
  },
  {
    "label": "GetKeyString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetKeyString()"
  },
  {
    "label": "GenerateWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidget()"
  },
  {
    "label": "SetRegistrationArgs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRegistrationArgs(TSharedRef<FToolElementRegistrationArgs> RegistrationArgs)"
  },
  {
    "label": "GetToolElementSP()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FToolElement>)",
    "insertText": "GetToolElementSP( FToolElementRegistrationKey& ToolElementKey)"
  },
  {
    "label": "FToolElementRegistry()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "FToolElementRegistry()"
  },
  {
    "label": "provided()",
    "kind": "Method",
    "detail": "Function (if)",
    "insertText": "provided(otherwise it will use the default registered registration\n\t * arguments. If bUpdateRegistrationArgs is set to true and RegistrationArgsSP is not nullptr, the specified\n\t * registration args will replace the existing ones for the tool element.\n\t *\n\t * @param ToolElementKeySR the TSharedRef<FToolElementRegistrationKey> which is the key to the tool element for \n\t        which we want to generate the widget\n\t   @param RegistrationArgsSP The SharedPtr to the FToolElementRegistrationArgs for the tool element for which\n\t\t\twhich we want to generate the widget\n\t * @param bUpdateRegistrationArgs a bool that indicates whether we store any provided FToolElementRegistrationArgs\n\t * as the new FToolElementRegistrationArgs for this tool element\n\t */\n\tTSharedRef< SWidget > GenerateWidget(\n\t\tTSharedRef<FToolElementRegistrationKey> ToolElementKeySR,\n\t\tTSharedPtr<FToolElementRegistrationArgs> RegistrationArgsSP = nullptr,\n\t\tbool bUpdateRegistrationArgs = false)"
  },
  {
    "label": "RegisterElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterElement(const TSharedRef<FToolElement> ToolElement)"
  },
  {
    "label": "UnregisterElement()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterElement(const TSharedRef<FToolElement> ToolElement)"
  }
]