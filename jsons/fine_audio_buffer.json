[
  {
    "label": "AudioDeviceBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioDeviceBuffer"
  },
  {
    "label": "FineAudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FineAudioBuffer"
  },
  {
    "label": "FineAudioBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_DEVICE_FINE_AUDIO_BUFFER_H_ # define MODULES_AUDIO_DEVICE_FINE_AUDIO_BUFFER_H_ # include \" api / array_view . h \" # include \" rtc_base / buffer . h \" namespace webrtc { class AudioDeviceBuffer ; class FineAudioBuffer { public :)",
    "insertText": "FineAudioBuffer(AudioDeviceBuffer* audio_device_buffer)"
  },
  {
    "label": "FineAudioBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FineAudioBuffer()"
  },
  {
    "label": "ResetPlayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetPlayout()"
  },
  {
    "label": "ResetRecord()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRecord()"
  },
  {
    "label": "IsReadyForPlayout()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForPlayout()"
  },
  {
    "label": "IsReadyForRecord()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForRecord()"
  },
  {
    "label": "GetPlayoutData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPlayoutData(rtc::ArrayView<int16_t> audio_buffer, int playout_delay_ms)"
  },
  {
    "label": "DeliverRecordedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeliverRecordedData(rtc::ArrayView<const int16_t> audio_buffer, int record_delay_ms)"
  }
]