[
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "CopyPixelsFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPixelsFrom(const uint8_t* src_buffer,\n                      int src_stride,\n                      const DesktopRect& dest_rect)"
  },
  {
    "label": "CopyPixelsFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyPixelsFrom(const DesktopFrame& src_frame,\n                      const DesktopVector& src_pos,\n                      const DesktopRect& dest_rect)"
  },
  {
    "label": "CopyIntersectingPixelsFrom()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CopyIntersectingPixelsFrom(const DesktopFrame& src_frame,\n                                  double horizontal_scale,\n                                  double vertical_scale)"
  },
  {
    "label": "CopyFrameInfoFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrameInfoFrom(const DesktopFrame& other)"
  },
  {
    "label": "MoveFrameInfoFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveFrameInfoFrom(DesktopFrame* other)"
  },
  {
    "label": "DesktopFrame()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "DesktopFrame(DesktopSize size,\n               int stride,\n               uint8_t* data,\n               SharedMemory* shared_memory)"
  },
  {
    "label": "BasicDesktopFrame()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "BasicDesktopFrame(DesktopSize size)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<DesktopFrame>)",
    "insertText": "Create(\n      DesktopSize size,\n      SharedMemoryFactory* shared_memory_factory)"
  }
]