[
  {
    "label": "TUniqueFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TUniqueFunction"
  },
  {
    "label": "FBuildOutput",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildOutput"
  },
  {
    "label": "IBuild",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuild"
  },
  {
    "label": "ICache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICache"
  },
  {
    "label": "FBuildJobCompleteParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildJobCompleteParams"
  },
  {
    "label": "FCacheKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheKey"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IBuildJob",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildJob"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" CoreTypes . h \" # include \" DerivedDataRequestTypes . h \" template<FuncType> class TUniqueFunction ; namespace UE::DerivedData { class FBuildOutput ; } namespace UE::DerivedData { class IBuild ; } namespace UE::DerivedData { class ICache ; } namespace UE::DerivedData { struct FBuildJobCompleteParams ; } namespace UE::DerivedData { struct FCacheKey ; } namespace UE::DerivedData { enum class EBuildStatus : uint32 ; } namespace UE::DerivedData { using FOnBuildJobComplete = TUniqueFunction<)",
    "insertText": "void(FBuildJobCompleteParams&& Params)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (class IBuildJob { public : const FSharedString&)",
    "insertText": "GetName()"
  },
  {
    "label": "GetFunction()",
    "kind": "Method",
    "detail": "Function (const FUtf8SharedString&)",
    "insertText": "GetFunction()"
  },
  {
    "label": "GetCache()",
    "kind": "Method",
    "detail": "Function (ICache*)",
    "insertText": "GetCache()"
  },
  {
    "label": "GetBuild()",
    "kind": "Method",
    "detail": "Function (IBuild&)",
    "insertText": "GetBuild()"
  },
  {
    "label": "StepExecution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StepExecution()"
  },
  {
    "label": "SkipExecuteRemote()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SkipExecuteRemote()"
  },
  {
    "label": "SetOutput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOutput(const FBuildOutput& Output)"
  }
]