[
  {
    "label": "MX_GENGLSL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENGLSL_API"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_TRANSFORMVECTORNODEGLSL_H # define MATERIALX_TRANSFORMVECTORNODEGLSL_H # include<MaterialXGenGlsl / GlslShaderGenerator . h> MATERIALX_NAMESPACE_BEGIN class TransformVectorNodeGlsl : public GlslImplementation { public : ShaderNodeImplPtr)",
    "insertText": "create()"
  },
  {
    "label": "createVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createVariables(const ShaderNode& node, GenContext& context, Shader& shader)"
  },
  {
    "label": "emitFunctionCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitFunctionCall(const ShaderNode& node, GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "getMatrix()",
    "kind": "Method",
    "detail": "Function (protected : const string&)",
    "insertText": "getMatrix(const string& fromSpace, const string& toSpace)"
  },
  {
    "label": "getHomogeneousCoordinate()",
    "kind": "Method",
    "detail": "Function (string)",
    "insertText": "getHomogeneousCoordinate(const ShaderInput* in, GenContext& context)"
  }
]