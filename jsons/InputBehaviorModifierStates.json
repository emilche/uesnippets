[
  {
    "label": "FInputBehaviorModifierStates",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInputBehaviorModifierStates"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InputState . h \" # include \" BehaviorTargetInterfaces . h \" class FInputBehaviorModifierStates { public : typedef TFunction<)",
    "insertText": "bool(const FInputDeviceState&)"
  },
  {
    "label": "RegisterModifier()",
    "kind": "Method",
    "detail": "Function (protected : TArray<int> ModifierIDs ; TMap<int,FModifierTestFunction> ModifierTests ; public : void)",
    "insertText": "RegisterModifier(int ModifierID, const FModifierTestFunction& ModifierTest)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ModifierIDs .)",
    "insertText": "Add(ModifierID)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ModifierTests .)",
    "insertText": "Add(ModifierID, ModifierTest)"
  },
  {
    "label": "HasModifiers()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasModifiers()"
  },
  {
    "label": "UpdateModifiers()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateModifiers(const FInputDeviceState& Input, IModifierToggleBehaviorTarget* ModifiersTarget)"
  },
  {
    "label": "ModifierID()",
    "kind": "Method",
    "detail": "Function (bool bIsOn = ModifierTests [)",
    "insertText": "ModifierID(Input)"
  },
  {
    "label": "OnUpdateModifierState()",
    "kind": "Method",
    "detail": "Function (ModifiersTarget ->)",
    "insertText": "OnUpdateModifierState(ModifierID, bIsOn)"
  }
]