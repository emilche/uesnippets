[
  {
    "label": "FNetConnectionFaultRecoveryBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetConnectionFaultRecoveryBase"
  },
  {
    "label": "FNetConnectionFaultRecovery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetConnectionFaultRecovery"
  },
  {
    "label": "FDefaultFaultHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDefaultFaultHandler"
  },
  {
    "label": "InitFaultRecovery()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Net / Core / Connection / NetResultManager . h \" namespace UE { namespace Net { class FNetConnectionFaultRecoveryBase ; class FNetConnectionFaultRecovery ; class FDefaultFaultHandler final : public FNetResultHandler { FNetConnectionFaultRecovery ; private : void)",
    "insertText": "InitFaultRecovery(FNetConnectionFaultRecoveryBase* InFaultRecovery)"
  },
  {
    "label": "HandleNetResult()",
    "kind": "Method",
    "detail": "Function (EHandleNetResult)",
    "insertText": "HandleNetResult(FNetResult&& InResult)"
  }
]