[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVirtualTextureChunkHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureChunkHeader"
  },
  {
    "label": "FVirtualTextureDataChunk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureDataChunk"
  },
  {
    "label": "FVirtualTextureTileOffsetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureTileOffsetData"
  },
  {
    "label": "FVirtualTextureBuiltData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualTextureBuiltData"
  },
  {
    "label": "FVirtualTextureDataChunk()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" PixelFormat . h \" # include \" Serialization / BulkData . h \" # include \" Serialization / DerivedData . h \" # include \" Engine / Texture . h \" # include \" HAL / ThreadSafeBool . h \" # define VIRTUALTEXTURE_DATA_MAXLAYERS 8 u # define VIRTUALTEXTURE_DATA_MAXMIPS 1 6 u enum class EVirtualTextureCodec : uint8 { Black,OpaqueBlack,White,Flat,RawGPU,ZippedGPU_DEPRECATED,Crunch_DEPRECATED,Max,} ; struct FVirtualTextureChunkHeader { uint32 Unused ; } ; struct FVirtualTextureDataChunk { UE::FDerivedData DerivedData ; FByteBulkData BulkData ; FSHAHash BulkDataHash ; uint32 SizeInBytes ; uint32 CodecPayloadSize ; uint32 CodecPayloadOffset [ VIRTUALTEXTURE_DATA_MAXLAYERS ] ; EVirtualTextureCodec CodecType [ VIRTUALTEXTURE_DATA_MAXLAYERS ] ;)",
    "insertText": "FVirtualTextureDataChunk() : SizeInBytes(0u) , CodecPayloadSize(0u)"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memzero(CodecPayloadOffset)"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memzero(CodecType)"
  },
  {
    "label": "GetMemoryFootprint()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetMemoryFootprint()"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (uint32 MemoryFootprint =)",
    "insertText": "uint32(sizeof(BulkData) + sizeof(SizeInBytes) + sizeof(CodecPayloadOffset) + sizeof(CodecPayloadSize) + sizeof(CodecType))"
  },
  {
    "label": "StoreInDerivedDataCache()",
    "kind": "Method",
    "detail": "Function (FThreadSafeBool bFileAvailableInVTDDCDache ; bool bCorruptDataLoadedFromDDC = false ; int64)",
    "insertText": "StoreInDerivedDataCache(FStringView InKey, FStringView InName, bool bReplaceExisting)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# endif } ; struct FVirtualTextureTileOffsetData { # if WITH_EDITOR void)",
    "insertText": "Init(uint32 InWidth, uint32 InHeight)"
  },
  {
    "label": "AddTile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTile(uint32 InAddress)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize()"
  },
  {
    "label": "GetTileOffset()",
    "kind": "Method",
    "detail": "Function (# endif uint32)",
    "insertText": "GetTileOffset(uint32 InAddress)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FVirtualTextureTileOffsetData& TileOffsetData)"
  },
  {
    "label": "FVirtualTextureBuiltData()",
    "kind": "Method",
    "detail": "Function (Ar<<TileOffsetData . Width ; Ar<<TileOffsetData . Height ; Ar<<TileOffsetData . MaxAddress ; Ar<<TileOffsetData . Addresses ; Ar<<TileOffsetData . Offsets ; return Ar ; } uint32 Width = 0 ; uint32 Height = 0 ; uint32 MaxAddress = 0 ; TArray<uint32> Addresses ; TArray<uint32> Offsets ; # if WITH_EDITOR TBitArray<> TileStates ; # endif } ; struct FVirtualTextureBuiltData { uint32 NumLayers ; uint32 NumMips ; uint32 Width ; uint32 Height ; uint32 WidthInBlocks ; uint32 HeightInBlocks ; uint32 TileSize ; uint32 TileBorderSize ; TEnumAsByte<EPixelFormat> LayerTypes [ VIRTUALTEXTURE_DATA_MAXLAYERS ] ; FLinearColor LayerFallbackColors [ VIRTUALTEXTURE_DATA_MAXLAYERS ] ; TArray<FVirtualTextureDataChunk> Chunks ; TArray<uint32> TileDataOffsetPerLayer ; TArray<uint32> ChunkIndexPerMip ; TArray<uint32> BaseOffsetPerMip ; TArray<FVirtualTextureTileOffsetData> TileOffsetData ; TArray<uint32> TileIndexPerChunk ; TArray<uint32> TileIndexPerMip ; TArray<uint32> TileOffsetInChunk ;)",
    "insertText": "FVirtualTextureBuiltData() : NumLayers(0u) , NumMips(0u) , Width(0u) , Height(0u) , WidthInBlocks(0u) , HeightInBlocks(0u) , TileSize(0u) , TileBorderSize(0u)"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memzero(LayerTypes)"
  },
  {
    "label": "Memzero()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memzero(LayerFallbackColors)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "GetHeightInTiles()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetHeightInTiles()"
  },
  {
    "label": "GetTileMemoryFootprint()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTileMemoryFootprint()"
  },
  {
    "label": "GetDiskMemoryFootprint()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetDiskMemoryFootprint()"
  },
  {
    "label": "GetNumTileHeaders()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumTileHeaders()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner, int32 FirstMipToSerialize)"
  },
  {
    "label": "IsValidAddress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidAddress(uint32 vLevel, uint32 vAddress)"
  },
  {
    "label": "GetChunkIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetChunkIndex(uint8 vLevel)"
  },
  {
    "label": "GetTileOffset()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTileOffset(uint32 vLevel, uint32 vAddress, uint32 LayerIndex)"
  },
  {
    "label": "ValidateData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateData(FStringView const& InDDCDebugContext, bool bValidateCompression)"
  },
  {
    "label": "IsLegacyData()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsLegacyData()"
  },
  {
    "label": "GetTileIndex_Legacy()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTileIndex_Legacy(uint8 vLevel, uint32 vAddress)"
  },
  {
    "label": "GetTileOffset_Legacy()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTileOffset_Legacy(uint32 ChunkIndex, uint32 TileIndex)"
  }
]