[
  {
    "label": "IScreenShotManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IScreenShotManager"
  },
  {
    "label": "FAutomationScreenshotMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAutomationScreenshotMetadata"
  },
  {
    "label": "FScreenshotExportResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenshotExportResult"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScreenshotExportResult()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Async / Future . h \" # include \" ImageComparer . h \" class IScreenShotManager ; struct FAutomationScreenshotMetadata ; typedef TSharedPtr<class IScreenShotManager> IScreenShotManagerPtr ; typedef TSharedRef<class IScreenShotManager> IScreenShotManagerRef ; struct FScreenshotExportResult { bool Success ; FString ExportPath ;)",
    "insertText": "FScreenshotExportResult() : Success(false)"
  },
  {
    "label": "IScreenShotManager()",
    "kind": "Method",
    "detail": "Function (} } ; enum class EScreenShotCompareOptions { None,DiscardImage,KeepImage,} ; class IScreenShotManager { public : ~)",
    "insertText": "IScreenShotManager()"
  },
  {
    "label": "CompareScreenshotAsync()",
    "kind": "Method",
    "detail": "Function (} TFuture<FImageComparisonResult>)",
    "insertText": "CompareScreenshotAsync(const FString& IncomingPath, const FAutomationScreenshotMetadata& MetaData, const EScreenShotCompareOptions Options)"
  },
  {
    "label": "ExportScreenshotComparisonResult()",
    "kind": "Method",
    "detail": "Function (FScreenshotExportResult)",
    "insertText": "ExportScreenshotComparisonResult(FString ScreenshotName, FString ExportPath = FString{}, bool bOnlyGeneratedFiles = false)"
  },
  {
    "label": "OpenComparisonReportsAsync()",
    "kind": "Method",
    "detail": "Function (TFuture<TSharedPtr<TArray<FComparisonReport>>>)",
    "insertText": "OpenComparisonReportsAsync(const FString& ImportPath)"
  },
  {
    "label": "GetIdealApprovedFolderForImage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetIdealApprovedFolderForImage(const FAutomationScreenshotMetadata& MetaData)"
  },
  {
    "label": "FindApprovedFiles()",
    "kind": "Method",
    "detail": "Function (TArray<FString>)",
    "insertText": "FindApprovedFiles(const FAutomationScreenshotMetadata& IncomingMetaData, const FString& FilePattern)"
  },
  {
    "label": "CompareImageSequence()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FImageComparisonResult>)",
    "insertText": "CompareImageSequence(const TMap<FString, FString>& Sequence, const FAutomationScreenshotMetadata& Metadata)"
  },
  {
    "label": "NotifyAutomationTestFrameworkOfImageComparison()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAutomationTestFrameworkOfImageComparison(const FImageComparisonResult& Result)"
  }
]