[
  {
    "label": "bad_any_cast",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "bad_any_cast"
  },
  {
    "label": "bad_any_cast()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_TYPES_BAD_ANY_CAST_H_ # define ABSL_TYPES_BAD_ANY_CAST_H_ # include<typeinfo> # include \" absl / base / config . h \" # ifdef ABSL_USES_STD_ANY # include<any> namespace absl { ABSL_NAMESPACE_BEGIN using std::bad_any_cast ; ABSL_NAMESPACE_END } # else namespace absl { ABSL_NAMESPACE_BEGIN class bad_any_cast : public std::bad_cast { public : ~)",
    "insertText": "bad_any_cast()"
  },
  {
    "label": "what()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "what()"
  },
  {
    "label": "ThrowBadAnyCast()",
    "kind": "Method",
    "detail": "Function (} ; namespace any_internal { [ [ noreturn ] ] void)",
    "insertText": "ThrowBadAnyCast()"
  }
]