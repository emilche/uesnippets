[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FBlueprintExceptionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintExceptionInfo"
  },
  {
    "label": "FBlueprintExceptionInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Internationalization / Text . h \" namespace EBlueprintExceptionType { enum Type { Breakpoint,Tracepoint,WireTracepoint,AccessViolation,InfiniteLoop,NonFatalError,FatalError,AbortExecution,} ; } struct FBlueprintExceptionInfo { public :)",
    "insertText": "FBlueprintExceptionInfo(EBlueprintExceptionType::Type InEventType) : EventType(InEventType)"
  },
  {
    "label": "FBlueprintExceptionInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FBlueprintExceptionInfo(EBlueprintExceptionType::Type InEventType, const FText& InDescription) : EventType(InEventType) , Description(InDescription)"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (} EBlueprintExceptionType::Type)",
    "insertText": "GetType()"
  }
]