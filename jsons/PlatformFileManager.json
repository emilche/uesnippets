[
  {
    "label": "FPlatformFileManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPlatformFileManager"
  },
  {
    "label": "IPlatformFile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPlatformFile"
  },
  {
    "label": "USE_ATOMIC_PLATFORM_FILE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreFwd . h \" # include \" CoreTypes . h \" # include \" Templates / Atomic . h \" # ifndef USE_ATOMIC_PLATFORM_FILE # define)",
    "insertText": "USE_ATOMIC_PLATFORM_FILE(WITH_EDITOR)"
  },
  {
    "label": "FPlatformFileManager()",
    "kind": "Method",
    "detail": "Function (# if USE_ATOMIC_PLATFORM_FILE TAtomic<class IPlatformFile*> TopmostPlatformFile ; TAtomic<class IPlatformFile*> PhysicalPlatformFile ; # else class IPlatformFile* TopmostPlatformFile ; class IPlatformFile* PhysicalPlatformFile ; # endif public :)",
    "insertText": "FPlatformFileManager()"
  },
  {
    "label": "GetPlatformFile()",
    "kind": "Method",
    "detail": "Function (IPlatformFile&)",
    "insertText": "GetPlatformFile()"
  },
  {
    "label": "GetPlatformPhysical()",
    "kind": "Method",
    "detail": "Function (IPlatformFile&)",
    "insertText": "GetPlatformPhysical()"
  },
  {
    "label": "SetPlatformFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlatformFile(IPlatformFile& NewTopmostPlatformFile)"
  },
  {
    "label": "SetPlatformPhysical()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPlatformPhysical(IPlatformFile& NewPhysicalPlatformFile)"
  },
  {
    "label": "FindPlatformFile()",
    "kind": "Method",
    "detail": "Function (IPlatformFile*)",
    "insertText": "FindPlatformFile(const TCHAR* Name)"
  },
  {
    "label": "GetPlatformFile()",
    "kind": "Method",
    "detail": "Function (IPlatformFile*)",
    "insertText": "GetPlatformFile(const TCHAR* Name)"
  },
  {
    "label": "TickActivePlatformFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickActivePlatformFile()"
  },
  {
    "label": "InitializeNewAsyncIO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeNewAsyncIO()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FPlatformFileManager&)",
    "insertText": "Get()"
  },
  {
    "label": "RemovePlatformFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePlatformFile(IPlatformFile* PlatformFileToRemove)"
  },
  {
    "label": "InsertPlatformFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertPlatformFile(IPlatformFile* NewPlatformFile)"
  }
]