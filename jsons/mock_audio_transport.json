[
  {
    "label": "MockAudioTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockAudioTransport"
  },
  {
    "label": "MockAudioTransport()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_DEVICE_INCLUDE_MOCK_AUDIO_TRANSPORT_H_ # define MODULES_AUDIO_DEVICE_INCLUDE_MOCK_AUDIO_TRANSPORT_H_ # include \" modules / audio_device / include / audio_device_defines . h \" # include \" test / gmock . h \" namespace webrtc { namespace test { class MockAudioTransport : public AudioTransport { public :)",
    "insertText": "MockAudioTransport()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(int32_t, RecordedDataIsAvailable, (const void* audioSamples, size_t nSamples, size_t nBytesPerSample, size_t nChannels, uint32_t samplesPerSec, uint32_t totalDelayMS, int32_t clockDrift, uint32_t currentMicLevel, bool keyPressed, uint32_t& newMicLevel), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int32_t, RecordedDataIsAvailable, (const void* audioSamples, size_t nSamples, size_t nBytesPerSample, size_t nChannels, uint32_t samplesPerSec, uint32_t totalDelayMS, int32_t clockDrift, uint32_t currentMicLevel, bool keyPressed, uint32_t& newMicLevel, int64_t estimated_capture_time_ns), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int32_t, NeedMorePlayData, (size_t nSamples, size_t nBytesPerSample, size_t nChannels, uint32_t samplesPerSec, void* audioSamples, size_t& nSamplesOut, int64_t* elapsed_time_ms, int64_t* ntp_time_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, PullRenderData, (int bits_per_sample, int sample_rate, size_t number_of_channels, size_t number_of_frames, void* audio_data, int64_t* elapsed_time_ms, int64_t* ntp_time_ms), (override))"
  }
]