[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModule"
  },
  {
    "label": "SModulesView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SModulesView"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "OnGenerateRow(TSharedPtr<FModule> InModule, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "SelectModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectModule(TSharedPtr<FModule> Module)"
  },
  {
    "label": "OnMouseButtonClick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMouseButtonClick(TSharedPtr<FModule> Module)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<FModule> Module, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "ListView_GetContextMenu()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "ListView_GetContextMenu()"
  },
  {
    "label": "LoadSymbols_Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadSymbols_Execute(TSharedPtr<FModule> Module, bool bOpenFile)"
  },
  {
    "label": "UpdateSorting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSorting()"
  },
  {
    "label": "OnSortModeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSortModeChanged(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type SortMode)"
  }
]