[
  {
    "label": "UMovieSceneEntitySystemLinker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneEntitySystemLinker"
  },
  {
    "label": "FEntityRange",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntityRange"
  },
  {
    "label": "FChildEntityFactory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChildEntityFactory"
  },
  {
    "label": "FChildEntityInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChildEntityInitializer"
  },
  {
    "label": "FChildEntityFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" # include \" EntitySystem / MovieSceneEntitySystemTypes . h \" class UMovieSceneEntitySystemLinker ; namespace UE { namespace MovieScene { struct FEntityRange ; struct FChildEntityFactory { ~)",
    "insertText": "FChildEntityFactory()"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "GetCurrentIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetCurrentIndex()"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(UMovieSceneEntitySystemLinker* Linker, FEntityAllocationProxy ParentAllocationProxy)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(int32 EntityIndex)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ParentEntityOffsets .)",
    "insertText": "Add(EntityIndex)"
  },
  {
    "label": "GenerateDerivedType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GenerateDerivedType(FComponentMask& OutNewEntityType)"
  },
  {
    "label": "PostInitialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostInitialize(UMovieSceneEntitySystemLinker* Linker)"
  },
  {
    "label": "InitializeAllocation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitializeAllocation(UMovieSceneEntitySystemLinker* Linker, const FComponentMask& ParentType, const FComponentMask& ChildType, const FEntityAllocation* ParentAllocation, TArrayView<const int32> ParentAllocationOffsets, const FEntityRange& InChildEntityRange)"
  },
  {
    "label": "FChildEntityInitializer()",
    "kind": "Method",
    "detail": "Function (} protected : TArrayView<const int32> CurrentEntityOffsets ; TArray<int32> ParentEntityOffsets ; } ; struct FChildEntityInitializer { ~)",
    "insertText": "FChildEntityInitializer()"
  },
  {
    "label": "IsRelevant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsRelevant(const FComponentMask& InParentType, const FComponentMask& InChildType)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (const bool bHasParentComponent = ! ParentComponent | | InParentType .)",
    "insertText": "Contains(ParentComponent)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (const bool bHasChildComponent = ChildComponent&& InChildType .)",
    "insertText": "Contains(ChildComponent)"
  },
  {
    "label": "FChildEntityInitializer()",
    "kind": "Method",
    "detail": "Function (protected : FComponentTypeID ParentComponent,ChildComponent ;)",
    "insertText": "FChildEntityInitializer(FComponentTypeID InParentComponent, FComponentTypeID InChildComponent) : ParentComponent(InParentComponent) , ChildComponent(InChildComponent)"
  }
]