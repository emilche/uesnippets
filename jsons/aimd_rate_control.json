[
  {
    "label": "AimdRateControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AimdRateControl"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "GoogCcStatePrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GoogCcStatePrinter"
  },
  {
    "label": "AimdRateControl()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "AimdRateControl(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "SetStartBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStartBitrate(DataRate start_bitrate)"
  },
  {
    "label": "SetMinBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinBitrate(DataRate min_bitrate)"
  },
  {
    "label": "SetRtt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRtt(TimeDelta rtt)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (DataRate)",
    "insertText": "Update(const RateControlInput* input, Timestamp at_time)"
  },
  {
    "label": "SetInApplicationLimitedRegion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInApplicationLimitedRegion(bool in_alr)"
  },
  {
    "label": "SetEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEstimate(DataRate bitrate, Timestamp at_time)"
  },
  {
    "label": "SetNetworkStateEstimate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNetworkStateEstimate(\n      const absl::optional<NetworkStateEstimate>& estimate)"
  },
  {
    "label": "ChangeBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeBitrate(const RateControlInput& input, Timestamp at_time)"
  },
  {
    "label": "UpdateChangePeriod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateChangePeriod(Timestamp at_time)"
  },
  {
    "label": "ChangeState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeState(const RateControlInput& input, Timestamp at_time)"
  }
]