[
  {
    "label": "_cef_drag_handler_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_drag_handler_t"
  },
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_drag_data_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_drag_data_t"
  },
  {
    "label": "_cef_frame_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_frame_t"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_DRAG_HANDLER_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_DRAG_HANDLER_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # include \" include / capi / cef_browser_capi . h \" # include \" include / capi / cef_drag_data_capi . h \" # include \" include / capi / cef_frame_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_drag_handler_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* on_drag_enter)(struct _cef_drag_handler_t* self, struct _cef_browser_t* browser, struct _cef_drag_data_t* dragData, cef_drag_operations_mask_t mask)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* on_draggable_regions_changed)( struct _cef_drag_handler_t* self, struct _cef_browser_t* browser, struct _cef_frame_t* frame, size_t regionsCount, cef_draggable_region_t const* regions)"
  }
]