[
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "IPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCell"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableRow"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "IDataSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDataSource"
  },
  {
    "label": "IPropertyTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTable"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FPropertyInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyInfo"
  },
  {
    "label": "FObjectPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPropertyNode"
  },
  {
    "label": "AsUObject()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / Object . h \" # include \" UObject / UnrealType . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" Framework / Views / ITypedTableView . h \" # include \" IPropertyTableUtilities . h \" # include \" UObject / WeakFieldPtr . h \" class FPropertyPath ; class IPropertyTableCell ; class IPropertyTableColumn ; class IPropertyTableRow ; namespace EPropertyTableSelectionUnit { enum Type { None = 0 x00,Row = 0 x01,Cell = 0 x03 } ; } namespace EPropertyTableOrientation { enum Type { AlignPropertiesInColumns,AlignPropertiesInRows,} ; } class IDataSource { public : TWeakObjectPtr<UObject>)",
    "insertText": "AsUObject()"
  },
  {
    "label": "AsPropertyPath()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class FPropertyPath>)",
    "insertText": "AsPropertyPath()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (} ; class IPropertyTable : public IPropertyTableUtilities { public : void)",
    "insertText": "Tick()"
  },
  {
    "label": "ForceRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRefresh()"
  },
  {
    "label": "RequestRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefresh()"
  },
  {
    "label": "AddColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColumn(const TWeakObjectPtr< class UObject >& Object)"
  },
  {
    "label": "AddColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColumn(const TWeakFieldPtr< class FProperty >& Property)"
  },
  {
    "label": "AddColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColumn(const TSharedRef< class FPropertyPath >& PropertyPath)"
  },
  {
    "label": "AddColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddColumn(const TSharedRef< class IPropertyTableColumn >& Column)"
  },
  {
    "label": "RemoveColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveColumn(const TSharedRef< class IPropertyTableColumn >& Column)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRow(const TWeakObjectPtr< UObject >& Object)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRow(const TWeakFieldPtr< FProperty >& Property)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRow(const TSharedRef< FPropertyPath >& PropertyPath)"
  },
  {
    "label": "AddRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRow(const TSharedRef< class IPropertyTableRow >& Row)"
  },
  {
    "label": "RemoveRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRow(const TSharedRef< class IPropertyTableRow >& Row)"
  },
  {
    "label": "GetOrientation()",
    "kind": "Method",
    "detail": "Function (const EPropertyTableOrientation::Type)",
    "insertText": "GetOrientation()"
  },
  {
    "label": "SetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOrientation(EPropertyTableOrientation::Type InOrientation)"
  },
  {
    "label": "GetIsUserAllowedToChangeRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsUserAllowedToChangeRoot()"
  },
  {
    "label": "SetIsUserAllowedToChangeRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsUserAllowedToChangeRoot(bool InAllowUserToChangeRoot)"
  },
  {
    "label": "SetRootPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootPath(const TSharedPtr< FPropertyPath >& Path)"
  },
  {
    "label": "GetRootPath()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPropertyPath>)",
    "insertText": "GetRootPath()"
  },
  {
    "label": "GetPossibleExtensionsForPath()",
    "kind": "Method",
    "detail": "Function (TArray<struct FPropertyInfo>)",
    "insertText": "GetPossibleExtensionsForPath(const TSharedRef< FPropertyPath >& Path)"
  },
  {
    "label": "GetSelectedTableObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSelectedTableObjects(TArray< TWeakObjectPtr< UObject > >& OutSelectedObjects)"
  },
  {
    "label": "SetObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjects(const TArray< TWeakObjectPtr< UObject > >& Objects)"
  },
  {
    "label": "SetObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjects(const TArray< UObject* >& Objects)"
  },
  {
    "label": "GetObjectPropertyNode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class FObjectPropertyNode>)",
    "insertText": "GetObjectPropertyNode(const TSharedRef< class IPropertyTableColumn >& Column, const TSharedRef< class IPropertyTableRow >& Row)"
  },
  {
    "label": "GetObjectPropertyNode()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class FObjectPropertyNode>)",
    "insertText": "GetObjectPropertyNode(const TWeakObjectPtr< UObject >& Object)"
  },
  {
    "label": "GetShowRowHeader()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowRowHeader()"
  },
  {
    "label": "SetShowRowHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowRowHeader(const bool ShowRowHeader)"
  },
  {
    "label": "GetShowObjectName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowObjectName()"
  },
  {
    "label": "SetShowObjectName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowObjectName(const bool ShowObjectName)"
  },
  {
    "label": "GetColumns()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedRef<class IPropertyTableColumn>>&)",
    "insertText": "GetColumns()"
  },
  {
    "label": "SelectCellRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectCellRange(const TSharedRef< class IPropertyTableCell >& StartingCell, const TSharedRef< class IPropertyTableCell >& EndingCell)"
  },
  {
    "label": "GetRows()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<class IPropertyTableRow>>&)",
    "insertText": "GetRows()"
  },
  {
    "label": "GetSelectedRows()",
    "kind": "Method",
    "detail": "Function (const TSet<TSharedRef<class IPropertyTableRow>>&)",
    "insertText": "GetSelectedRows()"
  },
  {
    "label": "SetSelectedRows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedRows(const TSet< TSharedRef< class IPropertyTableRow > >& InSelectedRows)"
  },
  {
    "label": "GetSelectedCells()",
    "kind": "Method",
    "detail": "Function (const TSet<TSharedRef<class IPropertyTableCell>>&)",
    "insertText": "GetSelectedCells()"
  },
  {
    "label": "SetSelectedCells()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedCells(const TSet< TSharedRef< class IPropertyTableCell > >& InSelectedCells)"
  },
  {
    "label": "GetItemHeight()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetItemHeight()"
  },
  {
    "label": "SetItemHeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemHeight(float NewItemHeight)"
  },
  {
    "label": "GetLastClickedCell()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetLastClickedCell()"
  },
  {
    "label": "SetLastClickedCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLastClickedCell(const TSharedPtr< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "GetCurrentCell()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetCurrentCell()"
  },
  {
    "label": "SetCurrentCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentCell(const TSharedPtr< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "GetCurrentColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableColumn>)",
    "insertText": "GetCurrentColumn()"
  },
  {
    "label": "SetCurrentColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentColumn(const TSharedPtr< class IPropertyTableColumn >& Column)"
  },
  {
    "label": "GetCurrentRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableRow>)",
    "insertText": "GetCurrentRow()"
  },
  {
    "label": "SetCurrentRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurrentRow(const TSharedPtr< class IPropertyTableRow >& Row)"
  },
  {
    "label": "GetFirstCellInSelection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetFirstCellInSelection()"
  },
  {
    "label": "GetLastCellInSelection()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetLastCellInSelection()"
  },
  {
    "label": "GetNextCellInRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetNextCellInRow(const TSharedRef< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "GetPreviousCellInRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetPreviousCellInRow(const TSharedRef< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "GetNextCellInColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetNextCellInColumn(const TSharedRef< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "GetPreviousCellInColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetPreviousCellInColumn(const TSharedRef< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "GetFirstCellInRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetFirstCellInRow(const TSharedRef< class IPropertyTableRow >& Row)"
  },
  {
    "label": "GetLastCellInRow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetLastCellInRow(const TSharedRef< class IPropertyTableRow >& Row)"
  },
  {
    "label": "GetFirstCellInColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetFirstCellInColumn(const TSharedRef< class IPropertyTableColumn >& Column)"
  },
  {
    "label": "GetLastCellInColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetLastCellInColumn(const TSharedRef< class IPropertyTableColumn >& Column)"
  },
  {
    "label": "GetFirstCellInTable()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetFirstCellInTable()"
  },
  {
    "label": "GetLastCellInTable()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IPropertyTableCell>)",
    "insertText": "GetLastCellInTable()"
  },
  {
    "label": "GetSelectionUnit()",
    "kind": "Method",
    "detail": "Function (EPropertyTableSelectionUnit::Type)",
    "insertText": "GetSelectionUnit()"
  },
  {
    "label": "SetSelectionUnit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionUnit(const EPropertyTableSelectionUnit::Type Unit)"
  },
  {
    "label": "GetSelectionMode()",
    "kind": "Method",
    "detail": "Function (ESelectionMode::Type)",
    "insertText": "GetSelectionMode()"
  },
  {
    "label": "SetSelectionMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectionMode(const ESelectionMode::Type Mode)"
  },
  {
    "label": "GetColumnSortPriority()",
    "kind": "Method",
    "detail": "Function (EColumnSortPriority::Type)",
    "insertText": "GetColumnSortPriority(const TSharedRef< class IPropertyTableColumn > Column)"
  },
  {
    "label": "GetColumnSortMode()",
    "kind": "Method",
    "detail": "Function (EColumnSortMode::Type)",
    "insertText": "GetColumnSortMode(const TSharedRef< class IPropertyTableColumn > Column)"
  },
  {
    "label": "SortByColumnWithId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortByColumnWithId(const EColumnSortPriority::Type SortPriority, const FName& ColumnId, const EColumnSortMode::Type SortMode)"
  },
  {
    "label": "SortByColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortByColumn(const TSharedRef< class IPropertyTableColumn >& Column, EColumnSortMode::Type SortMode, const EColumnSortPriority::Type SortPriority)"
  },
  {
    "label": "PasteTextAtCell()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteTextAtCell(const FString& Text, const TSharedRef< class IPropertyTableCell >& Cell)"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IPropertyTable, FSelectionChanged)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (FSelectionChanged*)",
    "insertText": "OnSelectionChanged()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IPropertyTable, FColumnsChanged)"
  },
  {
    "label": "OnColumnsChanged()",
    "kind": "Method",
    "detail": "Function (FColumnsChanged*)",
    "insertText": "OnColumnsChanged()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IPropertyTable, FRowsChanged)"
  },
  {
    "label": "OnRowsChanged()",
    "kind": "Method",
    "detail": "Function (FRowsChanged*)",
    "insertText": "OnRowsChanged()"
  },
  {
    "label": "DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_EVENT(IPropertyTable, FRootPathChanged)"
  },
  {
    "label": "OnRootPathChanged()",
    "kind": "Method",
    "detail": "Function (FRootPathChanged*)",
    "insertText": "OnRootPathChanged()"
  }
]