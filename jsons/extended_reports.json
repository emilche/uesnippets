[
  {
    "label": "CommonHeader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CommonHeader"
  },
  {
    "label": "ExtendedReports",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExtendedReports"
  },
  {
    "label": "ExtendedReports()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_EXTENDED_REPORTS_H_ # define MODULES_RTP_RTCP_SOURCE_RTCP_PACKET_EXTENDED_REPORTS_H_ # include<vector> # include \" absl / types / optional . h \" # include \" modules / rtp_rtcp / source / rtcp_packet . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / dlrr . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / rrtr . h \" # include \" modules / rtp_rtcp / source / rtcp_packet / target_bitrate . h \" namespace webrtc { namespace rtcp { class CommonHeader ; class ExtendedReports : public RtcpPacket { public : uint8_t kPacketType = 2 0 7 ; size_t kMaxNumberOfDlrrItems = 5 0 ;)",
    "insertText": "ExtendedReports()"
  },
  {
    "label": "ExtendedReports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendedReports(const ExtendedReports& xr)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Parse(const CommonHeader& packet)"
  },
  {
    "label": "SetRrtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRrtr(const Rrtr& rrtr)"
  },
  {
    "label": "AddDlrrItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddDlrrItem(const ReceiveTimeInfo& time_info)"
  },
  {
    "label": "SetTargetBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTargetBitrate(const TargetBitrate& target_bitrate)"
  },
  {
    "label": "rrtr()",
    "kind": "Method",
    "detail": "Function (const absl::optional<Rrtr>&)",
    "insertText": "rrtr()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Create(uint8_t* packet, size_t* index, size_t max_length, PacketReadyCallback callback)"
  },
  {
    "label": "RrtrLength()",
    "kind": "Method",
    "detail": "Function (private : size_t kXrBaseLength = 4 ; size_t)",
    "insertText": "RrtrLength()"
  },
  {
    "label": "TargetBitrateLength()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "TargetBitrateLength()"
  },
  {
    "label": "ParseRrtrBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseRrtrBlock(const uint8_t* block, uint16_t block_length)"
  },
  {
    "label": "ParseDlrrBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseDlrrBlock(const uint8_t* block, uint16_t block_length)"
  },
  {
    "label": "ParseTargetBitrateBlock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ParseTargetBitrateBlock(const uint8_t* block, uint16_t block_length)"
  }
]