[
  {
    "label": "RtpSenderInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpSenderInternal"
  },
  {
    "label": "RtpReceiverInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpReceiverInternal"
  },
  {
    "label": "RTCStatsCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTCStatsCollector"
  },
  {
    "label": "CertificateStatsPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CertificateStatsPair"
  },
  {
    "label": "RequestInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RequestInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RtpTransceiverStatsInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtpTransceiverStatsInfo"
  },
  {
    "label": "InternalRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalRecord"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_RTC_STATS_COLLECTOR_H_ # define PC_RTC_STATS_COLLECTOR_H_ # include<stdint . h> # include<cstdint> # include<map> # include<memory> # include<set> # include<string> # include<vector> # include \" absl / types / optional . h \" # include \" api / data_channel_interface . h \" # include \" api / media_types . h \" # include \" api / scoped_refptr . h \" # include \" api / stats / rtc_stats_collector_callback . h \" # include \" api / stats / rtc_stats_report . h \" # include \" api / stats / rtcstats_objects . h \" # include \" call / call . h \" # include \" media / base / media_channel . h \" # include \" pc / data_channel_utils . h \" # include \" pc / peer_connection_internal . h \" # include \" pc / rtp_receiver . h \" # include \" pc / rtp_sender . h \" # include \" pc / rtp_transceiver . h \" # include \" pc / sctp_data_channel . h \" # include \" pc / track_media_info_map . h \" # include \" pc / transport_stats . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / event . h \" # include \" rtc_base / ref_count . h \" # include \" rtc_base / ssl_certificate . h \" # include \" rtc_base / ssl_identity . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / third_party / sigslot / sigslot . h \" # include \" rtc_base / thread . h \" # include \" rtc_base / time_utils . h \" namespace webrtc { class RtpSenderInternal ; class RtpReceiverInternal ; class RTCStatsCollector : public rtc::RefCountInterface,public sigslot::has_slots<> { public : rtc::scoped_refptr<RTCStatsCollector>)",
    "insertText": "Create(PeerConnectionInternal* pc, int64_t cache_lifetime_us = 50 * rtc::kNumMicrosecsPerMillisec)"
  },
  {
    "label": "GetStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReport(rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "GetStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReport(rtc::scoped_refptr<RtpSenderInternal> selector, rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "GetStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReport(rtc::scoped_refptr<RtpReceiverInternal> selector, rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "ClearCachedStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedStatsReport()"
  },
  {
    "label": "WaitForPendingRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForPendingRequest()"
  },
  {
    "label": "RTCStatsCollector()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "RTCStatsCollector(PeerConnectionInternal* pc, int64_t cache_lifetime_us)"
  },
  {
    "label": "RTCStatsCollector()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RTCStatsCollector()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (struct CertificateStatsPair { std::unique_ptr<rtc::SSLCertificateStats> local ; std::unique_ptr<rtc::SSLCertificateStats> remote ; CertificateStatsPair)",
    "insertText": "Copy()"
  },
  {
    "label": "ProducePartialResultsOnSignalingThreadImpl()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "ProducePartialResultsOnSignalingThreadImpl(int64_t timestamp_us, RTCStatsReport* partial_report)"
  },
  {
    "label": "ProducePartialResultsOnNetworkThreadImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnNetworkThreadImpl(int64_t timestamp_us, const std::map<std::string, cricket::TransportStats>& transport_stats_by_name, const std::map<std::string, CertificateStatsPair>& transport_cert_stats, RTCStatsReport* partial_report)"
  },
  {
    "label": "RequestInfo()",
    "kind": "Method",
    "detail": "Function (private : class RequestInfo { public : enum class FilterMode { kAll,kSenderSelector,kReceiverSelector } ;)",
    "insertText": "RequestInfo(rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "RequestInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestInfo(rtc::scoped_refptr<RtpSenderInternal> selector, rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "RequestInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestInfo(rtc::scoped_refptr<RtpReceiverInternal> selector, rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "filter_mode()",
    "kind": "Method",
    "detail": "Function (FilterMode)",
    "insertText": "filter_mode()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(filter_mode_ == FilterMode::kSenderSelector)"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(filter_mode_ == FilterMode::kReceiverSelector)"
  },
  {
    "label": "GetStatsReportInternal()",
    "kind": "Method",
    "detail": "Function (FilterMode filter_mode_ ; rtc::scoped_refptr<RTCStatsCollectorCallback> callback_ ; rtc::scoped_refptr<RtpSenderInternal> sender_selector_ ; rtc::scoped_refptr<RtpReceiverInternal> receiver_selector_ ; } ; void)",
    "insertText": "GetStatsReportInternal(RequestInfo request)"
  },
  {
    "label": "DeliverCachedReport()",
    "kind": "Method",
    "detail": "Function (struct RtpTransceiverStatsInfo { rtc::scoped_refptr<RtpTransceiver> transceiver ; cricket::MediaType media_type ; absl::optional<std::string> mid ; absl::optional<std::string> transport_name ; TrackMediaInfoMap track_media_info_map ; } ; void)",
    "insertText": "DeliverCachedReport(rtc::scoped_refptr<const RTCStatsReport> cached_report, std::vector<RequestInfo> requests)"
  },
  {
    "label": "ProduceCertificateStats_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceCertificateStats_n(int64_t timestamp_us, const std::map<std::string, CertificateStatsPair>& transport_cert_stats, RTCStatsReport* report)"
  },
  {
    "label": "ProduceDataChannelStats_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceDataChannelStats_s(int64_t timestamp_us, RTCStatsReport* report)"
  },
  {
    "label": "ProduceIceCandidateAndPairStats_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceIceCandidateAndPairStats_n(int64_t timestamp_us, const std::map<std::string, cricket::TransportStats>& transport_stats_by_name, const Call::Stats& call_stats, RTCStatsReport* report)"
  },
  {
    "label": "ProduceMediaStreamStats_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceMediaStreamStats_s(int64_t timestamp_us, RTCStatsReport* report)"
  },
  {
    "label": "ProduceMediaStreamTrackStats_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceMediaStreamTrackStats_s(int64_t timestamp_us, RTCStatsReport* report)"
  },
  {
    "label": "ProduceMediaSourceStats_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceMediaSourceStats_s(int64_t timestamp_us, RTCStatsReport* report)"
  },
  {
    "label": "ProducePeerConnectionStats_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePeerConnectionStats_s(int64_t timestamp_us, RTCStatsReport* report)"
  },
  {
    "label": "ProduceRTPStreamStats_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceRTPStreamStats_n(int64_t timestamp_us, const std::vector<RtpTransceiverStatsInfo>& transceiver_stats_infos, RTCStatsReport* report)"
  },
  {
    "label": "ProduceAudioRTPStreamStats_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceAudioRTPStreamStats_n(int64_t timestamp_us, const RtpTransceiverStatsInfo& stats, RTCStatsReport* report)"
  },
  {
    "label": "ProduceVideoRTPStreamStats_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceVideoRTPStreamStats_n(int64_t timestamp_us, const RtpTransceiverStatsInfo& stats, RTCStatsReport* report)"
  },
  {
    "label": "ProduceTransportStats_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProduceTransportStats_n(int64_t timestamp_us, const std::map<std::string, cricket::TransportStats>& transport_stats_by_name, const std::map<std::string, CertificateStatsPair>& transport_cert_stats, RTCStatsReport* report)"
  },
  {
    "label": "PrepareTransportCertificateStats_n()",
    "kind": "Method",
    "detail": "Function (std::map<std::string,CertificateStatsPair>)",
    "insertText": "PrepareTransportCertificateStats_n(const std::map<std::string, cricket::TransportStats>& transport_stats_by_name)"
  },
  {
    "label": "PrepareTransceiverStatsInfosAndCallStats_s_w_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareTransceiverStatsInfosAndCallStats_s_w_n()"
  },
  {
    "label": "ProducePartialResultsOnSignalingThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnSignalingThread(int64_t timestamp_us)"
  },
  {
    "label": "ProducePartialResultsOnNetworkThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnNetworkThread(int64_t timestamp_us, absl::optional<std::string> sctp_transport_name)"
  },
  {
    "label": "MergeNetworkReport_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeNetworkReport_s()"
  },
  {
    "label": "OnSctpDataChannelCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSctpDataChannelCreated(SctpDataChannel* channel)"
  },
  {
    "label": "OnDataChannelOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataChannelOpened(DataChannelInterface* channel)"
  },
  {
    "label": "OnDataChannelClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataChannelClosed(DataChannelInterface* channel)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (PeerConnectionInternal* const pc_ ; rtc::Thread* const signaling_thread_ ; rtc::Thread* const worker_thread_ ; rtc::Thread* const network_thread_ ; int num_pending_partial_reports_ ; int64_t partial_report_timestamp_us_ ; rtc::scoped_refptr<RTCStatsReport> partial_report_ ; std::vector<RequestInfo> requests_ ; rtc::scoped_refptr<RTCStatsReport> network_report_ ; rtc::Event network_report_event_ ; std::vector<RtpTransceiverStatsInfo> transceiver_stats_infos_ ; Mutex cached_certificates_mutex_ ; std::map<std::string,CertificateStatsPair> cached_certificates_by_transport_)",
    "insertText": "RTC_GUARDED_BY(cached_certificates_mutex_)"
  },
  {
    "label": "InternalRecord()",
    "kind": "Method",
    "detail": "Function (Call::Stats call_stats_ ; int64_t cache_timestamp_us_ ; int64_t cache_lifetime_us_ ; rtc::scoped_refptr<const RTCStatsReport> cached_report_ ; struct InternalRecord {)",
    "insertText": "InternalRecord() : data_channels_opened(0), data_channels_closed(0)"
  },
  {
    "label": "CandidateTypeToRTCIceCandidateTypeForTesting()",
    "kind": "Method",
    "detail": "Function (} uint32_t data_channels_opened ; uint32_t data_channels_closed ; std::set<uintptr_t> opened_data_channels ; } ; InternalRecord internal_record_ ; } ; const char*)",
    "insertText": "CandidateTypeToRTCIceCandidateTypeForTesting(const std::string& type)"
  },
  {
    "label": "DataStateToRTCDataChannelStateForTesting()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "DataStateToRTCDataChannelStateForTesting(DataChannelInterface::DataState state)"
  }
]