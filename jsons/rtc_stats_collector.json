[
  {
    "label": "RtpSenderInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpSenderInternal"
  },
  {
    "label": "RtpReceiverInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpReceiverInternal"
  },
  {
    "label": "RTCStatsCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTCStatsCollector"
  },
  {
    "label": "CertificateStatsPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CertificateStatsPair"
  },
  {
    "label": "RequestInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RequestInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RtpTransceiverStatsInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtpTransceiverStatsInfo"
  },
  {
    "label": "InternalRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InternalRecord"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<RTCStatsCollector>)",
    "insertText": "Create(\n      PeerConnectionInternal* pc,\n      int64_t cache_lifetime_us = 50 * rtc::kNumMicrosecsPerMillisec)"
  },
  {
    "label": "GetStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReport(rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "GetStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReport(rtc::scoped_refptr<RtpSenderInternal> selector,\n                      rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "GetStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReport(rtc::scoped_refptr<RtpReceiverInternal> selector,\n                      rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "ClearCachedStatsReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedStatsReport()"
  },
  {
    "label": "WaitForPendingRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForPendingRequest()"
  },
  {
    "label": "RTCStatsCollector()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "RTCStatsCollector(PeerConnectionInternal* pc, int64_t cache_lifetime_us)"
  },
  {
    "label": "ProducePartialResultsOnSignalingThreadImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnSignalingThreadImpl(\n      int64_t timestamp_us,\n      RTCStatsReport* partial_report)"
  },
  {
    "label": "ProducePartialResultsOnNetworkThreadImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnNetworkThreadImpl(\n      int64_t timestamp_us,\n      const std::map<std::string, cricket::TransportStats>&\n          transport_stats_by_name,\n      const std::map<std::string, CertificateStatsPair>& transport_cert_stats,\n      RTCStatsReport* partial_report)"
  },
  {
    "label": "RequestInfo()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "RequestInfo(\n        rtc::scoped_refptr<RTCStatsCollectorCallback> callback)"
  },
  {
    "label": "RequestInfo()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "RequestInfo(FilterMode filter_mode,\n                rtc::scoped_refptr<RTCStatsCollectorCallback> callback,\n                rtc::scoped_refptr<RtpSenderInternal> sender_selector,\n                rtc::scoped_refptr<RtpReceiverInternal> receiver_selector)"
  },
  {
    "label": "GetStatsReportInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStatsReportInternal(RequestInfo request)"
  },
  {
    "label": "DeliverCachedReport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeliverCachedReport(\n      rtc::scoped_refptr<const RTCStatsReport> cached_report,\n      std::vector<RequestInfo> requests)"
  },
  {
    "label": "PrepareTransportCertificateStats_n()",
    "kind": "Method",
    "detail": "Function (CertificateStatsPair>)",
    "insertText": "PrepareTransportCertificateStats_n(\n      const std::map<std::string, cricket::TransportStats>&\n          transport_stats_by_name)"
  },
  {
    "label": "PrepareTransceiverStatsInfosAndCallStats_s_w_n()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareTransceiverStatsInfosAndCallStats_s_w_n()"
  },
  {
    "label": "ProducePartialResultsOnSignalingThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnSignalingThread(int64_t timestamp_us)"
  },
  {
    "label": "ProducePartialResultsOnNetworkThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProducePartialResultsOnNetworkThread(\n      int64_t timestamp_us,\n      absl::optional<std::string> sctp_transport_name)"
  },
  {
    "label": "MergeNetworkReport_s()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MergeNetworkReport_s()"
  },
  {
    "label": "OnSctpDataChannelCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSctpDataChannelCreated(SctpDataChannel* channel)"
  },
  {
    "label": "OnDataChannelOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataChannelOpened(DataChannelInterface* channel)"
  },
  {
    "label": "OnDataChannelClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDataChannelClosed(DataChannelInterface* channel)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (cached_certificates_by_transport_)",
    "insertText": "RTC_GUARDED_BY(cached_certificates_mutex_)"
  }
]