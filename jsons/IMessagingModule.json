[
  {
    "label": "IAuthorizeMessageRecipients",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAuthorizeMessageRecipients"
  },
  {
    "label": "IMessageBridge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageBridge"
  },
  {
    "label": "IMessageBus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageBus"
  },
  {
    "label": "IMessageTransport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessageTransport"
  },
  {
    "label": "FMessageAddress",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMessageAddress"
  },
  {
    "label": "IMessagingModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMessagingModule"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Templates / SharedPointer . h \" # include \" Delegates / Delegate . h \" class IAuthorizeMessageRecipients ; class IMessageBridge ; class IMessageBus ; class IMessageTransport ; struct FMessageAddress ;)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogMessaging, Log, All)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (class IMessagingModule : public IModuleInterface { using FMessageBusWeakPtr = TWeakPtr<IMessageBus,ESPMode::ThreadSafe> ; public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnMessageBusStartupOrShutdown, FMessageBusWeakPtr)"
  },
  {
    "label": "OnMessageBusStartup()",
    "kind": "Method",
    "detail": "Function (FOnMessageBusStartupOrShutdown&)",
    "insertText": "OnMessageBusStartup()"
  },
  {
    "label": "OnMessageBusShutdown()",
    "kind": "Method",
    "detail": "Function (FOnMessageBusStartupOrShutdown&)",
    "insertText": "OnMessageBusShutdown()"
  },
  {
    "label": "CreateBridge()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageBridge,ESPMode::ThreadSafe>)",
    "insertText": "CreateBridge(const FMessageAddress& Address, const TSharedRef<IMessageBus, ESPMode::ThreadSafe>& Bus, const TSharedRef<IMessageTransport, ESPMode::ThreadSafe>& Transport)"
  },
  {
    "label": "CreateBus()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageBus,ESPMode::ThreadSafe>)",
    "insertText": "CreateBus(const TSharedPtr<IAuthorizeMessageRecipients>& RecipientAuthorizer = nullptr)"
  },
  {
    "label": "CreateBus()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageBus,ESPMode::ThreadSafe>)",
    "insertText": "CreateBus(FString InName, const TSharedPtr<IAuthorizeMessageRecipients>& RecipientAuthorizer = nullptr)"
  },
  {
    "label": "GetDefaultBus()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IMessageBus,ESPMode::ThreadSafe>)",
    "insertText": "GetDefaultBus()"
  },
  {
    "label": "GetAllBuses()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<IMessageBus,ESPMode::ThreadSafe>>)",
    "insertText": "GetAllBuses()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (public : IMessagingModule&)",
    "insertText": "Get()"
  },
  {
    "label": "IMessagingModule()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_IOS IMessagingModule& MessageModule = FModuleManager::LoadModuleChecked<)",
    "insertText": "IMessagingModule(\"Messaging\")"
  },
  {
    "label": "IMessagingModule()",
    "kind": "Method",
    "detail": "Function (# endif } public : ~)",
    "insertText": "IMessagingModule()"
  }
]