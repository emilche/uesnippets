[
  {
    "label": "ANIMGRAPH_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMGRAPH_API"
  },
  {
    "label": "FBlueprintActionFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintActionFilter"
  },
  {
    "label": "GetNodeClassForAsset()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimationAsset . h \" # include \" AnimGraphNode_Base . h \" # include \" EdGraph / EdGraphNodeUtils . h \" # include \" AnimGraphNode_AssetPlayerBase . generated . h \" UClass*)",
    "insertText": "GetNodeClassForAsset(const UClass* AssetClass)"
  },
  {
    "label": "SupportNodeClassForAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportNodeClassForAsset(const UClass* AssetClass, UClass* NodeClass)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(Abstract)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PinConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinConnectionListChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "PinDefaultValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PinDefaultValueChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "IsActionFilteredOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsActionFilteredOut(class FBlueprintActionFilter const& Filter)"
  },
  {
    "label": "OnProcessDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnProcessDuringCompilation(IAnimBlueprintCompilationContext& InCompilationContext, IAnimBlueprintGeneratedClassCompiledData& OutCompiledData)"
  },
  {
    "label": "GetOutputLinkAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOutputLinkAttributes(FNodeAttributeArray& OutAttributes)"
  },
  {
    "label": "ValidateAnimNodeDuringCompilation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAnimNodeDuringCompilation(USkeleton* ForSkeleton, FCompilerResultsLog& MessageLog)"
  },
  {
    "label": "SetAnimationAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAnimationAsset(UAnimationAsset* Asset)"
  },
  {
    "label": "CopySettingsFromAnimationAsset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CopySettingsFromAnimationAsset(UAnimationAsset* Asset)"
  },
  {
    "label": "GetMenuActionsHelper()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetMenuActionsHelper(FBlueprintActionDatabaseRegistrar& InActionRegistrar, TSubclassOf<UAnimGraphNode_Base> InNodeClass, const TArray<TSubclassOf<UObject>>& InAssetTypes, const TArray<TSubclassOf<UObject>>& InExcludedAssetTypes, const TFunctionRef<FText(const FAssetData&, UClass*)>& InMenuNameFunction, const TFunctionRef<FText(const FAssetData&, UClass*)>& InMenuTooltipFunction, const TFunction<void(UEdGraphNode*, bool, const FAssetData)>& InSetupNewNodeFromAssetFunction, const TFunction<void(UEdGraphNode*, bool, TSubclassOf<UObject>)>& InSetupNewNodeFromClassFunction = nullptr, const TFunction<FText(const FAssetData&)>& InMenuCategoryFunction = nullptr)"
  },
  {
    "label": "ValidateAnimNodeDuringCompilationHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateAnimNodeDuringCompilationHelper(USkeleton* ForSkeleton, FCompilerResultsLog& MessageLog, UAnimationAsset* InAsset, TSubclassOf<UAnimationAsset> InAssetType, UEdGraphPin* InExposedPin, FName InPropertyName)"
  },
  {
    "label": "PreloadRequiredAssetsHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadRequiredAssetsHelper(UAnimationAsset* InAsset, UEdGraphPin* InExposedPin)"
  },
  {
    "label": "GetNodeTitleHelper()",
    "kind": "Method",
    "detail": "Function (protected : FText)",
    "insertText": "GetNodeTitleHelper(ENodeTitleType::Type InTitleType, UEdGraphPin* InAssetPin, const FText& InAssetDesc, const TFunction<FText(UAnimationAsset*)> InPostFixFunctionRef = nullptr)"
  },
  {
    "label": "GetNodeTitleForAsset()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitleForAsset(ENodeTitleType::Type InTitleType, UAnimationAsset* InAsset, const FText& InAssetDesc, const TFunction<FText(UAnimationAsset*)> InPostFixFunctionRef = nullptr)"
  },
  {
    "label": "AddSyncGroupToNodeTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSyncGroupToNodeTitle(ENodeTitleType::Type InTitleType, FText & InOutTitle)"
  },
  {
    "label": "SetupNewNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupNewNode(UEdGraphNode* InNewNode, bool bInIsTemplateNode, const FAssetData InAssetData)"
  }
]