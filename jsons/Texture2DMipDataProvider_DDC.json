[
  {
    "label": "FTexture2DMipDataProvider_DDC",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTexture2DMipDataProvider_DDC"
  },
  {
    "label": "FTexture2DMipDataProvider_DDC()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Memory / SharedBuffer . h \" # include \" Streaming / TextureMipDataProvider . h \" # include \" UObject / WeakObjectPtr . h \" # if WITH_EDITORONLY_DATA # include \" DerivedDataRequestOwner . h \" class FTexture2DMipDataProvider_DDC : public FTextureMipDataProvider { public :)",
    "insertText": "FTexture2DMipDataProvider_DDC(UTexture* Texture)"
  },
  {
    "label": "FTexture2DMipDataProvider_DDC()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FTexture2DMipDataProvider_DDC()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FTextureUpdateContext& Context, const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "GetMips()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMips(const FTextureUpdateContext& Context, int32 StartingMipIndex, const FTextureMipInfoArray& MipInfos, const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "PollMips()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollMips(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel(const FTextureUpdateSyncOptions& SyncOptions)"
  },
  {
    "label": "GetCancelThread()",
    "kind": "Method",
    "detail": "Function (ETickThread)",
    "insertText": "GetCancelThread()"
  },
  {
    "label": "ReleaseDDCResources()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ReleaseDDCResources()"
  },
  {
    "label": "SerializeMipInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeMipInfo(const FTextureUpdateContext& Context, FArchive& Ar, int32 MipIndex, int64 MipSize, const FTextureMipInfo& OutMipInfo)"
  }
]