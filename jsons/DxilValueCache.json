[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "DominatorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DominatorTree"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "ConstantInt",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstantInt"
  },
  {
    "label": "PHINode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PHINode"
  },
  {
    "label": "DxilValueCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilValueCache"
  },
  {
    "label": "WeakValueMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "WeakValueMap"
  },
  {
    "label": "ValueVH",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ValueVH"
  },
  {
    "label": "ValueEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ValueEntry"
  },
  {
    "label": "llvm",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "llvm"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(Value *Key, Value *V)"
  },
  {
    "label": "Seen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Seen(Value *v)"
  },
  {
    "label": "SetSentinel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSentinel(Value *V)"
  },
  {
    "label": "ResetUnknowns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetUnknowns()"
  },
  {
    "label": "ResetAll()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetAll()"
  },
  {
    "label": "MarkUnreachable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkUnreachable(BasicBlock *BB)"
  },
  {
    "label": "IsUnreachable_()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnreachable_(BasicBlock *BB)"
  },
  {
    "label": "MayBranchTo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "MayBranchTo(BasicBlock *A, BasicBlock *B)"
  },
  {
    "label": "IsUnreachable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnreachable(BasicBlock *BB, DominatorTree *DT = nullptr)"
  },
  {
    "label": "initializeDxilValueCachePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initializeDxilValueCachePass(class llvm::PassRegistry &)"
  }
]