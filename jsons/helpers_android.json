[
  {
    "label": "AttachThreadScoped",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AttachThreadScoped"
  },
  {
    "label": "CHECK_EXCEPTION()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_UTILITY_INCLUDE_HELPERS_ANDROID_H_ # define MODULES_UTILITY_INCLUDE_HELPERS_ANDROID_H_ # include<jni . h> # include<string> # include \" rtc_base / system / arch . h \" # define)",
    "insertText": "CHECK_EXCEPTION(jni) \\ RTC_CHECK(!jni->ExceptionCheck()) \\ << (jni->ExceptionDescribe(), jni->ExceptionClear(), \"\") #if defined(WEBRTC_ARCH_X86) #define JNI_FUNCTION_ALIGN __attribute__((force_align_arg_pointer))"
  },
  {
    "label": "GetEnv()",
    "kind": "Method",
    "detail": "Function (JNIEnv*)",
    "insertText": "GetEnv(JavaVM* jvm)"
  },
  {
    "label": "PointerTojlong()",
    "kind": "Method",
    "detail": "Function (jlong)",
    "insertText": "PointerTojlong(void* ptr)"
  },
  {
    "label": "GetMethodID()",
    "kind": "Method",
    "detail": "Function (jmethodID)",
    "insertText": "GetMethodID(JNIEnv* jni, jclass c, const char* name, const char* signature)"
  },
  {
    "label": "GetStaticMethodID()",
    "kind": "Method",
    "detail": "Function (jmethodID)",
    "insertText": "GetStaticMethodID(JNIEnv* jni, jclass c, const char* name, const char* signature)"
  },
  {
    "label": "FindClass()",
    "kind": "Method",
    "detail": "Function (jclass)",
    "insertText": "FindClass(JNIEnv* jni, const char* name)"
  },
  {
    "label": "NewGlobalRef()",
    "kind": "Method",
    "detail": "Function (jobject)",
    "insertText": "NewGlobalRef(JNIEnv* jni, jobject o)"
  },
  {
    "label": "DeleteGlobalRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeleteGlobalRef(JNIEnv* jni, jobject o)"
  },
  {
    "label": "AttachThreadScoped()",
    "kind": "Method",
    "detail": "Function (class AttachThreadScoped { public :)",
    "insertText": "AttachThreadScoped(JavaVM* jvm)"
  },
  {
    "label": "AttachThreadScoped()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AttachThreadScoped()"
  },
  {
    "label": "env()",
    "kind": "Method",
    "detail": "Function (JNIEnv*)",
    "insertText": "env()"
  }
]