[
  {
    "label": "FileSystemAccessManagerImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FileSystemAccessManagerImpl"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "GenerateGUID()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GenerateGUID()"
  },
  {
    "label": "IsValidGUID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidGUID(StringPiece input)"
  },
  {
    "label": "IsValidGUID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidGUID(StringPiece16 input)"
  },
  {
    "label": "IsValidGUIDOutputString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidGUIDOutputString(StringPiece input)"
  },
  {
    "label": "RandomDataToGUIDString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "RandomDataToGUIDString(const uint64_t bytes[2])"
  },
  {
    "label": "GenerateRandomV4()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "GenerateRandomV4()"
  },
  {
    "label": "FormatRandomDataAsV4()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "FormatRandomDataAsV4(\n      base::span<const uint8_t, kGuidV4InputLength> input,\n      base::PassKey<content::FileSystemAccessManagerImpl> pass_key)"
  },
  {
    "label": "FormatRandomDataAsV4ForTesting()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "FormatRandomDataAsV4ForTesting(\n      base::span<const uint8_t, kGuidV4InputLength> input)"
  },
  {
    "label": "ParseCaseInsensitive()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "ParseCaseInsensitive(StringPiece input)"
  },
  {
    "label": "ParseCaseInsensitive()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "ParseCaseInsensitive(StringPiece16 input)"
  },
  {
    "label": "ParseLowercase()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "ParseLowercase(StringPiece input)"
  },
  {
    "label": "ParseLowercase()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "ParseLowercase(StringPiece16 input)"
  },
  {
    "label": "FormatRandomDataAsV4Impl()",
    "kind": "Method",
    "detail": "Function (GUID)",
    "insertText": "FormatRandomDataAsV4Impl(\n      base::span<const uint8_t, kGuidV4InputLength> input)"
  }
]