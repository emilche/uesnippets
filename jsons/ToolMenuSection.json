[
  {
    "label": "TOOLMENUS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOOLMENUS_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UToolMenuSectionExtensions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenuSectionExtensions"
  },
  {
    "label": "UToolMenus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenus"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ToolMenuDelegates . h \" # include \" ToolMenuEntry . h \" # include \" Misc / Attribute . h \" # include \" ToolMenuSection . generated . h \")",
    "insertText": "UCLASS(Blueprintable)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintImplementableEvent, Category = \"Tool Menus\") void ConstructSections(UToolMenu* Menu, const FToolMenuContext& Context)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (Default,First,Middle,Last,} ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: FToolMenuSection()"
  },
  {
    "label": "InitSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitSection(const FName InName, const TAttribute< FText >& InLabel, const FToolMenuInsert InPosition)"
  },
  {
    "label": "AddEntryObject()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddEntryObject(UToolMenuEntryScript* InObject)"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddEntry(const FToolMenuEntry& Args)"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddMenuEntry(const FName InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const TAttribute<FSlateIcon>& InIcon, const FToolUIActionChoice& InAction, const EUserInterfaceActionType UserInterfaceActionType = EUserInterfaceActionType::Button, const FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddMenuEntry(const TSharedPtr< const FUICommandInfo >& InCommand, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), const FName InTutorialHighlightName = NAME_None, const TOptional<FName> InNameOverride = TOptional<FName>())"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddMenuEntry(const FName InNameOverride, const TSharedPtr< const FUICommandInfo >& InCommand, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), const FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "AddMenuEntryWithCommandList()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddMenuEntryWithCommandList(const TSharedPtr<const FUICommandInfo>& InCommand, const TSharedPtr<const FUICommandList>& InCommandList, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), const FName InTutorialHighlightName = NAME_None, const TOptional<FName> InNameOverride = TOptional<FName>())"
  },
  {
    "label": "AddDynamicEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddDynamicEntry(const FName InName, const FNewToolMenuSectionDelegate& InConstruct)"
  },
  {
    "label": "AddDynamicEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddDynamicEntry(const FName InName, const FNewToolMenuDelegateLegacy& InConstruct)"
  },
  {
    "label": "AddSeparator()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddSeparator(const FName InName)"
  },
  {
    "label": "AddSubMenu()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddSubMenu(const FName InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const FNewToolMenuChoice& InMakeMenu, const FToolUIActionChoice& InAction, const EUserInterfaceActionType InUserInterfaceActionType, bool bInOpenSubMenuOnClick = false, const TAttribute<FSlateIcon>& InIcon = TAttribute<FSlateIcon>(), const bool bShouldCloseWindowAfterMenuSelection = true)"
  },
  {
    "label": "AddSubMenu()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddSubMenu(const FName InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const FNewToolMenuChoice& InMakeMenu, bool bInOpenSubMenuOnClick = false, const TAttribute<FSlateIcon>& InIcon = TAttribute<FSlateIcon>(), const bool bShouldCloseWindowAfterMenuSelection = true, const FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "AddSubMenu()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "AddSubMenu(const FName InName, const FToolUIActionChoice& InAction, const TSharedRef<SWidget>& InWidget, const FNewToolMenuChoice& InMakeMenu, bool bShouldCloseWindowAfterMenuSelection = true)"
  },
  {
    "label": "FindContext()",
    "kind": "Method",
    "detail": "Function (template<TContextType> TContextType*)",
    "insertText": "FindContext()"
  },
  {
    "label": "FindEntry()",
    "kind": "Method",
    "detail": "Function (} FToolMenuEntry*)",
    "insertText": "FindEntry(const FName InName)"
  },
  {
    "label": "InitGeneratedSectionCopy()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "InitGeneratedSectionCopy(const FToolMenuSection& Source, FToolMenuContext& InContext)"
  },
  {
    "label": "RemoveEntry()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveEntry(const FName InName)"
  },
  {
    "label": "RemoveEntriesByOwner()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveEntriesByOwner(const FToolMenuOwner InOwner)"
  },
  {
    "label": "IndexOfBlock()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IndexOfBlock(const FName InName)"
  },
  {
    "label": "FindBlockInsertIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindBlockInsertIndex(const FToolMenuEntry& InBlock)"
  },
  {
    "label": "IsNonLegacyDynamic()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNonLegacyDynamic()"
  },
  {
    "label": "IsRegistering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRegistering()"
  }
]