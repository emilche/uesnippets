[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BH_DISPLAY_H_192088098 # define BH_DISPLAY_H_192088098 # if)",
    "insertText": "defined(__cplusplus)"
  },
  {
    "label": "bench_largeInput()",
    "kind": "Method",
    "detail": "Function (# endif # include \" benchfn . h \" typedef struct { const char* name ; BMK_benchFn_t hash ; } Bench_Entry ; void)",
    "insertText": "bench_largeInput(Bench_Entry const* hashDescTable, int nbHashes, int sizeLogMin, int sizeLogMax)"
  },
  {
    "label": "bench_throughput_smallInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bench_throughput_smallInputs(Bench_Entry const* hashDescTable, int nbHashes, size_t sizeMin, size_t sizeMax)"
  },
  {
    "label": "bench_throughput_randomInputLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bench_throughput_randomInputLength(Bench_Entry const* hashDescTable, int nbHashes, size_t sizeMin, size_t sizeMax)"
  },
  {
    "label": "bench_latency_smallInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bench_latency_smallInputs(Bench_Entry const* hashDescTable, int nbHashes, size_t sizeMin, size_t sizeMax)"
  },
  {
    "label": "bench_latency_randomInputLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bench_latency_randomInputLength(Bench_Entry const* hashDescTable, int nbHashes, size_t sizeMin, size_t sizeMax)"
  }
]