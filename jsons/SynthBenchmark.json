[
  {
    "label": "FGPUAdpater",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUAdpater"
  },
  {
    "label": "FSynthBenchmarkResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSynthBenchmarkResults"
  },
  {
    "label": "ISynthBenchmark",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISynthBenchmark"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" struct FGPUAdpater ; struct FSynthBenchmarkResults ; class ISynthBenchmark : public IModuleInterface { public : void)",
    "insertText": "Run(FSynthBenchmarkResults& Out, bool bGPUBenchmark = true, float WorkScale = 10.0f)"
  },
  {
    "label": "GetRHIDisplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRHIDisplay(FGPUAdpater& Out)"
  },
  {
    "label": "GetRHIInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetRHIInfo(FGPUAdpater& Out, FString& RHIName)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (ISynthBenchmark&)",
    "insertText": "Get()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  }
]