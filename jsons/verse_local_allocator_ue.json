[
  {
    "label": "pas_heap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pas_heap"
  },
  {
    "label": "PAS_FAKE_LOCAL_ALLOCATOR_SIZE()",
    "kind": "Method",
    "detail": "Function (# ifndef VERSE_LOCAL_ALLOCATOR_UE_H # define VERSE_LOCAL_ALLOCATOR_UE_H # include \" pas_local_allocator_ue . h \" # include \" verse_heap_config_ue . h \" # ifdef __cplusplus \" C \" { # endif typedef struct pas_heap pas_heap ; # define VERSE_SMALL_SEGREGATED_LOCAL_ALLOCATOR_SIZE)",
    "insertText": "PAS_FAKE_LOCAL_ALLOCATOR_SIZE(VERSE_HEAP_SMALL_SEGREGATED_PAGE_SIZE >> VERSE_HEAP_SMALL_SEGREGATED_MIN_ALIGN_SHIFT) #define VERSE_MEDIUM_SEGREGATED_LOCAL_ALLOCATOR_SIZE PAS_FAKE_LOCAL_ALLOCATOR_SIZE(VERSE_HEAP_MEDIUM_SEGREGATED_PAGE_SIZE >> VERSE_HEAP_MEDIUM_SEGREGATED_MIN_ALIGN_SHIFT) #define VERSE_MAX_SEGREGATED_LOCAL_ALLOCATOR_SIZE ( \\ VERSE_SMALL_SEGREGATED_LOCAL_ALLOCATOR_SIZE > VERSE_MEDIUM_SEGREGATED_LOCAL_ALLOCATOR_SIZE \\ ? VERSE_SMALL_SEGREGATED_LOCAL_ALLOCATOR_SIZE : VERSE_MEDIUM_SEGREGATED_LOCAL_ALLOCATOR_SIZE) PAS_API void verse_local_allocator_construct(pas_local_allocator* allocator, pas_heap* heap, size_t object_size, size_t allocator_size)"
  },
  {
    "label": "verse_local_allocator_stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_local_allocator_stop(pas_local_allocator* allocator)"
  },
  {
    "label": "verse_local_allocator_allocate()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_local_allocator_allocate(pas_local_allocator* allocator)"
  },
  {
    "label": "verse_local_allocator_try_allocate()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_local_allocator_try_allocate(pas_local_allocator* allocator)"
  }
]