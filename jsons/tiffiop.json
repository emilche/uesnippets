[
  {
    "label": "client_info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "client_info"
  },
  {
    "label": "tiff",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "tiff"
  },
  {
    "label": "_stati64",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_stati64"
  },
  {
    "label": "stat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "stat"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (# ifndef _TIFFIOP_ # define _TIFFIOP_ # include \" tif_config . h \" # ifdef HAVE_FCNTL_H # include<fcntl . h> # endif # ifdef HAVE_SYS_TYPES_H # include<sys / types . h> # endif # ifdef HAVE_STRING_H # include<string . h> # endif # ifdef HAVE_ASSERT_H # include<assert . h> # else # define)",
    "insertText": "assert(x) #endif #ifdef HAVE_SEARCH_H # include <search.h> #else extern void *lfind(const void *, const void *, size_t *, size_t, int (*)(const void *, const void *))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# endif # if !)",
    "insertText": "defined(HAVE_SNPRINTF) && !defined(HAVE__SNPRINTF) #undef snprintf #define snprintf _TIFF_snprintf_f extern int snprintf(char* str, size_t size, const char* format, ...)"
  },
  {
    "label": "streq()",
    "kind": "Method",
    "detail": "Function (# endif # include \" tiffio . h \" # include \" tif_dir . h \" # ifndef STRIP_SIZE_DEFAULT # define STRIP_SIZE_DEFAULT 8 1 9 2 # endif # define)",
    "insertText": "streq(a,b) (strcmp(a,b) == 0) #define strneq(a,b,n) (strncmp(a,b,n) == 0) #ifndef TRUE #define TRUE 1 #define FALSE 0 #endif #define TIFF_SIZE_T_MAX ((size_t) ~ ((size_t)0)) #define TIFF_TMSIZE_T_MAX (tmsize_t)(TIFF_SIZE_T_MAX >> 1) #define TIFF_UINT32_MAX 0xFFFFFFFFU #define TIFF_UINT64_MAX (((uint64)(TIFF_UINT32_MAX)) << 32 | TIFF_UINT32_MAX)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (struct client_info* next ; void* data ; char* name ; } TIFFClientInfoLink ; typedef unsigned char tidataval_t ; typedef tidataval_t* tidata_t ; typedef)",
    "insertText": "void(*TIFFVoidMethod)(TIFF*)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*TIFFBoolMethod)(TIFF*)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*TIFFPreMethod)(TIFF*, uint16)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*TIFFCodeMethod)(TIFF* tif, uint8* buf, tmsize_t size, uint16 sample)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "int(*TIFFSeekMethod)(TIFF*, uint32)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*TIFFPostMethod)(TIFF* tif, uint8* buf, tmsize_t size)"
  },
  {
    "label": "uint32()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "uint32(*TIFFStripMethod)(TIFF*, uint32)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*TIFFTileMethod)(TIFF*, uint32*, uint32*)"
  },
  {
    "label": "isPseudoTag()",
    "kind": "Method",
    "detail": "Function (struct tiff { char* tif_name ; int tif_fd ; int tif_mode ; uint32 tif_flags ; # define TIFF_FILLORDER 0 x00003U # define TIFF_DIRTYHEADER 0 x00004U # define TIFF_DIRTYDIRECT 0 x00008U # define TIFF_BUFFERSETUP 0 x00010U # define TIFF_CODERSETUP 0 x00020U # define TIFF_BEENWRITING 0 x00040U # define TIFF_SWAB 0 x00080U # define TIFF_NOBITREV 0 x00100U # define TIFF_MYBUFFER 0 x00200U # define TIFF_ISTILED 0 x00400U # define TIFF_MAPPED 0 x00800U # define TIFF_POSTENCODE 0 x01000U # define TIFF_INSUBIFD 0 x02000U # define TIFF_UPSAMPLED 0 x04000U # define TIFF_STRIPCHOP 0 x08000U # define TIFF_HEADERONLY 0 x10000U # define TIFF_NOREADRAW 0 x20000U # define TIFF_INCUSTOMIFD 0 x40000U # define TIFF_BIGTIFF 0 x80000U # define TIFF_BUF4WRITE 0 x100000U # define TIFF_DIRTYSTRIP 0 x200000U # define TIFF_PERSAMPLE 0 x400000U # define TIFF_BUFFERMMAP 0 x800000U # define TIFF_DEFERSTRILELOAD 0 x1000000U # define TIFF_LAZYSTRILELOAD 0 x2000000U # define TIFF_CHOPPEDUPARRAYS 0 x4000000U uint64 tif_diroff ; uint64 tif_nextdiroff ; uint64* tif_dirlist ; uint16 tif_dirlistsize ; uint16 tif_dirnumber ; TIFFDirectory tif_dir ; TIFFDirectory tif_customdir ; union { TIFFHeaderCommon common ; TIFFHeaderClassic classic ; TIFFHeaderBig big ; } tif_header ; uint16 tif_header_size ; uint32 tif_row ; uint16 tif_curdir ; uint32 tif_curstrip ; uint64 tif_curoff ; uint64 tif_dataoff ; uint16 tif_nsubifd ; uint64 tif_subifdoff ; uint32 tif_col ; uint32 tif_curtile ; tmsize_t tif_tilesize ; int tif_decodestatus ; TIFFBoolMethod tif_fixuptags ; TIFFBoolMethod tif_setupdecode ; TIFFPreMethod tif_predecode ; TIFFBoolMethod tif_setupencode ; int tif_encodestatus ; TIFFPreMethod tif_preencode ; TIFFBoolMethod tif_postencode ; TIFFCodeMethod tif_decoderow ; TIFFCodeMethod tif_encoderow ; TIFFCodeMethod tif_decodestrip ; TIFFCodeMethod tif_encodestrip ; TIFFCodeMethod tif_decodetile ; TIFFCodeMethod tif_encodetile ; TIFFVoidMethod tif_close ; TIFFSeekMethod tif_seek ; TIFFVoidMethod tif_cleanup ; TIFFStripMethod tif_defstripsize ; TIFFTileMethod tif_deftilesize ; uint8* tif_data ; tmsize_t tif_scanlinesize ; tmsize_t tif_scanlineskew ; uint8* tif_rawdata ; tmsize_t tif_rawdatasize ; tmsize_t tif_rawdataoff ; tmsize_t tif_rawdataloaded ; uint8* tif_rawcp ; tmsize_t tif_rawcc ; uint8* tif_base ; tmsize_t tif_size ; TIFFMapFileProc tif_mapproc ; TIFFUnmapFileProc tif_unmapproc ; thandle_t tif_clientdata ; TIFFReadWriteProc tif_readproc ; TIFFReadWriteProc tif_writeproc ; TIFFSeekProc tif_seekproc ; TIFFCloseProc tif_closeproc ; TIFFSizeProc tif_sizeproc ; TIFFPostMethod tif_postdecode ; TIFFField** tif_fields ; size_t tif_nfields ; const TIFFField* tif_foundfield ; TIFFTagMethods tif_tagmethods ; TIFFClientInfoLink* tif_clientinfo ; TIFFFieldArray* tif_fieldscompat ; size_t tif_nfieldscompat ; } ; # define)",
    "insertText": "isPseudoTag(t) (t > 0xffff) #define isTiled(tif) (((tif)->tif_flags & TIFF_ISTILED) != 0) #define isMapped(tif) (((tif)->tif_flags & TIFF_MAPPED) != 0) #define isFillOrder(tif, o) (((tif)->tif_flags & (o)) != 0) #define isUpSampled(tif) (((tif)->tif_flags & TIFF_UPSAMPLED) != 0) #define TIFFReadFile(tif, buf, size) \\ ((*(tif)->tif_readproc)((tif)->tif_clientdata,(buf),(size))) #define TIFFWriteFile(tif, buf, size) \\ ((*(tif)->tif_writeproc)((tif)->tif_clientdata,(buf),(size))) #define TIFFSeekFile(tif, off, whence) \\ ((*(tif)->tif_seekproc)((tif)->tif_clientdata,(off),(whence))) #define TIFFCloseFile(tif) \\ ((*(tif)->tif_closeproc)((tif)->tif_clientdata)) #define TIFFGetFileSize(tif) \\ ((*(tif)->tif_sizeproc)((tif)->tif_clientdata)) #define TIFFMapFileContents(tif, paddr, psize) \\ ((*(tif)->tif_mapproc)((tif)->tif_clientdata,(paddr),(psize))) #define TIFFUnmapFileContents(tif, addr, size) \\ ((*(tif)->tif_unmapproc)((tif)->tif_clientdata,(addr),(size))) #ifndef ReadOK #define ReadOK(tif, buf, size) \\ (TIFFReadFile((tif),(buf),(size))==(size)) #endif #ifndef SeekOK #define SeekOK(tif, off) _TIFFSeekOK(tif, off) #endif #ifndef WriteOK #define WriteOK(tif, buf, size) \\ (TIFFWriteFile((tif),(buf),(size))==(size)) #endif #define TIFFhowmany_32(x, y) (((uint32)x < (0xffffffff - (uint32)(y-1))) ? \\ ((((uint32)(x))+(((uint32)(y))-1))/((uint32)(y))) : \\ 0U) #define TIFFhowmany_32_maxuint_compat(x, y) \\ (((uint32)(x) / (uint32)(y)) + ((((uint32)(x) % (uint32)(y)) != 0) ? 1 : 0)) #define TIFFhowmany8_32(x) (((x)&0x07)?((uint32)(x)>>3)+1:(uint32)(x)>>3) #define TIFFroundup_32(x, y) (TIFFhowmany_32(x,y)*(y)) #define TIFFhowmany_64(x, y) ((((uint64)(x))+(((uint64)(y))-1))/((uint64)(y))) #define TIFFhowmany8_64(x) (((x)&0x07)?((uint64)(x)>>3)+1:(uint64)(x)>>3) #define TIFFroundup_64(x, y) (TIFFhowmany_64(x,y)*(y)) #define TIFFSafeMultiply(t,v,m) ((((t)(m) != (t)0) && (((t)(((v)*(m))/(m))) == (t)(v))) ? (t)((v)*(m)) : (t)0) #define TIFFmax(A,B) ((A)>(B)?(A):(B)) #define TIFFmin(A,B) ((A)<(B)?(A):(B)) #define TIFFArrayCount(a) (sizeof (a) / sizeof ((a)[0])) #if defined(HAVE_FSEEKO) #if defined(HAVE_FSEEKO) # define fseek(stream,offset,whence) fseeko(stream,offset,whence) # define ftell(stream,offset,whence) ftello(stream,offset,whence) #endif #endif #if defined(__WIN32__) && \\ !(defined(_MSC_VER) && _MSC_VER < 1400) && \\ !(defined(__MSVCRT_VERSION__) && __MSVCRT_VERSION__ < 0x800)"
  },
  {
    "label": "_TIFF_lseek_f()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "_TIFF_lseek_f(fildes,offset,whence) _lseeki64(fildes, offset,whence) #define _TIFF_fseek_f(stream,offset,whence) _fseeki64(stream, offset,whence) #define _TIFF_fstat_f(fildes,stat_buff) _fstati64(fildes, stat_buff)"
  },
  {
    "label": "_TIFF_lseek_f()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "_TIFF_lseek_f(fildes,offset,whence) lseek(fildes,offset,whence) #define _TIFF_fseek_f(stream,offset,whence) fseek(stream,offset,whence) #define _TIFF_fstat_f(fildes,stat_buff) fstat(fildes,stat_buff) #define _TIFF_stat_s struct stat #define _TIFF_off_t off_t #endif #if defined(__has_attribute) && defined(__clang__) #if __has_attribute(no_sanitize) #define TIFF_NOSANITIZE_UNSIGNED_INT_OVERFLOW __attribute__((no_sanitize(\"unsigned-integer-overflow\"))) #else #define TIFF_NOSANITIZE_UNSIGNED_INT_OVERFLOW #endif #else #define TIFF_NOSANITIZE_UNSIGNED_INT_OVERFLOW #endif #if defined(__cplusplus)"
  },
  {
    "label": "_TIFFgetMode()",
    "kind": "Method",
    "detail": "Function (# endif int)",
    "insertText": "_TIFFgetMode(const char* mode, const char* module)"
  },
  {
    "label": "_TIFFNoRowEncode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoRowEncode(TIFF* tif, uint8* pp, tmsize_t cc, uint16 s)"
  },
  {
    "label": "_TIFFNoStripEncode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoStripEncode(TIFF* tif, uint8* pp, tmsize_t cc, uint16 s)"
  },
  {
    "label": "_TIFFNoTileEncode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoTileEncode(TIFF*, uint8* pp, tmsize_t cc, uint16 s)"
  },
  {
    "label": "_TIFFNoRowDecode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoRowDecode(TIFF* tif, uint8* pp, tmsize_t cc, uint16 s)"
  },
  {
    "label": "_TIFFNoStripDecode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoStripDecode(TIFF* tif, uint8* pp, tmsize_t cc, uint16 s)"
  },
  {
    "label": "_TIFFNoTileDecode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoTileDecode(TIFF*, uint8* pp, tmsize_t cc, uint16 s)"
  },
  {
    "label": "_TIFFNoPostDecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFNoPostDecode(TIFF* tif, uint8* buf, tmsize_t cc)"
  },
  {
    "label": "_TIFFNoPreCode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoPreCode(TIFF* tif, uint16 s)"
  },
  {
    "label": "_TIFFNoSeek()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFNoSeek(TIFF* tif, uint32 off)"
  },
  {
    "label": "_TIFFSwab16BitData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFSwab16BitData(TIFF* tif, uint8* buf, tmsize_t cc)"
  },
  {
    "label": "_TIFFSwab24BitData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFSwab24BitData(TIFF* tif, uint8* buf, tmsize_t cc)"
  },
  {
    "label": "_TIFFSwab32BitData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFSwab32BitData(TIFF* tif, uint8* buf, tmsize_t cc)"
  },
  {
    "label": "_TIFFSwab64BitData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFSwab64BitData(TIFF* tif, uint8* buf, tmsize_t cc)"
  },
  {
    "label": "TIFFFlushData1()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFFlushData1(TIFF* tif)"
  },
  {
    "label": "TIFFDefaultDirectory()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFDefaultDirectory(TIFF* tif)"
  },
  {
    "label": "_TIFFSetDefaultCompressionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFSetDefaultCompressionState(TIFF* tif)"
  },
  {
    "label": "_TIFFRewriteField()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFRewriteField(TIFF *, uint16, TIFFDataType, tmsize_t, void *)"
  },
  {
    "label": "TIFFSetCompressionScheme()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFSetCompressionScheme(TIFF* tif, int scheme)"
  },
  {
    "label": "TIFFSetDefaultCompressionState()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFSetDefaultCompressionState(TIFF* tif)"
  },
  {
    "label": "_TIFFDefaultStripSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "_TIFFDefaultStripSize(TIFF* tif, uint32 s)"
  },
  {
    "label": "_TIFFDefaultTileSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFDefaultTileSize(TIFF* tif, uint32* tw, uint32* th)"
  },
  {
    "label": "_TIFFDataSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFDataSize(TIFFDataType type)"
  },
  {
    "label": "_TIFFSetGetFieldSize()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFSetGetFieldSize(TIFFSetGetFieldType setgettype)"
  },
  {
    "label": "_TIFFsetByteArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFsetByteArray(void**, void*, uint32)"
  },
  {
    "label": "_TIFFsetString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFsetString(char**, char*)"
  },
  {
    "label": "_TIFFsetShortArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFsetShortArray(uint16**, uint16*, uint32)"
  },
  {
    "label": "_TIFFsetLongArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFsetLongArray(uint32**, uint32*, uint32)"
  },
  {
    "label": "_TIFFsetFloatArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFsetFloatArray(float**, float*, uint32)"
  },
  {
    "label": "_TIFFsetDoubleArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFsetDoubleArray(double**, double*, uint32)"
  },
  {
    "label": "_TIFFprintAscii()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFprintAscii(FILE*, const char*)"
  },
  {
    "label": "_TIFFprintAsciiTag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_TIFFprintAsciiTag(FILE*, const char*, const char*)"
  },
  {
    "label": "_TIFFMultiply32()",
    "kind": "Method",
    "detail": "Function (TIFFErrorHandler _TIFFwarningHandler ; TIFFErrorHandler _TIFFerrorHandler ; TIFFErrorHandlerExt _TIFFwarningHandlerExt ; TIFFErrorHandlerExt _TIFFerrorHandlerExt ; uint32)",
    "insertText": "_TIFFMultiply32(TIFF*, uint32, uint32, const char*)"
  },
  {
    "label": "_TIFFMultiply64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "_TIFFMultiply64(TIFF*, uint64, uint64, const char*)"
  },
  {
    "label": "_TIFFMultiplySSize()",
    "kind": "Method",
    "detail": "Function (tmsize_t)",
    "insertText": "_TIFFMultiplySSize(TIFF*, tmsize_t, tmsize_t, const char*)"
  },
  {
    "label": "_TIFFCastUInt64ToSSize()",
    "kind": "Method",
    "detail": "Function (tmsize_t)",
    "insertText": "_TIFFCastUInt64ToSSize(TIFF*, uint64, const char*)"
  },
  {
    "label": "_TIFFCheckMalloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "_TIFFCheckMalloc(TIFF*, tmsize_t, tmsize_t, const char*)"
  },
  {
    "label": "_TIFFCheckRealloc()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "_TIFFCheckRealloc(TIFF*, void*, tmsize_t, tmsize_t, const char*)"
  },
  {
    "label": "_TIFFUInt64ToDouble()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "_TIFFUInt64ToDouble(uint64)"
  },
  {
    "label": "_TIFFUInt64ToFloat()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "_TIFFUInt64ToFloat(uint64)"
  },
  {
    "label": "_TIFFClampDoubleToFloat()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "_TIFFClampDoubleToFloat(double)"
  },
  {
    "label": "_TIFFReadEncodedStripAndAllocBuffer()",
    "kind": "Method",
    "detail": "Function (tmsize_t)",
    "insertText": "_TIFFReadEncodedStripAndAllocBuffer(TIFF* tif, uint32 strip, void **buf, tmsize_t bufsizetoalloc, tmsize_t size_to_read)"
  },
  {
    "label": "_TIFFReadEncodedTileAndAllocBuffer()",
    "kind": "Method",
    "detail": "Function (tmsize_t)",
    "insertText": "_TIFFReadEncodedTileAndAllocBuffer(TIFF* tif, uint32 tile, void **buf, tmsize_t bufsizetoalloc, tmsize_t size_to_read)"
  },
  {
    "label": "_TIFFReadTileAndAllocBuffer()",
    "kind": "Method",
    "detail": "Function (tmsize_t)",
    "insertText": "_TIFFReadTileAndAllocBuffer(TIFF* tif, void **buf, tmsize_t bufsizetoalloc, uint32 x, uint32 y, uint32 z, uint16 s)"
  },
  {
    "label": "_TIFFSeekOK()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "_TIFFSeekOK(TIFF* tif, toff_t off)"
  },
  {
    "label": "TIFFInitDumpMode()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFInitDumpMode(TIFF*, int)"
  },
  {
    "label": "TIFFInitPackBits()",
    "kind": "Method",
    "detail": "Function (# ifdef PACKBITS_SUPPORT int)",
    "insertText": "TIFFInitPackBits(TIFF*, int)"
  },
  {
    "label": "TIFFInitCCITTRLE()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef CCITT_SUPPORT int)",
    "insertText": "TIFFInitCCITTRLE(TIFF*, int), TIFFInitCCITTRLEW(TIFF*, int)"
  },
  {
    "label": "TIFFInitCCITTFax3()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFInitCCITTFax3(TIFF*, int), TIFFInitCCITTFax4(TIFF*, int)"
  },
  {
    "label": "TIFFInitThunderScan()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef THUNDER_SUPPORT int)",
    "insertText": "TIFFInitThunderScan(TIFF*, int)"
  },
  {
    "label": "TIFFInitNeXT()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef NEXT_SUPPORT int)",
    "insertText": "TIFFInitNeXT(TIFF*, int)"
  },
  {
    "label": "TIFFInitLZW()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef LZW_SUPPORT int)",
    "insertText": "TIFFInitLZW(TIFF*, int)"
  },
  {
    "label": "TIFFInitOJPEG()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef OJPEG_SUPPORT int)",
    "insertText": "TIFFInitOJPEG(TIFF*, int)"
  },
  {
    "label": "TIFFInitJPEG()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef JPEG_SUPPORT int)",
    "insertText": "TIFFInitJPEG(TIFF*, int)"
  },
  {
    "label": "TIFFJPEGIsFullStripRequired()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "TIFFJPEGIsFullStripRequired(TIFF*)"
  },
  {
    "label": "TIFFInitJBIG()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef JBIG_SUPPORT int)",
    "insertText": "TIFFInitJBIG(TIFF*, int)"
  },
  {
    "label": "TIFFInitZIP()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef ZIP_SUPPORT int)",
    "insertText": "TIFFInitZIP(TIFF*, int)"
  },
  {
    "label": "TIFFInitPixarLog()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef PIXARLOG_SUPPORT int)",
    "insertText": "TIFFInitPixarLog(TIFF*, int)"
  },
  {
    "label": "TIFFInitSGILog()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef LOGLUV_SUPPORT int)",
    "insertText": "TIFFInitSGILog(TIFF*, int)"
  },
  {
    "label": "TIFFInitLZMA()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef LZMA_SUPPORT int)",
    "insertText": "TIFFInitLZMA(TIFF*, int)"
  },
  {
    "label": "TIFFInitZSTD()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef ZSTD_SUPPORT int)",
    "insertText": "TIFFInitZSTD(TIFF*, int)"
  },
  {
    "label": "TIFFInitWebP()",
    "kind": "Method",
    "detail": "Function (# endif # ifdef WEBP_SUPPORT int)",
    "insertText": "TIFFInitWebP(TIFF*, int)"
  }
]