[
  {
    "label": "FRigidClustering",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRigidClustering"
  },
  {
    "label": "FPBDRigidsEvolutionGBF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionGBF"
  },
  {
    "label": "FClusterCreationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterCreationParameters"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FClusterUnionCreationParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionCreationParameters"
  },
  {
    "label": "FClusterUnionParticleProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionParticleProperties"
  },
  {
    "label": "FClusterUnion",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnion"
  },
  {
    "label": "FClusterUnionChildToParentUpdate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClusterUnionChildToParentUpdate"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "FClusterUnionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClusterUnionManager"
  },
  {
    "label": "AddPendingGeometryOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingGeometryOperation(EClusterUnionGeometryOperation Op, FPBDRigidParticleHandle* Particle)"
  },
  {
    "label": "ClearAllPendingGeometryOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllPendingGeometryOperations()"
  },
  {
    "label": "ClearPendingGeometryOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPendingGeometryOperations(EClusterUnionGeometryOperation Op)"
  },
  {
    "label": "FClusterUnionManager()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FClusterUnionManager(FRigidClustering& InClustering, FPBDRigidsEvolutionGBF& InEvolution)"
  },
  {
    "label": "CreateNewClusterUnion()",
    "kind": "Method",
    "detail": "Function (FClusterUnionIndex)",
    "insertText": "CreateNewClusterUnion(const FClusterCreationParameters& Parameters, const FClusterUnionCreationParameters& ClusterUnionParameters = FClusterUnionCreationParameters{})"
  },
  {
    "label": "DestroyClusterUnion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyClusterUnion(FClusterUnionIndex Index)"
  },
  {
    "label": "AddPendingExplicitIndexOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingExplicitIndexOperation(FClusterUnionExplicitIndex Index, EClusterUnionOperation Op, const TArray<FPBDRigidParticleHandle*>& Particles)"
  },
  {
    "label": "AddPendingClusterIndexOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingClusterIndexOperation(FClusterUnionIndex Index, EClusterUnionOperation Op, const TArray<FPBDRigidParticleHandle*>& Particles)"
  },
  {
    "label": "HandleAddOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddOperation(FClusterUnionIndex ClusterIndex, const TArray<FPBDRigidParticleHandle*>& InParticles, bool bReleaseClustersFirst)"
  },
  {
    "label": "HandleRemoveOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemoveOperation(FClusterUnionIndex ClusterIndex, const TArray<FPBDRigidParticleHandle*>& Particles, EClusterUnionOperationTiming UpdateClusterPropertiesTiming)"
  },
  {
    "label": "HandleRemoveOperationWithClusterLookup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemoveOperationWithClusterLookup(const TArray<FPBDRigidParticleHandle*>& InParticles, EClusterUnionOperationTiming UpdateClusterPropertiesTiming)"
  },
  {
    "label": "HandleUpdateChildToParentOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleUpdateChildToParentOperation(FClusterUnionIndex ClusterIndex, const TArray<FPBDRigidParticleHandle*>& Particles)"
  },
  {
    "label": "FlushPendingOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushPendingOperations()"
  },
  {
    "label": "HandleDeferredClusterUnionUpdateProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDeferredClusterUnionUpdateProperties()"
  },
  {
    "label": "IsClusterUnionParticle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClusterUnionParticle(FPBDRigidClusteredParticleHandle* Particle)"
  },
  {
    "label": "UpdateClusterUnionParticlesChildToParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateClusterUnionParticlesChildToParent(FClusterUnionIndex Index, const TArray<FPBDRigidParticleHandle*>& Particles, const TArray<FTransform>& ChildToParent, bool bLock)"
  },
  {
    "label": "UpdateAllClusterUnionProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllClusterUnionProperties(FClusterUnion& ClusterUnion, EUpdateClusterUnionPropertiesFlags Flags = EUpdateClusterUnionPropertiesFlags::All)"
  },
  {
    "label": "AddParticleToConnectionGraphInCluster()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParticleToConnectionGraphInCluster(FClusterUnion& ClusterUnion, FPBDRigidParticleHandle* Particle)"
  },
  {
    "label": "GenerateInterclusterEdgesForParticle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateInterclusterEdgesForParticle(FClusterUnion& ClusterUnion, FPBDRigidParticleHandle* Particle)"
  },
  {
    "label": "GenerateInterclusterEdgesBetweenParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateInterclusterEdgesBetweenParticles(FClusterUnion& ClusterUnion, FPBDRigidParticleHandle* Particle, FPBDRigidParticleHandle* OtherParticle)"
  },
  {
    "label": "RequestDeferredClusterPropertiesUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestDeferredClusterPropertiesUpdate(FClusterUnionIndex ClusterIndex, EUpdateClusterUnionPropertiesFlags Flags)"
  },
  {
    "label": "ClaimNextUnionIndex()",
    "kind": "Method",
    "detail": "Function (FClusterUnionIndex)",
    "insertText": "ClaimNextUnionIndex()"
  },
  {
    "label": "GetOrCreateClusterUnionIndexFromExplicitIndex()",
    "kind": "Method",
    "detail": "Function (FClusterUnionIndex)",
    "insertText": "GetOrCreateClusterUnionIndexFromExplicitIndex(FClusterUnionExplicitIndex InIndex)"
  },
  {
    "label": "ForceRecreateClusterUnionGeometry()",
    "kind": "Method",
    "detail": "Function (FImplicitObjectPtr)",
    "insertText": "ForceRecreateClusterUnionGeometry(const FClusterUnion& Union)"
  },
  {
    "label": "DeferredClusterUnionUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferredClusterUnionUpdate(FClusterUnion& Union, EUpdateClusterUnionPropertiesFlags Flags)"
  },
  {
    "label": "FlushIncrementalConnectivityGraphOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushIncrementalConnectivityGraphOperations(FClusterUnion& ClusterUnion)"
  },
  {
    "label": "ForceRegenerateGeometry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRegenerateGeometry(FClusterUnion& ClusterUnion, const TSet<FPBDRigidParticleHandle*>& FullChildrenSet)"
  },
  {
    "label": "FlushIncrementalGeometryOperations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushIncrementalGeometryOperations(FClusterUnion& ClusterUnion)"
  }
]