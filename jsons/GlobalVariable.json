[
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "SymbolTableListTraits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SymbolTableListTraits"
  },
  {
    "label": "GlobalVariable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalVariable"
  },
  {
    "label": "OperandTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "OperandTraits"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_GLOBALVARIABLE_H # define LLVM_IR_GLOBALVARIABLE_H # include \" llvm / ADT / Twine . h \" # include \" llvm / ADT / ilist_node . h \" # include \" llvm / IR / GlobalObject . h \" # include \" llvm / IR / OperandTraits . h \" namespace llvm { class Module ; class Constant ; template<ValueSubClass,ItemParentClass> class SymbolTableListTraits ; class GlobalVariable : public GlobalObject,public ilist_node<GlobalVariable> { class SymbolTableListTraits<GlobalVariable,Module> ; void* operator)",
    "insertText": "new(size_t, unsigned)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const GlobalVariable &)"
  },
  {
    "label": "GlobalVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GlobalVariable(const GlobalVariable &)"
  },
  {
    "label": "setParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setParent(Module *parent)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (bool isConstantGlobal : 1 ; bool isExternallyInitializedConstant : 1 ; public : void* operator)",
    "insertText": "new(size_t s)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (} void operator)",
    "insertText": "delete(void* Ptr)"
  },
  {
    "label": "delete()",
    "kind": "Method",
    "detail": "Function (User::operator)",
    "insertText": "delete(Ptr, 1)"
  },
  {
    "label": "GlobalVariable()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "GlobalVariable(Type *Ty, bool isConstant, LinkageTypes Linkage, Constant *Initializer = nullptr, const Twine &Name = \"\", ThreadLocalMode = NotThreadLocal, unsigned AddressSpace = 0, bool isExternallyInitialized = false)"
  },
  {
    "label": "GlobalVariable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GlobalVariable(Module &M, Type *Ty, bool isConstant, LinkageTypes Linkage, Constant *Initializer, const Twine &Name = \"\", GlobalVariable *InsertBefore = nullptr, ThreadLocalMode = NotThreadLocal, unsigned AddressSpace = 0, bool isExternallyInitialized = false)"
  },
  {
    "label": "GlobalVariable()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GlobalVariable()"
  },
  {
    "label": "setGlobalVariableNumOperands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setGlobalVariableNumOperands(1)"
  },
  {
    "label": "DECLARE_TRANSPARENT_OPERAND_ACCESSORS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DECLARE_TRANSPARENT_OPERAND_ACCESSORS(Value)"
  },
  {
    "label": "hasInitializer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasInitializer()"
  },
  {
    "label": "hasDefinitiveInitializer()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "hasDefinitiveInitializer()"
  },
  {
    "label": "hasUniqueInitializer()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "hasUniqueInitializer()"
  },
  {
    "label": "getInitializer()",
    "kind": "Method",
    "detail": "Function (} const Constant*)",
    "insertText": "getInitializer()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(hasInitializer() && \"GV doesn't have initializer!\")"
  },
  {
    "label": "setInitializer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setInitializer(Constant *InitVal)"
  },
  {
    "label": "isConstant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isConstant()"
  },
  {
    "label": "isExternallyInitialized()",
    "kind": "Method",
    "detail": "Function (isConstantGlobal = Val ; } bool)",
    "insertText": "isExternallyInitialized()"
  },
  {
    "label": "copyAttributesFrom()",
    "kind": "Method",
    "detail": "Function (isExternallyInitializedConstant = Val ; } void)",
    "insertText": "copyAttributesFrom(const GlobalValue *Src)"
  },
  {
    "label": "removeFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeFromParent()"
  },
  {
    "label": "eraseFromParent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eraseFromParent()"
  },
  {
    "label": "classof()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "classof(const Value *V)"
  }
]