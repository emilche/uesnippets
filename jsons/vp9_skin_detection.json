[
  {
    "label": "VP9_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP9_COMP"
  },
  {
    "label": "vp9_compute_skin_block()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_ENCODER_VP9_SKIN_DETECTION_H_ # define VPX_VP9_ENCODER_VP9_SKIN_DETECTION_H_ # include \" vp9 / common / vp9_blockd . h \" # include \" vpx_dsp / skin_detection . h \" # include \" vpx_util / vpx_write_yuv_frame . h \" # ifdef __cplusplus \" C \" { # endif struct VP9_COMP ; int)",
    "insertText": "vp9_compute_skin_block(const uint8_t *y, const uint8_t *u, const uint8_t *v, int stride, int strideuv, int bsize, int consec_zeromv, int curr_motion_magn)"
  },
  {
    "label": "vp9_compute_skin_sb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_compute_skin_sb(struct VP9_COMP *const cpi, BLOCK_SIZE bsize, int mi_row, int mi_col)"
  },
  {
    "label": "vp9_output_skin_map()",
    "kind": "Method",
    "detail": "Function (# ifdef OUTPUT_YUV_SKINMAP void)",
    "insertText": "vp9_output_skin_map(struct VP9_COMP *const cpi, FILE *yuv_skinmap_file)"
  }
]