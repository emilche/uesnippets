[
  {
    "label": "MessagePump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MessagePump"
  },
  {
    "label": "SequenceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SequenceManager"
  },
  {
    "label": "TaskQueue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskQueue"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "SingleThreadTaskExecutor()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TASK_SINGLE_THREAD_TASK_EXECUTOR_H_ # define BASE_TASK_SINGLE_THREAD_TASK_EXECUTOR_H_ # include<memory> # include \" base / base_export . h \" # include \" base / memory / scoped_refptr . h \" # include \" base / message_loop / message_pump_type . h \" # include \" base / task / simple_task_executor . h \" # include \" base / task / single_thread_task_runner . h \" namespace base { class MessagePump ; namespace sequence_manager { class SequenceManager ; class TaskQueue ; } class BASE_EXPORT SingleThreadTaskExecutor { public :)",
    "insertText": "SingleThreadTaskExecutor(MessagePumpType type = MessagePumpType::DEFAULT)"
  },
  {
    "label": "SingleThreadTaskExecutor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SingleThreadTaskExecutor(std::unique_ptr<MessagePump> pump)"
  },
  {
    "label": "SingleThreadTaskExecutor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SingleThreadTaskExecutor(const SingleThreadTaskExecutor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (SingleThreadTaskExecutor&)",
    "insertText": "operator(const SingleThreadTaskExecutor&)"
  },
  {
    "label": "SingleThreadTaskExecutor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SingleThreadTaskExecutor()"
  },
  {
    "label": "task_runner()",
    "kind": "Method",
    "detail": "Function (const scoped_refptr<SingleThreadTaskRunner>&)",
    "insertText": "task_runner()"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (MessagePumpType)",
    "insertText": "type()"
  },
  {
    "label": "SingleThreadTaskExecutor()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "SingleThreadTaskExecutor(MessagePumpType type, std::unique_ptr<MessagePump> pump)"
  }
]