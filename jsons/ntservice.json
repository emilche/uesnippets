[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "NtService",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NtService"
  },
  {
    "label": "states",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "states"
  },
  {
    "label": "NtService()",
    "kind": "Method",
    "detail": "Function (# ifndef NTSERVICE_H__ # define NTSERVICE_H__ class Error ; class NtService { public : enum states { stopped,running,start_pending,stop_pending,paused,pause_pending,continue_pending,no_change } ;)",
    "insertText": "NtService()"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start(int (*entryPt)( DWORD, char ** ), char *svc, Error *e)"
  },
  {
    "label": "SetStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStatus(states state = no_change, DWORD win32_exitcode = 0, DWORD specific_code = 0, DWORD wait_hint = 0)"
  },
  {
    "label": "ControlHandler()",
    "kind": "Method",
    "detail": "Function (private : NtService* global_this ; void WINAPI)",
    "insertText": "ControlHandler(DWORD opcode)"
  },
  {
    "label": "StaticRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StaticRun(DWORD argc, char **argv)"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Run(DWORD argc, char **argv)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (SERVICE_STATUS status ; SERVICE_STATUS_HANDLE statusHandle ;)",
    "insertText": "int(*entry_point )( DWORD, char **)"
  }
]