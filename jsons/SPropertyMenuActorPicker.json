[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "SPropertyMenuActorPicker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyMenuActorPicker"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" ActorPickerMode . h \" class AActor ; class SPropertyMenuActorPicker : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyMenuActorPicker ) : _InitialActor(NULL) , _AllowClear(true) , _AllowPickingLevelInstanceContent(false) , _ActorFilter() , _DisplayUseSelected(true)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(AActor*, InitialActor ) SLATE_ARGUMENT( bool, AllowClear ) SLATE_ARGUMENT( bool, AllowPickingLevelInstanceContent ) SLATE_ARGUMENT( FOnShouldFilterActor, ActorFilter ) SLATE_ARGUMENT(bool, DisplayUseSelected) SLATE_EVENT( FOnActorSelected, OnSet ) SLATE_EVENT( FSimpleDelegate, OnClose ) SLATE_EVENT( FSimpleDelegate, OnUseSelected ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "HandleUseSelected()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleUseSelected()"
  },
  {
    "label": "OnEdit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEdit()"
  },
  {
    "label": "OnCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopy()"
  },
  {
    "label": "OnPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaste()"
  },
  {
    "label": "CanPaste()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPaste()"
  },
  {
    "label": "OnClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClear()"
  },
  {
    "label": "OnActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelected(AActor* InActor)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(AActor* InActor)"
  }
]