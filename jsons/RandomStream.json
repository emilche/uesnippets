[
  {
    "label": "CRandomStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CRandomStream"
  },
  {
    "label": "CRandomStream()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" uLang / Common / Common . h \" # include<cstring> namespace uLang { class CRandomStream { public :)",
    "insertText": "CRandomStream(int32_t Seed = 0) : _Seed(Seed)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Initialize(int32_t Seed)"
  },
  {
    "label": "uint32_t()",
    "kind": "Method",
    "detail": "Function (_Seed =)",
    "insertText": "uint32_t(Seed)"
  },
  {
    "label": "RandRange()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "RandRange(int32_t Min, int32_t Max)"
  },
  {
    "label": "MutateSeed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MutateSeed()"
  },
  {
    "label": "int64_t()",
    "kind": "Method",
    "detail": "Function (const int64_t Range =)",
    "insertText": "int64_t(Max) - int64_t(Min)"
  },
  {
    "label": "FRandRange()",
    "kind": "Method",
    "detail": "Function (} float)",
    "insertText": "FRandRange(float Min, float Max)"
  },
  {
    "label": "x3F800000U()",
    "kind": "Method",
    "detail": "Function (uint32_t UnitFractionAsInt = 0)",
    "insertText": "x3F800000U(_Seed >> 9)"
  },
  {
    "label": "memcpy()",
    "kind": "Method",
    "detail": "Function (float UnitFraction ;)",
    "insertText": "memcpy(&UnitFraction, &UnitFractionAsInt, sizeof(float))"
  },
  {
    "label": "RandBool()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "RandBool()"
  },
  {
    "label": "_Seed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_Seed(_Seed * 196314165U)"
  }
]