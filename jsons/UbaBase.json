[
  {
    "label": "Guid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Guid"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once namespace uba { using u8 = unsigned char ; using u16 = unsigned short ; using u32 = unsigned int ; using u64 = unsigned long long ; using s64 = long long ; struct Guid { u32 data1 = 0 ; u16 data2 = 0 ; u16 data3 = 0 ; u8 data4 [ 8 ] = { 0 } ; bool)",
    "insertText": "operator(const Guid& o)"
  },
  {
    "label": "Min()",
    "kind": "Method",
    "detail": "Function (} } ; template<class T> const T&)",
    "insertText": "Min(const T& a, const T& b)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (} template<class T> const T&)",
    "insertText": "Max(const T& a, const T& b)"
  },
  {
    "label": "TC()",
    "kind": "Method",
    "detail": "Function (} # if PLATFORM_WINDOWS bool IsWindows = true ; using tchar = wchar_t ; # define)",
    "insertText": "TC(x)"
  }
]