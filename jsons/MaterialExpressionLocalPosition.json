[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UMaterialExpressionLocalPosition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionLocalPosition"
  },
  {
    "label": "FMaterialCompiler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialCompiler"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" UObject / ObjectMacros . h \" # include \" Materials / MaterialExpression . h \" # include \" MaterialExpressionLocalPosition . generated . h \")",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (IncludeOffsets)",
    "insertText": "UMETA(DisplayName=\"Include Material Shader Offsets\"), ExcludeOffsets UMETA(DisplayName=\"Exclude Material Shader Offsets\")"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (Instance)",
    "insertText": "UMETA(DisplayName=\"Instance\"), InstancePreSkinning UMETA(DisplayName=\"Pre-Skinned Instance\"), Primitive UMETA(DisplayName=\"Component\")"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(collapsecategories, hidecategories=Object, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=MaterialExpressionLocalPosition, meta=(DisplayName = \"Shader Offsets\", ShowAsInputPin = \"Advanced\"))"
  },
  {
    "label": "GenerateHLSLExpression()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "GenerateHLSLExpression(FMaterialHLSLGenerator& Generator, UE::HLSLTree::FScope& Scope, int32 OutputIndex, UE::HLSLTree::FExpression const*& OutExpression)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Compile(class FMaterialCompiler* Compiler, int32 OutputIndex)"
  },
  {
    "label": "GetCaption()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCaption(TArray<FString>& OutCaptions)"
  },
  {
    "label": "GetExpressionToolTip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetExpressionToolTip(TArray<FString>& OutToolTip)"
  },
  {
    "label": "GetKeywords()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetKeywords()"
  }
]