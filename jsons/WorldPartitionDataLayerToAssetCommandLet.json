[
  {
    "label": "UDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerAsset"
  },
  {
    "label": "UDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstance"
  },
  {
    "label": "UDataLayerInstanceWithAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerInstanceWithAsset"
  },
  {
    "label": "UDataLayerFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerFactory"
  },
  {
    "label": "UDeprecatedDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDeprecatedDataLayerInstance"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UDataLayerConversionInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerConversionInfo"
  },
  {
    "label": "UDataLayerToAssetCommandletContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerToAssetCommandletContext"
  },
  {
    "label": "UDataLayerToAssetCommandletContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerToAssetCommandletContext"
  },
  {
    "label": "UDataLayerToAssetCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerToAssetCommandlet"
  },
  {
    "label": "EReturnCode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EReturnCode"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (UNREALED_API)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogDataLayerToAssetCommandlet, Log, All)"
  },
  {
    "label": "SetDataLayerToConvert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataLayerToConvert(const UDeprecatedDataLayerInstance* InDataLayerToConvert)"
  },
  {
    "label": "SetDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataLayerInstance(UDataLayerInstanceWithAsset* InDataLayerInstance)"
  },
  {
    "label": "SetPreviousConversions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPreviousConversions(UDataLayerConversionInfo* CurrentConversion, TArray<TWeakObjectPtr<UDataLayerConversionInfo>>&& PreviousConversions)"
  },
  {
    "label": "InitializeFromCommandLine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InitializeFromCommandLine(TArray<FString>& Tokens, TArray<FString> const& Switches, TMap<FString, FString> const& Params)"
  },
  {
    "label": "BuildConversionInfos()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildConversionInfos(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, FPackageSourceControlHelper& PackageHelper)"
  },
  {
    "label": "CreateConversionFromDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateConversionFromDataLayer(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, const UDeprecatedDataLayerInstance* DataLayer, FPackageSourceControlHelper& PackageHelper)"
  },
  {
    "label": "GetOrCreateDataLayerAssetForConversion()",
    "kind": "Method",
    "detail": "Function (TObjectPtr<UDataLayerAsset>)",
    "insertText": "GetOrCreateDataLayerAssetForConversion(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, FName DataLayerName)"
  },
  {
    "label": "ResolvePreviousConversionsToCurrent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ResolvePreviousConversionsToCurrent(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext)"
  },
  {
    "label": "CreateDataLayerInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateDataLayerInstances(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext)"
  },
  {
    "label": "RebuildDataLayerHierarchies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RebuildDataLayerHierarchies(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext)"
  },
  {
    "label": "RemapActorDataLayersToAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemapActorDataLayersToAssets(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, FPackageSourceControlHelper& PackageHelper)"
  },
  {
    "label": "RemapActorDataLayers()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RemapActorDataLayers(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, AActor* Actor)"
  },
  {
    "label": "RemapDataLayersAssetsFromPreviousConversions()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "RemapDataLayersAssetsFromPreviousConversions(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, AActor* Actor)"
  },
  {
    "label": "DeletePreviousConversionsData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeletePreviousConversionsData(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, FPackageSourceControlHelper& PackageHelper)"
  },
  {
    "label": "CommitConversion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommitConversion(TStrongObjectPtr<UDataLayerToAssetCommandletContext>& CommandletContext, FPackageSourceControlHelper& PackageHelper)"
  },
  {
    "label": "IsAssetInConversionFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetInConversionFolder(const FSoftObjectPath& DataLayerAsset)"
  }
]