[
  {
    "label": "VkPhysicalDevicePortabilitySubsetFeaturesKHR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPhysicalDevicePortabilitySubsetFeaturesKHR"
  },
  {
    "label": "VkPhysicalDevicePortabilitySubsetPropertiesKHR",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPhysicalDevicePortabilitySubsetPropertiesKHR"
  },
  {
    "label": "VkPhysicalDeviceShaderEnqueueFeaturesAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPhysicalDeviceShaderEnqueueFeaturesAMDX"
  },
  {
    "label": "VkPhysicalDeviceShaderEnqueuePropertiesAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPhysicalDeviceShaderEnqueuePropertiesAMDX"
  },
  {
    "label": "VkExecutionGraphPipelineScratchSizeAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkExecutionGraphPipelineScratchSizeAMDX"
  },
  {
    "label": "VkExecutionGraphPipelineCreateInfoAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkExecutionGraphPipelineCreateInfoAMDX"
  },
  {
    "label": "VkDispatchGraphInfoAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkDispatchGraphInfoAMDX"
  },
  {
    "label": "VkDispatchGraphCountInfoAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkDispatchGraphCountInfoAMDX"
  },
  {
    "label": "VkPipelineShaderStageNodeCreateInfoAMDX",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPipelineShaderStageNodeCreateInfoAMDX"
  },
  {
    "label": "VkDisplacementMicromapFormatNV",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VkDisplacementMicromapFormatNV"
  },
  {
    "label": "VkPhysicalDeviceDisplacementMicromapFeaturesNV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPhysicalDeviceDisplacementMicromapFeaturesNV"
  },
  {
    "label": "VkPhysicalDeviceDisplacementMicromapPropertiesNV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkPhysicalDeviceDisplacementMicromapPropertiesNV"
  },
  {
    "label": "VkAccelerationStructureTrianglesDisplacementMicromapNV",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VkAccelerationStructureTrianglesDisplacementMicromapNV"
  },
  {
    "label": "VK_SHADER_INDEX_UNUSED_AMDX()",
    "kind": "Method",
    "detail": "Function (# ifndef VULKAN_BETA_H_ # define VULKAN_BETA_H_ 1 # ifdef __cplusplus \" C \" { # endif # define VK_KHR_portability_subset 1 # define VK_KHR_PORTABILITY_SUBSET_SPEC_VERSION 1 # define VK_KHR_PORTABILITY_SUBSET_EXTENSION_NAME \" VK_KHR_portability_subset \" typedef struct VkPhysicalDevicePortabilitySubsetFeaturesKHR { VkStructureType sType ; void* pNext ; VkBool32 constantAlphaColorBlendFactors ; VkBool32 events ; VkBool32 imageViewFormatReinterpretation ; VkBool32 imageViewFormatSwizzle ; VkBool32 imageView2DOn3DImage ; VkBool32 multisampleArrayImage ; VkBool32 mutableComparisonSamplers ; VkBool32 pointPolygons ; VkBool32 samplerMipLodBias ; VkBool32 separateStencilMaskRef ; VkBool32 shaderSampleRateInterpolationFunctions ; VkBool32 tessellationIsolines ; VkBool32 tessellationPointMode ; VkBool32 triangleFans ; VkBool32 vertexAttributeAccessBeyondStride ; } VkPhysicalDevicePortabilitySubsetFeaturesKHR ; typedef struct VkPhysicalDevicePortabilitySubsetPropertiesKHR { VkStructureType sType ; void* pNext ; uint32_t minVertexInputBindingStrideAlignment ; } VkPhysicalDevicePortabilitySubsetPropertiesKHR ; # define VK_AMDX_shader_enqueue 1 # define VK_AMDX_SHADER_ENQUEUE_SPEC_VERSION 1 # define VK_AMDX_SHADER_ENQUEUE_EXTENSION_NAME \" VK_AMDX_shader_enqueue \" # define)",
    "insertText": "VK_SHADER_INDEX_UNUSED_AMDX(~0U)"
  },
  {
    "label": "VkResult()",
    "kind": "Method",
    "detail": "Function (VkStructureType sType ; void* pNext ; VkBool32 shaderEnqueue ; } VkPhysicalDeviceShaderEnqueueFeaturesAMDX ; typedef struct VkPhysicalDeviceShaderEnqueuePropertiesAMDX { VkStructureType sType ; void* pNext ; uint32_t maxExecutionGraphDepth ; uint32_t maxExecutionGraphShaderOutputNodes ; uint32_t maxExecutionGraphShaderPayloadSize ; uint32_t maxExecutionGraphShaderPayloadCount ; uint32_t executionGraphDispatchAddressAlignment ; } VkPhysicalDeviceShaderEnqueuePropertiesAMDX ; typedef struct VkExecutionGraphPipelineScratchSizeAMDX { VkStructureType sType ; void* pNext ; VkDeviceSize size ; } VkExecutionGraphPipelineScratchSizeAMDX ; typedef struct VkExecutionGraphPipelineCreateInfoAMDX { VkStructureType sType ; const void* pNext ; VkPipelineCreateFlags flags ; uint32_t stageCount ; const VkPipelineShaderStageCreateInfo* pStages ; const VkPipelineLibraryCreateInfoKHR* pLibraryInfo ; VkPipelineLayout layout ; VkPipeline basePipelineHandle ; int32_t basePipelineIndex ; } VkExecutionGraphPipelineCreateInfoAMDX ; typedef union VkDeviceOrHostAddressConstAMDX { VkDeviceAddress deviceAddress ; const void* hostAddress ; } VkDeviceOrHostAddressConstAMDX ; typedef struct VkDispatchGraphInfoAMDX { uint32_t nodeIndex ; uint32_t payloadCount ; VkDeviceOrHostAddressConstAMDX payloads ; uint64_t payloadStride ; } VkDispatchGraphInfoAMDX ; typedef struct VkDispatchGraphCountInfoAMDX { uint32_t count ; VkDeviceOrHostAddressConstAMDX infos ; uint64_t stride ; } VkDispatchGraphCountInfoAMDX ; typedef struct VkPipelineShaderStageNodeCreateInfoAMDX { VkStructureType sType ; const void* pNext ; const char* pName ; uint32_t index ; } VkPipelineShaderStageNodeCreateInfoAMDX ; typedef)",
    "insertText": "VkResult(VKAPI_PTR *PFN_vkCreateExecutionGraphPipelinesAMDX)(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkExecutionGraphPipelineCreateInfoAMDX* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines)"
  },
  {
    "label": "VkResult()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "VkResult(VKAPI_PTR *PFN_vkGetExecutionGraphPipelineScratchSizeAMDX)(VkDevice device, VkPipeline executionGraph, VkExecutionGraphPipelineScratchSizeAMDX* pSizeInfo)"
  },
  {
    "label": "VkResult()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "VkResult(VKAPI_PTR *PFN_vkGetExecutionGraphPipelineNodeIndexAMDX)(VkDevice device, VkPipeline executionGraph, const VkPipelineShaderStageNodeCreateInfoAMDX* pNodeInfo, uint32_t* pNodeIndex)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(VKAPI_PTR *PFN_vkCmdInitializeGraphScratchMemoryAMDX)(VkCommandBuffer commandBuffer, VkDeviceAddress scratch)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(VKAPI_PTR *PFN_vkCmdDispatchGraphAMDX)(VkCommandBuffer commandBuffer, VkDeviceAddress scratch, const VkDispatchGraphCountInfoAMDX* pCountInfo)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(VKAPI_PTR *PFN_vkCmdDispatchGraphIndirectAMDX)(VkCommandBuffer commandBuffer, VkDeviceAddress scratch, const VkDispatchGraphCountInfoAMDX* pCountInfo)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(VKAPI_PTR *PFN_vkCmdDispatchGraphIndirectCountAMDX)(VkCommandBuffer commandBuffer, VkDeviceAddress scratch, VkDeviceAddress countInfo)"
  },
  {
    "label": "vkCreateExecutionGraphPipelinesAMDX()",
    "kind": "Method",
    "detail": "Function (# ifndef VK_NO_PROTOTYPES VKAPI_ATTR VkResult VKAPI_CALL)",
    "insertText": "vkCreateExecutionGraphPipelinesAMDX(VkDevice device, VkPipelineCache pipelineCache, uint32_t createInfoCount, const VkExecutionGraphPipelineCreateInfoAMDX* pCreateInfos, const VkAllocationCallbacks* pAllocator, VkPipeline* pPipelines)"
  },
  {
    "label": "vkGetExecutionGraphPipelineScratchSizeAMDX()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR VkResult VKAPI_CALL)",
    "insertText": "vkGetExecutionGraphPipelineScratchSizeAMDX(VkDevice device, VkPipeline executionGraph, VkExecutionGraphPipelineScratchSizeAMDX* pSizeInfo)"
  },
  {
    "label": "vkGetExecutionGraphPipelineNodeIndexAMDX()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR VkResult VKAPI_CALL)",
    "insertText": "vkGetExecutionGraphPipelineNodeIndexAMDX(VkDevice device, VkPipeline executionGraph, const VkPipelineShaderStageNodeCreateInfoAMDX* pNodeInfo, uint32_t* pNodeIndex)"
  },
  {
    "label": "vkCmdInitializeGraphScratchMemoryAMDX()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR void VKAPI_CALL)",
    "insertText": "vkCmdInitializeGraphScratchMemoryAMDX(VkCommandBuffer commandBuffer, VkDeviceAddress scratch)"
  },
  {
    "label": "vkCmdDispatchGraphAMDX()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR void VKAPI_CALL)",
    "insertText": "vkCmdDispatchGraphAMDX(VkCommandBuffer commandBuffer, VkDeviceAddress scratch, const VkDispatchGraphCountInfoAMDX* pCountInfo)"
  },
  {
    "label": "vkCmdDispatchGraphIndirectAMDX()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR void VKAPI_CALL)",
    "insertText": "vkCmdDispatchGraphIndirectAMDX(VkCommandBuffer commandBuffer, VkDeviceAddress scratch, const VkDispatchGraphCountInfoAMDX* pCountInfo)"
  },
  {
    "label": "vkCmdDispatchGraphIndirectCountAMDX()",
    "kind": "Method",
    "detail": "Function (VKAPI_ATTR void VKAPI_CALL)",
    "insertText": "vkCmdDispatchGraphIndirectCountAMDX(VkCommandBuffer commandBuffer, VkDeviceAddress scratch, VkDeviceAddress countInfo)"
  }
]