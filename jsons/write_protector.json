[
  {
    "label": "WriteProtector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WriteProtector"
  },
  {
    "label": "NoWriteProtector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NoWriteProtector"
  },
  {
    "label": "UserFaultFDWriteProtector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UserFaultFDWriteProtector"
  },
  {
    "label": "WriteProtector()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ALLOCATOR_PARTITION_ALLOCATOR_STARSCAN_WRITE_PROTECTOR_H_ # define BASE_ALLOCATOR_PARTITION_ALLOCATOR_STARSCAN_WRITE_PROTECTOR_H_ # include<cstddef> # include<cstdint> # include<mutex> # include \" base / allocator / partition_allocator / starscan / metadata_allocator . h \" # include \" base / allocator / partition_allocator / starscan / pcscan . h \" # include \" base / allocator / partition_allocator / starscan / raceful_worklist . h \" # include \" build / build_config . h \" namespace partition_alloc::internal { class WriteProtector : public AllocatedOnPCScanMetadataPartition { public : ~)",
    "insertText": "WriteProtector()"
  },
  {
    "label": "ProtectPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProtectPages(uintptr_t begin, size_t length)"
  },
  {
    "label": "UnprotectPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnprotectPages(uintptr_t begin, size_t length)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "SupportedClearType()",
    "kind": "Method",
    "detail": "Function (PCScan::ClearType)",
    "insertText": "SupportedClearType()"
  },
  {
    "label": "ProtectPages()",
    "kind": "Method",
    "detail": "Function (} ; class NoWriteProtector final : public WriteProtector { public : void)",
    "insertText": "ProtectPages(uintptr_t, size_t)"
  },
  {
    "label": "UnprotectPages()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnprotectPages(uintptr_t, size_t)"
  },
  {
    "label": "UserFaultFDWriteProtector()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UserFaultFDWriteProtector()"
  },
  {
    "label": "UserFaultFDWriteProtector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UserFaultFDWriteProtector(const UserFaultFDWriteProtector&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UserFaultFDWriteProtector&)",
    "insertText": "operator(const UserFaultFDWriteProtector&)"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsSupported()"
  }
]