[
  {
    "label": "FSuspensionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSuspensionConstraint"
  },
  {
    "label": "FPBDRigidsEvolutionGBF",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidsEvolutionGBF"
  },
  {
    "label": "FSuspensionConstraintPhysicsProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSuspensionConstraintPhysicsProxy"
  },
  {
    "label": "FSuspensionConstraintPhysicsProxy()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FSuspensionConstraintPhysicsProxy(FSuspensionConstraint* InConstraint, FPBDSuspensionConstraintHandle* InHandle, UObject* InOwner = nullptr)"
  },
  {
    "label": "InitializeOnPhysicsThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeOnPhysicsThread(FPBDRigidsSolver* InSolver, FDirtyPropertiesManager& Manager, int32 DataIdx, FDirtyChaosProperties& RemoteData)"
  },
  {
    "label": "PushStateOnGameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushStateOnGameThread(FDirtyPropertiesManager& Manager, int32 DataIdx, FDirtyChaosProperties& RemoteData)"
  },
  {
    "label": "PushStateOnPhysicsThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushStateOnPhysicsThread(FPBDRigidsSolver* InSolver, const FDirtyPropertiesManager& Manager, int32 DataIdx, const FDirtyChaosProperties& RemoteData)"
  },
  {
    "label": "DestroyOnGameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyOnGameThread()"
  },
  {
    "label": "DestroyOnPhysicsThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyOnPhysicsThread(FPBDRigidsSolver* InSolver)"
  },
  {
    "label": "UpdateTargetOnPhysicsThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTargetOnPhysicsThread(FPBDRigidsSolver* InSolver, const FVector& TargetPos, const FVector& Normal, bool Enabled)"
  }
]