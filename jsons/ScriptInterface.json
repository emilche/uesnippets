[
  {
    "label": "FScriptInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScriptInterface"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsZeroConstructType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsZeroConstructType"
  },
  {
    "label": "TScriptInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TScriptInterface"
  },
  {
    "label": "TCallTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCallTraits"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / UObjectGlobals . h \" # include \" Templates / Casts . h \" # include \" Templates / UnrealTemplate . h \" # include<type_traits> class FScriptInterface { private : TObjectPtr<UObject> ObjectPointer = nullptr ; void* InterfacePointer = nullptr ; protected : FArchive&)",
    "insertText": "Serialize(FArchive& Ar, class UClass* InterfaceType)"
  },
  {
    "label": "FScriptInterface()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FScriptInterface()"
  },
  {
    "label": "FScriptInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FScriptInterface(UObject* InObjectPointer, void* InInterfacePointer ) : ObjectPointer(InObjectPointer), InterfacePointer(InInterfacePointer)"
  },
  {
    "label": "FScriptInterface()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FScriptInterface(const FScriptInterface&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FScriptInterface&)",
    "insertText": "operator(const FScriptInterface&)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (ObjectPointer = InObjectPointer ;)",
    "insertText": "if(ObjectPointer == nullptr)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterface(nullptr)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetInterface(void* InInterfacePointer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (InterfacePointer = InInterfacePointer ; } bool)",
    "insertText": "operator(const FScriptInterface& Other)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "AddReferencedObject()",
    "kind": "Method",
    "detail": "Function (Collector .)",
    "insertText": "AddReferencedObject(ObjectPointer)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FScriptInterface& Instance)"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (} } ; template<> struct TIsPODType<class FScriptInterface> { enum { Value = true } ; } ; template<> struct TIsZeroConstructType<class FScriptInterface> { enum { Value = true } ; } ; template<InInterfaceType> class TScriptInterface : public FScriptInterface { public : using InterfaceType = InInterfaceType ; using UObjectType = TCopyQualifiersFromTo<InterfaceType,UObject>::Type ;)",
    "insertText": "TScriptInterface()"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TScriptInterface(TYPE_OF_NULLPTR)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<U)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<U, UObjectType*>) > FORCEINLINE TScriptInterface(U&& Source)"
  },
  {
    "label": "UObjectType()",
    "kind": "Method",
    "detail": "Function (UObjectType* SourceObject = ImplicitConv<)",
    "insertText": "UObjectType(Source)"
  },
  {
    "label": "SetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObject(SourceObject)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterface(Source)"
  },
  {
    "label": "InInterfaceType()",
    "kind": "Method",
    "detail": "Function (} else { InInterfaceType* SourceInterface = Cast<)",
    "insertText": "InInterfaceType(SourceObject)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterface(SourceInterface)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} } template<OtherInterfaceType)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<OtherInterfaceType*, InInterfaceType*>) > FORCEINLINE TScriptInterface(const TScriptInterface<OtherInterfaceType>& Other)"
  },
  {
    "label": "SetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObject(Other.GetObject())"
  },
  {
    "label": "GetInterface()",
    "kind": "Method",
    "detail": "Function (InInterfaceType* SourceInterface = Other .)",
    "insertText": "GetInterface()"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (} template<ObjectType>)",
    "insertText": "TScriptInterface(TObjectPtr<ObjectType> SourceObject)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterface(SourceObject.Get())"
  },
  {
    "label": "InInterfaceType()",
    "kind": "Method",
    "detail": "Function (} else { InInterfaceType* SourceInterface = Cast<)",
    "insertText": "InInterfaceType(ToRawPtr(SourceObject))"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "TScriptInterface(const TScriptInterface&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TScriptInterface&)",
    "insertText": "operator(const TScriptInterface&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TScriptInterface&)",
    "insertText": "operator(TYPE_OF_NULLPTR)"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "TScriptInterface(Source)"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "TScriptInterface(Other)"
  },
  {
    "label": "TScriptInterface()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "TScriptInterface(SourceObject)"
  },
  {
    "label": "UE_REQUIRES()",
    "kind": "Method",
    "detail": "Function (} template<OtherInterface)",
    "insertText": "UE_REQUIRES(std::is_convertible_v<OtherInterface*, InInterfaceType*>) > FORCEINLINE bool operator!=( const OtherInterface* Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const TScriptInterface& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} InInterfaceType*)",
    "insertText": "operator()"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetInterface(InInterfaceType* InInterfacePointer)"
  },
  {
    "label": "SetInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInterface((void*)InInterfacePointer)"
  },
  {
    "label": "GetObject()",
    "kind": "Method",
    "detail": "Function (} UObjectType*)",
    "insertText": "GetObject()"
  },
  {
    "label": "GetObjectRef()",
    "kind": "Method",
    "detail": "Function (} TObjectPtr<UObjectType>&)",
    "insertText": "GetObjectRef()"
  },
  {
    "label": "SetObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetObject(UObjectType* InObjectPointer)"
  },
  {
    "label": "SetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObject(const_cast<UObject*>(InObjectPointer))"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, TScriptInterface& Interface)"
  }
]