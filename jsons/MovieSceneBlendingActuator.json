[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "TBlendableTokenStack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBlendableTokenStack"
  },
  {
    "label": "IMovieSceneBlendingActuator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IMovieSceneBlendingActuator"
  },
  {
    "label": "TMovieSceneBlendingActuator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMovieSceneBlendingActuator"
  },
  {
    "label": "TMovieSceneInitialValueStore",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TMovieSceneInitialValueStore"
  },
  {
    "label": "FInitialValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitialValue"
  },
  {
    "label": "IMovieSceneBlendingActuator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" MovieSceneFwd . h \" # include \" UObject / ObjectKey . h \" # include \" IMovieScenePlayer . h \" # include \" Evaluation / Blending / BlendableTokenStack . h \" # include \" Evaluation / Blending / MovieSceneInitialValueStore . h \" class UObject ; template<DataType> struct TBlendableTokenStack ; struct IMovieSceneBlendingActuator : TSharedFromThis<IMovieSceneBlendingActuator> { ~)",
    "insertText": "IMovieSceneBlendingActuator()"
  },
  {
    "label": "GetDataTypeID()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneAnimTypeID)",
    "insertText": "GetDataTypeID()"
  },
  {
    "label": "RemoveInitialValueForObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInitialValueForObject(FObjectKey InObject)"
  },
  {
    "label": "Actuate()",
    "kind": "Method",
    "detail": "Function (} ; template<DataType> struct TMovieSceneBlendingActuator : IMovieSceneBlendingActuator { public : void)",
    "insertText": "Actuate(UObject* InObject, typename TCallTraits<DataType>::ParamType InValue, const TBlendableTokenStack<DataType>& OriginalStack, const FMovieSceneContext& Context, FPersistentEvaluationData& PersistentData, IMovieScenePlayer& Player)"
  },
  {
    "label": "Actuate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Actuate(FMovieSceneInterrogationData& InterrogationData, typename TCallTraits<DataType>::ParamType InValue, const TBlendableTokenStack<DataType>& OriginalStack, const FMovieSceneContext& Context)"
  },
  {
    "label": "RetrieveCurrentValue()",
    "kind": "Method",
    "detail": "Function (} DataType)",
    "insertText": "RetrieveCurrentValue(UObject* InObject, IMovieScenePlayer* Player)"
  },
  {
    "label": "RemoveInitialValueForObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInitialValueForObject(FObjectKey ObjectToRemove)"
  },
  {
    "label": "RemoveAll()",
    "kind": "Method",
    "detail": "Function (InitialValues .)",
    "insertText": "RemoveAll([=](const FInitialValue& In) { return In.Object == ObjectToRemove; })"
  },
  {
    "label": "GetActuatorID()",
    "kind": "Method",
    "detail": "Function (} FMovieSceneBlendingActuatorID)",
    "insertText": "GetActuatorID()"
  },
  {
    "label": "FInitialValue()",
    "kind": "Method",
    "detail": "Function (} struct TMovieSceneInitialValueStore<DataType> ; struct FInitialValue {)",
    "insertText": "FInitialValue(FObjectKey InObject, const DataType& InValue) : Object(InObject), Value(InValue)"
  }
]