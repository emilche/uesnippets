[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ILandscapeFileFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILandscapeFileFormat"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "FLandscapeImageFileCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLandscapeImageFileCache"
  },
  {
    "label": "ILandscapeEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILandscapeEditorModule"
  },
  {
    "label": "RegisterHeightmapFileFormat()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTypeTraits . h \" # include \" Templates / EnableIf . h \" template<class T> class ILandscapeFileFormat ; using ILandscapeHeightmapFileFormat = ILandscapeFileFormat<uint16> ; using ILandscapeWeightmapFileFormat = ILandscapeFileFormat<uint8> ; class FUICommandList ; class FLandscapeImageFileCache ; class ILandscapeEditorModule : public IModuleInterface { public : void)",
    "insertText": "RegisterHeightmapFileFormat(TSharedRef<ILandscapeHeightmapFileFormat> FileFormat)"
  },
  {
    "label": "RegisterWeightmapFileFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterWeightmapFileFormat(TSharedRef<ILandscapeWeightmapFileFormat> FileFormat)"
  },
  {
    "label": "UnregisterHeightmapFileFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterHeightmapFileFormat(TSharedRef<ILandscapeHeightmapFileFormat> FileFormat)"
  },
  {
    "label": "UnregisterWeightmapFileFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterWeightmapFileFormat(TSharedRef<ILandscapeWeightmapFileFormat> FileFormat)"
  },
  {
    "label": "GetHeightmapImportDialogTypeString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetHeightmapImportDialogTypeString()"
  },
  {
    "label": "GetWeightmapImportDialogTypeString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetWeightmapImportDialogTypeString()"
  },
  {
    "label": "GetHeightmapExportDialogTypeString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetHeightmapExportDialogTypeString()"
  },
  {
    "label": "GetWeightmapExportDialogTypeString()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetWeightmapExportDialogTypeString()"
  },
  {
    "label": "GetHeightmapFormatByExtension()",
    "kind": "Method",
    "detail": "Function (const ILandscapeHeightmapFileFormat*)",
    "insertText": "GetHeightmapFormatByExtension(const TCHAR* Extension)"
  },
  {
    "label": "GetWeightmapFormatByExtension()",
    "kind": "Method",
    "detail": "Function (const ILandscapeWeightmapFileFormat*)",
    "insertText": "GetWeightmapFormatByExtension(const TCHAR* Extension)"
  },
  {
    "label": "GetFormatByExtension()",
    "kind": "Method",
    "detail": "Function (template<T> TEnableIf<std::is_same_v<T,uint16>,const ILandscapeHeightmapFileFormat*>::Type)",
    "insertText": "GetFormatByExtension(const TCHAR* Extension)"
  },
  {
    "label": "GetLandscapeLevelViewportCommandList()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FUICommandList>)",
    "insertText": "GetLandscapeLevelViewportCommandList()"
  },
  {
    "label": "GetImageFileCache()",
    "kind": "Method",
    "detail": "Function (FLandscapeImageFileCache&)",
    "insertText": "GetImageFileCache()"
  }
]