[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UVerseVMClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVerseVMClass"
  },
  {
    "label": "FVerseVMEngineEnvironment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVerseVMEngineEnvironment"
  },
  {
    "label": "FAbstractVisitor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAbstractVisitor"
  },
  {
    "label": "VObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VObject"
  },
  {
    "label": "VValueObject",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VValueObject"
  },
  {
    "label": "VNativeStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VNativeStruct"
  },
  {
    "label": "VProcedure",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VProcedure"
  },
  {
    "label": "VPackage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VPackage"
  },
  {
    "label": "VFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VFunction"
  },
  {
    "label": "FEmergentTypesCacheKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEmergentTypesCacheKeyFuncs"
  },
  {
    "label": "VConstructor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VConstructor"
  },
  {
    "label": "VEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VEntry"
  },
  {
    "label": "VClass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VClass"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CppStructType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CppStructType"
  },
  {
    "label": "SubTypeOfUStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SubTypeOfUStruct"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (class UVerseVMClass ; class FVerseVMEngineEnvironment ; namespace Verse { struct FAbstractVisitor ; struct VObject ; struct VValueObject ; struct VNativeStruct ; struct VProcedure ; struct VPackage ; struct VFunction ; struct FEmergentTypesCacheKeyFuncs : TDefaultMapKeyFuncs<TWriteBarrier<VUniqueStringSet>,TWriteBarrier<VEmergentType>,false> { public : bool)",
    "insertText": "Matches(KeyInitType A, KeyInitType B)"
  },
  {
    "label": "Matches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Matches(KeyInitType A, const VUniqueStringSet& B)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKeyHash(KeyInitType Key)"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetKeyHash(const VUniqueStringSet& Key)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (} ; struct VConstructor : VCell {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VCell)"
  },
  {
    "label": "Constant()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; struct VEntry { TWriteBarrier<VUniqueString> Name ; bool bNative ; TWriteBarrier<VPropertyType> Type ; TWriteBarrier<VValue> Value ; bool bDynamic ; VEntry)",
    "insertText": "Constant(FAllocationContext Context, FUtf8StringView InField, bool bInNative, VPropertyType* InPropertyType, VValue InValue)"
  },
  {
    "label": "Constant()",
    "kind": "Method",
    "detail": "Function (VEntry)",
    "insertText": "Constant(FAllocationContext Context, VUniqueString& InField, bool bInNative, VPropertyType* InPropertyType, VValue InValue)"
  },
  {
    "label": "Field()",
    "kind": "Method",
    "detail": "Function (VEntry)",
    "insertText": "Field(FAllocationContext Context, VUniqueString& InField, bool bInNative, VPropertyType* InType = nullptr)"
  },
  {
    "label": "FieldInitializer()",
    "kind": "Method",
    "detail": "Function (VEntry)",
    "insertText": "FieldInitializer(FAllocationContext Context, FUtf8StringView InField, bool bInNative, VPropertyType* InPropertyType, VProcedure& InCode)"
  },
  {
    "label": "FieldInitializer()",
    "kind": "Method",
    "detail": "Function (VEntry)",
    "insertText": "FieldInitializer(FAllocationContext Context, VUniqueString& InField, bool bInNative, VPropertyType* InPropertyType, VProcedure& InCode)"
  },
  {
    "label": "Block()",
    "kind": "Method",
    "detail": "Function (VEntry)",
    "insertText": "Block(FAllocationContext Context, VProcedure& Code)"
  },
  {
    "label": "IsMethod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMethod()"
  },
  {
    "label": "Initializer()",
    "kind": "Method",
    "detail": "Function (VFunction*)",
    "insertText": "Initializer()"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} ; const uint32 NumEntries ; VEntry Entries [ ] ; VConstructor&)",
    "insertText": "New(FAllocationContext Context, const TArray<VEntry>& InEntries)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (size_t NumBytes =)",
    "insertText": "offsetof(VConstructor, Entries) + InEntries.Num() * sizeof(Entries[0])"
  },
  {
    "label": "ToStringImpl()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ToStringImpl(FStringBuilderBase& Builder, FAllocationContext Context, const FCellFormatter& Formatter)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeImpl(VConstructor*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "LoadFunction()",
    "kind": "Method",
    "detail": "Function (VFunction*)",
    "insertText": "LoadFunction(FAllocationContext Context, VUniqueString& FieldName, VValue SelfObject)"
  },
  {
    "label": "NewUninitialized()",
    "kind": "Method",
    "detail": "Function (private : VConstructor&)",
    "insertText": "NewUninitialized(FAllocationContext Context, uint32 InNumEntries)"
  },
  {
    "label": "offsetof()",
    "kind": "Method",
    "detail": "Function (size_t NumBytes =)",
    "insertText": "offsetof(VConstructor, Entries) + InNumEntries * sizeof(Entries[0])"
  },
  {
    "label": "VConstructor()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "VConstructor(FAllocationContext Context, const TArray<VEntry>& InEntries) : VCell(Context, &GlobalTrivialEmergentType.Get(Context)) , NumEntries(InEntries.Num())"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(&Entries[Index]) VEntry(InEntries[Index])"
  },
  {
    "label": "VConstructor()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "VConstructor(FAllocationContext Context, uint32 InNumEntries) : VCell(Context, &GlobalTrivialEmergentType.Get(Context)) , NumEntries(InNumEntries)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (} } ; struct VClass : VType {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VType)"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; enum class EKind : uint8 { Class,Struct,Interface } ; FUtf8StringView)",
    "insertText": "GetName()"
  },
  {
    "label": "GetUEMangledName()",
    "kind": "Method",
    "detail": "Function (} FUtf8StringView)",
    "insertText": "GetUEMangledName()"
  },
  {
    "label": "ExtractClassName()",
    "kind": "Method",
    "detail": "Function (} FUtf8StringView)",
    "insertText": "ExtractClassName()"
  },
  {
    "label": "GetScope()",
    "kind": "Method",
    "detail": "Function (VPackage*)",
    "insertText": "GetScope()"
  },
  {
    "label": "GetKind()",
    "kind": "Method",
    "detail": "Function (} EKind)",
    "insertText": "GetKind()"
  },
  {
    "label": "IsNative()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNative()"
  },
  {
    "label": "NewVObject()",
    "kind": "Method",
    "detail": "Function (} VValueObject&)",
    "insertText": "NewVObject(FAllocationContext Context, VUniqueStringSet& ArchetypeFields, const TArray<VValue>& ArchetypeValues, TArray<VFunction*>& OutInitializers)"
  },
  {
    "label": "NewNativeStruct()",
    "kind": "Method",
    "detail": "Function (FOpResult)",
    "insertText": "NewNativeStruct(FAllocationContext Context, VUniqueStringSet& ArchetypeFields, const TArray<VValue>& ArchetypeValues, TArray<VFunction*>& OutInitializers)"
  },
  {
    "label": "NewNativeStruct()",
    "kind": "Method",
    "detail": "Function (template<class CppStructType> VNativeStruct&)",
    "insertText": "NewNativeStruct(FAllocationContext Context, CppStructType&& Struct)"
  },
  {
    "label": "NewUObject()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "NewUObject(FAllocationContext Context, VUniqueStringSet& ArchetypeFields, const TArray<VValue>& ArchetypeValues, TArray<VFunction*>& OutInitializers)"
  },
  {
    "label": "GatherInitializers()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GatherInitializers(VUniqueStringSet& ArchetypeFields, TArray<VFunction*>& OutInitializers)"
  },
  {
    "label": "GetOrCreateEmergentTypeForArchetype()",
    "kind": "Method",
    "detail": "Function (public : VEmergentType&)",
    "insertText": "GetOrCreateEmergentTypeForArchetype(FAllocationContext Context, VUniqueStringSet& ArchetypeFieldNames, VCppClassInfo* CppClassInfo)"
  },
  {
    "label": "GetOrCreateEmergentTypeForNativeStruct()",
    "kind": "Method",
    "detail": "Function (VEmergentType&)",
    "insertText": "GetOrCreateEmergentTypeForNativeStruct(FAllocationContext Context)"
  },
  {
    "label": "GetUStruct()",
    "kind": "Method",
    "detail": "Function (template<class SubTypeOfUStruct> SubTypeOfUStruct*)",
    "insertText": "GetUStruct()"
  },
  {
    "label": "GetOrCreateUStruct()",
    "kind": "Method",
    "detail": "Function (template<class SubTypeOfUStruct> SubTypeOfUStruct*)",
    "insertText": "GetOrCreateUStruct(FAllocationContext Context)"
  },
  {
    "label": "GetConstructor()",
    "kind": "Method",
    "detail": "Function (VConstructor&)",
    "insertText": "GetConstructor()"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (VClass&)",
    "insertText": "New(FAllocationContext Context, VPackage* Scope, VArray* Name, VArray* UEMangledName, UStruct* ImportStruct, bool bNative, EKind Kind, const TArray<VClass*>& Inherited, VConstructor& Constructor)"
  },
  {
    "label": "VClass()",
    "kind": "Method",
    "detail": "Function (private : class::FVerseVMEngineEnvironment ;)",
    "insertText": "VClass(FAllocationContext Context, VPackage* InScope, VArray* InName, VArray* InUEMangledName, UStruct* InImportStruct, bool bInNative, EKind InKind, const TArray<VClass*>& InInherited, VConstructor& InConstructor)"
  },
  {
    "label": "Extend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Extend(TSet<VUniqueString*>& Fields, TArray<VConstructor::VEntry>& Entries, const VConstructor& Base)"
  },
  {
    "label": "CreateUStruct()",
    "kind": "Method",
    "detail": "Function (UStruct*)",
    "insertText": "CreateUStruct(FAllocationContext Context)"
  },
  {
    "label": "GetOrCreateEmergentTypeForImportedNativeStruct()",
    "kind": "Method",
    "detail": "Function (VEmergentType&)",
    "insertText": "GetOrCreateEmergentTypeForImportedNativeStruct(FAllocationContext Context)"
  },
  {
    "label": "InitInstance()",
    "kind": "Method",
    "detail": "Function (FOpResult)",
    "insertText": "InitInstance(FAllocationContext Context, VShape& Shape, void* Data)"
  },
  {
    "label": "SubsumesImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SubsumesImpl(FAllocationContext, VValue)"
  }
]