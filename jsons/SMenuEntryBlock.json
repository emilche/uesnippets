[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "FMenuEntryBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuEntryBlock"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "IMultiBlockBaseWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMultiBlockBaseWidget"
  },
  {
    "label": "friend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "friend"
  },
  {
    "label": "SMenuEntryBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuEntryBlock"
  },
  {
    "label": "FSlateMacMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateMacMenu"
  },
  {
    "label": "SMenuEntryBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuEntryBlock"
  },
  {
    "label": "FMenuEntryBuildParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMenuEntryBuildParams"
  },
  {
    "label": "SetCheckBoxStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCheckBoxStyle(FName InCheckBoxStyle)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "OnMenuItemButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMenuItemButtonClicked()"
  },
  {
    "label": "OnClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClicked( bool bCheckBoxClicked )"
  },
  {
    "label": "OnCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCheckStateChanged( const ECheckBoxState NewCheckedState )"
  },
  {
    "label": "FindTextBlockWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "FindTextBlockWidget(TSharedRef<SWidget> Content)"
  },
  {
    "label": "RequestSubMenuToggle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSubMenuToggle( bool bOpenMenu, const bool bClobber )"
  },
  {
    "label": "CancelPendingSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelPendingSubMenu()"
  },
  {
    "label": "UpdateSubMenuState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSubMenuState()"
  },
  {
    "label": "UpdateSubMenuState()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateSubMenuState(double InCurrentTime, float InDeltaTime, bool bWantsOpen)"
  }
]