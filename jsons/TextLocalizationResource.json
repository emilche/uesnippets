[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "FTextLocalizationMetaDataResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextLocalizationMetaDataResource"
  },
  {
    "label": "FTextLocalizationResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextLocalizationResource"
  },
  {
    "label": "FEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEntry"
  },
  {
    "label": "FTextLocalizationMetaDataResource()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / SortedMap . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Internationalization / LocalizedTextSourceTypes . h \" # include \" Internationalization / TextKey . h \" # include \" Misc / Crc . h \" # include \" Templates / SharedPointer . h \" class FArchive ; class FTextLocalizationMetaDataResource { public :)",
    "insertText": "FTextLocalizationMetaDataResource()"
  },
  {
    "label": "FTextLocalizationMetaDataResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextLocalizationMetaDataResource(const FTextLocalizationMetaDataResource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTextLocalizationMetaDataResource&)",
    "insertText": "operator(const FTextLocalizationMetaDataResource&)"
  },
  {
    "label": "FTextLocalizationMetaDataResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextLocalizationMetaDataResource(FTextLocalizationMetaDataResource&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTextLocalizationMetaDataResource&)",
    "insertText": "operator(FTextLocalizationMetaDataResource&&)"
  },
  {
    "label": "LoadFromFile()",
    "kind": "Method",
    "detail": "Function (FString NativeCulture ; FString NativeLocRes ; TArray<FString> CompiledCultures ; bool)",
    "insertText": "LoadFromFile(const FString& FilePath)"
  },
  {
    "label": "LoadFromArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromArchive(FArchive& Archive, const FString& LocMetaID)"
  },
  {
    "label": "SaveToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToFile(const FString& FilePath)"
  },
  {
    "label": "SaveToArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToArchive(FArchive& Archive, const FString& LocMetaID)"
  },
  {
    "label": "FTextLocalizationResource()",
    "kind": "Method",
    "detail": "Function (} ; class FTextLocalizationResource { public :)",
    "insertText": "FTextLocalizationResource()"
  },
  {
    "label": "FTextLocalizationResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextLocalizationResource(const FTextLocalizationResource&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTextLocalizationResource&)",
    "insertText": "operator(const FTextLocalizationResource&)"
  },
  {
    "label": "FTextLocalizationResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTextLocalizationResource(FTextLocalizationResource&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FTextLocalizationResource&)",
    "insertText": "operator(FTextLocalizationResource&&)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (struct FEntry { FTextConstDisplayStringPtr LocalizedString ; FTextKey LocResID ; int32 LocalizationTargetPathId = INDEX_NONE ; uint32 SourceStringHash = 0 ; int32 Priority = 0 ; } ; typedef TMap<FTextId,FEntry> FEntriesTable ; FEntriesTable Entries ; uint32)",
    "insertText": "HashString(const TCHAR* InStr, const uint32 InBaseHash = 0)"
  },
  {
    "label": "HashString()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "HashString(const FString& InStr, const uint32 InBaseHash = 0)"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddEntry(const FTextKey& InNamespace, const FTextKey& InKey, const FString& InSourceString, const FString& InLocalizedString, const int32 InPriority, const FTextKey& InLocResID = FTextKey())"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEntry(const FTextKey& InNamespace, const FTextKey& InKey, const FString& InSourceString, const FTextConstDisplayStringRef& InLocalizedString, const int32 InPriority, const FTextKey& InLocResID = FTextKey())"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEntry(const FTextKey& InNamespace, const FTextKey& InKey, const uint32 InSourceStringHash, const FString& InLocalizedString, const int32 InPriority, const FTextKey& InLocResID = FTextKey())"
  },
  {
    "label": "AddEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddEntry(const FTextKey& InNamespace, const FTextKey& InKey, const uint32 InSourceStringHash, const FTextConstDisplayStringRef& InLocalizedString, const int32 InPriority, const FTextKey& InLocResID = FTextKey())"
  },
  {
    "label": "IsEmpty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEmpty()"
  },
  {
    "label": "LoadFromDirectory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFromDirectory(const FString& DirectoryPath, const int32 Priority)"
  },
  {
    "label": "LoadFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromFile(const FString& FilePath, const int32 Priority)"
  },
  {
    "label": "LoadFromArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromArchive(FArchive& Archive, const FTextKey& LocResID, const int32 Priority)"
  },
  {
    "label": "SaveToArchive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToArchive(FArchive& Archive, const FTextKey& LocResID)"
  },
  {
    "label": "ShouldReplaceEntry()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ShouldReplaceEntry(const FTextKey& Namespace, const FTextKey& Key, const FEntry& CurrentEntry, const FEntry& NewEntry)"
  },
  {
    "label": "GetNativeCultureName()",
    "kind": "Method",
    "detail": "Function (} ; namespace TextLocalizationResourceUtil { FString)",
    "insertText": "GetNativeCultureName(const TArray<FString>& InLocalizationPaths)"
  },
  {
    "label": "GetNativeCultureName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNativeCultureName(const ELocalizedTextSourceCategory InCategory)"
  },
  {
    "label": "GetNativeProjectCultureName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNativeProjectCultureName(const bool bSkipCache = false)"
  },
  {
    "label": "ClearNativeProjectCultureName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNativeProjectCultureName()"
  },
  {
    "label": "GetNativeEngineCultureName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetNativeEngineCultureName(const bool bSkipCache = false)"
  },
  {
    "label": "ClearNativeEngineCultureName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNativeEngineCultureName()"
  },
  {
    "label": "GetNativeEditorCultureName()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FString)",
    "insertText": "GetNativeEditorCultureName(const bool bSkipCache = false)"
  },
  {
    "label": "ClearNativeEditorCultureName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearNativeEditorCultureName()"
  },
  {
    "label": "GetLocalizedCultureNames()",
    "kind": "Method",
    "detail": "Function (# endif TArray<FString>)",
    "insertText": "GetLocalizedCultureNames(const TArray<FString>& InLocalizationPaths)"
  },
  {
    "label": "GetDisabledLocalizationTargets()",
    "kind": "Method",
    "detail": "Function (const TArray<FString>&)",
    "insertText": "GetDisabledLocalizationTargets()"
  },
  {
    "label": "GetLocalizationTargetNameForChunkId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLocalizationTargetNameForChunkId(const FString& InLocalizationTargetName, const int32 InChunkId)"
  }
]