[
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "IDetailChildrenBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailChildrenBuilder"
  },
  {
    "label": "IDetailGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailGroup"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyHandleArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandleArray"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "SColorBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SColorBlock"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FCustomPrimitiveDataCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCustomPrimitiveDataCustomization"
  },
  {
    "label": "FParameterData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParameterData"
  },
  {
    "label": "FPropertyAccess",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FPropertyAccess"
  },
  {
    "label": "SHyperlink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHyperlink"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" HAL / Platform . h \" # include \" IPropertyTypeCustomization . h \" # include \" Input / Reply . h \" # include \" MaterialTypes . h \" # include \" Math / Color . h \" # include \" Misc / Guid . h \" # include \" PropertyEditorModule . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / SoftObjectPtr . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FDetailWidgetRow ; class FText ; class IDetailChildrenBuilder ; class IDetailGroup ; class IPropertyHandle ; class IPropertyHandleArray ; class IPropertyUtilities ; class SColorBlock ; class SWidget ; class SWindow ; class UMaterial ; class UMaterialInterface ; class UObject ; class UPrimitiveComponent ; struct FGeometry ; struct FPointerEvent ; struct FPropertyChangedEvent ; class FCustomPrimitiveDataCustomization : public IPropertyTypeCustomization { public : TSharedRef<IPropertyTypeCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FCustomPrimitiveDataCustomization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FCustomPrimitiveDataCustomization()"
  },
  {
    "label": "CustomizeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeHeader(TSharedRef<IPropertyHandle> PropertyHandle, FDetailWidgetRow& HeaderRow, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CustomizeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeChildren(TSharedRef<IPropertyHandle> PropertyHandle, IDetailChildrenBuilder& ChildBuilder, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CreateVectorGroup()",
    "kind": "Method",
    "detail": "Function (private : struct FParameterData { public : TWeakObjectPtr<UPrimitiveComponent> Component ; TWeakObjectPtr<UMaterialInterface> Material ; FMaterialParameterInfo Info ; FGuid ExpressionID ; uint8 IndexOffset ; } ; bool bDeferringRefresh = false ; TSharedPtr<IPropertyUtilities> PropertyUtils ; TSharedPtr<IPropertyHandle> DataHandle ; TSharedPtr<IPropertyHandleArray> DataArrayHandle ; TMap<TWeakObjectPtr<UPrimitiveComponent>,TSet<TSoftObjectPtr<UMaterial>>> ComponentsToWatch ; TMap<TWeakObjectPtr<UPrimitiveComponent>,uint32> ComponentMaterialCounts ; TSet<TSoftObjectPtr<UMaterialInterface>> MaterialsToWatch ; TMap<uint8,TArray<FParameterData>> VectorParameterData ; TMap<uint8,TArray<FParameterData>> ScalarParameterData ; TMap<uint8,TSharedPtr<SColorBlock>> ColorBlocks ; IDetailGroup*)",
    "insertText": "CreateVectorGroup(IDetailChildrenBuilder& ChildBuilder, uint8 PrimIdx, bool bDataEditable, int32 NumElements, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CreateParameterRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateParameterRow(IDetailChildrenBuilder& ChildBuilder, uint8 PrimIdx, TSharedPtr<IPropertyHandle> ElementHandle, bool bDataEditable, IDetailGroup* VectorGroup, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "ForEachSelectedComponent()",
    "kind": "Method",
    "detail": "Function (template<Predicate> void)",
    "insertText": "ForEachSelectedComponent(Predicate Pred)"
  },
  {
    "label": "IsSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSelected(UPrimitiveComponent* Component)"
  },
  {
    "label": "Cleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cleanup()"
  },
  {
    "label": "PopulateParameterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateParameterData(UPrimitiveComponent* PrimitiveComponent, int32& MaxPrimitiveDataIndex)"
  },
  {
    "label": "RequestRefresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestRefresh()"
  },
  {
    "label": "OnElementsModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnElementsModified(const enum FPropertyAccess::Result OldAccessResult, const uint32 OldNumElements)"
  },
  {
    "label": "OnObjectPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnObjectPropertyChanged(UObject* Object, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnMaterialCompiled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMaterialCompiled(UMaterialInterface* Material)"
  },
  {
    "label": "OnNavigate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNavigate(TWeakObjectPtr<UMaterialInterface> Material, FGuid ExpressionID)"
  },
  {
    "label": "OnAddedDesiredPrimitiveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddedDesiredPrimitiveData(uint8 PrimIdx)"
  },
  {
    "label": "OnRemovedPrimitiveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemovedPrimitiveData(uint8 PrimIdx)"
  },
  {
    "label": "GetVectorColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetVectorColor(uint8 PrimIdx)"
  },
  {
    "label": "SetVectorColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorColor(FLinearColor NewColor, uint8 PrimIdx)"
  },
  {
    "label": "SetDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultValue(uint8 PrimIdx)"
  },
  {
    "label": "SetDefaultVectorValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultVectorValue(uint8 PrimIdx)"
  },
  {
    "label": "OnMouseButtonDownColorBlock()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDownColorBlock(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent, uint8 PrimIdx)"
  },
  {
    "label": "OnColorPickerCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerCancelled(FLinearColor OriginalColor, uint8 PrimIdx)"
  },
  {
    "label": "OnColorPickerWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerWindowClosed(const TSharedRef<SWindow>& Window)"
  },
  {
    "label": "CreateNameWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateNameWidget(int32 PrimIdx, TSharedRef<SWidget> ParameterName, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CreateHyperlink()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SHyperlink>)",
    "insertText": "CreateHyperlink(FText Text, TWeakObjectPtr<UMaterialInterface> Material, const FGuid& ExpressionId)"
  },
  {
    "label": "GetUndeclaredParameterWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetUndeclaredParameterWidget(int32 PrimIdx, IPropertyTypeCustomizationUtils& CustomizationUtils)"
  },
  {
    "label": "CreateWarningWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateWarningWidget(TSharedRef<SWidget> Content, FText WarningText)"
  },
  {
    "label": "GetNumElements()",
    "kind": "Method",
    "detail": "Function (enum FPropertyAccess::Result)",
    "insertText": "GetNumElements(uint32& NumElements)"
  }
]