[
  {
    "label": "InterfaceElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InterfaceElement"
  },
  {
    "label": "Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Node"
  },
  {
    "label": "ShaderNodeImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderNodeImpl"
  },
  {
    "label": "MX_GENSHADER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_GENSHADER_API"
  },
  {
    "label": "ShaderNodeImpl()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_SHADERNODEIMPL_H # define MATERIALX_SHADERNODEIMPL_H # include<MaterialXGenShader / Library . h> # include<MaterialXGenShader / Export . h> # include<MaterialXCore / Util . h> MATERIALX_NAMESPACE_BEGIN class InterfaceElement ; class Node ; using ShaderGraphInputSocket = ShaderOutput ; using ShaderNodeImplPtr = shared_ptr<class ShaderNodeImpl> ; class ShaderNodeImpl { public : ~)",
    "insertText": "ShaderNodeImpl()"
  },
  {
    "label": "getTarget()",
    "kind": "Method",
    "detail": "Function (} const string&)",
    "insertText": "getTarget()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (const string&)",
    "insertText": "getName()"
  },
  {
    "label": "setValues()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setValues(const Node& node, ShaderNode& shaderNode, GenContext& context)"
  },
  {
    "label": "addClassification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "addClassification(ShaderNode& node)"
  },
  {
    "label": "createVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "createVariables(const ShaderNode& node, GenContext& context, Shader& shader)"
  },
  {
    "label": "emitFunctionDefinition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitFunctionDefinition(const ShaderNode& node, GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "emitFunctionCall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitFunctionCall(const ShaderNode& node, GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "emitOutputVariables()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "emitOutputVariables(const ShaderNode& node, GenContext& context, ShaderStage& stage)"
  },
  {
    "label": "getGraph()",
    "kind": "Method",
    "detail": "Function (ShaderGraph*)",
    "insertText": "getGraph()"
  },
  {
    "label": "isEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isEditable(const ShaderInput&)"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (protected : string _name ; size_t _hash ; } ; class NopNode : public ShaderNodeImpl { public : ShaderNodeImplPtr)",
    "insertText": "create()"
  }
]