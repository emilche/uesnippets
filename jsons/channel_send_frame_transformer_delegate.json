[
  {
    "label": "ChannelSendFrameTransformerDelegate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ChannelSendFrameTransformerDelegate"
  },
  {
    "label": "int32_t()",
    "kind": "Method",
    "detail": "Function (# ifndef AUDIO_CHANNEL_SEND_FRAME_TRANSFORMER_DELEGATE_H_ # define AUDIO_CHANNEL_SEND_FRAME_TRANSFORMER_DELEGATE_H_ # include<memory> # include \" api / frame_transformer_interface . h \" # include \" api / sequence_checker . h \" # include \" modules / audio_coding / include / audio_coding_module_typedefs . h \" # include \" rtc_base / buffer . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / task_queue . h \" namespace webrtc { class ChannelSendFrameTransformerDelegate : public TransformedFrameCallback { public : using SendFrameCallback = std::function<)",
    "insertText": "int32_t(AudioFrameType frameType, uint8_t payloadType, uint32_t rtp_timestamp, rtc::ArrayView<const uint8_t> payload, int64_t absolute_capture_timestamp_ms)"
  },
  {
    "label": "ChannelSendFrameTransformerDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChannelSendFrameTransformerDelegate(SendFrameCallback send_frame_callback, rtc::scoped_refptr<FrameTransformerInterface> frame_transformer, rtc::TaskQueue* encoder_queue)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Transform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Transform(AudioFrameType frame_type, uint8_t payload_type, uint32_t rtp_timestamp, uint32_t rtp_start_timestamp, const uint8_t* payload_data, size_t payload_size, int64_t absolute_capture_timestamp_ms, uint32_t ssrc)"
  },
  {
    "label": "OnTransformedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTransformedFrame(std::unique_ptr<TransformableFrameInterface> frame)"
  },
  {
    "label": "SendFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendFrame(std::unique_ptr<TransformableFrameInterface> frame)"
  },
  {
    "label": "ChannelSendFrameTransformerDelegate()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "ChannelSendFrameTransformerDelegate()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : Mutex send_lock_ ; SendFrameCallback send_frame_callback_)",
    "insertText": "RTC_GUARDED_BY(send_lock_)"
  }
]