[
  {
    "label": "UWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidget"
  },
  {
    "label": "FWidgetReference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWidgetReference"
  },
  {
    "label": "FUniformGridSlotExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniformGridSlotExtension"
  },
  {
    "label": "FUniformGridSlotExtension()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" DesignerExtension . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Templates / SharedPointer . h \" class UWidget ; struct FWidgetReference ; class FUniformGridSlotExtension : public FDesignerExtension { public :)",
    "insertText": "FUniformGridSlotExtension()"
  },
  {
    "label": "CanExtendSelection()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanExtendSelection(const TArray< FWidgetReference >& Selection)"
  },
  {
    "label": "ExtendSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendSelection(const TArray< FWidgetReference >& Selection, TArray< TSharedRef<FDesignerSurfaceElement> >& SurfaceElements)"
  },
  {
    "label": "HandleShiftRow()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "HandleShiftRow(int32 ShiftAmount)"
  },
  {
    "label": "HandleShiftColumn()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleShiftColumn(int32 ShiftAmount)"
  },
  {
    "label": "ShiftRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShiftRow(UWidget* Widget, int32 ShiftAmount)"
  },
  {
    "label": "ShiftColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShiftColumn(UWidget* Widget, int32 ShiftAmount)"
  }
]