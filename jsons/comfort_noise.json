[
  {
    "label": "AudioMultiVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioMultiVector"
  },
  {
    "label": "DecoderDatabase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecoderDatabase"
  },
  {
    "label": "SyncBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SyncBuffer"
  },
  {
    "label": "Packet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Packet"
  },
  {
    "label": "ComfortNoise",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ComfortNoise"
  },
  {
    "label": "ReturnCodes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ReturnCodes"
  },
  {
    "label": "ComfortNoise()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_COMFORT_NOISE_H_ # define MODULES_AUDIO_CODING_NETEQ_COMFORT_NOISE_H_ # include<stddef . h> namespace webrtc { class AudioMultiVector ; class DecoderDatabase ; class SyncBuffer ; struct Packet ; class ComfortNoise { public : enum ReturnCodes { kOK = 0,kUnknownPayloadType,kInternalError,kMultiChannelNotSupported } ;)",
    "insertText": "ComfortNoise(int fs_hz, DecoderDatabase* decoder_database, SyncBuffer* sync_buffer) : fs_hz_(fs_hz), first_call_(true), overlap_length_(5 * fs_hz_ / 8000), decoder_database_(decoder_database), sync_buffer_(sync_buffer)"
  },
  {
    "label": "ComfortNoise()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ComfortNoise(const ComfortNoise&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ComfortNoise&)",
    "insertText": "operator(const ComfortNoise&)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "UpdateParameters()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "UpdateParameters(const Packet& packet)"
  },
  {
    "label": "Generate()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Generate(size_t requested_length, AudioMultiVector* output)"
  },
  {
    "label": "internal_error_code()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "internal_error_code()"
  }
]