[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "UDataflow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataflow"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UDataflowEdNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataflowEdNode"
  },
  {
    "label": "UMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterial"
  },
  {
    "label": "FGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGraph"
  },
  {
    "label": "FDataflowAssetEdit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataflowAssetEdit"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Dataflow / DataflowPreview . h \" # include \" Dataflow / DataflowCore . h \" # include \" EdGraph / EdGraph . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" DataflowObject . generated . h \" class FArchive ; class UDataflow ; class UObject ; class UDataflowEdNode ; class UMaterial ; namespace UE::Dataflow { class FGraph ; } class FDataflowAssetEdit { public : typedef TFunctionRef<)",
    "insertText": "void()"
  },
  {
    "label": "FDataflowAssetEdit()",
    "kind": "Method",
    "detail": "Function (UDataflow ;)",
    "insertText": "FDataflowAssetEdit(UDataflow *InAsset, FPostEditFunctionCallback InCallable)"
  },
  {
    "label": "FDataflowAssetEdit()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDataflowAssetEdit()"
  },
  {
    "label": "GetGraph()",
    "kind": "Method",
    "detail": "Function (UE::Dataflow::FGraph*)",
    "insertText": "GetGraph()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (private : FPostEditFunctionCallback PostEditCallback ; UDataflow* Asset ; } ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Construction,Simulation } ;)",
    "insertText": "UCLASS(BlueprintType, customconstructor, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "PostEditCallback()",
    "kind": "Method",
    "detail": "Function (TArray<TObjectPtr<const UDataflowEdNode>> RenderTargets ; TArray<TObjectPtr<const UDataflowEdNode>> WireframeRenderTargets ; TSharedPtr<UE::Dataflow::FGraph,ESPMode::ThreadSafe> Dataflow ; void)",
    "insertText": "PostEditCallback()"
  },
  {
    "label": "UDataflow()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UDataflow(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "IsEditorOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEditorOnly()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "CanEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanEditChange(const FProperty* InProperty)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetDataflow()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const UE::Dataflow::FGraph,ESPMode::ThreadSafe>)",
    "insertText": "GetDataflow()"
  },
  {
    "label": "UDataflow()",
    "kind": "Method",
    "detail": "Function (UDataflow* ThisNC = const_cast<)",
    "insertText": "UDataflow(this)"
  },
  {
    "label": "FindEdNodeByDataflowNodeGuid()",
    "kind": "Method",
    "detail": "Function (} TObjectPtr<const UDataflowEdNode>)",
    "insertText": "FindEdNodeByDataflowNodeGuid(const FGuid& Guid)"
  },
  {
    "label": "AddRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRenderTarget(TObjectPtr<const UDataflowEdNode>)"
  },
  {
    "label": "RemoveRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveRenderTarget(TObjectPtr<const UDataflowEdNode>)"
  },
  {
    "label": "GetRenderTargets()",
    "kind": "Method",
    "detail": "Function (const TArray<TObjectPtr<const UDataflowEdNode>>&)",
    "insertText": "GetRenderTargets()"
  },
  {
    "label": "RemoveWireframeRenderTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveWireframeRenderTarget(TObjectPtr<const UDataflowEdNode>)"
  },
  {
    "label": "GetWireframeRenderTargets()",
    "kind": "Method",
    "detail": "Function (const TArray<TObjectPtr<const UDataflowEdNode>>&)",
    "insertText": "GetWireframeRenderTargets()"
  },
  {
    "label": "IsPerNodeTransactionSerializationEnabled()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR bool)",
    "insertText": "IsPerNodeTransactionSerializationEnabled()"
  }
]