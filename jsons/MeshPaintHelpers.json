[
  {
    "label": "FMeshPaintParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMeshPaintParameters"
  },
  {
    "label": "UVertexColorImportOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVertexColorImportOptions"
  },
  {
    "label": "UTexture2D",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture2D"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "IMeshPaintGeometryAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMeshPaintGeometryAdapter"
  },
  {
    "label": "UPaintBrushSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPaintBrushSettings"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "UMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMeshComponent"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "UViewportInteractor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportInteractor"
  },
  {
    "label": "FViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewport"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FStaticMeshComponentLODInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshComponentLODInfo"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPerVertexPaintActionArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPerVertexPaintActionArgs"
  },
  {
    "label": "MESHPAINT_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MESHPAINT_API"
  },
  {
    "label": "FPaintRay",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPaintRay"
  },
  {
    "label": "RemoveInstanceVertexColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstanceVertexColors(UObject* Obj)"
  },
  {
    "label": "RemoveComponentInstanceVertexColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveComponentInstanceVertexColors(UStaticMeshComponent* StaticMeshComponent)"
  },
  {
    "label": "PropagateColorsToRawMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PropagateColorsToRawMesh(UStaticMesh* StaticMesh, int32 LODIndex, FStaticMeshComponentLODInfo& ComponentLODInfo)"
  },
  {
    "label": "GetVertexColorBufferSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetVertexColorBufferSize(UMeshComponent* MeshComponent, int32 LODIndex, bool bInstance)"
  },
  {
    "label": "GetVerticesForLOD()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "GetVerticesForLOD(const UStaticMesh* StaticMesh, int32 LODIndex)"
  },
  {
    "label": "GetColorDataForLOD()",
    "kind": "Method",
    "detail": "Function (TArray<FColor>)",
    "insertText": "GetColorDataForLOD(const UStaticMesh* StaticMesh, int32 LODIndex)"
  },
  {
    "label": "GetInstanceColorDataForLOD()",
    "kind": "Method",
    "detail": "Function (TArray<FColor>)",
    "insertText": "GetInstanceColorDataForLOD(const UStaticMeshComponent* MeshComponent, int32 LODIndex)"
  },
  {
    "label": "SetInstanceColorDataForLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceColorDataForLOD(UStaticMeshComponent* MeshComponent, int32 LODIndex, const TArray<FColor>& Colors)"
  },
  {
    "label": "SetInstanceColorDataForLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceColorDataForLOD(UStaticMeshComponent* MeshComponent, int32 LODIndex, const FColor FillColor, const FColor MaskColor)"
  },
  {
    "label": "FillStaticMeshVertexColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillStaticMeshVertexColors(UStaticMeshComponent* MeshComponent, int32 LODIndex, const FColor FillColor, const FColor MaskColor)"
  },
  {
    "label": "FillSkeletalMeshVertexColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillSkeletalMeshVertexColors(USkeletalMeshComponent* MeshComponent, int32 LODIndex, const FColor FillColor, const FColor MaskColor)"
  },
  {
    "label": "SetColorDataForLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColorDataForLOD(USkeletalMesh* SkeletalMesh, int32 LODIndex, const FColor FillColor, const FColor MaskColor)"
  },
  {
    "label": "ApplyFillWithMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFillWithMask(FColor& InOutColor, const FColor& MaskColor, const FColor& FillColor)"
  },
  {
    "label": "ImportVertexColorsFromTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportVertexColorsFromTexture(UMeshComponent* MeshComponent)"
  },
  {
    "label": "IsInVRMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInVRMode(const FEditorViewportClient* ViewportClient)"
  },
  {
    "label": "SetViewportColorMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewportColorMode(EMeshPaintColorViewMode ColorViewMode, FEditorViewportClient* ViewportClient)"
  },
  {
    "label": "SetRealtimeViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRealtimeViewport(bool bRealtime)"
  },
  {
    "label": "ForceRenderMeshLOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceRenderMeshLOD(UMeshComponent* Component, int32 LODIndex)"
  },
  {
    "label": "ClearMeshTextureOverrides()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMeshTextureOverrides(const IMeshPaintGeometryAdapter& GeometryInfo, UMeshComponent* InMeshComponent)"
  },
  {
    "label": "ApplyVertexColorsToAllLODs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVertexColorsToAllLODs(IMeshPaintGeometryAdapter& GeometryInfo, UMeshComponent* InMeshComponent)"
  },
  {
    "label": "ApplyVertexColorsToAllLODs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVertexColorsToAllLODs(IMeshPaintGeometryAdapter& GeometryInfo, UStaticMeshComponent* StaticMeshComponent)"
  },
  {
    "label": "ApplyVertexColorsToAllLODs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVertexColorsToAllLODs(IMeshPaintGeometryAdapter& GeometryInfo, USkeletalMeshComponent* SkeletalMeshComponent)"
  },
  {
    "label": "GetNumberOfLODs()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfLODs(const UMeshComponent* MeshComponent)"
  },
  {
    "label": "TryGetNumberOfLODs()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetNumberOfLODs(const UMeshComponent* MeshComponent, int32& OutNumLODs)"
  },
  {
    "label": "GetNumberOfUVs()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfUVs(const UMeshComponent* MeshComponent, int32 LODIndex)"
  },
  {
    "label": "DoesMeshComponentContainPerLODColors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesMeshComponentContainPerLODColors(const UMeshComponent* MeshComponent)"
  },
  {
    "label": "GetInstanceColorDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetInstanceColorDataInfo(const UStaticMeshComponent* StaticMeshComponent, int32 LODIndex, int32& OutTotalInstanceVertexColorBytes)"
  },
  {
    "label": "ApplyPerVertexPaintAction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyPerVertexPaintAction(FPerVertexPaintActionArgs& InArgs, FPerVertexPaintAction Action)"
  },
  {
    "label": "GetPerVertexPaintInfluencedVertices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPerVertexPaintInfluencedVertices(FPerVertexPaintActionArgs& InArgs, TSet<int32>& InfluencedVertices)"
  },
  {
    "label": "ApplyPerTrianglePaintAction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ApplyPerTrianglePaintAction(IMeshPaintGeometryAdapter* Adapter, const FVector& CameraPosition, const FVector& HitPosition, const UPaintBrushSettings* Settings, FPerTrianglePaintAction Action)"
  },
  {
    "label": "PaintVertex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PaintVertex(const FVector& InVertexPosition, const FMeshPaintParameters& InParams, FColor& InOutVertexColor)"
  },
  {
    "label": "ApplyVertexColorPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVertexColorPaint(const FMeshPaintParameters &InParams, const FLinearColor &OldColor, FLinearColor &NewColor, const float PaintAmount)"
  },
  {
    "label": "ApplyVertexWeightPaint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVertexWeightPaint(const FMeshPaintParameters &InParams, const FLinearColor &OldColor, const float PaintAmount, FLinearColor &NewColor)"
  },
  {
    "label": "GenerateColorForTextureWeight()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GenerateColorForTextureWeight(const int32 NumWeights, const int32 WeightIndex)"
  },
  {
    "label": "ComputePaintMultiplier()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputePaintMultiplier(float SquaredDistanceToVertex2D, float BrushStrength, float BrushInnerRadius, float BrushRadialFalloff, float BrushInnerDepth, float BrushDepthFallof, float VertexDepthToBrush)"
  },
  {
    "label": "IsPointInfluencedByBrush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPointInfluencedByBrush(const FVector& InPosition, const FMeshPaintParameters& InParams, float& OutSquaredDistanceToVertex2D, float& OutVertexDepthToBrush)"
  },
  {
    "label": "IsPointInfluencedByBrush()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPointInfluencedByBrush(const FVector2D& BrushSpacePosition, const float BrushRadiusSquared, float& OutInRangeValue)"
  },
  {
    "label": "ApplyBrushToVertex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyBrushToVertex(const FVector& VertexPosition, const FMatrix& InverseBrushMatrix, const float BrushRadius, const float BrushFalloffAmount, const float BrushStrength, const T& PaintValue, T& InOutValue)"
  },
  {
    "label": "RetrieveViewportPaintRays()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RetrieveViewportPaintRays(const FSceneView* View, FViewport* Viewport, FPrimitiveDrawInterface* PDI, TArray<FPaintRay>& OutPaintRays)"
  },
  {
    "label": "ImportVertexColorsToStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportVertexColorsToStaticMesh(UStaticMesh* StaticMesh, const UVertexColorImportOptions* Options, UTexture2D* Texture)"
  },
  {
    "label": "ImportVertexColorsToStaticMeshComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportVertexColorsToStaticMeshComponent(UStaticMeshComponent* StaticMeshComponent, const UVertexColorImportOptions* Options, UTexture2D* Texture)"
  },
  {
    "label": "ImportVertexColorsToSkeletalMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportVertexColorsToSkeletalMesh(USkeletalMesh* SkeletalMesh, const UVertexColorImportOptions* Options, UTexture2D* Texture)"
  },
  {
    "label": "PickVertexColorFromTextureData()",
    "kind": "Method",
    "detail": "Function (FColor)",
    "insertText": "PickVertexColorFromTextureData(const uint8* MipData, const FVector2D& UVCoordinate, const UTexture2D* Texture, const FColor ColorMask)"
  },
  {
    "label": "BrushSpacePosition2D()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "BrushSpacePosition2D(BrushSpacePosition.X, BrushSpacePosition.Y)"
  }
]