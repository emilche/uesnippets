[
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FTranslationPickerEditInputProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationPickerEditInputProcessor"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBox"
  },
  {
    "label": "SMultiLineEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMultiLineEditableTextBox"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "UTranslationUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTranslationUnit"
  },
  {
    "label": "UTranslationPickerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTranslationPickerSettings"
  },
  {
    "label": "FTranslationPickerSettingsManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTranslationPickerSettingsManager"
  },
  {
    "label": "FTranslationPickerTextItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTranslationPickerTextItem"
  },
  {
    "label": "STranslationPickerEditWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STranslationPickerEditWidget"
  },
  {
    "label": "STranslationPickerEditWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STranslationPickerEditWindow"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / GCObject . h \" # include \" UObject / Object . h \" # include \" UObject / UObjectGlobals . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # include \" TranslationPickerEditWindow . generated . h \" struct FGeometry ; struct FKeyEvent ; class FTranslationPickerEditInputProcessor ; class ITableRow ; class SBox ; class SMultiLineEditableTextBox ; class SSearchBox ; class STableViewBase ; class SWindow ; class UTranslationUnit ; # define LOCTEXT_NAMESPACE \" TranslationPicker \")",
    "insertText": "UCLASS(config = TranslationPickerSettings)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(config)"
  },
  {
    "label": "FTranslationPickerSettingsManager()",
    "kind": "Method",
    "detail": "Function (} ; class FTranslationPickerSettingsManager {)",
    "insertText": "FTranslationPickerSettingsManager()"
  },
  {
    "label": "UTranslationPickerSettings()",
    "kind": "Method",
    "detail": "Function (TranslationPickerSettingsObject = NewObject<)",
    "insertText": "UTranslationPickerSettings()"
  },
  {
    "label": "LoadConfig()",
    "kind": "Method",
    "detail": "Function (TranslationPickerSettingsObject ->)",
    "insertText": "LoadConfig()"
  },
  {
    "label": "SaveSettings()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "SaveSettings()"
  },
  {
    "label": "SaveConfig()",
    "kind": "Method",
    "detail": "Function (TranslationPickerSettingsObject ->)",
    "insertText": "SaveConfig()"
  },
  {
    "label": "LoadSettings()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LoadSettings()"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (} UTranslationPickerSettings*)",
    "insertText": "GetSettings()"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TranslationPickerSettingsManagerInstance =)",
    "insertText": "MakeShareable(new FTranslationPickerSettingsManager())"
  },
  {
    "label": "FTranslationPickerTextItem()",
    "kind": "Method",
    "detail": "Function (} return TranslationPickerSettingsManagerInstance ; } private : TSharedPtr<FTranslationPickerSettingsManager> TranslationPickerSettingsManagerInstance ; UTranslationPickerSettings* TranslationPickerSettingsObject ; } ; struct FTranslationPickerTextItem : public FGCObject {)",
    "insertText": "FTranslationPickerTextItem(const FText& InText, bool bAllowEditing) : PickedText(InText), bAllowEditing(bAllowEditing)"
  },
  {
    "label": "BuildTextItem()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FTranslationPickerTextItem>)",
    "insertText": "BuildTextItem(const FText& InText, bool bAllowEditing)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTranslationPickerTextItem& Other)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "GetTranslationUnitWithAnyChanges()",
    "kind": "Method",
    "detail": "Function (} UTranslationUnit*)",
    "insertText": "GetTranslationUnitWithAnyChanges()"
  },
  {
    "label": "CanSave()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSave()"
  },
  {
    "label": "SaveAndPreview()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "SaveAndPreview()"
  },
  {
    "label": "CopyNamespaceAndKey()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "CopyNamespaceAndKey()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTranslationPickerTextItem> Item ; } ; class STranslationPickerEditWindow : public SCompoundWidget {)",
    "insertText": "SLATE_BEGIN_ARGS(STranslationPickerEditWindow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<SWindow>, ParentWindow) SLATE_END_ARGS() virtual ~STranslationPickerEditWindow()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (const int32 DefaultEditWindowWidth ; const int32 DefaultEditWindowHeight ; private : class FTranslationPickerEditInputProcessor ; FReply)",
    "insertText": "Close()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Exit()"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "SaveAllAndExit()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "SaveAllAndExit()"
  },
  {
    "label": "UpdateListItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateListItems()"
  },
  {
    "label": "SetFocusPostConstruct()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "SetFocusPostConstruct(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "FilterBox_OnTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterBox_OnTextChanged(const FText& InText)"
  },
  {
    "label": "FilterBox_OnTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterBox_OnTextCommitted(const FText& InText, ETextCommit::Type CommitInfo)"
  },
  {
    "label": "TextListView_OnGenerateRow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "TextListView_OnGenerateRow(TSharedPtr<FTranslationPickerTextItem> InItem, const TSharedRef<STableViewBase>& OwnerTable)"
  }
]