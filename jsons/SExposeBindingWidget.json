[
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "SExposeBindingWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SExposeBindingWidget"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class ISequencer ; class SExposeBindingWidget : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SExposeBindingWidget)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<ISequencer> InWeakSequencer)"
  },
  {
    "label": "Reconstruct()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Reconstruct()"
  },
  {
    "label": "OnNewTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNewTextCommitted(const FText& InNewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "ExposeAsName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExposeAsName(FName InNewName)"
  },
  {
    "label": "RemoveFromExposedName()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "RemoveFromExposedName(FName InNameToRemove)"
  }
]