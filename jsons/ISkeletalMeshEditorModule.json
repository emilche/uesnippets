[
  {
    "label": "ISkeletalMeshEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISkeletalMeshEditorModule"
  },
  {
    "label": "USkeletalMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMesh"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Framework / MultiBox / MultiBoxExtender . h \" # include \" Toolkits / AssetEditorToolkit . h \" # include \" ISkeletalMeshEditor . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogSkeletalMeshEditor, Log, All)"
  },
  {
    "label": "CreateSkeletalMeshEditor()",
    "kind": "Method",
    "detail": "Function (class ISkeletalMeshEditorModule : public IModuleInterface,public IHasMenuExtensibility,public IHasToolBarExtensibility { public : TSharedRef<ISkeletalMeshEditor>)",
    "insertText": "CreateSkeletalMeshEditor(const EToolkitMode::Type Mode, const TSharedPtr<IToolkitHost>& InitToolkitHost, class USkeletalMesh* InSkeletalMesh)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(TSharedRef<FExtender>, FSkeletalMeshEditorToolbarExtender, const TSharedRef<FUICommandList> , TSharedRef<ISkeletalMeshEditor>)"
  },
  {
    "label": "GetAllSkeletalMeshEditorToolbarExtenders()",
    "kind": "Method",
    "detail": "Function (TArray<FSkeletalMeshEditorToolbarExtender>&)",
    "insertText": "GetAllSkeletalMeshEditorToolbarExtenders()"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSkeletalMeshEditorInitialized, TWeakPtr<ISkeletalMeshEditor>)"
  },
  {
    "label": "GetPostEditorInitDelegates()",
    "kind": "Method",
    "detail": "Function (TArray<FOnSkeletalMeshEditorInitialized>&)",
    "insertText": "GetPostEditorInitDelegates()"
  }
]