[
  {
    "label": "HMAC_size()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_HMAC_H # define HEADER_HMAC_H # include<openssl / opensslconf . h> # include<openssl / evp . h> # if OPENSSL_API_COMPAT<0 x10200000L # define HMAC_MAX_MD_CBLOCK 1 2 8 # endif # ifdef __cplusplus \" C \" { # endif size_t)",
    "insertText": "HMAC_size(const HMAC_CTX *e)"
  },
  {
    "label": "HMAC_CTX_new()",
    "kind": "Method",
    "detail": "Function (HMAC_CTX*)",
    "insertText": "HMAC_CTX_new(void)"
  },
  {
    "label": "HMAC_CTX_reset()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HMAC_CTX_reset(HMAC_CTX *ctx)"
  },
  {
    "label": "HMAC_CTX_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HMAC_CTX_free(HMAC_CTX *ctx)"
  },
  {
    "label": "DEPRECATEDIN_1_1_0()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEPRECATEDIN_1_1_0(__owur int HMAC_Init(HMAC_CTX *ctx, const void *key, int len, const EVP_MD *md)) int HMAC_Init_ex(HMAC_CTX *ctx, const void *key, int len, const EVP_MD *md, ENGINE *impl)"
  },
  {
    "label": "HMAC_Update()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HMAC_Update(HMAC_CTX *ctx, const unsigned char *data, size_t len)"
  },
  {
    "label": "HMAC_Final()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "HMAC_Final(HMAC_CTX *ctx, unsigned char *md, unsigned int *len)"
  },
  {
    "label": "HMAC()",
    "kind": "Method",
    "detail": "Function (unsigned char*)",
    "insertText": "HMAC(const EVP_MD *evp_md, const void *key, int key_len, const unsigned char *d, size_t n, unsigned char *md, unsigned int *md_len)"
  },
  {
    "label": "HMAC_CTX_copy()",
    "kind": "Method",
    "detail": "Function (__owur int)",
    "insertText": "HMAC_CTX_copy(HMAC_CTX *dctx, HMAC_CTX *sctx)"
  },
  {
    "label": "HMAC_CTX_set_flags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HMAC_CTX_set_flags(HMAC_CTX *ctx, unsigned long flags)"
  },
  {
    "label": "HMAC_CTX_get_md()",
    "kind": "Method",
    "detail": "Function (const EVP_MD*)",
    "insertText": "HMAC_CTX_get_md(const HMAC_CTX *ctx)"
  }
]