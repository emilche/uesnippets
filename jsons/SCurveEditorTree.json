[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "ITableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableRow"
  },
  {
    "label": "SHeaderRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHeaderRow"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "CURVEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CURVEEDITOR_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" CurveEditorTreeTraits . h \" # include \" CurveEditorTypes . h \" # include \" Delegates / Delegate . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / PlatformCrt . h \" # include \" Input / Reply . h \" # include \" Misc / Optional . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STreeView . h \" class FCurveEditor ; class ITableRow ; class SHeaderRow ; class STableViewBase ; struct FGeometry ; struct FKeyEvent ; class SCurveEditorTree : public STreeView<FCurveEditorTreeItemID> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCurveEditorTree) : _SelectColumnWidth(24.f)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(float, SelectColumnWidth) SLATE_EVENT(FOnMouseButtonDoubleClick, OnMouseButtonDoubleClick) SLATE_EVENT(FOnTableViewScrolled, OnTreeViewScrolled) SLATE_EVENT(FOnContextMenuOpening, OnContextMenuOpening) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedPtr<FCurveEditor> InCurveEditor)"
  },
  {
    "label": "GetSourceItems()",
    "kind": "Method",
    "detail": "Function (const TArray<FCurveEditorTreeItemID>&)",
    "insertText": "GetSourceItems()"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "GetTreeItemChildren()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "GetTreeItemChildren(FCurveEditorTreeItemID Parent, TArray<FCurveEditorTreeItemID>& OutChildren)"
  },
  {
    "label": "OnTreeSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTreeSelectionChanged(FCurveEditorTreeItemID, ESelectInfo::Type)"
  },
  {
    "label": "SetItemExpansionRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemExpansionRecursive(FCurveEditorTreeItemID Model, bool bInExpansionState)"
  },
  {
    "label": "OnExpansionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExpansionChanged(FCurveEditorTreeItemID Model, bool bInExpansionState)"
  },
  {
    "label": "RefreshTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTree()"
  },
  {
    "label": "RefreshTreeWidgetSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshTreeWidgetSelection()"
  },
  {
    "label": "ToggleExpansionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleExpansionState(bool bRecursive)"
  }
]