[
  {
    "label": "FBinaryHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBinaryHeap"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "static_assert(std::is_unsigned_v<IndexType>, \"FBinaryHeap only supports unsigned index types\")"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free()"
  },
  {
    "label": "Resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resize( uint32 NewHeapSize, uint32 NewIndexSize )"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pop()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add( KeyType Key, IndexType Index )"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update( KeyType Key, IndexType Index )"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove( IndexType Index )"
  },
  {
    "label": "ResizeHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeHeap( uint32 NewHeapSize )"
  },
  {
    "label": "ResizeIndexes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeIndexes( uint32 NewIndexSize )"
  },
  {
    "label": "UpHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpHeap( IndexType HeapIndex )"
  },
  {
    "label": "DownHeap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DownHeap( IndexType HeapIndex )"
  },
  {
    "label": "ResetInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetInternal()"
  }
]