[
  {
    "label": "FTopologicalFace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalFace"
  },
  {
    "label": "FTopologicalEdge",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalEdge"
  },
  {
    "label": "FTopologicalLoop",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTopologicalLoop"
  },
  {
    "label": "FFaceAnalyzerChronos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFaceAnalyzerChronos"
  },
  {
    "label": "FEdgeSegment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEdgeSegment"
  },
  {
    "label": "FThinFaceContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThinFaceContext"
  },
  {
    "label": "FFaceAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFaceAnalyzer"
  },
  {
    "label": "ProjectPointOnSegment()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "ProjectPointOnSegment(PointToProject, Points[ELimit::Start], Points[ELimit::End], SegmentU, true)"
  },
  {
    "label": "IsThinFace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsThinFace(double& OutGapSize)"
  },
  {
    "label": "BuildLoopSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildLoopSegments(Topo::FThinFaceContext& Context)"
  },
  {
    "label": "FindClosedSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindClosedSegments(Topo::FThinFaceContext& Context)"
  },
  {
    "label": "Analyze()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Analyze(Topo::FThinFaceContext& Context)"
  },
  {
    "label": "DisplayCloseSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayCloseSegments(Topo::FThinFaceContext& Context)"
  },
  {
    "label": "DisplayLoopSegments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayLoopSegments(Topo::FThinFaceContext& Context)"
  }
]