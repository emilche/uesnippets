[
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" vdecmpeg4_Types . h \" namespace vdecmpeg4 { typedef int32 VIDError ; # define)",
    "insertText": "_VID_MAKE_ERROR(_rc) ((VIDError)(0x80000000 | (_rc)))"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_GENERIC =)",
    "insertText": "_VID_MAKE_ERROR(0x1)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_OUT_OF_MEMORY =)",
    "insertText": "_VID_MAKE_ERROR(0x2)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_NOT_VIDEO_STREAM =)",
    "insertText": "_VID_MAKE_ERROR(0x10)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_BAD_VIDEO_OBJECT =)",
    "insertText": "_VID_MAKE_ERROR(0x11)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_WIDTH_OR_HEIGHT_LESS_THAN_32 =)",
    "insertText": "_VID_MAKE_ERROR(0x100)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_INVALID_WIDTH_OR_HEIGHT =)",
    "insertText": "_VID_MAKE_ERROR(0x101)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_WIDTH_OR_HEIGHT_NOT_MULTIPLE_OF_16 =)",
    "insertText": "_VID_MAKE_ERROR(0x102)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_INTERLACED_NOT_SUPPORTED =)",
    "insertText": "_VID_MAKE_ERROR(0x103)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_SETUP_PLATFORM_DATA_INVALID =)",
    "insertText": "_VID_MAKE_ERROR(0x200)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_SETUP_NUMBER_OF_VID_BUFFERS_INVALID =)",
    "insertText": "_VID_MAKE_ERROR(0x201)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_DECODE_INVALID_VOP =)",
    "insertText": "_VID_MAKE_ERROR(0x1000)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_DECODE_STUFFING_NOT_SUPPORTED =)",
    "insertText": "_VID_MAKE_ERROR(0x1001)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_DECODE_GMC_NOT_ENABLED =)",
    "insertText": "_VID_MAKE_ERROR(0x1010)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_DECODE_NO_VID_BUFFER_AVAILABLE =)",
    "insertText": "_VID_MAKE_ERROR(0x1020)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_MULTITHREADING_INIT =)",
    "insertText": "_VID_MAKE_ERROR(0x9000)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_NOT_SET =)",
    "insertText": "_VID_MAKE_ERROR(0xF001)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_EOF =)",
    "insertText": "_VID_MAKE_ERROR(0xF002)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_ERROR =)",
    "insertText": "_VID_MAKE_ERROR(0xF003)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_UNDERFLOW =)",
    "insertText": "_VID_MAKE_ERROR(0xF004)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_VOL_INVALID_SHAPE =)",
    "insertText": "_VID_MAKE_ERROR(0xF010)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_VOP_WITHOUT_VOL =)",
    "insertText": "_VID_MAKE_ERROR(0xF020)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_VOP_NOT_CODED =)",
    "insertText": "_VID_MAKE_ERROR(0xF021)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_VOP_INVALID_SCALABILITY =)",
    "insertText": "_VID_MAKE_ERROR(0xF022)"
  },
  {
    "label": "_VID_MAKE_ERROR()",
    "kind": "Method",
    "detail": "Function (VIDError VID_ERROR_STREAM_VOP_FRAME_SKIPPED =)",
    "insertText": "_VID_MAKE_ERROR(0xF023)"
  }
]