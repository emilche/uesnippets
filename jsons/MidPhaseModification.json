[
  {
    "label": "FCollisionConstraintAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionConstraintAllocator"
  },
  {
    "label": "FParticlePairMidPhase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticlePairMidPhase"
  },
  {
    "label": "FMidPhaseModifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMidPhaseModifier"
  },
  {
    "label": "FMidPhaseModifierAccessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMidPhaseModifierAccessor"
  },
  {
    "label": "CHAOS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOS_API"
  },
  {
    "label": "FMidPhaseModifierParticleRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMidPhaseModifierParticleRange"
  },
  {
    "label": "FMidPhaseModifier()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" # include \" Chaos / Collision / ParticlePairMidPhase . h \" # include \" ParticleHandleFwd . h \" namespace Chaos { namespace Private { class FCollisionConstraintAllocator ; } class FParticlePairMidPhase ; class FMidPhaseModifier ; class FMidPhaseModifierAccessor ; class FMidPhaseModifier { public :)",
    "insertText": "FMidPhaseModifier() : MidPhase(nullptr) , Accessor(nullptr)"
  },
  {
    "label": "FMidPhaseModifier()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMidPhaseModifier(FParticlePairMidPhase* InMidPhase, FMidPhaseModifierAccessor* InAccessor) : MidPhase(InMidPhase) , Accessor(InAccessor)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "DisableCCD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableCCD()"
  },
  {
    "label": "DisableConvexOptimization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableConvexOptimization()"
  },
  {
    "label": "GetParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParticles(FGeometryParticleHandle** Particle0, FGeometryParticleHandle** Particle1)"
  },
  {
    "label": "GetOtherParticle()",
    "kind": "Method",
    "detail": "Function (FGeometryParticleHandle*)",
    "insertText": "GetOtherParticle(const FGeometryParticleHandle* InParticle)"
  },
  {
    "label": "FMidPhaseModifierParticleIterator()",
    "kind": "Method",
    "detail": "Function (private : FParticlePairMidPhase* MidPhase ; FMidPhaseModifierAccessor* Accessor ; } ; class FMidPhaseModifierParticleIterator { public :)",
    "insertText": "FMidPhaseModifierParticleIterator(FMidPhaseModifierAccessor* InAccessor, TGeometryParticleHandle<FReal, 3>* InParticle, int32 InMidPhaseIndex = 0) : Particle(InParticle) , Accessor(InAccessor) , MidPhaseIndex(InMidPhaseIndex) , PairModifier(Particle->ParticleCollisions().GetMidPhase(MidPhaseIndex), Accessor)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FMidPhaseModifier&)",
    "insertText": "operator()"
  },
  {
    "label": "FMidPhaseModifier()",
    "kind": "Method",
    "detail": "Function (+ + MidPhaseIndex ; PairModifier =)",
    "insertText": "FMidPhaseModifier(Particle->ParticleCollisions().GetMidPhase(MidPhaseIndex), Accessor)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMidPhaseModifierParticleIterator& Other)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} private : TGeometryParticleHandle<FReal,3>* Particle ; FMidPhaseModifierAccessor* Accessor ; int32 MidPhaseIndex ; FMidPhaseModifier PairModifier ; class FMidPhaseModifierParticleRange ; } ; class FMidPhaseModifierParticleRange { public : FMidPhaseModifierParticleIterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (FMidPhaseModifierParticleIterator)",
    "insertText": "end()"
  },
  {
    "label": "FMidPhaseModifierParticleRange()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FMidPhaseModifierParticleRange(FMidPhaseModifierAccessor* InAccessor, FGeometryParticleHandle* InParticle) : Accessor(InAccessor) , Particle(InParticle)"
  },
  {
    "label": "FMidPhaseModifierAccessor()",
    "kind": "Method",
    "detail": "Function (} FMidPhaseModifierAccessor* Accessor ; FGeometryParticleHandle* Particle ; class FMidPhaseModifierAccessor ; } ; class FMidPhaseModifierAccessor { public :)",
    "insertText": "FMidPhaseModifierAccessor(Private::FCollisionConstraintAllocator& InConstraintAllocator) : ConstraintAllocator(InConstraintAllocator)"
  },
  {
    "label": "GetMidPhases()",
    "kind": "Method",
    "detail": "Function (} FMidPhaseModifierParticleRange)",
    "insertText": "GetMidPhases(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "GetMidPhase()",
    "kind": "Method",
    "detail": "Function (FMidPhaseModifier)",
    "insertText": "GetMidPhase(FGeometryParticleHandle* Particle0, FGeometryParticleHandle* Particle1)"
  },
  {
    "label": "VisitMidPhases()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisitMidPhases(const TFunction<void(FMidPhaseModifier&)>& Visitor)"
  }
]