[
  {
    "label": "DataChannelInit",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DataChannelInit"
  },
  {
    "label": "DataBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DataBuffer"
  },
  {
    "label": "DataChannelObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataChannelObserver"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "DataState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DataState"
  },
  {
    "label": "DataBuffer()",
    "kind": "Method",
    "detail": "Function (# ifndef API_DATA_CHANNEL_INTERFACE_H_ # define API_DATA_CHANNEL_INTERFACE_H_ # include<stddef . h> # include<stdint . h> # include<string> # include \" absl / types / optional . h \" # include \" api / priority . h \" # include \" api / rtc_error . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / copy_on_write_buffer . h \" # include \" rtc_base / ref_count . h \" # include \" rtc_base / system / rtc_export . h \" namespace webrtc { struct DataChannelInit { bool reliable = false ; bool ordered = true ; absl::optional<int> maxRetransmitTime ; absl::optional<int> maxRetransmits ; std::string protocol ; bool negotiated = false ; int id = - 1 ; absl::optional<Priority> priority ; } ; struct DataBuffer {)",
    "insertText": "DataBuffer(const rtc::CopyOnWriteBuffer& data, bool binary) : data(data), binary(binary)"
  },
  {
    "label": "DataBuffer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DataBuffer(const std::string& text) : data(text.data(), text.length()), binary(false)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "size()"
  },
  {
    "label": "OnStateChange()",
    "kind": "Method",
    "detail": "Function (} rtc::CopyOnWriteBuffer data ; bool binary ; } ; class DataChannelObserver { public : void)",
    "insertText": "OnStateChange()"
  },
  {
    "label": "OnMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMessage(const DataBuffer& buffer)"
  },
  {
    "label": "OnBufferedAmountChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBufferedAmountChange(uint64_t sent_data_size)"
  },
  {
    "label": "DataChannelObserver()",
    "kind": "Method",
    "detail": "Function (} protected : ~)",
    "insertText": "DataChannelObserver()"
  },
  {
    "label": "DataStateString()",
    "kind": "Method",
    "detail": "Function (} ; class RTC_EXPORT DataChannelInterface : public rtc::RefCountInterface { public : enum DataState { kConnecting,kOpen,kClosing,kClosed } ; const char*)",
    "insertText": "DataStateString(DataState state)"
  },
  {
    "label": "UnregisterObserver()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterObserver()"
  },
  {
    "label": "label()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "label()"
  },
  {
    "label": "reliable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "reliable()"
  },
  {
    "label": "ordered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ordered()"
  },
  {
    "label": "maxRetransmitTime()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "maxRetransmitTime()"
  },
  {
    "label": "maxRetransmits()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "maxRetransmits()"
  },
  {
    "label": "maxRetransmitsOpt()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "maxRetransmitsOpt()"
  },
  {
    "label": "maxPacketLifeTime()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "maxPacketLifeTime()"
  },
  {
    "label": "protocol()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "protocol()"
  },
  {
    "label": "negotiated()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "negotiated()"
  },
  {
    "label": "id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "id()"
  },
  {
    "label": "priority()",
    "kind": "Method",
    "detail": "Function (Priority)",
    "insertText": "priority()"
  },
  {
    "label": "error()",
    "kind": "Method",
    "detail": "Function (RTCError)",
    "insertText": "error()"
  },
  {
    "label": "messages_sent()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "messages_sent()"
  },
  {
    "label": "bytes_sent()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "bytes_sent()"
  },
  {
    "label": "messages_received()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "messages_received()"
  },
  {
    "label": "bytes_received()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "bytes_received()"
  },
  {
    "label": "buffered_amount()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "buffered_amount()"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "Send()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Send(const DataBuffer& buffer)"
  },
  {
    "label": "MaxSendQueueSize()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "MaxSendQueueSize()"
  },
  {
    "label": "DataChannelInterface()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "DataChannelInterface()"
  }
]