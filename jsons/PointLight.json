[
  {
    "label": "APointLight",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APointLight"
  },
  {
    "label": "UPointLightComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPointLightComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / Light . h \" # include \" PointLight . generated . h \")",
    "insertText": "UCLASS(ClassGroup=(Lights, PointLights), ComponentWrapperClass, MinimalAPI, meta=(ChildCanTick))"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category=\"Light\", meta=(ExposeFunctionCategories=\"PointLight,Rendering|Lighting\"))"
  },
  {
    "label": "EditorApplyScale()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "EditorApplyScale(const FVector& DeltaScale, const FVector* PivotLocation, bool bAltDown, bool bShiftDown, bool bCtrlDown)"
  },
  {
    "label": "LoadedFromAnotherClass()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR void)",
    "insertText": "LoadedFromAnotherClass(const FName& OldClassName)"
  }
]