[
  {
    "label": "RtpPacket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtpPacket"
  },
  {
    "label": "RtpFileReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpFileReader"
  },
  {
    "label": "FileFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FileFormat"
  },
  {
    "label": "RtpFileReader()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_RTP_FILE_READER_H_ # define TEST_RTP_FILE_READER_H_ # include<set> # include<string> # include \" absl / strings / string_view . h \" namespace webrtc { namespace test { struct RtpPacket { const size_t kMaxPacketBufferSize = 3 5 0 0 ; uint8_t data [ kMaxPacketBufferSize ] ; size_t length ; size_t original_length ; uint32_t time_ms ; } ; class RtpFileReader { public : enum FileFormat { kPcap,kRtpDump,kLengthPacketInterleaved } ; ~)",
    "insertText": "RtpFileReader()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} RtpFileReader*)",
    "insertText": "Create(FileFormat format, const uint8_t* data, size_t size, const std::set<uint32_t>& ssrc_filter)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (RtpFileReader*)",
    "insertText": "Create(FileFormat format, absl::string_view filename)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (RtpFileReader*)",
    "insertText": "Create(FileFormat format, absl::string_view filename, const std::set<uint32_t>& ssrc_filter)"
  },
  {
    "label": "NextPacket()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NextPacket(RtpPacket* packet)"
  }
]