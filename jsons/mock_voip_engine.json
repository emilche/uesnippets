[
  {
    "label": "MockVoipBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipBase"
  },
  {
    "label": "MockVoipCodec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipCodec"
  },
  {
    "label": "MockVoipDtmf",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipDtmf"
  },
  {
    "label": "MockVoipNetwork",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipNetwork"
  },
  {
    "label": "MockVoipStatistics",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipStatistics"
  },
  {
    "label": "MockVoipVolumeControl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipVolumeControl"
  },
  {
    "label": "MockVoipEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockVoipEngine"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (# ifndef API_VOIP_TEST_MOCK_VOIP_ENGINE_H_ # define API_VOIP_TEST_MOCK_VOIP_ENGINE_H_ # include<map> # include \" absl / types / optional . h \" # include \" api / array_view . h \" # include \" api / voip / voip_base . h \" # include \" api / voip / voip_codec . h \" # include \" api / voip / voip_dtmf . h \" # include \" api / voip / voip_engine . h \" # include \" api / voip / voip_network . h \" # include \" api / voip / voip_statistics . h \" # include \" api / voip / voip_volume_control . h \" # include \" test / gmock . h \" namespace webrtc { class MockVoipBase : public VoipBase { public :)",
    "insertText": "MOCK_METHOD(ChannelId, CreateChannel, (Transport*, absl::optional<uint32_t>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, ReleaseChannel, (ChannelId), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, StartSend, (ChannelId), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, StopSend, (ChannelId), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, StartPlayout, (ChannelId), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, StopPlayout, (ChannelId), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (} ; class MockVoipCodec : public VoipCodec { public :)",
    "insertText": "MOCK_METHOD(VoipResult, SetSendCodec, (ChannelId, int, const SdpAudioFormat&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, SetReceiveCodecs, (ChannelId, (const std::map<int, SdpAudioFormat>&)), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (} ; class MockVoipDtmf : public VoipDtmf { public :)",
    "insertText": "MOCK_METHOD(VoipResult, RegisterTelephoneEventType, (ChannelId, int, int), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, SendDtmfEvent, (ChannelId, DtmfEvent, int), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (} ; class MockVoipNetwork : public VoipNetwork { public :)",
    "insertText": "MOCK_METHOD(VoipResult, ReceivedRTPPacket, (ChannelId channel_id, rtc::ArrayView<const uint8_t> rtp_packet), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, ReceivedRTCPPacket, (ChannelId channel_id, rtc::ArrayView<const uint8_t> rtcp_packet), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (} ; class MockVoipStatistics : public VoipStatistics { public :)",
    "insertText": "MOCK_METHOD(VoipResult, GetIngressStatistics, (ChannelId, IngressStatistics&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, GetChannelStatistics, (ChannelId channel_id, ChannelStatistics&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (} ; class MockVoipVolumeControl : public VoipVolumeControl { public :)",
    "insertText": "MOCK_METHOD(VoipResult, SetInputMuted, (ChannelId, bool), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, GetInputVolumeInfo, (ChannelId, VolumeInfo&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(VoipResult, GetOutputVolumeInfo, (ChannelId, VolumeInfo&), (override))"
  },
  {
    "label": "Base()",
    "kind": "Method",
    "detail": "Function (} ; class MockVoipEngine : public VoipEngine { public : VoipBase&)",
    "insertText": "Base()"
  }
]