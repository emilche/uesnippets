[
  {
    "label": "F",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "F"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_FUNCTIONAL_BIND_FRONT_H_ # define ABSL_FUNCTIONAL_BIND_FRONT_H_ # if)",
    "insertText": "defined(__cpp_lib_bind_front)"
  },
  {
    "label": "bind_front()",
    "kind": "Method",
    "detail": "Function (# else template<class F,class . . . BoundArgs> functional_internal::bind_front_t<F,BoundArgs . . .>)",
    "insertText": "bind_front(F&& func, BoundArgs&&... args)"
  }
]