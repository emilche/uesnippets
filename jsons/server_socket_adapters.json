[
  {
    "label": "AsyncProxyServerSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncProxyServerSocket"
  },
  {
    "label": "AsyncSSLServerSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncSSLServerSocket"
  },
  {
    "label": "AsyncSocksProxyServerSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AsyncSocksProxyServerSocket"
  },
  {
    "label": "State",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "State"
  },
  {
    "label": "AsyncProxyServerSocket()",
    "kind": "Method",
    "detail": "Function (# ifndef RTC_BASE_SERVER_SOCKET_ADAPTERS_H_ # define RTC_BASE_SERVER_SOCKET_ADAPTERS_H_ # include \" rtc_base / socket_adapters . h \" namespace rtc { class AsyncProxyServerSocket : public BufferedReadAdapter { public :)",
    "insertText": "AsyncProxyServerSocket(Socket* socket, size_t buffer_size)"
  },
  {
    "label": "AsyncProxyServerSocket()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "AsyncProxyServerSocket()"
  },
  {
    "label": "SendConnectResult()",
    "kind": "Method",
    "detail": "Function (sigslot::signal2<AsyncProxyServerSocket*,const SocketAddress&> SignalConnectRequest ; void)",
    "insertText": "SendConnectResult(int err, const SocketAddress& addr)"
  },
  {
    "label": "AsyncSSLServerSocket()",
    "kind": "Method",
    "detail": "Function (} ; class AsyncSSLServerSocket : public BufferedReadAdapter { public :)",
    "insertText": "AsyncSSLServerSocket(Socket* socket)"
  },
  {
    "label": "AsyncSSLServerSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncSSLServerSocket(const AsyncSSLServerSocket&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AsyncSSLServerSocket&)",
    "insertText": "operator(const AsyncSSLServerSocket&)"
  },
  {
    "label": "ProcessInput()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ProcessInput(char* data, size_t* len)"
  },
  {
    "label": "AsyncSocksProxyServerSocket()",
    "kind": "Method",
    "detail": "Function (} ; class AsyncSocksProxyServerSocket : public AsyncProxyServerSocket { public :)",
    "insertText": "AsyncSocksProxyServerSocket(Socket* socket)"
  },
  {
    "label": "AsyncSocksProxyServerSocket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncSocksProxyServerSocket(const AsyncSocksProxyServerSocket&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AsyncSocksProxyServerSocket&)",
    "insertText": "operator(const AsyncSocksProxyServerSocket&)"
  },
  {
    "label": "DirectSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DirectSend(const ByteBufferWriter& buf)"
  },
  {
    "label": "HandleHello()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHello(ByteBufferReader* request)"
  },
  {
    "label": "SendHelloReply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendHelloReply(uint8_t method)"
  },
  {
    "label": "HandleAuth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAuth(ByteBufferReader* request)"
  },
  {
    "label": "SendAuthReply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendAuthReply(uint8_t result)"
  },
  {
    "label": "HandleConnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleConnect(ByteBufferReader* request)"
  },
  {
    "label": "SendConnectResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendConnectResult(int result, const SocketAddress& addr)"
  },
  {
    "label": "Error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Error(int error)"
  }
]