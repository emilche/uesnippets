[
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "RTC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RTC_EXPORT"
  },
  {
    "label": "AdaptedVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "AdaptedVideoTrackSource()"
  },
  {
    "label": "AdaptedVideoTrackSource()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "AdaptedVideoTrackSource(int required_alignment)"
  },
  {
    "label": "OnFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrame(const webrtc::VideoFrame& frame)"
  },
  {
    "label": "OnFrameDropped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrameDropped()"
  },
  {
    "label": "AdaptFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AdaptFrame(int width,\n                  int height,\n                  int64_t time_us,\n                  int* out_width,\n                  int* out_height,\n                  int* crop_width,\n                  int* crop_height,\n                  int* crop_x,\n                  int* crop_y)"
  },
  {
    "label": "apply_rotation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "apply_rotation()"
  },
  {
    "label": "OnSinkWantsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSinkWantsChanged(const rtc::VideoSinkWants& wants)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (stats_)",
    "insertText": "RTC_GUARDED_BY(stats_mutex_)"
  }
]