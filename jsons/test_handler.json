[
  {
    "label": "ResourceContent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ResourceContent"
  },
  {
    "label": "TestHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestHandler"
  },
  {
    "label": "CompletionState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompletionState"
  },
  {
    "label": "Collection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Collection"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "UIThreadHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UIThreadHelper"
  },
  {
    "label": "CompletionState()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "CompletionState(int total)"
  },
  {
    "label": "TestComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestComplete()"
  },
  {
    "label": "WaitForTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForTests()"
  },
  {
    "label": "Collection()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "Collection(CompletionState* completion_state)"
  },
  {
    "label": "AddTestHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTestHandler(TestHandler* test_handler)"
  },
  {
    "label": "ExecuteTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteTests()"
  },
  {
    "label": "UIThreadHelper()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UIThreadHelper()"
  },
  {
    "label": "PostTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostTask(base::OnceClosure task)"
  },
  {
    "label": "PostDelayedTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDelayedTask(base::OnceClosure task, int delay_ms)"
  },
  {
    "label": "TaskHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TaskHelper(base::OnceClosure task)"
  },
  {
    "label": "TestHandler()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "TestHandler(CompletionState* completion_state = nullptr)"
  },
  {
    "label": "GetAllBrowsers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllBrowsers(BrowserMap* map)"
  },
  {
    "label": "ExecuteTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteTest()"
  },
  {
    "label": "SetupComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupComplete()"
  },
  {
    "label": "DestroyTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyTest()"
  },
  {
    "label": "OnTestTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTestTimeout(int timeout_ms, bool treat_as_error)"
  },
  {
    "label": "CreateBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBrowser(const CefString& url,\n                     CefRefPtr<CefRequestContext> request_context = nullptr,\n                     CefRefPtr<CefDictionaryValue> extra_info = nullptr)"
  },
  {
    "label": "CloseBrowser()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseBrowser(CefRefPtr<CefBrowser> browser, bool force_close)"
  },
  {
    "label": "AddResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResource(const std::string& url,\n                   const std::string& content,\n                   const std::string& mime_type)"
  },
  {
    "label": "AddResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResource(const std::string& url,\n                   const std::string& content,\n                   const std::string& mime_type,\n                   const ResourceContent::HeaderMap& header_map)"
  },
  {
    "label": "AddResourceEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddResourceEx(const std::string& url, const ResourceContent& content)"
  },
  {
    "label": "ClearResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearResources()"
  },
  {
    "label": "SetTestTimeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTestTimeout(int timeout_ms = 5000, bool treat_as_error = true)"
  },
  {
    "label": "TestComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TestComplete()"
  },
  {
    "label": "TestFailed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TestFailed()"
  }
]