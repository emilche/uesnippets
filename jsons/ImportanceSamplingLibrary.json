[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FImportanceTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportanceTexture"
  },
  {
    "label": "UImportanceSamplingLibrary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UImportanceSamplingLibrary"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(UTexture2D *SourceTexture, TEnumAsByte<EImportanceWeight::Type> WeightingFunc)"
  },
  {
    "label": "RandomSobolFloat()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "RandomSobolFloat(int32 Index, int32 Dimension, float Seed)"
  },
  {
    "label": "NextSobolFloat()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "NextSobolFloat(int32 Index, int32 Dimension, float PreviousValue)"
  },
  {
    "label": "MakeImportanceTexture()",
    "kind": "Method",
    "detail": "Function (FImportanceTexture)",
    "insertText": "MakeImportanceTexture(UTexture2D *Texture, TEnumAsByte<EImportanceWeight::Type> WeightingFunc)"
  },
  {
    "label": "BreakImportanceTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakImportanceTexture(const FImportanceTexture &ImportanceTexture, UTexture2D *&Texture, TEnumAsByte<EImportanceWeight::Type> &WeightingFunc)"
  },
  {
    "label": "ImportanceSample()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportanceSample(const FImportanceTexture &Texture, const FVector2D &Rand, int Samples, float Intensity,\n\t\tFVector2D &SamplePosition, FLinearColor &SampleColor, float &SampleIntensity, float &SampleSize)"
  }
]