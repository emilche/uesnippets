[
  {
    "label": "ADVANCEDWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ADVANCEDWIDGETS_API"
  },
  {
    "label": "FTrackedVector4PropertyHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" PropertyHandle . h \" class FTrackedVector4PropertyHandle { public :)",
    "insertText": "FTrackedVector4PropertyHandle()"
  },
  {
    "label": "FTrackedVector4PropertyHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTrackedVector4PropertyHandle(TWeakPtr<IPropertyHandle> InHandle)"
  },
  {
    "label": "GetHandle()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyHandle>)",
    "insertText": "GetHandle()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "SetValue(const FVector4& InValue, EPropertyValueSetFlags::Type Flags = EPropertyValueSetFlags::DefaultFlags)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FPropertyAccess::Result)",
    "insertText": "GetValue(FVector4& OutValue)"
  },
  {
    "label": "IsSettingValue()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSettingValue()"
  },
  {
    "label": "IsValidHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidHandle()"
  }
]