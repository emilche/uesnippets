[
  {
    "label": "NetEqDecodingTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEqDecodingTest"
  },
  {
    "label": "NetEqDecodingTestTwoInstances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEqDecodingTestTwoInstances"
  },
  {
    "label": "SetUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUp()"
  },
  {
    "label": "TearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TearDown()"
  },
  {
    "label": "OpenInputFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenInputFile(absl::string_view rtp_file)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process()"
  },
  {
    "label": "DecodeAndCompare()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DecodeAndCompare(absl::string_view rtp_file,\n                        absl::string_view output_checksum,\n                        absl::string_view network_stats_checksum,\n                        bool gen_ref)"
  },
  {
    "label": "PopulateRtpInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateRtpInfo(int frame_index,\n                              int timestamp,\n                              RTPHeader* rtp_info)"
  },
  {
    "label": "PopulateCng()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateCng(int frame_index,\n                          int timestamp,\n                          RTPHeader* rtp_info,\n                          uint8_t* payload,\n                          size_t* payload_len)"
  },
  {
    "label": "WrapTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WrapTest(uint16_t start_seq_no,\n                uint32_t start_timestamp,\n                const std::set<uint16_t>& drop_seq_numbers,\n                bool expect_seq_no_wrap,\n                bool expect_timestamp_wrap)"
  },
  {
    "label": "LongCngWithClockDrift()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LongCngWithClockDrift(double drift_factor,\n                             double network_freeze_ms,\n                             bool pull_audio_during_freeze,\n                             int delay_tolerance_ms,\n                             int max_time_to_speech_ms)"
  },
  {
    "label": "CreateSecondInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateSecondInstance()"
  }
]