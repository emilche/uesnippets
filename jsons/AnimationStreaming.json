[
  {
    "label": "UAnimStreamable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimStreamable"
  },
  {
    "label": "FAnimationStreamingManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationStreamingManager"
  },
  {
    "label": "FLoadedAnimationChunk",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLoadedAnimationChunk"
  },
  {
    "label": "IBulkDataIORequest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBulkDataIORequest"
  },
  {
    "label": "FStreamingAnimationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingAnimationData"
  },
  {
    "label": "FAnimationStreamingManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationStreamingManager"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "CleanUpIORequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUpIORequest()"
  },
  {
    "label": "FreeResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeResources()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(UAnimStreamable* InStreamableAnim, FAnimationStreamingManager* InAnimationStreamingManager)"
  },
  {
    "label": "UpdateStreamingStatus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateStreamingStatus()"
  },
  {
    "label": "BeginPendingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginPendingRequests(const TArray<uint32>& IndicesToLoad, const TArray<uint32>& IndicesToFree)"
  },
  {
    "label": "BlockTillAllRequestsFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BlockTillAllRequestsFinished(float TimeLimit = 0.0f)"
  },
  {
    "label": "FStreamingAnimationData()",
    "kind": "Method",
    "detail": "Function (memory)",
    "insertText": "FStreamingAnimationData(const FStreamingAnimationData& that)"
  },
  {
    "label": "FreeLoadedChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeLoadedChunk(FLoadedAnimationChunk& LoadedChunk)"
  },
  {
    "label": "ResetRequestedChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetRequestedChunks()"
  },
  {
    "label": "OnAsyncFileCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAsyncFileCallback(FStreamingAnimationData* StreamingAnimData, int32 ChunkIndex, int64 ReadSize, IBulkDataIORequest* ReadRequest, bool bWasCancelled)"
  }
]