[
  {
    "label": "CefDragData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefDragData"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CEF_DRAG_DATA_H_ # define CEF_INCLUDE_CEF_DRAG_DATA_H_ # pragma once # include<vector> # include \" include / cef_base . h \" # include \" include / cef_image . h \" # include \" include / cef_stream . h \" class CefDragData : public CefBaseRefCounted { public : CefRefPtr<CefDragData>)",
    "insertText": "Create()"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefDragData>)",
    "insertText": "Clone()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "IsLink()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLink()"
  },
  {
    "label": "IsFragment()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFragment()"
  },
  {
    "label": "IsFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFile()"
  },
  {
    "label": "GetLinkURL()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetLinkURL()"
  },
  {
    "label": "GetLinkTitle()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetLinkTitle()"
  },
  {
    "label": "GetLinkMetadata()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetLinkMetadata()"
  },
  {
    "label": "GetFragmentText()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetFragmentText()"
  },
  {
    "label": "GetFragmentHtml()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetFragmentHtml()"
  },
  {
    "label": "GetFragmentBaseURL()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetFragmentBaseURL()"
  },
  {
    "label": "GetFileName()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetFileName()"
  },
  {
    "label": "GetFileContents()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "GetFileContents(CefRefPtr<CefStreamWriter> writer)"
  },
  {
    "label": "GetFileNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFileNames(std::vector<CefString>& names)"
  },
  {
    "label": "SetLinkURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinkURL(const CefString& url)"
  },
  {
    "label": "SetLinkTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinkTitle(const CefString& title)"
  },
  {
    "label": "SetLinkMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinkMetadata(const CefString& data)"
  },
  {
    "label": "SetFragmentText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFragmentText(const CefString& text)"
  },
  {
    "label": "SetFragmentHtml()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFragmentHtml(const CefString& html)"
  },
  {
    "label": "SetFragmentBaseURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFragmentBaseURL(const CefString& base_url)"
  },
  {
    "label": "ResetFileContents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetFileContents()"
  },
  {
    "label": "AddFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFile(const CefString& path, const CefString& display_name)"
  },
  {
    "label": "GetImage()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefImage>)",
    "insertText": "GetImage()"
  },
  {
    "label": "GetImageHotspot()",
    "kind": "Method",
    "detail": "Function (CefPoint)",
    "insertText": "GetImageHotspot()"
  },
  {
    "label": "HasImage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasImage()"
  }
]