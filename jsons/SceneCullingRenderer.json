[
  {
    "label": "FSceneCulling",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCulling"
  },
  {
    "label": "FSceneInstanceCullResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullResult"
  },
  {
    "label": "FSceneInstanceCullingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullingQuery"
  },
  {
    "label": "FSceneCullingRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCullingRenderer"
  },
  {
    "label": "FSceneInstanceCullingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullingQuery"
  },
  {
    "label": "FSceneInstanceCullingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullingQuery"
  },
  {
    "label": "FCullingJob",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCullingJob"
  },
  {
    "label": "FSceneInstanceCullResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullResult"
  },
  {
    "label": "DebugRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugRender(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> Views)"
  },
  {
    "label": "FSceneInstanceCullingQuery()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSceneInstanceCullingQuery(FSceneCullingRenderer& InSceneCullingRenderer)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Add(uint32 FirstPrimaryView, uint32 NumPrimaryViews, uint32 MaxNumViews, const FCullingVolume& CullingVolume)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FRDGBuilder& GraphBuilder, bool bAllowAsync = true)"
  },
  {
    "label": "ComputeResult()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeResult()"
  }
]