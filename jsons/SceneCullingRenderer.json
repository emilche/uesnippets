[
  {
    "label": "FSceneCulling",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCulling"
  },
  {
    "label": "FSceneInstanceCullResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullResult"
  },
  {
    "label": "FSceneInstanceCullingQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneInstanceCullingQuery"
  },
  {
    "label": "FSceneCullingRenderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneCullingRenderer"
  },
  {
    "label": "FCullingJob",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCullingJob"
  },
  {
    "label": "BEGIN_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" SceneCulling . h \" class FSceneCulling ; class FSceneInstanceCullResult ; class FSceneInstanceCullingQuery ;)",
    "insertText": "BEGIN_SHADER_PARAMETER_STRUCT(FInstanceHierarchyParameters, ) SHADER_PARAMETER(uint32, NumCellsPerBlockLog2) SHADER_PARAMETER(uint32, CellBlockDimLog2) SHADER_PARAMETER(uint32, LocalCellCoordMask) SHADER_PARAMETER(int32, FirstLevel) SHADER_PARAMETER(uint32, bUseExplicitCellBounds) SHADER_PARAMETER_RDG_BUFFER_SRV( StructuredBuffer< FCellBlockData >, InstanceHierarchyCellBlockData) SHADER_PARAMETER_RDG_BUFFER_SRV( StructuredBuffer< FPackedCellHeader >, InstanceHierarchyCellHeaders) SHADER_PARAMETER_RDG_BUFFER_SRV( StructuredBuffer< uint >, InstanceHierarchyItemChunks) SHADER_PARAMETER_RDG_BUFFER_SRV( StructuredBuffer< uint >, InstanceIds) SHADER_PARAMETER_RDG_BUFFER_SRV( StructuredBuffer< float4 >, ExplicitCellBounds) END_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "FSceneCullingRenderer()",
    "kind": "Method",
    "detail": "Function (public : class FSceneInstanceCullingQuery ;)",
    "insertText": "FSceneCullingRenderer(FSceneCulling& InSceneCulling, ISceneRenderer &InSceneRenderer) : SceneCulling(InSceneCulling), SceneRenderer(InSceneRenderer)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "GetShaderParameters()",
    "kind": "Method",
    "detail": "Function (} FInstanceHierarchyParameters&)",
    "insertText": "GetShaderParameters(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "CullInstances()",
    "kind": "Method",
    "detail": "Function (FSceneInstanceCullingQuery*)",
    "insertText": "CullInstances(FRDGBuilder& GraphBuilder, const TConstArrayView<FConvexVolume>& ViewCullVolumes)"
  },
  {
    "label": "CullInstances()",
    "kind": "Method",
    "detail": "Function (FSceneInstanceCullingQuery*)",
    "insertText": "CullInstances(FRDGBuilder& GraphBuilder, const FConvexVolume& ViewCullVolume)"
  },
  {
    "label": "CreateInstanceQuery()",
    "kind": "Method",
    "detail": "Function (} FSceneInstanceCullingQuery*)",
    "insertText": "CreateInstanceQuery(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "DebugRender()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugRender(FRDGBuilder& GraphBuilder, TArrayView<FViewInfo> Views)"
  },
  {
    "label": "FSceneInstanceCullingQuery()",
    "kind": "Method",
    "detail": "Function (private : FSceneCulling& SceneCulling ; ISceneRenderer& SceneRenderer ; using FSpatialHash = FSceneCulling::FSpatialHash ; FInstanceHierarchyParameters ShaderParameters ; FRDGBuffer* CellHeadersRDG = nullptr ; FRDGBuffer* ItemChunksRDG = nullptr ; FRDGBuffer* InstanceIdsRDG = nullptr ; FRDGBuffer* CellBlockDataRDG = nullptr ; FRDGBuffer* ExplicitCellBoundsRDG = nullptr ; } ; class FSceneInstanceCullingQuery { public :)",
    "insertText": "FSceneInstanceCullingQuery(FSceneCullingRenderer& InSceneCullingRenderer)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Add(uint32 FirstPrimaryView, uint32 NumPrimaryViews, uint32 MaxNumViews, const FCullingVolume& CullingVolume)"
  },
  {
    "label": "Dispatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Dispatch(FRDGBuilder& GraphBuilder, bool bAllowAsync = true)"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (FSceneInstanceCullResult*)",
    "insertText": "GetResult()"
  },
  {
    "label": "IsAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAsync()"
  },
  {
    "label": "GetAsyncTaskHandle()",
    "kind": "Method",
    "detail": "Function (} UE::Tasks::FTask)",
    "insertText": "GetAsyncTaskHandle()"
  }
]