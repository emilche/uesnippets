[
  {
    "label": "FT_ValidatorRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_ValidatorRec_"
  },
  {
    "label": "FT_ValidationLevel_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FT_ValidationLevel_"
  },
  {
    "label": "FT_VALIDATOR()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTVALID_H__ # define __FTVALID_H__ # include<ft2build . h> # include FT_CONFIG_STANDARD_LIBRARY_H FT_BEGIN_HEADER typedef struct FT_ValidatorRec_ volatile* FT_Validator ; typedef enum FT_ValidationLevel_ { FT_VALIDATE_DEFAULT = 0,FT_VALIDATE_TIGHT,FT_VALIDATE_PARANOID } FT_ValidationLevel ; typedef struct FT_ValidatorRec_ { const FT_Byte* base ; const FT_Byte* limit ; FT_ValidationLevel level ; FT_Error error ; ft_jmp_buf jump_buffer ; } FT_ValidatorRec ; # define)",
    "insertText": "FT_VALIDATOR(x ) ((FT_Validator)( x )) FT_BASE( void ) ft_validator_init( FT_Validator valid, const FT_Byte* base, const FT_Byte* limit, FT_ValidationLevel level)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(FT_Int ) ft_validator_run( FT_Validator valid)"
  },
  {
    "label": "FT_BASE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_BASE(void ) ft_validator_error( FT_Validator valid, FT_Error error)"
  }
]