[
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SNotificationList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationList"
  },
  {
    "label": "FStoreConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStoreConnection"
  },
  {
    "label": "SConnectionWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SConnectionWindow"
  },
  {
    "label": "SConnectionWindow()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Async / TaskGraphFwd . h \" # include \" Input / Reply . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / SCompoundWidget . h \" # include<atomic> class SVerticalBox ; class SEditableTextBox ; class SNotificationList ; namespace UE::Trace { class FStoreConnection ; } namespace UE::Insights { class SConnectionWindow : public SCompoundWidget { public :)",
    "insertText": "SConnectionWindow()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SConnectionWindow)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<UE::Trace::FStoreConnection> InTraceStoreConnection)"
  },
  {
    "label": "ConstructConnectPanel()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "ConstructConnectPanel()"
  },
  {
    "label": "Connect_OnClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "Connect_OnClicked()"
  }
]