[
  {
    "label": "VProgram",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VProgram"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct VProgram : VCell {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VCell)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; uint32)",
    "insertText": "Num()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (} const VArray&)",
    "insertText": "GetName(uint32 Index)"
  },
  {
    "label": "GetPackage()",
    "kind": "Method",
    "detail": "Function (} VPackage&)",
    "insertText": "GetPackage(uint32 Index)"
  },
  {
    "label": "AddPackage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddPackage(FAllocationContext Context, VArray& Name, VPackage& Package)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (PackageMap .)",
    "insertText": "AddValue(Context, Name, VValue(Package))"
  },
  {
    "label": "LookupPackage()",
    "kind": "Method",
    "detail": "Function (} VPackage*)",
    "insertText": "LookupPackage(FUtf8StringView VersePackageName)"
  },
  {
    "label": "ResetPackages()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetPackages(FAllocationContext Context)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (PackageMap .)",
    "insertText": "Reset(Context)"
  },
  {
    "label": "AddTupleType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddTupleType(FAllocationContext Context, VArray& Name, VTupleType& TupleType)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (TupleTypeMap .)",
    "insertText": "AddValue(Context, Name, VValue(TupleType))"
  },
  {
    "label": "LookupTupleType()",
    "kind": "Method",
    "detail": "Function (} VTupleType*)",
    "insertText": "LookupTupleType(FUtf8StringView MangledName)"
  },
  {
    "label": "GetIntrinsics()",
    "kind": "Method",
    "detail": "Function (} const VIntrinsics&)",
    "insertText": "GetIntrinsics()"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} VProgram&)",
    "insertText": "New(FAllocationContext Context, uint32 Capacity)"
  },
  {
    "label": "VProgram()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "VProgram(FAllocationContext Context, uint32 Capacity) : VCell(Context, &GlobalTrivialEmergentType.Get(Context)) , PackageMap(Context, Capacity) , TupleTypeMap(Context, 256) , Intrinsics(Context, &VIntrinsics::New(Context))"
  }
]