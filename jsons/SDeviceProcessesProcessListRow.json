[
  {
    "label": "SDeviceProcessesProcessListRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDeviceProcessesProcessListRow"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Layout / Margin . h \" # include \" SlateOptMacros . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / SNullWidget . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Layout / SBox . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Widgets / Views / SExpanderArrow . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Processes / SDeviceProcessesProcessTreeNode . h \" # define LOCTEXT_NAMESPACE \" SDeviceProcessesProcessListRow \" class SDeviceProcessesProcessListRow : public SMultiColumnTableRow<TSharedPtr<FDeviceProcessesProcessTreeNode>> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SDeviceProcessesProcessListRow)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<FDeviceProcessesProcessTreeNode>, Node) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwnerTableView)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Node = InArgs . _Node ; SMultiColumnTableRow<TSharedPtr<FDeviceProcessesProcessTreeNode>)",
    "insertText": "Construct(FSuperRowType::FArguments(), InOwnerTableView)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (} public : BEGIN_SLATE_FUNCTION_BUILD_OPTIMIZATION TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget> ColumnContent =)",
    "insertText": "SNew(SBox) .Padding(FMargin(4.0f, 0.0f)) .VAlign(VAlign_Center) [ SNew(STextBlock) .Text(FText::FromString(Node->GetProcessInfo().Name))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else { return ColumnContent ; } } else)",
    "insertText": "if(ColumnName == TEXT(\"Parent\"))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(ColumnName == TEXT(\"PID\"))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(ColumnName == TEXT(\"Threads\"))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(ColumnName == TEXT(\"User\"))"
  }
]