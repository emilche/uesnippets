[
  {
    "label": "raw_ostream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "raw_ostream"
  },
  {
    "label": "StringMapEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringMapEntry"
  },
  {
    "label": "Comdat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Comdat"
  },
  {
    "label": "SelectionKind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "SelectionKind"
  },
  {
    "label": "Module",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Module"
  },
  {
    "label": "Comdat()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_IR_COMDAT_H # define LLVM_IR_COMDAT_H # include \" llvm / ADT / StringRef . h \" # include \" llvm / Support / Compiler . h \" namespace llvm { class raw_ostream ; template<ValueTy> class StringMapEntry ; class Comdat { public : enum SelectionKind { Any,ExactMatch,Largest,NoDuplicates,SameSize,} ;)",
    "insertText": "Comdat(Comdat &&C)"
  },
  {
    "label": "getSelectionKind()",
    "kind": "Method",
    "detail": "Function (SelectionKind)",
    "insertText": "getSelectionKind()"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (SK = Val ; } StringRef)",
    "insertText": "getName()"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "print(raw_ostream &OS)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump()"
  },
  {
    "label": "Comdat()",
    "kind": "Method",
    "detail": "Function (private : class Module ;)",
    "insertText": "Comdat()"
  },
  {
    "label": "Comdat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Comdat(SelectionKind SK, StringMapEntry<Comdat> *Name)"
  },
  {
    "label": "Comdat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Comdat(const Comdat &)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (StringMapEntry<Comdat>* Name ; SelectionKind SK ; } ; raw_ostream&)",
    "insertText": "operator(raw_ostream &OS, const Comdat &C)"
  },
  {
    "label": "print()",
    "kind": "Method",
    "detail": "Function (C .)",
    "insertText": "print(OS)"
  }
]