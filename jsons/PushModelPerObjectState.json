[
  {
    "label": "FPushModelPerObjectState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPushModelPerObjectState"
  },
  {
    "label": "FPushModelPerObjectState()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Net / Core / PushModel / PushModelMacros . h \" # if WITH_PUSH_MODEL # include \" CoreMinimal . h \" # include \" PushModelPerNetDriverState . h \" # include \" PushModelUtils . h \" # include \" Net / Core / PushModel / PushModel . h \" # include \" Containers / SparseArray . h \" # include \" UObject / ObjectKey . h \" namespace UEPushModelPrivate { class FPushModelPerObjectState { public :)",
    "insertText": "FPushModelPerObjectState(const FObjectKey InObjectKey, const uint16 InNumberOfProperties) : ObjectKey(InObjectKey) , DirtiedThisFrame(true, InNumberOfProperties) , bHasDirtyProperties(true)"
  },
  {
    "label": "FPushModelPerObjectState()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPushModelPerObjectState(FPushModelPerObjectState&& Other) : ObjectKey(Other.ObjectKey) , DirtiedThisFrame(MoveTemp(Other.DirtiedThisFrame)) , PerNetDriverStates(MoveTemp(Other.PerNetDriverStates)) , bHasDirtyProperties(Other.bHasDirtyProperties)"
  },
  {
    "label": "FPushModelPerObjectState()",
    "kind": "Method",
    "detail": "Function (Other . bHasDirtyProperties = false ; })",
    "insertText": "FPushModelPerObjectState(const FPushModelPerObjectState& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FPushModelPerObjectState&)",
    "insertText": "operator(const FPushModelPerObjectState& Other)"
  },
  {
    "label": "SetRecentlyCollectedGarbage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRecentlyCollectedGarbage()"
  },
  {
    "label": "MarkPropertyDirty()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "MarkPropertyDirty(const uint16 RepIndex)"
  },
  {
    "label": "PushDirtyStateToNetDrivers()",
    "kind": "Method",
    "detail": "Function (DirtiedThisFrame [ RepIndex ] = true ; bHasDirtyProperties = true ; } void)",
    "insertText": "PushDirtyStateToNetDrivers()"
  },
  {
    "label": "MarkPropertiesDirty()",
    "kind": "Method",
    "detail": "Function (NetDriverObject .)",
    "insertText": "MarkPropertiesDirty(DirtiedThisFrame)"
  },
  {
    "label": "ResetBitArray()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ResetBitArray(DirtiedThisFrame)"
  },
  {
    "label": "GetPerNetDriverState()",
    "kind": "Method",
    "detail": "Function (bHasDirtyProperties = false ; } } FPushModelPerNetDriverState&)",
    "insertText": "GetPerNetDriverState(FNetPushPerNetDriverId DriverId)"
  },
  {
    "label": "AddUninitialized()",
    "kind": "Method",
    "detail": "Function (FSparseArrayAllocationInfo AllocationInfo = PerNetDriverStates .)",
    "insertText": "AddUninitialized()"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(AllocationInfo.Pointer) FPushModelPerNetDriverState(static_cast<uint16>(DirtiedThisFrame.Num()))"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (PerNetDriverStates .)",
    "insertText": "RemoveAt(DriverId)"
  },
  {
    "label": "HasAnyNetDriverStates()",
    "kind": "Method",
    "detail": "Function (} const bool)",
    "insertText": "HasAnyNetDriverStates()"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CountBytes(FArchive& Ar)"
  },
  {
    "label": "CountBytes()",
    "kind": "Method",
    "detail": "Function (DirtiedThisFrame .)",
    "insertText": "CountBytes(Ar)"
  },
  {
    "label": "GetNumberOfProperties()",
    "kind": "Method",
    "detail": "Function (} } const int32)",
    "insertText": "GetNumberOfProperties()"
  },
  {
    "label": "GetObjectKey()",
    "kind": "Method",
    "detail": "Function (} const FObjectKey&)",
    "insertText": "GetObjectKey()"
  }
]