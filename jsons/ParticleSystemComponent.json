[
  {
    "label": "FParticleDynamicData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleDynamicData"
  },
  {
    "label": "FPrimitiveSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveSceneProxy"
  },
  {
    "label": "UParticleSystemReplay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemReplay"
  },
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "EventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EventData"
  },
  {
    "label": "FDynamicEmitterDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicEmitterDataBase"
  },
  {
    "label": "FDynamicEmitterReplayDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicEmitterReplayDataBase"
  },
  {
    "label": "FParticleEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterInstance"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPSCTickData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPSCTickData"
  },
  {
    "label": "FParticleSystemWorldManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSystemWorldManager"
  },
  {
    "label": "UAnimNotifyState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotifyState"
  },
  {
    "label": "FParticleDynamicData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleDynamicData"
  },
  {
    "label": "FParticleSystemSceneProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSystemSceneProxy"
  },
  {
    "label": "UAnimNotifyState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimNotifyState"
  },
  {
    "label": "UFXSystemAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFXSystemAsset"
  },
  {
    "label": "FDynamicEmitterDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicEmitterDataBase"
  },
  {
    "label": "FDynamicEmitterReplayDataBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicEmitterReplayDataBase"
  },
  {
    "label": "FParticleAnimTrailEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleAnimTrailEmitterInstance"
  },
  {
    "label": "EParticleSysParamType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleSysParamType"
  },
  {
    "label": "ParticleReplayState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ParticleReplayState"
  },
  {
    "label": "EParticleEventType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleEventType"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "FParticleSysParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleSysParam"
  },
  {
    "label": "EParticleSysParamType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleSysParamType"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FParticleEventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventData"
  },
  {
    "label": "UParticleModuleEventSendToGame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleEventSendToGame"
  },
  {
    "label": "FParticleExistingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleExistingData"
  },
  {
    "label": "FParticleEventSpawnData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventSpawnData"
  },
  {
    "label": "FParticleEventDeathData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventDeathData"
  },
  {
    "label": "FParticleEventCollideData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventCollideData"
  },
  {
    "label": "FParticleEventBurstData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventBurstData"
  },
  {
    "label": "FParticleEventKismetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventKismetData"
  },
  {
    "label": "FFXSystemSpawnParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFXSystemSpawnParameters"
  },
  {
    "label": "UFXSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFXSystemComponent"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UParticleSystemComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemComponent"
  },
  {
    "label": "FParticleSystemWorldManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleSystemWorldManager"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "ParticleSystemLODMethod",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ParticleSystemLODMethod"
  },
  {
    "label": "ParticleReplayState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ParticleReplayState"
  },
  {
    "label": "FParticleSysParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleSysParam"
  },
  {
    "label": "UParticleSystemReplay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystemReplay"
  },
  {
    "label": "FParticleEventSpawnData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventSpawnData"
  },
  {
    "label": "FParticleEventDeathData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventDeathData"
  },
  {
    "label": "FParticleEventCollideData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventCollideData"
  },
  {
    "label": "FParticleEventBurstData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventBurstData"
  },
  {
    "label": "FParticleEventKismetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEventKismetData"
  },
  {
    "label": "FFXSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFXSystem"
  },
  {
    "label": "FParticleSysParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleSysParam"
  },
  {
    "label": "FParticleSysParam",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleSysParam"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "EParticleSysParamType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EParticleSysParamType"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "FParticleAnimTrailEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleAnimTrailEmitterInstance"
  },
  {
    "label": "FRenderCommandFence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderCommandFence"
  },
  {
    "label": "FParticleEmitterInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleEmitterInstance"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "EForceAsyncWorkCompletion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EForceAsyncWorkCompletion"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UParticleSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleSystem"
  },
  {
    "label": "UParticleModuleEventSendToGame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleEventSendToGame"
  },
  {
    "label": "UParticleModuleEventSendToGame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleEventSendToGame"
  },
  {
    "label": "UParticleModuleEventSendToGame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleEventSendToGame"
  },
  {
    "label": "UParticleModuleEventSendToGame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UParticleModuleEventSendToGame"
  },
  {
    "label": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (done)",
    "insertText": "DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam( FOnSystemFinished, class UParticleSystemComponent*, PSystem )"
  },
  {
    "label": "RequiresLWCTileRecache()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RequiresLWCTileRecache(const FVector3f CurrentTile, const FVector CurrentLocation)"
  },
  {
    "label": "PrecacheAssetPSOs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrecacheAssetPSOs(UFXSystemAsset* FXSystemAsset)"
  },
  {
    "label": "CancelAutoAttachment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAutoAttachment(bool bDetachFromParent, const UWorld* MyWorld)"
  },
  {
    "label": "SetAutoAttachParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAutoAttachParams(USceneComponent* Parent, FName SocketName = NAME_None, EAttachLocation::Type LocationType = EAttachLocation::KeepRelativeOffset)"
  },
  {
    "label": "SetRequiredSignificance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequiredSignificance(EParticleSignificanceLevel NewRequiredSignificance)"
  },
  {
    "label": "OnSignificanceChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSignificanceChanged(bool bSignificant, bool bApplyToEmitters, bool bAsync=false)"
  },
  {
    "label": "CanSkipTickDueToVisibility()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSkipTickDueToVisibility()"
  },
  {
    "label": "Complete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Complete()"
  },
  {
    "label": "GetComponentTransform()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetComponentTransform()"
  },
  {
    "label": "SetBeamEndPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamEndPoint(int32 EmitterIndex, FVector NewEndPoint)"
  },
  {
    "label": "SetBeamSourcePoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamSourcePoint(int32 EmitterIndex, FVector NewSourcePoint, int32 SourceIndex)"
  },
  {
    "label": "SetBeamSourceTangent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamSourceTangent(int32 EmitterIndex, FVector NewTangentPoint, int32 SourceIndex)"
  },
  {
    "label": "SetBeamSourceStrength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamSourceStrength(int32 EmitterIndex, float NewSourceStrength, int32 SourceIndex)"
  },
  {
    "label": "SetBeamTargetPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamTargetPoint(int32 EmitterIndex, FVector NewTargetPoint, int32 TargetIndex)"
  },
  {
    "label": "SetBeamTargetTangent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamTargetTangent(int32 EmitterIndex, FVector NewTangentPoint, int32 TargetIndex)"
  },
  {
    "label": "SetBeamTargetStrength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeamTargetStrength(int32 EmitterIndex, float NewTargetStrength, int32 TargetIndex)"
  },
  {
    "label": "SetMaterialParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaterialParameter(FName ParameterName, class UMaterialInterface* Param)"
  },
  {
    "label": "GetFloatParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetFloatParameter(const FName InName, float& OutFloat)"
  },
  {
    "label": "GetVectorParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVectorParameter(const FName InName, FVector& OutVector)"
  },
  {
    "label": "GetAnyVectorParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAnyVectorParameter(const FName InName, FVector& OutVector)"
  },
  {
    "label": "GetColorParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetColorParameter(const FName InName, FLinearColor& OutColor)"
  },
  {
    "label": "GetActorParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetActorParameter(const FName InName, class AActor*& OutActor)"
  },
  {
    "label": "GetMaterialParameter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMaterialParameter(const FName InName, class UMaterialInterface*& OutMaterial)"
  },
  {
    "label": "SetTemplate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTemplate(class UParticleSystem* NewTemplate)"
  },
  {
    "label": "GetOwnedTrailEmitters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOwnedTrailEmitters(TrailEmitterArray& OutTrailEmitters, const void* InOwner, bool bSetOwner = false)"
  },
  {
    "label": "BeginTrails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginTrails(FName InFirstSocketName, FName InSecondSocketName, ETrailWidthMode InWidthMode, float InWidth)"
  },
  {
    "label": "EndTrails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndTrails()"
  },
  {
    "label": "SetTrailSourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTrailSourceData(FName InFirstSocketName, FName InSecondSocketName, ETrailWidthMode InWidthMode, float InWidth)"
  },
  {
    "label": "ComputeTickComponent_Concurrent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeTickComponent_Concurrent()"
  },
  {
    "label": "FinalizeTickComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeTickComponent()"
  },
  {
    "label": "ForceReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceReset()"
  },
  {
    "label": "MarshalParamsForAsyncTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarshalParamsForAsyncTick()"
  },
  {
    "label": "CacheViewRelevanceFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheViewRelevanceFlags(class UParticleSystem* TemplateToCache)"
  },
  {
    "label": "DeactivateSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeactivateSystem()"
  },
  {
    "label": "ParticleLineCheck()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ParticleLineCheck(FHitResult& Hit, AActor* SourceActor, const FVector& End, const FVector& Start, const FVector& HalfExtent, const FCollisionObjectQueryParams& ObjectParams)"
  },
  {
    "label": "ComputeCanTickInAnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeCanTickInAnyThread()"
  },
  {
    "label": "UpdateLODInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLODInformation()"
  },
  {
    "label": "OrientZAxisTowardCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OrientZAxisTowardCamera()"
  },
  {
    "label": "ClearDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearDynamicData()"
  },
  {
    "label": "UpdateDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDynamicData()"
  },
  {
    "label": "InitParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitParticles()"
  },
  {
    "label": "ResetParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetParticles(bool bEmptyInstances = false)"
  },
  {
    "label": "ResetBurstLists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetBurstLists()"
  },
  {
    "label": "UpdateInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstances(bool bEmptyInstances = false)"
  },
  {
    "label": "HasCompleted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasCompleted()"
  },
  {
    "label": "InitializeSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeSystem()"
  },
  {
    "label": "ConditionalCacheViewRelevanceFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalCacheViewRelevanceFlags(class UParticleSystem* NewTemplate = NULL)"
  },
  {
    "label": "AutoPopulateInstanceProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoPopulateInstanceProperties()"
  },
  {
    "label": "ReportEventSpawn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportEventSpawn(const FName InEventName, const float InEmitterTime,\n\t\tconst FVector InLocation, const FVector InVelocity, const TArray<class UParticleModuleEventSendToGame*>& InEventData)"
  },
  {
    "label": "ReportEventDeath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportEventDeath(const FName InEventName, const float InEmitterTime,\n\t\tconst FVector InLocation, const FVector InVelocity, const TArray<class UParticleModuleEventSendToGame*>& InEventData, const float InParticleTime)"
  },
  {
    "label": "ReportEventCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportEventCollision(const FName InEventName, const float InEmitterTime, const FVector InLocation,\n\t\tconst FVector InDirection, const FVector InVelocity, const TArray<class UParticleModuleEventSendToGame*>& InEventData, \n\t\tconst float InParticleTime, const FVector InNormal, const float InTime, const int32 InItem, const FName InBoneName, UPhysicalMaterial* PhysMat)"
  },
  {
    "label": "ReportEventBurst()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportEventBurst(const FName InEventName, const float InEmitterTime, const int32 ParticleCount,\n\t\tconst FVector InLocation, const TArray<class UParticleModuleEventSendToGame*>& InEventData)"
  },
  {
    "label": "GenerateParticleEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateParticleEvent(const FName InEventName, const float InEmitterTime,\n\t\tconst FVector InLocation, const FVector InDirection, const FVector InVelocity)"
  },
  {
    "label": "KillParticlesForced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "KillParticlesForced()"
  },
  {
    "label": "SetVectorRandParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorRandParameter(FName ParameterName, const FVector& Param, const FVector& ParamLow)"
  },
  {
    "label": "SetVectorUnitRandParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVectorUnitRandParameter(FName ParameterName, const FVector& Param, const FVector& ParamLow)"
  },
  {
    "label": "SetFloatRandParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFloatRandParameter(FName ParameterName, float Param, float ParamLow)"
  },
  {
    "label": "ForceUpdateBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceUpdateBounds()"
  },
  {
    "label": "RewindEmitterInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RewindEmitterInstances()"
  },
  {
    "label": "DetermineLODLevelForLocation()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "DetermineLODLevelForLocation(const FVector& EffectLocation)"
  },
  {
    "label": "SetLODLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODLevel(int32 InLODLevel)"
  },
  {
    "label": "GetLODLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLODLevel()"
  },
  {
    "label": "ResetToDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetToDefaults()"
  },
  {
    "label": "ShouldComputeLODFromGameThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldComputeLODFromGameThread()"
  }
]