[
  {
    "label": "FXmppChatMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppChatMessage"
  },
  {
    "label": "FXmppConnectionStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppConnectionStrophe"
  },
  {
    "label": "FStropheStanza",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStropheStanza"
  },
  {
    "label": "FXmppPrivateChatStrophe",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXmppPrivateChatStrophe"
  },
  {
    "label": "FXmppPrivateChatStrophe()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" XmppChat . h \" # include \" Containers / Ticker . h \" # include \" Containers / Queue . h \" # if WITH_XMPP_STROPHE class FXmppChatMessage ; class FXmppConnectionStrophe ; class FStropheStanza ; class FXmppPrivateChatStrophe : public IXmppChat,public FTSTickerObjectBase { FXmppConnectionStrophe ; public :)",
    "insertText": "FXmppPrivateChatStrophe(FXmppConnectionStrophe& InConnectionManager)"
  },
  {
    "label": "FXmppPrivateChatStrophe()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXmppPrivateChatStrophe()"
  },
  {
    "label": "ReceiveStanza()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceiveStanza(const FStropheStanza& IncomingStanza)"
  },
  {
    "label": "OnDisconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisconnect()"
  },
  {
    "label": "OnReconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReconnect()"
  },
  {
    "label": "SendChat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendChat(const FXmppUserJid& RecipientId, const FString& Message)"
  },
  {
    "label": "OnReceiveChat()",
    "kind": "Method",
    "detail": "Function (FOnXmppChatReceived&)",
    "insertText": "OnReceiveChat()"
  },
  {
    "label": "OnChatReceived()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnChatReceived(TUniquePtr<FXmppChatMessage>&& Chat)"
  },
  {
    "label": "CleanupMessages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupMessages()"
  }
]