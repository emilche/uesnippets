[
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "FbxAMatrix()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_MATH_AFFINE_MATRIX_H_ # define _FBXSDK_CORE_MATH_AFFINE_MATRIX_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / math / fbxvector4 . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FBXSDK_DLL FbxAMatrix : public FbxDouble4x4 { public :)",
    "insertText": "FbxAMatrix()"
  },
  {
    "label": "FbxAMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxAMatrix(const FbxAMatrix& pOther)"
  },
  {
    "label": "FbxAMatrix()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FbxAMatrix(const FbxVector4& pT, const FbxVector4& pR, const FbxVector4& pS)"
  },
  {
    "label": "GetT()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetT()"
  },
  {
    "label": "GetR()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetR()"
  },
  {
    "label": "GetQ()",
    "kind": "Method",
    "detail": "Function (FbxQuaternion)",
    "insertText": "GetQ()"
  },
  {
    "label": "GetS()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetS()"
  },
  {
    "label": "GetRow()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetRow(int pY)"
  },
  {
    "label": "GetColumn()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetColumn(int pX)"
  },
  {
    "label": "SetIdentity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIdentity()"
  },
  {
    "label": "SetT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetT(const FbxVector4& pT)"
  },
  {
    "label": "SetR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetR(const FbxVector4& pR)"
  },
  {
    "label": "SetQ()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQ(const FbxQuaternion& pQ)"
  },
  {
    "label": "SetS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetS(const FbxVector4& pS)"
  },
  {
    "label": "SetTRS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTRS(const FbxVector4& pT, const FbxVector4& pR, const FbxVector4& pS)"
  },
  {
    "label": "SetTQS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTQS(const FbxVector4& pT, const FbxQuaternion& pQ, const FbxVector4& pS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix&)",
    "insertText": "operator(const FbxAMatrix& pM)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "operator(double pValue)"
  },
  {
    "label": "MultT()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "MultT(const FbxVector4& pVector4)"
  },
  {
    "label": "MultR()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "MultR(const FbxVector4& pVector4)"
  },
  {
    "label": "MultQ()",
    "kind": "Method",
    "detail": "Function (FbxQuaternion)",
    "insertText": "MultQ(const FbxQuaternion& pQuaternion)"
  },
  {
    "label": "MultS()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "MultS(const FbxVector4& pVector4)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "operator(const FbxAMatrix& pOther)"
  },
  {
    "label": "Inverse()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "Inverse()"
  },
  {
    "label": "Transpose()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "Transpose()"
  },
  {
    "label": "Slerp()",
    "kind": "Method",
    "detail": "Function (FbxAMatrix)",
    "insertText": "Slerp(const FbxAMatrix& pOther, double pWeight)"
  },
  {
    "label": "double()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "double()"
  },
  {
    "label": "double()",
    "kind": "Method",
    "detail": "Function (typedef const)",
    "insertText": "double(kDouble44)"
  },
  {
    "label": "Double44()",
    "kind": "Method",
    "detail": "Function (kDouble44&)",
    "insertText": "Double44()"
  },
  {
    "label": "IsIdentity()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsIdentity(const double pThreshold=FBXSDK_TOLERANCE)"
  },
  {
    "label": "FbxAMatrix()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS)",
    "insertText": "FbxAMatrix(const FbxVector4& pT, const FbxQuaternion& pQ, const FbxVector4& pS)"
  },
  {
    "label": "SetTRS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTRS(const FbxVector4& pT, const FbxAMatrix& pRM, const FbxVector4& pS)"
  },
  {
    "label": "SetRow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRow(int pY, const FbxVector4& pRow)"
  },
  {
    "label": "SetTOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTOnly(const FbxVector4& pT)"
  },
  {
    "label": "SetROnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetROnly(const FbxVector4& pR)"
  },
  {
    "label": "SetQOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQOnly(const FbxQuaternion& pQ)"
  },
  {
    "label": "GetROnly()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetROnly()"
  },
  {
    "label": "GetUnnormalizedQ()",
    "kind": "Method",
    "detail": "Function (FbxQuaternion)",
    "insertText": "GetUnnormalizedQ()"
  },
  {
    "label": "SetR()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetR(const FbxVector4& pV, const int pOrd)"
  },
  {
    "label": "GetR()",
    "kind": "Method",
    "detail": "Function (FbxVector4)",
    "insertText": "GetR(const int pOrd)"
  },
  {
    "label": "MultRM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MultRM(const FbxVector4& pR)"
  },
  {
    "label": "MultSM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MultSM(const FbxVector4& pS)"
  },
  {
    "label": "IsRightHand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRightHand()"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "Compare(const FbxAMatrix pM, const double pThreshold=FBXSDK_TOLERANCE)"
  }
]