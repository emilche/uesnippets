[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "EVisibility",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EVisibility"
  },
  {
    "label": "FOverridesWidgetStyleKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOverridesWidgetStyleKey"
  },
  {
    "label": "FOverridesWidgetStyleKeys",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOverridesWidgetStyleKeys"
  },
  {
    "label": "FDetailsViewStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailsViewStyle"
  },
  {
    "label": "FOverridesWidgetStyleKey()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Brushes / SlateImageBrush . h \" # include \" DetailsViewStyleKey . h \" # include \" Layout / Margin . h \" # include \" Styling / SlateTypes . h \" # include \" Misc / Paths . h \" # include \" Styling / SlateWidgetStyle . h \" enum class EOverriddenState : uint8 ; struct EVisibility ; class FOverridesWidgetStyleKey : public TSharedFromThis<FOverridesWidgetStyleKey> { public :)",
    "insertText": "FOverridesWidgetStyleKey(FName InName)"
  },
  {
    "label": "FOverridesWidgetStyleKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FOverridesWidgetStyleKey(FName InName, EOverriddenPropertyOperation InOverriddenPropertyOperation, const TOptional<EOverriddenState>& InOverriddenState, const TOptional<bool>& bInStateInherited = TOptional<bool>(), const FText& InCategoryTooltip = FText::GetEmpty(), const FText& InPropertyTooltip = FText::GetEmpty())"
  },
  {
    "label": "GetConstStyleBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush&)",
    "insertText": "GetConstStyleBrush()"
  },
  {
    "label": "GetConstStyleBrushHovered()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush&)",
    "insertText": "GetConstStyleBrushHovered()"
  },
  {
    "label": "GetToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipText(bool bIsCategory = false)"
  },
  {
    "label": "GetVisibilityAttribute()",
    "kind": "Method",
    "detail": "Function (TAttribute<EVisibility>)",
    "insertText": "GetVisibilityAttribute(const TSharedPtr<FEditPropertyChain>& PropertyChain, TWeakObjectPtr<UObject>& OverriddenObjectWeakPtr)"
  },
  {
    "label": "Here()",
    "kind": "Method",
    "detail": "Function (const FName Name ; const TOptional<EOverriddenPropertyOperation> VisibleOverriddenPropertyOperation ; const TOptional<EOverriddenState> VisibleOverriddenState ; TOptional<bool> bStateInherited ; const bool bCanBeVisible = false ; FText CategoryTooltip ; FText PropertyTooltip ; } ; class FOverridesWidgetStyleKeys { public : const FOverridesWidgetStyleKey&)",
    "insertText": "Here()"
  },
  {
    "label": "Added()",
    "kind": "Method",
    "detail": "Function (const FOverridesWidgetStyleKey&)",
    "insertText": "Added()"
  },
  {
    "label": "None()",
    "kind": "Method",
    "detail": "Function (const FOverridesWidgetStyleKey&)",
    "insertText": "None()"
  },
  {
    "label": "Removed()",
    "kind": "Method",
    "detail": "Function (const FOverridesWidgetStyleKey&)",
    "insertText": "Removed()"
  },
  {
    "label": "Inside()",
    "kind": "Method",
    "detail": "Function (const FOverridesWidgetStyleKey&)",
    "insertText": "Inside()"
  },
  {
    "label": "HereInside()",
    "kind": "Method",
    "detail": "Function (const FOverridesWidgetStyleKey&)",
    "insertText": "HereInside()"
  },
  {
    "label": "Inherited()",
    "kind": "Method",
    "detail": "Function (const FOverridesWidgetStyleKey&)",
    "insertText": "Inherited()"
  },
  {
    "label": "GetKeys()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<const FOverridesWidgetStyleKey>>)",
    "insertText": "GetKeys()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "FDetailsViewStyle()",
    "kind": "Method",
    "detail": "Function (private : TArray<TSharedRef<const FOverridesWidgetStyleKey>> OverridesWidgetStyleKeys ; } ; class FDetailsViewStyle : public FSlateWidgetStyle { public :)",
    "insertText": "FDetailsViewStyle()"
  },
  {
    "label": "FDetailsViewStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDetailsViewStyle(FDetailsViewStyleKey& InKey)"
  },
  {
    "label": "FDetailsViewStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDetailsViewStyle(FDetailsViewStyle& InStyle)"
  },
  {
    "label": "FDetailsViewStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDetailsViewStyle(const FDetailsViewStyle& InStyle)"
  },
  {
    "label": "GetOuterCategoryRowPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetOuterCategoryRowPadding()"
  },
  {
    "label": "GetRowPadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetRowPadding(bool bIsOuterCategory)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(FDetailsViewStyle& OtherLayoutType)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FDetailsViewStyle&)",
    "insertText": "operator(FDetailsViewStyleKey& OtherLayoutTypeKey)"
  },
  {
    "label": "GetTypeName()",
    "kind": "Method",
    "detail": "Function (const FName)",
    "insertText": "GetTypeName()"
  },
  {
    "label": "GetBackgroundImageForCategoryRow()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundImageForCategoryRow(const bool bShowBorder, const bool bIsInnerCategory, const bool bIsCategoryExpanded)"
  },
  {
    "label": "GetBackgroundImageForScrollBarWell()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetBackgroundImageForScrollBarWell(const bool bShowBorder, const bool bIsInnerCategory, const bool bIsCategoryExpanded, const bool bIsScrollBarVisible)"
  },
  {
    "label": "InitializeDetailsViewStyles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDetailsViewStyles()"
  },
  {
    "label": "FDetailsViewStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDetailsViewStyle(const FDetailsViewStyleKey& InKey, float InTopCategoryPadding = 0.f)"
  },
  {
    "label": "GetTablePadding()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetTablePadding(bool bIsScrollBarVisible)"
  },
  {
    "label": "GetCategoryButtonsMargin()",
    "kind": "Method",
    "detail": "Function (FMargin)",
    "insertText": "GetCategoryButtonsMargin()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Initialize(const FDetailsViewStyle* Style)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FDetailsViewStyleKey& InKey, const float InTopCategoryPadding)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FDetailsViewStyleKey& InKey)"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (FDetailsViewStyleKey Key ; TMap<FName,const FDetailsViewStyle*> StyleKeyToStyleTemplateMap ; float TopCategoryPadding = 0 . f ; FMargin TablePaddingWithScrollbar =)",
    "insertText": "FMargin(0, 0, 16, 1)"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (FMargin TablePaddingWithNoScrollbar =)",
    "insertText": "FMargin(0, 0, 0, 1)"
  },
  {
    "label": "FMargin()",
    "kind": "Method",
    "detail": "Function (FMargin CategoryButtonsMargin =)",
    "insertText": "FMargin(0, 0, 0, 0)"
  }
]