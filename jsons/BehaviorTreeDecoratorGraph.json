[
  {
    "label": "UBehaviorTreeDecoratorGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeDecoratorGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "BEHAVIORTREEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BEHAVIORTREEEDITOR_API"
  },
  {
    "label": "UBTDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator"
  },
  {
    "label": "FBTDecoratorLogic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTDecoratorLogic"
  },
  {
    "label": "UBTDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator"
  },
  {
    "label": "FBTDecoratorLogic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTDecoratorLogic"
  },
  {
    "label": "UBehaviorTreeDecoratorGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeDecoratorGraphNode"
  },
  {
    "label": "UBehaviorTreeDecoratorGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeDecoratorGraphNode"
  },
  {
    "label": "UBTDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator"
  },
  {
    "label": "FBTDecoratorLogic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTDecoratorLogic"
  },
  {
    "label": "UBTDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator"
  },
  {
    "label": "FBTDecoratorLogic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBTDecoratorLogic"
  },
  {
    "label": "SpawnMissingNodes()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "SpawnMissingNodes(const TArray<class UBTDecorator*>& NodeInstances, const TArray<struct FBTDecoratorLogic>& Operations, int32 StartIndex)"
  }
]