[
  {
    "label": "FManifoldPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FManifoldPoint"
  },
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "FPBDCollisionSolverJacobi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverJacobi"
  },
  {
    "label": "FSolverVec3SOA",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverVec3SOA"
  },
  {
    "label": "FSolverRealSOA",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverRealSOA"
  },
  {
    "label": "FPBDCollisionSolverJacobiManifoldPoints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverJacobiManifoldPoints"
  },
  {
    "label": "FPBDCollisionSolverJacobi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverJacobi"
  },
  {
    "label": "FManifoldPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManifoldPoint"
  },
  {
    "label": "FPBDCollisionSolverJacobi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverJacobi"
  },
  {
    "label": "FState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FState"
  },
  {
    "label": "FPBDCollisionSolverJacobiHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverJacobiHelper"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (point)",
    "insertText": "for(int32 ManifoldPointIndex = 0; ManifoldPointIndex < NumManifoldPoints()"
  },
  {
    "label": "FPBDCollisionSolverJacobi()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FPBDCollisionSolverJacobi()"
  },
  {
    "label": "EnablePositionShockPropagation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnablePositionShockPropagation()"
  },
  {
    "label": "EnableVelocityShockPropagation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableVelocityShockPropagation()"
  },
  {
    "label": "DisableShockPropagation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableShockPropagation()"
  },
  {
    "label": "SetShockPropagationInvMassScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShockPropagationInvMassScale(const FSolverReal InvMassScale)"
  },
  {
    "label": "SolvePositionNoFriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolvePositionNoFriction(const TArrayView<FPBDCollisionSolverJacobi>& CollisionSolvers, const FSolverReal Dt, const FSolverReal MaxPushOut)"
  },
  {
    "label": "SolvePositionWithFriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolvePositionWithFriction(const TArrayView<FPBDCollisionSolverJacobi>& CollisionSolvers, const FSolverReal Dt, const FSolverReal MaxPushOut)"
  },
  {
    "label": "SolveVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveVelocity(const TArrayView<FPBDCollisionSolverJacobi>& CollisionSolvers, const FSolverReal Dt, const bool bApplyDynamicFriction)"
  },
  {
    "label": "CheckISPC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckISPC()"
  }
]