[
  {
    "label": "FCanvasBatchedElementRenderItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCanvasBatchedElementRenderItem"
  },
  {
    "label": "FRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRenderData"
  },
  {
    "label": "FCanvasBatchedElementRenderItem()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CanvasTypes . h \" # include \" BatchedElements . h \" class FCanvasBatchedElementRenderItem : public FCanvasBaseRenderItem { public :)",
    "insertText": "FCanvasBatchedElementRenderItem(FBatchedElementParameters* InBatchedElementParameters=NULL, const FTexture* InTexture=NULL, ESimpleElementBlendMode InBlendMode=SE_BLEND_MAX, FCanvas::EElementType InElementType=FCanvas::ET_MAX, const FCanvas::FTransformEntry& InTransform=FCanvas::FTransformEntry(FMatrix::Identity), const FDepthFieldGlowInfo& InGlowInfo=FDepthFieldGlowInfo() ) : Data(new FRenderData(InBatchedElementParameters, InTexture, InBlendMode, InElementType, InTransform, InGlowInfo))"
  },
  {
    "label": "FCanvasBatchedElementRenderItem()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FCanvasBatchedElementRenderItem()"
  },
  {
    "label": "GetCanvasBatchedElementRenderItem()",
    "kind": "Method",
    "detail": "Function (delete Data ; } class FCanvasBatchedElementRenderItem*)",
    "insertText": "GetCanvasBatchedElementRenderItem()"
  },
  {
    "label": "Render_GameThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Render_GameThread(const FCanvas* Canvas, FCanvasRenderThreadScope& RenderScope)"
  },
  {
    "label": "IsMatch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMatch(FBatchedElementParameters* BatchedElementParameters, const FTexture* InTexture, ESimpleElementBlendMode InBlendMode, FCanvas::EElementType InElementType, const FCanvas::FTransformEntry& InTransform, const FDepthFieldGlowInfo& InGlowInfo)"
  },
  {
    "label": "GetBatchedElements()",
    "kind": "Method",
    "detail": "Function (} FBatchedElements*)",
    "insertText": "GetBatchedElements()"
  }
]