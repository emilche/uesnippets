[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "SSequencerDebugSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerDebugSlot"
  },
  {
    "label": "FTimeToPixel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeToPixel"
  },
  {
    "label": "FMovieSceneEvaluationField",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEvaluationField"
  },
  {
    "label": "FEntityManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEntityManager"
  },
  {
    "label": "FMovieSceneEntityID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneEntityID"
  },
  {
    "label": "SSequencerDebugVisualizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerDebugVisualizer"
  },
  {
    "label": "SSequencerEvaluationTemplateDebugSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerEvaluationTemplateDebugSlot"
  },
  {
    "label": "SSequencerEvaluationTemplateDebugVisualizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerEvaluationTemplateDebugVisualizer"
  },
  {
    "label": "SSequencerEntityComponentSystemDebugSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerEntityComponentSystemDebugSlot"
  },
  {
    "label": "SSequencerEntityComponentSystemDebugVisualizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequencerEntityComponentSystemDebugVisualizer"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Layout / Geometry . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Children . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SPanel . h \" # include \" Widgets / Layout / SBox . h \" # include \" Widgets / Layout / SWrapBox . h \" # include \" MovieSceneSequenceID . h \" # include \" Sequencer . h \" class FArrangedChildren ; class SSequencerDebugSlot ; struct FTimeToPixel ; struct FMovieSceneEvaluationField ; namespace UE { namespace MovieScene { class FEntityManager ; struct FMovieSceneEntityID ; } } class SSequencerDebugVisualizer : public SVerticalBox {)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerDebugVisualizer)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TRange<double>, ViewRange) SLATE_END_ARGS() SSequencerDebugVisualizer()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<FSequencer> InSequencer)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SSequencerEvaluationTemplateDebugSlot : public SCompoundWidget {)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerEvaluationTemplateDebugSlot)"
  },
  {
    "label": "SLATE_DEFAULT_SLOT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_END_ARGS() void Construct(const FArguments& InArgs, int32 InSegmentIndex)"
  },
  {
    "label": "GetSegmentIndex()",
    "kind": "Method",
    "detail": "Function (SegmentIndex = InSegmentIndex ; ChildSlot [ InArgs . _Content . Widget ] ; } int32)",
    "insertText": "GetSegmentIndex()"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TRange<double>, ViewRange) SLATE_END_ARGS() SSequencerEvaluationTemplateDebugVisualizer() : Children(this)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh()"
  },
  {
    "label": "GetSegmentGeometry()",
    "kind": "Method",
    "detail": "Function (FGeometry)",
    "insertText": "GetSegmentGeometry(const FGeometry& AllottedGeometry, const SSequencerEvaluationTemplateDebugSlot& Slot, const FTimeToPixel& TimeToPixelConverter)"
  },
  {
    "label": "GetSegmentVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSegmentVisibility(TRange<double> Range)"
  },
  {
    "label": "GetTooltipForSegment()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GetTooltipForSegment(int32 SegmentIndex)"
  },
  {
    "label": "OnSequenceActivated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequenceActivated(FMovieSceneSequenceIDRef)"
  },
  {
    "label": "GetEvaluationField()",
    "kind": "Method",
    "detail": "Function (const FMovieSceneEvaluationField*)",
    "insertText": "GetEvaluationField()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (private : TAttribute<TRange<double>> ViewRange ; TSlotlessChildren<SSequencerEvaluationTemplateDebugSlot> Children ; TWeakPtr<FSequencer> WeakSequencer ; FGuid CachedSignature ; } ; class SSequencerEntityComponentSystemDebugSlot : public SBorder {)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerEntityComponentSystemDebugSlot)"
  },
  {
    "label": "SLATE_DEFAULT_SLOT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_DEFAULT_SLOT(FArguments, Content) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TWeakPtr<FSequencer> WeakSequencer, UMovieSceneSection* InSection)"
  },
  {
    "label": "GetSection()",
    "kind": "Method",
    "detail": "Function (const UMovieSceneSection*)",
    "insertText": "GetSection()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (UMovieSceneSection* Section = nullptr ; UE::MovieScene::FMovieSceneEntityID CachedEntityID ; TWeakPtr<FSequencer> WeakSequencer ; } ; class SSequencerEntityComponentSystemDebugVisualizer : public SPanel { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SSequencerEntityComponentSystemDebugVisualizer)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TRange<double>, ViewRange) SLATE_END_ARGS() SSequencerEntityComponentSystemDebugVisualizer() : Children(this)"
  },
  {
    "label": "DoRefresh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoRefresh()"
  }
]