[
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FRHICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandList"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FRHIShaderResourceView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIShaderResourceView"
  },
  {
    "label": "FRHITexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHITexture"
  },
  {
    "label": "FRHIUnorderedAccessView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIUnorderedAccessView"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAllocatedVTDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAllocatedVTDescription"
  },
  {
    "label": "FVTProducerDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTProducerDescription"
  },
  {
    "label": "IVirtualTextureFinalizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVirtualTextureFinalizer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FVTRequestPageResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTRequestPageResult"
  },
  {
    "label": "FVTProduceTargetLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVTProduceTargetLayer"
  },
  {
    "label": "IPooledRenderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPooledRenderTarget"
  },
  {
    "label": "IVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IVirtualTexture"
  },
  {
    "label": "IAllocatedVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAllocatedVirtualTexture"
  },
  {
    "label": "FVirtualTextureSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVirtualTextureSystem"
  },
  {
    "label": "IAdaptiveVirtualTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAdaptiveVirtualTexture"
  },
  {
    "label": "FAdaptiveVTDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAdaptiveVTDescription"
  },
  {
    "label": "FVirtualTextureProducerHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / TaskGraphInterfaces . h \" # include \" Containers / EnumAsByte . h \" # include \" CoreMinimal . h \" # include \" Logging / LogMacros . h \" # include \" Math / Color . h \" # include \" Math / IntVector . h \" # include \" Math / UnrealMathSSE . h \" # include \" Misc / AssertionMacros . h \" # include \" Misc / EnumClassFlags . h \" # include \" PixelFormat . h \" # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" RHIDefinitions . h \" # endif # include \" Stats / Stats . h \" # include \" Stats / Stats2 . h \" # include \" Templates / RefCounting . h \" # include \" Templates / TypeHash . h \" # include \" UObject / NameTypes . h \" class FRDGBuilder ; class FRHICommandList ; class FRHICommandListImmediate ; class FRHIShaderResourceView ; class FRHITexture ; class FRHIUnorderedAccessView ; namespace ERHIFeatureLevel { enum Type : int ; } union FVirtualTextureProducerHandle {)",
    "insertText": "FVirtualTextureProducerHandle() : PackedValue(0u)"
  },
  {
    "label": "FVirtualTextureProducerHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FVirtualTextureProducerHandle(uint32 InPackedValue) : PackedValue(InPackedValue)"
  },
  {
    "label": "FVirtualTextureProducerHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FVirtualTextureProducerHandle(uint32 InIndex, uint32 InMagic) : Index(InIndex), Magic(InMagic)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "VIRTUALTEXTURE_MAX_PAGETABLE_SIZE()",
    "kind": "Method",
    "detail": "Function (# define VIRTUALTEXTURE_SPACE_MAXLAYERS 8 # define VIRTUALTEXTURE_LOG2_MAX_PAGETABLE_SIZE 1 2 u # define)",
    "insertText": "VIRTUALTEXTURE_MAX_PAGETABLE_SIZE(1u << VIRTUALTEXTURE_LOG2_MAX_PAGETABLE_SIZE)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FName Name ; uint32 TileSize = 0 u ; uint32 TileBorderSize = 0 u ; uint32 MaxSpaceSize = 0 u ; uint32 IndirectionTextureSize = 0 u ; uint8 Dimensions = 0 u ; uint8 NumTextureLayers = 0 u ; uint8 ForceSpaceID = 0 xff ; uint8 AdaptiveLevelBias = 0 u ; FVirtualTextureProducerHandle ProducerHandle [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] ; uint8 ProducerLayerIndex [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] = { 0 u } ; union { uint8 PackedFlags = 0 u ; struct { uint8 bPrivateSpace : 1 ; uint8 bShareDuplicateLayers : 1 ; } ; } ; bool)",
    "insertText": "operator(const FAllocatedVTDescription& Lhs, const FAllocatedVTDescription& Rhs)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetTypeHash(const FAllocatedVTDescription& Description)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (uint32 Hash =)",
    "insertText": "GetTypeHash(Description.TileSize)"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Description.TileBorderSize))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Description.Dimensions))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Description.NumTextureLayers))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Description.PackedFlags))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Description.ProducerHandle[LayerIndex].PackedValue))"
  },
  {
    "label": "HashCombine()",
    "kind": "Method",
    "detail": "Function (Hash =)",
    "insertText": "HashCombine(Hash, GetTypeHash(Description.ProducerLayerIndex[LayerIndex]))"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} return Hash ; } } ; struct FVTProducerDescription { FName Name ; uint32 FullNameHash ; bool bPersistentHighestMip = true ; bool bContinuousUpdate = false ; bool bNotifyCompleted = false ; uint32 TileSize = 0 u ; uint32 TileBorderSize = 0 u ; uint32 BlockWidthInTiles = 0 u ; uint32 BlockHeightInTiles = 0 u ; uint32 DepthInTiles = 0 u ; uint16 WidthInBlocks = 1 u ; uint16 HeightInBlocks = 1 u ; uint8 Dimensions = 0 u ; uint8 MaxLevel = 0 u ; uint8 NumTextureLayers = 0 u ; TEnumAsByte<EPixelFormat> LayerFormat [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] = { PF_Unknown } ; FLinearColor LayerFallbackColor [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] = { FLinearColor::Black } ; bool bIsLayerSRGB [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] = { false } ; uint8 NumPhysicalGroups = 0 u ; uint8 PhysicalGroupIndex [ VIRTUALTEXTURE_SPACE_MAXLAYERS ] = { 0 } ; } ; typedef)",
    "insertText": "void(FVTProducerDestroyedFunction)(const FVirtualTextureProducerHandle& InHandle, void* Baton)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (class IVirtualTextureFinalizer { public : void)",
    "insertText": "Finalize(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "VTRequestPageStatus_HasData()",
    "kind": "Method",
    "detail": "Function (} ; enum class EVTRequestPageStatus { Invalid,Saturated,Pending,Available,} ; bool)",
    "insertText": "VTRequestPageStatus_HasData(EVTRequestPageStatus InStatus)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(EVTProducePageFlags)"
  },
  {
    "label": "FVTRequestPageResult()",
    "kind": "Method",
    "detail": "Function (struct FVTRequestPageResult {)",
    "insertText": "FVTRequestPageResult(EVTRequestPageStatus InStatus = EVTRequestPageStatus::Invalid, uint64 InHandle = 0u) : Handle(InHandle), Status(InStatus)"
  },
  {
    "label": "FVTProduceTargetLayer()",
    "kind": "Method",
    "detail": "Function (} uint64 Handle ; EVTRequestPageStatus Status ; } ; struct FVTProduceTargetLayer { PRAGMA_DISABLE_DEPRECATION_WARNINGS)",
    "insertText": "FVTProduceTargetLayer()"
  },
  {
    "label": "FVTProduceTargetLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVTProduceTargetLayer(const FVTProduceTargetLayer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FVTProduceTargetLayer&)",
    "insertText": "operator(const FVTProduceTargetLayer&)"
  },
  {
    "label": "IVirtualTexture()",
    "kind": "Method",
    "detail": "Function (struct IPooledRenderTarget* PooledRenderTarget = nullptr ; FIntVector pPageLocation = FIntVector::ZeroValue ; } ; class IVirtualTexture { public :)",
    "insertText": "IVirtualTexture()"
  },
  {
    "label": "GetLocalMipBias()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetLocalMipBias(uint8 vLevel, uint32 vAddress)"
  },
  {
    "label": "RequestPageData()",
    "kind": "Method",
    "detail": "Function (FVTRequestPageResult)",
    "insertText": "RequestPageData(FRHICommandList& RHICmdList, const FVirtualTextureProducerHandle& ProducerHandle, uint8 LayerMask, uint8 vLevel, uint64 vAddress, EVTRequestPagePriority Priority)"
  },
  {
    "label": "GatherProducePageDataTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherProducePageDataTasks(FVirtualTextureProducerHandle const& ProducerHandle, FGraphEventArray& InOutTasks)"
  },
  {
    "label": "GatherProducePageDataTasks()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GatherProducePageDataTasks(uint64 RequestHandle, FGraphEventArray& InOutTasks)"
  },
  {
    "label": "DumpToConsole()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "DumpToConsole(bool verbose)"
  },
  {
    "label": "OnRequestsCompleted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnRequestsCompleted()"
  },
  {
    "label": "IAllocatedVirtualTexture()",
    "kind": "Method",
    "detail": "Function (} } ; enum class EVTPageTableFormat : uint8 { UInt16,UInt32,} ; class IAllocatedVirtualTexture { public : const uint32 LayersPerPageTableTexture = 4 u ;)",
    "insertText": "IAllocatedVirtualTexture(const FAllocatedVTDescription& InDesc, uint32 InBlockWidthInTiles, uint32 InBlockHeightInTiles, uint32 InWidthInBlocks, uint32 InHeightInBlocks, uint32 InDepthInTiles) : Description(InDesc) , BlockWidthInTiles(InBlockWidthInTiles) , BlockHeightInTiles(InBlockHeightInTiles) , WidthInBlocks(InWidthInBlocks) , HeightInBlocks(InHeightInBlocks) , DepthInTiles(InDepthInTiles) , FrameDeleted(0u) , NumRefs(0) , bIsWaitingToMap(false) , PageTableFormat(EVTPageTableFormat::UInt32) , SpaceID(~0u) , MaxLevel(0u) , VirtualAddress(~0u) , VirtualPageX(~0u) , VirtualPageY(~0u)"
  },
  {
    "label": "GetPersistentHash()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetPersistentHash()"
  },
  {
    "label": "GetNumPageTableTextures()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumPageTableTextures()"
  },
  {
    "label": "GetPageTableTexture()",
    "kind": "Method",
    "detail": "Function (FRHITexture*)",
    "insertText": "GetPageTableTexture(uint32 InPageTableIndex)"
  },
  {
    "label": "GetPageTableIndirectionTexture()",
    "kind": "Method",
    "detail": "Function (FRHITexture*)",
    "insertText": "GetPageTableIndirectionTexture()"
  },
  {
    "label": "GetPhysicalTextureSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetPhysicalTextureSize(uint32 InLayerIndex)"
  },
  {
    "label": "GetPhysicalTexture()",
    "kind": "Method",
    "detail": "Function (FRHITexture*)",
    "insertText": "GetPhysicalTexture(uint32 InLayerIndex)"
  },
  {
    "label": "GetPhysicalTextureSRV()",
    "kind": "Method",
    "detail": "Function (FRHIShaderResourceView*)",
    "insertText": "GetPhysicalTextureSRV(uint32 InLayerIndex, bool bSRGB)"
  },
  {
    "label": "GetPackedPageTableUniform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPackedPageTableUniform(FUintVector4* OutUniform)"
  },
  {
    "label": "GetPackedUniform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPackedUniform(FUintVector4* OutUniform, uint32 LayerIndex)"
  },
  {
    "label": "DumpToConsole()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpToConsole(bool bVerbose)"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (} const FAllocatedVTDescription&)",
    "insertText": "GetDescription()"
  },
  {
    "label": "GetHeightInPixels()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetHeightInPixels()"
  },
  {
    "label": "GetDepthInPixels()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetDepthInPixels()"
  },
  {
    "label": "TryMapLockedTiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryMapLockedTiles(class FVirtualTextureSystem* InSystem)"
  },
  {
    "label": "IAllocatedVirtualTexture()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IAllocatedVirtualTexture()"
  },
  {
    "label": "GetAllocatedVirtualTexture()",
    "kind": "Method",
    "detail": "Function (} FAllocatedVTDescription Description ; uint32 BlockWidthInTiles ; uint32 BlockHeightInTiles ; uint32 WidthInBlocks ; uint32 HeightInBlocks ; uint32 DepthInTiles ; uint32 FrameDeleted ; int32 NumRefs ; bool bIsWaitingToMap ; EVTPageTableFormat PageTableFormat ; uint32 SpaceID ; uint32 MaxLevel ; uint32 VirtualAddress ; uint32 VirtualPageX ; uint32 VirtualPageY ; } ; class IAdaptiveVirtualTexture { public : IAllocatedVirtualTexture*)",
    "insertText": "GetAllocatedVirtualTexture()"
  },
  {
    "label": "IAdaptiveVirtualTexture()",
    "kind": "Method",
    "detail": "Function (protected : class FVirtualTextureSystem ; ~)",
    "insertText": "IAdaptiveVirtualTexture()"
  },
  {
    "label": "GetSpaceID()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetSpaceID()"
  },
  {
    "label": "Destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Destroy(class FVirtualTextureSystem* InSystem)"
  },
  {
    "label": "FVirtualTextureLocalTile()",
    "kind": "Method",
    "detail": "Function (} ; struct FAdaptiveVTDescription { uint32 TileCountX ; uint32 TileCountY ; uint32 MaxAdaptiveLevel ; } ; union FVirtualTextureLocalTile {)",
    "insertText": "FVirtualTextureLocalTile()"
  },
  {
    "label": "FVirtualTextureLocalTile()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FVirtualTextureLocalTile(const FVirtualTextureProducerHandle& InProducerHandle, uint32 InLocal_vAddress, uint8 InLocal_vLevel) : PackedProducerHandle(InProducerHandle.PackedValue), Local_vAddress(InLocal_vAddress), Local_vLevel(InLocal_vLevel), Pad(0)"
  },
  {
    "label": "GetProducerHandle()",
    "kind": "Method",
    "detail": "Function (} FVirtualTextureProducerHandle)",
    "insertText": "GetProducerHandle()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} uint64 PackedValue ; struct { uint32 PackedProducerHandle ; uint32 Local_vAddress : 2 4 ; uint32 Local_vLevel : 4 ; uint32 Pad : 4 ; } ; bool)",
    "insertText": "operator(const FVirtualTextureLocalTile& Lhs, const FVirtualTextureLocalTile& Rhs)"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogVirtualTexturing, Log, All)"
  },
  {
    "label": "DECLARE_STATS_GROUP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_STATS_GROUP(TEXT(\"Virtual Texturing\"), STATGROUP_VirtualTexturing, STATCAT_Advanced)"
  },
  {
    "label": "DECLARE_STATS_GROUP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_STATS_GROUP(TEXT(\"Virtual Texture Memory\"), STATGROUP_VirtualTextureMemory, STATCAT_Advanced)"
  }
]