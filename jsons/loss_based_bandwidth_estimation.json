[
  {
    "label": "LossBasedControlConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "LossBasedControlConfig"
  },
  {
    "label": "require",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "require"
  },
  {
    "label": "LossBasedBandwidthEstimation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LossBasedBandwidthEstimation"
  },
  {
    "label": "require",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "require"
  },
  {
    "label": "GoogCcStatePrinter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GoogCcStatePrinter"
  },
  {
    "label": "LossBasedControlConfig()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "LossBasedControlConfig(const FieldTrialsView* key_value_config)"
  },
  {
    "label": "LossBasedBandwidthEstimation()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "LossBasedBandwidthEstimation(\n      const FieldTrialsView* key_value_config)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (DataRate)",
    "insertText": "Update(Timestamp at_time,\n                  DataRate min_bitrate,\n                  DataRate wanted_bitrate,\n                  TimeDelta last_round_trip_time)"
  },
  {
    "label": "UpdateAcknowledgedBitrate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAcknowledgedBitrate(DataRate acknowledged_bitrate,\n                                 Timestamp at_time)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(DataRate bitrate)"
  },
  {
    "label": "UpdateLossStatistics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLossStatistics(const std::vector<PacketResult>& packet_results,\n                            Timestamp at_time)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset(DataRate bitrate)"
  }
]