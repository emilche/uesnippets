[
  {
    "label": "FPropertyPath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyPath"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FStructProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructProperty"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "ISequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencer"
  },
  {
    "label": "UMovieSceneSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSection"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneChannelMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelMetaData"
  },
  {
    "label": "FSequencerPropertyKeyedStatusHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerPropertyKeyedStatusHandler"
  },
  {
    "label": "FPropertyParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyParameters"
  },
  {
    "label": "FPropertyParameters()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / ArrayView . h \" # include \" Containers / UnrealString . h \" # include \" ISequencerPropertyKeyedStatus . h \" # include \" Math / Range . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" class FPropertyPath ; class FSequencer ; class FStructProperty ; class IPropertyHandle ; class ISequencer ; class UMovieSceneSection ; enum class EMovieSceneDataChangeType ; enum class EPropertyKeyedStatus : uint8 ; struct FMovieSceneChannelMetaData ; class FSequencerPropertyKeyedStatusHandler : public ISequencerPropertyKeyedStatusHandler { struct FPropertyParameters {)",
    "insertText": "FPropertyParameters(ISequencer& InSequencer, const IPropertyHandle& ActualProperty)"
  },
  {
    "label": "BuildPropertyPath()",
    "kind": "Method",
    "detail": "Function (ISequencer& Sequencer ; const IPropertyHandle& ActualProperty ; FString TrackPropertyName ; FName TrackPropertyStructName ; FName SubPropertyPath ; TRange<FFrameNumber> CurrentFrameRange ; FPropertyPath)",
    "insertText": "BuildPropertyPath()"
  },
  {
    "label": "FindTrackPropertyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "FindTrackPropertyName(FPropertyPath& InOutPropertyPath)"
  },
  {
    "label": "FindTrackPropertyStructName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "FindTrackPropertyStructName(const FPropertyPath& PropertyPath)"
  },
  {
    "label": "BuildSubPropertyPath()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "BuildSubPropertyPath()"
  },
  {
    "label": "FSequencerPropertyKeyedStatusHandler()",
    "kind": "Method",
    "detail": "Function (} ; public :)",
    "insertText": "FSequencerPropertyKeyedStatusHandler(TSharedRef<ISequencer> InSequencer)"
  },
  {
    "label": "FSequencerPropertyKeyedStatusHandler()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSequencerPropertyKeyedStatusHandler()"
  },
  {
    "label": "GetPropertyKeyedStatus()",
    "kind": "Method",
    "detail": "Function (EPropertyKeyedStatus)",
    "insertText": "GetPropertyKeyedStatus(const IPropertyHandle& PropertyHandle)"
  },
  {
    "label": "GetExternalHandler()",
    "kind": "Method",
    "detail": "Function (FOnGetPropertyKeyedStatus&)",
    "insertText": "GetExternalHandler(const FProperty* Property)"
  },
  {
    "label": "ResetCachedData()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ResetCachedData()"
  },
  {
    "label": "OnGlobalTimeChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGlobalTimeChanged()"
  },
  {
    "label": "OnMovieSceneDataChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMovieSceneDataChanged(EMovieSceneDataChangeType)"
  },
  {
    "label": "OnChannelChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChannelChanged(const FMovieSceneChannelMetaData*, UMovieSceneSection*)"
  },
  {
    "label": "CalculatePropertyKeyedStatus()",
    "kind": "Method",
    "detail": "Function (EPropertyKeyedStatus)",
    "insertText": "CalculatePropertyKeyedStatus(const IPropertyHandle& PropertyHandle)"
  },
  {
    "label": "GetKeyedStatusInSection()",
    "kind": "Method",
    "detail": "Function (EPropertyKeyedStatus)",
    "insertText": "GetKeyedStatusInSection(const FPropertyParameters& Parameters, const UMovieSceneSection& Section, EPropertyKeyedStatus MaxPropertyKeyedStatus)"
  },
  {
    "label": "HasMatchingProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMatchingProperty(const FPropertyParameters& Parameters, FName SubPropertyPath)"
  },
  {
    "label": "HasMatchingSubProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasMatchingSubProperty(const FStructProperty& StructProperty, TConstArrayView<FString> InPropertySegments)"
  }
]