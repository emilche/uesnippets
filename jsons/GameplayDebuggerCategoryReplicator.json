[
  {
    "label": "AGameplayDebuggerCategoryReplicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameplayDebuggerCategoryReplicator"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FGameplayDebuggerCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory"
  },
  {
    "label": "FGameplayDebuggerExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerExtension"
  },
  {
    "label": "UGameplayDebuggerRenderingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameplayDebuggerRenderingComponent"
  },
  {
    "label": "FGameplayDebuggerDataPackRPCParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerDataPackRPCParams"
  },
  {
    "label": "FGameplayDebuggerCategoryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerCategoryData"
  },
  {
    "label": "FGameplayDebuggerNetPack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerNetPack"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FGameplayDebuggerDebugActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerDebugActor"
  },
  {
    "label": "FGameplayDebuggerVisLogSync",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerVisLogSync"
  },
  {
    "label": "AGameplayDebuggerCategoryReplicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameplayDebuggerCategoryReplicator"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "NetDeltaSerialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NetDeltaSerialize(FNetDeltaSerializeInfo & DeltaParms)"
  },
  {
    "label": "OnCategoriesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCategoriesChanged()"
  },
  {
    "label": "PopulateFromOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateFromOwner()"
  },
  {
    "label": "ApplyToOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToOwner()"
  },
  {
    "label": "SetReplicatorOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicatorOwner(APlayerController* InOwnerPC)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool bEnable)"
  },
  {
    "label": "SetCategoryEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategoryEnabled(int32 CategoryId, bool bEnable)"
  },
  {
    "label": "SetDebugActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugActor(AActor* Actor, bool bSelectInEditor = false)"
  },
  {
    "label": "SetViewPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewPoint(const FVector& InViewLocation, const FVector& InViewDirection)"
  },
  {
    "label": "ResetViewPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetViewPoint()"
  },
  {
    "label": "SendCategoryInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCategoryInputEvent(int32 CategoryId, int32 HandlerId)"
  },
  {
    "label": "SendExtensionInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendExtensionInputEvent(int32 ExtensionId, int32 HandlerId)"
  },
  {
    "label": "CollectCategoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectCategoryData(bool bForce = false)"
  },
  {
    "label": "InitForEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitForEditor()"
  },
  {
    "label": "OnRep_ReplicatedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRep_ReplicatedData()"
  },
  {
    "label": "OnCategoriesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCategoriesChanged()"
  },
  {
    "label": "OnExtensionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExtensionsChanged()"
  },
  {
    "label": "NotifyCategoriesToolState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCategoriesToolState(bool bIsActive)"
  },
  {
    "label": "NotifyExtensionsToolState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyExtensionsToolState(bool bIsActive)"
  },
  {
    "label": "ServerSetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerSetEnabled(bool bEnable)"
  },
  {
    "label": "ServerSetDebugActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerSetDebugActor(AActor* Actor, bool bSelectInEditor)"
  },
  {
    "label": "ServerSetViewPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerSetViewPoint(const FVector& InViewLocation, const FVector& InViewDirection)"
  },
  {
    "label": "ServerResetViewPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerResetViewPoint()"
  },
  {
    "label": "ServerSetCategoryEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerSetCategoryEnabled(int32 CategoryId, bool bEnable)"
  },
  {
    "label": "ServerSendCategoryInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerSendCategoryInputEvent(int32 CategoryId, int32 HandlerId)"
  },
  {
    "label": "ServerSendExtensionInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerSendExtensionInputEvent(int32 ExtensionId, int32 HandlerId)"
  },
  {
    "label": "ClientDataPackPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClientDataPackPacket(const FGameplayDebuggerDataPackRPCParams& Params)"
  },
  {
    "label": "OnReceivedDataPackPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedDataPackPacket(int32 CategoryId, int32 DataPackId, const FGameplayDebuggerDataPack& DataPacket)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "SendDataPackPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendDataPackPacket(FName CategoryName, int32 DataPackIdx, FGameplayDebuggerDataPack& DataPack)"
  }
]