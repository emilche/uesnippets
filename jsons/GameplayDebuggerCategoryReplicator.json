[
  {
    "label": "AGameplayDebuggerCategoryReplicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameplayDebuggerCategoryReplicator"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FGameplayDebuggerCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerCategory"
  },
  {
    "label": "FGameplayDebuggerExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameplayDebuggerExtension"
  },
  {
    "label": "UGameplayDebuggerRenderingComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameplayDebuggerRenderingComponent"
  },
  {
    "label": "FGameplayDebuggerDataPackRPCParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerDataPackRPCParams"
  },
  {
    "label": "FGameplayDebuggerCategoryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerCategoryData"
  },
  {
    "label": "FGameplayDebuggerNetPack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerNetPack"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FGameplayDebuggerDebugActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerDebugActor"
  },
  {
    "label": "FGameplayDebuggerVisLogSync",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameplayDebuggerVisLogSync"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "ELevelTick",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELevelTick"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Class . h \" # include \" GameFramework / Actor . h \" # include \" GameplayDebuggerTypes . h \" # include \" GameplayDebuggerCategoryReplicator . generated . h \" class AGameplayDebuggerCategoryReplicator ; class APlayerController ; class FGameplayDebuggerCategory ; class FGameplayDebuggerExtension ; class UGameplayDebuggerRenderingComponent ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(NotReplicated)"
  },
  {
    "label": "FGameplayDebuggerNetPack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FGameplayDebuggerNetPack() : Owner(nullptr)"
  },
  {
    "label": "NetDeltaSerialize()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "NetDeltaSerialize(FNetDeltaSerializeInfo & DeltaParms)"
  },
  {
    "label": "OnCategoriesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCategoriesChanged()"
  },
  {
    "label": "PopulateFromOwner()",
    "kind": "Method",
    "detail": "Function (# if UE_WITH_IRIS void)",
    "insertText": "PopulateFromOwner()"
  },
  {
    "label": "ApplyToOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyToOwner()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_TwoParams(FNotifyGameplayDebuggerOwnerChange, AGameplayDebuggerCategoryReplicator*, APlayerController*)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UCLASS(NotBlueprintable, NotBlueprintType, notplaceable, noteditinlinenew, hidedropdown, Transient, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() GAMEPLAYDEBUGGER_API virtual class UNetConnection* GetNetConnection()"
  },
  {
    "label": "IsNetRelevantFor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNetRelevantFor(const AActor* RealViewer, const AActor* ViewTarget, const FVector& SrcLocation)"
  },
  {
    "label": "BeginPlay()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "BeginPlay()"
  },
  {
    "label": "BeginReplication()",
    "kind": "Method",
    "detail": "Function (# if UE_WITH_IRIS void)",
    "insertText": "BeginReplication()"
  },
  {
    "label": "GetNetOwner()",
    "kind": "Method",
    "detail": "Function (const AActor*)",
    "insertText": "GetNetOwner()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "TickActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickActor(float DeltaTime, enum ELevelTick TickType, FActorTickFunction& ThisTickFunction)"
  },
  {
    "label": "PostNetReceive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostNetReceive()"
  },
  {
    "label": "PreReplication()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreReplication(IRepChangedPropertyTracker& ChangedPropertyTracker)"
  },
  {
    "label": "SetReplicatorOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplicatorOwner(APlayerController* InOwnerPC)"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (FNotifyGameplayDebuggerOwnerChange NotifyDebuggerOwnerChange ; void)",
    "insertText": "SetEnabled(bool bEnable)"
  },
  {
    "label": "SetCategoryEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategoryEnabled(int32 CategoryId, bool bEnable)"
  },
  {
    "label": "SetDebugActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDebugActor(AActor* Actor, bool bSelectInEditor = false)"
  },
  {
    "label": "SetViewPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewPoint(const FVector& InViewLocation, const FVector& InViewDirection)"
  },
  {
    "label": "IsViewPointSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsViewPointSet()"
  },
  {
    "label": "ResetViewPoint()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetViewPoint()"
  },
  {
    "label": "SendCategoryInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendCategoryInputEvent(int32 CategoryId, int32 HandlerId)"
  },
  {
    "label": "SendExtensionInputEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SendExtensionInputEvent(int32 ExtensionId, int32 HandlerId)"
  },
  {
    "label": "CollectCategoryData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectCategoryData(bool bForce = false)"
  },
  {
    "label": "GetDebugActor()",
    "kind": "Method",
    "detail": "Function (AActor*)",
    "insertText": "GetDebugActor()"
  },
  {
    "label": "GetDebugActorName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetDebugActorName()"
  },
  {
    "label": "GetVisLogSyncData()",
    "kind": "Method",
    "detail": "Function (const FGameplayDebuggerVisLogSync&)",
    "insertText": "GetVisLogSyncData()"
  },
  {
    "label": "HasDebugActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDebugActor()"
  },
  {
    "label": "GetNumExtensions()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumExtensions()"
  },
  {
    "label": "GetCategory()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FGameplayDebuggerCategory>)",
    "insertText": "GetCategory(int32 CategoryId)"
  },
  {
    "label": "OnExtensionsChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExtensionsChanged()"
  },
  {
    "label": "NotifyCategoriesToolState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyCategoriesToolState(bool bIsActive)"
  },
  {
    "label": "NotifyExtensionsToolState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyExtensionsToolState(bool bIsActive)"
  },
  {
    "label": "OnReceivedDataPackPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReceivedDataPackPacket(int32 CategoryId, int32 DataPackId, const FGameplayDebuggerDataPack& DataPacket)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "SendDataPackPacket()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SendDataPackPacket(FName CategoryName, int32 DataPackIdx, FGameplayDebuggerDataPack& DataPack)"
  }
]