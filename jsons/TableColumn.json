[
  {
    "label": "FBaseTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBaseTreeNode"
  },
  {
    "label": "IFilterValueConverter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFilterValueConverter"
  },
  {
    "label": "FTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTable"
  },
  {
    "label": "ITableCellValueGetter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableCellValueGetter"
  },
  {
    "label": "ITableCellValueFormatter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableCellValueFormatter"
  },
  {
    "label": "ITableCellValueSorter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITableCellValueSorter"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TRACEINSIGHTSCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TRACEINSIGHTSCORE_API"
  },
  {
    "label": "ShouldBeVisible()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Types / SlateEnums . h \" # include \" Misc / EnumClassFlags . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" InsightsCore / Table / ViewModels / TableCellValue . h \" namespace UE::Insights { class FBaseTreeNode ; class IFilterValueConverter ; class FTable ; class ITableCellValueGetter ; class ITableCellValueFormatter ; class ITableCellValueSorter ; enum class ETableColumnFlags : uint32 { None = 0,)",
    "insertText": "ShouldBeVisible(1 << 0), CanBeHidden = (1 << 1), CanBeFiltered = (1 << 2), IsHierarchy = (1 << 3), IsDynamic = (1 << 4)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ENUM_CLASS_FLAGS(ETableColumnFlags)"
  },
  {
    "label": "FTableColumn()",
    "kind": "Method",
    "detail": "Function (enum class ETableColumnAggregation : uint32 { None = 0,Sum,Min,Max,SameValue } ; class FTableColumn { public :)",
    "insertText": "FTableColumn()"
  },
  {
    "label": "FTableColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTableColumn(const FName InId) : Id(InId) , Index(-1) , ShortName() , TitleName() , Description() , bIsVisible(false) , Flags(ETableColumnFlags::None) , HorizontalAlignment(HAlign_Left) , InitialWidth(60.0f) , MinWidth(0.0f) , MaxWidth(FLT_MAX) , DataType(ETableCellDataType::Unknown) , Aggregation(ETableColumnAggregation::None) , ValueGetter(GetDefaultValueGetter()) , ValueFormatter(GetDefaultValueFormatter()) , ValueSorter(nullptr) , InitialSortMode(EColumnSortMode::Ascending) , ParentTable(nullptr)"
  },
  {
    "label": "GetId()",
    "kind": "Method",
    "detail": "Function (} const FName&)",
    "insertText": "GetId()"
  },
  {
    "label": "GetShortName()",
    "kind": "Method",
    "detail": "Function (Index = InIndex ; } const FText&)",
    "insertText": "GetShortName()"
  },
  {
    "label": "GetTitleName()",
    "kind": "Method",
    "detail": "Function (ShortName = InShortName ; } const FText&)",
    "insertText": "GetTitleName()"
  },
  {
    "label": "GetDescription()",
    "kind": "Method",
    "detail": "Function (TitleName = InTitleName ; } const FText&)",
    "insertText": "GetDescription()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (Description = InDescription ; } bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "OnVisibilityChanged()",
    "kind": "Method",
    "detail": "Function (bIsVisible = true ;)",
    "insertText": "OnVisibilityChanged()"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Hide()"
  },
  {
    "label": "ToggleVisibility()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ToggleVisibility()"
  },
  {
    "label": "SetVisibilityFlag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetVisibilityFlag(bool bOnOff)"
  },
  {
    "label": "ShouldBeVisible()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldBeVisible()"
  },
  {
    "label": "CanBeHidden()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanBeHidden()"
  },
  {
    "label": "CanBeFiltered()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanBeFiltered()"
  },
  {
    "label": "IsHierarchy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsHierarchy()"
  },
  {
    "label": "IsDynamic()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsDynamic()"
  },
  {
    "label": "SetFlags()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFlags(ETableColumnFlags InFlags)"
  },
  {
    "label": "GetHorizontalAlignment()",
    "kind": "Method",
    "detail": "Function (Flags = InFlags ; } EHorizontalAlignment)",
    "insertText": "GetHorizontalAlignment()"
  },
  {
    "label": "GetInitialWidth()",
    "kind": "Method",
    "detail": "Function (HorizontalAlignment = InHorizontalAlignment ; } float)",
    "insertText": "GetInitialWidth()"
  },
  {
    "label": "GetMinWidth()",
    "kind": "Method",
    "detail": "Function (InitialWidth = InWidth ; } float)",
    "insertText": "GetMinWidth()"
  },
  {
    "label": "GetMaxWidth()",
    "kind": "Method",
    "detail": "Function (MinWidth = InWidth ; } float)",
    "insertText": "GetMaxWidth()"
  },
  {
    "label": "IsFixedWidth()",
    "kind": "Method",
    "detail": "Function (MaxWidth = InWidth ; } bool)",
    "insertText": "IsFixedWidth()"
  },
  {
    "label": "GetAggregation()",
    "kind": "Method",
    "detail": "Function (DataType = InDataType ; } ETableColumnAggregation)",
    "insertText": "GetAggregation()"
  },
  {
    "label": "GetDefaultValueGetter()",
    "kind": "Method",
    "detail": "Function (Aggregation = InAggregation ; } TSharedRef<ITableCellValueGetter>)",
    "insertText": "GetDefaultValueGetter()"
  },
  {
    "label": "GetValueGetter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableCellValueGetter>)",
    "insertText": "GetValueGetter()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (ValueGetter = InValueGetter ; } const TOptional<FTableCellValue>)",
    "insertText": "GetValue(const FBaseTreeNode& InNode)"
  },
  {
    "label": "GetValueId()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetValueId(const FBaseTreeNode& InNode)"
  },
  {
    "label": "GetDefaultValueFormatter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableCellValueFormatter>)",
    "insertText": "GetDefaultValueFormatter()"
  },
  {
    "label": "GetValueFormatter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableCellValueFormatter>)",
    "insertText": "GetValueFormatter()"
  },
  {
    "label": "GetValueAsText()",
    "kind": "Method",
    "detail": "Function (ValueFormatter = InValueFormatter ; } FText)",
    "insertText": "GetValueAsText(const FBaseTreeNode& InNode)"
  },
  {
    "label": "GetValueAsTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetValueAsTooltipText(const FBaseTreeNode& InNode)"
  },
  {
    "label": "GetValueAsGroupingText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetValueAsGroupingText(const FBaseTreeNode& InNode)"
  },
  {
    "label": "CopyValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "CopyValue(const FBaseTreeNode& InNode)"
  },
  {
    "label": "CopyTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "CopyTooltip(const FBaseTreeNode& InNode)"
  },
  {
    "label": "GetValueAsSerializableString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetValueAsSerializableString(const FBaseTreeNode& InNode)"
  },
  {
    "label": "GetValueSorter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<ITableCellValueSorter>)",
    "insertText": "GetValueSorter()"
  },
  {
    "label": "CanBeSorted()",
    "kind": "Method",
    "detail": "Function (ValueSorter = InValueSorter ; } bool)",
    "insertText": "CanBeSorted()"
  },
  {
    "label": "GetInitialSortMode()",
    "kind": "Method",
    "detail": "Function (} EColumnSortMode::Type)",
    "insertText": "GetInitialSortMode()"
  },
  {
    "label": "GetValueConverter()",
    "kind": "Method",
    "detail": "Function (InitialSortMode = InMode ; } TSharedPtr<IFilterValueConverter>)",
    "insertText": "GetValueConverter()"
  },
  {
    "label": "GetParentTable()",
    "kind": "Method",
    "detail": "Function (ValueConverter = InValueConverter ; } TWeakPtr<FTable>)",
    "insertText": "GetParentTable()"
  }
]