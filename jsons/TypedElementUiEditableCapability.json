[
  {
    "label": "ITypedElementUiEditableCapability",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITypedElementUiEditableCapability"
  },
  {
    "label": "TTypedElementUiEditableCapability",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TTypedElementUiEditableCapability"
  },
  {
    "label": "SLATE_METADATA_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Interfaces / TypedElementUiCapabilities . h \" # include \" Misc / Attribute . h \" class ITypedElementUiEditableCapability : public ITypedElementUiCapability { public :)",
    "insertText": "SLATE_METADATA_TYPE(ITypedElementUiEditableCapability, ITypedElementUiCapability) ~ITypedElementUiEditableCapability()"
  },
  {
    "label": "EnterEditingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterEditingMode()"
  },
  {
    "label": "ExitEditingMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitEditingMode()"
  },
  {
    "label": "SetIsReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsReadOnly(const TAttribute<bool>& InIsReadOnly)"
  },
  {
    "label": "TTypedElementUiEditableCapability()",
    "kind": "Method",
    "detail": "Function (} ; template<WidgetType> class TTypedElementUiEditableCapability : public ITypedElementUiEditableCapability { public :)",
    "insertText": "TTypedElementUiEditableCapability(WidgetType& InWidget) : Widget(InWidget)"
  },
  {
    "label": "SetReadOnly()",
    "kind": "Method",
    "detail": "Function (Widget .)",
    "insertText": "SetReadOnly(InIsReadOnly)"
  }
]