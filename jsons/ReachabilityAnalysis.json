[
  {
    "label": "FUObjectItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUObjectItem"
  },
  {
    "label": "FIterationTimerStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIterationTimerStat"
  },
  {
    "label": "FStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStats"
  },
  {
    "label": "SetIncrementalReachabilityAnalysisEnabled()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" struct FUObjectItem ; void)",
    "insertText": "SetIncrementalReachabilityAnalysisEnabled(bool bEnabled)"
  },
  {
    "label": "GetIncrementalReachabilityAnalysisEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIncrementalReachabilityAnalysisEnabled()"
  },
  {
    "label": "SetReachabilityAnalysisTimeLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReachabilityAnalysisTimeLimit(float TimeLimitSeconds)"
  },
  {
    "label": "GetReachabilityAnalysisTimeLimit()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetReachabilityAnalysisTimeLimit()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (namespace UE::GC { union FUnreachableObject { FUObjectItem* ObjectItem ; UObject* Object ; } ; } namespace UE::GC::Private { struct FIterationTimerStat { double Total = 0 . 0 ; double Max = 0 . 0 ; int32 NumIterations = 0 ; int32 SlowestIteration = 0 ; double)",
    "insertText": "operator(double ElapsedTime)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (int32 IterationIndex = NumIterations + + ; Total + = ElapsedTime ;)",
    "insertText": "if(ElapsedTime > Max)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (Max = ElapsedTime ; SlowestIteration = IterationIndex ; } return Total ; } FString)",
    "insertText": "ToString()"
  },
  {
    "label": "DumpToLog()",
    "kind": "Method",
    "detail": "Function (} ; struct FStats { double TotalTime = 0 . 0 ; double ReachabilityTimeLimit = 0 . 0 ; double UnhashingTimeLimit = 0 . 0 ; double DestroyGarbageTimeLimit = 0 . 0 ; double VerifyTime = 0 . 0 ; double VerifyNoUnreachableTime = 0 . 0 ; double GarbageTrackingTime = 0 . 0 ; double InitialReferenceCollectionTime = 0 . 0 ; double MarkObjectsAsUnreachableTime = 0 . 0 ; double TraceExternalRootsTime = 0 . 0 ; double NotifyUnreachableTime = 0 . 0 ; double DissolveUnreachableClustersTime = 0 . 0 ; FIterationTimerStat ReachabilityTime ; FIterationTimerStat ReferenceCollectionTime ; FIterationTimerStat GatherUnreachableTime ; FIterationTimerStat UnhashingTime ; FIterationTimerStat DestroyGarbageTime ; int32 NumObjects = 0 ; int32 NumRoots = 0 ; int32 NumClusters = 0 ; int32 NumClusteredObjects = 0 ; int32 NumUnreachableObjects = 0 ; int32 NumDissolvedClusters = 0 ; int32 NumUnreachableClusteredObjects = 0 ; int32 NumBarrierObjects = 0 ; int32 NumWeakReferencesForClearing = 0 ; int32 NumObjectsThatNeedWeakReferenceClearing = 0 ; bool bStartedAsFullPurge = false ; bool bFinishedAsFullPurge = false ; bool bFlushedAsyncLoading = false ; bool bPurgedPreviousGCObjects = false ; bool bInProgress = false ; void)",
    "insertText": "DumpToLog()"
  }
]