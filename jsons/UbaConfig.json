[
  {
    "label": "Config",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Config"
  },
  {
    "label": "Logger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Logger"
  },
  {
    "label": "ConfigTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConfigTable"
  },
  {
    "label": "ValueType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ValueType"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Value"
  },
  {
    "label": "GetValueAsString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaStringBuffer . h \" namespace uba { class Config ; class Logger ; class ConfigTable { public : bool)",
    "insertText": "GetValueAsString(const tchar*& out, const tchar* key)"
  },
  {
    "label": "GetValueAsString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValueAsString(TString& out, const tchar* key)"
  },
  {
    "label": "GetValueAsU32()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValueAsU32(u32& out, const tchar* key)"
  },
  {
    "label": "GetValueAsInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValueAsInt(int& out, const tchar* key)"
  },
  {
    "label": "GetValueAsBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetValueAsBool(bool& out, const tchar* key)"
  },
  {
    "label": "GetTable()",
    "kind": "Method",
    "detail": "Function (const ConfigTable*)",
    "insertText": "GetTable(const tchar* name)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(const tchar* key, int value)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(const tchar* key, u32 value)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(const tchar* key, bool value)"
  },
  {
    "label": "AddValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddValue(const tchar* key, const tchar* str)"
  },
  {
    "label": "LoadFromFile()",
    "kind": "Method",
    "detail": "Function (private : ConfigTable* m_parent = nullptr ; enum ValueType { ValueType_Value,ValueType_String } ; struct Value { ValueType type ; TString string ; } ; Map<TString,Value> m_values ; UnorderedMap<TString,ConfigTable> m_tables ; Config ; } ; class Config : public ConfigTable { public : bool)",
    "insertText": "LoadFromFile(Logger& logger, const tchar* configFile)"
  },
  {
    "label": "LoadFromText()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadFromText(Logger& logger, const char* text, u64 textLen)"
  },
  {
    "label": "IsLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLoaded()"
  },
  {
    "label": "SaveToFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveToFile(Logger& logger, const tchar* configFile)"
  }
]