[
  {
    "label": "OObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OObject"
  },
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "ARCHIVE_CTOR",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ARCHIVE_CTOR"
  },
  {
    "label": "OArchive()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_Abc_OArchive_h # define Alembic_Abc_OArchive_h # include<Alembic / Util / Export . h> # include<Alembic / Abc / Foundation . h> # include<Alembic / Abc / Base . h> # include<Alembic / Abc / Argument . h> namespace Alembic { namespace Abc { namespace ALEMBIC_VERSION_NS { class OObject ; class ALEMBIC_EXPORT OArchive : public Base { public : typedef OArchive this_type ;)",
    "insertText": "OArchive()"
  },
  {
    "label": "OArchive()",
    "kind": "Method",
    "detail": "Function (} template<class ARCHIVE_CTOR>)",
    "insertText": "OArchive(ARCHIVE_CTOR iCtor, const std::string &iFileName, const Argument &iArg0 = Argument(), const Argument &iArg1 = Argument())"
  },
  {
    "label": "OArchive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OArchive(AbcA::ArchiveWriterPtr iPtr, ErrorHandler::Policy iPolicy = ErrorHandler::kThrowPolicy ) : m_archive( iPtr)"
  },
  {
    "label": "getErrorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getErrorHandler().setPolicy( iPolicy)"
  },
  {
    "label": "OArchive()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OArchive(AbcA::ArchiveWriterPtr iPtr, WrapExistingFlag , ErrorHandler::Policy iPolicy = ErrorHandler::kThrowPolicy ) : m_archive( iPtr)"
  },
  {
    "label": "getName()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "getName()"
  },
  {
    "label": "getTop()",
    "kind": "Method",
    "detail": "Function (OObject)",
    "insertText": "getTop()"
  },
  {
    "label": "getCompressionHint()",
    "kind": "Method",
    "detail": "Function (int8_t)",
    "insertText": "getCompressionHint()"
  },
  {
    "label": "setCompressionHint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCompressionHint(int8_t iCh)"
  },
  {
    "label": "addTimeSampling()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "addTimeSampling(const AbcA::TimeSampling & iTs)"
  },
  {
    "label": "getTimeSampling()",
    "kind": "Method",
    "detail": "Function (AbcA::TimeSamplingPtr)",
    "insertText": "getTimeSampling(uint32_t iIndex)"
  },
  {
    "label": "getNumTimeSamplings()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "getNumTimeSamplings()"
  },
  {
    "label": "getPtr()",
    "kind": "Method",
    "detail": "Function (AbcA::ArchiveWriterPtr)",
    "insertText": "getPtr()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (m_archive .)",
    "insertText": "reset()"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "valid()"
  },
  {
    "label": "ALEMBIC_OPERATOR_BOOL()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ALEMBIC_OPERATOR_BOOL(valid())"
  },
  {
    "label": "GetArchiveWriterPtr()",
    "kind": "Method",
    "detail": "Function (private : AbcA::ArchiveWriterPtr m_archive ; } ; AbcA::ArchiveWriterPtr)",
    "insertText": "GetArchiveWriterPtr(OArchive &iArch)"
  },
  {
    "label": "OArchive()",
    "kind": "Method",
    "detail": "Function (} template<class ARCHIVE_CTOR>)",
    "insertText": "OArchive(ARCHIVE_CTOR iCtor, const std::string &iFileName, const Argument &iArg0, const Argument &iArg1)"
  },
  {
    "label": "args()",
    "kind": "Method",
    "detail": "Function (Arguments)",
    "insertText": "args(ErrorHandler::kThrowPolicy)"
  },
  {
    "label": "setInto()",
    "kind": "Method",
    "detail": "Function (iArg0 .)",
    "insertText": "setInto(args)"
  },
  {
    "label": "getErrorHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getErrorHandler().setPolicy( args.getErrorHandlerPolicy())"
  },
  {
    "label": "ALEMBIC_ABC_SAFE_CALL_BEGIN()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ALEMBIC_ABC_SAFE_CALL_BEGIN(\"OArchive::OArchive( iFileName )\")"
  },
  {
    "label": "iCtor()",
    "kind": "Method",
    "detail": "Function (m_archive =)",
    "insertText": "iCtor(iFileName, args.getMetaData())"
  },
  {
    "label": "ALEMBIC_ABC_SAFE_CALL_END_RESET()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ALEMBIC_ABC_SAFE_CALL_END_RESET()"
  }
]