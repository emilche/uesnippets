[
  {
    "label": "FAnimCurveBufferAccess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimCurveBufferAccess"
  },
  {
    "label": "UAnimCurveCompressionCodec_UniformIndexable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimCurveCompressionCodec_UniformIndexable"
  },
  {
    "label": "FAnimCurveBufferAccess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimCurveBufferAccess(const UAnimSequenceBase* InSequence, FName InName)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetTime(int32 SampleIndex)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(meta = (DisplayName = \"Uniform Indexable\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITORONLY_DATA ENGINE_API virtual bool Compress(const FCompressibleAnimData& AnimSeq, FAnimCurveCompressionResult& OutResult)"
  },
  {
    "label": "PopulateDDCKey()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateDDCKey(FArchive& Ar)"
  },
  {
    "label": "DecompressCurves()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DecompressCurves(const FCompressedAnimSequence& AnimSeq, FBlendedCurve& Curves, float CurrentTime)"
  },
  {
    "label": "DecompressCurve()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "DecompressCurve(const FCompressedAnimSequence& AnimSeq, FName CurveName, float CurrentTime)"
  }
]