[
  {
    "label": "StlThreadEnvironment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StlThreadEnvironment"
  },
  {
    "label": "Task",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Task"
  },
  {
    "label": "EnvThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EnvThread"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_CXX11_THREADPOOL_THREAD_ENVIRONMENT_H # define EIGEN_CXX11_THREADPOOL_THREAD_ENVIRONMENT_H namespace Eigen { struct StlThreadEnvironment { struct Task { std::function<)",
    "insertText": "void()"
  },
  {
    "label": "EnvThread()",
    "kind": "Method",
    "detail": "Function (} ; class EnvThread { public :)",
    "insertText": "EnvThread(std::function<void()> f) : thr_(std::move(f))"
  },
  {
    "label": "EnvThread()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "EnvThread()"
  },
  {
    "label": "join()",
    "kind": "Method",
    "detail": "Function (thr_ .)",
    "insertText": "join()"
  },
  {
    "label": "OnCancel()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnCancel()"
  },
  {
    "label": "CreateThread()",
    "kind": "Method",
    "detail": "Function (} private : std::thread thr_ ; } ; EnvThread*)",
    "insertText": "CreateThread(std::function<void()> f)"
  },
  {
    "label": "CreateTask()",
    "kind": "Method",
    "detail": "Function (} Task)",
    "insertText": "CreateTask(std::function<void()> f)"
  },
  {
    "label": "ExecuteTask()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ExecuteTask(const Task& t)"
  },
  {
    "label": "f()",
    "kind": "Method",
    "detail": "Function (t .)",
    "insertText": "f()"
  }
]