[
  {
    "label": "FChunkHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FChunkHeader"
  },
  {
    "label": "IFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileSystem"
  },
  {
    "label": "FManifestMeta",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FManifestMeta"
  },
  {
    "label": "IBuildManifestSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildManifestSet"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FBuildPatchUtils",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildPatchUtils"
  },
  {
    "label": "GetChunkNewFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetChunkNewFilename(BuildPatchServices::EFeatureLevel FeatureLevel, const FGuid& ChunkGUID, const uint64& ChunkHash)"
  },
  {
    "label": "GetFileNewFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFileNewFilename(BuildPatchServices::EFeatureLevel FeatureLevel, const FGuid& FileGUID, const FSHAHash& FileHash)"
  },
  {
    "label": "GetFileNewFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFileNewFilename(BuildPatchServices::EFeatureLevel FeatureLevel, const FGuid& FileGUID, const uint64& FilePartHash)"
  },
  {
    "label": "GetChunkDetailFromNewFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetChunkDetailFromNewFilename(const FString& ChunkNewFilename, FGuid& ChunkGUID, uint64& ChunkHash)"
  },
  {
    "label": "GetFileDetailFromNewFilename()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFileDetailFromNewFilename(const FString& FileNewFilename, FGuid& FileGUID, FSHAHash& FileHash)"
  },
  {
    "label": "GetChunkOldFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetChunkOldFilename(const FGuid& ChunkGUID)"
  },
  {
    "label": "GetFileOldFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFileOldFilename(const FGuid& FileGUID)"
  },
  {
    "label": "GetDataTypeOldFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDataTypeOldFilename(EBuildPatchDataType DataType, const FGuid& Guid)"
  },
  {
    "label": "GetDataFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDataFilename(const FBuildPatchAppManifestRef& Manifest, const FGuid& DataGUID)"
  },
  {
    "label": "GetDataFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDataFilename(const FBuildPatchAppManifest&    Manifest, const FGuid& DataGUID)"
  },
  {
    "label": "GetGUIDFromFilename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetGUIDFromFilename(const FString& DataFilename, FGuid& DataGUID)"
  },
  {
    "label": "GenerateNewBuildId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GenerateNewBuildId()"
  },
  {
    "label": "GetBackwardsCompatibleBuildId()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetBackwardsCompatibleBuildId(const BuildPatchServices::FManifestMeta& ManifestMeta)"
  },
  {
    "label": "GetChunkDeltaDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetChunkDeltaDirectory(const FBuildPatchAppManifest& DestinationManifest)"
  },
  {
    "label": "GetChunkDeltaFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetChunkDeltaFilename(const FBuildPatchAppManifest& SourceManifest, const FBuildPatchAppManifest& DestinationManifest)"
  },
  {
    "label": "VerifyFile()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "VerifyFile(BuildPatchServices::IFileSystem* FileSystem, const FString& FileToVerify, const FSHAHash& Hash1, const FSHAHash& Hash2, FBuildPatchFloatDelegate ProgressDelegate, FBuildPatchBoolRetDelegate ShouldPauseDelegate, FBuildPatchBoolRetDelegate ShouldAbortDelegate)"
  },
  {
    "label": "VerifyFile()",
    "kind": "Method",
    "detail": "Function (uint8)",
    "insertText": "VerifyFile(BuildPatchServices::IFileSystem* FileSystem, const FString& FileToVerify, const FSHAHash& Hash1, const FSHAHash& Hash2)"
  },
  {
    "label": "CalculateDiskSpaceRequirementsWithDeleteDuringInstall()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CalculateDiskSpaceRequirementsWithDeleteDuringInstall(\n\t\tconst TArray<FString>& InFilesToConstruct, \n\t\tint32 InCompletedFileCount, \n\t\tBuildPatchServices::IBuildManifestSet* InManifestSet, \n\t\tconst TArray<uint64>& InChunkDbSizesAtPosition, \n\t\tuint64 InTotalChunkDbSize)"
  }
]