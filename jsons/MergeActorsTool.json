[
  {
    "label": "FMergeActorsTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMergeActorsTool"
  },
  {
    "label": "GetReplaceSourceActors()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" IMergeActorsTool . h \" # include \" MergeProxyUtils / Utils . h \" class FMergeActorsTool : public IMergeActorsTool { public : bool)",
    "insertText": "GetReplaceSourceActors()"
  },
  {
    "label": "SetReplaceSourceActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReplaceSourceActors(bool bReplaceSourceActors)"
  },
  {
    "label": "RunMergeFromSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunMergeFromSelection()"
  },
  {
    "label": "RunMergeFromWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunMergeFromWidget()"
  },
  {
    "label": "CanMergeFromSelection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMergeFromSelection()"
  },
  {
    "label": "CanMergeFromWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMergeFromWidget()"
  },
  {
    "label": "RunMerge()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "RunMerge(const FString& PackageName, const TArray<TSharedPtr<FMergeComponentData>>& SelectedComponents)"
  },
  {
    "label": "GetSelectedComponentsInWidget()",
    "kind": "Method",
    "detail": "Function (const TArray<TSharedPtr<FMergeComponentData>>&)",
    "insertText": "GetSelectedComponentsInWidget()"
  }
]