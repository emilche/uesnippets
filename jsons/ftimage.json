[
  {
    "label": "FT_Vector_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Vector_"
  },
  {
    "label": "FT_BBox_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_BBox_"
  },
  {
    "label": "FT_Pixel_Mode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FT_Pixel_Mode_"
  },
  {
    "label": "FT_Palette_Mode_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FT_Palette_Mode_"
  },
  {
    "label": "FT_Bitmap_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Bitmap_"
  },
  {
    "label": "FT_Outline_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Outline_"
  },
  {
    "label": "FT_Outline_Funcs_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Outline_Funcs_"
  },
  {
    "label": "FT_Glyph_Format_",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FT_Glyph_Format_"
  },
  {
    "label": "FT_RasterRec_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_RasterRec_"
  },
  {
    "label": "FT_Span_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Span_"
  },
  {
    "label": "FT_Raster_Params_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Raster_Params_"
  },
  {
    "label": "FT_Raster_Funcs_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Raster_Funcs_"
  },
  {
    "label": "FT_CURVE_TAG()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTIMAGE_H__ # define __FTIMAGE_H__ # ifndef _STANDALONE_ # include<ft2build . h> # endif FT_BEGIN_HEADER typedef signed long FT_Pos ; typedef struct FT_Vector_ { FT_Pos x ; FT_Pos y ; } FT_Vector ; typedef struct FT_BBox_ { FT_Pos xMin,yMin ; FT_Pos xMax,yMax ; } FT_BBox ; typedef enum FT_Pixel_Mode_ { FT_PIXEL_MODE_NONE = 0,FT_PIXEL_MODE_MONO,FT_PIXEL_MODE_GRAY,FT_PIXEL_MODE_GRAY2,FT_PIXEL_MODE_GRAY4,FT_PIXEL_MODE_LCD,FT_PIXEL_MODE_LCD_V,FT_PIXEL_MODE_MAX } FT_Pixel_Mode ; # define ft_pixel_mode_none FT_PIXEL_MODE_NONE # define ft_pixel_mode_mono FT_PIXEL_MODE_MONO # define ft_pixel_mode_grays FT_PIXEL_MODE_GRAY # define ft_pixel_mode_pal2 FT_PIXEL_MODE_GRAY2 # define ft_pixel_mode_pal4 FT_PIXEL_MODE_GRAY4 # if 0 typedef enum FT_Palette_Mode_ { ft_palette_mode_rgb = 0,ft_palette_mode_rgba,ft_palette_mode_max } FT_Palette_Mode ; # endif typedef struct FT_Bitmap_ { int rows ; int width ; int pitch ; unsigned char* buffer ; short num_grays ; char pixel_mode ; char palette_mode ; void* palette ; } FT_Bitmap ; typedef struct FT_Outline_ { short n_contours ; short n_points ; FT_Vector* points ; char* tags ; short* contours ; int flags ; } FT_Outline ; # define FT_OUTLINE_CONTOURS_MAX SHRT_MAX # define FT_OUTLINE_POINTS_MAX SHRT_MAX # define FT_OUTLINE_NONE 0 x0 # define FT_OUTLINE_OWNER 0 x1 # define FT_OUTLINE_EVEN_ODD_FILL 0 x2 # define FT_OUTLINE_REVERSE_FILL 0 x4 # define FT_OUTLINE_IGNORE_DROPOUTS 0 x8 # define FT_OUTLINE_SMART_DROPOUTS 0 x10 # define FT_OUTLINE_INCLUDE_STUBS 0 x20 # define FT_OUTLINE_HIGH_PRECISION 0 x100 # define FT_OUTLINE_SINGLE_PASS 0 x200 # define ft_outline_none FT_OUTLINE_NONE # define ft_outline_owner FT_OUTLINE_OWNER # define ft_outline_even_odd_fill FT_OUTLINE_EVEN_ODD_FILL # define ft_outline_reverse_fill FT_OUTLINE_REVERSE_FILL # define ft_outline_ignore_dropouts FT_OUTLINE_IGNORE_DROPOUTS # define ft_outline_high_precision FT_OUTLINE_HIGH_PRECISION # define ft_outline_single_pass FT_OUTLINE_SINGLE_PASS # define)",
    "insertText": "FT_CURVE_TAG(flag ) ( flag & 3 ) #define FT_CURVE_TAG_ON 1 #define FT_CURVE_TAG_CONIC 0 #define FT_CURVE_TAG_CUBIC 2 #define FT_CURVE_TAG_HAS_SCANMODE 4 #define FT_CURVE_TAG_TOUCH_X 8 #define FT_CURVE_TAG_TOUCH_Y 16 #define FT_CURVE_TAG_TOUCH_BOTH ( FT_CURVE_TAG_TOUCH_X | \\ FT_CURVE_TAG_TOUCH_Y ) #define FT_Curve_Tag_On FT_CURVE_TAG_ON #define FT_Curve_Tag_Conic FT_CURVE_TAG_CONIC #define FT_Curve_Tag_Cubic FT_CURVE_TAG_CUBIC #define FT_Curve_Tag_Touch_X FT_CURVE_TAG_TOUCH_X #define FT_Curve_Tag_Touch_Y FT_CURVE_TAG_TOUCH_Y typedef int (*FT_Outline_MoveToFunc)( const FT_Vector* to, void* user)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_Outline_MoveTo_Func FT_Outline_MoveToFunc typedef)",
    "insertText": "int(*FT_Outline_LineToFunc)( const FT_Vector* to, void* user)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_Outline_LineTo_Func FT_Outline_LineToFunc typedef)",
    "insertText": "int(*FT_Outline_ConicToFunc)( const FT_Vector* control, const FT_Vector* to, void* user)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_Outline_ConicTo_Func FT_Outline_ConicToFunc typedef)",
    "insertText": "int(*FT_Outline_CubicToFunc)( const FT_Vector* control1, const FT_Vector* control2, const FT_Vector* to, void* user)"
  },
  {
    "label": "FT_IMAGE_TAG()",
    "kind": "Method",
    "detail": "Function (# define FT_Outline_CubicTo_Func FT_Outline_CubicToFunc typedef struct FT_Outline_Funcs_ { FT_Outline_MoveToFunc move_to ; FT_Outline_LineToFunc line_to ; FT_Outline_ConicToFunc conic_to ; FT_Outline_CubicToFunc cubic_to ; int shift ; FT_Pos delta ; } FT_Outline_Funcs ; # ifndef FT_IMAGE_TAG # define)",
    "insertText": "FT_IMAGE_TAG(value, _x1, _x2, _x3, _x4 ) \\ value = ( ( (unsigned long)_x1 << 24 ) | \\ ( (unsigned long)_x2 << 16 ) | \\ ( (unsigned long)_x3 << 8 ) | \\ (unsigned long)_x4)"
  },
  {
    "label": "FT_IMAGE_TAG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_IMAGE_TAG(FT_GLYPH_FORMAT_NONE, 0, 0, 0, 0 ), FT_IMAGE_TAG( FT_GLYPH_FORMAT_COMPOSITE, 'c', 'o', 'm', 'p' ), FT_IMAGE_TAG( FT_GLYPH_FORMAT_BITMAP, 'b', 'i', 't', 's' ), FT_IMAGE_TAG( FT_GLYPH_FORMAT_OUTLINE, 'o', 'u', 't', 'l' ), FT_IMAGE_TAG( FT_GLYPH_FORMAT_PLOTTER, 'p', 'l', 'o', 't')"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# define ft_glyph_format_none FT_GLYPH_FORMAT_NONE # define ft_glyph_format_composite FT_GLYPH_FORMAT_COMPOSITE # define ft_glyph_format_bitmap FT_GLYPH_FORMAT_BITMAP # define ft_glyph_format_outline FT_GLYPH_FORMAT_OUTLINE # define ft_glyph_format_plotter FT_GLYPH_FORMAT_PLOTTER typedef struct FT_RasterRec_* FT_Raster ; typedef struct FT_Span_ { short x ; unsigned short len ; unsigned char coverage ; } FT_Span ; typedef)",
    "insertText": "void(*FT_SpanFunc)( int y, int count, const FT_Span* spans, void* user)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_Raster_Span_Func FT_SpanFunc typedef)",
    "insertText": "int(*FT_Raster_BitTest_Func)( int y, int x, void* user)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FT_Raster_BitSet_Func)( int y, int x, void* user)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_RASTER_FLAG_DEFAULT 0 x0 # define FT_RASTER_FLAG_AA 0 x1 # define FT_RASTER_FLAG_DIRECT 0 x2 # define FT_RASTER_FLAG_CLIP 0 x4 # define ft_raster_flag_default FT_RASTER_FLAG_DEFAULT # define ft_raster_flag_aa FT_RASTER_FLAG_AA # define ft_raster_flag_direct FT_RASTER_FLAG_DIRECT # define ft_raster_flag_clip FT_RASTER_FLAG_CLIP typedef struct FT_Raster_Params_ { const FT_Bitmap* target ; const void* source ; int flags ; FT_SpanFunc gray_spans ; FT_SpanFunc black_spans ; FT_Raster_BitTest_Func bit_test ; FT_Raster_BitSet_Func bit_set ; void* user ; FT_BBox clip_box ; } FT_Raster_Params ; typedef)",
    "insertText": "int(*FT_Raster_NewFunc)( void* memory, FT_Raster* raster)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# define FT_Raster_New_Func FT_Raster_NewFunc typedef)",
    "insertText": "void(*FT_Raster_DoneFunc)( FT_Raster raster)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# define FT_Raster_Done_Func FT_Raster_DoneFunc typedef)",
    "insertText": "void(*FT_Raster_ResetFunc)( FT_Raster raster, unsigned char* pool_base, unsigned long pool_size)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_Raster_Reset_Func FT_Raster_ResetFunc typedef)",
    "insertText": "int(*FT_Raster_SetModeFunc)( FT_Raster raster, unsigned long mode, void* args)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (# define FT_Raster_Set_Mode_Func FT_Raster_SetModeFunc typedef)",
    "insertText": "int(*FT_Raster_RenderFunc)( FT_Raster raster, const FT_Raster_Params* params)"
  }
]