[
  {
    "label": "CefCommandLineCToCpp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CefCommandLineCToCpp"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_LIBCEF_DLL_CTOCPP_COMMAND_LINE_CTOCPP_H_ # define CEF_LIBCEF_DLL_CTOCPP_COMMAND_LINE_CTOCPP_H_ # pragma once # if !)",
    "insertText": "defined(WRAPPING_CEF_SHARED)"
  },
  {
    "label": "CefCommandLineCToCpp()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "CefCommandLineCToCpp()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (CefRefPtr<CefCommandLine>)",
    "insertText": "Copy()"
  },
  {
    "label": "InitFromArgv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromArgv(int argc, const char* const* argv)"
  },
  {
    "label": "InitFromString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromString(const CefString& command_line)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetArgv()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetArgv(std::vector<CefString>& argv)"
  },
  {
    "label": "GetCommandLineString()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetCommandLineString()"
  },
  {
    "label": "GetProgram()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetProgram()"
  },
  {
    "label": "SetProgram()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProgram(const CefString& program)"
  },
  {
    "label": "HasSwitches()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSwitches()"
  },
  {
    "label": "HasSwitch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSwitch(const CefString& name)"
  },
  {
    "label": "GetSwitchValue()",
    "kind": "Method",
    "detail": "Function (CefString)",
    "insertText": "GetSwitchValue(const CefString& name)"
  },
  {
    "label": "GetSwitches()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSwitches(SwitchMap& switches)"
  },
  {
    "label": "AppendSwitch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSwitch(const CefString& name)"
  },
  {
    "label": "AppendSwitchWithValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSwitchWithValue(const CefString& name, const CefString& value)"
  },
  {
    "label": "HasArguments()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasArguments()"
  },
  {
    "label": "GetArguments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetArguments(ArgumentList& arguments)"
  },
  {
    "label": "AppendArgument()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendArgument(const CefString& argument)"
  },
  {
    "label": "PrependWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrependWrapper(const CefString& wrapper)"
  }
]