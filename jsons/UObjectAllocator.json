[
  {
    "label": "UObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObjectBase"
  },
  {
    "label": "FUObjectAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUObjectAllocator"
  },
  {
    "label": "FPermanentObjectPoolExtents",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPermanentObjectPoolExtents"
  },
  {
    "label": "BootMessage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BootMessage()"
  },
  {
    "label": "DisablePersistentAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisablePersistentAllocator()"
  },
  {
    "label": "AllocateUObject()",
    "kind": "Method",
    "detail": "Function (UObjectBase*)",
    "insertText": "AllocateUObject(int32 Size, int32 Alignment, bool bAllowPermanent)"
  },
  {
    "label": "FreeUObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeUObject(UObjectBase *Object)"
  },
  {
    "label": "FPermanentObjectPoolExtents()",
    "kind": "Method",
    "detail": "Function (} ; FUObjectAllocator GUObjectAllocator ; class FPermanentObjectPoolExtents { public :)",
    "insertText": "FPermanentObjectPoolExtents(const FPersistentLinearAllocatorExtends& InAllocatorExtends = GPersistentLinearAllocatorExtends) : Address(InAllocatorExtends.Address) , Size(InAllocatorExtends.Size)"
  },
  {
    "label": "Contains()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "Contains(const UObjectBase* Object)"
  }
]