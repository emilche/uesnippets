[
  {
    "label": "UDialogueWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDialogueWave"
  },
  {
    "label": "USoundWave",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USoundWave"
  },
  {
    "label": "UImportLocalizedDialogueCommandlet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UImportLocalizedDialogueCommandlet"
  },
  {
    "label": "FCultureImportInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCultureImportInfo"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Commandlets / GatherTextCommandletBase . h \" # include \" Factories / SoundFactory . h \" # include \" ImportLocalizedDialogueCommandlet . generated . h \" class UDialogueWave ; class USoundWave ;)",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual int32 Main(const FString& Params)"
  },
  {
    "label": "ImportDialogueForCulture()",
    "kind": "Method",
    "detail": "Function (private : struct FCultureImportInfo { FString Name ; FString AudioPath ; FString ArchiveFileName ; FString LocalizedRootContentPath ; FString LocalizedRootPackagePath ; FString LocalizedImportedDialoguePackagePath ; bool bIsNativeCulture ; } ; bool)",
    "insertText": "ImportDialogueForCulture(FLocTextHelper& InLocTextHelper, UDialogueWave* const DialogueWave, const FString& DialogueWaveSubPath, const FCultureImportInfo& InCultureImportInfo, const bool bImportAsSource)"
  },
  {
    "label": "ConditionalImportSoundWave()",
    "kind": "Method",
    "detail": "Function (USoundWave*)",
    "insertText": "ConditionalImportSoundWave(const FString& InSoundWavePackageName, const FString& InSoundWaveAssetName, const FString& InWavFilename)"
  },
  {
    "label": "ImportSoundWave()",
    "kind": "Method",
    "detail": "Function (USoundWave*)",
    "insertText": "ImportSoundWave(const FString& InSoundWavePackageName, const FString& InSoundWaveAssetName, const FString& InWavFilename)"
  }
]