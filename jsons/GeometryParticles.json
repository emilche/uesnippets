[
  {
    "label": "FConstraintHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FConstraintHandle"
  },
  {
    "label": "FParticleCollisions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleCollisions"
  },
  {
    "label": "FPBDIslandParticle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDIslandParticle"
  },
  {
    "label": "FShapeOrShapesArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShapeOrShapesArray"
  },
  {
    "label": "FWeakParticleHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWeakParticleHandle"
  },
  {
    "label": "FData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TGeometryParticlesImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticlesImp"
  },
  {
    "label": "TGeometryParticlesImp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TGeometryParticlesImp"
  },
  {
    "label": "RemoveShapesAtSortedIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShapesAtSortedIndices(const int32 ParticleIndex, const TArrayView<const int32>& InIndices)"
  },
  {
    "label": "UpdateWorldSpaceState()",
    "kind": "Method",
    "detail": "Function (bounds)",
    "insertText": "UpdateWorldSpaceState(Index, WorldTransform, BoundsExpansion)"
  },
  {
    "label": "SetHandle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHandle(int32 Index, FGeometryParticleHandle* Handle)"
  },
  {
    "label": "UpdateShapesArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateShapesArray(const int32 Index)"
  },
  {
    "label": "SerializeGeometryParticleHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeGeometryParticleHelper(FChaosArchive& Ar, TGeometryParticlesImp<T, d, EGeometryParticlesSimType::RigidBodySim>* GeometryParticles)"
  }
]