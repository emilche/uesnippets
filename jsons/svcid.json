[
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (# ifndef __SVCID_H__ # define __SVCID_H__ # include FT_INTERNAL_SERVICE_H FT_BEGIN_HEADER # define FT_SERVICE_ID_CID \" CID \" typedef)",
    "insertText": "FT_Error(*FT_CID_GetRegistryOrderingSupplementFunc)( FT_Face face, const char* *registry, const char* *ordering, FT_Int *supplement)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_CID_GetIsInternallyCIDKeyedFunc)( FT_Face face, FT_Bool *is_cid)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_CID_GetCIDFromGlyphIndexFunc)( FT_Face face, FT_UInt glyph_index, FT_UInt *cid)"
  },
  {
    "label": "FT_DEFINE_SERVICE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_DEFINE_SERVICE(CID)"
  },
  {
    "label": "FT_DEFINE_SERVICE_CIDREC()",
    "kind": "Method",
    "detail": "Function (FT_CID_GetRegistryOrderingSupplementFunc get_ros ; FT_CID_GetIsInternallyCIDKeyedFunc get_is_cid ; FT_CID_GetCIDFromGlyphIndexFunc get_cid_from_glyph_index ; } ; # ifndef FT_CONFIG_OPTION_PIC # define)",
    "insertText": "FT_DEFINE_SERVICE_CIDREC(class_, \\ get_ros_, \\ get_is_cid_, \\ get_cid_from_glyph_index_)"
  },
  {
    "label": "FT_DEFINE_SERVICE_CIDREC()",
    "kind": "Method",
    "detail": "Function (\\ get_ros_,get_is_cid_,get_cid_from_glyph_index_ \\ } ; # else # define)",
    "insertText": "FT_DEFINE_SERVICE_CIDREC(class_, \\ get_ros_, \\ get_is_cid_, \\ get_cid_from_glyph_index_ ) \\ void \\ FT_Init_Class_ ## class_( FT_Library library, \\ FT_Service_CIDRec* clazz)"
  },
  {
    "label": "FT_UNUSED()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "FT_UNUSED(library)"
  }
]