[
  {
    "label": "FullScreenWindowDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FullScreenWindowDetector"
  },
  {
    "label": "FullScreenApplicationHandler()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_DESKTOP_CAPTURE_FULL_SCREEN_WINDOW_DETECTOR_H_ # define MODULES_DESKTOP_CAPTURE_FULL_SCREEN_WINDOW_DETECTOR_H_ # include<memory> # include \" api / function_view . h \" # include \" api / ref_counted_base . h \" # include \" api / scoped_refptr . h \" # include \" modules / desktop_capture / desktop_capturer . h \" # include \" modules / desktop_capture / full_screen_application_handler . h \" namespace webrtc { class FullScreenWindowDetector : public rtc::RefCountedNonVirtual<FullScreenWindowDetector> { public : using ApplicationHandlerFactory = std::function<std::unique_ptr<)",
    "insertText": "FullScreenApplicationHandler(DesktopCapturer::SourceId sourceId)"
  },
  {
    "label": "FullScreenWindowDetector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullScreenWindowDetector(ApplicationHandlerFactory application_handler_factory)"
  },
  {
    "label": "FullScreenWindowDetector()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FullScreenWindowDetector(const FullScreenWindowDetector&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FullScreenWindowDetector&)",
    "insertText": "operator(const FullScreenWindowDetector&)"
  },
  {
    "label": "FindFullScreenWindow()",
    "kind": "Method",
    "detail": "Function (DesktopCapturer::SourceId)",
    "insertText": "FindFullScreenWindow(DesktopCapturer::SourceId original_source_id)"
  },
  {
    "label": "UpdateWindowListIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWindowListIfNeeded(DesktopCapturer::SourceId original_source_id, rtc::FunctionView<bool(DesktopCapturer::SourceList*)> get_sources)"
  },
  {
    "label": "CreateFullScreenWindowDetector()",
    "kind": "Method",
    "detail": "Function (rtc::scoped_refptr<FullScreenWindowDetector>)",
    "insertText": "CreateFullScreenWindowDetector()"
  },
  {
    "label": "CreateApplicationHandlerIfNeeded()",
    "kind": "Method",
    "detail": "Function (protected : std::unique_ptr<FullScreenApplicationHandler> app_handler_ ; private : void)",
    "insertText": "CreateApplicationHandlerIfNeeded(DesktopCapturer::SourceId source_id)"
  }
]