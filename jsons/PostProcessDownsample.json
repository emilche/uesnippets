[
  {
    "label": "FEyeAdaptationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEyeAdaptationParameters"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDownsamplePassInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDownsamplePassInputs"
  },
  {
    "label": "FSceneDownsampleChain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneDownsampleChain"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ScreenPass . h \" class FEyeAdaptationParameters ; enum class EDownsampleFlags : uint8 { None = 0,ForceRaster = 0 x1 } ;)",
    "insertText": "ENUM_CLASS_FLAGS(EDownsampleFlags)"
  },
  {
    "label": "FDownsamplePassInputs()",
    "kind": "Method",
    "detail": "Function (enum class EDownsampleQuality : uint8 { Low,High,MAX } ; struct FDownsamplePassInputs {)",
    "insertText": "FDownsamplePassInputs()"
  },
  {
    "label": "AddDownsamplePass()",
    "kind": "Method",
    "detail": "Function (const TCHAR* Name = nullptr ; IPooledRenderTarget* UserSuppliedOutput = nullptr ; FScreenPassTextureSlice SceneColor ; EDownsampleQuality Quality = EDownsampleQuality::Low ; EDownsampleFlags Flags = EDownsampleFlags::None ; EPixelFormat FormatOverride = PF_Unknown ; } ; FScreenPassTexture)",
    "insertText": "AddDownsamplePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FDownsamplePassInputs& Inputs)"
  },
  {
    "label": "AddDownsampleComputePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDownsampleComputePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FScreenPassTexture Input, FScreenPassTexture Output, EDownsampleQuality Quality, ERDGPassFlags PassFlags)"
  },
  {
    "label": "AddDownsampleComputePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDownsampleComputePass(FRDGBuilder& GraphBuilder, const FViewInfo& View, FScreenPassTextureSlice Input, FScreenPassTexture Output, EDownsampleQuality Quality, ERDGPassFlags PassFlags)"
  },
  {
    "label": "FSceneDownsampleChain()",
    "kind": "Method",
    "detail": "Function (class FSceneDownsampleChain { public : const uint32 StageCount = 6 ;)",
    "insertText": "FSceneDownsampleChain()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FEyeAdaptationParameters& EyeAdaptationParameters, FScreenPassTextureSlice HalfResolutionSceneColor, EDownsampleQuality DownsampleQuality, bool bLogLumaInAlpha)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  }
]