[
  {
    "label": "IPlugin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPlugin"
  },
  {
    "label": "FCookSandboxConvertCookedPathToPackageNameContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCookSandboxConvertCookedPathToPackageNameContext"
  },
  {
    "label": "FCookSandbox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCookSandbox"
  },
  {
    "label": "FPluginData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPluginData"
  },
  {
    "label": "FCookSandbox()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" IPlatformFileSandboxWrapper . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UniquePtr . h \" class IPlugin ; namespace UE::Cook { struct FCookSandboxConvertCookedPathToPackageNameContext ; class FCookSandbox { public :)",
    "insertText": "FCookSandbox(FStringView OutputDirectory, TArray<TSharedRef<IPlugin>>& InPluginsToRemap)"
  },
  {
    "label": "GetSandboxDirectory()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetSandboxDirectory()"
  },
  {
    "label": "GetGameSandboxDirectoryName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetGameSandboxDirectoryName()"
  },
  {
    "label": "ConvertToAbsolutePathForExternalAppForWrite()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertToAbsolutePathForExternalAppForWrite(const TCHAR* Filename)"
  },
  {
    "label": "ConvertFromSandboxPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertFromSandboxPath(const TCHAR* Filename)"
  },
  {
    "label": "GetSandboxDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSandboxDirectory(const FString& PlatformName)"
  },
  {
    "label": "ConvertToAbsolutePathForExternalAppForWrite()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertToAbsolutePathForExternalAppForWrite(const TCHAR* Filename, const FString& PlatformName)"
  },
  {
    "label": "ConvertFromSandboxPathInPlatformRoot()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertFromSandboxPathInPlatformRoot(const TCHAR* Filename, FStringView PlatformSandboxRootDir)"
  },
  {
    "label": "GetSandboxPlatformFile()",
    "kind": "Method",
    "detail": "Function (FSandboxPlatformFile&)",
    "insertText": "GetSandboxPlatformFile()"
  },
  {
    "label": "ConvertToFullSandboxPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertToFullSandboxPath(const FString& FileName, bool bForWrite)"
  },
  {
    "label": "ConvertToFullPlatformSandboxPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertToFullPlatformSandboxPath(const FString& FileName, bool bForWrite, const FString& PlatformName)"
  },
  {
    "label": "ConvertToFullSandboxPathInPlatformRoot()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertToFullSandboxPathInPlatformRoot(const FString& FileName, bool bForWrite, FStringView PlatformSandboxRootdir)"
  },
  {
    "label": "TryConvertUncookedFilenameToCookedRemappedPluginFilename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryConvertUncookedFilenameToCookedRemappedPluginFilename(FStringView FileName, FString& OutCookedFileName, FStringView PlatformSandboxRootdir = FStringView())"
  },
  {
    "label": "FillContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillContext(FCookSandboxConvertCookedPathToPackageNameContext& Context)"
  },
  {
    "label": "ConvertCookedPathToUncookedPath()",
    "kind": "Method",
    "detail": "Function (FString&)",
    "insertText": "ConvertCookedPathToUncookedPath(FStringView CookedPath, FCookSandboxConvertCookedPathToPackageNameContext& Context)"
  },
  {
    "label": "ConvertCookedPathToPackageName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "ConvertCookedPathToPackageName(FStringView CookedPath, FCookSandboxConvertCookedPathToPackageNameContext& Context)"
  },
  {
    "label": "ConvertPackageNameToCookedPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ConvertPackageNameToCookedPath(FStringView PackageName, FCookSandboxConvertCookedPathToPackageNameContext& Context)"
  }
]