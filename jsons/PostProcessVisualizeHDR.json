[
  {
    "label": "FEyeAdaptationParameters",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEyeAdaptationParameters"
  },
  {
    "label": "FVisualizeHDRInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVisualizeHDRInputs"
  },
  {
    "label": "AddVisualizeHDRPass()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" OverridePassSequence . h \" class FEyeAdaptationParameters ; struct FVisualizeHDRInputs { FScreenPassRenderTarget OverrideOutput ; FScreenPassTexture SceneColor ; FScreenPassTexture SceneColorBeforeTonemap ; FScreenPassTexture Luminance ; FRDGTextureRef HistogramTexture = nullptr ; FRDGBufferRef EyeAdaptationBuffer = nullptr ; const FEyeAdaptationParameters* EyeAdaptationParameters = nullptr ; } ; FScreenPassTexture)",
    "insertText": "AddVisualizeHDRPass(FRDGBuilder& GraphBuilder, const FViewInfo& View, const FVisualizeHDRInputs& Inputs)"
  }
]