[
  {
    "label": "FSlateD3D11RenderingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateD3D11RenderingPolicy"
  },
  {
    "label": "FSlateD3D11RenderingPolicy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Rendering / DrawElements . h \" # include \" Rendering / RenderingPolicy . h \" # include \" SlateD3DVertexBuffer . h \" # include \" SlateD3DIndexBuffer . h \" # include \" SlateD3DTextureManager . h \" # include \" SlateD3DShaders . h \" # include \" StandaloneRendererPlatformHeaders . h \" class FSlateD3D11RenderingPolicy : public FSlateRenderingPolicy { public :)",
    "insertText": "FSlateD3D11RenderingPolicy(TSharedRef<FSlateFontServices> InSlateFontServices, TSharedRef<FSlateD3DTextureManager> InTextureManager)"
  },
  {
    "label": "FSlateD3D11RenderingPolicy()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSlateD3D11RenderingPolicy()"
  },
  {
    "label": "BuildRenderingBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildRenderingBuffers(FSlateBatchData& InBatchData)"
  },
  {
    "label": "DrawElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawElements(const FMatrix& ViewProjectionMatrix, int32 FirstBatchIndex, const TArray<FSlateRenderBatch>& RenderBatches)"
  },
  {
    "label": "GetResourceManager()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSlateShaderResourceManager>)",
    "insertText": "GetResourceManager()"
  },
  {
    "label": "IsVertexColorInLinearSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVertexColorInLinearSpace()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  }
]