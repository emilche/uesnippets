[
  {
    "label": "HttpServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HttpServer"
  },
  {
    "label": "Connection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Connection"
  },
  {
    "label": "HttpServer()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UbaLogger . h \" # include \" UbaNetworkBackend . h \" namespace uba { class HttpServer { public :)",
    "insertText": "HttpServer(LogWriter& logWriter, NetworkBackend& backend, const tchar* name = TC(\"UbaHttpServer\"))"
  },
  {
    "label": "char()",
    "kind": "Method",
    "detail": "Function (using CommandHandler = Function<const)",
    "insertText": "char(const tchar* command, tchar* arguments)"
  },
  {
    "label": "AddCommandHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCommandHandler(const CommandHandler& handler)"
  },
  {
    "label": "StartListen()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StartListen(u16 port)"
  },
  {
    "label": "ReceiveHeader()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "ReceiveHeader(void* context, const Guid& connectionUid, u8* headerData, void*& outBodyContext, u8*& outBodyData, u32& outBodySize)"
  },
  {
    "label": "ReceiveBody()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReceiveBody(void* context, bool recvError, u8* headerData, void* bodyContext, u8* bodyData, u32 bodySize)"
  }
]