[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / BitArray . h \" # include \" Containers / Set . h \" # include \" Containers / SparseArray . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" Delegates / Delegate . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Framework / SlateDelegates . h \" # include \" HAL / PlatformCrt . h \" # include \" Internationalization / Text . h \" # include \" Layout / Margin . h \" # include \" Misc / Attribute . h \" # include \" Misc / Optional . h \" # include \" Serialization / Archive . h \" # include \" Styling / CoreStyle . h \" # include \" Styling / ISlateStyle . h \" # include \" Styling / SlateColor . h \" # include \" Styling / SlateTypes . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / TypeHash . h \" # include \" Templates / UnrealTemplate . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Input / SComboBox . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SWidget . h \" class SWidget ; class SNameComboBox : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_RetVal_OneParam(FString, FGetNameComboLabel, TSharedPtr<FName>)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (typedef TSlateDelegates<TSharedPtr<FName>>::FOnSelectionChanged FOnNameSelectionChanged ;)",
    "insertText": "SLATE_BEGIN_ARGS(SNameComboBox ) : _ComboBoxStyle(&FCoreStyle::Get().GetWidgetStyle< FComboBoxStyle >(\"ComboBox\")) , _ColorAndOpacity( FSlateColor::UseForeground() ) , _ContentPadding(FMargin(4.0, 2.0)) , _OnGetNameLabelForItem()"
  },
  {
    "label": "SLATE_STYLE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_STYLE_ARGUMENT(FComboBoxStyle, ComboBoxStyle) SLATE_ARGUMENT( TArray< TSharedPtr<FName> >*, OptionsSource ) SLATE_ATTRIBUTE(FSlateFontInfo, Font) SLATE_ATTRIBUTE( FSlateColor, ColorAndOpacity ) SLATE_ATTRIBUTE( FMargin, ContentPadding ) SLATE_EVENT( FOnNameSelectionChanged, OnSelectionChanged) SLATE_EVENT( FOnComboBoxOpening, OnComboBoxOpening ) SLATE_ARGUMENT( TSharedPtr<FName>, InitiallySelectedItem ) SLATE_EVENT( FGetNameComboLabel, OnGetNameLabelForItem ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "MakeItemWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeItemWidget(TSharedPtr<FName> StringItem)"
  },
  {
    "label": "SetSelectedItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSelectedItem(TSharedPtr<FName> NewSelection)"
  },
  {
    "label": "GetSelectedItem()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FName>)",
    "insertText": "GetSelectedItem()"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection()"
  },
  {
    "label": "OnGetSelection()",
    "kind": "Method",
    "detail": "Function (private : TSharedPtr<FName>)",
    "insertText": "OnGetSelection()"
  },
  {
    "label": "GetSelectedNameLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetSelectedNameLabel()"
  },
  {
    "label": "GetItemNameLabel()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetItemNameLabel(TSharedPtr<FName> StringItem)"
  }
]