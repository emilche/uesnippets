[
  {
    "label": "UTimelineTemplate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTimelineTemplate"
  },
  {
    "label": "FTTTrackBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTTrackBase"
  },
  {
    "label": "ETrackType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETrackType"
  },
  {
    "label": "FTTTrackId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTTrackId"
  },
  {
    "label": "FTTEventTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTEventTrack"
  },
  {
    "label": "UCurveFloat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveFloat"
  },
  {
    "label": "FTTPropertyTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTPropertyTrack"
  },
  {
    "label": "FTTFloatTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTFloatTrack"
  },
  {
    "label": "FTTVectorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTVectorTrack"
  },
  {
    "label": "UCurveVector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveVector"
  },
  {
    "label": "FTTLinearColorTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTTLinearColorTrack"
  },
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "UCurveBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveBase"
  },
  {
    "label": "FUpdateTimelineCachedNames",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateTimelineCachedNames"
  },
  {
    "label": "FBlueprintCompilationManagerImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintCompilationManagerImpl"
  },
  {
    "label": "FBlueprintEditorUtils",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBlueprintEditorUtils"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / Guid . h \" # include \" Components / TimelineComponent . h \" # include \" Engine / Blueprint . h \" # include \" TimelineTemplate . generated . h \" class UTimelineTemplate ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (enum ETrackType { TT_Event,TT_FloatInterp,TT_VectorInterp,TT_LinearColorInterp,} ;)",
    "insertText": "GENERATED_USTRUCT_BODY() private: UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "operator(const FTTTrackBase& T2)"
  },
  {
    "label": "FTTTrackBase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTTTrackBase() : TrackName(NAME_None) , bIsExternalCurve(false) #if WITH_EDITORONLY_DATA , bIsExpanded(true) , bIsCurveViewSynchronized(true)"
  },
  {
    "label": "FTTTrackBase()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTTTrackBase()"
  },
  {
    "label": "GetTrackName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTrackName()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FTTTrackId (int32 InType, int32 InIndex) : TrackType(InType) , TrackIndex(InIndex)"
  },
  {
    "label": "FTTTrackId()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTTTrackId() : FTTTrackId(0, 0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTTEventTrack& T2)"
  },
  {
    "label": "GetFunctionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetFunctionName()"
  },
  {
    "label": "FTTEventTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTTEventTrack() : FTTTrackBase() , CurveKeys(nullptr)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FName GetPropertyName()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTTFloatTrack& T2)"
  },
  {
    "label": "FTTFloatTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTTFloatTrack() : FTTPropertyTrack() , CurveFloat(nullptr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTTVectorTrack& T2)"
  },
  {
    "label": "FTTVectorTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTTVectorTrack() : FTTPropertyTrack() , CurveVector(nullptr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FTTLinearColorTrack& T2)"
  },
  {
    "label": "FTTLinearColorTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTTLinearColorTrack() : FTTPropertyTrack() , CurveLinearColor(nullptr)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY(EditAnywhere, Category=TimelineTemplate)"
  },
  {
    "label": "FindFloatTrackIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindFloatTrackIndex(FName FloatTrackName)"
  },
  {
    "label": "FindVectorTrackIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindVectorTrackIndex(FName VectorTrackName)"
  },
  {
    "label": "FindEventTrackIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindEventTrackIndex(FName EventTrackName)"
  },
  {
    "label": "FindLinearColorTrackIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindLinearColorTrackIndex(FName ColorTrackName)"
  },
  {
    "label": "IsNewTrackNameValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewTrackNameValid(FName NewTrackName)"
  },
  {
    "label": "GetUpdateFunctionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetUpdateFunctionName()"
  },
  {
    "label": "GetMetaData()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetMetaData(FName Key)"
  },
  {
    "label": "RemoveMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMetaData(FName Key)"
  },
  {
    "label": "FindMetaDataEntryIndexForKey()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindMetaDataEntryIndexForKey(FName Key)"
  },
  {
    "label": "GetVariableName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetVariableName()"
  },
  {
    "label": "TimelineVariableNameToTemplateName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "TimelineVariableNameToTemplateName(FName Name)"
  },
  {
    "label": "GetAllCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllCurves(TSet<class UCurveBase*>& InOutCurves)"
  },
  {
    "label": "GetDisplayTrackId()",
    "kind": "Method",
    "detail": "Function (FTTTrackId)",
    "insertText": "GetDisplayTrackId(int32 DisplayTrackIndex)"
  },
  {
    "label": "GetNumDisplayTracks()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumDisplayTracks()"
  },
  {
    "label": "RemoveDisplayTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDisplayTrack(int32 DisplayTrackIndex)"
  },
  {
    "label": "MoveDisplayTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveDisplayTrack(int32 DisplayTrackIndex, int32 DirectionDelta)"
  },
  {
    "label": "AddDisplayTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDisplayTrack(FTTTrackId NewTrackId)"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "PostEditImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditImport()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "Rename()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Rename(const TCHAR* InName, UObject* NewOuter, ERenameFlags Flags)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "UpdateCachedNames()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateCachedNames()"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (# endif public : const FString TemplatePostfix ; } ; struct FUpdateTimelineCachedNames { private : void)",
    "insertText": "Execute(UTimelineTemplate* TimelineTemplate)"
  }
]