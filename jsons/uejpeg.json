[
  {
    "label": "uejpeg_ihdr_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "uejpeg_ihdr_t"
  },
  {
    "label": "uejpeg_lossy_hdr_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "uejpeg_lossy_hdr_t"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (# pragma once # ifdef __cplusplus \" C \" { # endif typedef enum { UEJPEG_ERR_NONE = 0,UEJPEG_ERR_NOT_A_JPEG = 1,UEJPEG_ERR_CANNOT_OPEN_FILE = 2,UEJPEG_ERR_NOT_UEJPEG_FILE = 3,UEJPEG_ERR_CORRUPT_UEJPEG_FILE = 4,UEJPEG_ERR_WRITE_FAILED = 5,UEJPEG_ERR_OUT_OF_MEMORY = 6,UEJPEG_ERR_UNSUPPORTED_COLORSPACE = 7,UEJPEG_ERR_READ_FAILED = 8,UEJPEG_ERR_UNSUPPORTED = 9,} uejpeg_error_t ; typedef enum { UEJPEG_FLAG_NONE = 0 x0,UEJPEG_FLAG_NO_COMPRESSION = 0 x1,UEJPEG_FLAG_FASTDCT = 0 x2,} uejpeg_flags_t ; enum { UEJPEG_MAX_SPLITS = 1 6,} ; typedef struct {)",
    "insertText": "size_t(*write)(void *user, const void *data, size_t size)"
  },
  {
    "label": "size_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "size_t(*read)(void *user, void *data, size_t size)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*eof)(void *user)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} uejpeg_io_callbacks_t ; typedef struct { char* base ; char* ptr ; size_t size ; } uejpeg_io_buffer_t ; const uejpeg_io_callbacks_t s_uejpeg_buffer_fns ; typedef struct {)",
    "insertText": "void(*alloc)(size_t size)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(*free)(void *ptr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(*realloc)(void *ptr, size_t size)"
  },
  {
    "label": "uejpeg_buffer_t()",
    "kind": "Method",
    "detail": "Function (} uejpeg_alloc_t ; typedef struct { void* data ; size_t size ; } uejpeg_buffer_t ; typedef struct {)",
    "insertText": "uejpeg_buffer_t(*compress)(const void *data, size_t size)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(*decompress)(const void *data, size_t size, void *out_data, size_t out_size)"
  },
  {
    "label": "uejpeg_set_alloc()",
    "kind": "Method",
    "detail": "Function (} uejpeg_compression_t ; void)",
    "insertText": "uejpeg_set_alloc(const uejpeg_alloc_t *alloc)"
  },
  {
    "label": "uejpeg_set_compression()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "uejpeg_set_compression(const uejpeg_compression_t *compression)"
  },
  {
    "label": "uejpeg_encode_jpeg_mem()",
    "kind": "Method",
    "detail": "Function (typedef struct uejpeg_ihdr_t { unsigned version ; unsigned width ; unsigned height ; unsigned char bit_depth ; unsigned char comp ; unsigned char method ; unsigned char num_splits ; } uejpeg_ihdr_t ; typedef struct uejpeg_lossy_hdr_t { unsigned short coef_dims [ 4 ] [ 2 ] ; unsigned short dequant [ 4 ] [ 6 4 ] ; char app14_color_transform ; char jfif ; char comp_id [ 4 ] ; } uejpeg_lossy_hdr_t ; typedef struct { int y_start [ 4 ] ; int y_end [ 4 ] ; int width [ 4 ] ; int height [ 4 ] ; int num_blocks ; short* xcoefs ; char* split_xcoefs ; unsigned char* oodle_buf ; int oodle_size ; int coefs_size ; } uejpeg_internal_split_t ; typedef struct { int error ; int split_height_min ; int split_height [ 4 ] ; int split_blocks [ 4 ] ; int total_split_blocks ; uejpeg_internal_split_t splits [ UEJPEG_MAX_SPLITS ] ; } uejpeg_internal_splits_t ; typedef struct { int error ; int jobs_to_run ; const uejpeg_io_callbacks_t* io ; void* io_user ; int flags ; int width,height,comp ; int num_splits ; uejpeg_lossy_hdr_t lhdr ; uejpeg_internal_splits_t s ; } uejpeg_encode_context_t ; typedef struct { int error ; int jobs_to_run ; int flags ; uejpeg_ihdr_t ihdr ; uejpeg_lossy_hdr_t lhdr ; uejpeg_internal_splits_t spx ; int yuva_stride [ 4 ] ; int yuva_height [ 4 ] ; unsigned char* yuva [ 4 ] ; } uejpeg_decode_context_t ; typedef struct { int error ; int jobs_to_run ; const uejpeg_io_callbacks_t* io ; void* io_user ; int width,height,comp ; const unsigned char* in_data ; int flags ; int num_splits ; uejpeg_internal_splits_t spx ; uejpeg_lossy_hdr_t lhdr ; float fdtbl_Y [ 6 4 ] ; float fdtbl_UV [ 6 4 ] ; } uejpeg_encode_image_context_t ; int)",
    "insertText": "uejpeg_encode_jpeg_mem(const unsigned char *jpeg_data, int jpeg_data_size, unsigned char **out_uejpeg_data, int *out_uejpeg_size, int flags)"
  },
  {
    "label": "uejpeg_encode_jpeg_mem_threaded_start()",
    "kind": "Method",
    "detail": "Function (uejpeg_encode_context_t)",
    "insertText": "uejpeg_encode_jpeg_mem_threaded_start(const unsigned char *data, int size, int flags)"
  },
  {
    "label": "uejpeg_encode_jpeg_thread_run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_encode_jpeg_thread_run(uejpeg_encode_context_t *context, int job_idx)"
  },
  {
    "label": "uejpeg_encode_jpeg_mem_threaded_finish()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_encode_jpeg_mem_threaded_finish(uejpeg_encode_context_t *context, unsigned char **out_data, int *out_size)"
  },
  {
    "label": "uejpeg_encode_to_mem()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_encode_to_mem(unsigned char **out_data, int *out_size, int width, int height, int channels, const unsigned char *rgba, int quality, int flags)"
  },
  {
    "label": "uejpeg_encode_image_mem_threaded_start()",
    "kind": "Method",
    "detail": "Function (uejpeg_encode_image_context_t)",
    "insertText": "uejpeg_encode_image_mem_threaded_start(int width, int height, int comp, const unsigned char *in_data, int quality, int flags)"
  },
  {
    "label": "uejpeg_encode_image_threaded_start()",
    "kind": "Method",
    "detail": "Function (uejpeg_encode_image_context_t)",
    "insertText": "uejpeg_encode_image_threaded_start(const uejpeg_io_callbacks_t *io, void *io_user, int width, int height, int comp, const unsigned char *in_data, int quality, int flags)"
  },
  {
    "label": "uejpeg_encode_image_thread_run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_encode_image_thread_run(uejpeg_encode_image_context_t *ctx, int job_idx)"
  },
  {
    "label": "uejpeg_encode_image_threaded_finish()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_encode_image_threaded_finish(uejpeg_encode_image_context_t *ctx)"
  },
  {
    "label": "uejpeg_encode_image_mem_threaded_finish()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_encode_image_mem_threaded_finish(uejpeg_encode_image_context_t *ctx, unsigned char **out_data, int *out_size)"
  },
  {
    "label": "uejpeg_decode_mem()",
    "kind": "Method",
    "detail": "Function (unsigned char*)",
    "insertText": "uejpeg_decode_mem(const unsigned char *data, int size, int *width, int *height, int *channels, int flags)"
  },
  {
    "label": "uejpeg_decode()",
    "kind": "Method",
    "detail": "Function (unsigned char*)",
    "insertText": "uejpeg_decode(const uejpeg_io_callbacks_t *io, void *io_user, int *out_width, int *out_height, int *out_comp, int flags)"
  },
  {
    "label": "uejpeg_decode_mem_threaded_start()",
    "kind": "Method",
    "detail": "Function (uejpeg_decode_context_t)",
    "insertText": "uejpeg_decode_mem_threaded_start(const unsigned char *data, int size, int flags)"
  },
  {
    "label": "uejpeg_decode_threaded_start()",
    "kind": "Method",
    "detail": "Function (uejpeg_decode_context_t)",
    "insertText": "uejpeg_decode_threaded_start(const uejpeg_io_callbacks_t *io, void *io_user, int flags)"
  },
  {
    "label": "uejpeg_decode_thread_run()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_decode_thread_run(uejpeg_decode_context_t *context, int job_idx)"
  },
  {
    "label": "uejpeg_decode_threaded_finish()",
    "kind": "Method",
    "detail": "Function (unsigned char*)",
    "insertText": "uejpeg_decode_threaded_finish(uejpeg_decode_context_t *context, int *out_width, int *out_height, int *out_comp)"
  },
  {
    "label": "uejpeg_decode_to_jpeg()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_decode_to_jpeg(const uejpeg_io_callbacks_t *in_io, void *in_io_user, const uejpeg_io_callbacks_t *out_io, void *out_io_user, int flags)"
  },
  {
    "label": "uejpeg_decode_mem_to_jpeg()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "uejpeg_decode_mem_to_jpeg(const unsigned char *data, int size, unsigned char **out_data, int *out_size, int flags)"
  }
]