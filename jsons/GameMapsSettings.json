[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FGameModeName",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameModeName"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ExactClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ExactClass"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "FTemplateMapInfoOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateMapInfoOverride"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UGameMapsSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameMapsSettings"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "path",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "path"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "GetGameDefaultMap()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGameDefaultMap(EDefaultMapRequestType RequestType = EDefaultMapRequestType::Default)"
  },
  {
    "label": "GetGlobalDefaultGameMode()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGlobalDefaultGameMode( )"
  },
  {
    "label": "GetGameModeForName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGameModeForName( const FString& GameModeName )"
  },
  {
    "label": "GetGameModeForMapName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGameModeForMapName( const FString& MapName )"
  },
  {
    "label": "SetGameDefaultMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGameDefaultMap( const FString& NewMap )"
  },
  {
    "label": "SetGlobalDefaultGameMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalDefaultGameMode( const FString& NewGameMode )"
  },
  {
    "label": "SetSkipAssigningGamepadToPlayer1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkipAssigningGamepadToPlayer1(bool bSkipFirstPlayer = true)"
  }
]