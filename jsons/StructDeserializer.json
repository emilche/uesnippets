[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "IStructDeserializerBackend",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructDeserializerBackend"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStructDeserializerPolicies",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStructDeserializerPolicies"
  },
  {
    "label": "FStructDeserializer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructDeserializer"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" Templates / Function . h \" class Error ; class FProperty ; class IStructDeserializerBackend ; class UStruct ; enum class EStructDeserializerErrorPolicies { Error,Ignore,Warning,} ; enum class EStructDeserializerMapPolicies { KeyValuePair,Array,} ; struct FStructDeserializerPolicies { EStructDeserializerErrorPolicies MissingFields ; EStructDeserializerMapPolicies MapPolicies ; TFunction<)",
    "insertText": "bool(const FProperty* , const FProperty*)"
  },
  {
    "label": "FStructDeserializerPolicies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStructDeserializerPolicies() : MissingFields(EStructDeserializerErrorPolicies::Ignore) , MapPolicies(EStructDeserializerMapPolicies::KeyValuePair) , PropertyFilter()"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (} } ; class FStructDeserializer { public : bool)",
    "insertText": "Deserialize(void* OutStruct, UStruct& TypeInfo, IStructDeserializerBackend& Backend, const FStructDeserializerPolicies& Policies)"
  },
  {
    "label": "DeserializeElement()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeserializeElement(void* OutStruct, UStruct& TypeInfo, int32 ElementIndex, IStructDeserializerBackend& Backend, const FStructDeserializerPolicies& Policies)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Deserialize(void* OutStruct, UStruct& TypeInfo, IStructDeserializerBackend& Backend)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (} public : template<StructType> bool)",
    "insertText": "Deserialize(StructType& OutStruct, IStructDeserializerBackend& Backend)"
  },
  {
    "label": "Deserialize()",
    "kind": "Method",
    "detail": "Function (} template<StructType> bool)",
    "insertText": "Deserialize(StructType& OutStruct, IStructDeserializerBackend& Backend, const FStructDeserializerPolicies& Policies)"
  }
]