[
  {
    "label": "ULevel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevel"
  },
  {
    "label": "UInterchangeBaseNodeContainer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeBaseNodeContainer"
  },
  {
    "label": "UInterchangePipelineBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangePipelineBase"
  },
  {
    "label": "UInterchangeSourceData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeSourceData"
  },
  {
    "label": "UInterchangeTranslatorBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeTranslatorBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "INTERCHANGECORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INTERCHANGECORE_API"
  },
  {
    "label": "UInterchangeFactoryBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInterchangeFactoryBase"
  },
  {
    "label": "FImportAssetObjectParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportAssetObjectParams"
  },
  {
    "label": "FImportAssetResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportAssetResult"
  },
  {
    "label": "FImportSceneObjectsParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FImportSceneObjectsParams"
  },
  {
    "label": "FSetupObjectParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetupObjectParams"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InterchangeResultsContainer . h \" # include \" InterchangeTaskSystem . h \" # include \" Nodes / InterchangeFactoryBaseNode . h \" # include \" UObject / Class . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPath . h \" # include \" InterchangeFactoryBase . generated . h \" class ULevel ; class UInterchangeBaseNodeContainer ; class UInterchangePipelineBase ; class UInterchangeSourceData ; class UInterchangeTranslatorBase ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (None = 0,Textures,Materials,Meshes,Animations,Physics } ; class FInterchangePostImportTask { public : void)",
    "insertText": "Execute()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ; } ;)",
    "insertText": "UCLASS(BlueprintType, Blueprintable, Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UFUNCTION(BlueprintCallable, Category = \"Interchange | Factory\") virtual UClass* GetFactoryClass()"
  },
  {
    "label": "ImportAssetObject_GameThread()",
    "kind": "Method",
    "detail": "Function (FImportAssetResult ImportAssetResult ; PRAGMA_DISABLE_DEPRECATION_WARNINGS ImportAssetResult . ImportedObject =)",
    "insertText": "ImportAssetObject_GameThread(Arguments)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FSoftObjectPath ReferenceObject ;)",
    "insertText": "if(Arguments.AssetNode && Arguments.AssetNode->GetCustomReferenceObject(ReferenceObject))"
  },
  {
    "label": "ImportAsset_Async()",
    "kind": "Method",
    "detail": "Function (} return nullptr ; } FImportAssetResult)",
    "insertText": "ImportAsset_Async(const FImportAssetObjectParams& Arguments)"
  },
  {
    "label": "ImportAssetObject_Async()",
    "kind": "Method",
    "detail": "Function (FImportAssetResult ImportAssetResult ; PRAGMA_DISABLE_DEPRECATION_WARNINGS ImportAssetResult . ImportedObject =)",
    "insertText": "ImportAssetObject_Async(Arguments)"
  },
  {
    "label": "EndImportAsset_GameThread()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS return ImportAssetResult ; } FImportAssetResult)",
    "insertText": "EndImportAsset_GameThread(const FImportAssetObjectParams& Arguments)"
  },
  {
    "label": "TryLoad()",
    "kind": "Method",
    "detail": "Function (ImportAssetResult . ImportedObject = ReferenceObject .)",
    "insertText": "TryLoad()"
  },
  {
    "label": "ImportSceneObject_GameThread()",
    "kind": "Method",
    "detail": "Function (} return ImportAssetResult ; } struct FImportSceneObjectsParams { ULevel* Level = nullptr ; FString ObjectName ; UInterchangeFactoryBaseNode* FactoryNode = nullptr ; const UInterchangeBaseNodeContainer* NodeContainer = nullptr ; const UInterchangeSourceData* SourceData = nullptr ; UObject* ReimportObject = nullptr ; const UInterchangeFactoryBaseNode* ReimportFactoryNode = nullptr ; TArray<TObjectPtr<UObject>> ImportAssets ; } ; UObject*)",
    "insertText": "ImportSceneObject_GameThread(const FImportSceneObjectsParams& Arguments)"
  },
  {
    "label": "SetupObject_GameThread()",
    "kind": "Method",
    "detail": "Function (} struct FSetupObjectParams { const UInterchangeSourceData* SourceData = nullptr ; UInterchangeFactoryBaseNode* FactoryNode = nullptr ; UObject* ImportedObject = nullptr ; FString NodeUniqueID ; UInterchangeBaseNodeContainer* NodeContainer = nullptr ; TArray<UInterchangePipelineBase*> Pipelines ; TArray<UObject*> OriginalPipelines ; UInterchangeTranslatorBase* Translator ; bool bIsReimport = false ; ; } ; void)",
    "insertText": "SetupObject_GameThread(const FSetupObjectParams& Arguments)"
  },
  {
    "label": "BuildObject_GameThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BuildObject_GameThread(const FSetupObjectParams& Arguments, bool &OutPostEditchangeCalled)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR)",
    "insertText": "if(Arguments.ImportedObject)"
  },
  {
    "label": "PostEditChange()",
    "kind": "Method",
    "detail": "Function (Arguments . ImportedObject ->)",
    "insertText": "PostEditChange()"
  },
  {
    "label": "FinalizeObject_GameThread()",
    "kind": "Method",
    "detail": "Function (OutPostEditchangeCalled = true ; } # endif } void)",
    "insertText": "FinalizeObject_GameThread(const FSetupObjectParams& Arguments)"
  },
  {
    "label": "GetSourceFilenames()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetSourceFilenames(const UObject* Object, TArray<FString>& OutSourceFilenames)"
  },
  {
    "label": "ReinstateSourceData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ReinstateSourceData(const UObject* Object)"
  },
  {
    "label": "ClearBackupSourceData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearBackupSourceData(const UObject* Object)"
  },
  {
    "label": "SetReimportSourceIndex()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetReimportSourceIndex(const UObject* Object, int32 SourceIndex)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* Item = Results -> Add<)",
    "insertText": "T()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Results ->)",
    "insertText": "Add(Item)"
  },
  {
    "label": "SetResultsContainer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetResultsContainer(UInterchangeResultsContainer* InResults)"
  },
  {
    "label": "GetObjectToReimport()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObjectToReimport(UObject* ReimportObject, const UInterchangeFactoryBaseNode& FactoryNode, const FString& PackageName, const FString& AssetName, const FString& SubPathString)"
  }
]