[
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SSearchBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSearchBox"
  },
  {
    "label": "SListView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SListView"
  },
  {
    "label": "SFilterSearchBoxImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterSearchBoxImpl"
  },
  {
    "label": "TOOLWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOOLWIDGETS_API"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Widgets / SCompoundWidget . h \" # include \" Containers / UnrealString . h \" # include \" Framework / SlateDelegates . h \" class SMenuAnchor ; class SSearchBox ; template<T> class SListView ; class SFilterSearchBoxImpl ; class SFilterSearchBox : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnSaveSearchClicked, const FText&) SLATE_BEGIN_ARGS(SFilterSearchBox) : _OnTextChanged() , _OnTextCommitted() , _InitialText() , _HintText() , _ShowSearchHistory(true) , _MaxSearchHistory(5) , _DelayChangeNotificationsWhileTyping( false)"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnTextChanged, OnTextChanged ) SLATE_EVENT( FOnTextCommitted, OnTextCommitted ) SLATE_ATTRIBUTE( FText, InitialText ) SLATE_ATTRIBUTE( FText, HintText ) SLATE_ATTRIBUTE(bool, ShowSearchHistory) SLATE_ARGUMENT(int32, MaxSearchHistory) SLATE_ARGUMENT(TArrayView<FText>, SearchHistory) SLATE_ATTRIBUTE( bool, DelayChangeNotificationsWhileTyping ) SLATE_EVENT(FOnKeyDown, OnKeyDownHandler) SLATE_EVENT(FOnSaveSearchClicked, OnSaveSearchClicked) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "SetText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetText(const TAttribute< FText >& InNewText)"
  },
  {
    "label": "GetText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetText()"
  },
  {
    "label": "GetSearchHistory()",
    "kind": "Method",
    "detail": "Function (TArray<FText>)",
    "insertText": "GetSearchHistory()"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(const FText& InError)"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(const FString& InError)"
  },
  {
    "label": "OnFocusLost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusLost(const FFocusEvent& InFocusEvent)"
  },
  {
    "label": "HasKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasKeyboardFocus()"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnFocusReceived()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFocusReceived(const FGeometry& MyGeometry, const FFocusEvent& InFocusEvent)"
  },
  {
    "label": "SetOnSaveSearchHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnSaveSearchHandler(FOnSaveSearchClicked InOnSaveSearchHandler)"
  },
  {
    "label": "HandleTextChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleTextChanged(const FText& NewText)"
  },
  {
    "label": "HandleTextCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextCommitted(const FText& NewText, ETextCommit::Type CommitType)"
  },
  {
    "label": "UpdateSearchHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSearchHistory(const FText &NewText)"
  },
  {
    "label": "OnSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectionChanged(TSharedPtr<FText> NewValue, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "MakeSearchHistoryRowWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<ITableRow>)",
    "insertText": "MakeSearchHistoryRowWidget(TSharedPtr<FText> SearchText, const TSharedRef<STableViewBase>& OwnerTable)"
  },
  {
    "label": "OnClickedSearchHistory()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickedSearchHistory()"
  },
  {
    "label": "GetSearchHistoryVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetSearchHistoryVisibility()"
  }
]