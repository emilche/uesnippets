[
  {
    "label": "FMetalDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalDevice"
  },
  {
    "label": "FMetalComputeShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMetalComputeShader"
  },
  {
    "label": "FMetalComputeShader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MetalRHIPrivate . h \" # include \" Shaders / Types / Templates / MetalBaseShader . h \" # pragma mark - Metal RHI Compute Shader Class class FMetalDevice ; class FMetalComputeShader : public TMetalBaseShader<FRHIComputeShader,SF_Compute> { public :)",
    "insertText": "FMetalComputeShader(FMetalDevice& Device, TArrayView<const uint8> InCode, MTLLibraryPtr InLibrary)"
  },
  {
    "label": "FMetalComputeShader()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMetalComputeShader()"
  },
  {
    "label": "GetPipeline()",
    "kind": "Method",
    "detail": "Function (FMetalShaderPipelinePtr)",
    "insertText": "GetPipeline()"
  },
  {
    "label": "GetFunction()",
    "kind": "Method",
    "detail": "Function (MTLFunctionPtr)",
    "insertText": "GetFunction()"
  }
]