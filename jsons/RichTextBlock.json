[
  {
    "label": "SRichTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SRichTextBlock"
  },
  {
    "label": "UDataTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataTable"
  },
  {
    "label": "UMaterialInstanceDynamic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInstanceDynamic"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "URichTextBlockDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URichTextBlockDecorator"
  },
  {
    "label": "FRichTextStyleRow",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRichTextStyleRow"
  },
  {
    "label": "URichTextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URichTextBlock"
  },
  {
    "label": "ITextDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextDecorator"
  },
  {
    "label": "IRichTextMarkupParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRichTextMarkupParser"
  },
  {
    "label": "IRichTextMarkupWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRichTextMarkupWriter"
  },
  {
    "label": "FSlateStyleSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateStyleSet"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Styling / SlateTypes . h \" # include \" Widgets / SWidget . h \" # include \" Components / TextWidgetTypes . h \" # include \" Engine / DataTable . h \" # include \" RichTextBlock . generated . h \" class SRichTextBlock ; class UDataTable ; class UMaterialInstanceDynamic ; class UMaterialInterface ; class URichTextBlockDecorator ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() public: UPROPERTY(EditAnywhere, Category = Appearance)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: UE_DEPRECATED(5.2, \"Direct access to Text is deprecated. Please use the getter or setter.\") UPROPERTY(EditAnywhere, Category = Content, BlueprintSetter = \"SetText\", BlueprintGetter = \"GetText\", Getter, Setter, meta = (MultiLine = \"true\"))"
  },
  {
    "label": "URichTextBlock()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "URichTextBlock(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "SynchronizeProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SynchronizeProperties()"
  },
  {
    "label": "ReleaseSlateResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseSlateResources(bool bReleaseChildren)"
  },
  {
    "label": "GetPaletteCategory()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR const FText)",
    "insertText": "GetPaletteCategory()"
  },
  {
    "label": "OnCreationFromPalette()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreationFromPalette()"
  },
  {
    "label": "ValidateCompiledDefaults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ValidateCompiledDefaults(IWidgetCompilerLog& CompileLog)"
  },
  {
    "label": "GetDefaultTextStyle()",
    "kind": "Method",
    "detail": "Function (const FTextBlockStyle&)",
    "insertText": "GetDefaultTextStyle()"
  },
  {
    "label": "GetCurrentDefaultTextStyle()",
    "kind": "Method",
    "detail": "Function (const FTextBlockStyle&)",
    "insertText": "GetCurrentDefaultTextStyle()"
  },
  {
    "label": "OnShapedTextOptionsChanged()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnShapedTextOptionsChanged(FShapedTextOptions InShapedTextOptions)"
  },
  {
    "label": "OnJustificationChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnJustificationChanged(ETextJustify::Type InJustification)"
  },
  {
    "label": "OnWrappingPolicyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWrappingPolicyChanged(ETextWrappingPolicy InWrappingPolicy)"
  },
  {
    "label": "OnAutoWrapTextChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAutoWrapTextChanged(bool InAutoWrapText)"
  },
  {
    "label": "OnWrapTextAtChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWrapTextAtChanged(float InWrapTextAt)"
  },
  {
    "label": "OnLineHeightPercentageChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLineHeightPercentageChanged(float InLineHeightPercentage)"
  },
  {
    "label": "OnApplyLineHeightToBottomLineChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnApplyLineHeightToBottomLineChanged(bool InApplyLineHeightToBottomLine)"
  },
  {
    "label": "OnMarginChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMarginChanged(const FMargin& InMargin)"
  },
  {
    "label": "RebuildWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "RebuildWidget()"
  },
  {
    "label": "UpdateStyleData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStyleData()"
  },
  {
    "label": "RebuildStyleInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildStyleInstance()"
  },
  {
    "label": "CreateDecorators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDecorators(TArray< TSharedRef< class ITextDecorator > >& OutDecorators)"
  },
  {
    "label": "CreateMarkupParser()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IRichTextMarkupParser>)",
    "insertText": "CreateMarkupParser()"
  },
  {
    "label": "CreateMarkupWriter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IRichTextMarkupWriter>)",
    "insertText": "CreateMarkupWriter()"
  },
  {
    "label": "BeginDefaultStyleOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDefaultStyleOverride()"
  },
  {
    "label": "ApplyUpdatedDefaultTextStyle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyUpdatedDefaultTextStyle()"
  },
  {
    "label": "GetDefaultTextStyleOverride()",
    "kind": "Method",
    "detail": "Function (const FTextBlockStyle&)",
    "insertText": "GetDefaultTextStyleOverride()"
  },
  {
    "label": "GetMinDesiredWidth()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetMinDesiredWidth()"
  },
  {
    "label": "GetTransformPolicy()",
    "kind": "Method",
    "detail": "Function (ETextTransformPolicy)",
    "insertText": "GetTransformPolicy()"
  },
  {
    "label": "GetOverflowPolicy()",
    "kind": "Method",
    "detail": "Function (ETextOverflowPolicy)",
    "insertText": "GetOverflowPolicy()"
  }
]