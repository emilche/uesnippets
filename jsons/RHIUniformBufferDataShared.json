[
  {
    "label": "FUniformDataReader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniformDataReader"
  },
  {
    "label": "FUniformDataReader()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderGraphResources . h \" namespace UE::RHICore { struct FUniformDataReader {)",
    "insertText": "FUniformDataReader()"
  },
  {
    "label": "FUniformDataReader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FUniformDataReader(const void* InData) : Data(reinterpret_cast<const uint8*>(InData))"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (} template<TResourceOut> const TResourceOut&)",
    "insertText": "Read(const FRHIUniformBufferResource& InResource)"
  },
  {
    "label": "GetBindlessResourceHandle()",
    "kind": "Method",
    "detail": "Function (} const uint8* Data ; } ; FRHIDescriptorHandle)",
    "insertText": "GetBindlessResourceHandle(FUniformDataReader Reader, const FRHIUniformBufferResource& Resource)"
  },
  {
    "label": "FRHIShaderResourceView()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_SRV : { FRHIShaderResourceView* ShaderResourceView = Reader . Read<)",
    "insertText": "FRHIShaderResourceView(Resource)"
  },
  {
    "label": "FRHISamplerState()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_SAMPLER : { FRHISamplerState* SamplerState = Reader . Read<)",
    "insertText": "FRHISamplerState(Resource)"
  },
  {
    "label": "FRHIResourceCollection()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_RESOURCE_COLLECTION : { FRHIResourceCollection* ResourceCollection = Reader . Read<)",
    "insertText": "FRHIResourceCollection(Resource)"
  },
  {
    "label": "FRDGTexture()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_RDG_TEXTURE : { FRDGTexture* RDGTexture = Reader . Read<)",
    "insertText": "FRDGTexture(Resource)"
  },
  {
    "label": "GetRHI()",
    "kind": "Method",
    "detail": "Function (FRHITexture* Texture = RDGTexture ? RDGTexture ->)",
    "insertText": "GetRHI()"
  },
  {
    "label": "FRDGShaderResourceView()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_RDG_TEXTURE_SRV : case UBMT_RDG_TEXTURE_NON_PIXEL_SRV : case UBMT_RDG_BUFFER_SRV : { FRDGShaderResourceView* RDGShaderResourceView = Reader . Read<)",
    "insertText": "FRDGShaderResourceView(Resource)"
  },
  {
    "label": "FRHIUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_UAV : { FRHIUnorderedAccessView* UnorderedAccessView = Reader . Read<)",
    "insertText": "FRHIUnorderedAccessView(Resource)"
  },
  {
    "label": "FRDGUnorderedAccessView()",
    "kind": "Method",
    "detail": "Function (} break ; case UBMT_RDG_TEXTURE_UAV : case UBMT_RDG_BUFFER_UAV : { FRDGUnorderedAccessView* RDGUnorderedAccessView = Reader . Read<)",
    "insertText": "FRDGUnorderedAccessView(Resource)"
  },
  {
    "label": "FRHIDescriptorHandle()",
    "kind": "Method",
    "detail": "Function (} break ; default : break ; } return)",
    "insertText": "FRHIDescriptorHandle()"
  },
  {
    "label": "UpdateUniformBufferConstants()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateUniformBufferConstants(void* DestinationData, const void* SourceData, const FRHIUniformBufferLayout& Layout, bool bAllowBindless = true)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(DestinationData, SourceData, Layout.ConstantBufferSize)"
  },
  {
    "label": "Reader()",
    "kind": "Method",
    "detail": "Function (FUniformDataReader)",
    "insertText": "Reader(SourceData)"
  },
  {
    "label": "GetBindlessResourceHandle()",
    "kind": "Method",
    "detail": "Function (const FRHIDescriptorHandle Handle =)",
    "insertText": "GetBindlessResourceHandle(Reader, Resource)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (const uint32 BindlessIndex = Handle .)",
    "insertText": "GetIndex()"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(reinterpret_cast<uint8*>(DestinationData) + Resource.MemberOffset, &BindlessIndex, sizeof(BindlessIndex))"
  }
]