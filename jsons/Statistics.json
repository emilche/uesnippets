[
  {
    "label": "Local",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Local"
  },
  {
    "label": "Local",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Local"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "IterTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IterTraits"
  },
  {
    "label": "IterTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IterTraits"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "GetValImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetValImpl"
  },
  {
    "label": "GetValImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetValImpl"
  },
  {
    "label": "GetValImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetValImpl"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "GetVal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GetVal"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "StatsOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StatsOp"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "HistOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HistOp"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "MathOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MathOp"
  },
  {
    "label": "MathOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MathOp"
  },
  {
    "label": "histogram()",
    "kind": "Method",
    "detail": "Function (math::Histogram)",
    "insertText": "histogram(const IterT& iter, double minVal, double maxVal,\n          size_t numBins = 10, bool threaded = true)"
  },
  {
    "label": "extrema()",
    "kind": "Method",
    "detail": "Function (math::Extrema)",
    "insertText": "extrema(const IterT& iter, bool threaded = true)"
  },
  {
    "label": "statistics()",
    "kind": "Method",
    "detail": "Function (math::Stats)",
    "insertText": "statistics(const IterT& iter, bool threaded = true)"
  },
  {
    "label": "extrema()",
    "kind": "Method",
    "detail": "Function (math::Extrema)",
    "insertText": "extrema(const IterT& iter, const ValueOp& op, bool threaded)"
  },
  {
    "label": "statistics()",
    "kind": "Method",
    "detail": "Function (math::Stats)",
    "insertText": "statistics(const IterT& iter, const ValueOp& op, bool threaded)"
  },
  {
    "label": "double()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "double(val)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (ValueOp>)",
    "insertText": "op(valOp, vmin, vmax, numBins)"
  },
  {
    "label": "extrema()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "extrema(iter, valOp, threaded)"
  },
  {
    "label": "statistics()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "statistics(iter, valOp, threaded)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (math::Extrema>)",
    "insertText": "op(valOp)"
  },
  {
    "label": "op()",
    "kind": "Method",
    "detail": "Function (math::Stats>)",
    "insertText": "op(valOp)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (math::Extrema>)",
    "insertText": "func(iter, op)"
  },
  {
    "label": "func()",
    "kind": "Method",
    "detail": "Function (math::Stats>)",
    "insertText": "func(iter, op)"
  }
]