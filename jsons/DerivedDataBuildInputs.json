[
  {
    "label": "FCompressedBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompressedBuffer"
  },
  {
    "label": "FBuildInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildInputs"
  },
  {
    "label": "FBuildInputsBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBuildInputsBuilder"
  },
  {
    "label": "IBuildInputsInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInputsInternal"
  },
  {
    "label": "IBuildInputsBuilderInternal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInputsBuilderInternal"
  },
  {
    "label": "FOptionalBuildInputs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOptionalBuildInputs"
  },
  {
    "label": "IBuildInputsInternal()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" CoreTypes . h \" # include \" Misc / ScopeExit . h \" # include \" Templates / Function . h \" # include \" Templates / RefCounting . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / UnrealTemplate . h \" class FCompressedBuffer ; namespace UE::DerivedData { class FBuildInputs ; } namespace UE::DerivedData { class FBuildInputsBuilder ; } namespace UE::DerivedData::Private { class IBuildInputsInternal { public : ~)",
    "insertText": "IBuildInputsInternal()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const FSharedString&)",
    "insertText": "GetName()"
  },
  {
    "label": "FindInput()",
    "kind": "Method",
    "detail": "Function (const FCompressedBuffer&)",
    "insertText": "FindInput(FUtf8StringView Key)"
  },
  {
    "label": "IterateInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IterateInputs(TFunctionRef<void (FUtf8StringView Key, const FCompressedBuffer& Buffer)> Visitor)"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRef()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "CreateBuildInputs()",
    "kind": "Method",
    "detail": "Function (} ; FBuildInputs)",
    "insertText": "CreateBuildInputs(IBuildInputsInternal* Input)"
  },
  {
    "label": "IBuildInputsBuilderInternal()",
    "kind": "Method",
    "detail": "Function (class IBuildInputsBuilderInternal { public : ~)",
    "insertText": "IBuildInputsBuilderInternal()"
  },
  {
    "label": "AddInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInput(FUtf8StringView Key, const FCompressedBuffer& Buffer)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (FBuildInputs)",
    "insertText": "Build()"
  },
  {
    "label": "CreateBuildInputsBuilder()",
    "kind": "Method",
    "detail": "Function (} ; FBuildInputsBuilder)",
    "insertText": "CreateBuildInputsBuilder(IBuildInputsBuilderInternal* InputsBuilder)"
  },
  {
    "label": "IterateInputs()",
    "kind": "Method",
    "detail": "Function (Inputs ->)",
    "insertText": "IterateInputs(Visitor)"
  },
  {
    "label": "CreateBuildInputs()",
    "kind": "Method",
    "detail": "Function (} private : class FOptionalBuildInputs ; FBuildInputs)",
    "insertText": "CreateBuildInputs(Private::IBuildInputsInternal* Inputs)"
  },
  {
    "label": "FBuildInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBuildInputs(Private::IBuildInputsInternal* InInputs) : Inputs(InInputs)"
  },
  {
    "label": "AddInput()",
    "kind": "Method",
    "detail": "Function (InputsBuilder ->)",
    "insertText": "AddInput(Key, Buffer)"
  },
  {
    "label": "CreateBuildInputsBuilder()",
    "kind": "Method",
    "detail": "Function (} private : FBuildInputsBuilder)",
    "insertText": "CreateBuildInputsBuilder(Private::IBuildInputsBuilderInternal* InputsBuilder)"
  },
  {
    "label": "FBuildInputsBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FBuildInputsBuilder(Private::IBuildInputsBuilderInternal* InInputsBuilder) : InputsBuilder(InInputsBuilder)"
  },
  {
    "label": "FOptionalBuildInputs()",
    "kind": "Method",
    "detail": "Function (} TUniquePtr<Private::IBuildInputsBuilderInternal> InputsBuilder ; } ; class FOptionalBuildInputs : private FBuildInputs { public :)",
    "insertText": "FOptionalBuildInputs() : FBuildInputs(nullptr)"
  },
  {
    "label": "FOptionalBuildInputs()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOptionalBuildInputs(FBuildInputs&& InInputs) : FBuildInputs(MoveTemp(InInputs))"
  },
  {
    "label": "FOptionalBuildInputs()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FOptionalBuildInputs(const FBuildInputs& InInputs) : FBuildInputs(InInputs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FOptionalBuildInputs&)",
    "insertText": "operator(FBuildInputs&& InInputs)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(MoveTemp(InInputs))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(InInputs)"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (} operator)",
    "insertText": "bool()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "FOptionalBuildInputs()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "FOptionalBuildInputs()"
  }
]