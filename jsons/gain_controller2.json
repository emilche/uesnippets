[
  {
    "label": "AudioBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioBuffer"
  },
  {
    "label": "GainController2",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GainController2"
  },
  {
    "label": "GainController2()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_GAIN_CONTROLLER2_H_ # define MODULES_AUDIO_PROCESSING_GAIN_CONTROLLER2_H_ # include<atomic> # include<memory> # include<string> # include \" modules / audio_processing / agc2 / adaptive_digital_gain_controller . h \" # include \" modules / audio_processing / agc2 / cpu_features . h \" # include \" modules / audio_processing / agc2 / gain_applier . h \" # include \" modules / audio_processing / agc2 / input_volume_controller . h \" # include \" modules / audio_processing / agc2 / limiter . h \" # include \" modules / audio_processing / agc2 / vad_wrapper . h \" # include \" modules / audio_processing / include / audio_processing . h \" # include \" modules / audio_processing / logging / apm_data_dumper . h \" namespace webrtc { class AudioBuffer ; class GainController2 { public :)",
    "insertText": "GainController2(const AudioProcessing::Config::GainController2& config, int sample_rate_hz, int num_channels, bool use_internal_vad)"
  },
  {
    "label": "GainController2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GainController2(const GainController2&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (GainController2&)",
    "insertText": "operator(const GainController2&)"
  },
  {
    "label": "GainController2()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GainController2()"
  },
  {
    "label": "SetFixedGainDb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFixedGainDb(float gain_db)"
  },
  {
    "label": "SetCaptureOutputUsed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCaptureOutputUsed(bool capture_output_used)"
  },
  {
    "label": "Analyze()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Analyze(int applied_input_volume, const AudioBuffer& audio_buffer)"
  },
  {
    "label": "Process()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Process(absl::optional<float> speech_probability, bool input_volume_changed, AudioBuffer* audio)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(const AudioProcessing::Config::GainController2& config)"
  },
  {
    "label": "GetCpuFeatures()",
    "kind": "Method",
    "detail": "Function (AvailableCpuFeatures)",
    "insertText": "GetCpuFeatures()"
  }
]