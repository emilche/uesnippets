[
  {
    "label": "FirewallManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FirewallManager"
  },
  {
    "label": "FirewallProtocol",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FirewallProtocol"
  },
  {
    "label": "FirewallDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "FirewallDirection"
  },
  {
    "label": "FirewallSocketServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FirewallSocketServer"
  },
  {
    "label": "Rule",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Rule"
  },
  {
    "label": "FirewallManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FirewallManager"
  },
  {
    "label": "FirewallSocketServer()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FirewallSocketServer(SocketServer* server,\n                       FirewallManager* manager = nullptr,\n                       bool should_delete_server = false)"
  },
  {
    "label": "AddRule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRule(bool allow,\n               FirewallProtocol p,\n               const SocketAddress& src,\n               const SocketAddress& dst)"
  },
  {
    "label": "ClearRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRules()"
  },
  {
    "label": "Check()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Check(FirewallProtocol p,\n             const SocketAddress& src,\n             const SocketAddress& dst)"
  },
  {
    "label": "SetUnbindableIps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUnbindableIps(const std::vector<rtc::IPAddress>& unbindable_ips)"
  },
  {
    "label": "IsBindableIp()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBindableIp(const rtc::IPAddress& ip)"
  },
  {
    "label": "FirewallManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FirewallManager()"
  },
  {
    "label": "AddServer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddServer(FirewallSocketServer* server)"
  },
  {
    "label": "RemoveServer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveServer(FirewallSocketServer* server)"
  },
  {
    "label": "ClearRules()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearRules()"
  }
]