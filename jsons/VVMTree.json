[
  {
    "label": "TIntrusiveTree",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIntrusiveTree"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "TIntrusiveTree()",
    "kind": "Method",
    "detail": "Function (template<DerivedType> struct TIntrusiveTree { TWriteBarrier<DerivedType> Parent ; TWriteBarrier<DerivedType> LastChild ; TWriteBarrier<DerivedType> Prev ; TWriteBarrier<DerivedType> Next ;)",
    "insertText": "TIntrusiveTree(FAccessContext Context, DerivedType* Parent) : Parent(Context, Parent)"
  },
  {
    "label": "DerivedType()",
    "kind": "Method",
    "detail": "Function (DerivedType* This = static_cast<)",
    "insertText": "DerivedType(this)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Prev .)",
    "insertText": "Set(Context, Parent->LastChild.Get())"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Parent -> LastChild -> Next .)",
    "insertText": "Set(Context, This)"
  },
  {
    "label": "Detach()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "Detach(FAccessContext Context)"
  },
  {
    "label": "V_DIE_IF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "V_DIE_IF(Next)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Parent -> LastChild .)",
    "insertText": "Set(Context, Prev.Get())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(Prev)"
  },
  {
    "label": "V_DIE_UNLESS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "V_DIE_UNLESS(Prev->Next.Get() == This)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Prev -> Next .)",
    "insertText": "Set(Context, Next.Get())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(Next)"
  },
  {
    "label": "V_DIE_UNLESS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "V_DIE_UNLESS(Next->Prev.Get() == This)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} Prev .)",
    "insertText": "Reset()"
  },
  {
    "label": "ForEach()",
    "kind": "Method",
    "detail": "Function (} template<FunctionType> void)",
    "insertText": "ForEach(FunctionType&& Function)"
  },
  {
    "label": "Function()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Function(static_cast<DerivedType&>(*this))"
  },
  {
    "label": "Pop()",
    "kind": "Method",
    "detail": "Function (TIntrusiveTree* Task = ToVisit .)",
    "insertText": "Pop()"
  },
  {
    "label": "Function()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Function(static_cast<DerivedType&>(*Task))"
  },
  {
    "label": "Push()",
    "kind": "Method",
    "detail": "Function (ToVisit .)",
    "insertText": "Push(Child)"
  },
  {
    "label": "VisitReferencesImpl()",
    "kind": "Method",
    "detail": "Function (} } } template<TVisitor> void)",
    "insertText": "VisitReferencesImpl(TVisitor& Visitor)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (Visitor .)",
    "insertText": "Visit(Parent, TEXT(\"Parent\"))"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (Visitor .)",
    "insertText": "Visit(LastChild, TEXT(\"LastChild\"))"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (Visitor .)",
    "insertText": "Visit(Prev, TEXT(\"Prev\"))"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (Visitor .)",
    "insertText": "Visit(Next, TEXT(\"Next\"))"
  }
]