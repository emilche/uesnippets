[
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" namespace Chaos { class FPBDCollisionConstraint ; enum class ECollisionVisitorResult { Stop,Continue } ; enum class ECollisionVisitorFlags : uint8 { VisitActiveAwake = 0,VisitSleeping = 1<<1,VisitDisabled = 1<<2,VisitExpired = 1<<3,VisitDefault = VisitActiveAwake | VisitSleeping,VisitAllCurrent = VisitActiveAwake | VisitSleeping | VisitDisabled,VisitAllCurrentAndExpired = VisitActiveAwake | VisitSleeping | VisitDisabled | VisitExpired,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ECollisionVisitorFlags)"
  }
]