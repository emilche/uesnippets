[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SGridPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGridPanel"
  },
  {
    "label": "Layer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Layer"
  },
  {
    "label": "FSlot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlot"
  },
  {
    "label": "SLATE_DECLARE_WIDGET_API()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" SlotBase . h \" # include \" Widgets / SWidget . h \" # include \" Layout / Children . h \" # include \" Widgets / SPanel . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class SGridPanel : public SPanel {)",
    "insertText": "SLATE_DECLARE_WIDGET_API(SGridPanel, SPanel, SLATE_API)"
  },
  {
    "label": "Layer()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "Layer(int32 InLayer) : TheLayer(InLayer)"
  },
  {
    "label": "FSlot()",
    "kind": "Method",
    "detail": "Function (} int32 TheLayer ; } ; class FSlot : public TBasicLayoutWidgetSlot<FSlot> { SGridPanel ; public :)",
    "insertText": "FSlot(int32 Column, int32 Row, int32 InLayer ) : TBasicLayoutWidgetSlot<FSlot>(HAlign_Fill, VAlign_Fill) , ColumnParam( Column ) , ColumnSpanParam( 1 ) , RowParam( Row ) , RowSpanParam( 1 ) , LayerParam( InLayer ) , NudgeParam( FVector2D::ZeroVector)"
  },
  {
    "label": "SLATE_SLOT_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_SLOT_BEGIN_ARGS(FSlot, TBasicLayoutWidgetSlot<FSlot>) SLATE_ARGUMENT(TOptional<int32>, Column) SLATE_ARGUMENT(TOptional<int32>, ColumnSpan) SLATE_ARGUMENT(TOptional<int32>, Row) SLATE_ARGUMENT(TOptional<int32>, RowSpan) SLATE_ARGUMENT(TOptional<int32>, Layer) SLATE_ARGUMENT(TOptional<FVector2D>, Nudge) SLATE_SLOT_END_ARGS() SLATE_API void Construct(const FChildren& SlotOwner, FSlotArguments&& InArgs)"
  },
  {
    "label": "GetColumn()",
    "kind": "Method",
    "detail": "Function (public : int32)",
    "insertText": "GetColumn()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (Column =)",
    "insertText": "Max(0, Column)"
  },
  {
    "label": "NotifySlotChanged()",
    "kind": "Method",
    "detail": "Function (ColumnParam = Column ;)",
    "insertText": "NotifySlotChanged()"
  },
  {
    "label": "GetColumnSpan()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "GetColumnSpan()"
  },
  {
    "label": "Clamp()",
    "kind": "Method",
    "detail": "Function (ColumnSpan =)",
    "insertText": "Clamp(ColumnSpan, 1, 10000)"
  },
  {
    "label": "GetRow()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "GetRow()"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (Row =)",
    "insertText": "Max(0, Row)"
  },
  {
    "label": "GetRowSpan()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "GetRowSpan()"
  },
  {
    "label": "Clamp()",
    "kind": "Method",
    "detail": "Function (RowSpan =)",
    "insertText": "Clamp(RowSpan, 1, 10000)"
  },
  {
    "label": "GetLayer()",
    "kind": "Method",
    "detail": "Function (} } int32)",
    "insertText": "GetLayer()"
  },
  {
    "label": "NotifySlotChanged()",
    "kind": "Method",
    "detail": "Function (LayerParam = Layer ; const bool bSlotLayerChanged = true ;)",
    "insertText": "NotifySlotChanged(bSlotLayerChanged)"
  },
  {
    "label": "GetNudge()",
    "kind": "Method",
    "detail": "Function (} } FVector2D)",
    "insertText": "GetNudge()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (NudgeParam = Nudge ;)",
    "insertText": "Invalidate(EInvalidateWidgetReason::Paint)"
  },
  {
    "label": "NotifySlotChanged()",
    "kind": "Method",
    "detail": "Function (} private : TWeakPtr<SGridPanel> Panel ; int32 ColumnParam ; int32 ColumnSpanParam ; int32 RowParam ; int32 RowSpanParam ; int32 LayerParam ; FVector2D NudgeParam ; void)",
    "insertText": "NotifySlotChanged(bool bSlotLayerChanged = false)"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (Panel .)",
    "insertText": "Pin()->NotifySlotChanged(this, bSlotLayerChanged)"
  },
  {
    "label": "Slot()",
    "kind": "Method",
    "detail": "Function (} } } ; FSlot::FSlotArguments)",
    "insertText": "Slot(int32 Column, int32 Row, Layer InLayer = Layer(0))"
  },
  {
    "label": "AddSlot()",
    "kind": "Method",
    "detail": "Function (using FScopedWidgetSlotArguments = TPanelChildren<FSlot>::FScopedWidgetSlotArguments ; FScopedWidgetSlotArguments)",
    "insertText": "AddSlot(int32 Column, int32 Row, Layer InLayer = Layer(0))"
  },
  {
    "label": "RemoveSlot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveSlot(const TSharedRef<SWidget>& SlotWidget)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SGridPanel)"
  },
  {
    "label": "SLATE_SLOT_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_SLOT_ARGUMENT(FSlot, Slots ) FArguments& FillColumn( int32 ColumnId, const TAttribute<float>& Coefficient)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (ColFillCoefficients .)",
    "insertText": "Emplace(0)"
  },
  {
    "label": "Me()",
    "kind": "Method",
    "detail": "Function (} ColFillCoefficients [ ColumnId ] = Coefficient ; return)",
    "insertText": "Me()"
  },
  {
    "label": "FillRow()",
    "kind": "Method",
    "detail": "Function (} FArguments&)",
    "insertText": "FillRow(int32 RowId, const TAttribute<float>& Coefficient)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (} TArray<TAttribute<float>> ColFillCoefficients ; TArray<TAttribute<float>> RowFillCoefficients ;)",
    "insertText": "SLATE_END_ARGS() SLATE_API SGridPanel()"
  },
  {
    "label": "SGridPanel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SGridPanel()"
  },
  {
    "label": "ClearChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearChildren()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetDesiredRegionSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetDesiredRegionSize(const FIntPoint& StartCell, int32 Width, int32 Height)"
  },
  {
    "label": "SetColumnFill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetColumnFill(int32 ColumnId, const TAttribute<float>& Coefficient)"
  },
  {
    "label": "SetRowFill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRowFill(int32 RowId, const TAttribute<float>& Coefficient)"
  },
  {
    "label": "ClearFill()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFill()"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (public : int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "CacheDesiredSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheDesiredSize(float)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "ComputePartialSums()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ComputePartialSums(TArray<float>& TurnMeIntoPartialSums)"
  },
  {
    "label": "DistributeSizeContributions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DistributeSizeContributions(float SizeContribution, TArray<float>& DistributeOverMe, int32 StartIndex, int32 UpperBound)"
  },
  {
    "label": "FindInsertSlotLocation()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindInsertSlotLocation(const FSlot* InSlot)"
  },
  {
    "label": "ComputeDesiredCellSizes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeDesiredCellSizes(TArray<float>& OutColumns, TArray<float>& OutRows)"
  },
  {
    "label": "LayoutDebugPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "LayoutDebugPaint(const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId)"
  },
  {
    "label": "NotifySlotChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifySlotChanged(const FSlot* InSlot, bool bSlotLayerChanged = false)"
  }
]