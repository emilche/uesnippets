[
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "UMovieScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieScene"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "MOVIESCENE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MOVIESCENE_API"
  },
  {
    "label": "UMovieSceneReplaceableBindingBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneReplaceableBindingBase"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Bindings / MovieSceneCustomBinding . h \" # include \" MovieSceneSequenceID . h \" # include \" MovieSceneSpawnable . h \" # include \" MovieSceneSpawnableBinding . generated . h \" namespace UE { namespace MovieScene { struct FSharedPlaybackState ; } } struct FGuid ; class UMovieScene ; struct FSlateBrush ;)",
    "insertText": "UCLASS(abstract)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() public: virtual UObject* SpawnObject(const FGuid& BindingId, int32 BindingIndex, UMovieScene& MovieScene, FMovieSceneSequenceIDRef TemplateID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "PreDestroyObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreDestroyObject(UObject* Object, const FGuid& BindingId, int32 BindingIndex, FMovieSceneSequenceIDRef TemplateID)"
  },
  {
    "label": "DestroySpawnedObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DestroySpawnedObject(UObject* Object)"
  },
  {
    "label": "SupportsObjectTemplates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsObjectTemplates()"
  },
  {
    "label": "CopyObjectTemplate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CopyObjectTemplate(UObject* InSourceObject, UMovieSceneSequence& MovieSceneSequence)"
  },
  {
    "label": "SetupDefaults()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITOR void)",
    "insertText": "SetupDefaults(UObject* SpawnedObject, FGuid ObjectBindingId, UMovieScene& OwnerMovieScene)"
  },
  {
    "label": "GetBindingTrackCustomIconOverlay()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetBindingTrackCustomIconOverlay()"
  },
  {
    "label": "GetBindingTrackIconTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBindingTrackIconTooltip()"
  },
  {
    "label": "SpawnObjectInternal()",
    "kind": "Method",
    "detail": "Function (# endif protected : UObject*)",
    "insertText": "SpawnObjectInternal(UWorld* WorldContext, FName SpawnName, const FGuid& BindingId, int32 BindingIndex, UMovieScene& MovieScene, FMovieSceneSequenceIDRef TemplateID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState) PURE_VIRTUAL(UMovieSceneSpawnableBindingBase::SpawnObjectInternal, return nullptr;)"
  },
  {
    "label": "DestroySpawnedObjectInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySpawnedObjectInternal(UObject* Object) PURE_VIRTUAL(UMovieSceneSpawnableBindingBase::DestroySpawnedObjectInternal, return;)"
  },
  {
    "label": "GetWorldContext()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorldContext(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "GetSpawnName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSpawnName(const FGuid& BindingId, UMovieScene& MovieScene, FMovieSceneSequenceIDRef TemplateID, TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "WillSpawnObject()",
    "kind": "Method",
    "detail": "Function (} protected : private : class UMovieSceneReplaceableBindingBase ; bool)",
    "insertText": "WillSpawnObject(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "AsSpawnable()",
    "kind": "Method",
    "detail": "Function (const UMovieSceneSpawnableBindingBase*)",
    "insertText": "AsSpawnable(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState)"
  }
]