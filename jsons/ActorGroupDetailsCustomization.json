[
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "FUICommandInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandInfo"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SEditableTextBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditableTextBox"
  },
  {
    "label": "SSequenceRecorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SSequenceRecorder"
  },
  {
    "label": "FActorGroupDetailsCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorGroupDetailsCustomization"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IDetailCustomization . h \" # include \" Types / SlateEnums . h \" class IDetailLayoutBuilder ; class FUICommandInfo ; class SWidget ; class SEditableTextBox ; class SSequenceRecorder ; class FActorGroupDetailsCustomization : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance(TWeakPtr<SSequenceRecorder> InSequenceRecorder)"
  },
  {
    "label": "FActorGroupDetailsCustomization()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FActorGroupDetailsCustomization(TWeakPtr<SSequenceRecorder> InSequenceRecorder)"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (SequenceRecorder = InSequenceRecorder ; } void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailBuilder)"
  },
  {
    "label": "CreateRecordingGroupButton()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "CreateRecordingGroupButton(const FText& InGlyph, TSharedPtr<FUICommandInfo> InCommand)"
  },
  {
    "label": "FillRecordingProfileOptions()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "FillRecordingProfileOptions()"
  },
  {
    "label": "HandleRecordingGroupNameCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRecordingGroupNameCommitted(const FText& InText, ETextCommit::Type InCommitType)"
  }
]