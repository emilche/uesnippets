[
  {
    "label": "add_const_on_value_type_if_arithmetic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "add_const_on_value_type_if_arithmetic"
  },
  {
    "label": "DenseCoeffsBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DenseCoeffsBase"
  },
  {
    "label": "first_aligned_impl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "first_aligned_impl"
  },
  {
    "label": "inner_stride_at_compile_time",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "inner_stride_at_compile_time"
  },
  {
    "label": "outer_stride_at_compile_time",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "outer_stride_at_compile_time"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (# ifndef EIGEN_DENSECOEFFSBASE_H # define EIGEN_DENSECOEFFSBASE_H namespace Eigen { namespace internal { template<T> struct add_const_on_value_type_if_arithmetic { typedef conditional<is_arithmetic<T>::value,T,add_const_on_value_type<T>::type>::type type ; } ; } template<Derived> class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived> { public : typedef internal::traits<Derived>::StorageKind StorageKind ; typedef internal::traits<Derived>::Scalar Scalar ; typedef internal::packet_traits<Scalar>::type PacketScalar ; typedef internal::conditional<)",
    "insertText": "bool(internal::traits<Derived>::Flags&LvalueBit)"
  },
  {
    "label": "rowIndexByOuterInner()",
    "kind": "Method",
    "detail": "Function (typedef internal::add_const_on_value_type_if_arithmetic<internal::packet_traits<Scalar>::type>::type PacketReturnType ; typedef EigenBase<Derived> Base ; using Base::rows ; using Base::cols ; using Base::size ; using Base::derived ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index)",
    "insertText": "rowIndexByOuterInner(Index outer, Index inner)"
  },
  {
    "label": "colIndexByOuterInner()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Index)",
    "insertText": "colIndexByOuterInner(Index outer, Index inner)"
  },
  {
    "label": "coeff()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "coeff(Index row, Index col)"
  },
  {
    "label": "eigen_internal_assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eigen_internal_assert(row >= 0 && row < rows() && col >= 0 && col < cols())"
  },
  {
    "label": "coeffByOuterInner()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "coeffByOuterInner(Index outer, Index inner)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "operator()(Index row, Index col)"
  },
  {
    "label": "eigen_assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eigen_assert(row >= 0 && row < rows() && col >= 0 && col < cols())"
  },
  {
    "label": "coeff()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "coeff(Index index)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(internal::evaluator<Derived>::Flags & LinearAccessBit, THIS_COEFFICIENT_ACCESSOR_TAKING_ONE_ACCESS_IS_ONLY_FOR_EXPRESSIONS_ALLOWING_LINEAR_ACCESS) eigen_internal_assert(index >= 0 && index < size())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "operator(Index index)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(Derived::IsVectorAtCompileTime, THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD) eigen_assert(index >= 0 && index < size())"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "operator()(Index index)"
  },
  {
    "label": "eigen_assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eigen_assert(index >= 0 && index < size())"
  },
  {
    "label": "x()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "x()"
  },
  {
    "label": "y()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "y()"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(Derived::SizeAtCompileTime==-1 || Derived::SizeAtCompileTime>=2, OUT_OF_RANGE_ACCESS)"
  },
  {
    "label": "z()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "z()"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(Derived::SizeAtCompileTime==-1 || Derived::SizeAtCompileTime>=3, OUT_OF_RANGE_ACCESS)"
  },
  {
    "label": "w()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE CoeffReturnType)",
    "insertText": "w()"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(Derived::SizeAtCompileTime==-1 || Derived::SizeAtCompileTime>=4, OUT_OF_RANGE_ACCESS)"
  },
  {
    "label": "packet()",
    "kind": "Method",
    "detail": "Function (} template<int LoadMode> EIGEN_STRONG_INLINE PacketReturnType)",
    "insertText": "packet(Index row, Index col)"
  },
  {
    "label": "packetByOuterInner()",
    "kind": "Method",
    "detail": "Function (} template<int LoadMode> EIGEN_STRONG_INLINE PacketReturnType)",
    "insertText": "packetByOuterInner(Index outer, Index inner)"
  },
  {
    "label": "packet()",
    "kind": "Method",
    "detail": "Function (} template<int LoadMode> EIGEN_STRONG_INLINE PacketReturnType)",
    "insertText": "packet(Index index)"
  },
  {
    "label": "EIGEN_STATIC_ASSERT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EIGEN_STATIC_ASSERT(internal::evaluator<Derived>::Flags & LinearAccessBit, THIS_COEFFICIENT_ACCESSOR_TAKING_ONE_ACCESS_IS_ONLY_FOR_EXPRESSIONS_ALLOWING_LINEAR_ACCESS)"
  },
  {
    "label": "eigen_internal_assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "eigen_internal_assert(index >= 0 && index < size())"
  },
  {
    "label": "coeffRef()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "coeffRef()"
  },
  {
    "label": "coeffRefByOuterInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "coeffRefByOuterInner()"
  },
  {
    "label": "writePacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writePacket()"
  },
  {
    "label": "writePacketByOuterInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writePacketByOuterInner()"
  },
  {
    "label": "copyCoeff()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyCoeff()"
  },
  {
    "label": "copyCoeffByOuterInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyCoeffByOuterInner()"
  },
  {
    "label": "copyPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyPacket()"
  },
  {
    "label": "copyPacketByOuterInner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copyPacketByOuterInner()"
  },
  {
    "label": "stride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "stride()"
  },
  {
    "label": "innerStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "innerStride()"
  },
  {
    "label": "outerStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "outerStride()"
  },
  {
    "label": "rowStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "rowStride()"
  },
  {
    "label": "colStride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "colStride()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; template<Derived> class DenseCoeffsBase<Derived,WriteAccessors> : public DenseCoeffsBase<Derived,ReadOnlyAccessors> { public : typedef DenseCoeffsBase<Derived,ReadOnlyAccessors> Base ; typedef internal::traits<Derived>::StorageKind StorageKind ; typedef internal::traits<Derived>::Scalar Scalar ; typedef internal::packet_traits<Scalar>::type PacketScalar ; typedef NumTraits<Scalar>::Real RealScalar ; using Base::coeff ; using Base::rows ; using Base::cols ; using Base::size ; using Base::derived ; using Base::rowIndexByOuterInner ; using Base::colIndexByOuterInner ; using Base::operator [ ] ; using)",
    "insertText": "operator()"
  },
  {
    "label": "coeffRef()",
    "kind": "Method",
    "detail": "Function (using Base::x ; using Base::y ; using Base::z ; using Base::w ; EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar&)",
    "insertText": "coeffRef(Index row, Index col)"
  },
  {
    "label": "coeffRefByOuterInner()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar&)",
    "insertText": "coeffRefByOuterInner(Index outer, Index inner)"
  },
  {
    "label": "coeffRef()",
    "kind": "Method",
    "detail": "Function (} EIGEN_DEVICE_FUNC EIGEN_STRONG_INLINE Scalar&)",
    "insertText": "coeffRef(Index index)"
  },
  {
    "label": "run()",
    "kind": "Method",
    "detail": "Function (} } ; namespace internal { template<int Alignment,Derived,bool JustReturnZero> struct first_aligned_impl { EIGEN_CONSTEXPR Index)",
    "insertText": "run(const Derived&)"
  },
  {
    "label": "first_aligned()",
    "kind": "Method",
    "detail": "Function (} } ; template<int Alignment,Derived> Index)",
    "insertText": "first_aligned(const DenseBase<Derived>& m)"
  },
  {
    "label": "ReturnZero()",
    "kind": "Method",
    "detail": "Function (enum {)",
    "insertText": "ReturnZero(int(evaluator<Derived>::Alignment) >= Alignment) || !(Derived::Flags & DirectAccessBit)"
  },
  {
    "label": "first_default_aligned()",
    "kind": "Method",
    "detail": "Function (} template<Derived> Index)",
    "insertText": "first_default_aligned(const DenseBase<Derived>& m)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (typedef Derived::Scalar Scalar ; typedef packet_traits<Scalar>::type DefaultPacketType ; return internal::first_aligned<)",
    "insertText": "int(unpacket_traits<DefaultPacketType>::alignment),Derived>(m)"
  }
]