[
  {
    "label": "UnicodeFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnicodeFilter"
  },
  {
    "label": "UnicodeSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnicodeSet"
  },
  {
    "label": "TransliteratorParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransliteratorParser"
  },
  {
    "label": "NormalizationTransliterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NormalizationTransliterator"
  },
  {
    "label": "TransliteratorIDParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransliteratorIDParser"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "TransliteratorParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransliteratorParser"
  },
  {
    "label": "TransliteratorIDParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransliteratorIDParser"
  },
  {
    "label": "TransliteratorAlias",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TransliteratorAlias"
  },
  {
    "label": "owns",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "owns"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "Transliterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Transliterator"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "have",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "have"
  },
  {
    "label": "ID",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ID"
  },
  {
    "label": "IDs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDs"
  },
  {
    "label": "integerToken()",
    "kind": "Method",
    "detail": "Function (Token)",
    "insertText": "integerToken(int32_t)"
  },
  {
    "label": "pointerToken()",
    "kind": "Method",
    "detail": "Function (Token)",
    "insertText": "pointerToken(void*)"
  },
  {
    "label": "setMaximumContextLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMaximumContextLength(int32_t maxContextLength)"
  },
  {
    "label": "getDisplayName()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getDisplayName(const UnicodeString& ID,\n                                         UnicodeString& result)"
  },
  {
    "label": "getDisplayName()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getDisplayName(const UnicodeString& ID,\n                                         const Locale& inLocale,\n                                         UnicodeString& result)"
  },
  {
    "label": "adoptFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "adoptFilter(UnicodeFilter* adoptedFilter)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(const UnicodeString& ID,\n                                          UTransDirection dir,\n                                          UParseError& parseError,\n                                          UErrorCode& status)"
  },
  {
    "label": "createInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createInstance(const UnicodeString& ID,\n                                          UTransDirection dir,\n                                          UErrorCode& status)"
  },
  {
    "label": "createFromRules()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "createFromRules(const UnicodeString& ID,\n                                           const UnicodeString& rules,\n                                           UTransDirection dir,\n                                           UParseError& parseError,\n                                           UErrorCode& status)"
  },
  {
    "label": "registerFactory()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "registerFactory(const UnicodeString& id,\n                                Factory factory,\n                                Token context)"
  },
  {
    "label": "registerInstance()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "registerInstance(Transliterator* adoptedObj)"
  },
  {
    "label": "registerAlias()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "registerAlias(const UnicodeString& aliasID,\n                                         const UnicodeString& realID)"
  },
  {
    "label": "_registerFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_registerFactory(const UnicodeString& id,\n                                 Factory factory,\n                                 Token context)"
  },
  {
    "label": "_registerInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_registerInstance(Transliterator* adoptedObj)"
  },
  {
    "label": "_registerAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_registerAlias(const UnicodeString& aliasID, const UnicodeString& realID)"
  },
  {
    "label": "_registerSpecialInverse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "_registerSpecialInverse(const UnicodeString& target,\n                                        const UnicodeString& inverseTarget,\n                                        UBool bidirectional)"
  },
  {
    "label": "unregister()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "unregister(const UnicodeString& ID)"
  },
  {
    "label": "getAvailableIDs()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableIDs(UErrorCode& ec)"
  },
  {
    "label": "countAvailableSources()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "countAvailableSources(void)"
  },
  {
    "label": "getAvailableSource()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableSource(int32_t index,\n                                             UnicodeString& result)"
  },
  {
    "label": "countAvailableTargets()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "countAvailableTargets(const UnicodeString& source)"
  },
  {
    "label": "getAvailableTarget()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableTarget(int32_t index,\n                                             const UnicodeString& source,\n                                             UnicodeString& result)"
  },
  {
    "label": "countAvailableVariants()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "countAvailableVariants(const UnicodeString& source,\n                                          const UnicodeString& target)"
  },
  {
    "label": "getAvailableVariant()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableVariant(int32_t index,\n                                              const UnicodeString& source,\n                                              const UnicodeString& target,\n                                              UnicodeString& result)"
  },
  {
    "label": "_countAvailableSources()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_countAvailableSources(void)"
  },
  {
    "label": "_countAvailableTargets()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_countAvailableTargets(const UnicodeString& source)"
  },
  {
    "label": "_countAvailableVariants()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "_countAvailableVariants(const UnicodeString& source,\n                                           const UnicodeString& target)"
  },
  {
    "label": "setID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setID(const UnicodeString& id)"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "initializeRegistry()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "initializeRegistry(UErrorCode &status)"
  },
  {
    "label": "countAvailableIDs()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "countAvailableIDs(void)"
  },
  {
    "label": "getAvailableID()",
    "kind": "Method",
    "detail": "Function (U_EXPORT2)",
    "insertText": "getAvailableID(int32_t index)"
  }
]