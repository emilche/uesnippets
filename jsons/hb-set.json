[
  {
    "label": "hb_set_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hb_set_t"
  },
  {
    "label": "hb_set_destroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_destroy(hb_set_t *set)"
  },
  {
    "label": "hb_set_set_user_data()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_set_user_data(hb_set_t           *set,\n\t\t      hb_user_data_key_t *key,\n\t\t      void *              data,\n\t\t      hb_destroy_func_t   destroy,\n\t\t      hb_bool_t           replace)"
  },
  {
    "label": "hb_set_allocation_successful()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_allocation_successful(const hb_set_t *set)"
  },
  {
    "label": "hb_set_clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_clear(hb_set_t *set)"
  },
  {
    "label": "hb_set_is_empty()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_is_empty(const hb_set_t *set)"
  },
  {
    "label": "hb_set_has()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_has(const hb_set_t *set,\n\t    hb_codepoint_t  codepoint)"
  },
  {
    "label": "hb_set_add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_add(hb_set_t       *set,\n\t    hb_codepoint_t  codepoint)"
  },
  {
    "label": "hb_set_add_range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_add_range(hb_set_t       *set,\n\t\t  hb_codepoint_t  first,\n\t\t  hb_codepoint_t  last)"
  },
  {
    "label": "hb_set_del()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_del(hb_set_t       *set,\n\t    hb_codepoint_t  codepoint)"
  },
  {
    "label": "hb_set_del_range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_del_range(hb_set_t       *set,\n\t\t  hb_codepoint_t  first,\n\t\t  hb_codepoint_t  last)"
  },
  {
    "label": "hb_set_is_equal()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_is_equal(const hb_set_t *set,\n\t\t const hb_set_t *other)"
  },
  {
    "label": "hb_set_is_subset()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_is_subset(const hb_set_t *set,\n\t\t  const hb_set_t *larger_set)"
  },
  {
    "label": "hb_set_set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_set(hb_set_t       *set,\n\t    const hb_set_t *other)"
  },
  {
    "label": "hb_set_union()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_union(hb_set_t       *set,\n\t      const hb_set_t *other)"
  },
  {
    "label": "hb_set_intersect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_intersect(hb_set_t       *set,\n\t\t  const hb_set_t *other)"
  },
  {
    "label": "hb_set_subtract()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_subtract(hb_set_t       *set,\n\t\t const hb_set_t *other)"
  },
  {
    "label": "hb_set_symmetric_difference()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "hb_set_symmetric_difference(hb_set_t       *set,\n\t\t\t     const hb_set_t *other)"
  },
  {
    "label": "hb_set_get_population()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "hb_set_get_population(const hb_set_t *set)"
  },
  {
    "label": "hb_set_get_min()",
    "kind": "Method",
    "detail": "Function (hb_codepoint_t)",
    "insertText": "hb_set_get_min(const hb_set_t *set)"
  },
  {
    "label": "hb_set_get_max()",
    "kind": "Method",
    "detail": "Function (hb_codepoint_t)",
    "insertText": "hb_set_get_max(const hb_set_t *set)"
  },
  {
    "label": "hb_set_next()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_next(const hb_set_t *set,\n\t     hb_codepoint_t *codepoint)"
  },
  {
    "label": "hb_set_previous()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_previous(const hb_set_t *set,\n\t\t hb_codepoint_t *codepoint)"
  },
  {
    "label": "hb_set_next_range()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_next_range(const hb_set_t *set,\n\t\t   hb_codepoint_t *first,\n\t\t   hb_codepoint_t *last)"
  },
  {
    "label": "hb_set_previous_range()",
    "kind": "Method",
    "detail": "Function (hb_bool_t)",
    "insertText": "hb_set_previous_range(const hb_set_t *set,\n\t\t       hb_codepoint_t *first,\n\t\t       hb_codepoint_t *last)"
  }
]