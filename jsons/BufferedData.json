[
  {
    "label": "TBufferedData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TBufferedData"
  },
  {
    "label": "TChaosReadWriteResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TChaosReadWriteResource"
  },
  {
    "label": "TBufferedData()",
    "kind": "Method",
    "detail": "Function (# pragma once namespace Chaos { template<DataType> class TBufferedData { public :)",
    "insertText": "TBufferedData() : SyncCounter(0) , BufferIndex(0)"
  },
  {
    "label": "Flip()",
    "kind": "Method",
    "detail": "Function (DataSyncCounts [ 0 ] = 0 ; DataSyncCounts [ 1 ] = 0 ; } void)",
    "insertText": "Flip()"
  },
  {
    "label": "Store()",
    "kind": "Method",
    "detail": "Function (BufferIndex .)",
    "insertText": "Store(GetGameDataIndex())"
  },
  {
    "label": "GetGameDataForRead()",
    "kind": "Method",
    "detail": "Function (} const DataType&)",
    "insertText": "GetGameDataForRead()"
  },
  {
    "label": "GetPhysicsDataForRead()",
    "kind": "Method",
    "detail": "Function (} const DataType&)",
    "insertText": "GetPhysicsDataForRead()"
  },
  {
    "label": "GetGameDataSyncCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetGameDataSyncCount()"
  },
  {
    "label": "GetPhysicsDataSyncCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetPhysicsDataSyncCount()"
  },
  {
    "label": "GetGameDataForWrite()",
    "kind": "Method",
    "detail": "Function (} DataType&)",
    "insertText": "GetGameDataForWrite()"
  },
  {
    "label": "GetPhysicsDataForWrite()",
    "kind": "Method",
    "detail": "Function (} DataType&)",
    "insertText": "GetPhysicsDataForWrite()"
  },
  {
    "label": "GetPhysicsDataIndex()",
    "kind": "Method",
    "detail": "Function (int32 DataIndex =)",
    "insertText": "GetPhysicsDataIndex()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (DataSyncCounts [ DataIndex ] = + + SyncCounter ; return Data [ DataIndex ] ; } DataType&)",
    "insertText": "Get(int32 InIndex)"
  },
  {
    "label": "GetGameDataIndex()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetGameDataIndex()"
  },
  {
    "label": "TChaosReadWriteResource()",
    "kind": "Method",
    "detail": "Function (} uint32 SyncCounter ; uint32 DataSyncCounts [ 2 ] ; TAtomic<int32> BufferIndex ; DataType Data [ 2 ] ; } ; template<ResourceType> class TChaosReadWriteResource { public : template<. . . ArgTypes>)",
    "insertText": "TChaosReadWriteResource(EInPlace, ArgTypes&&... Args) : ResourceLock()"
  },
  {
    "label": "ArgTypes()",
    "kind": "Method",
    "detail": "Function ({ Args . . . },{ Forward<)",
    "insertText": "ArgTypes(Args)...}} , ReadIndex(0)"
  },
  {
    "label": "Swap()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Swap()"
  },
  {
    "label": "WriteLock()",
    "kind": "Method",
    "detail": "Function (ResourceLock .)",
    "insertText": "WriteLock()"
  },
  {
    "label": "ReadIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadIndex(ReadIndex + 1)"
  },
  {
    "label": "WriteUnlock()",
    "kind": "Method",
    "detail": "Function (ResourceLock .)",
    "insertText": "WriteUnlock()"
  },
  {
    "label": "GetRead()",
    "kind": "Method",
    "detail": "Function (} const ResourceType&)",
    "insertText": "GetRead()"
  },
  {
    "label": "ReadLock()",
    "kind": "Method",
    "detail": "Function (ResourceLock .)",
    "insertText": "ReadLock()"
  },
  {
    "label": "ReadUnlock()",
    "kind": "Method",
    "detail": "Function (ResourceLock .)",
    "insertText": "ReadUnlock()"
  },
  {
    "label": "GetWritable()",
    "kind": "Method",
    "detail": "Function (} ResourceType&)",
    "insertText": "GetWritable()"
  },
  {
    "label": "GetReadable()",
    "kind": "Method",
    "detail": "Function (} const ResourceType&)",
    "insertText": "GetReadable()"
  }
]