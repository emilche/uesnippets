[
  {
    "label": "FPBDRigidSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidSpringConstraints"
  },
  {
    "label": "FPBDRigidSpringConstraintHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDRigidSpringConstraintHandle"
  },
  {
    "label": "FSpringSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSpringSettings"
  },
  {
    "label": "FPBDRigidSpringConstraintHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Array . h \" # include \" Chaos / Evolution / IndexedConstraintContainer . h \" # include \" Chaos / ParticleHandle . h \" namespace Chaos { class FPBDRigidSpringConstraints ; class FPBDRigidSpringConstraintHandle final : public TIndexedContainerConstraintHandle<FPBDRigidSpringConstraints> { public : using Base = TIndexedContainerConstraintHandle<FPBDRigidSpringConstraints> ; using FConstraintContainer = FPBDRigidSpringConstraints ; using FGeometryParticleHandle = TGeometryParticleHandle<FReal,3> ;)",
    "insertText": "FPBDRigidSpringConstraintHandle()"
  },
  {
    "label": "FPBDRigidSpringConstraintHandle()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FPBDRigidSpringConstraintHandle(FConstraintContainer* InConstraintContainer, int32 InConstraintIndex) : TIndexedContainerConstraintHandle<FPBDRigidSpringConstraints>(InConstraintContainer, InConstraintIndex)"
  },
  {
    "label": "GetConstraintPositions()",
    "kind": "Method",
    "detail": "Function (} const TVector<FVec3,2>&)",
    "insertText": "GetConstraintPositions()"
  },
  {
    "label": "SetConstraintPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConstraintPositions(const TVector<FVec3, 2>& ConstraintPositions)"
  },
  {
    "label": "GetConstrainedParticles()",
    "kind": "Method",
    "detail": "Function (FParticlePair)",
    "insertText": "GetConstrainedParticles()"
  },
  {
    "label": "GetRestLength()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetRestLength()"
  },
  {
    "label": "SetRestLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRestLength(const FReal SpringLength)"
  },
  {
    "label": "StaticType()",
    "kind": "Method",
    "detail": "Function (const FConstraintHandleTypeID&)",
    "insertText": "StaticType()"
  },
  {
    "label": "STypeID()",
    "kind": "Method",
    "detail": "Function (FConstraintHandleTypeID)",
    "insertText": "STypeID(TEXT(\"FRigidSpringConstraintHandle\"), &FIndexedConstraintHandle::StaticType())"
  },
  {
    "label": "FPBDRigidSpringConstraints()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPBDRigidSpringConstraints()"
  },
  {
    "label": "NumConstraints()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "NumConstraints()"
  },
  {
    "label": "AddConstraint()",
    "kind": "Method",
    "detail": "Function (} FConstraintContainerHandle*)",
    "insertText": "AddConstraint(const FConstrainedParticlePair& InConstrainedParticles, const TVector<FVec3, 2>& InLocations, FReal Stiffness, FReal Damping, FReal RestLength)"
  },
  {
    "label": "RemoveConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConstraint(int ConstraintIndex)"
  },
  {
    "label": "DisableConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableConstraints(const TSet<TGeometryParticleHandle<FReal, 3>*>& RemovedParticles)"
  },
  {
    "label": "GetConstraintHandles()",
    "kind": "Method",
    "detail": "Function (} FHandles&)",
    "insertText": "GetConstraintHandles()"
  },
  {
    "label": "GetRestLength()",
    "kind": "Method",
    "detail": "Function (Distances [ ConstraintIndex ] = ConstraintPositions ; } FReal)",
    "insertText": "GetRestLength(int32 ConstraintIndex)"
  },
  {
    "label": "GetNumConstraints()",
    "kind": "Method",
    "detail": "Function (SpringSettings [ ConstraintIndex ] . RestLength = SpringLength ; } int32)",
    "insertText": "GetNumConstraints()"
  },
  {
    "label": "ResetConstraints()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetConstraints()"
  },
  {
    "label": "AddConstraintsToGraph()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddConstraintsToGraph(Private::FPBDIslandManager& IslandManager)"
  },
  {
    "label": "PrepareTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareTick()"
  },
  {
    "label": "UnprepareTick()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UnprepareTick()"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBodies(FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ScatterOutput(const FReal Dt)"
  },
  {
    "label": "ApplyPositionConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyVelocityConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyProjectionConstraints()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplyProjectionConstraints(const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddBodies(const TArrayView<int32>& ConstraintIndices, FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "GatherInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherInput(const TArrayView<int32>& ConstraintIndices, const FReal Dt)"
  },
  {
    "label": "ScatterOutput()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ScatterOutput(const TArrayView<int32>& ConstraintIndices, const FReal Dt)"
  },
  {
    "label": "ApplyPositionConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionConstraints(const TArrayView<int32>& ConstraintIndices, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyVelocityConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityConstraints(const TArrayView<int32>& ConstraintIndices, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "ApplyProjectionConstraints()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplyProjectionConstraints(const TArrayView<int32>& ConstraintIndices, const FReal Dt, const int32 It, const int32 NumIts)"
  },
  {
    "label": "AddBodies()",
    "kind": "Method",
    "detail": "Function (} protected : using Base::GetConstraintIndex ; using Base::SetConstraintIndex ; private : void)",
    "insertText": "AddBodies(const int32 ConstraintIndex, FSolverBodyContainer& SolverBodyContainer)"
  },
  {
    "label": "ApplyPhase1Single()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPhase1Single(const FReal Dt, int32 ConstraintIndex)"
  },
  {
    "label": "InitDistance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDistance(int32 ConstraintIndex, const FVec3& Location0, const FVec3& Location1)"
  },
  {
    "label": "GetDelta()",
    "kind": "Method",
    "detail": "Function (FVec3)",
    "insertText": "GetDelta(int32 ConstraintIndex, const FVec3& WorldSpaceX1, const FVec3& WorldSpaceX2)"
  }
]