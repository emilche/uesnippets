[
  {
    "label": "split",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "split"
  },
  {
    "label": "Coord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Coord"
  },
  {
    "label": "Coord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Coord"
  },
  {
    "label": "CoordBBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoordBBox"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Iterator"
  },
  {
    "label": "CoordBBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoordBBox"
  },
  {
    "label": "CoordBBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CoordBBox"
  },
  {
    "label": "hash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "hash"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0] + dx, mVec[1] + dy, mVec[2] + dz)"
  },
  {
    "label": "offsetBy()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "offsetBy(n, n, n)"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0] + rhs[0], mVec[1] + rhs[1], mVec[2] + rhs[2])"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0] - rhs[0], mVec[1] - rhs[1], mVec[2] - rhs[2])"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(-mVec[0], -mVec[1], -mVec[2])"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0]>>n, mVec[1]>>n, mVec[2]>>n)"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0]<<n, mVec[1]<<n, mVec[2]<<n)"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0] & n, mVec[1] & n, mVec[2] & n)"
  },
  {
    "label": "Coord()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Coord(mVec[0] | n, mVec[1] | n, mVec[2] | n)"
  },
  {
    "label": "MinIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MinIndex(mVec)"
  },
  {
    "label": "MaxIndex()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MaxIndex(mVec)"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "end()"
  },
  {
    "label": "return()",
    "kind": "Method",
    "detail": "Function (endif)",
    "insertText": "return(mMin[0] > mMax[0] || mMin[1] > mMax[1] || mMin[2] > mMax[2])"
  },
  {
    "label": "CoordBBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CoordBBox(mMin>>n, mMax>>n)"
  },
  {
    "label": "CoordBBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CoordBBox(mMin<<n, mMax<<n)"
  },
  {
    "label": "CoordBBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CoordBBox(mMin & n, mMax & n)"
  },
  {
    "label": "CoordBBox()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "CoordBBox(mMin | n, mMax | n)"
  },
  {
    "label": "result()",
    "kind": "Method",
    "detail": "Function (Coord::ValueType>::type>)",
    "insertText": "result(v0)"
  },
  {
    "label": "result()",
    "kind": "Method",
    "detail": "Function (Coord::ValueType>::type>)",
    "insertText": "result(v0)"
  },
  {
    "label": "result()",
    "kind": "Method",
    "detail": "Function (Coord::ValueType>::type>)",
    "insertText": "result(v0)"
  },
  {
    "label": "result()",
    "kind": "Method",
    "detail": "Function (Coord::ValueType>::type>)",
    "insertText": "result(v0)"
  }
]