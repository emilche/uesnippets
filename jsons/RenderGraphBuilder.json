[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FParallelPassSet",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParallelPassSet"
  },
  {
    "label": "FRHIRenderPassInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHIRenderPassInfo"
  },
  {
    "label": "FRHITrackedAccessInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHITrackedAccessInfo"
  },
  {
    "label": "FRHITransientAliasingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRHITransientAliasingInfo"
  },
  {
    "label": "TStatId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStatId"
  },
  {
    "label": "provided",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "provided"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FAsyncDeleter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncDeleter"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "with"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FExtractedTexture",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtractedTexture"
  },
  {
    "label": "FExtractedBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExtractedBuffer"
  },
  {
    "label": "FCollectResourceOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollectResourceOp"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCollectResourceContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollectResourceContext"
  },
  {
    "label": "FAsyncSetupOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncSetupOp"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAsyncSetupQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncSetupQueue"
  },
  {
    "label": "FParallelExecute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParallelExecute"
  },
  {
    "label": "FUploadedBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUploadedBuffer"
  },
  {
    "label": "FAuxiliaryPass",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAuxiliaryPass"
  },
  {
    "label": "FRDGAsyncComputeBudgetScopeGuard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGAsyncComputeBudgetScopeGuard"
  },
  {
    "label": "FRDGAsyncComputeBudgetScopeGuard",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGAsyncComputeBudgetScopeGuard"
  },
  {
    "label": "FRHITransientBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHITransientBuffer"
  },
  {
    "label": "FRHITransientTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHITransientTexture"
  },
  {
    "label": "FShaderParametersMetadata",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShaderParametersMetadata"
  },
  {
    "label": "IRHICommandContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRHICommandContext"
  },
  {
    "label": "IRHITransientResourceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IRHITransientResourceAllocator"
  },
  {
    "label": "FRDGBuilder()",
    "kind": "Method",
    "detail": "Function (RENDERCORE_API)",
    "insertText": "FRDGBuilder(FRHICommandListImmediate& RHICmdList, FRDGEventName Name = {}, ERDGBuilderFlags Flags = ERDGBuilderFlags::None)"
  },
  {
    "label": "RegisterExternalTexture()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "RegisterExternalTexture(\n\t\tconst TRefCountPtr<IPooledRenderTarget>& ExternalPooledTexture,\n\t\tERDGTextureFlags Flags = ERDGTextureFlags::None)"
  },
  {
    "label": "RegisterExternalTexture()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "RegisterExternalTexture(\n\t\tconst TRefCountPtr<IPooledRenderTarget>& ExternalPooledTexture,\n\t\tconst TCHAR* NameIfNotRegistered,\n\t\tERDGTextureFlags Flags = ERDGTextureFlags::None)"
  },
  {
    "label": "RegisterExternalBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "RegisterExternalBuffer(const TRefCountPtr<FRDGPooledBuffer>& ExternalPooledBuffer, ERDGBufferFlags Flags = ERDGBufferFlags::None)"
  },
  {
    "label": "RegisterExternalBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "RegisterExternalBuffer(const TRefCountPtr<FRDGPooledBuffer>& ExternalPooledBuffer, ERDGBufferFlags Flags, ERHIAccess AccessFinal)"
  },
  {
    "label": "RegisterExternalBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "RegisterExternalBuffer(\n\t\tconst TRefCountPtr<FRDGPooledBuffer>& ExternalPooledBuffer,\n\t\tconst TCHAR* NameIfNotRegistered,\n\t\tERDGBufferFlags Flags = ERDGBufferFlags::None)"
  },
  {
    "label": "CreateTexture()",
    "kind": "Method",
    "detail": "Function (FRDGTextureRef)",
    "insertText": "CreateTexture(const FRDGTextureDesc& Desc, const TCHAR* Name, ERDGTextureFlags Flags = ERDGTextureFlags::None)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "CreateBuffer(const FRDGBufferDesc& Desc, const TCHAR* Name, ERDGBufferFlags Flags = ERDGBufferFlags::None)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (FRDGBufferRef)",
    "insertText": "CreateBuffer(const FRDGBufferDesc& Desc, const TCHAR* Name, FRDGBufferNumElementsCallback&& NumElementsCallback, ERDGBufferFlags Flags = ERDGBufferFlags::None)"
  },
  {
    "label": "CreateSRV()",
    "kind": "Method",
    "detail": "Function (FRDGTextureSRVRef)",
    "insertText": "CreateSRV(const FRDGTextureSRVDesc& Desc)"
  },
  {
    "label": "CreateSRV()",
    "kind": "Method",
    "detail": "Function (FRDGBufferSRVRef)",
    "insertText": "CreateSRV(const FRDGBufferSRVDesc& Desc)"
  },
  {
    "label": "CreateUAV()",
    "kind": "Method",
    "detail": "Function (FRDGTextureUAVRef)",
    "insertText": "CreateUAV(const FRDGTextureUAVDesc& Desc, ERDGUnorderedAccessViewFlags Flags = ERDGUnorderedAccessViewFlags::None)"
  },
  {
    "label": "CreateUAV()",
    "kind": "Method",
    "detail": "Function (FRDGBufferUAVRef)",
    "insertText": "CreateUAV(const FRDGBufferUAVDesc& Desc, ERDGUnorderedAccessViewFlags Flags = ERDGUnorderedAccessViewFlags::None)"
  },
  {
    "label": "CreateUniformBuffer()",
    "kind": "Method",
    "detail": "Function (TRDGUniformBufferRef<ParameterStructType>)",
    "insertText": "CreateUniformBuffer(const ParameterStructType* ParameterStruct)"
  },
  {
    "label": "AllocPODArrayView()",
    "kind": "Method",
    "detail": "Function (TArrayView<PODType>)",
    "insertText": "AllocPODArrayView(uint32 Count)"
  },
  {
    "label": "AllocParameters()",
    "kind": "Method",
    "detail": "Function (TStridedView<BaseParameterStructType>)",
    "insertText": "AllocParameters(const FShaderParametersMetadata* ParametersMetadata, uint32 NumStructs)"
  },
  {
    "label": "AddPass()",
    "kind": "Method",
    "detail": "Function (FRDGPassRef)",
    "insertText": "AddPass(FRDGEventName&& Name, const ParameterStructType* ParameterStruct, ERDGPassFlags Flags, ExecuteLambdaType&& ExecuteLambda)"
  },
  {
    "label": "AddPass()",
    "kind": "Method",
    "detail": "Function (FRDGPassRef)",
    "insertText": "AddPass(FRDGEventName&& Name, const FShaderParametersMetadata* ParametersMetadata, const void* ParameterStruct, ERDGPassFlags Flags, ExecuteLambdaType&& ExecuteLambda)"
  },
  {
    "label": "AddPass()",
    "kind": "Method",
    "detail": "Function (FRDGPassRef)",
    "insertText": "AddPass(FRDGEventName&& Name, ERDGPassFlags Flags, ExecuteLambdaType&& ExecuteLambda)"
  },
  {
    "label": "AddDispatchPass()",
    "kind": "Method",
    "detail": "Function (FRDGPassRef)",
    "insertText": "AddDispatchPass(FRDGEventName&& Name, const ParameterStructType* ParameterStruct, ERDGPassFlags Flags, LaunchLambdaType&& LaunchLambda)"
  },
  {
    "label": "SetPassWorkload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPassWorkload(FRDGPass* Pass, uint32 Workload)"
  },
  {
    "label": "AddPassDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPassDependency(FRDGPass* Producer, FRDGPass* Consumer)"
  },
  {
    "label": "AddDispatchHint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDispatchHint()"
  },
  {
    "label": "AddSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddSetupTask(TaskLambda&& Task, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddSetupTask(TaskLambda&& Task, UE::Tasks::ETaskPriority Priority, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddSetupTask(TaskLambda&& Task, UE::Tasks::FPipe* Pipe, UE::Tasks::ETaskPriority Priority = UE::Tasks::ETaskPriority::Normal, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddSetupTask(TaskLambda&& Task, PrerequisitesCollectionType&& Prerequisites, UE::Tasks::ETaskPriority Priority = UE::Tasks::ETaskPriority::Normal, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddSetupTask(TaskLambda&& Task, UE::Tasks::FPipe* Pipe, PrerequisitesCollectionType&& Prerequisites, UE::Tasks::ETaskPriority Priority = UE::Tasks::ETaskPriority::Normal, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddCommandListSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddCommandListSetupTask(TaskLambda&& Task, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddCommandListSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddCommandListSetupTask(TaskLambda&& Task, UE::Tasks::ETaskPriority Priority, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddCommandListSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddCommandListSetupTask(TaskLambda&& Task, UE::Tasks::FPipe* Pipe, UE::Tasks::ETaskPriority Priority = UE::Tasks::ETaskPriority::Normal, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddCommandListSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddCommandListSetupTask(TaskLambda&& Task, PrerequisitesCollectionType&& Prerequisites, UE::Tasks::ETaskPriority Priority = UE::Tasks::ETaskPriority::Normal, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "AddCommandListSetupTask()",
    "kind": "Method",
    "detail": "Function (UE::Tasks::FTask)",
    "insertText": "AddCommandListSetupTask(TaskLambda&& Task, UE::Tasks::FPipe* Pipe, PrerequisitesCollectionType&& Prerequisites, UE::Tasks::ETaskPriority Priority = UE::Tasks::ETaskPriority::Normal, bool bCondition = true, ERDGSetupTaskWaitPoint WaitPoint = ERDGSetupTaskWaitPoint::Compile)"
  },
  {
    "label": "SetFlushResourcesRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFlushResourcesRHI()"
  },
  {
    "label": "QueueBufferUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferUpload(FRDGBufferRef Buffer, const void* InitialData, uint64 InitialDataSize, ERDGInitialDataFlags InitialDataFlags = ERDGInitialDataFlags::None)"
  },
  {
    "label": "QueueBufferUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferUpload(FRDGBufferRef Buffer, const void* InitialData, uint64 InitialDataSize, FRDGBufferInitialDataFreeCallback&& InitialDataFreeCallback)"
  },
  {
    "label": "QueueBufferUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferUpload(FRDGBufferRef Buffer, FRDGBufferInitialDataFillCallback&& InitialDataFillCallback)"
  },
  {
    "label": "QueueBufferUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferUpload(FRDGBufferRef Buffer, FRDGBufferInitialDataCallback&& InitialDataCallback, FRDGBufferInitialDataSizeCallback&& InitialDataSizeCallback)"
  },
  {
    "label": "QueueBufferUpload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferUpload(FRDGBufferRef Buffer, FRDGBufferInitialDataCallback&& InitialDataCallback, FRDGBufferInitialDataSizeCallback&& InitialDataSizeCallback, FRDGBufferInitialDataFreeCallback&& InitialDataFreeCallback)"
  },
  {
    "label": "QueueCommitReservedBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueCommitReservedBuffer(FRDGBufferRef Buffer, uint64 CommitSizeInBytes)"
  },
  {
    "label": "QueueTextureExtraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueTextureExtraction(FRDGTextureRef Texture, TRefCountPtr<IPooledRenderTarget>* OutPooledTexturePtr, ERDGResourceExtractionFlags Flags = ERDGResourceExtractionFlags::None)"
  },
  {
    "label": "QueueTextureExtraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueTextureExtraction(FRDGTextureRef Texture, TRefCountPtr<IPooledRenderTarget>* OutPooledTexturePtr, ERHIAccess AccessFinal, ERDGResourceExtractionFlags Flags = ERDGResourceExtractionFlags::None)"
  },
  {
    "label": "QueueBufferExtraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferExtraction(FRDGBufferRef Buffer, TRefCountPtr<FRDGPooledBuffer>* OutPooledBufferPtr)"
  },
  {
    "label": "QueueBufferExtraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueBufferExtraction(FRDGBufferRef Buffer, TRefCountPtr<FRDGPooledBuffer>* OutPooledBufferPtr, ERHIAccess AccessFinal)"
  },
  {
    "label": "SetTextureAccessFinal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureAccessFinal(FRDGTextureRef Texture, ERHIAccess Access)"
  },
  {
    "label": "SetBufferAccessFinal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBufferAccessFinal(FRDGBufferRef Buffer, ERHIAccess Access)"
  },
  {
    "label": "UseExternalAccessMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseExternalAccessMode(FRDGViewableResource* Resource, ERHIAccess ReadOnlyAccess, ERHIPipeline Pipelines = ERHIPipeline::Graphics)"
  },
  {
    "label": "UseInternalAccessMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseInternalAccessMode(FRDGViewableResource* Resource)"
  },
  {
    "label": "RemoveUnusedTextureWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedTextureWarning(FRDGTextureRef Texture)"
  },
  {
    "label": "RemoveUnusedBufferWarning()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedBufferWarning(FRDGBufferRef Buffer)"
  },
  {
    "label": "FlushSetupQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushSetupQueue()"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute()"
  },
  {
    "label": "TickPoolElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TickPoolElements()"
  },
  {
    "label": "IsImmediateMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsImmediateMode()"
  },
  {
    "label": "WaitForAsyncDeleteTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForAsyncDeleteTask()"
  },
  {
    "label": "WaitForAsyncExecuteTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForAsyncExecuteTask()"
  },
  {
    "label": "BeginResourceDump()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "BeginResourceDump(const TCHAR* Cmd)"
  },
  {
    "label": "IsDumpingFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDumpingFrame()"
  },
  {
    "label": "OverridePassFlags()",
    "kind": "Method",
    "detail": "Function (ERDGPassFlags)",
    "insertText": "OverridePassFlags(const TCHAR* PassName, ERDGPassFlags Flags)"
  },
  {
    "label": "FRDGPassHandle()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FRDGPassHandle(0)"
  },
  {
    "label": "MarkResourcesAsProduced()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkResourcesAsProduced(FRDGPass* Pass)"
  },
  {
    "label": "SetupPassInternals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPassInternals(FRDGPass* Pass)"
  },
  {
    "label": "SetupPassResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPassResources(FRDGPass* Pass)"
  },
  {
    "label": "SetupPassDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupPassDependencies(FRDGPass* Pass)"
  },
  {
    "label": "Compile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Compile()"
  },
  {
    "label": "CompilePassOps()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompilePassOps(FRDGPass* Pass)"
  },
  {
    "label": "ExecuteSerialPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteSerialPass(FRHIComputeCommandList& RHICmdListPass, FRDGPass* Pass)"
  },
  {
    "label": "ExecutePass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutePass(FRHIComputeCommandList& RHICmdListPass, FRDGPass* Pass)"
  },
  {
    "label": "ExecutePassPrologue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutePassPrologue(FRHIComputeCommandList& RHICmdListPass, FRDGPass* Pass)"
  },
  {
    "label": "ExecutePassEpilogue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutePassEpilogue(FRHIComputeCommandList& RHICmdListPass, FRDGPass* Pass)"
  },
  {
    "label": "PushPreScopes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushPreScopes(FRHIComputeCommandList& RHICmdListPass, FRDGPass* FirstPass)"
  },
  {
    "label": "PushPassScopes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PushPassScopes(FRHIComputeCommandList& RHICmdListPass, FRDGPass* Pass)"
  },
  {
    "label": "PopPassScopes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopPassScopes(FRHIComputeCommandList& RHICmdListPass, FRDGPass* Pass)"
  },
  {
    "label": "PopPreScopes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopPreScopes(FRHIComputeCommandList& RHICmdListPass, FRDGPass* LastPass)"
  },
  {
    "label": "FRDGTextureHandle()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FRDGTextureHandle(ResourceIndex)"
  },
  {
    "label": "FRDGBufferHandle()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FRDGBufferHandle(ResourceIndex)"
  },
  {
    "label": "CollectAllocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectAllocations(FCollectResourceContext& Context, FRDGPass* Pass)"
  },
  {
    "label": "CollectAllocateTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectAllocateTexture(FCollectResourceContext& Context, ERHIPipeline PassPipeline, FRDGPassHandle PassHandle, FRDGTexture* Texture)"
  },
  {
    "label": "CollectAllocateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectAllocateBuffer(FCollectResourceContext& Context, ERHIPipeline PassPipeline, FRDGPassHandle PassHandle, FRDGBuffer* Buffer)"
  },
  {
    "label": "CollectDeallocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectDeallocations(FCollectResourceContext& Context, FRDGPass* Pass)"
  },
  {
    "label": "CollectDeallocateTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectDeallocateTexture(FCollectResourceContext& Context, ERHIPipeline PassPipeline, FRDGPassHandle PassHandle, FRDGTexture* Texture, uint32 ReferenceCount)"
  },
  {
    "label": "CollectDeallocateBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectDeallocateBuffer(FCollectResourceContext& Context, ERHIPipeline PassPipeline, FRDGPassHandle PassHandle, FRDGBuffer* Buffer, uint32 ReferenceCount)"
  },
  {
    "label": "AllocateTransientResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateTransientResources(TConstArrayView<FCollectResourceOp> Ops)"
  },
  {
    "label": "AllocatePooledTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocatePooledTextures(FRHICommandListBase& RHICmdList, TConstArrayView<FCollectResourceOp> Ops)"
  },
  {
    "label": "AllocatePooledBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocatePooledBuffers(FRHICommandListBase& RHICmdList, TConstArrayView<FCollectResourceOp> Ops)"
  },
  {
    "label": "CreateViews()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateViews(FRHICommandListBase& RHICmdList, TConstArrayView<FRDGViewHandle> ViewsToCreate)"
  },
  {
    "label": "CreateUniformBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateUniformBuffers(TConstArrayView<FRDGUniformBufferHandle> UniformBuffersToCreate)"
  },
  {
    "label": "AllocatePooledRenderTargetRHI()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<IPooledRenderTarget>)",
    "insertText": "AllocatePooledRenderTargetRHI(FRHICommandListBase& RHICmdList, FRDGTextureRef Texture)"
  },
  {
    "label": "AllocatePooledBufferRHI()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<FRDGPooledBuffer>)",
    "insertText": "AllocatePooledBufferRHI(FRHICommandListBase& RHICmdList, FRDGBufferRef Buffer)"
  },
  {
    "label": "SetExternalPooledRenderTargetRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalPooledRenderTargetRHI(FRDGTexture* Texture, IPooledRenderTarget* RenderTarget)"
  },
  {
    "label": "SetPooledTextureRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPooledTextureRHI(FRDGTexture* Texture, FRDGPooledTexture* PooledTexture)"
  },
  {
    "label": "SetTransientTextureRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransientTextureRHI(FRDGTexture* Texture, FRHITransientTexture* TransientTexture)"
  },
  {
    "label": "SetDiscardPass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDiscardPass(FRDGTexture* Texture, FRHITransientTexture* TransientTexture)"
  },
  {
    "label": "SetExternalPooledBufferRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExternalPooledBufferRHI(FRDGBuffer* Buffer, const TRefCountPtr<FRDGPooledBuffer>& PooledBuffer)"
  },
  {
    "label": "SetPooledBufferRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPooledBufferRHI(FRDGBuffer* Buffer, FRDGPooledBuffer* PooledBuffer)"
  },
  {
    "label": "SetTransientBufferRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransientBufferRHI(FRDGBuffer* Buffer, FRHITransientBuffer* TransientBuffer)"
  },
  {
    "label": "InitViewRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitViewRHI(FRHICommandListBase& RHICmdList, FRDGView* View)"
  },
  {
    "label": "InitBufferViewRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBufferViewRHI(FRHICommandListBase& RHICmdList, FRDGBufferSRV* SRV)"
  },
  {
    "label": "InitBufferViewRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBufferViewRHI(FRHICommandListBase& RHICmdList, FRDGBufferUAV* UAV)"
  },
  {
    "label": "InitTextureViewRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTextureViewRHI(FRHICommandListBase& RHICmdList, FRDGTextureSRV* SRV)"
  },
  {
    "label": "InitTextureViewRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitTextureViewRHI(FRHICommandListBase& RHICmdList, FRDGTextureUAV* UAV)"
  },
  {
    "label": "CompilePassBarriers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompilePassBarriers()"
  },
  {
    "label": "CollectPassBarriers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPassBarriers()"
  },
  {
    "label": "CollectPassBarriers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectPassBarriers(FRDGPassHandle PassHandle)"
  },
  {
    "label": "CreatePassBarriers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreatePassBarriers()"
  },
  {
    "label": "FinalizeResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeResources()"
  },
  {
    "label": "AddFirstTextureTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFirstTextureTransition(FRDGTextureRef Texture)"
  },
  {
    "label": "AddFirstBufferTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFirstBufferTransition(FRDGBufferRef Buffer)"
  },
  {
    "label": "AddLastTextureTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLastTextureTransition(FRDGTextureRef Texture)"
  },
  {
    "label": "AddLastBufferTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLastBufferTransition(FRDGBufferRef Buffer)"
  },
  {
    "label": "AddTextureTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTextureTransition(\n\t\tFRDGTextureRef Texture,\n\t\tFRDGTextureSubresourceState& StateBefore,\n\t\tFRDGTextureSubresourceState& StateAfter,\n\t\tFilterSubresourceLambdaType&& FilterSubresourceLambda)"
  },
  {
    "label": "AddBufferTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBufferTransition(\n\t\tFRDGBufferRef Buffer,\n\t\tFRDGSubresourceState*& StateBefore,\n\t\tFRDGSubresourceState* StateAfter,\n\t\tFilterSubresourceLambdaType&& FilterSubresourceLambda)"
  },
  {
    "label": "AddTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTransition(\n\t\tFRDGViewableResource* Resource,\n\t\tFRDGSubresourceState StateBefore,\n\t\tFRDGSubresourceState StateAfter,\n\t\tFRDGTransitionInfo TransitionInfo)"
  },
  {
    "label": "AddAliasingTransition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAliasingTransition(\n\t\tFRDGPassHandle BeginPassHandle,\n\t\tFRDGPassHandle EndPassHandle,\n\t\tFRDGViewableResource* Resource,\n\t\tconst FRHITransientAliasingInfo& Info)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (FAsyncSetupOp)",
    "insertText": "Op(EType::SetupPassResources)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (FAsyncSetupOp)",
    "insertText": "Op(EType::CullRootBuffer)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (FAsyncSetupOp)",
    "insertText": "Op(EType::CullRootTexture)"
  },
  {
    "label": "Op()",
    "kind": "Method",
    "detail": "Function (FAsyncSetupOp)",
    "insertText": "Op(EType::ReservedBufferCommit, CommitSizeInBytes)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (UE::TScopeLock)",
    "insertText": "Lock(Mutex)"
  },
  {
    "label": "LaunchAsyncSetupQueueTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LaunchAsyncSetupQueueTask()"
  },
  {
    "label": "ProcessAsyncSetupQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessAsyncSetupQueue()"
  },
  {
    "label": "AddCullingDependency()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddCullingDependency(FRDGProducerStatesByPipeline& LastProducers, const FRDGProducerState& NextState, ERHIPipeline NextPipeline)"
  },
  {
    "label": "AddCullRootBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCullRootBuffer(FRDGBuffer* Buffer)"
  },
  {
    "label": "AddCullRootTexture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCullRootTexture(FRDGTexture* Texture)"
  },
  {
    "label": "AddLastProducersToCullStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLastProducersToCullStack(const FRDGProducerStatesByPipeline& LastProducers)"
  },
  {
    "label": "FlushCullStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushCullStack()"
  },
  {
    "label": "WaitForParallelSetupTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForParallelSetupTasks(ERDGSetupTaskWaitPoint WaitPoint)"
  },
  {
    "label": "SetupParallelExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupParallelExecute(TStaticArray<void*, MAX_NUM_GPUS> const& QueryBatchData)"
  },
  {
    "label": "SetupDispatchPassExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupDispatchPassExecute()"
  },
  {
    "label": "SubmitBufferUploads()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitBufferUploads(FRHICommandListBase& InRHICmdList, UE::Tasks::FTaskEvent* AllocateUploadBuffersTask = nullptr)"
  },
  {
    "label": "FlushAccessModeQueue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushAccessModeQueue()"
  },
  {
    "label": "BeginFlushResourcesRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginFlushResourcesRHI()"
  },
  {
    "label": "EndFlushResourcesRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndFlushResourcesRHI()"
  },
  {
    "label": "SetupAuxiliaryPasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupAuxiliaryPasses(FRDGPass* Pass)"
  },
  {
    "label": "DumpNewGraphBuilder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpNewGraphBuilder()"
  },
  {
    "label": "DumpResourcePassOutputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DumpResourcePassOutputs(const FRDGPass* Pass)"
  },
  {
    "label": "VisualizePassOutputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VisualizePassOutputs(const FRDGPass* Pass)"
  },
  {
    "label": "ClobberPassOutputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClobberPassOutputs(const FRDGPass* Pass)"
  },
  {
    "label": "ForceCopyCrossGPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceCopyCrossGPU()"
  },
  {
    "label": "IF_RDG_ENABLE_TRACE()",
    "kind": "Method",
    "detail": "Function (Tracing)",
    "insertText": "IF_RDG_ENABLE_TRACE(FRDGTrace Trace)"
  }
]