[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "SClippingHorizontalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SClippingHorizontalBox"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Styling / CoreStyle . h \" # include \" Framework / SlateDelegates . h \" # include \" Widgets / SBoxPanel . h \" class FArrangedChildren ; class FPaintArgs ; class FSlateWindowElementList ; class SComboButton ; class SClippingHorizontalBox : public SHorizontalBox { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SClippingHorizontalBox) : _StyleSet(&FCoreStyle::Get()) , _StyleName(NAME_None) , _IsFocusable(true)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FOnGetContent, OnWrapButtonClicked) SLATE_ARGUMENT(const ISlateStyle*, StyleSet) SLATE_ARGUMENT(FName, StyleName) SLATE_ARGUMENT(bool, IsFocusable) SLATE_END_ARGS() virtual int32 OnPaint( const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "AddWrapButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddWrapButton()"
  },
  {
    "label": "GetClippedIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetClippedIndex()"
  },
  {
    "label": "UpdateWrapButtonStatus()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "UpdateWrapButtonStatus(double CurrentTime, float DeltaTime)"
  }
]