[
  {
    "label": "FRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestOwner"
  },
  {
    "label": "FCacheGetChunkRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheGetChunkRequest"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FPageKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPageKey"
  },
  {
    "label": "FStreamingRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingRequest"
  },
  {
    "label": "FStreamingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingManager"
  },
  {
    "label": "FStreamingUpdateTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingUpdateTask"
  },
  {
    "label": "FResourcePrefetch",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResourcePrefetch"
  },
  {
    "label": "FAsyncState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAsyncState"
  },
  {
    "label": "FGPUStreamingRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUStreamingRequest"
  },
  {
    "label": "FPendingPage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPendingPage"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FHeapBuffer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeapBuffer"
  },
  {
    "label": "FVirtualPage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVirtualPage"
  },
  {
    "label": "FNewPageRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNewPageRequest"
  },
  {
    "label": "FRegisteredPage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRegisteredPage"
  },
  {
    "label": "FResidentPage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResidentPage"
  },
  {
    "label": "FRootPageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootPageInfo"
  },
  {
    "label": "FHierarchyDepthManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHierarchyDepthManager"
  },
  {
    "label": "FRingBufferAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRingBufferAllocator"
  },
  {
    "label": "FStreamingPageUploader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingPageUploader"
  },
  {
    "label": "FReadbackManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReadbackManager"
  },
  {
    "label": "FQualityScalingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FQualityScalingManager"
  },
  {
    "label": "FGPUStreamingRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGPUStreamingRequest"
  },
  {
    "label": "FStreamingManager()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FStreamingManager()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Add(FResources* Resources)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FResources* Resources)"
  },
  {
    "label": "BeginAsyncUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginAsyncUpdate(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "EndAsyncUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndAsyncUpdate(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "IsAsyncUpdateInProgress()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAsyncUpdateInProgress()"
  },
  {
    "label": "SubmitFrameStreamingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SubmitFrameStreamingRequests(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(ModifiedResources)"
  },
  {
    "label": "PrefetchResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrefetchResource(const FResources* Resource, uint32 NumFramesUntilRender)"
  },
  {
    "label": "RequestNanitePages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestNanitePages(TArrayView<uint32> RequestData)"
  },
  {
    "label": "GetRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetRequestRecordBuffer(TArray<uint32>& OutRequestData)"
  },
  {
    "label": "SetRequestRecordBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRequestRecordBuffer(uint64 Handle)"
  },
  {
    "label": "AddRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddRequest(uint32 RuntimeResourceID, uint32 PageIndex, uint32 VirtualPageIndex, uint32 Priority)"
  },
  {
    "label": "AddRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddRequest(uint32 RuntimeResourceID, uint32 PageIndex, uint32 Priority)"
  },
  {
    "label": "AddPendingGPURequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingGPURequests()"
  },
  {
    "label": "AddPendingExplicitRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingExplicitRequests()"
  },
  {
    "label": "AddPendingResourcePrefetchRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPendingResourcePrefetchRequests()"
  },
  {
    "label": "AddParentRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParentRequests()"
  },
  {
    "label": "AddParentRegisteredRequestsRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParentRegisteredRequestsRecursive(uint32 RegisteredPageIndex, uint32 Priority)"
  },
  {
    "label": "AddParentNewRequestsRecursive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddParentNewRequestsRecursive(const FResources& Resources, uint32 RuntimeResourceID, uint32 PageIndex, uint32 VirtualPageRangeStart, uint32 Priority)"
  },
  {
    "label": "SelectHighestPriorityPagesAndUpdateLRU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectHighestPriorityPagesAndUpdateLRU(uint32 MaxSelectedPages)"
  },
  {
    "label": "RegisterStreamingPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterStreamingPage(uint32 RegisteredPageIndex, const FPageKey& Key)"
  },
  {
    "label": "UnregisterStreamingPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterStreamingPage(const FPageKey& Key)"
  },
  {
    "label": "MoveToEndOfLRUList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MoveToEndOfLRUList(uint32 RegisteredPageIndex)"
  },
  {
    "label": "CompactLRU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CompactLRU()"
  },
  {
    "label": "VerifyLRU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VerifyLRU()"
  },
  {
    "label": "ApplyFixups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFixups(const FFixupChunk& FixupChunk, const FResources& Resources, bool bIsUninstall)"
  },
  {
    "label": "ArePageDependenciesCommitted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ArePageDependenciesCommitted(uint32 RuntimeResourceID, uint32 DependencyPageStart, uint32 DependencyPageNum)"
  },
  {
    "label": "ProcessNewResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessNewResources(FRDGBuilder& GraphBuilder, FRDGBuffer* ClusterPageDataBuffer)"
  },
  {
    "label": "DetermineReadyPages()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "DetermineReadyPages(uint32& TotalPageSize)"
  },
  {
    "label": "InstallReadyPages()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InstallReadyPages(uint32 NumReadyPages)"
  },
  {
    "label": "UninstallGPUPage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UninstallGPUPage(uint32 GPUPageIndex, bool bApplyFixup)"
  },
  {
    "label": "AddClusterLeafFlagUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddClusterLeafFlagUpdate(uint32 MaxStreamingPages, uint32 GPUPageIndex, uint32 ClusterIndex, uint32 NumClusters, bool bReset, bool bUninstall)"
  },
  {
    "label": "FlushClusterLeafFlagUpdates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushClusterLeafFlagUpdates(FRDGBuilder& GraphBuilder, FRDGBuffer* ClusterPageDataBuffer)"
  },
  {
    "label": "ResetStreamingStateCPU()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetStreamingStateCPU()"
  },
  {
    "label": "UpdatePageConfiguration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePageConfiguration()"
  },
  {
    "label": "AsyncUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AsyncUpdate()"
  },
  {
    "label": "SanityCheckStreamingRequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SanityCheckStreamingRequests(const struct FGPUStreamingRequest* StreamingRequestsPtr, const uint32 NumStreamingRequests)"
  },
  {
    "label": "RecordGPURequests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordGPURequests()"
  },
  {
    "label": "BuildDDCRequest()",
    "kind": "Method",
    "detail": "Function (UE::DerivedData::FCacheGetChunkRequest)",
    "insertText": "BuildDDCRequest(const FResources& Resources, const FPageStreamingState& PageStreamingState, const uint32 PendingPageIndex)"
  },
  {
    "label": "RequestDDCData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestDDCData(TConstArrayView<UE::DerivedData::FCacheGetChunkRequest> DDCRequests)"
  }
]