[
  {
    "label": "NotFnImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NotFnImpl"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FUNCTIONAL_NOT_FN_H_ # define BASE_FUNCTIONAL_NOT_FN_H_ # include<type_traits> # include<utility> # include \" base / functional / invoke . h \" namespace base { namespace internal { template<F> struct NotFnImpl { F f ; template<. . . Args>)",
    "insertText": "decltype(auto) operator()(Args&&... args)"
  },
  {
    "label": "not_fn()",
    "kind": "Method",
    "detail": "Function (} } ; } template<F> internal::NotFnImpl<std::decay_t<F>>)",
    "insertText": "not_fn(F&& f)"
  }
]