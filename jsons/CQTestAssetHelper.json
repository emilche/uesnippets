[
  {
    "label": "FindAssetPackagePathByName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / ARFilter . h \" # include \" AssetRegistry / AssetData . h \" # include \" Misc / Optional . h \" # include \" UObject / Object . h \" # include \" UObject / Class . h \" namespace CQTestAssetHelper { TOptional<FString>)",
    "insertText": "FindAssetPackagePathByName(const FString& Name)"
  },
  {
    "label": "FindAssetPackagePathByName()",
    "kind": "Method",
    "detail": "Function (TOptional<FString>)",
    "insertText": "FindAssetPackagePathByName(const FARFilter& Filter, const FString& Name)"
  },
  {
    "label": "FindAssetsByFilter()",
    "kind": "Method",
    "detail": "Function (TArray<FAssetData>)",
    "insertText": "FindAssetsByFilter(const FARFilter& Filter)"
  },
  {
    "label": "GetBlueprintClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetBlueprintClass(const FString& Name)"
  },
  {
    "label": "GetBlueprintClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetBlueprintClass(const FARFilter& Filter, const FString& Name)"
  },
  {
    "label": "GetBlueprintClasses()",
    "kind": "Method",
    "detail": "Function (TArray<UClass*>)",
    "insertText": "GetBlueprintClasses(const FARFilter& Filter)"
  },
  {
    "label": "FindDataBlueprint()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FindDataBlueprint(const FString& Name)"
  },
  {
    "label": "FindDataBlueprint()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "FindDataBlueprint(const FARFilter& Filter, const FString& Name)"
  },
  {
    "label": "FindDataBlueprints()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*>)",
    "insertText": "FindDataBlueprints(const FARFilter& Filter)"
  }
]