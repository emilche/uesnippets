[
  {
    "label": "FManifoldPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FManifoldPoint"
  },
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "FPBDCollisionSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolver"
  },
  {
    "label": "subject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "subject"
  },
  {
    "label": "FPBDCollisionSolverManifoldPoint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolverManifoldPoint"
  },
  {
    "label": "FPBDCollisionSolver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionSolver"
  },
  {
    "label": "FState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FState"
  },
  {
    "label": "FPBDCollisionSolver()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FPBDCollisionSolver()"
  },
  {
    "label": "InitManifoldPoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitManifoldPoint(\n\t\t\t\tconst int32 PointIndex,\n\t\t\t\tconst FSolverReal Dt,\n\t\t\t\tconst FSolverVec3& InRelativeContactPosition0,\n\t\t\t\tconst FSolverVec3& InRelativeContactPosition1,\n\t\t\t\tconst FSolverVec3& InWorldContactNormal,\n\t\t\t\tconst FSolverVec3& InWorldContactTangentU,\n\t\t\t\tconst FSolverVec3& InWorldContactTangentV,\n\t\t\t\tconst FSolverReal InWorldContactDeltaNormal,\n\t\t\t\tconst FSolverReal InWorldContactDeltaTangentU,\n\t\t\t\tconst FSolverReal InWorldContactDeltaTangentV,\n\t\t\t\tconst FSolverReal InWorldContactVelocityTargetNormal)"
  },
  {
    "label": "FinalizeManifold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeManifold()"
  },
  {
    "label": "SolvePositionNoFriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolvePositionNoFriction(\n\t\t\t\tconst FSolverReal Dt,\n\t\t\t\tconst FSolverReal MaxPushOut)"
  },
  {
    "label": "SolvePositionWithFriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolvePositionWithFriction(\n\t\t\t\tconst FSolverReal Dt,\n\t\t\t\tconst FSolverReal MaxPushOut)"
  },
  {
    "label": "SolveVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveVelocity(\n\t\t\t\tconst FSolverReal Dt,\n\t\t\t\tconst bool bApplyDynamicFriction)"
  },
  {
    "label": "UpdateMass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMass()"
  },
  {
    "label": "UpdateMassNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMassNormal()"
  },
  {
    "label": "CalculatePositionCorrectionNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculatePositionCorrectionNormal(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal ContactDeltaNormal,\n\t\t\t\tconst FSolverReal ContactMassNormal,\n\t\t\t\tconst FSolverReal NetPushOutNormal,\n\t\t\t\tFSolverReal& OutPushOutNormal)"
  },
  {
    "label": "CalculatePositionCorrectionTangent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculatePositionCorrectionTangent(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal ContactDeltaTangent,\n\t\t\t\tconst FSolverReal ContactMassTangent,\n\t\t\t\tconst FSolverReal NetPushOutTangent,\n\t\t\t\tFSolverReal& OutPushOutTangent)"
  },
  {
    "label": "ApplyFrictionCone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyFrictionCone(\n\t\t\t\tconst FSolverReal StaticFriction,\n\t\t\t\tconst FSolverReal DynamicFriction,\n\t\t\t\tconst FSolverReal MaxFrictionPushOut,\n\t\t\t\tFSolverReal& InOutPushOutTangentU,\n\t\t\t\tFSolverReal& InOutPushOutTangentV,\n\t\t\t\tFSolverReal& InOutNetPushOutTangentU,\n\t\t\t\tFSolverReal& InOutNetPushOutTangentV,\n\t\t\t\tFSolverReal& OutStaticFrictionRatio)"
  },
  {
    "label": "ApplyPositionCorrectionTangential()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionCorrectionTangential(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal StaticFriction,\n\t\t\t\tconst FSolverReal DynamicFriction,\n\t\t\t\tconst FSolverReal MaxFrictionPushOut,\n\t\t\t\tconst FSolverReal ContactDeltaTangentU,\n\t\t\t\tconst FSolverReal ContactDeltaTangentV,\n\t\t\t\tFPBDCollisionSolverManifoldPoint& ManifoldPoint)"
  },
  {
    "label": "ApplyPositionCorrectionNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyPositionCorrectionNormal(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal ContactDeltaNormal,\n\t\t\t\tFPBDCollisionSolverManifoldPoint& ManifoldPoint)"
  },
  {
    "label": "ApplySoftPositionCorrectionNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySoftPositionCorrectionNormal(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal ContactDeltaNormal,\n\t\t\t\tconst FSolverReal ContactVelocityNormalDt,\n\t\t\t\tFPBDCollisionSolverManifoldPoint& ManifoldPoint)"
  },
  {
    "label": "ApplyVelocityCorrection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityCorrection(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal Dt,\n\t\t\t\tconst FSolverReal DynamicFriction,\n\t\t\t\tconst FSolverReal ContactVelocityDeltaNormal,\n\t\t\t\tconst FSolverReal ContactVelocityDeltaTangent0,\n\t\t\t\tconst FSolverReal ContactVelocityDeltaTangent1,\n\t\t\t\tconst FSolverReal MinImpulseNormal,\n\t\t\t\tFPBDCollisionSolverManifoldPoint& ManifoldPoint)"
  },
  {
    "label": "ApplyVelocityCorrectionNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyVelocityCorrectionNormal(\n\t\t\t\tconst FSolverReal Stiffness,\n\t\t\t\tconst FSolverReal ContactVelocityDeltaNormal,\n\t\t\t\tconst FSolverReal MinImpulseNormal,\n\t\t\t\tFPBDCollisionSolverManifoldPoint& ManifoldPoint)"
  },
  {
    "label": "SolveVelocityAverage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SolveVelocityAverage(const FSolverReal Dt)"
  },
  {
    "label": "CalculatePositionCorrectionTangent()",
    "kind": "Method",
    "detail": "Function (Out)",
    "insertText": "CalculatePositionCorrectionTangent(\n\t\t\t\tStiffness,\n\t\t\t\tContactDeltaTangentV,\n\t\t\t\tManifoldPoint.ContactMassTangentV,\n\t\t\t\tManifoldPoint.NetPushOutTangentV,\n\t\t\t\tPushOutTangentV)"
  },
  {
    "label": "ApplyFrictionCone()",
    "kind": "Method",
    "detail": "Function (V)",
    "insertText": "ApplyFrictionCone(\n\t\t\t\tStaticFriction,\n\t\t\t\tDynamicFriction,\n\t\t\t\tMaxFrictionPushOut,\n\t\t\t\tPushOutTangentU,\t\t\t\t\t\t\t\t\t// InOut\n\t\t\t\tPushOutTangentV,\t\t\t\t\t\t\t\t\t// InOut\n\t\t\t\tManifoldPoint.NetPushOutTangentU,\t\t\t\t\t// InOut\n\t\t\t\tManifoldPoint.NetPushOutTangentV,\t\t\t\t\t// InOut\n\t\t\t\tManifoldPoint.StaticFrictionRatio)"
  },
  {
    "label": "SolvePositionNoFriction()",
    "kind": "Method",
    "detail": "Function (point)",
    "insertText": "SolvePositionNoFriction(Dt, MaxPushOut)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (separation)",
    "insertText": "for(int32 PointIndex = 0; PointIndex < NumManifoldPoints()"
  }
]