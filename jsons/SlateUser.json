[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "ICursor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICursor"
  },
  {
    "label": "FDragDropOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropOperation"
  },
  {
    "label": "FMenuStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuStack"
  },
  {
    "label": "FNavigationConfig",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNavigationConfig"
  },
  {
    "label": "FSlateVirtualUserHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateVirtualUserHandle"
  },
  {
    "label": "FSlateUser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateUser"
  },
  {
    "label": "FDragDetectionState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDragDetectionState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FActiveTooltipInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActiveTooltipInfo"
  },
  {
    "label": "FSlateVirtualUserHandle()",
    "kind": "Method",
    "detail": "Function (SLATE_SCOPE:)",
    "insertText": "FSlateVirtualUserHandle(int32 InUserIndex, int32 InVirtualUserIndex)"
  },
  {
    "label": "SetFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetFocus(const TSharedRef<SWidget>& WidgetToFocus, EFocusCause ReasonFocusIsChanging = EFocusCause::SetDirectly)"
  },
  {
    "label": "ClearFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearFocus(EFocusCause ReasonFocusIsChanging = EFocusCause::SetDirectly)"
  },
  {
    "label": "SetCursorCaptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCursorCaptor(TSharedRef<const SWidget> Widget, const FWidgetPath& EventPath)"
  },
  {
    "label": "SetPointerCaptor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetPointerCaptor(uint32 PointerIndex, TSharedRef<const SWidget> Widget, const FWidgetPath& EventPath)"
  },
  {
    "label": "ReleaseAllCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAllCapture()"
  },
  {
    "label": "ReleaseCursorCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCursorCapture()"
  },
  {
    "label": "ReleaseCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseCapture(uint32 PointerIndex)"
  },
  {
    "label": "GetCaptorPaths()",
    "kind": "Method",
    "detail": "Function (TArray<FWidgetPath>)",
    "insertText": "GetCaptorPaths()"
  },
  {
    "label": "GetCursorCaptorPath()",
    "kind": "Method",
    "detail": "Function (FWidgetPath)",
    "insertText": "GetCursorCaptorPath(FWeakWidgetPath::EInterruptedPathHandling::Type InterruptedPathHandling = FWeakWidgetPath::EInterruptedPathHandling::Truncate, const FPointerEvent* PointerEvent = nullptr)"
  },
  {
    "label": "GetCaptorPath()",
    "kind": "Method",
    "detail": "Function (FWidgetPath)",
    "insertText": "GetCaptorPath(uint32 PointerIndex, FWeakWidgetPath::EInterruptedPathHandling::Type InterruptedPathHandling = FWeakWidgetPath::EInterruptedPathHandling::Truncate, const FPointerEvent* PointerEvent = nullptr)"
  },
  {
    "label": "SetCursorVisibility()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCursorVisibility(bool bDrawCursor)"
  },
  {
    "label": "SetCursorPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCursorPosition(int32 PosX, int32 PosY)"
  },
  {
    "label": "SetCursorPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCursorPosition(const UE::Slate::FDeprecateVector2DParameter& NewCursorPos)"
  },
  {
    "label": "SetPointerPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPointerPosition(uint32 PointerIndex, int32 PosX, int32 PosY)"
  },
  {
    "label": "SetPointerPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPointerPosition(uint32 PointerIndex, const UE::Slate::FDeprecateVector2DParameter& NewPointerPos)"
  },
  {
    "label": "CancelDragDrop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelDragDrop()"
  },
  {
    "label": "ShowTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowTooltip(const TSharedRef<IToolTip>& InTooltip, const UE::Slate::FDeprecateVector2DParameter& InSpawnLocation)"
  },
  {
    "label": "CloseTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseTooltip()"
  },
  {
    "label": "SetUserNavigationConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUserNavigationConfig(TSharedPtr<FNavigationConfig> InNavigationConfig)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSlateUser>)",
    "insertText": "Create(int32 InUserIndex, TSharedPtr<ICursor> InCursor)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSlateUser>)",
    "insertText": "Create(FPlatformUserId InPlatformUserId, TSharedPtr<ICursor> InCursor)"
  },
  {
    "label": "DrawWindowlessDragDropContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawWindowlessDragDropContent(const TSharedRef<SWindow>& WindowToDraw, FSlateWindowElementList& WindowElementList, int32& MaxLayerId)"
  },
  {
    "label": "DrawCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawCursor(const TSharedRef<SWindow>& WindowToDraw, FSlateWindowElementList& WindowElementList, int32& MaxLayerId)"
  },
  {
    "label": "QueueSyntheticCursorMove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueSyntheticCursorMove()"
  },
  {
    "label": "SynthesizeCursorMoveIfNeeded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SynthesizeCursorMoveIfNeeded()"
  },
  {
    "label": "LockCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockCursor(const TSharedRef<SWidget>& Widget)"
  },
  {
    "label": "UnlockCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnlockCursor()"
  },
  {
    "label": "UpdateCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCursor()"
  },
  {
    "label": "ProcessCursorReply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessCursorReply(const FCursorReply& CursorReply)"
  },
  {
    "label": "QueryCursor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryCursor()"
  },
  {
    "label": "SetFocusPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFocusPath(const FWidgetPath& NewFocusPath, EFocusCause InFocusCause, bool bInShowFocus)"
  },
  {
    "label": "FinishFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishFrame()"
  },
  {
    "label": "NotifyWindowDestroyed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyWindowDestroyed(TSharedRef<SWindow> DestroyedWindow)"
  },
  {
    "label": "NotifyTouchStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyTouchStarted(const FPointerEvent& TouchEvent)"
  },
  {
    "label": "NotifyPointerMoveBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPointerMoveBegin(const FPointerEvent& PointerEvent)"
  },
  {
    "label": "NotifyPointerMoveComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPointerMoveComplete(const FPointerEvent& PointerEvent, const FWidgetPath& WidgetsUnderPointer)"
  },
  {
    "label": "NotifyPointerReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPointerReleased(const FPointerEvent& PointerEvent, const FWidgetPath& WidgetsUnderCursor, TSharedPtr<FDragDropOperation> DroppedContent, bool bWasHandled)"
  },
  {
    "label": "UpdatePointerPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePointerPosition(const FPointerEvent& PointerEvent)"
  },
  {
    "label": "StartDragDetection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartDragDetection(const FWidgetPath& PathToWidget, int32 PointerIndex, FKey DragButton, UE::Slate::FDeprecateVector2DParameter StartLocation)"
  },
  {
    "label": "DetectDrag()",
    "kind": "Method",
    "detail": "Function (FWidgetPath)",
    "insertText": "DetectDrag(const FPointerEvent& PointerEvent, float DragTriggerDistance)"
  },
  {
    "label": "ResetDragDetection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDragDetection()"
  },
  {
    "label": "SetDragDropContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDragDropContent(TSharedRef<FDragDropOperation> InDragDropContent)"
  },
  {
    "label": "ResetDragDropContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDragDropContent()"
  },
  {
    "label": "UpdateTooltip()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTooltip(const FMenuStack& MenuStack, bool bCanSpawnNewTooltip)"
  },
  {
    "label": "ResetTooltipWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetTooltipWindow()"
  },
  {
    "label": "FSlateUser()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "FSlateUser(int32 InUserIndex, TSharedPtr<ICursor> InCursor)"
  },
  {
    "label": "FSlateUser()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "FSlateUser(FPlatformUserId InPlatformUser, TSharedPtr<ICursor> InCursor)"
  },
  {
    "label": "UpdatePointerPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePointerPosition(uint32 PointerIndex, const FVector2f& Position)"
  },
  {
    "label": "LockCursorInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LockCursorInternal(const FWidgetPath& WidgetPath)"
  },
  {
    "label": "GetOrCreateTooltipWindow()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWindow>)",
    "insertText": "GetOrCreateTooltipWindow()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  }
]