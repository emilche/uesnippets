[
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "VectorLoadAligned()",
    "kind": "Method",
    "detail": "Function (VectorRegister4Float)",
    "insertText": "VectorLoadAligned(const float* Ptr)"
  },
  {
    "label": "VectorLoadAligned()",
    "kind": "Method",
    "detail": "Function (VectorRegister4Double)",
    "insertText": "VectorLoadAligned(const double* Ptr)"
  },
  {
    "label": "VectorStoreAligned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VectorStoreAligned(const VectorRegister4Float& Vec, float* Ptr)"
  },
  {
    "label": "VectorStoreAligned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "VectorStoreAligned(const VectorRegister4Double& Vec, double* Dst)"
  },
  {
    "label": "VectorLoadAligned()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorLoadAligned(V)"
  },
  {
    "label": "VectorLoadAligned()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorLoadAligned(V)"
  },
  {
    "label": "MakeVectorRegister()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegister(X, Y, Z, W)"
  },
  {
    "label": "MakeVectorRegisterFloat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegisterFloat(X, Y, Z, W)"
  },
  {
    "label": "MakeVectorRegister()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegister(X, Y, Z, W)"
  },
  {
    "label": "MakeVectorRegister()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegister(X, Y, Z, W)"
  },
  {
    "label": "VectorRegister4Double()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorRegister4Double(XY, ZW)"
  },
  {
    "label": "MakeVectorRegisterDouble()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegisterDouble(X, Y, Z, W)"
  },
  {
    "label": "VectorRegister4Double()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorRegister4Double(From)"
  },
  {
    "label": "vdupq_n_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdupq_n_f32( 0.0f )"
  },
  {
    "label": "VectorRegister4Double()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorRegister4Double(Zero, Zero)"
  },
  {
    "label": "vdupq_n_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdupq_n_f32( 1.0f )"
  },
  {
    "label": "vld1q_f32_x4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vld1q_f32_x4(Ptr)"
  },
  {
    "label": "MakeVectorRegister()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegister(Ptr[0], Ptr[1], Ptr[0], Ptr[1])"
  },
  {
    "label": "vsetq_lane_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vsetq_lane_f32(Scalar, Vec, ElementIndex)"
  },
  {
    "label": "vsetq_lane_f64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vsetq_lane_f64(Scalar, Vec, ElementIndex)"
  },
  {
    "label": "VectorLoad()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorLoad(Ptr)"
  },
  {
    "label": "VectorLoad()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorLoad(Ptr)"
  },
  {
    "label": "vdupq_n_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdupq_n_f32(Ptr[0])"
  },
  {
    "label": "vcombine_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcombine_f32(Lo, Hi)"
  },
  {
    "label": "vdupq_n_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdupq_n_f32(X)"
  },
  {
    "label": "Floats()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Floats(Vec)"
  },
  {
    "label": "vabsq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vabsq_f32( Vec )"
  },
  {
    "label": "vnegq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vnegq_f32( Vec )"
  },
  {
    "label": "vaddq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vaddq_f32( Vec1, Vec2 )"
  },
  {
    "label": "vsubq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vsubq_f32( Vec1, Vec2 )"
  },
  {
    "label": "vmulq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vmulq_f32( Vec1, Vec2 )"
  },
  {
    "label": "vmulq_f64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vmulq_f64(Vec1, Vec2)"
  },
  {
    "label": "vdivq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdivq_f32(Vec1, Vec2)"
  },
  {
    "label": "vfmaq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vfmaq_f32(Acc, Vec1, Vec2 )"
  },
  {
    "label": "vfmsq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vfmsq_f32(Sub, Vec1, Vec2)"
  },
  {
    "label": "vdupq_lane_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdupq_lane_f32( sum, 0 )"
  },
  {
    "label": "vdupq_lane_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vdupq_lane_f32(sum, 0)"
  },
  {
    "label": "vcombine_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcombine_f32(rL, rH)"
  },
  {
    "label": "__builtin_shufflevector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_shufflevector(Vec, Vec, X, Y, Z, W)"
  },
  {
    "label": "__builtin_shufflevector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_shufflevector(Vec.XY, Vec.XY, X, Y)"
  },
  {
    "label": "__builtin_shufflevector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_shufflevector(Vec.XY, Vec.ZW, X, Y)"
  },
  {
    "label": "__builtin_shufflevector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_shufflevector(Vec.ZW, Vec.XY, X - 2, Y + 2)"
  },
  {
    "label": "__builtin_shufflevector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_shufflevector(Vec.ZW, Vec.ZW, X - 2, Y)"
  },
  {
    "label": "vcombine_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcombine_f32(rL, rH)"
  },
  {
    "label": "__builtin_shufflevector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "__builtin_shufflevector(Vec1, Vec2, X, Y, Z + 4, W + 4)"
  },
  {
    "label": "Values()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Values(Base)"
  },
  {
    "label": "Exponents()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Exponents(Exponent)"
  },
  {
    "label": "vrecpeq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vrecpeq_f32(Vec)"
  },
  {
    "label": "VectorNegateMultiplyAdd()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorNegateMultiplyAdd(Vec, Squared, Double)"
  },
  {
    "label": "VectorDivide()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorDivide(GlobalVectorConstants::DoubleOne, Vec)"
  },
  {
    "label": "vsqrtq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vsqrtq_f32(Vec)"
  },
  {
    "label": "vrsqrteq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vrsqrteq_f32(Vec)"
  },
  {
    "label": "VectorMultiply()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorMultiply(Tmp, RecipSqrt)"
  },
  {
    "label": "VectorSetComponent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSetComponent(Vec, 3, 0.0f)"
  },
  {
    "label": "VectorSetComponent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSetComponent(Vec, 3, 0.0)"
  },
  {
    "label": "VectorSetComponent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSetComponent(Vec, 3, 1.0f)"
  },
  {
    "label": "VectorSetComponent()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSetComponent(Vec, 3, 1.0)"
  },
  {
    "label": "vgetq_lane_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vgetq_lane_f32(Vec, ElementIndex)"
  },
  {
    "label": "vgetq_lane_f64()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vgetq_lane_f64(Vec, ElementIndex)"
  },
  {
    "label": "Floats()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Floats(Vec)"
  },
  {
    "label": "Doubles()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Doubles(Vec)"
  },
  {
    "label": "Vec()",
    "kind": "Method",
    "detail": "Function (VectorRegister4Double)",
    "insertText": "Vec(VecP)"
  },
  {
    "label": "MakeVectorRegisterFloatFromDouble()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MakeVectorRegisterFloatFromDouble(Result)"
  },
  {
    "label": "vminq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vminq_f32( Vec1, Vec2 )"
  },
  {
    "label": "vmaxq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vmaxq_f32( Vec1, Vec2 )"
  },
  {
    "label": "vcvtq_f32_u32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtq_f32_u32(AsUInt32)"
  },
  {
    "label": "vcvtq_f32_s32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtq_f32_s32(AsInt32)"
  },
  {
    "label": "vcvtq_f32_u32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtq_f32_u32(AsUInt32)"
  },
  {
    "label": "vmaxvq_u32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vmaxvq_u32(Mask)"
  },
  {
    "label": "_WriteStatusReg()",
    "kind": "Method",
    "detail": "Function (PLATFORM_WINDOWS)",
    "insertText": "_WriteStatusReg(ARM64_FPCR, ControlStatus)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "Val(X)"
  },
  {
    "label": "Val()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Val(X)"
  },
  {
    "label": "ValX()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "ValX(X)"
  },
  {
    "label": "ValY()",
    "kind": "Method",
    "detail": "Function (AlignedFloat4)",
    "insertText": "ValY(Y)"
  },
  {
    "label": "ValX()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "ValX(X)"
  },
  {
    "label": "ValY()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "ValY(Y)"
  },
  {
    "label": "vrndpq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vrndpq_f32(X)"
  },
  {
    "label": "vrndmq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vrndmq_f32(X)"
  },
  {
    "label": "vrndq_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vrndq_f32(X)"
  },
  {
    "label": "VectorSelect()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSelect(Mask, GlobalVectorConstants::FloatOne, GlobalVectorConstants::FloatMinusOne)"
  },
  {
    "label": "VectorSelect()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSelect(Mask, GlobalVectorConstants::DoubleOne, GlobalVectorConstants::DoubleMinusOne)"
  },
  {
    "label": "VectorSelect()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSelect(Mask, GlobalVectorConstants::FloatOne, GlobalVectorConstants::FloatZero)"
  },
  {
    "label": "VectorSelect()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "VectorSelect(Mask, GlobalVectorConstants::DoubleOne, GlobalVectorConstants::DoubleZero)"
  },
  {
    "label": "Doubles()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Doubles(X)"
  },
  {
    "label": "Doubles()",
    "kind": "Method",
    "detail": "Function (AlignedDouble4)",
    "insertText": "Doubles(X)"
  },
  {
    "label": "vcvtq_f32_u32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtq_f32_u32(UInt32s)"
  },
  {
    "label": "vcvtq_f32_s32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtq_f32_s32(Int32s)"
  },
  {
    "label": "vbslq_s32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vbslq_s32(Mask, Vec1, Vec2)"
  },
  {
    "label": "vcvtq_s32_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtq_s32_f32(A)"
  },
  {
    "label": "vqtbl1q_u8()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vqtbl1q_u8(Vec, Mask)"
  },
  {
    "label": "vcvtnq_s32_f32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "vcvtnq_s32_f32(Vec)"
  }
]