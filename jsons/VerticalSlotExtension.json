[
  {
    "label": "FVerticalSlotExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVerticalSlotExtension"
  },
  {
    "label": "FVerticalSlotExtension()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / Reply . h \" # include \" WidgetReference . h \" # include \" DesignerExtension . h \" class FVerticalSlotExtension : public FDesignerExtension { public :)",
    "insertText": "FVerticalSlotExtension()"
  },
  {
    "label": "CanExtendSelection()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanExtendSelection(const TArray< FWidgetReference >& Selection)"
  },
  {
    "label": "ExtendSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendSelection(const TArray< FWidgetReference >& Selection, TArray< TSharedRef<FDesignerSurfaceElement> >& SurfaceElements)"
  },
  {
    "label": "CanShift()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "CanShift(int32 ShiftAmount)"
  },
  {
    "label": "HandleShiftVertical()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleShiftVertical(int32 ShiftAmount)"
  },
  {
    "label": "ShiftVertical()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShiftVertical(UWidget* Widget, int32 ShiftAmount)"
  }
]