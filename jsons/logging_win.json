[
  {
    "label": "StaticMemorySingletonTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "StaticMemorySingletonTraits"
  },
  {
    "label": "LogEnableMask",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LogEnableMask"
  },
  {
    "label": "LogMessageTypes",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "LogMessageTypes"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "base"
  },
  {
    "label": "LogEventProvider()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_LOGGING_WIN_H_ # define BASE_LOGGING_WIN_H_ # include<stddef . h> # include<string> # include \" base / base_export . h \" # include \" base / logging . h \" # include \" base / win / event_trace_provider . h \" namespace base { template<Type> struct StaticMemorySingletonTraits ; } namespace logging { EXTERN_C BASE_EXPORT const GUID kLogEventId ; enum LogEnableMask { ENABLE_STACK_TRACE_CAPTURE = 0 x0001,ENABLE_LOG_MESSAGE_ONLY = 0 x0002,} ; enum LogMessageTypes { LOG_MESSAGE = 1 0,LOG_MESSAGE_WITH_STACKTRACE = 1 1,LOG_MESSAGE_FULL = 1 2,} ; class BASE_EXPORT LogEventProvider : public base::win::EtwTraceProvider { public :)",
    "insertText": "LogEventProvider(const LogEventProvider&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (LogEventProvider&)",
    "insertText": "operator(const LogEventProvider&)"
  },
  {
    "label": "GetInstance()",
    "kind": "Method",
    "detail": "Function (LogEventProvider*)",
    "insertText": "GetInstance()"
  },
  {
    "label": "LogMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LogMessage(logging::LogSeverity severity, const char* file, int line, size_t message_start, const std::string& str)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const GUID& provider_name)"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "OnEventsEnabled()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnEventsEnabled()"
  },
  {
    "label": "OnEventsDisabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEventsDisabled()"
  },
  {
    "label": "LogEventProvider()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "LogEventProvider()"
  }
]