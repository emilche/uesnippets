[
  {
    "label": "FCascade",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCascade"
  },
  {
    "label": "FCascadeEdPreviewViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCascadeEdPreviewViewportClient"
  },
  {
    "label": "FEditorViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorViewportClient"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SOverlay"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "SCascadePreviewViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCascadePreviewViewport"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Delegates / IDelegateInstance . h \" # include \" SEditorViewport . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class FCascade ; class FCascadeEdPreviewViewportClient ; class FEditorViewportClient ; class FSceneViewport ; class SDockTab ; class SOverlay ; class SViewport ; class SWidget ; struct FGeometry ; class SCascadePreviewViewport : public SEditorViewport { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SCascadePreviewViewport)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TWeakPtr<FCascade>, Cascade) SLATE_END_ARGS() ~SCascadePreviewViewport()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "RefreshViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshViewport()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "GetViewport()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSceneViewport>)",
    "insertText": "GetViewport()"
  },
  {
    "label": "GetViewportClient()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FCascadeEdPreviewViewportClient>)",
    "insertText": "GetViewportClient()"
  },
  {
    "label": "GetViewportWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SViewport>)",
    "insertText": "GetViewportWidget()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "HasJustTicked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasJustTicked()"
  },
  {
    "label": "MakeEditorViewportClient()",
    "kind": "Method",
    "detail": "Function (JustTicked = false ; } protected : TSharedRef<FEditorViewportClient>)",
    "insertText": "MakeEditorViewportClient()"
  },
  {
    "label": "MakeViewportToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "MakeViewportToolbar()"
  },
  {
    "label": "PopulateViewportOverlays()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateViewportOverlays(TSharedRef<SOverlay> Overlay)"
  },
  {
    "label": "OnFocusViewportToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusViewportToSelection()"
  }
]