[
  {
    "label": "APivotTransformGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APivotTransformGizmo"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UUniformScaleGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUniformScaleGizmoHandleGroup"
  },
  {
    "label": "UPivotTranslationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotTranslationGizmoHandleGroup"
  },
  {
    "label": "UPivotScaleGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotScaleGizmoHandleGroup"
  },
  {
    "label": "UPivotPlaneTranslationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotPlaneTranslationGizmoHandleGroup"
  },
  {
    "label": "UPivotRotationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotRotationGizmoHandleGroup"
  },
  {
    "label": "UStretchGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStretchGizmoHandleGroup"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" VIBaseTransformGizmo . h \" # include \" VIGizmoHandle . h \" # include \" VIPivotTransformGizmo . generated . h \")",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: APivotTransformGizmo()"
  },
  {
    "label": "UpdateGizmo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGizmo(const EGizmoHandleTypes InGizmoType, const ECoordSystem InGizmoCoordinateSpace, const FTransform& InLocalToWorld, const FBox& InLocalBounds, const FVector& InViewLocation, const float InScaleMultiplier, bool bInAllHandlesVisible, const bool bInAllowRotationAndScaleHandles, class UActorComponent* DraggingHandle, const TArray<UActorComponent*>& InHoveringOverHandles, const float InGizmoHoverScale, const float InGizmoHoverAnimationDuration)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPivotTranslationGizmoHandleGroup()"
  },
  {
    "label": "UpdateGizmoHandleGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGizmoHandleGroup(const FTransform& LocalToWorld, const FBox& LocalBounds, const FVector ViewLocation, const bool bAllHandlesVisible, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles, float AnimationAlpha, float GizmoScale, const float GizmoHoverScale, const float GizmoHoverAnimationDuration, bool& bOutIsHoveringOrDraggingThisHandleGroup)"
  },
  {
    "label": "GetHandleType()",
    "kind": "Method",
    "detail": "Function (EGizmoHandleTypes)",
    "insertText": "GetHandleType()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPivotScaleGizmoHandleGroup()"
  },
  {
    "label": "SupportsWorldCoordinateSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsWorldCoordinateSpace()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPivotPlaneTranslationGizmoHandleGroup()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPivotRotationGizmoHandleGroup()"
  },
  {
    "label": "UpdateIndicator()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateIndicator(USceneComponent* IndicatorRoot, const FVector& Direction, const uint32 FacingAxisIndex)"
  },
  {
    "label": "ShowRotationVisuals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowRotationVisuals(const bool bInShow)"
  },
  {
    "label": "SetupIndicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupIndicator(USceneComponent* RootComponent, UGizmoHandleMeshComponent* IndicatorMeshComponent, UStaticMesh* Mesh)"
  },
  {
    "label": "SetIndicatorColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIndicatorColor(UStaticMeshComponent* InMeshComponent, const FLinearColor& InHandleColor)"
  }
]