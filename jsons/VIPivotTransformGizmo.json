[
  {
    "label": "APivotTransformGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APivotTransformGizmo"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UUniformScaleGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UUniformScaleGizmoHandleGroup"
  },
  {
    "label": "UPivotTranslationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotTranslationGizmoHandleGroup"
  },
  {
    "label": "UPivotScaleGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotScaleGizmoHandleGroup"
  },
  {
    "label": "UPivotPlaneTranslationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotPlaneTranslationGizmoHandleGroup"
  },
  {
    "label": "UPivotRotationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotRotationGizmoHandleGroup"
  },
  {
    "label": "UStretchGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStretchGizmoHandleGroup"
  },
  {
    "label": "UPivotTranslationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotTranslationGizmoHandleGroup"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UPivotScaleGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotScaleGizmoHandleGroup"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UPivotPlaneTranslationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotPlaneTranslationGizmoHandleGroup"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UPivotRotationGizmoHandleGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPivotRotationGizmoHandleGroup"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UpdateIndicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateIndicator(USceneComponent* IndicatorRoot, const FVector& Direction, const uint32 FacingAxisIndex)"
  },
  {
    "label": "ShowRotationVisuals()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowRotationVisuals(const bool bInShow)"
  },
  {
    "label": "SetupIndicator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupIndicator(USceneComponent* RootComponent, UGizmoHandleMeshComponent* IndicatorMeshComponent, UStaticMesh* Mesh)"
  },
  {
    "label": "SetIndicatorColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIndicatorColor(UStaticMeshComponent* InMeshComponent, const FLinearColor& InHandleColor)"
  }
]