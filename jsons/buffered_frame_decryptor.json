[
  {
    "label": "OnDecryptedFrameCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnDecryptedFrameCallback"
  },
  {
    "label": "OnDecryptionStatusChangeCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnDecryptionStatusChangeCallback"
  },
  {
    "label": "BufferedFrameDecryptor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BufferedFrameDecryptor"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "OnDecryptedFrameCallback()",
    "kind": "Method",
    "detail": "Function (# ifndef VIDEO_BUFFERED_FRAME_DECRYPTOR_H_ # define VIDEO_BUFFERED_FRAME_DECRYPTOR_H_ # include<deque> # include<memory> # include \" api / crypto / crypto_options . h \" # include \" api / crypto / frame_decryptor_interface . h \" # include \" api / field_trials_view . h \" # include \" modules / video_coding / frame_object . h \" namespace webrtc { class OnDecryptedFrameCallback { public : ~)",
    "insertText": "OnDecryptedFrameCallback()"
  },
  {
    "label": "OnDecryptedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecryptedFrame(std::unique_ptr<RtpFrameObject> frame)"
  },
  {
    "label": "OnDecryptionStatusChangeCallback()",
    "kind": "Method",
    "detail": "Function (} ; class OnDecryptionStatusChangeCallback { public : ~)",
    "insertText": "OnDecryptionStatusChangeCallback()"
  },
  {
    "label": "OnDecryptionStatusChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecryptionStatusChange(FrameDecryptorInterface::Status status)"
  },
  {
    "label": "BufferedFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (} ; class BufferedFrameDecryptor final { public :)",
    "insertText": "BufferedFrameDecryptor(OnDecryptedFrameCallback* decrypted_frame_callback, OnDecryptionStatusChangeCallback* decryption_status_change_callback, const FieldTrialsView& field_trials)"
  },
  {
    "label": "BufferedFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "BufferedFrameDecryptor()"
  },
  {
    "label": "BufferedFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BufferedFrameDecryptor(const BufferedFrameDecryptor&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (BufferedFrameDecryptor&)",
    "insertText": "operator(const BufferedFrameDecryptor&)"
  },
  {
    "label": "SetFrameDecryptor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFrameDecryptor(rtc::scoped_refptr<FrameDecryptorInterface> frame_decryptor)"
  },
  {
    "label": "ManageEncryptedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ManageEncryptedFrame(std::unique_ptr<RtpFrameObject> encrypted_frame)"
  },
  {
    "label": "DecryptFrame()",
    "kind": "Method",
    "detail": "Function (private : enum class FrameDecision { kStash,kDecrypted,kDrop } ; FrameDecision)",
    "insertText": "DecryptFrame(RtpFrameObject* frame)"
  },
  {
    "label": "RetryStashedFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RetryStashedFrames()"
  }
]