[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "TDirectoryTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TDirectoryTree"
  },
  {
    "label": "FTreeNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTreeNode"
  },
  {
    "label": "FixupPathSeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupPathSeparator(FStringBuilderBase& InOutPath, int32 StartIndex, TCHAR InSeparatorChar)"
  },
  {
    "label": "FindInsertionIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindInsertionIndex(int32 NumChildNodes, const TUniquePtr<FString[]>& RelPaths,\n\tFStringView FirstPathComponent, bool& bOutExists)"
  },
  {
    "label": "TDirectoryTree()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "TDirectoryTree()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FStringView Path, bool* bOutExisted = nullptr)"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shrink()"
  },
  {
    "label": "TryFindClosestPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFindClosestPath(FStringView Path, FStringBuilderBase& OutPath, ValueType** OutValue)"
  },
  {
    "label": "TryFindClosestPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryFindClosestPath(FStringView Path, FString& OutPath, ValueType** OutValue)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(FStringView InRelPath, bool& bOutExisted)"
  },
  {
    "label": "Shrink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shrink()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(ValueType&& InValue)"
  },
  {
    "label": "SetDefaultValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultValue()"
  },
  {
    "label": "RemoveValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveValue()"
  },
  {
    "label": "FixupDirectChildrenPathSeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupDirectChildrenPathSeparator(TCHAR OldSeparator, TCHAR NewSeparator)"
  },
  {
    "label": "SetNumChildNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumChildNodes(int32 InNumChildNodes)"
  },
  {
    "label": "RemoveChildNodeAt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveChildNodeAt(int32 RemoveIndex)"
  },
  {
    "label": "ConditionalCompactNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalCompactNode(FString& RelPath, FTreeNode& ChildNode)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Realloc(int32 NewCapacity)"
  },
  {
    "label": "NormalizePathForWriting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NormalizePathForWriting(FStringView& Path, FStringBuilderBase& NormalizeBuffer)"
  },
  {
    "label": "InitializePathSeparator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializePathSeparator(TCHAR InPathSeparator)"
  },
  {
    "label": "TryFindClosestPathInternal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TryFindClosestPathInternal(Path, nullptr)"
  },
  {
    "label": "OldRelPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "OldRelPath(ExistingRemainingPath)"
  },
  {
    "label": "OldRelPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "OldRelPath(ExistingRemainingPath)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetValue()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (empty)",
    "insertText": "for(int32 RunawayLoop = 0; RunawayLoop <= InRelPath.Len()"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (false)",
    "insertText": "for(int32 RunawayLoop = 0; RunawayLoop <= InRelPath.Len()"
  }
]