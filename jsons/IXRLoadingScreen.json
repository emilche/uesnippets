[
  {
    "label": "IXRLoadingScreen",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IXRLoadingScreen"
  },
  {
    "label": "FSplashDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSplashDesc"
  },
  {
    "label": "IXRLoadingScreen()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HeadMountedDisplayTypes . h \" class IXRLoadingScreen { public : ~)",
    "insertText": "IXRLoadingScreen()"
  },
  {
    "label": "FVector2D()",
    "kind": "Method",
    "detail": "Function (} struct FSplashDesc { FTransform Transform = FTransform::Identity ; FVector2D QuadSize =)",
    "insertText": "FVector2D(1.0f, 1.0f)"
  },
  {
    "label": "FBox2D()",
    "kind": "Method",
    "detail": "Function (FBox2D UVRect =)",
    "insertText": "FBox2D(FVector2D(0.0f, 0.0f), FVector2D(1.0f, 1.0f))"
  },
  {
    "label": "ClearSplashes()",
    "kind": "Method",
    "detail": "Function (FQuat DeltaRotation = FQuat::Identity ; bool bIgnoreAlpha = false ; bool bIsDynamic = false ; bool bIsExternal = false ; FTextureRHIRef Texture = nullptr ; FTextureRHIRef LeftTexture = nullptr ; } ; void)",
    "insertText": "ClearSplashes()"
  },
  {
    "label": "AddSplash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSplash(const FSplashDesc& Splash)"
  },
  {
    "label": "ShowLoadingScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowLoadingScreen()"
  },
  {
    "label": "HideLoadingScreen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideLoadingScreen()"
  },
  {
    "label": "IsShown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShown()"
  },
  {
    "label": "IsPlayingLoadingMovie()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlayingLoadingMovie()"
  },
  {
    "label": "ShowLoadingScreen_Compat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowLoadingScreen_Compat(bool bShow, FTextureRHIRef Texture, const FVector& Offset, const FVector2D& Scale)"
  }
]