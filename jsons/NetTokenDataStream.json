[
  {
    "label": "FNetToken",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetToken"
  },
  {
    "label": "FNetTokenStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenStore"
  },
  {
    "label": "FNetTokenStoreState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetTokenStoreState"
  },
  {
    "label": "FStringTokenStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStringTokenStore"
  },
  {
    "label": "FNetExports",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetExports"
  },
  {
    "label": "UNetTokenDataStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetTokenDataStream"
  },
  {
    "label": "FInitParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitParameters"
  },
  {
    "label": "FExternalRecord",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FExternalRecord"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Iris / DataStream / DataStream . h \" # include \" Net / Core / NetToken / NetToken . h \" # include \" Containers / RingBuffer . h \" # include \" NetTokenDataStream . generated . h \" namespace UE::Net { class FNetToken ; class FNetTokenStore ; class FNetTokenStoreState ; class FStringTokenStore ; namespace Private { class FNetExports ; } })",
    "insertText": "UCLASS()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (uint32 ReplicationSystemId ; uint32 ConnectionId ; UE::Net::Private::FNetExports* NetExports ; } ; void)",
    "insertText": "Init(const FInitParameters& Params)"
  },
  {
    "label": "GetRemoteNetTokenStoreState()",
    "kind": "Method",
    "detail": "Function (const UE::Net::FNetTokenStoreState*)",
    "insertText": "GetRemoteNetTokenStoreState()"
  },
  {
    "label": "UNetTokenDataStream()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "UNetTokenDataStream()"
  },
  {
    "label": "WriteData()",
    "kind": "Method",
    "detail": "Function (EWriteResult)",
    "insertText": "WriteData(UE::Net::FNetSerializationContext& Context, FDataStreamRecord const*& OutRecord)"
  },
  {
    "label": "ReadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadData(UE::Net::FNetSerializationContext& Context)"
  },
  {
    "label": "ProcessPacketDeliveryStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessPacketDeliveryStatus(UE::Net::EPacketDeliveryStatus Status, FDataStreamRecord const* Record)"
  },
  {
    "label": "HasAcknowledgedAllReliableData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasAcknowledgedAllReliableData()"
  }
]