[
  {
    "label": "UToolMenuEntryScript",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenuEntryScript"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FToolMenuEntrySubMenuData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuEntrySubMenuData"
  },
  {
    "label": "FToolMenuEntryOptionsDropdownData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuEntryOptionsDropdownData"
  },
  {
    "label": "FToolMenuEntryToolBarData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuEntryToolBarData"
  },
  {
    "label": "FToolMenuEntryWidgetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuEntryWidgetData"
  },
  {
    "label": "FToolMenuCustomWidgetContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuCustomWidgetContext"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "TOOLMENUS_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TOOLMENUS_API"
  },
  {
    "label": "FToolMenuSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuSection"
  },
  {
    "label": "UToolMenus",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenus"
  },
  {
    "label": "UToolMenuEntryExtensions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenuEntryExtensions"
  },
  {
    "label": "FPopulateMenuBuilderWithToolMenuEntry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPopulateMenuBuilderWithToolMenuEntry"
  },
  {
    "label": "FToolMenuEntrySubMenuData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ToolMenuOwner . h \" # include \" ToolMenuDelegates . h \" # include \" ToolMenuMisc . h \" # include \" Misc / Attribute . h \" # include \" Framework / MultiBox / MultiBoxDefs . h \" # include \" Framework / Commands / UICommandInfo . h \" # include \" UObject / TextProperty . h \" # include \" ToolMenuEntry . generated . h \" class UToolMenuEntryScript ; struct FKeyEvent ; struct FToolMenuEntrySubMenuData { public :)",
    "insertText": "FToolMenuEntrySubMenuData() : bIsSubMenu(false), bOpenSubMenuOnClick(false), bAutoCollapse(false)"
  },
  {
    "label": "FToolMenuEntryToolBarData()",
    "kind": "Method",
    "detail": "Function (} bool bIsSubMenu ; bool bOpenSubMenuOnClick ; bool bAutoCollapse ; FNewToolMenuChoice ConstructMenu ; } ; struct FToolMenuEntryOptionsDropdownData { FNewToolMenuChoice MenuContentGenerator ; TAttribute<FText> ToolTip ; FUIAction Action ; } ; struct FToolMenuEntryToolBarData { public :)",
    "insertText": "FToolMenuEntryToolBarData() : bSimpleComboBox(false), bIsFocusable(false), bForceSmallIcons(false)"
  },
  {
    "label": "FToolMenuEntryWidgetData()",
    "kind": "Method",
    "detail": "Function (} TAttribute<FText> LabelOverride ; FNewToolMenuChoice ComboButtonContextMenuGenerator ; FNewToolBarDelegateLegacy ConstructLegacy ; TSharedPtr<FToolMenuEntryOptionsDropdownData> OptionsDropdownData ; bool bSimpleComboBox ; bool bIsFocusable ; bool bForceSmallIcons ; } ; struct FToolMenuEntryWidgetData { public :)",
    "insertText": "FToolMenuEntryWidgetData() : bNoIndent(false), bSearchable(false), bNoPadding(false)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} bool bNoIndent ; bool bSearchable ; bool bNoPadding ; FMenuEntryStyleParams StyleParams ; } ; struct FToolMenuCustomWidgetContext { const class ISlateStyle* StyleSet = nullptr ; FName StyleName ; } ;)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FToolMenuEntry()"
  },
  {
    "label": "FToolMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuEntry(const FToolMenuOwner InOwner, const FName InName, EMultiBlockType InType)"
  },
  {
    "label": "FToolMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuEntry(const FToolMenuEntry&)"
  },
  {
    "label": "FToolMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FToolMenuEntry(FToolMenuEntry&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "operator(const FToolMenuEntry&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry&)",
    "insertText": "operator(FToolMenuEntry&&)"
  },
  {
    "label": "InitMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitMenuEntry(const FName InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const TAttribute<FSlateIcon>& InIcon, const FToolUIActionChoice& InAction, const EUserInterfaceActionType UserInterfaceActionType = EUserInterfaceActionType::Button, const FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "InitMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitMenuEntry(const TSharedPtr< const FUICommandInfo >& InCommand, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), const FName InTutorialHighlightName = NAME_None, const TOptional<FName> InNameOverride = TOptional<FName>())"
  },
  {
    "label": "InitMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitMenuEntry(const FName InNameOverride, const TSharedPtr< const FUICommandInfo >& InCommand, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), const FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "InitMenuEntryWithCommandList()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitMenuEntryWithCommandList(const TSharedPtr<const FUICommandInfo>& InCommand, const TSharedPtr<const FUICommandList>& InCommandList, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), const FName InTutorialHighlightName = NAME_None, const TOptional<FName> InNameOverride = TOptional<FName>())"
  },
  {
    "label": "InitMenuEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitMenuEntry(const FName InName, const FToolUIActionChoice& InAction, const TSharedRef<SWidget>& Widget)"
  },
  {
    "label": "InitDynamicEntry()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitDynamicEntry(const FName InName, const FNewToolMenuSectionDelegate& InConstruct)"
  },
  {
    "label": "InitSubMenu()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitSubMenu(const FName InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const FNewToolMenuChoice& InMakeMenu, const FToolUIActionChoice& InAction, const EUserInterfaceActionType InUserInterfaceActionType, bool bInOpenSubMenuOnClick = false, const TAttribute<FSlateIcon>& InIcon = TAttribute<FSlateIcon>(), const bool bShouldCloseWindowAfterMenuSelection = true)"
  },
  {
    "label": "InitSubMenu()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitSubMenu(const FName InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const FNewToolMenuChoice& InMakeMenu, bool bInOpenSubMenuOnClick = false, const TAttribute<FSlateIcon>& InIcon = TAttribute<FSlateIcon>(), const bool bShouldCloseWindowAfterMenuSelection = true, const FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "InitSubMenu()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitSubMenu(const FName InName, const FToolUIActionChoice& InAction, const TSharedRef<SWidget>& InWidget, const FNewToolMenuChoice& InMakeMenu, bool bShouldCloseWindowAfterMenuSelection = true)"
  },
  {
    "label": "InitToolBarButton()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitToolBarButton(const FName InName, const FToolUIActionChoice& InAction, const TAttribute<FText>& InLabel = TAttribute<FText>(), const TAttribute<FText>& InToolTip = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIcon = TAttribute<FSlateIcon>(), const EUserInterfaceActionType UserInterfaceActionType = EUserInterfaceActionType::Button, FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "InitToolBarButton()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitToolBarButton(const TSharedPtr< const FUICommandInfo >& InCommand, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), FName InTutorialHighlightName = NAME_None, const TOptional<FName> InNameOverride = TOptional<FName>())"
  },
  {
    "label": "InitComboButton()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitComboButton(const FName InName, const FToolUIActionChoice& InAction, const FNewToolMenuChoice& InMenuContentGenerator, const TAttribute<FText>& InLabelOverride = TAttribute<FText>(), const TAttribute<FText>& InToolTipOverride = TAttribute<FText>(), const TAttribute<FSlateIcon>& InIconOverride = TAttribute<FSlateIcon>(), bool bInSimpleComboBox = false, FName InTutorialHighlightName = NAME_None)"
  },
  {
    "label": "InitSeparator()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitSeparator(const FName InName)"
  },
  {
    "label": "InitWidget()",
    "kind": "Method",
    "detail": "Function (FToolMenuEntry)",
    "insertText": "InitWidget(const FName InName, const TSharedRef<SWidget>& InWidget, const FText& Label, bool bNoIndent = false, bool bSearchable = true, bool bNoPadding = false, const FText& InToolTipText = FText())"
  },
  {
    "label": "IsSubMenu()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubMenu()"
  },
  {
    "label": "GetActionForCommand()",
    "kind": "Method",
    "detail": "Function (} const FUIAction*)",
    "insertText": "GetActionForCommand(const FToolMenuContext& InContext, TSharedPtr<const FUICommandList>& OutCommandList)"
  },
  {
    "label": "SetCommandList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCommandList(const TSharedPtr<const FUICommandList>& InCommandList)"
  },
  {
    "label": "AddKeybindFromCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddKeybindFromCommand(const TSharedPtr< const FUICommandInfo >& InCommand)"
  },
  {
    "label": "IsCommandKeybindOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCommandKeybindOnly()"
  },
  {
    "label": "CommandAcceptsInput()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CommandAcceptsInput(const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "TryExecuteToolUIAction()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryExecuteToolUIAction(const FToolMenuContext& InContext)"
  },
  {
    "label": "SetShowInToolbarTopLevel()",
    "kind": "Method",
    "detail": "Function (struct FToolMenuSection ; class UToolMenuEntryScript ; void)",
    "insertText": "SetShowInToolbarTopLevel(TAttribute<bool> InTopLevel)"
  },
  {
    "label": "SetCommand()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetCommand(const TSharedPtr< const FUICommandInfo >& InCommand, TOptional<FName> InName, const TAttribute<FText>& InLabel, const TAttribute<FText>& InToolTip, const TAttribute<FSlateIcon>& InIcon)"
  },
  {
    "label": "ResetActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetActions()"
  },
  {
    "label": "IsScriptObjectDynamicConstruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsScriptObjectDynamicConstruct()"
  },
  {
    "label": "IsNonLegacyDynamicConstruct()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNonLegacyDynamicConstruct()"
  }
]