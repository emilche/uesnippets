[
  {
    "label": "FKLevelSetElem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKLevelSetElem"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "FDynamicMesh3",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicMesh3"
  },
  {
    "label": "CreateLevelSetForBone()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / RefCounting . h \" # include \" Chaos / ImplicitFwd . h \" struct FKLevelSetElem ; class UBodySetup ; namespace UE::Geometry { class FDynamicMesh3 ; } namespace LevelSetHelpers { bool)",
    "insertText": "CreateLevelSetForBone(UBodySetup* BodySetup, const TArray<FVector3f>& InVertices, const TArray<uint32>& InIndices, uint32 InResolution)"
  },
  {
    "label": "CreateDynamicMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDynamicMesh(const TArray<FVector3f>& InVertices, const TArray<uint32>& InIndices, UE::Geometry::FDynamicMesh3& OutMesh)"
  },
  {
    "label": "CreateLevelSetForMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateLevelSetForMesh(const UE::Geometry::FDynamicMesh3& InMesh, int32 InLevelSetGridResolution, FKLevelSetElem& OutElement)"
  },
  {
    "label": "CreateLevelSetForMesh()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateLevelSetForMesh(const UE::Geometry::FDynamicMesh3& InMesh, int32 InLevelSetGridResolution, Chaos::FLevelSetPtr& OutElement)"
  }
]