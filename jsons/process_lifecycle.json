[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "ProcessLifecycle()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FUCHSIA_PROCESS_LIFECYCLE_H_ # define BASE_FUCHSIA_PROCESS_LIFECYCLE_H_ # include<fuchsia / process / lifecycle / cpp / fidl . h> # include<lib / fidl / cpp / binding . h> # include \" base / base_export . h \" # include \" base / callback . h \" namespace base { class BASE_EXPORT ProcessLifecycle final : public fuchsia::process::lifecycle::Lifecycle { public :)",
    "insertText": "ProcessLifecycle(base::OnceClosure on_stop)"
  },
  {
    "label": "ProcessLifecycle()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "ProcessLifecycle()"
  },
  {
    "label": "ProcessLifecycle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessLifecycle(const ProcessLifecycle&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (ProcessLifecycle&)",
    "insertText": "operator(const ProcessLifecycle&)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  }
]