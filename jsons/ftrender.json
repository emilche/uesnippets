[
  {
    "label": "FT_Glyph_Class_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Glyph_Class_"
  },
  {
    "label": "FT_Renderer_Class_",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FT_Renderer_Class_"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (# ifndef __FTRENDER_H__ # define __FTRENDER_H__ # include<ft2build . h> # include FT_MODULE_H # include FT_GLYPH_H FT_BEGIN_HEADER typedef)",
    "insertText": "FT_Error(*FT_Glyph_InitFunc)( FT_Glyph glyph, FT_GlyphSlot slot)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FT_Glyph_DoneFunc)( FT_Glyph glyph)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FT_Glyph_TransformFunc)( FT_Glyph glyph, const FT_Matrix* matrix, const FT_Vector* delta)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FT_Glyph_GetBBoxFunc)( FT_Glyph glyph, FT_BBox* abbox)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_Glyph_CopyFunc)( FT_Glyph source, FT_Glyph target)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_Glyph_PrepareFunc)( FT_Glyph glyph, FT_GlyphSlot slot)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (# define FT_Glyph_Init_Func FT_Glyph_InitFunc # define FT_Glyph_Done_Func FT_Glyph_DoneFunc # define FT_Glyph_Transform_Func FT_Glyph_TransformFunc # define FT_Glyph_BBox_Func FT_Glyph_GetBBoxFunc # define FT_Glyph_Copy_Func FT_Glyph_CopyFunc # define FT_Glyph_Prepare_Func FT_Glyph_PrepareFunc struct FT_Glyph_Class_ { FT_Long glyph_size ; FT_Glyph_Format glyph_format ; FT_Glyph_InitFunc glyph_init ; FT_Glyph_DoneFunc glyph_done ; FT_Glyph_CopyFunc glyph_copy ; FT_Glyph_TransformFunc glyph_transform ; FT_Glyph_GetBBoxFunc glyph_bbox ; FT_Glyph_PrepareFunc glyph_prepare ; } ; typedef)",
    "insertText": "FT_Error(*FT_Renderer_RenderFunc)( FT_Renderer renderer, FT_GlyphSlot slot, FT_UInt mode, const FT_Vector* origin)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_Renderer_TransformFunc)( FT_Renderer renderer, FT_GlyphSlot slot, const FT_Matrix* matrix, const FT_Vector* delta)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*FT_Renderer_GetCBoxFunc)( FT_Renderer renderer, FT_GlyphSlot slot, FT_BBox* cbox)"
  },
  {
    "label": "FT_Error()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "FT_Error(*FT_Renderer_SetModeFunc)( FT_Renderer renderer, FT_ULong mode_tag, FT_Pointer mode_ptr)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (# define FTRenderer_render FT_Renderer_RenderFunc # define FTRenderer_transform FT_Renderer_TransformFunc # define FTRenderer_getCBox FT_Renderer_GetCBoxFunc # define FTRenderer_setMode FT_Renderer_SetModeFunc typedef struct FT_Renderer_Class_ { FT_Module_Class root ; FT_Glyph_Format glyph_format ; FT_Renderer_RenderFunc render_glyph ; FT_Renderer_TransformFunc transform_glyph ; FT_Renderer_GetCBoxFunc get_glyph_cbox ; FT_Renderer_SetModeFunc set_mode ; FT_Raster_Funcs* raster_class ; } FT_Renderer_Class ;)",
    "insertText": "FT_EXPORT(FT_Renderer ) FT_Get_Renderer( FT_Library library, FT_Glyph_Format format)"
  },
  {
    "label": "FT_EXPORT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FT_EXPORT(FT_Error ) FT_Set_Renderer( FT_Library library, FT_Renderer renderer, FT_UInt num_params, FT_Parameter* parameters)"
  }
]