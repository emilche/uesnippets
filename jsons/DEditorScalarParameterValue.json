[
  {
    "label": "FScalarParameterAtlasData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScalarParameterAtlasData"
  },
  {
    "label": "UCurveLinearColor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColor"
  },
  {
    "label": "UCurveLinearColorAtlas",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCurveLinearColorAtlas"
  },
  {
    "label": "UDEditorScalarParameterValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDEditorScalarParameterValue"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MaterialEditor / DEditorParameterValue . h \" # include \" DEditorScalarParameterValue . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UPROPERTY(Transient)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(hidecategories=Object, collapsecategories, editinlinenew, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(EditAnywhere, Category=DEditorScalarParameterValue)"
  },
  {
    "label": "GetDefaultGroupName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetDefaultGroupName()"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetValue(FMaterialParameterMetadata& OutResult)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetValue(OutResult)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (OutResult . Value = ParameterValue ; OutResult . ScalarMin = SliderMin ; OutResult . ScalarMax = SliderMax ; OutResult . ScalarCurve = AtlasData . Curve ; OutResult . ScalarAtlas = AtlasData . Atlas ; OutResult . bUsedAsAtlasPosition = AtlasData . bIsUsedAsAtlasPosition ; return true ; } bool)",
    "insertText": "SetValue(const FMaterialParameterValue& Value)"
  },
  {
    "label": "AsScalar()",
    "kind": "Method",
    "detail": "Function (ParameterValue = Value .)",
    "insertText": "AsScalar()"
  }
]