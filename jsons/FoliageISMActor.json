[
  {
    "label": "FFoliageInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageInfo"
  },
  {
    "label": "UInstancedStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInstancedStaticMeshComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UFoliageType_Actor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFoliageType_Actor"
  },
  {
    "label": "FFoliageISMActor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFoliageISMActor"
  },
  {
    "label": "FFoliageISMActor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" InstancedFoliage . h \" # include \" ISMPartition / ISMPartitionActor . h \" # include \" ISMPartition / ISMComponentDescriptor . h \" # include \" Misc / Guid . h \" # include \" Containers / SortedMap . h \" struct FFoliageInfo ; class UInstancedStaticMeshComponent ; class UPrimitiveComponent ; class UBlueprint ; class UFoliageType_Actor ; struct FFoliageISMActor : public FFoliageImpl,public IISMPartitionInstanceManager {)",
    "insertText": "FFoliageISMActor(FFoliageInfo* Info) : FFoliageImpl(Info) #if WITH_EDITORONLY_DATA , Guid(FGuid::NewGuid()) , ActorClass(nullptr)"
  },
  {
    "label": "FFoliageISMActor()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FFoliageISMActor()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FGuid Guid ; FISMClientHandle ClientHandle ; TSortedMap<int32,TArray<FTransform>> ISMDefinition ; TObjectPtr<UClass> ActorClass ; # endif void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "PostSerialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostSerialize(FArchive& Ar)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const UFoliageType* FoliageType)"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "Reapply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reapply(const UFoliageType* FoliageType)"
  },
  {
    "label": "GetInstanceCount()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetInstanceCount()"
  },
  {
    "label": "PreAddInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreAddInstances(const UFoliageType* FoliageType, int32 AddedInstanceCount)"
  },
  {
    "label": "AddInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddInstance(const FFoliageInstance& NewInstance)"
  },
  {
    "label": "RemoveInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveInstance(int32 InstanceIndex)"
  },
  {
    "label": "SetInstanceWorldTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceWorldTransform(int32 InstanceIndex, const FTransform& Transform, bool bTeleport)"
  },
  {
    "label": "GetInstanceWorldTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetInstanceWorldTransform(int32 InstanceIndex)"
  },
  {
    "label": "IsOwnedComponent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOwnedComponent(const UPrimitiveComponent* Component)"
  },
  {
    "label": "SelectAllInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectAllInstances(bool bSelect)"
  },
  {
    "label": "SelectInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstance(bool bSelect, int32 Index)"
  },
  {
    "label": "SelectInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SelectInstances(bool bSelect, const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "GetInstanceIndexFrom()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetInstanceIndexFrom(const UPrimitiveComponent* Component, int32 ComponentIndex)"
  },
  {
    "label": "GetSelectionBoundingBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetSelectionBoundingBox(const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "ApplySelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySelection(bool bApply, const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "ClearSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSelection(const TSet<int32>& SelectedIndices)"
  },
  {
    "label": "ForEachSMInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachSMInstance(TFunctionRef<bool(FSMInstanceId)> Callback)"
  },
  {
    "label": "ForEachSMInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachSMInstance(int32 InstanceIndex, TFunctionRef<bool(FSMInstanceId)> Callback)"
  },
  {
    "label": "BeginUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginUpdate()"
  },
  {
    "label": "EndUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndUpdate()"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Refresh(bool bAsync, bool bForce)"
  },
  {
    "label": "OnHiddenEditorViewMaskChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnHiddenEditorViewMaskChanged(uint64 InHiddenEditorViews)"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreEditUndo(UFoliageType* FoliageType)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo(FFoliageInfo* InInfo, UFoliageType* FoliageType)"
  },
  {
    "label": "NotifyFoliageTypeWillChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFoliageTypeWillChange(UFoliageType* FoliageType)"
  },
  {
    "label": "NotifyFoliageTypeChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NotifyFoliageTypeChanged(UFoliageType* FoliageType, bool bSourceChanged)"
  },
  {
    "label": "RegisterDelegates()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "RegisterDelegates()"
  },
  {
    "label": "UnregisterDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterDelegates()"
  },
  {
    "label": "OnBlueprintChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlueprintChanged(UBlueprint* InBlueprint)"
  },
  {
    "label": "GetISMPartitionInstanceDisplayName()",
    "kind": "Method",
    "detail": "Function (# endif private : FText)",
    "insertText": "GetISMPartitionInstanceDisplayName(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "GetISMPartitionInstanceTooltip()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetISMPartitionInstanceTooltip(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "CanEditISMPartitionInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditISMPartitionInstance(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "CanMoveISMPartitionInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMoveISMPartitionInstance(const FISMClientInstanceId& InstanceId, const ETypedElementWorldType InWorldType)"
  },
  {
    "label": "GetISMPartitionInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetISMPartitionInstanceTransform(const FISMClientInstanceId& InstanceId, FTransform& OutInstanceTransform, bool bWorldSpace = false)"
  },
  {
    "label": "SetISMPartitionInstanceTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetISMPartitionInstanceTransform(const FISMClientInstanceId& InstanceId, const FTransform& InstanceTransform, bool bWorldSpace = false, bool bTeleport = false)"
  },
  {
    "label": "NotifyISMPartitionInstanceMovementStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceMovementStarted(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "NotifyISMPartitionInstanceMovementOngoing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceMovementOngoing(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "NotifyISMPartitionInstanceMovementEnded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceMovementEnded(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "NotifyISMPartitionInstanceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyISMPartitionInstanceSelectionChanged(const FISMClientInstanceId& InstanceId, const bool bIsSelected)"
  },
  {
    "label": "DeleteISMPartitionInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteISMPartitionInstances(TArrayView<const FISMClientInstanceId> InstanceIds)"
  },
  {
    "label": "DuplicateISMPartitionInstances()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DuplicateISMPartitionInstances(TArrayView<const FISMClientInstanceId> InstanceIds, TArray<FISMClientInstanceId>& OutNewInstanceIds)"
  },
  {
    "label": "ISMClientInstanceIdToFoliageInstanceId()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR FFoliageInstanceId)",
    "insertText": "ISMClientInstanceIdToFoliageInstanceId(const FISMClientInstanceId& InstanceId)"
  },
  {
    "label": "ISMClientInstanceIdsToFoliageInstanceIds()",
    "kind": "Method",
    "detail": "Function (TArray<FFoliageInstanceId>)",
    "insertText": "ISMClientInstanceIdsToFoliageInstanceIds(TArrayView<const FISMClientInstanceId> InstanceIds)"
  }
]