[
  {
    "label": "FWinHttpConnectionWebSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWinHttpConnectionWebSocket"
  },
  {
    "label": "CreateWebSocketConnection()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "CreateWebSocketConnection(\n\t\tFWinHttpSession& Session,\n\t\tconst FString& RequestUrl,\n\t\tconst TArray<FString>& Protocols,\n\t\tconst TMap<FString, FString>& UpgradeHeaders)"
  },
  {
    "label": "SetWebSocketConnectedHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWebSocketConnectedHandler(FWinHttpConnectionWebSocketOnConnected&& Handler)"
  },
  {
    "label": "SetWebSocketMessageHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWebSocketMessageHandler(FWinHttpConnectionWebSocketOnMessage&& Handler)"
  },
  {
    "label": "SetWebSocketClosedHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWebSocketClosedHandler(FWinHttpConnectionWebSocketOnClosed&& Handler)"
  },
  {
    "label": "SendMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SendMessage(EWebSocketMessageType MessageType, TArray<uint8>&& Message)"
  },
  {
    "label": "CloseConnection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloseConnection(const uint16 Code, const FString& Reason)"
  },
  {
    "label": "FWinHttpConnectionWebSocket()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "FWinHttpConnectionWebSocket(\n\t\tFWinHttpSession& Session,\n\t\tconst FString& RequestUrl,\n\t\tconst bool bIsSecure,\n\t\tconst FString& Domain,\n\t\tconst TOptional<uint16> Port,\n\t\tconst FString& PathAndQuery,\n\t\tconst TArray<FString>& Protocols,\n\t\tconst TMap<FString, FString>& UpgradeHeaders)"
  },
  {
    "label": "ReadData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadData(const int32 MaxMessagesToRead)"
  },
  {
    "label": "WriteData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteData(const int32 MaxMessagesToWrite)"
  },
  {
    "label": "HandleWebSocketReadComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketReadComplete(const uint32 BytesRead, const EWebSocketMessageType MessageType, const bool bIsFragment)"
  },
  {
    "label": "HandleWebSocketWriteComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketWriteComplete(const uint32 BytesWritten, const EWebSocketMessageType MessageType)"
  },
  {
    "label": "HandleWebSocketCloseComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketCloseComplete()"
  },
  {
    "label": "HandleWebSocketRequestError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketRequestError(const int32 WebSocketOperationId, const uint32 ErrorCode)"
  },
  {
    "label": "HandleWebSocketStatusCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleWebSocketStatusCallback(HINTERNET ResourceHandle, EWinHttpCallbackStatus Status, void* StatusInformation, uint32 StatusInformationLength)"
  },
  {
    "label": "UE_WinHttpWebSocketStatusCallback()",
    "kind": "Method",
    "detail": "Function (CALLBACK)",
    "insertText": "UE_WinHttpWebSocketStatusCallback(HINTERNET, DWORD_PTR, DWORD, LPVOID, DWORD)"
  }
]