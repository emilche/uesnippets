[
  {
    "label": "AudioTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AudioTrack"
  },
  {
    "label": "AudioTrack()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_AUDIO_TRACK_H_ # define PC_AUDIO_TRACK_H_ # include<string> # include \" api / media_stream_interface . h \" # include \" api / media_stream_track . h \" # include \" api / scoped_refptr . h \" # include \" api / sequence_checker . h \" # include \" rtc_base / system / no_unique_address . h \" namespace webrtc { class AudioTrack : public MediaStreamTrack<AudioTrackInterface>,public ObserverInterface { protected :)",
    "insertText": "AudioTrack(absl::string_view label, const rtc::scoped_refptr<AudioSourceInterface>& source)"
  },
  {
    "label": "AudioTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioTrack()"
  },
  {
    "label": "AudioTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AudioTrack(const AudioTrack&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioTrack&)",
    "insertText": "operator(const AudioTrack&)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (public : rtc::scoped_refptr<AudioTrack>)",
    "insertText": "Create(absl::string_view id, const rtc::scoped_refptr<AudioSourceInterface>& source)"
  },
  {
    "label": "kind()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "kind()"
  },
  {
    "label": "GetSource()",
    "kind": "Method",
    "detail": "Function (AudioSourceInterface*)",
    "insertText": "GetSource()"
  },
  {
    "label": "AddSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSink(AudioTrackSinkInterface* sink)"
  },
  {
    "label": "RemoveSink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSink(AudioTrackSinkInterface* sink)"
  },
  {
    "label": "OnChanged()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnChanged()"
  }
]