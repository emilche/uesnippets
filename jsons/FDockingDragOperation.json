[
  {
    "label": "FDockingDragOperation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDockingDragOperation"
  },
  {
    "label": "FDockTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDockTarget"
  },
  {
    "label": "SDockingNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingNode"
  },
  {
    "label": "SDockingNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingNode"
  },
  {
    "label": "SDockingTabWell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabWell"
  },
  {
    "label": "SDockingTabWell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabWell"
  },
  {
    "label": "SDockingArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingArea"
  },
  {
    "label": "EViaTabwell",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EViaTabwell"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SDockingArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingArea"
  },
  {
    "label": "SDockTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockTab"
  },
  {
    "label": "SDockingTabStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabStack"
  },
  {
    "label": "SDockingTabWell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabWell"
  },
  {
    "label": "OnTabWellEntered()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabWellEntered( const TSharedRef<class SDockingTabWell>& ThePanel )"
  },
  {
    "label": "OnTabWellLeft()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabWellLeft( const TSharedRef<class SDockingTabWell>& ThePanel, const FGeometry& DockNodeGeometry )"
  },
  {
    "label": "GetPreviewAreaForDirection()",
    "kind": "Method",
    "detail": "Function (FSlateRect)",
    "insertText": "GetPreviewAreaForDirection( const FSlateRect& DockableArea, SDockingArea::RelativeDirection DockingDirection )"
  },
  {
    "label": "SetHoveredTarget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHoveredTarget( const FDockTarget& InTarget, const FInputEvent& InputEvent )"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FDockingDragOperation>)",
    "insertText": "New( const TSharedRef<SDockTab>& InTabToBeDragged, const FVector2D InTabGrabOffset, TSharedRef<class SDockingArea> InTabOwnerArea, const FVector2D& OwnerAreaSize )"
  },
  {
    "label": "GetTabBeingDragged()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "GetTabBeingDragged()"
  },
  {
    "label": "GetDecoratorOffsetFromCursor()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetDecoratorOffsetFromCursor()"
  },
  {
    "label": "DesiredSizeFrom()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "DesiredSizeFrom( const FVector2D& InitialTabSize )"
  },
  {
    "label": "DroppedOntoNothing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedOntoNothing()"
  }
]