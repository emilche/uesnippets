[
  {
    "label": "UEnvQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQuery"
  },
  {
    "label": "UEnvQueryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryManager"
  },
  {
    "label": "UEnvQueryOption",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryOption"
  },
  {
    "label": "UEnvQueryTest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryTest"
  },
  {
    "label": "FEnvQueryManagerConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryManagerConfig"
  },
  {
    "label": "FEnvQueryRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryRequest"
  },
  {
    "label": "UserClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UserClass"
  },
  {
    "label": "UserClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UserClass"
  },
  {
    "label": "FEnvQueryInstanceCache",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryInstanceCache"
  },
  {
    "label": "FEQSDebugger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEQSDebugger"
  },
  {
    "label": "FEnvQueryInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEnvQueryInfo"
  },
  {
    "label": "FStatsInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatsInfo"
  },
  {
    "label": "UEnvQueryManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryManager"
  },
  {
    "label": "names",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "names"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Execute(EEnvQueryRunMode::Type RunMode, FQueryFinishedSignature const& FinishDelegate)"
  },
  {
    "label": "StoreStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreStats(const FEnvQueryInstance& QueryInstance)"
  },
  {
    "label": "StoreTickTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreTickTime(const FEnvQueryInstance& QueryInstance, double TickTime, double MaxTickTime)"
  },
  {
    "label": "StoreQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreQuery(const TSharedPtr<FEnvQueryInstance>& QueryInstance)"
  },
  {
    "label": "SaveStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveStats(const FString& FileName)"
  },
  {
    "label": "LoadStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadStats(const FString& FileName)"
  },
  {
    "label": "RunQuery()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RunQuery(const FEnvQueryRequest& Request, EEnvQueryRunMode::Type RunMode, FQueryFinishedSignature const& FinishDelegate)"
  },
  {
    "label": "RunQuery()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RunQuery(const TSharedPtr<FEnvQueryInstance>& QueryInstance, FQueryFinishedSignature const& FinishDelegate)"
  },
  {
    "label": "RemoveAllQueriesByQuerier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllQueriesByQuerier(const UObject& Querier, bool bExecuteFinishDelegate)"
  },
  {
    "label": "RunInstantQuery()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEnvQueryResult>)",
    "insertText": "RunInstantQuery(const FEnvQueryRequest& Request, EEnvQueryRunMode::Type RunMode)"
  },
  {
    "label": "RunInstantQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RunInstantQuery(const TSharedPtr<FEnvQueryInstance>& QueryInstance)"
  },
  {
    "label": "PrepareQueryInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEnvQueryInstance>)",
    "insertText": "PrepareQueryInstance(const FEnvQueryRequest& Request, EEnvQueryRunMode::Type RunMode)"
  },
  {
    "label": "AbortQuery()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AbortQuery(int32 RequestID)"
  },
  {
    "label": "OnWorldCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldCleanup()"
  },
  {
    "label": "RegisterExternalQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterExternalQuery(const TSharedPtr<FEnvQueryInstance>& QueryInstance)"
  },
  {
    "label": "UnregisterExternalQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterExternalQuery(const TSharedPtr<FEnvQueryInstance>& QueryInstance)"
  },
  {
    "label": "RegisterActiveWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterActiveWrapper(UEnvQueryInstanceBlueprintWrapper& Wrapper)"
  },
  {
    "label": "UnregisterActiveWrapper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterActiveWrapper(UEnvQueryInstanceBlueprintWrapper& Wrapper)"
  },
  {
    "label": "SetAllowTimeSlicing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowTimeSlicing(bool bAllowTimeSlicing)"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Configure(const FEnvQueryManagerConfig& NewConfig)"
  },
  {
    "label": "FindQueryInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEnvQueryInstance>)",
    "insertText": "FindQueryInstance(const int32 QueryID)"
  },
  {
    "label": "NotifyAssetUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyAssetUpdate(UEnvQuery* Query)"
  },
  {
    "label": "CreateQueryInstance()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FEnvQueryInstance>)",
    "insertText": "CreateQueryInstance(const UEnvQuery* Template, EEnvQueryRunMode::Type RunMode)"
  },
  {
    "label": "CreateOptionInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateOptionInstance(UEnvQueryOption* OptionTemplate, int32 SourceOptionIndex, const TArray<UEnvQueryTest*>& SortedTests, FEnvQueryInstance& Instance)"
  },
  {
    "label": "OnBlueprintCompiled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBlueprintCompiled()"
  }
]