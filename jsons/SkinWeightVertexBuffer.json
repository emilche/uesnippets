[
  {
    "label": "FStaticMeshVertexDataInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshVertexDataInterface"
  },
  {
    "label": "FSoftSkinVertex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftSkinVertex"
  },
  {
    "label": "TLegacySkinWeightInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TLegacySkinWeightInfo"
  },
  {
    "label": "FSkinWeightInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightInfo"
  },
  {
    "label": "FSkinWeightRHIInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightRHIInfo"
  },
  {
    "label": "FSkinWeightLookupVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightLookupVertexBuffer"
  },
  {
    "label": "FSkinWeightVertexData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightVertexData"
  },
  {
    "label": "FSkinWeightDataVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightDataVertexBuffer"
  },
  {
    "label": "FSkinWeightVertexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightVertexBuffer"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" RenderResource . h \" # include \" StaticMeshVertexData . h \" # include \" GPUSkinPublicDefs . h \" # include \" SkeletalMeshTypes . h \" # include \" GPUSkinVertexFactory . h \" # include \" UObject / AnimObjectVersion . h \" class FStaticMeshVertexDataInterface ; struct FSoftSkinVertex ; typedef uint8 FBoneIndex8 ; typedef uint16 FBoneIndex16 ; template<bool bExtraBoneInfluences,BoneIndexType> struct TLegacySkinWeightInfo { enum { NumInfluences = bExtraBoneInfluences ? EXTRA_BONE_INFLUENCES : MAX_INFLUENCES_PER_STREAM,} ; BoneIndexType InfluenceBones [ NumInfluences ] ; uint8 InfluenceWeights [ NumInfluences ] ; FArchive&)",
    "insertText": "operator(FArchive& Ar, TLegacySkinWeightInfo& I)"
  },
  {
    "label": "UsingCustomVersion()",
    "kind": "Method",
    "detail": "Function (Ar .)",
    "insertText": "UsingCustomVersion(FAnimObjectVersion::GUID)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (uint8 BoneIndex = 0 ; Ar<<BoneIndex ; I . InfluenceBones [ InfluenceIndex ] = BoneIndex ; } else { Ar<<I . InfluenceBones [ InfluenceIndex ] ; } })",
    "insertText": "for(uint32 InfluenceIndex = 0; InfluenceIndex < NumInfluences; InfluenceIndex++)"
  },
  {
    "label": "FSkinWeightLookupVertexBuffer()",
    "kind": "Method",
    "detail": "Function (Ar<<I . InfluenceWeights [ InfluenceIndex ] ; } return Ar ; } } ; struct FSkinWeightInfo { FBoneIndexType InfluenceBones [ MAX_TOTAL_INFLUENCES ] ; uint16 InfluenceWeights [ MAX_TOTAL_INFLUENCES ] ; } ; struct FSkinWeightRHIInfo { FBufferRHIRef DataVertexBufferRHI ; FBufferRHIRef LookupVertexBufferRHI ; } ; class FSkinWeightLookupVertexBuffer : public FVertexBuffer { public :)",
    "insertText": "FSkinWeightLookupVertexBuffer()"
  },
  {
    "label": "FSkinWeightLookupVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkinWeightLookupVertexBuffer(const FSkinWeightLookupVertexBuffer& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSkinWeightLookupVertexBuffer&)",
    "insertText": "operator(const FSkinWeightLookupVertexBuffer& Other)"
  },
  {
    "label": "CleanUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanUp()"
  },
  {
    "label": "IsLookupDataValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLookupDataValid()"
  },
  {
    "label": "GetLookupData()",
    "kind": "Method",
    "detail": "Function (const uint8*)",
    "insertText": "GetLookupData()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkinWeightLookupVertexBuffer& VertexBuffer)"
  },
  {
    "label": "SerializeMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeMetaData(FArchive& Ar)"
  },
  {
    "label": "CopyMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMetaData(const FSkinWeightLookupVertexBuffer& Other)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "GetFriendlyName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFriendlyName()"
  },
  {
    "label": "GetNumVertices()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetNumVertices()"
  },
  {
    "label": "GetVertexDataSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetVertexDataSize()"
  },
  {
    "label": "GetSRV()",
    "kind": "Method",
    "detail": "Function (} FRHIShaderResourceView*)",
    "insertText": "GetSRV()"
  },
  {
    "label": "GetNeedsCPUAccess()",
    "kind": "Method",
    "detail": "Function (bNeedsCPUAccess = bInNeedsCPUAccess ; } bool)",
    "insertText": "GetNeedsCPUAccess()"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(FRHIBuffer* IntermediateBuffer, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIForStreaming(FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "GetWeightOffsetAndInfluenceCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetWeightOffsetAndInfluenceCount(uint32 VertexIndex, uint32& OutWeightOffset, uint32& OutInfluenceCount)"
  },
  {
    "label": "SetWeightOffsetAndInfluenceCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeightOffsetAndInfluenceCount(uint32 VertexIndex, uint32 WeightOffset, uint32 InfluenceCount)"
  },
  {
    "label": "ResizeBuffer()",
    "kind": "Method",
    "detail": "Function (protected : FShaderResourceViewRHIRef SRVValue ; private : void)",
    "insertText": "ResizeBuffer(uint32 InNumVertices)"
  },
  {
    "label": "AllocateData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateData()"
  },
  {
    "label": "FSkinWeightVertexData()",
    "kind": "Method",
    "detail": "Function (bool bNeedsCPUAccess ; FStaticMeshVertexDataInterface* LookupData ; uint8* Data ; uint32 NumVertices ; const EPixelFormat PixelFormat = PF_R32_UINT ; const uint32 PixelFormatStride = 4 ; } ; template<VertexDataType> class FSkinWeightVertexData : public TStaticMeshVertexData<VertexDataType> { public :)",
    "insertText": "FSkinWeightVertexData(bool InNeedsCPUAccess = false) : TStaticMeshVertexData<VertexDataType>(InNeedsCPUAccess)"
  },
  {
    "label": "FSkinWeightDataVertexBuffer()",
    "kind": "Method",
    "detail": "Function (} } ; class FSkinWeightDataVertexBuffer : public FVertexBuffer { public :)",
    "insertText": "FSkinWeightDataVertexBuffer()"
  },
  {
    "label": "FSkinWeightDataVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkinWeightDataVertexBuffer(const FSkinWeightDataVertexBuffer& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSkinWeightDataVertexBuffer&)",
    "insertText": "operator(const FSkinWeightDataVertexBuffer& Other)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(uint32 InNumWeights, uint32 InNumVertices)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkinWeightDataVertexBuffer& VertexBuffer)"
  },
  {
    "label": "CopyMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMetaData(const FSkinWeightDataVertexBuffer& Other)"
  },
  {
    "label": "GetBoneWeightByteSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetBoneWeightByteSize()"
  },
  {
    "label": "GetBoneIndexAndWeightByteSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetBoneIndexAndWeightByteSize()"
  },
  {
    "label": "GetConstantInfluencesVertexStride()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetConstantInfluencesVertexStride()"
  },
  {
    "label": "GetConstantInfluencesBoneWeightsOffset()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetConstantInfluencesBoneWeightsOffset()"
  },
  {
    "label": "Use16BitBoneIndex()",
    "kind": "Method",
    "detail": "Function (bUse16BitBoneIndex = bInUse16BitBoneIndex ; } bool)",
    "insertText": "Use16BitBoneIndex()"
  },
  {
    "label": "Use16BitBoneWeight()",
    "kind": "Method",
    "detail": "Function (bUse16BitBoneWeight = bInUse16BitBoneWeight ; } bool)",
    "insertText": "Use16BitBoneWeight()"
  },
  {
    "label": "GetRigidWeightBone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRigidWeightBone(uint32 VertexWeightOffset, uint32 VertexInfluenceCount, int32& OutBoneIndex)"
  },
  {
    "label": "GetBoneIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBoneIndex(uint32 VertexWeightOffset, uint32 VertexInfluenceCount, uint32 InfluenceIndex)"
  },
  {
    "label": "SetBoneIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneIndex(uint32 VertexWeightOffset, uint32 VertexInfluenceCount, uint32 InfluenceIndex, uint32 BoneIndex)"
  },
  {
    "label": "GetBoneWeight()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetBoneWeight(uint32 VertexWeightOffset, uint32 VertexInfluenceCount, uint32 InfluenceIndex)"
  },
  {
    "label": "SetBoneWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneWeight(uint32 VertexWeightOffset, uint32 VertexInfluenceCount, uint32 InfluenceIndex, uint16 BoneWeight)"
  },
  {
    "label": "ResetVertexBoneWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetVertexBoneWeights(uint32 VertexWeightOffset, uint32 VertexInfluenceCount)"
  },
  {
    "label": "CopyDataFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDataFromBuffer(const uint8* InSkinWeightData, uint32 InNumVertices)"
  },
  {
    "label": "CreateRHIBuffer()",
    "kind": "Method",
    "detail": "Function (FBufferRHIRef)",
    "insertText": "CreateRHIBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "IsWeightDataValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsWeightDataValid()"
  },
  {
    "label": "GetWeightData()",
    "kind": "Method",
    "detail": "Function (const uint8*)",
    "insertText": "GetWeightData()"
  },
  {
    "label": "GetPixelFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetPixelFormat()"
  },
  {
    "label": "FSkinWeightVertexBuffer()",
    "kind": "Method",
    "detail": "Function (} ; class FSkinWeightVertexBuffer { public :)",
    "insertText": "FSkinWeightVertexBuffer()"
  },
  {
    "label": "FSkinWeightVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkinWeightVertexBuffer(const FSkinWeightVertexBuffer& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSkinWeightVertexBuffer&)",
    "insertText": "operator(const FSkinWeightVertexBuffer& Other)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "Init(const TArray<FSoftSkinVertex>& InVertices)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# endif FSkinWeightVertexBuffer&)",
    "insertText": "operator(const TArray<FSkinWeightInfo>& InWeights)"
  },
  {
    "label": "GetSkinWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetSkinWeights(TArray<FSkinWeightInfo>& OutVertices)"
  },
  {
    "label": "GetVertexSkinWeights()",
    "kind": "Method",
    "detail": "Function (FSkinWeightInfo)",
    "insertText": "GetVertexSkinWeights(uint32 VertexIndex)"
  },
  {
    "label": "CopySkinWeightRawDataFromBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySkinWeightRawDataFromBuffer(const uint8* InSkinWeightData, uint32 InNumVertices)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FSkinWeightVertexBuffer& VertexBuffer)"
  },
  {
    "label": "CopyMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyMetaData(const FSkinWeightVertexBuffer& Other)"
  },
  {
    "label": "SetNeedsCPUAccess()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetNeedsCPUAccess(bool bInNeedsCPUAccess)"
  },
  {
    "label": "SetNeedsCPUAccess()",
    "kind": "Method",
    "detail": "Function (DataVertexBuffer .)",
    "insertText": "SetNeedsCPUAccess(bInNeedsCPUAccess)"
  },
  {
    "label": "SetMaxBoneInfluences()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMaxBoneInfluences(uint32 InMaxBoneInfluences)"
  },
  {
    "label": "SetMaxBoneInfluences()",
    "kind": "Method",
    "detail": "Function (DataVertexBuffer .)",
    "insertText": "SetMaxBoneInfluences(InMaxBoneInfluences)"
  },
  {
    "label": "GetMaxBoneInfluences()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetMaxBoneInfluences()"
  },
  {
    "label": "SetUse16BitBoneIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetUse16BitBoneIndex(bool bInUse16BitBoneIndex)"
  },
  {
    "label": "SetUse16BitBoneIndex()",
    "kind": "Method",
    "detail": "Function (DataVertexBuffer .)",
    "insertText": "SetUse16BitBoneIndex(bInUse16BitBoneIndex)"
  },
  {
    "label": "SetUse16BitBoneWeight()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetUse16BitBoneWeight(bool bInUse16BitBoneWeight)"
  },
  {
    "label": "SetUse16BitBoneWeight()",
    "kind": "Method",
    "detail": "Function (DataVertexBuffer .)",
    "insertText": "SetUse16BitBoneWeight(bInUse16BitBoneWeight)"
  },
  {
    "label": "GetBoneIndexByteSize()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetBoneIndexByteSize()"
  },
  {
    "label": "GetVariableBonesPerVertex()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetVariableBonesPerVertex()"
  },
  {
    "label": "GetDataVertexBuffer()",
    "kind": "Method",
    "detail": "Function (} FSkinWeightDataVertexBuffer*)",
    "insertText": "GetDataVertexBuffer()"
  },
  {
    "label": "GetBoneInfluenceType()",
    "kind": "Method",
    "detail": "Function (GPUSkinBoneInfluenceType)",
    "insertText": "GetBoneInfluenceType()"
  },
  {
    "label": "GetVertexInfluenceOffsetCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexInfluenceOffsetCount(uint32 VertexIndex, uint32& VertexWeightOffset, uint32& VertexInfluenceCount)"
  },
  {
    "label": "GetRigidWeightBone()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRigidWeightBone(uint32 VertexIndex, int32& OutBoneIndex)"
  },
  {
    "label": "GetBoneIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBoneIndex(uint32 VertexIndex, uint32 InfluenceIndex)"
  },
  {
    "label": "SetBoneIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneIndex(uint32 VertexIndex, uint32 InfluenceIndex, uint32 BoneIndex)"
  },
  {
    "label": "GetBoneWeight()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetBoneWeight(uint32 VertexIndex, uint32 InfluenceIndex)"
  },
  {
    "label": "SetBoneWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBoneWeight(uint32 VertexIndex, uint32 InfluenceIndex, uint16 BoneWeight)"
  },
  {
    "label": "ResetVertexBoneWeights()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetVertexBoneWeights(uint32 VertexIndex)"
  },
  {
    "label": "RebuildLookupVertexBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RebuildLookupVertexBuffer()"
  },
  {
    "label": "SetOwnerName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwnerName(const FName& OwnerName)"
  },
  {
    "label": "BeginInitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginInitResources()"
  },
  {
    "label": "BeginReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginReleaseResources()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(const FSkinWeightRHIInfo& RHIInfo, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (DataVertexBuffer .)",
    "insertText": "InitRHIForStreaming(RHIInfo.DataVertexBufferRHI, Batcher)"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (LookupVertexBuffer .)",
    "insertText": "InitRHIForStreaming(RHIInfo.LookupVertexBufferRHI, Batcher)"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (DataVertexBuffer .)",
    "insertText": "ReleaseRHIForStreaming(Batcher)"
  }
]