[
  {
    "label": "MatchMakingKeyValuePair_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MatchMakingKeyValuePair_t"
  },
  {
    "label": "EMatchMakingServerResponse",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMatchMakingServerResponse"
  },
  {
    "label": "servernetadr_t",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "servernetadr_t"
  },
  {
    "label": "gameserveritem_t",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "gameserveritem_t"
  },
  {
    "label": "MatchMakingKeyValuePair_t()",
    "kind": "Method",
    "detail": "Function (# ifndef MATCHMAKINGTYPES_H # define MATCHMAKINGTYPES_H # include<stdio . h> # include<string . h> const int k_cbMaxGameServerGameDir = 3 2 ; const int k_cbMaxGameServerMapName = 3 2 ; const int k_cbMaxGameServerGameDescription = 6 4 ; const int k_cbMaxGameServerName = 6 4 ; const int k_cbMaxGameServerTags = 1 2 8 ; const int k_cbMaxGameServerGameData = 2 0 4 8 ; struct MatchMakingKeyValuePair_t {)",
    "insertText": "MatchMakingKeyValuePair_t()"
  },
  {
    "label": "MatchMakingKeyValuePair_t()",
    "kind": "Method",
    "detail": "Function (m_szKey [ 0 ] = m_szValue [ 0 ] = 0 ; })",
    "insertText": "MatchMakingKeyValuePair_t(const char *pchKey, const char *pchValue)"
  },
  {
    "label": "strncpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "strncpy(m_szKey, pchKey, sizeof(m_szKey))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (m_szKey [)",
    "insertText": "sizeof(m_szKey)"
  },
  {
    "label": "strncpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "strncpy(m_szValue, pchValue, sizeof(m_szValue))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (m_szValue [)",
    "insertText": "sizeof(m_szValue)"
  },
  {
    "label": "servernetadr_t()",
    "kind": "Method",
    "detail": "Function (} char m_szKey [ 2 5 6 ] ; char m_szValue [ 2 5 6 ] ; } ; enum EMatchMakingServerResponse { eServerResponded = 0,eServerFailedToRespond,eNoServersListedOnMasterServer } ; class servernetadr_t { public :)",
    "insertText": "servernetadr_t() : m_usConnectionPort( 0 ), m_usQueryPort( 0 ), m_unIP( 0)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init(unsigned int ip, uint16 usQueryPort, uint16 usConnectionPort)"
  },
  {
    "label": "GetQueryPort()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetQueryPort()"
  },
  {
    "label": "SetQueryPort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQueryPort(uint16 usPort)"
  },
  {
    "label": "GetConnectionPort()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetConnectionPort()"
  },
  {
    "label": "SetConnectionPort()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetConnectionPort(uint16 usPort)"
  },
  {
    "label": "GetIP()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetIP()"
  },
  {
    "label": "SetIP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIP(uint32 unIP)"
  },
  {
    "label": "GetConnectionAddressString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetConnectionAddressString()"
  },
  {
    "label": "GetQueryAddressString()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetQueryAddressString()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const servernetadr_t &netadr)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "operator(const servernetadr_t &that)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (m_usConnectionPort = that . m_usConnectionPort ; m_usQueryPort = that . m_usQueryPort ; m_unIP = that . m_unIP ; } private : const char*)",
    "insertText": "ToString(uint32 unIP, uint16 usPort)"
  },
  {
    "label": "ipByte()",
    "kind": "Method",
    "detail": "Function (char s [ 4 ] [ 6 4 ] ; int nBuf = 0 ; unsigned char*)",
    "insertText": "ipByte(unsigned char *)"
  },
  {
    "label": "snprintf()",
    "kind": "Method",
    "detail": "Function (# ifdef VALVE_BIG_ENDIAN)",
    "insertText": "snprintf(s[nBuf], sizeof( s[nBuf] ), \"%u.%u.%u.%u:%i\", (int)(ipByte[0]), (int)(ipByte[1]), (int)(ipByte[2]), (int)(ipByte[3]), usPort)"
  },
  {
    "label": "snprintf()",
    "kind": "Method",
    "detail": "Function (# else)",
    "insertText": "snprintf(s[nBuf], sizeof( s[nBuf] ), \"%u.%u.%u.%u:%i\", (int)(ipByte[3]), (int)(ipByte[2]), (int)(ipByte[1]), (int)(ipByte[0]), usPort)"
  },
  {
    "label": "nBuf()",
    "kind": "Method",
    "detail": "Function (# endif const char* pchRet = s [ nBuf ] ; + + nBuf ;)",
    "insertText": "nBuf((sizeof(s)/sizeof(s[0])))"
  },
  {
    "label": "gameserveritem_t()",
    "kind": "Method",
    "detail": "Function (} class gameserveritem_t { public :)",
    "insertText": "gameserveritem_t()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "GetName()"
  },
  {
    "label": "SetName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetName(const char *pName)"
  },
  {
    "label": "strncpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "strncpy(m_szServerName, pName, sizeof( m_szServerName ))"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (m_szServerName [)",
    "insertText": "sizeof(m_szServerName)"
  }
]