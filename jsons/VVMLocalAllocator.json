[
  {
    "label": "FSubspace",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSubspace"
  },
  {
    "label": "alignas",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "alignas"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "alignas()",
    "kind": "Method",
    "detail": "Function (class FSubspace ; struct)",
    "insertText": "alignas(PAS_LOCAL_ALLOCATOR_ALIGNMENT)"
  },
  {
    "label": "FLocalAllocator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLocalAllocator()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(FSubspace* Subspace, size_t Size)"
  },
  {
    "label": "verse_local_allocator_construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_local_allocator_construct(reinterpret_cast<pas_local_allocator*>(this), reinterpret_cast<pas_heap*>(Subspace), Size, sizeof(FLocalAllocator))"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Stop()"
  },
  {
    "label": "verse_local_allocator_stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_local_allocator_stop(reinterpret_cast<pas_local_allocator*>(this))"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (} std::byte*)",
    "insertText": "Allocate()"
  },
  {
    "label": "TryAllocate()",
    "kind": "Method",
    "detail": "Function (} std::byte*)",
    "insertText": "TryAllocate()"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (} private : # if)",
    "insertText": "defined(__clang__)"
  }
]