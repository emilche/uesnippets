[
  {
    "label": "FLinuxConsoleOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLinuxConsoleOutputDevice"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FLinuxConsoleOutputDevice()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / OutputDeviceConsole . h \" class FLinuxConsoleOutputDevice : public FOutputDeviceConsole { private : bool bOverrideColorSet ; bool bOutputtingToTerminal ; bool bIsWindowShown ; bool bIsStdoutSet ; public :)",
    "insertText": "FLinuxConsoleOutputDevice()"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Show(bool bShowWindow)"
  },
  {
    "label": "IsShown()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShown()"
  },
  {
    "label": "IsAttached()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAttached()"
  },
  {
    "label": "CanBeUsedOnPanicThread()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeUsedOnPanicThread()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(const TCHAR* Data, ELogVerbosity::Type Verbosity, const class FName& Category)"
  }
]