[
  {
    "label": "MachObjectWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachObjectWriter"
  },
  {
    "label": "MCMachObjectTargetWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MCMachObjectTargetWriter"
  },
  {
    "label": "MachObjectWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachObjectWriter"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "MachSymbolData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MachSymbolData"
  },
  {
    "label": "RelAndSymbol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RelAndSymbol"
  },
  {
    "label": "MCMachObjectTargetWriter()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "MCMachObjectTargetWriter(bool Is64Bit_, uint32_t CPUType_,\n                           uint32_t CPUSubtype_)"
  },
  {
    "label": "isFixupKindPCRel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isFixupKindPCRel(const MCAssembler &Asm, unsigned Kind)"
  },
  {
    "label": "doesSymbolRequireExternRelocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "doesSymbolRequireExternRelocation(const MCSymbol &S)"
  },
  {
    "label": "writeHeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeHeader(unsigned NumLoadCommands, unsigned LoadCommandsSize,\n                   bool SubsectionsViaSymbols)"
  },
  {
    "label": "writeSegmentLoadCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeSegmentLoadCommand(unsigned NumSections, uint64_t VMSize,\n                               uint64_t SectionDataStartOffset,\n                               uint64_t SectionDataSize)"
  },
  {
    "label": "writeSection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeSection(const MCAssembler &Asm, const MCAsmLayout &Layout,\n                    const MCSection &Sec, uint64_t FileOffset,\n                    uint64_t RelocationsStart, unsigned NumRelocations)"
  },
  {
    "label": "writeSymtabLoadCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeSymtabLoadCommand(uint32_t SymbolOffset, uint32_t NumSymbols,\n                              uint32_t StringTableOffset,\n                              uint32_t StringTableSize)"
  },
  {
    "label": "writeDysymtabLoadCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeDysymtabLoadCommand(\n      uint32_t FirstLocalSymbol, uint32_t NumLocalSymbols,\n      uint32_t FirstExternalSymbol, uint32_t NumExternalSymbols,\n      uint32_t FirstUndefinedSymbol, uint32_t NumUndefinedSymbols,\n      uint32_t IndirectSymbolOffset, uint32_t NumIndirectSymbols)"
  },
  {
    "label": "writeNlist()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeNlist(MachSymbolData &MSD, const MCAsmLayout &Layout)"
  },
  {
    "label": "writeLinkeditLoadCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeLinkeditLoadCommand(uint32_t Type, uint32_t DataOffset,\n                                uint32_t DataSize)"
  },
  {
    "label": "writeLinkerOptionsLoadCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeLinkerOptionsLoadCommand(const std::vector<std::string> &Options)"
  },
  {
    "label": "P()",
    "kind": "Method",
    "detail": "Function (RelAndSymbol)",
    "insertText": "P(RelSymbol, MRE)"
  },
  {
    "label": "recordScatteredRelocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recordScatteredRelocation(const MCAssembler &Asm,\n                                 const MCAsmLayout &Layout,\n                                 const MCFragment *Fragment,\n                                 const MCFixup &Fixup, MCValue Target,\n                                 unsigned Log2Size, uint64_t &FixedValue)"
  },
  {
    "label": "recordTLVPRelocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "recordTLVPRelocation(const MCAssembler &Asm, const MCAsmLayout &Layout,\n                            const MCFragment *Fragment, const MCFixup &Fixup,\n                            MCValue Target, uint64_t &FixedValue)"
  },
  {
    "label": "bindIndirectSymbols()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "bindIndirectSymbols(MCAssembler &Asm)"
  },
  {
    "label": "computeSymbolTable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeSymbolTable(MCAssembler &Asm,\n                          std::vector<MachSymbolData> &LocalSymbolData,\n                          std::vector<MachSymbolData> &ExternalSymbolData,\n                          std::vector<MachSymbolData> &UndefinedSymbolData)"
  },
  {
    "label": "computeSectionAddresses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "computeSectionAddresses(const MCAssembler &Asm,\n                               const MCAsmLayout &Layout)"
  }
]