[
  {
    "label": "RtpPacketPacer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpPacketPacer"
  },
  {
    "label": "RtpPacketPacer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_PACING_RTP_PACKET_PACER_H_ # define MODULES_PACING_RTP_PACKET_PACER_H_ # include<stdint . h> # include<vector> # include \" absl / types / optional . h \" # include \" api / units / data_rate . h \" # include \" api / units / data_size . h \" # include \" api / units / time_delta . h \" # include \" api / units / timestamp . h \" # include \" modules / rtp_rtcp / include / rtp_packet_sender . h \" namespace webrtc { class RtpPacketPacer { public : ~)",
    "insertText": "RtpPacketPacer()"
  },
  {
    "label": "CreateProbeClusters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateProbeClusters(std::vector<ProbeClusterConfig> probe_cluster_configs)"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "Resume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Resume()"
  },
  {
    "label": "SetCongested()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCongested(bool congested)"
  },
  {
    "label": "SetPacingRates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPacingRates(DataRate pacing_rate, DataRate padding_rate)"
  },
  {
    "label": "OldestPacketWaitTime()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "OldestPacketWaitTime()"
  },
  {
    "label": "QueueSizeData()",
    "kind": "Method",
    "detail": "Function (DataSize)",
    "insertText": "QueueSizeData()"
  },
  {
    "label": "FirstSentPacketTime()",
    "kind": "Method",
    "detail": "Function (absl::optional<Timestamp>)",
    "insertText": "FirstSentPacketTime()"
  },
  {
    "label": "ExpectedQueueTime()",
    "kind": "Method",
    "detail": "Function (TimeDelta)",
    "insertText": "ExpectedQueueTime()"
  },
  {
    "label": "SetQueueTimeLimit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQueueTimeLimit(TimeDelta limit)"
  },
  {
    "label": "SetAccountForAudioPackets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAccountForAudioPackets(bool account_for_audio)"
  },
  {
    "label": "SetIncludeOverhead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludeOverhead()"
  },
  {
    "label": "SetTransportOverhead()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransportOverhead(DataSize overhead_per_packet)"
  }
]