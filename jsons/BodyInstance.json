[
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "UPhysicalMaterialMask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterialMask"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "FCollisionNotifyInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionNotifyInfo"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "FConstraintInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintInstance"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FRigidBodyState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRigidBodyState"
  },
  {
    "label": "FShapeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShapeData"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FShapeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FShapeData"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FInitBodySpawnParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitBodySpawnParams"
  },
  {
    "label": "necessary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "necessary"
  },
  {
    "label": "FInitBodiesHelperBaseInternal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitBodiesHelperBaseInternal"
  },
  {
    "label": "TInitBodiesHelperBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TInitBodiesHelperBase"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FInitBodiesHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitBodiesHelper"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FInitBodiesHelperWithData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitBodiesHelperWithData"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FCollisionResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponse"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRigidBodyHandle_Internal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRigidBodyHandle_Internal"
  },
  {
    "label": "FBodyInstanceAsyncPhysicsTickHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstanceAsyncPhysicsTickHandle"
  },
  {
    "label": "FBodyInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstance"
  },
  {
    "label": "ECollisionChannel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ECollisionChannel"
  },
  {
    "label": "FCollisionResponseContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseContainer"
  },
  {
    "label": "FCollisionResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponse"
  },
  {
    "label": "FWalkableSlopeOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWalkableSlopeOverride"
  },
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FWalkableSlopeOverride",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWalkableSlopeOverride"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "for"
  },
  {
    "label": "FBodyInstanceDelegates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstanceDelegates"
  },
  {
    "label": "FBodyInstanceDelegatesPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstanceDelegatesPtr"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "if"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "if"
  },
  {
    "label": "UPhysicalMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicalMaterial"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FHitResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHitResult"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "FCollisionShape",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionShape"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FComponentQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FComponentQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FWeldInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWeldInfo"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "UCollisionProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UCollisionProfile"
  },
  {
    "label": "FBodyInstanceCustomization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBodyInstanceCustomization"
  },
  {
    "label": "FUpdateCollisionResponseHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateCollisionResponseHelper"
  },
  {
    "label": "FBodySetupDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBodySetupDetails"
  },
  {
    "label": "Chaos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Chaos"
  },
  {
    "label": "FBodyInstanceCustomizationHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBodyInstanceCustomizationHelper"
  },
  {
    "label": "FFoliageTypeCustomizationHelpers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFoliageTypeCustomizationHelpers"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FBodyInstanceEditorHelpers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBodyInstanceEditorHelpers"
  },
  {
    "label": "FOverlapResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlapResult"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FillInlineShapeArray_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FillInlineShapeArray_AssumesLocked(PhysicsInterfaceTypes::FInlineShapeArray& Array, const FPhysicsActorHandle& Actor)"
  },
  {
    "label": "FInitBodySpawnParams()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FInitBodySpawnParams(const UPrimitiveComponent* PrimComp)"
  },
  {
    "label": "FInitBodySpawnParams()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FInitBodySpawnParams(bool bInStaticPhysics, bool bInPhysicsTypeDeterminesSimulation)"
  },
  {
    "label": "SetBodyInstanceExternalCollisionProfileBodySetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBodyInstanceExternalCollisionProfileBodySetup(FBodyInstance* BodyInstance, UBodySetup* ExternalCollisionProfileBodySetup)"
  },
  {
    "label": "UpdateBodyInstanceSolverAsyncDeltaTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateBodyInstanceSolverAsyncDeltaTime(FBodyInstance* BodyInstance)"
  },
  {
    "label": "TInitBodiesHelperBase()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "TInitBodiesHelperBase(TArray<FBodyInstance*, InAllocatorType>& InBodies, TArray<FTransform, InAllocatorType>& InTransforms,\n\t\tclass UBodySetup* InBodySetup, class UPrimitiveComponent* InPrimitiveComp, FPhysScene* InRBScene, \n\t\tconst FInitBodySpawnParams& InSpawnParams, FPhysicsAggregateHandle InAggregate)"
  },
  {
    "label": "TInitBodiesHelperBase()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "TInitBodiesHelperBase(TArray<FBodyInstance*, InAllocatorType>& InBodies, TArray<FTransform, InAllocatorType>& InTransforms,\n\t\tclass UBodySetup* InBodySetup, class UPrimitiveComponent* InComponent, UObject* InSourceObject, FPhysScene* InRBScene,\n\t\tconst FInitBodySpawnParams& InSpawnParams, FPhysicsAggregateHandle InAggregate)"
  },
  {
    "label": "CreateShapesAndActors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateShapesAndActors()"
  },
  {
    "label": "InitBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBodies()"
  },
  {
    "label": "UpdateSimulatingAndBlendWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSimulatingAndBlendWeight()"
  },
  {
    "label": "FCollisionResponse()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCollisionResponse()"
  },
  {
    "label": "FCollisionResponse()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FCollisionResponse(ECollisionResponse DefaultResponse)"
  },
  {
    "label": "SetResponse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResponse(ECollisionChannel Channel, ECollisionResponse NewResponse)"
  },
  {
    "label": "SetAllChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetAllChannels(ECollisionResponse NewResponse)"
  },
  {
    "label": "ReplaceChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceChannels(ECollisionResponse OldResponse, ECollisionResponse NewResponse)"
  },
  {
    "label": "SetCollisionResponseContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetCollisionResponseContainer(const FCollisionResponseContainer& InResponseToChannels)"
  },
  {
    "label": "SetResponsesArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResponsesArray(const TArray<FResponseChannel>& InChannelResponses)"
  },
  {
    "label": "UpdateResponseContainerFromArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateResponseContainerFromArray()"
  },
  {
    "label": "RemoveReponseFromArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveReponseFromArray(ECollisionChannel Channel)"
  },
  {
    "label": "AddReponseToArray()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddReponseToArray(ECollisionChannel Channel, ECollisionResponse Response)"
  },
  {
    "label": "UpdateArrayFromResponseContainer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateArrayFromResponseContainer()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "IsValid()"
  },
  {
    "label": "SetSolverAsyncDeltaTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSolverAsyncDeltaTime(const float NewSolverAsyncDeltaTime)"
  },
  {
    "label": "UpdateSolverAsyncDeltaTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSolverAsyncDeltaTime()"
  },
  {
    "label": "UpdateInterpolateWhenSubStepping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInterpolateWhenSubStepping()"
  },
  {
    "label": "SetMassOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMassOverride(float MassInKG, bool bNewOverrideMass = true)"
  },
  {
    "label": "GetRigidBodyState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRigidBodyState(FRigidBodyState& OutState)"
  },
  {
    "label": "UseExternalCollisionProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UseExternalCollisionProfile(UBodySetup* InExternalCollisionProfileBodySetup)"
  },
  {
    "label": "ClearExternalCollisionProfile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearExternalCollisionProfile()"
  },
  {
    "label": "SetDOFLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDOFLock(EDOFMode::Type NewDOFMode)"
  },
  {
    "label": "CreateDOFLock()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDOFLock()"
  },
  {
    "label": "ResolveDOFMode()",
    "kind": "Method",
    "detail": "Function (EDOFMode::Type)",
    "insertText": "ResolveDOFMode(EDOFMode::Type DOFMode)"
  },
  {
    "label": "FBodyInstance()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FBodyInstance()"
  },
  {
    "label": "LoadProfileData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadProfileData(bool bVerifyProfile)"
  },
  {
    "label": "InitBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBody(UBodySetup* Setup, const FTransform& Transform, UPrimitiveComponent* PrimComp, FPhysScene* InRBScene, const FInitBodySpawnParams& SpawnParams)"
  },
  {
    "label": "InitBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBody(UBodySetup* Setup, const FTransform& Transform, \n\t\tUPrimitiveComponent* PrimComp, UObject* SourceObject, \n\t\tFPhysScene* InRBScene, const FInitBodySpawnParams& SpawnParams)"
  },
  {
    "label": "ValidateTransform()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateTransform(const FTransform &Transform, const FString& DebugName, const UBodySetup* Setup)"
  },
  {
    "label": "InitStaticBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitStaticBodies(const TArray<FBodyInstance*>& Bodies, const TArray<FTransform>& Transforms, UBodySetup* BodySetup, class UPrimitiveComponent* PrimitiveComp, FPhysScene* InRBScene)"
  },
  {
    "label": "InitStaticBodies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitStaticBodies(TArray<FBodyInstance*>&& Bodies, TArray<FTransform>&& Transforms, UBodySetup* BodySetup, class UPrimitiveComponent* PrimitiveComp, FPhysScene* InRBScene)"
  },
  {
    "label": "InitDynamicProperties_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitDynamicProperties_AssumesLocked()"
  },
  {
    "label": "BuildBodyCollisionFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildBodyCollisionFlags(FBodyCollisionFlags& OutFlags, ECollisionEnabled::Type UseCollisionEnabled, bool bUseComplexAsSimple)"
  },
  {
    "label": "TermBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TermBody(bool bNeverDeferRelease = false)"
  },
  {
    "label": "Weld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Weld(FBodyInstance* Body, const FTransform& RelativeTM)"
  },
  {
    "label": "UnWeld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnWeld(FBodyInstance* Body)"
  },
  {
    "label": "ApplyWeldOnChildren()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyWeldOnChildren()"
  },
  {
    "label": "PostShapeChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostShapeChange()"
  },
  {
    "label": "UpdateBodyScale()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateBodyScale(const FVector& InScale3D, bool bForceUpdate = false)"
  },
  {
    "label": "UpdateTriMeshVertices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTriMeshVertices(const TArray<FVector> & NewPositions)"
  },
  {
    "label": "SetMassSpaceLocal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMassSpaceLocal(const FTransform& NewMassSpaceLocalTM)"
  },
  {
    "label": "DrawCOMPosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawCOMPosition(class FPrimitiveDrawInterface* PDI, float COMRenderSize, const FColor& COMRenderColor)"
  },
  {
    "label": "CopyBodyInstancePropertiesFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyBodyInstancePropertiesFrom(const FBodyInstance* FromInst)"
  },
  {
    "label": "CopyRuntimeBodyInstancePropertiesFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyRuntimeBodyInstancePropertiesFrom(const FBodyInstance* FromInst)"
  },
  {
    "label": "GetComplexPhysicalMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComplexPhysicalMaterials(const FBodyInstance* BodyInstance, TWeakObjectPtr<UPrimitiveComponent> Owner, TArray<UPhysicalMaterial*>& OutPhysMaterials, TArray<FPhysicalMaterialMaskParams>* OutPhysMaterialMasks = nullptr)"
  },
  {
    "label": "SetWalkableSlopeOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWalkableSlopeOverride(const FWalkableSlopeOverride& NewOverride, bool bNewOverideSetting = true)"
  },
  {
    "label": "SetInertiaConditioningEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInertiaConditioningEnabled(bool bEnabled)"
  },
  {
    "label": "SetInstanceSimulatePhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceSimulatePhysics(bool bSimulate, bool bMaintainPhysicsBlending=false, bool bPreserveExistingAttachment = false)"
  },
  {
    "label": "UpdateInstanceSimulatePhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateInstanceSimulatePhysics()"
  },
  {
    "label": "WakeInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WakeInstance()"
  },
  {
    "label": "PutInstanceToSleep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PutInstanceToSleep()"
  },
  {
    "label": "AddCustomPhysics()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCustomPhysics(FCalculateCustomPhysics& CalculateCustomPhysics)"
  },
  {
    "label": "ClearForces()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearForces(bool bAllowSubstepping = true)"
  },
  {
    "label": "SetOneWayInteraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOneWayInteraction(bool InOneWayInteraction = true)"
  },
  {
    "label": "ClearTorques()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearTorques(bool bAllowSubstepping = true)"
  },
  {
    "label": "SetLinearVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLinearVelocity(const FVector& NewVel, bool bAddToCurrent, bool bAutoWake = true)"
  },
  {
    "label": "SetAngularVelocityInRadians()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAngularVelocityInRadians(const FVector& NewAngVel, bool bAddToCurrent, bool bAutoWake = true)"
  },
  {
    "label": "SetMaxAngularVelocityInRadians()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxAngularVelocityInRadians(float NewMaxAngVel, bool bAddToCurrent, bool bUpdateOverrideMaxAngularVelocity = true)"
  },
  {
    "label": "SetOverrideMaxDepenetrationVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverrideMaxDepenetrationVelocity(bool bInEnabled)"
  },
  {
    "label": "SetMaxDepenetrationVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxDepenetrationVelocity(float MaxVelocity)"
  },
  {
    "label": "SetInstanceNotifyRBCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInstanceNotifyRBCollision(bool bNewNotifyCollision)"
  },
  {
    "label": "SetEnableGravity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnableGravity(bool bGravityEnabled)"
  },
  {
    "label": "SetGravityGroupIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGravityGroupIndex(int32 NewGravityGroupIndex)"
  },
  {
    "label": "SetUpdateKinematicFromSimulation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUpdateKinematicFromSimulation(bool bUpdateKinematicFromSimulation)"
  },
  {
    "label": "SetContactModification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContactModification(bool bNewContactModification)"
  },
  {
    "label": "SetSmoothEdgeCollisionsEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSmoothEdgeCollisionsEnabled(bool bNewSmoothEdgeCollisions)"
  },
  {
    "label": "SetUseCCD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseCCD(bool bInUseCCD)"
  },
  {
    "label": "SetUseMACD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUseMACD(bool bInUseMACD)"
  },
  {
    "label": "SetPositionSolverIterationCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPositionSolverIterationCount(uint8 PositionSolverIterationCountIn)"
  },
  {
    "label": "SetVelocitySolverIterationCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVelocitySolverIterationCount(uint8 VelocitySolverIterationCountIn)"
  },
  {
    "label": "SetProjectionSolverIterationCount()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProjectionSolverIterationCount(uint8 ProjectionSolverIterationCountIn)"
  },
  {
    "label": "SetPhysicsDisabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysicsDisabled(bool bSetDisabled)"
  },
  {
    "label": "SetBodyTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBodyTransform(const FTransform& NewTransform, ETeleportType Teleport, bool bAutoWake = true)"
  },
  {
    "label": "SetPhysMaterialOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPhysMaterialOverride(class UPhysicalMaterial* NewPhysMaterial)"
  },
  {
    "label": "SetContactReportForceThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContactReportForceThreshold(float Threshold)"
  },
  {
    "label": "SetResponseToChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResponseToChannel(ECollisionChannel Channel, ECollisionResponse NewResponse)"
  },
  {
    "label": "SetResponseToAllChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResponseToAllChannels(ECollisionResponse NewResponse)"
  },
  {
    "label": "ReplaceResponseToChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReplaceResponseToChannels(ECollisionResponse OldResponse, ECollisionResponse NewResponse)"
  },
  {
    "label": "SetResponseToChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetResponseToChannels(const FCollisionResponseContainer& NewResponses)"
  },
  {
    "label": "SetShapeResponseToChannels()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetShapeResponseToChannels(const int32 ShapeIndex, const FCollisionResponseContainer& NewResponses)"
  },
  {
    "label": "SetObjectType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetObjectType(ECollisionChannel Channel)"
  },
  {
    "label": "SetCollisionEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollisionEnabled(ECollisionEnabled::Type NewType, bool bUpdatePhysicsFilterData = true)"
  },
  {
    "label": "SetShapeCollisionEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShapeCollisionEnabled(const int32 ShapeIndex, ECollisionEnabled::Type NewType, bool bUpdatePhysicsFilterData = true)"
  },
  {
    "label": "SetCollisionProfileNameDeferred()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollisionProfileNameDeferred(FName InCollisionProfileName)"
  },
  {
    "label": "SetCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCollisionProfileName(FName InCollisionProfileName)"
  },
  {
    "label": "SetMaskFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaskFilter(FMaskFilter InMaskFilter)"
  },
  {
    "label": "SetMassScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMassScale(float InMassScale=1.f)"
  },
  {
    "label": "UpdateMassProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMassProperties()"
  },
  {
    "label": "UpdateDampingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDampingProperties()"
  },
  {
    "label": "UpdatePhysicalMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicalMaterials()"
  },
  {
    "label": "ApplyMaterialToShape_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMaterialToShape_AssumesLocked(const FPhysicsShapeHandle& InShape, UPhysicalMaterial* SimplePhysMat, const TArrayView<UPhysicalMaterial*>& ComplexPhysMats, const TArrayView<FPhysicalMaterialMaskParams>* ComplexPhysMatMasks = nullptr)"
  },
  {
    "label": "ApplyMaterialToInstanceShapes_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyMaterialToInstanceShapes_AssumesLocked(UPhysicalMaterial* SimplePhysMat, TArray<UPhysicalMaterial*>& ComplexPhysMats, const TArrayView<FPhysicalMaterialMaskParams>& ComplexPhysMatMasks)"
  },
  {
    "label": "UpdatePhysicsFilterData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePhysicsFilterData()"
  },
  {
    "label": "AddRadialImpulseToBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRadialImpulseToBody(const FVector& Origin, float Radius, float Strength, uint8 Falloff, bool bVelChange = false)"
  },
  {
    "label": "AddRadialForceToBody()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRadialForceToBody(const FVector& Origin, float Radius, float Strength, uint8 Falloff, bool bAccelChange = false, bool bAllowSubstepping = true)"
  },
  {
    "label": "FixupData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupData(class UObject* Loader)"
  },
  {
    "label": "ApplyDeferredCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyDeferredCollisionProfileName()"
  },
  {
    "label": "UpdateOneWayInteraction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOneWayInteraction()"
  },
  {
    "label": "UpdateMaxDepenetrationVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMaxDepenetrationVelocity()"
  },
  {
    "label": "InvalidateCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvalidateCollisionProfileName()"
  },
  {
    "label": "SetWeldedBodyTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetWeldedBodyTransform(FBodyInstance* TheirBody, const FTransform& NewTransform)"
  },
  {
    "label": "IsValidCollisionProfileName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidCollisionProfileName(FName InCollisionProfileName)"
  },
  {
    "label": "UpdateDebugRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDebugRendering()"
  },
  {
    "label": "EnsureConsistentMobilitySimulationSettingsOnPostEditChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnsureConsistentMobilitySimulationSettingsOnPostEditChange(UPrimitiveComponent* Component, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OverlapTestForBodiesImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "OverlapTestForBodiesImpl(Position, Rotation, Bodies, bTraceComplex)"
  },
  {
    "label": "OverlapTestForBodiesImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "OverlapTestForBodiesImpl(Position, Rotation, InlineArray, bTraceComplex)"
  }
]