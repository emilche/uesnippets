[
  {
    "label": "GLFramebuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GLFramebuffer"
  },
  {
    "label": "MX_RENDERGLSL_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MX_RENDERGLSL_API"
  },
  {
    "label": "create()",
    "kind": "Method",
    "detail": "Function (# ifndef MATERIALX_GLFRAMEBUFFER_H # define MATERIALX_GLFRAMEBUFFER_H # include<MaterialXRenderGlsl / Export . h> # include<MaterialXRender / ImageHandler . h> MATERIALX_NAMESPACE_BEGIN class GLFramebuffer ; using GLFramebufferPtr = std::shared_ptr<GLFramebuffer> ; class GLFramebuffer { public : GLFramebufferPtr)",
    "insertText": "create(unsigned int width, unsigned int height, unsigned int channelCount, Image::BaseType baseType)"
  },
  {
    "label": "GLFramebuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "GLFramebuffer()"
  },
  {
    "label": "resize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resize(unsigned int width, unsigned int height)"
  },
  {
    "label": "setEncodeSrgb()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setEncodeSrgb(bool encode)"
  },
  {
    "label": "getEncodeSrgb()",
    "kind": "Method",
    "detail": "Function (_encodeSrgb = encode ; } bool)",
    "insertText": "getEncodeSrgb()"
  },
  {
    "label": "unbind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unbind()"
  },
  {
    "label": "getColorTexture()",
    "kind": "Method",
    "detail": "Function (unsigned int)",
    "insertText": "getColorTexture()"
  },
  {
    "label": "blit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "blit()"
  },
  {
    "label": "GLFramebuffer()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "GLFramebuffer(unsigned int width, unsigned int height, unsigned int channelCount, Image::BaseType baseType)"
  }
]