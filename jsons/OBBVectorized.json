[
  {
    "label": "FAABBVectorized",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAABBVectorized"
  },
  {
    "label": "FOBBVectorized",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOBBVectorized"
  },
  {
    "label": "FOBBVectorized()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" namespace Chaos { class FAABBVectorized ; namespace Private { class FOBBVectorized { public :)",
    "insertText": "FOBBVectorized(const FRigidTransform3& Transform, const FVec3f& HalfExtentsIn, const FVec3f& InvScale)"
  },
  {
    "label": "IntersectAABB()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IntersectAABB(const FAABBVectorized& Bounds)"
  }
]