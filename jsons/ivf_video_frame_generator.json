[
  {
    "label": "IvfVideoFrameGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IvfVideoFrameGenerator"
  },
  {
    "label": "DecodedCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecodedCallback"
  },
  {
    "label": "IvfVideoFrameGenerator()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_TESTSUPPORT_IVF_VIDEO_FRAME_GENERATOR_H_ # define TEST_TESTSUPPORT_IVF_VIDEO_FRAME_GENERATOR_H_ # include<memory> # include<string> # include \" absl / types / optional . h \" # include \" api / sequence_checker . h \" # include \" api / test / frame_generator_interface . h \" # include \" api / video / video_codec_type . h \" # include \" api / video / video_frame . h \" # include \" api / video_codecs / video_decoder . h \" # include \" modules / video_coding / utility / ivf_file_reader . h \" # include \" rtc_base / event . h \" # include \" rtc_base / synchronization / mutex . h \" namespace webrtc { namespace test { class IvfVideoFrameGenerator : public FrameGeneratorInterface { public :)",
    "insertText": "IvfVideoFrameGenerator(const std::string& file_name)"
  },
  {
    "label": "IvfVideoFrameGenerator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "IvfVideoFrameGenerator()"
  },
  {
    "label": "NextFrame()",
    "kind": "Method",
    "detail": "Function (VideoFrameData)",
    "insertText": "NextFrame()"
  },
  {
    "label": "ChangeResolution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeResolution(size_t width, size_t height)"
  },
  {
    "label": "DecodedCallback()",
    "kind": "Method",
    "detail": "Function (private : class DecodedCallback : public DecodedImageCallback { public :)",
    "insertText": "DecodedCallback(IvfVideoFrameGenerator* reader) : reader_(reader)"
  },
  {
    "label": "Decoded()",
    "kind": "Method",
    "detail": "Function (} int32_t)",
    "insertText": "Decoded(VideoFrame& decoded_image)"
  },
  {
    "label": "Decoded()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Decoded(VideoFrame& decoded_image, int64_t decode_time_ms)"
  },
  {
    "label": "Decoded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decoded(VideoFrame& decoded_image, absl::optional<int32_t> decode_time_ms, absl::optional<uint8_t> qp)"
  },
  {
    "label": "OnFrameDecoded()",
    "kind": "Method",
    "detail": "Function (private : IvfVideoFrameGenerator* const reader_ ; } ; void)",
    "insertText": "OnFrameDecoded(const VideoFrame& decoded_frame)"
  },
  {
    "label": "CreateVideoDecoder()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<VideoDecoder>)",
    "insertText": "CreateVideoDecoder(VideoCodecType codec_type)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (DecodedCallback callback_ ; std::unique_ptr<IvfFileReader> file_reader_ ; std::unique_ptr<VideoDecoder> video_decoder_ ; size_t width_ ; size_t height_ ; Mutex lock_ ; Mutex frame_decode_lock_ ; rtc::Event next_frame_decoded_ ; absl::optional<VideoFrame> next_frame_)",
    "insertText": "RTC_GUARDED_BY(frame_decode_lock_)"
  }
]