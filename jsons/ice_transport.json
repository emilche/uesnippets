[
  {
    "label": "IceTransportWithPointer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IceTransportWithPointer"
  },
  {
    "label": "IceTransportWithPointer()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_ICE_TRANSPORT_H_ # define PC_ICE_TRANSPORT_H_ # include \" api / ice_transport_interface . h \" # include \" rtc_base / checks . h \" # include \" rtc_base / thread . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { class IceTransportWithPointer : public IceTransportInterface { public :)",
    "insertText": "IceTransportWithPointer(cricket::IceTransportInternal* internal) : creator_thread_(rtc::Thread::Current()), internal_(internal)"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(internal_)"
  },
  {
    "label": "IceTransportWithPointer()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "IceTransportWithPointer()"
  },
  {
    "label": "IceTransportWithPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "IceTransportWithPointer(const IceTransportWithPointer&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (IceTransportWithPointer&)",
    "insertText": "operator(const IceTransportWithPointer&)"
  },
  {
    "label": "internal()",
    "kind": "Method",
    "detail": "Function (cricket::IceTransportInternal*)",
    "insertText": "internal()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : const rtc::Thread* creator_thread_ ; cricket::IceTransportInternal* internal_)",
    "insertText": "RTC_GUARDED_BY(creator_thread_)"
  }
]