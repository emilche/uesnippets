[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "KISMET_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "KISMET_API"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ReviewComments . generated . h \" class FJsonObject ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "ToJson()",
    "kind": "Method",
    "detail": "Function (Review,Change,Unrecognised } ; struct FReviewCommentContext { public : TOptional<FString> File ; TOptional<int32> Version ; TOptional<TArray<FString>> Content ; TOptional<int32> LeftLine ; TOptional<int32> RightLine ; TOptional<int32> ReplyTo ; TOptional<FString> Category ; FString)",
    "insertText": "ToJson()"
  },
  {
    "label": "ToJsonObject()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonObject>)",
    "insertText": "ToJsonObject()"
  },
  {
    "label": "FromJson()",
    "kind": "Method",
    "detail": "Function (FReviewCommentContext)",
    "insertText": "FromJson(const FString& Json)"
  },
  {
    "label": "FromJson()",
    "kind": "Method",
    "detail": "Function (FReviewCommentContext)",
    "insertText": "FromJson(const TSharedPtr<FJsonObject>& JsonObject)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} ; struct FReviewTopic { public : FString ChangelistNum ; EReviewTopicType TopicType ; FString)",
    "insertText": "ToString()"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (FReviewTopic)",
    "insertText": "FromString(const FString& ReviewTopic)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FReviewTopic& Other)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (} ; class IReviewCommentAPI : public TSharedFromThis<IReviewCommentAPI> { public :)",
    "insertText": "DECLARE_DELEGATE_TwoParams(OnGetCommentsComplete, const TArray<FReviewComment>&, const FString& ) DECLARE_DELEGATE_TwoParams(OnPostCommentComplete, const FReviewComment&, const FString& ) DECLARE_DELEGATE_TwoParams(OnEditCommentComplete, const FReviewComment&, const FString& ) DECLARE_DELEGATE_TwoParams(OnGetReviewTopicForCLComplete, const FReviewTopic&, const FString& ) virtual ~IReviewCommentAPI()"
  },
  {
    "label": "GetUsername()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetUsername()"
  },
  {
    "label": "GetComments()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetComments(const FReviewTopic& Topic, const OnGetCommentsComplete& OnComplete)"
  },
  {
    "label": "PostComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostComment(FReviewComment& Comment, const OnPostCommentComplete& OnComplete, bool bSilenceNotification = false)"
  },
  {
    "label": "EditComment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditComment(const FReviewComment& Comment, const OnEditCommentComplete& OnComplete, bool bSilenceNotification = false)"
  },
  {
    "label": "GetReviewTopicForCL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetReviewTopicForCL(const FString &ChangelistNum, const OnGetReviewTopicForCLComplete& OnComplete)"
  },
  {
    "label": "GetOrCreateReviewTopicForCL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOrCreateReviewTopicForCL(const FString &ChangelistNum, const OnGetReviewTopicForCLComplete& OnComplete)"
  }
]