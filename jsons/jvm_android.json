[
  {
    "label": "JvmThreadConnector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JvmThreadConnector"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "GlobalRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GlobalRef"
  },
  {
    "label": "JavaClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JavaClass"
  },
  {
    "label": "NativeRegistration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NativeRegistration"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "and",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "and"
  },
  {
    "label": "JNIEnvironment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JNIEnvironment"
  },
  {
    "label": "specified",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "specified"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "called",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "called"
  },
  {
    "label": "JVM",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "JVM"
  },
  {
    "label": "if",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "if"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "JvmThreadConnector()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "JvmThreadConnector()"
  },
  {
    "label": "GlobalRef()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "GlobalRef(JNIEnv* jni, jobject object)"
  },
  {
    "label": "CallBooleanMethod()",
    "kind": "Method",
    "detail": "Function (jboolean)",
    "insertText": "CallBooleanMethod(jmethodID methodID, ...)"
  },
  {
    "label": "CallIntMethod()",
    "kind": "Method",
    "detail": "Function (jint)",
    "insertText": "CallIntMethod(jmethodID methodID, ...)"
  },
  {
    "label": "CallVoidMethod()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CallVoidMethod(jmethodID methodID, ...)"
  },
  {
    "label": "GetMethodId()",
    "kind": "Method",
    "detail": "Function (jmethodID)",
    "insertText": "GetMethodId(const char* name, const char* signature)"
  },
  {
    "label": "GetStaticMethodId()",
    "kind": "Method",
    "detail": "Function (jmethodID)",
    "insertText": "GetStaticMethodId(const char* name, const char* signature)"
  },
  {
    "label": "CallStaticObjectMethod()",
    "kind": "Method",
    "detail": "Function (jobject)",
    "insertText": "CallStaticObjectMethod(jmethodID methodID, ...)"
  },
  {
    "label": "CallStaticIntMethod()",
    "kind": "Method",
    "detail": "Function (jint)",
    "insertText": "CallStaticIntMethod(jmethodID methodID, ...)"
  },
  {
    "label": "NativeRegistration()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "NativeRegistration(JNIEnv* jni, jclass clazz)"
  },
  {
    "label": "NewObject()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<GlobalRef>)",
    "insertText": "NewObject(const char* name,\n                                       const char* signature,\n                                       ...)"
  },
  {
    "label": "JNIEnvironment()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "JNIEnvironment(JNIEnv* jni)"
  },
  {
    "label": "RegisterNatives()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<NativeRegistration>)",
    "insertText": "RegisterNatives(\n      const char* name,\n      const JNINativeMethod* methods,\n      int num_methods)"
  },
  {
    "label": "JavaToStdString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "JavaToStdString(const jstring& j_string)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(JavaVM* jvm)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(JavaVM* jvm, jobject context)"
  },
  {
    "label": "Uninitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uninitialize()"
  },
  {
    "label": "environment()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<JNIEnvironment>)",
    "insertText": "environment()"
  },
  {
    "label": "GetClass()",
    "kind": "Method",
    "detail": "Function (JavaClass)",
    "insertText": "GetClass(const char* name)"
  },
  {
    "label": "JVM()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "JVM(JavaVM* jvm)"
  },
  {
    "label": "GetEnv()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetEnv(jvm_)"
  }
]