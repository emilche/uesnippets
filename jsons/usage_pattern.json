[
  {
    "label": "PeerConnectionObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PeerConnectionObserver"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UsagePattern",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UsagePattern"
  },
  {
    "label": "NoteUsageEvent()",
    "kind": "Method",
    "detail": "Function (# ifndef PC_USAGE_PATTERN_H_ # define PC_USAGE_PATTERN_H_ # include \" api / peer_connection_interface . h \" namespace webrtc { class PeerConnectionObserver ; enum class UsageEvent : int { TURN_SERVER_ADDED = 0 x01,STUN_SERVER_ADDED = 0 x02,DATA_ADDED = 0 x04,AUDIO_ADDED = 0 x08,VIDEO_ADDED = 0 x10,SET_LOCAL_DESCRIPTION_SUCCEEDED = 0 x20,SET_REMOTE_DESCRIPTION_SUCCEEDED = 0 x40,CANDIDATE_COLLECTED = 0 x80,ADD_ICE_CANDIDATE_SUCCEEDED = 0 x100,ICE_STATE_CONNECTED = 0 x200,CLOSE_CALLED = 0 x400,PRIVATE_CANDIDATE_COLLECTED = 0 x800,REMOTE_PRIVATE_CANDIDATE_ADDED = 0 x1000,MDNS_CANDIDATE_COLLECTED = 0 x2000,REMOTE_MDNS_CANDIDATE_ADDED = 0 x4000,IPV6_CANDIDATE_COLLECTED = 0 x8000,REMOTE_IPV6_CANDIDATE_ADDED = 0 x10000,REMOTE_CANDIDATE_ADDED = 0 x20000,DIRECT_CONNECTION_SELECTED = 0 x40000,MAX_VALUE = 0 x80000,} ; class UsagePattern { public : void)",
    "insertText": "NoteUsageEvent(UsageEvent event)"
  },
  {
    "label": "ReportUsagePattern()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportUsagePattern(PeerConnectionObserver* observer)"
  }
]