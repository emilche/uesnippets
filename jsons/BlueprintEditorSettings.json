[
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FBPEditorBookmarkNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPEditorBookmarkNode"
  },
  {
    "label": "FEditedDocumentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditedDocumentInfo"
  },
  {
    "label": "FGuid",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGuid"
  },
  {
    "label": "ESaveOnCompile",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESaveOnCompile"
  },
  {
    "label": "BLUEPRINTGRAPH_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BLUEPRINTGRAPH_API"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / EnumAsByte . h \" # include \" Containers / Map . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Engine / Blueprint . h \" # include \" Engine / DeveloperSettings . h \" # include \" FindInBlueprints . h \" # include \" Internationalization / Text . h \" # include \" Kismet2 / Breakpoint . h \" # include \" Kismet2 / KismetDebugUtilities . h \" # include \" Kismet2 / WatchedPin . h \" # include \" Misc / NamePermissionList . h \" # include \" UObject / Class . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / SoftObjectPath . h \" # include \" UObject / SoftObjectPtr . h \" # include \" UObject / TopLevelAssetPath . h \" # include \" UObject / UObjectGlobals . h \" # include \" BlueprintEditorSettings . generated . h \" class UObject ; struct FAssetData ; struct FBPEditorBookmarkNode ; struct FEditedDocumentInfo ; struct FGuid ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (SoC_Never)",
    "insertText": "UMETA(DisplayName=\"Never\"), SoC_SuccessOnly UMETA(DisplayName=\"On Success Only\"), SoC_Always UMETA(DisplayName = \"Always\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FPerBlueprintSettings& Other)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = Category)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UCLASS(config=EditorPerProjectUserSettings)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: UPROPERTY(EditAnywhere, config, Category=VisualStyle, meta=(DisplayName=\"Draw midpoint arrows in Blueprints\"))"
  },
  {
    "label": "GetFunctionPermissions()",
    "kind": "Method",
    "detail": "Function (FPathPermissionList&)",
    "insertText": "GetFunctionPermissions()"
  },
  {
    "label": "UnregisterIsClassAllowedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterIsClassAllowedDelegate(const FName OwnerName)"
  },
  {
    "label": "IsClassAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassAllowed(const UClass* InClass)"
  },
  {
    "label": "HasClassFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasClassFiltering()"
  },
  {
    "label": "RegisterIsClassPathAllowedDelegate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterIsClassPathAllowedDelegate(const FName OwnerName, FOnIsClassPathAllowed Delegate)"
  },
  {
    "label": "UnregisterIsClassPathAllowedDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterIsClassPathAllowedDelegate(const FName OwnerName)"
  },
  {
    "label": "IsClassPathAllowed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassPathAllowed(const FTopLevelAssetPath& InClassPath)"
  },
  {
    "label": "HasClassPathFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasClassPathFiltering()"
  },
  {
    "label": "RegisterIsClassAllowedOnPinDelegate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterIsClassAllowedOnPinDelegate(const FName OwnerName, FOnIsClassAllowed Delegate)"
  },
  {
    "label": "UnregisterIsClassAllowedOnPinDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterIsClassAllowedOnPinDelegate(const FName OwnerName)"
  },
  {
    "label": "IsClassAllowedOnPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassAllowedOnPin(const UClass* InClass)"
  },
  {
    "label": "HasClassOnPinFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasClassOnPinFiltering()"
  },
  {
    "label": "RegisterIsClassPathAllowedOnPinDelegate()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RegisterIsClassPathAllowedOnPinDelegate(const FName OwnerName, FOnIsClassPathAllowed Delegate)"
  },
  {
    "label": "UnregisterIsClassPathAllowedOnPinDelegate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterIsClassPathAllowedOnPinDelegate(const FName OwnerName)"
  },
  {
    "label": "IsClassPathAllowedOnPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsClassPathAllowedOnPin(const FTopLevelAssetPath& InClassPath)"
  },
  {
    "label": "HasClassPathOnPinFiltering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasClassPathOnPinFiltering()"
  },
  {
    "label": "IsFunctionAllowed()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsFunctionAllowed(const UBlueprint* InBlueprint, const FName FunctionName)"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (private : FPathPermissionList FunctionPermissions ; FPathPermissionList StructPermissions ; FPathPermissionList EnumPermissions ; FNamePermissionList PinCategoryPermissions ; TMap<FName,FOnIsClassAllowed> IsClassAllowedDelegates ; TMap<FName,FOnIsClassPathAllowed> IsClassPathAllowedDelegates ; TMap<FName,FOnIsClassAllowed> IsClassAllowedOnPinDelegates ; TMap<FName,FOnIsClassPathAllowed> IsClassPathAllowedOnPinDelegates ; protected : void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(struct FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnAssetRenamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRenamed(FAssetData const& AssetInfo, const FString& InOldName)"
  },
  {
    "label": "OnAssetRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetRemoved(UObject* Object)"
  }
]