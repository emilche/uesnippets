[
  {
    "label": "EventName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "EventName"
  },
  {
    "label": "OwningType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OwningType"
  },
  {
    "label": "DynamicDelegateClassName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DynamicDelegateClassName"
  },
  {
    "label": "DynamicDelegateRetValClassName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DynamicDelegateRetValClassName"
  },
  {
    "label": "DynamicMulticastDelegateClassName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DynamicMulticastDelegateClassName"
  },
  {
    "label": "TTypedImpl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TTypedImpl"
  },
  {
    "label": "Inner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Inner"
  },
  {
    "label": "Inner2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Inner2"
  },
  {
    "label": "TStaticFNameFromCharSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStaticFNameFromCharSequence"
  },
  {
    "label": "TStrAfterLastDoubleColon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStrAfterLastDoubleColon"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" UObject / NameTypes . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Delegates / MulticastDelegateBase . h \" # include \" Delegates / IntegerSequence . h \" # include \" AutoRTFM / AutoRTFM . h \" # define HEADER_GENERATED_DELEGATE_SIGNATURE_SUFFIX)",
    "insertText": "TEXT(\"__DelegateSignature\") #define FUNC_CONCAT( ... ) __VA_ARGS__ #define FUNC_DECLARE_DELEGATE( DelegateName, ReturnType, ... ) \\ typedef TDelegate<ReturnType(__VA_ARGS__)"
  },
  {
    "label": "FUNC_DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "FUNC_DECLARE_MULTICAST_DELEGATE(MulticastDelegateName, ReturnType, ... ) \\ typedef TMulticastDelegate<ReturnType(__VA_ARGS__)"
  },
  {
    "label": "FUNC_DECLARE_TS_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "FUNC_DECLARE_TS_MULTICAST_DELEGATE(MulticastDelegateName, ReturnType, ... ) \\ typedef TMulticastDelegate<ReturnType(__VA_ARGS__)"
  },
  {
    "label": "FUNC_DECLARE_EVENT()",
    "kind": "Method",
    "detail": "Function (# define)",
    "insertText": "FUNC_DECLARE_EVENT(OwningType, EventName, ReturnType, ... ) \\ class EventName : public TMulticastDelegate<ReturnType(__VA_ARGS__)"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (\\ class OwningType ; \\ } ; # define)",
    "insertText": "DECLARE_DERIVED_EVENT(OwningType, BaseTypeEvent, EventName)"
  },
  {
    "label": "FUNC_DECLARE_DYNAMIC_DELEGATE()",
    "kind": "Method",
    "detail": "Function (class OwningType ; } ; # define)",
    "insertText": "FUNC_DECLARE_DYNAMIC_DELEGATE(DynamicDelegateClassName, ExecFunction, FuncParamList, FuncParamPassThru, ...)"
  },
  {
    "label": "DynamicDelegateClassName()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ \\)",
    "insertText": "DynamicDelegateClassName()"
  },
  {
    "label": "DynamicDelegateClassName()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ \\)",
    "insertText": "DynamicDelegateClassName(const TScriptDelegate<>& InScriptDelegate ) \\ : TBaseDynamicDelegate<FNotThreadSafeDelegateMode, __VA_ARGS__>( InScriptDelegate)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ \\ void)",
    "insertText": "Execute(FuncParamList)"
  },
  {
    "label": "checkSlow()",
    "kind": "Method",
    "detail": "Function (\\ \\)",
    "insertText": "checkSlow(IsBound())"
  },
  {
    "label": "ExecFunction()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "ExecFunction(FuncParamPassThru)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ bool)",
    "insertText": "ExecuteIfBound(FuncParamList)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "if(IsBound())"
  },
  {
    "label": "FUNC_DECLARE_DYNAMIC_DELEGATE_RETVAL()",
    "kind": "Method",
    "detail": "Function (\\ return true ; \\ } \\ return false ; \\ } \\ } ; # define)",
    "insertText": "FUNC_DECLARE_DYNAMIC_DELEGATE_RETVAL(DynamicDelegateRetValClassName, ExecFunction, RetValType, FuncParamList, FuncParamPassThru, ...)"
  },
  {
    "label": "DynamicDelegateRetValClassName()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ \\)",
    "insertText": "DynamicDelegateRetValClassName()"
  },
  {
    "label": "DynamicDelegateRetValClassName()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ \\)",
    "insertText": "DynamicDelegateRetValClassName(const TScriptDelegate<>& InScriptDelegate ) \\ : TBaseDynamicDelegate<FNotThreadSafeDelegateMode, __VA_ARGS__>( InScriptDelegate)"
  },
  {
    "label": "FUNC_DECLARE_DYNAMIC_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } ; # define)",
    "insertText": "FUNC_DECLARE_DYNAMIC_MULTICAST_DELEGATE(DynamicMulticastDelegateClassName, ExecFunction, FuncParamList, FuncParamPassThru, ...)"
  },
  {
    "label": "DynamicMulticastDelegateClassName()",
    "kind": "Method",
    "detail": "Function (\\ public : \\ \\)",
    "insertText": "DynamicMulticastDelegateClassName()"
  },
  {
    "label": "DynamicMulticastDelegateClassName()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ \\)",
    "insertText": "DynamicMulticastDelegateClassName(const TMulticastScriptDelegate<>& InMulticastScriptDelegate ) \\ : TBaseDynamicMulticastDelegate<FNotThreadSafeDelegateMode, __VA_ARGS__>( InMulticastScriptDelegate)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (\\ } \\ \\ \\ void)",
    "insertText": "Broadcast(FuncParamList)"
  },
  {
    "label": "ENABLE_STATIC_FUNCTION_FNAMES()",
    "kind": "Method",
    "detail": "Function (\\ } \\ } ; # define)",
    "insertText": "ENABLE_STATIC_FUNCTION_FNAMES(PLATFORM_COMPILER_CLANG && (__clang_major__ > 3 || (__clang_major__ == 3 && __clang_minor__ >= 5)))"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (template<T> struct TTypedImpl { template<bool Dummy,T . . . Chars> struct Inner ; template<SecondMatch,T . . . Chars> struct Inner2 { typedef TTypedImpl<T>::template Inner<true,Chars . . .>::Type Type ; } ; template<T . . . Chars> struct Inner2<TIntegerSequence<T>,Chars . . .> { typedef TIntegerSequence<T,Chars . . .> Type ; } ; template<bool Dummy,T Char,T . . . Chars> struct Inner<Dummy,Char,Chars . . .> { typedef Inner<Dummy,Chars . . .>::Type Type ; } ; template<bool Dummy,T . . . Chars> struct Inner<Dummy,' : ',' : ',Chars . . .> { typedef Inner2<Inner<Dummy,Chars . . .>::Type,Chars . . .>::Type Type ; } ; template<bool Dummy> struct Inner<Dummy> { typedef TIntegerSequence<T> Type ; } ; } ; template<IntSeq> struct TStaticFNameFromCharSequence ; template<T,T . . . Chars> struct TStaticFNameFromCharSequence<TIntegerSequence<T,Chars . . .>> { FName)",
    "insertText": "Get()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (FName* Result = nullptr ; UE_AUTORTFM_OPEN { FName StaticResult =)",
    "insertText": "Create()"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (const T Str [)",
    "insertText": "sizeof(Chars)"
  },
  {
    "label": "_intseq()",
    "kind": "Method",
    "detail": "Function (Chars . . .,0 } ; return Str ; } } ; template<T> struct TStrAfterLastDoubleColon ; template<T,T . . . Chars> struct TStrAfterLastDoubleColon<TIntegerSequence<T,Chars . . .>> { typedef NStrAfterLastDoubleColon_Private::TTypedImpl<T>::template Inner<true,Chars . . .>::Type Type ; } ; } template<T,T . . . Chars> TIntegerSequence<T,Chars . . .> operator \" \")",
    "insertText": "_intseq()"
  },
  {
    "label": "GetTrimmedMemberFunctionName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetTrimmedMemberFunctionName(const TCHAR* InMacroFunctionName)"
  },
  {
    "label": "Strrstr()",
    "kind": "Method",
    "detail": "Function (const TCHAR* Result =)",
    "insertText": "Strrstr(InMacroFunctionName, TEXT( \"::\" ))"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (} } # define __Delegate_h__ # define FUNC_INCLUDING_INLINE_IMPL # if ! UE_BUILD_DOCS # include \" Delegates / DelegateInstanceInterface . h \" # include \" Delegates / DelegateInstancesImpl . h \" # include \" Delegates / DelegateSignatureImpl . inl \" # include \" Delegates / DelegateCombinations . h \" # endif # undef FUNC_INCLUDING_INLINE_IMPL # undef __Delegate_h__)",
    "insertText": "DECLARE_DELEGATE(FSimpleDelegate)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FSimpleMulticastDelegate)"
  },
  {
    "label": "DECLARE_TS_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_TS_MULTICAST_DELEGATE(FTSSimpleMulticastDelegate)"
  }
]