[
  {
    "label": "FRenderAssetStreamingManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderAssetStreamingManager"
  },
  {
    "label": "FRenderAssetStreamingSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRenderAssetStreamingSettings"
  },
  {
    "label": "FStreamingRenderAsset",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStreamingRenderAsset"
  },
  {
    "label": "EOptionalMipsState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOptionalMipsState"
  },
  {
    "label": "UpdateStaticData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStaticData(const FRenderAssetStreamingSettings& Settings)"
  },
  {
    "label": "UpdateDynamicData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDynamicData(const int32* NumStreamedMips, int32 NumLODGroups, const FRenderAssetStreamingSettings& Settings, bool bWaitForMipFading, TArray<UStreamableRenderAsset*>* DeferredTickCBAssets = nullptr)"
  },
  {
    "label": "UpdateStreamingStatus()",
    "kind": "Method",
    "detail": "Function (FStreamableRenderResourceState)",
    "insertText": "UpdateStreamingStatus(bool bWaitForMipFading, TArray<UStreamableRenderAsset*>* DeferredTickCBAssets = nullptr)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Texture\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"StaticMesh\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"SkeletalMesh\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "TEXT(\"Unkown\")"
  },
  {
    "label": "GetExtraBoost()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetExtraBoost(TextureGroup\tLODGroup, const FRenderAssetStreamingSettings& Settings)"
  },
  {
    "label": "SetPerfectWantedMips_Async()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPerfectWantedMips_Async(\n\t\tfloat MaxSize,\n\t\tfloat MaxSize_VisibleOnly,\n\t\tfloat MaxScreenSizeOverAllViews,\n\t\tint32 MaxNumForcedLODs,\n\t\tbool InLooksLowRes,\n\t\tconst FRenderAssetStreamingSettings& Settings)"
  },
  {
    "label": "UpdateRetentionPriority_Async()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "UpdateRetentionPriority_Async(bool bPrioritizeMesh)"
  },
  {
    "label": "DropMaxResolution_Async()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "DropMaxResolution_Async(int32 NumDroppedMips)"
  },
  {
    "label": "DropOneMip_Async()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "DropOneMip_Async()"
  },
  {
    "label": "KeepOneMip_Async()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "KeepOneMip_Async()"
  },
  {
    "label": "UpdateLoadOrderPriority_Async()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateLoadOrderPriority_Async(const FRenderAssetStreamingSettings& Settings)"
  },
  {
    "label": "UpdateOptionalMipsState_Async()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateOptionalMipsState_Async()"
  },
  {
    "label": "CancelStreamingRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelStreamingRequest()"
  },
  {
    "label": "StreamWantedMips()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamWantedMips(FRenderAssetStreamingManager& Manager)"
  },
  {
    "label": "CacheStreamingMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheStreamingMetaData()"
  },
  {
    "label": "StreamWantedMipsUsingCachedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamWantedMipsUsingCachedData(FRenderAssetStreamingManager& Manager)"
  },
  {
    "label": "StreamWantedMips_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StreamWantedMips_Internal(FRenderAssetStreamingManager& Manager, bool bUseCachedData)"
  }
]