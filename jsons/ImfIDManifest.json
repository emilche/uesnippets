[
  {
    "label": "IDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDManifest"
  },
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "IMF_EXPORT_ENUM",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IMF_EXPORT_ENUM"
  },
  {
    "label": "CompressedIDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompressedIDManifest"
  },
  {
    "label": "IMF_EXPORT_TYPE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMF_EXPORT_TYPE"
  },
  {
    "label": "Iterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Iterator"
  },
  {
    "label": "ConstIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConstIterator"
  },
  {
    "label": "IDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDManifest"
  },
  {
    "label": "CompressedIDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompressedIDManifest"
  },
  {
    "label": "IDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDManifest"
  },
  {
    "label": "IDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDManifest"
  },
  {
    "label": "IDManifest",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDManifest"
  },
  {
    "label": "IDManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "IDManifest()"
  },
  {
    "label": "IDManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "IDManifest(const CompressedIDManifest&)"
  },
  {
    "label": "IDManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "IDManifest(const char* data, const char* end)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(const char* data, const char* end)"
  },
  {
    "label": "ChannelGroupManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "ChannelGroupManifest()"
  },
  {
    "label": "setChannels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setChannels(const std::set<std::string>& channels)"
  },
  {
    "label": "setChannel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setChannel(const std::string& channel)"
  },
  {
    "label": "setComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setComponents(const std::vector<std::string>& components)"
  },
  {
    "label": "setComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setComponent(const std::string& component)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "end()"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "insert(uint64_t idValue, const std::vector<std::string>& text)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "insert(uint64_t idValue, const std::string& text)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "insert(const std::vector<std::string>& text)"
  },
  {
    "label": "insert()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "insert(const std::string& text)"
  },
  {
    "label": "find()",
    "kind": "Method",
    "detail": "Function (Iterator)",
    "insertText": "find(uint64_t idValue)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "erase(uint64_t idValue)"
  },
  {
    "label": "merge()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "merge(const IDManifest& other)"
  },
  {
    "label": "MurmurHash32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "MurmurHash32(const std::string& idString)"
  },
  {
    "label": "MurmurHash32()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "MurmurHash32(const std::vector<std::string>& idString)"
  },
  {
    "label": "MurmurHash64()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "MurmurHash64(const std::string& idString)"
  },
  {
    "label": "MurmurHash64()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "MurmurHash64(const std::vector<std::string>& idString)"
  },
  {
    "label": "CompressedIDManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "CompressedIDManifest()"
  },
  {
    "label": "CompressedIDManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "CompressedIDManifest(const CompressedIDManifest& other)"
  },
  {
    "label": "CompressedIDManifest()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "CompressedIDManifest(const IDManifest& manifest)"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "Iterator()"
  },
  {
    "label": "Iterator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "Iterator(\n        const IDManifest::ChannelGroupManifest::IDTable::iterator& i)"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "ConstIterator()"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "ConstIterator(\n        const IDManifest::ChannelGroupManifest::IDTable::const_iterator& i)"
  },
  {
    "label": "ConstIterator()",
    "kind": "Method",
    "detail": "Function (IMF_EXPORT)",
    "insertText": "ConstIterator(const IDManifest::ChannelGroupManifest::Iterator& other)"
  }
]