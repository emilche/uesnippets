[
  {
    "label": "FSlateApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateApplication"
  },
  {
    "label": "FViewportWorldInteractionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportWorldInteractionManager"
  },
  {
    "label": "FAnalogInputEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalogInputEvent"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FViewportInteractionInputProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewportInteractionInputProcessor"
  },
  {
    "label": "UViewportWorldInteraction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportWorldInteraction"
  },
  {
    "label": "FViewportInteractionInputProcessor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GenericPlatform / ICursor . h \" # include \" Framework / Application / IInputProcessor . h \" class FSlateApplication ; class FViewportWorldInteractionManager ; struct FAnalogInputEvent ; struct FKeyEvent ; struct FPointerEvent ; class FViewportInteractionInputProcessor : public IInputProcessor { public :)",
    "insertText": "FViewportInteractionInputProcessor(class UViewportWorldInteraction* InWorldInteraction)"
  },
  {
    "label": "FViewportInteractionInputProcessor()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FViewportInteractionInputProcessor()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const float DeltaTime, FSlateApplication& SlateApp, TSharedRef<ICursor> Cursor)"
  },
  {
    "label": "HandleKeyDownEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleKeyDownEvent(FSlateApplication& SlateApp, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "HandleKeyUpEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleKeyUpEvent(FSlateApplication& SlateApp, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "HandleAnalogInputEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleAnalogInputEvent(FSlateApplication& SlateApp, const FAnalogInputEvent& InAnalogInputEvent)"
  },
  {
    "label": "HandleMouseMoveEvent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMouseMoveEvent(FSlateApplication& SlateApp, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetDebugName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDebugName()"
  }
]