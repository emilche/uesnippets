[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "KISMETWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "KISMETWIDGETS_API"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs )"
  },
  {
    "label": "GetDivider()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDivider(float InputMinX, float InputMaxX, FVector2D WidgetSize, float SequenceLength, int32 NumFrames)"
  },
  {
    "label": "CommitValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitValue( float NewValue, bool bSliderClamp, bool bCommittedFromText )"
  },
  {
    "label": "CreateContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateContextMenu( float CurrentFrameTime, const FPointerEvent& MouseEvent )"
  },
  {
    "label": "OnSequenceCroppedCalled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequenceCroppedCalled( bool bFromStart, float CurrentFrameTime )"
  },
  {
    "label": "OnSequenceAddedCalled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequenceAddedCalled(bool bBefore, int32 CurrentFrameNumber)"
  },
  {
    "label": "OnSequenceAppendedCalled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSequenceAppendedCalled(const FText & InNewGroupText, ETextCommit::Type CommitInfo, bool bBegin)"
  },
  {
    "label": "OnShowPopupOfAppendAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShowPopupOfAppendAnimation(bool bBegin)"
  },
  {
    "label": "OnReZeroCalled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReZeroCalled(int32 FrameIndex)"
  }
]