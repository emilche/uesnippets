[
  {
    "label": "FRawIndexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRawIndexBuffer"
  },
  {
    "label": "FRawIndexBuffer16or32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRawIndexBuffer16or32"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FIndexArrayView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIndexArrayView"
  },
  {
    "label": "FRawStaticIndexBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRawStaticIndexBuffer"
  },
  {
    "label": "FRawStaticIndexBuffer16or32Interface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRawStaticIndexBuffer16or32Interface"
  },
  {
    "label": "FRawStaticIndexBuffer16or32",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRawStaticIndexBuffer16or32"
  },
  {
    "label": "CacheOptimize()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RHI . h \" # include \" RHICommandList . h \" # include \" RenderResource . h \" # include \" Containers / DynamicRHIResourceArray . h \" class FRawIndexBuffer : public FIndexBuffer { public : TArray<uint16> Indices ; void)",
    "insertText": "CacheOptimize()"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar,FRawIndexBuffer& I)"
  },
  {
    "label": "FRawIndexBuffer16or32()",
    "kind": "Method",
    "detail": "Function (} ; class FRawIndexBuffer16or32 : public FIndexBuffer { public :)",
    "insertText": "FRawIndexBuffer16or32() : b32Bit(true)"
  },
  {
    "label": "ComputeIndexWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeIndexWidth()"
  },
  {
    "label": "ForceUse32Bit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForceUse32Bit(bool bIn32Bit)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar,FRawIndexBuffer16or32& I)"
  },
  {
    "label": "FIndexArrayView()",
    "kind": "Method",
    "detail": "Function (private : bool b32Bit ; } ; namespace EIndexBufferStride { enum Type { Force16Bit = 1,Force32Bit = 2,AutoDetect = 3 } ; } class FIndexArrayView { public :)",
    "insertText": "FIndexArrayView() : UntypedIndexData(nullptr) , NumIndices(0) , b32Bit(false)"
  },
  {
    "label": "FIndexArrayView()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FIndexArrayView(const void* InIndexData, int32 InNumIndices, bool bIn32Bit) : UntypedIndexData(InIndexData) , NumIndices(InNumIndices) , b32Bit(bIn32Bit)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "operator(int32 i)"
  },
  {
    "label": "Num()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Num()"
  },
  {
    "label": "FRawStaticIndexBuffer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRawStaticIndexBuffer()"
  },
  {
    "label": "TrySetAllowCPUAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySetAllowCPUAccess(bool bAllowCPUAccess)"
  },
  {
    "label": "SetAllowCPUAccess()",
    "kind": "Method",
    "detail": "Function (IndexStorage .)",
    "insertText": "SetAllowCPUAccess(bAllowCPUAccess)"
  },
  {
    "label": "SetIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIndex(const uint32 At, const uint32 NewIndexValue)"
  },
  {
    "label": "Indices32Bit()",
    "kind": "Method",
    "detail": "Function (uint32*)",
    "insertText": "Indices32Bit(uint32*)IndexStorage.GetData()"
  },
  {
    "label": "Indices16Bit()",
    "kind": "Method",
    "detail": "Function (Indices32Bit [ At ] = NewIndexValue ; } else { uint16*)",
    "insertText": "Indices16Bit(uint16*)IndexStorage.GetData()"
  },
  {
    "label": "At()",
    "kind": "Method",
    "detail": "Function (Indices16Bit [)",
    "insertText": "At(uint16)"
  },
  {
    "label": "SetIndices()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetIndices(const TArray<uint32>& InIndices, EIndexBufferStride::Type DesiredStride)"
  },
  {
    "label": "InsertIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertIndices(const uint32 At, const uint32* IndicesToAppend, const uint32 NumIndicesToAppend)"
  },
  {
    "label": "AppendIndices()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendIndices(const uint32* IndicesToAppend, const uint32 NumIndicesToAppend)"
  },
  {
    "label": "GetIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetIndex(const uint32 At)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (uint32 IndexValue ;)",
    "insertText": "if(b32Bit)"
  },
  {
    "label": "SrcIndices32Bit()",
    "kind": "Method",
    "detail": "Function (const uint32*)",
    "insertText": "SrcIndices32Bit(const uint32*)IndexStorage.GetData()"
  },
  {
    "label": "SrcIndices16Bit()",
    "kind": "Method",
    "detail": "Function (IndexValue = SrcIndices32Bit [ At ] ; } else { const uint16*)",
    "insertText": "SrcIndices16Bit(const uint16*)IndexStorage.GetData()"
  },
  {
    "label": "RemoveIndicesAt()",
    "kind": "Method",
    "detail": "Function (IndexValue = SrcIndices16Bit [ At ] ; } return IndexValue ; } void)",
    "insertText": "RemoveIndicesAt(const uint32 At, const uint32 NumIndicesToRemove)"
  },
  {
    "label": "GetCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCopy(TArray<uint32>& OutIndices)"
  },
  {
    "label": "ExpandTo32Bit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExpandTo32Bit()"
  },
  {
    "label": "AccessStream16()",
    "kind": "Method",
    "detail": "Function (const uint16*)",
    "insertText": "AccessStream16()"
  },
  {
    "label": "AccessStream32()",
    "kind": "Method",
    "detail": "Function (const uint32*)",
    "insertText": "AccessStream32()"
  },
  {
    "label": "GetArrayView()",
    "kind": "Method",
    "detail": "Function (FIndexArrayView)",
    "insertText": "GetArrayView()"
  },
  {
    "label": "GetAllocatedSize()",
    "kind": "Method",
    "detail": "Function (} SIZE_T)",
    "insertText": "GetAllocatedSize()"
  },
  {
    "label": "GetAllowCPUAccess()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetAllowCPUAccess()"
  },
  {
    "label": "GetIndexDataSize()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetIndexDataSize()"
  },
  {
    "label": "CreateRHIBuffer()",
    "kind": "Method",
    "detail": "Function (} FBufferRHIRef)",
    "insertText": "CreateRHIBuffer(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(FRHIBuffer* IntermediateBuffer, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIForStreaming(FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, bool bNeedsCPUAccess)"
  },
  {
    "label": "SerializeMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeMetaData(FArchive& Ar)"
  },
  {
    "label": "ClearMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMetaData()"
  },
  {
    "label": "Discard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Discard()"
  },
  {
    "label": "Is32Bit()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Is32Bit()"
  },
  {
    "label": "SetMetaData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMetaData(int32 InCachedNumIndices)"
  },
  {
    "label": "GetNeedsCPUAccess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetNeedsCPUAccess()"
  },
  {
    "label": "AddItem()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddItem(uint32 Val)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "Get(uint32 Idx)"
  },
  {
    "label": "GetPointerTo()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "GetPointerTo(uint32 Idx)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Insert(int32 Idx, int32 Num = 1)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(int32 Idx, int32 Num = 1)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Empty(int32 Slack = 0)"
  },
  {
    "label": "GetResourceDataSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetResourceDataSize()"
  },
  {
    "label": "GetSRV()",
    "kind": "Method",
    "detail": "Function (FRHIShaderResourceView*)",
    "insertText": "GetSRV()"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(FRHIBuffer* IntermediateBuffer, size_t IndexSize, FRHIResourceReplaceBatcher& Batcher)"
  },
  {
    "label": "CreateRHIIndexBufferInternal()",
    "kind": "Method",
    "detail": "Function (FBufferRHIRef)",
    "insertText": "CreateRHIIndexBufferInternal(FRHICommandListBase& RHICmdList, const TCHAR* InDebugName, const FName& InOwnerName, int32 IndexCount, size_t IndexSize, FResourceArrayInterface* ResourceArray, bool bNeedSRV)"
  },
  {
    "label": "FRawStaticIndexBuffer16or32()",
    "kind": "Method",
    "detail": "Function (FShaderResourceViewRHIRef SRVValue ; } ; template<INDEX_TYPE> class FRawStaticIndexBuffer16or32 : public FRawStaticIndexBuffer16or32Interface { public :)",
    "insertText": "FRawStaticIndexBuffer16or32(bool InNeedsCPUAccess=false) : Indices(InNeedsCPUAccess) , CachedNumIndices(0)"
  },
  {
    "label": "CreateRHIBuffer()",
    "kind": "Method",
    "detail": "Function (IndexBufferRHI =)",
    "insertText": "CreateRHIBuffer(RHICmdList)"
  },
  {
    "label": "CreateShaderResourceView()",
    "kind": "Method",
    "detail": "Function (SRVValue = RHICmdList .)",
    "insertText": "CreateShaderResourceView(IndexBufferRHI, sizeof(INDEX_TYPE), sizeof(INDEX_TYPE) == 2 ? PF_R16_UINT : PF_R32_UINT)"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "SafeRelease()",
    "kind": "Method",
    "detail": "Function (SRVValue .)",
    "insertText": "SafeRelease()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "BulkSerialize()",
    "kind": "Method",
    "detail": "Function (Indices .)",
    "insertText": "BulkSerialize(Ar)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (+ + CachedNumIndices ; return Indices .)",
    "insertText": "Add((INDEX_TYPE)Val)"
  },
  {
    "label": "Insert()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Insert(int32 Idx, int32 Num)"
  },
  {
    "label": "InsertUninitialized()",
    "kind": "Method",
    "detail": "Function (CachedNumIndices + = Num ; Indices .)",
    "insertText": "InsertUninitialized(Idx, Num)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Remove(int32 Idx, int32 Num)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (CachedNumIndices - = Num ; Indices .)",
    "insertText": "RemoveAt(Idx, Num)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Empty(int32 Slack)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (Indices .)",
    "insertText": "Empty(Slack)"
  },
  {
    "label": "AssignNewBuffer()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AssignNewBuffer(const TArray<INDEX_TYPE>& Buffer)"
  },
  {
    "label": "IndexBufferType()",
    "kind": "Method",
    "detail": "Function (using IndexBufferType = TResourceArray<INDEX_TYPE,INDEXBUFFER_ALIGNMENT>::Super ; Indices =)",
    "insertText": "IndexBufferType(Buffer)"
  },
  {
    "label": "InitRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHIForStreaming(IntermediateBuffer, sizeof(INDEX_TYPE), Batcher)"
  },
  {
    "label": "ReleaseRHIForStreaming()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHIForStreaming(Batcher)"
  }
]