[
  {
    "label": "FDocumentTabFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTabFactory"
  },
  {
    "label": "FDocumentTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDocumentTracker"
  },
  {
    "label": "FObjectPostSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPostSaveContext"
  },
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBehaviorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTree"
  },
  {
    "label": "UBehaviorTreeComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeComponent"
  },
  {
    "label": "UBehaviorTreeGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeGraph"
  },
  {
    "label": "UBlackboardData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlackboardData"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FBlackboardEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlackboardEntry"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "BEHAVIORTREEEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BEHAVIORTREEEDITOR_API"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FBehaviorTreeDebugger",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBehaviorTreeDebugger"
  },
  {
    "label": "FBehaviorTreeEditorToolbar",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBehaviorTreeEditorToolbar"
  },
  {
    "label": "SGraphEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphEditor"
  },
  {
    "label": "UBehaviorTreeGraphNode_CompositeDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBehaviorTreeGraphNode_CompositeDecorator"
  },
  {
    "label": "FAbortDrawHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAbortDrawHelper"
  },
  {
    "label": "UBTDecorator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBTDecorator"
  },
  {
    "label": "SFindInBT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFindInBT"
  },
  {
    "label": "SBehaviorTreeBlackboardView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBehaviorTreeBlackboardView"
  },
  {
    "label": "SBehaviorTreeBlackboardEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBehaviorTreeBlackboardEditor"
  },
  {
    "label": "FBehaviorTreeEditor()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AIGraphEditor . h \" # include \" Containers / Set . h \" # include \" Containers / UnrealString . h \" # include \" Delegates / IDelegateInstance . h \" # include \" GraphEditor . h \" # include \" HAL / PlatformMath . h \" # include \" IBehaviorTreeEditor . h \" # include \" Internationalization / Text . h \" # include \" Layout / Visibility . h \" # include \" Math / Color . h \" # include \" Misc / NotifyHook . h \" # include \" Templates / SharedPointer . h \" # include \" Toolkits / IToolkit . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FDocumentTabFactory ; class FDocumentTracker ; class FObjectPostSaveContext ; class FProperty ; class IDetailsView ; class SWidget ; class UBehaviorTree ; class UBehaviorTreeComponent ; class UBehaviorTreeGraph ; class UBlackboardData ; class UClass ; class UEdGraph ; class UEdGraphNode ; class UObject ; class UPackage ; struct FBlackboardEntry ; struct FPropertyChangedEvent ; class FBehaviorTreeEditor : public IBehaviorTreeEditor,public FAIGraphEditor,public FNotifyHook { public :)",
    "insertText": "FBehaviorTreeEditor()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "InitBehaviorTreeEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitBehaviorTreeEditor(const EToolkitMode::Type Mode, const TSharedPtr<class IToolkitHost>& InitToolkitHost, UObject* InObject)"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetBaseToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetBaseToolkitName()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "GetToolkitName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitName()"
  },
  {
    "label": "GetToolkitToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolkitToolTipText()"
  },
  {
    "label": "InitializeDebuggerState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDebuggerState(class FBehaviorTreeDebugger* ParentDebugger)"
  },
  {
    "label": "FindInjectedNode()",
    "kind": "Method",
    "detail": "Function (UEdGraphNode*)",
    "insertText": "FindInjectedNode(int32 Index)"
  },
  {
    "label": "DoubleClickNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoubleClickNode(class UEdGraphNode* Node)"
  },
  {
    "label": "FocusAttentionOnNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusAttentionOnNode(UEdGraphNode* Node)"
  },
  {
    "label": "FocusWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FocusWindow(UObject* ObjectToFocusOn = NULL)"
  },
  {
    "label": "IncludeAssetInRestoreOpenAssetsPrompt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncludeAssetInRestoreOpenAssetsPrompt(UObject* Asset)"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "NotifyPostChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPostChange(const FPropertyChangedEvent& PropertyChangedEvent, FProperty* PropertyThatChanged)"
  },
  {
    "label": "OnNodeDoubleClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeDoubleClicked(class UEdGraphNode* Node)"
  },
  {
    "label": "OnGraphEditorFocused()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGraphEditorFocused(const TSharedRef<SGraphEditor>& InGraphEditor)"
  },
  {
    "label": "OnNodeTitleCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnNodeTitleCommitted(const FText& NewText, ETextCommit::Type CommitInfo, UEdGraphNode* NodeBeingChanged)"
  },
  {
    "label": "OnAddInputPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddInputPin()"
  },
  {
    "label": "CanAddInputPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddInputPin()"
  },
  {
    "label": "OnRemoveInputPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveInputPin()"
  },
  {
    "label": "CanRemoveInputPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemoveInputPin()"
  },
  {
    "label": "OnEnableBreakpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEnableBreakpoint()"
  },
  {
    "label": "CanEnableBreakpoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEnableBreakpoint()"
  },
  {
    "label": "OnToggleBreakpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleBreakpoint()"
  },
  {
    "label": "CanToggleBreakpoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanToggleBreakpoint()"
  },
  {
    "label": "OnDisableBreakpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDisableBreakpoint()"
  },
  {
    "label": "CanDisableBreakpoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDisableBreakpoint()"
  },
  {
    "label": "OnAddBreakpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddBreakpoint()"
  },
  {
    "label": "CanAddBreakpoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAddBreakpoint()"
  },
  {
    "label": "OnRemoveBreakpoint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRemoveBreakpoint()"
  },
  {
    "label": "CanRemoveBreakpoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRemoveBreakpoint()"
  },
  {
    "label": "SearchTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SearchTree()"
  },
  {
    "label": "CanSearchTree()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSearchTree()"
  },
  {
    "label": "JumpToNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToNode(const UEdGraphNode* Node)"
  },
  {
    "label": "IsPropertyEditable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPropertyEditable()"
  },
  {
    "label": "OnPackageSaved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPackageSaved(const FString& PackageFileName, UPackage* Package, FObjectPostSaveContext ObjectSaveContext)"
  },
  {
    "label": "OnFinishedChangingProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFinishedChangingProperties(const FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "OnClassListUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClassListUpdated()"
  },
  {
    "label": "UpdateToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateToolbar()"
  },
  {
    "label": "IsDebuggerReady()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebuggerReady()"
  },
  {
    "label": "IsDebuggerPaused()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDebuggerPaused()"
  },
  {
    "label": "CanEditWithDebuggerActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanEditWithDebuggerActive()"
  },
  {
    "label": "OnGetDebuggerActorsMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidget>)",
    "insertText": "OnGetDebuggerActorsMenu()"
  },
  {
    "label": "OnDebuggerActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDebuggerActorSelected(TWeakObjectPtr<UBehaviorTreeComponent> InstanceToDebug)"
  },
  {
    "label": "GetDebuggerActorDesc()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetDebuggerActorDesc()"
  },
  {
    "label": "GetGraphAppearance()",
    "kind": "Method",
    "detail": "Function (FGraphAppearanceInfo)",
    "insertText": "GetGraphAppearance()"
  },
  {
    "label": "InEditingMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InEditingMode(bool bGraphIsEditable)"
  },
  {
    "label": "DebuggerSwitchAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebuggerSwitchAsset(UBehaviorTree* NewAsset)"
  },
  {
    "label": "DebuggerUpdateGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebuggerUpdateGraph()"
  },
  {
    "label": "GetDebuggerDetailsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetDebuggerDetailsVisibility()"
  },
  {
    "label": "GetRangeLowerVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetRangeLowerVisibility()"
  },
  {
    "label": "GetRangeSelfVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetRangeSelfVisibility()"
  },
  {
    "label": "GetInjectedNodeVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetInjectedNodeVisibility()"
  },
  {
    "label": "GetRootLevelNodeVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetRootLevelNodeVisibility()"
  },
  {
    "label": "GetFocusedGraphPtr()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SGraphEditor>)",
    "insertText": "GetFocusedGraphPtr()"
  },
  {
    "label": "CanAccessBehaviorTreeMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAccessBehaviorTreeMode()"
  },
  {
    "label": "CanAccessBlackboardMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanAccessBlackboardMode()"
  },
  {
    "label": "GetLocalizedMode()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetLocalizedMode(FName InMode)"
  },
  {
    "label": "GetToolbarBuilder()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class FBehaviorTreeEditorToolbar>)",
    "insertText": "GetToolbarBuilder()"
  },
  {
    "label": "GetBlackboardData()",
    "kind": "Method",
    "detail": "Function (UBlackboardData*)",
    "insertText": "GetBlackboardData()"
  },
  {
    "label": "SpawnProperties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "SpawnProperties()"
  },
  {
    "label": "SpawnSearch()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "SpawnSearch()"
  },
  {
    "label": "SpawnBlackboardDetails()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "SpawnBlackboardDetails()"
  },
  {
    "label": "SpawnBlackboardView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "SpawnBlackboardView()"
  },
  {
    "label": "SpawnBlackboardEditor()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "SpawnBlackboardEditor()"
  },
  {
    "label": "RegisterToolbarTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterToolbarTab(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "RestoreBehaviorTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreBehaviorTree()"
  },
  {
    "label": "SaveEditedObjectState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveEditedObjectState()"
  },
  {
    "label": "HandleBlackboardEntrySelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleBlackboardEntrySelected(const FBlackboardEntry* BlackboardEntry, bool bIsInherited)"
  },
  {
    "label": "HandleGetSelectedBlackboardItemIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "HandleGetSelectedBlackboardItemIndex(bool& bOutIsInherited)"
  },
  {
    "label": "HandleGetDebugKeyValue()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleGetDebugKeyValue(const FName& InKeyName, bool bUseCurrentState)"
  },
  {
    "label": "HandleDebuggedBlackboardChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDebuggedBlackboardChanged(UBlackboardData* InObject)"
  },
  {
    "label": "HandleGetDisplayCurrentState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleGetDisplayCurrentState()"
  },
  {
    "label": "HandleIsBlackboardModeActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleIsBlackboardModeActive()"
  },
  {
    "label": "GetBlackboardSelectionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetBlackboardSelectionInfo(int32& OutSelectionIndex, bool& bOutIsInherited)"
  },
  {
    "label": "CanCreateNewTask()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateNewTask()"
  },
  {
    "label": "CanCreateNewDecorator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateNewDecorator()"
  },
  {
    "label": "CanCreateNewService()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateNewService()"
  },
  {
    "label": "HandleCreateNewTaskMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleCreateNewTaskMenu()"
  },
  {
    "label": "HandleCreateNewDecoratorMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleCreateNewDecoratorMenu()"
  },
  {
    "label": "HandleCreateNewServiceMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "HandleCreateNewServiceMenu()"
  },
  {
    "label": "HandleNewNodeClassPicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNewNodeClassPicked(UClass* InClass)"
  },
  {
    "label": "CreateNewTask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewTask()"
  },
  {
    "label": "IsNewTaskButtonVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewTaskButtonVisible()"
  },
  {
    "label": "IsNewTaskComboVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewTaskComboVisible()"
  },
  {
    "label": "CreateNewDecorator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewDecorator()"
  },
  {
    "label": "IsNewDecoratorButtonVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewDecoratorButtonVisible()"
  },
  {
    "label": "IsNewDecoratorComboVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewDecoratorComboVisible()"
  },
  {
    "label": "CreateNewService()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewService()"
  },
  {
    "label": "IsNewServiceButtonVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewServiceButtonVisible()"
  },
  {
    "label": "IsNewServiceComboVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNewServiceComboVisible()"
  },
  {
    "label": "CreateNewBlackboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewBlackboard()"
  },
  {
    "label": "CanCreateNewBlackboard()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanCreateNewBlackboard()"
  },
  {
    "label": "SaveAsset_Execute()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "SaveAsset_Execute()"
  },
  {
    "label": "SetToolbarCreateActionsEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToolbarCreateActionsEnabled(bool bActionsEnabled)"
  },
  {
    "label": "CreateGraphEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UBehaviorTreeGraph> GraphClass ; FName GraphName ; FText CornerText ; FText TitleText ; FText RootNodeNoteText ; private : TSharedRef<class SGraphEditor>)",
    "insertText": "CreateGraphEditorWidget(UEdGraph* InGraph)"
  },
  {
    "label": "CreateInternalWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInternalWidgets()"
  },
  {
    "label": "ExtendMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendMenu()"
  },
  {
    "label": "BindCommonCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommonCommands()"
  },
  {
    "label": "BindDebuggerToolbarCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindDebuggerToolbarCommands()"
  },
  {
    "label": "OnSelectedNodesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSelectedNodesChanged(const TSet<class UObject*>& NewSelection)"
  },
  {
    "label": "GetAbortModePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAbortModePreview(const class UBehaviorTreeGraphNode_CompositeDecorator* Node, struct FAbortDrawHelper& Mode0, struct FAbortDrawHelper& Mode1)"
  },
  {
    "label": "GetAbortModePreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAbortModePreview(const class UBTDecorator* DecoratorOb, struct FAbortDrawHelper& Mode0, struct FAbortDrawHelper& Mode1)"
  },
  {
    "label": "RefreshDebugger()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshDebugger()"
  },
  {
    "label": "RefreshBlackboardViewsAssociatedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBlackboardViewsAssociatedObject()"
  }
]