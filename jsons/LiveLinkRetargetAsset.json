[
  {
    "label": "USkeleton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeleton"
  },
  {
    "label": "FBlendedCurve",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlendedCurve"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FLiveLinkAnimationFrameData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLiveLinkAnimationFrameData"
  },
  {
    "label": "FLiveLinkBaseFrameData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLiveLinkBaseFrameData"
  },
  {
    "label": "FLiveLinkBaseStaticData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLiveLinkBaseStaticData"
  },
  {
    "label": "FLiveLinkSkeletonStaticData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLiveLinkSkeletonStaticData"
  },
  {
    "label": "ULiveLinkRetargetAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULiveLinkRetargetAsset"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" UObject / NameTypes . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" LiveLinkRetargetAsset . generated . h \" class USkeleton ; struct FBlendedCurve ; struct FCompactPose ; struct FLiveLinkAnimationFrameData ; struct FLiveLinkBaseFrameData ; struct FLiveLinkBaseStaticData ; struct FLiveLinkSkeletonStaticData ;)",
    "insertText": "UCLASS(Abstract, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() LIVELINKANIMATIONCORE_API void ApplyCurveValue(const USkeleton* Skeleton, const FName CurveName, const float CurveValue, FBlendedCurve& OutCurve)"
  },
  {
    "label": "BuildCurveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildCurveData(const FLiveLinkSkeletonStaticData* InSkeletonData, const FLiveLinkAnimationFrameData* InFrameData, const FCompactPose& InPose, FBlendedCurve& OutCurve)"
  },
  {
    "label": "BuildCurveData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildCurveData(const TMap<FName, float>& CurveMap, const FCompactPose& InPose, FBlendedCurve& OutCurve)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "BuildPoseFromAnimationData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BuildPoseFromAnimationData(float DeltaTime, const FLiveLinkSkeletonStaticData* InSkeletonData, const FLiveLinkAnimationFrameData* InFrameData, FCompactPose& OutPose)"
  },
  {
    "label": "BuildPoseAndCurveFromBaseData()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BuildPoseAndCurveFromBaseData(float DeltaTime, const FLiveLinkBaseStaticData* InBaseStaticData, const FLiveLinkBaseFrameData* InBaseFrameData, FCompactPose& OutPose, FBlendedCurve& OutCurve)"
  }
]