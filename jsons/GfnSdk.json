[
  {
    "label": "GfnError",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GfnError"
  },
  {
    "label": "GfnDisplayLanguage",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GfnDisplayLanguage"
  },
  {
    "label": "GfnRectFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "GfnRectFormat"
  },
  {
    "label": "GfnRect",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GfnRect"
  },
  {
    "label": "GfnString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GfnString"
  },
  {
    "label": "GfnResolutionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GfnResolutionInfo"
  },
  {
    "label": "comment()",
    "kind": "Method",
    "detail": "Function (# ifndef GFN_SDK_CAPI_H # define GFN_SDK_CAPI_H # ifdef _WIN32 # pragma)",
    "insertText": "comment(lib, \"ws2_32.lib\") # pragma comment(lib, \"crypt32.lib\") # pragma comment(lib, \"Wldap32.lib\") # pragma comment(lib, \"version.lib\") # pragma comment(lib, \"shlwapi.lib\") # pragma comment(lib, \"Rpcrt4.lib\") # pragma comment(lib, \"wintrust\") # define GFN_CALLBACK __stdcall # define NVGFNSDK_EXPORT __declspec(dllexport)"
  },
  {
    "label": "GFNSDK_SUCCEEDED()",
    "kind": "Method",
    "detail": "Function (# define false 0 # define true 1 # endif # define NVGFNSDK_VERSION_MAJOR 2 # define NVGFNSDK_VERSION_MINOR 0 # define NVGFNSDK_VERSION_SHORT 2 . 0 # define NVGFNSDK_VERSION_PATCH 0 # define NVGFNSDK_VERSION_BUILD 3 3 1 0 3 7 5 6 # define NVGFNSDK_VERSION_LONG 2 . 0 . 0 . 3 3 1 0 3 7 5 6 # define NVGFNSDK_VERSION_STR \" 2 . 0 . 0 . 3 3 1 0 3 7 5 6 \" # define NVGFNSDK_VERSION_STR_PROD \" 2 . 0 . 0 \" # define NVGFNSDK_VERSION_BUILDCL 3 3 1 0 3 7 5 6 # define NVGFNSDK_VERSION_BUILDH 3 3 1 0 # define NVGFNSDK_VERSION_BUILDL 3 7 5 6 # ifdef __cplusplus \" C \" { # endif typedef enum GfnError { gfnSuccess = 0,gfnInitSuccessClientOnly = 1,gfnInitSuccessCloudOnly = 2,gfnInitFailure = - 1,gfnDllNotPresent = - 2,gfnComError = - 3,gfnLibraryCallFailure = - 4,gfnIncompatibleVersion = - 5,gfnUnableToAllocateMemory = - 6,gfnInvalidParameter = - 7,gfnInternalError = - 8,gfnUnsupportedAPICall = - 9,gfnInvalidToken = - 1 0,gfnTimedOut = - 1 1,gfnSetupTitleFailure = - 1 2,gfnClientDownloadFailed = - 1 3,gfnCallWrongEnvironment = - 1 4,gfnWebApiFailed = - 1 5,gfnStreamFailure = - 1 6,gfnAPINotFound = - 1 7,gfnAPINotInit = - 1 8,gfnStreamStopFailure = - 1 9,gfnUnhandledException = - 2 0,gfnIPCFailure = - 2 1,gfnCanceled = - 2 2,gfnElevationRequired = - 2 3,gfnThrottled = - 2 4,gfnInputExpected = - 2 5,gfnBinarySignatureInvalid = - 2 6,gfnCloudLibraryNotFound = - 2 7,gfnClientLibraryNotFound = - 2 8,gfnNoData = - 2 9 } GfnError ; bool)",
    "insertText": "GFNSDK_SUCCEEDED(GfnError code)"
  }
]