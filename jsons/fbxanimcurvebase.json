[
  {
    "label": "FbxIO",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxIO"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EExtrapolationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EExtrapolationType"
  },
  {
    "label": "FbxAnimCurveKeyBase()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_SCENE_ANIMATION_CURVE_BASE_H_ # define _FBXSDK_SCENE_ANIMATION_CURVE_BASE_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / fbxobject . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxIO ; class FBXSDK_DLL FbxAnimCurveKeyBase { public : FbxTime mTime ;)",
    "insertText": "FbxAnimCurveKeyBase()"
  },
  {
    "label": "GetTime()",
    "kind": "Method",
    "detail": "Function (} ; FbxTime)",
    "insertText": "GetTime()"
  },
  {
    "label": "FBXSDK_ABSTRACT_OBJECT_DECLARE()",
    "kind": "Method",
    "detail": "Function (mTime = pTime ; } } ; class FBXSDK_DLL FbxAnimCurveBase : public FbxObject {)",
    "insertText": "FBXSDK_ABSTRACT_OBJECT_DECLARE(FbxAnimCurveBase, FbxObject)"
  },
  {
    "label": "KeyClear()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "KeyClear()"
  },
  {
    "label": "KeyGetCount()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "KeyGetCount()"
  },
  {
    "label": "KeyAdd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "KeyAdd(FbxTime pTime, FbxAnimCurveKeyBase& pKey, int* pLast = NULL)"
  },
  {
    "label": "KeySet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "KeySet(int pIndex, FbxAnimCurveKeyBase& pKey)"
  },
  {
    "label": "KeyRemove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "KeyRemove(int pIndex)"
  },
  {
    "label": "KeyRemove()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "KeyRemove(int pStartIndex, int pEndIndex)"
  },
  {
    "label": "KeyGetTime()",
    "kind": "Method",
    "detail": "Function (FbxTime)",
    "insertText": "KeyGetTime(int)"
  },
  {
    "label": "SetPreExtrapolation()",
    "kind": "Method",
    "detail": "Function (enum EExtrapolationType { eConstant = 1,eRepetition = 2,eMirrorRepetition = 3,eKeepSlope = 4,eRelativeRepetition = 5 } ; void)",
    "insertText": "SetPreExtrapolation(EExtrapolationType pExtrapolation)"
  },
  {
    "label": "GetPreExtrapolation()",
    "kind": "Method",
    "detail": "Function (EExtrapolationType)",
    "insertText": "GetPreExtrapolation()"
  },
  {
    "label": "GetPreExtrapolationCount()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "GetPreExtrapolationCount()"
  },
  {
    "label": "GetPostExtrapolation()",
    "kind": "Method",
    "detail": "Function (EExtrapolationType)",
    "insertText": "GetPostExtrapolation()"
  },
  {
    "label": "GetPostExtrapolationCount()",
    "kind": "Method",
    "detail": "Function (unsigned long)",
    "insertText": "GetPostExtrapolationCount()"
  },
  {
    "label": "EvaluateIndex()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "EvaluateIndex(double pIndex)"
  },
  {
    "label": "GetTimeInterval()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTimeInterval(FbxTimeSpan& pTimeInterval)"
  },
  {
    "label": "Copy()",
    "kind": "Method",
    "detail": "Function (# ifndef DOXYGEN_SHOULD_SKIP_THIS FbxObject&)",
    "insertText": "Copy(const FbxObject& pObject)"
  },
  {
    "label": "Store()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Store(FbxIO* pFileObject, bool pLegacyVersion=false)"
  },
  {
    "label": "Retrieve()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Retrieve(FbxIO* pFileObject)"
  },
  {
    "label": "ExtrapolationSyncCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtrapolationSyncCallback()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Construct(const FbxObject* pFrom)"
  }
]