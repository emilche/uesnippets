[
  {
    "label": "AParticleEventManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AParticleEventManager"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" Particles / ParticleSystemComponent . h \" # include \" ParticleEventManager . generated . h \")",
    "insertText": "UCLASS(config=Game, NotBlueprintable, notplaceable)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() virtual void EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "HandleParticleSpawnEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleParticleSpawnEvents(UParticleSystemComponent* Component, const TArray<FParticleEventSpawnData>& SpawnEvents)"
  },
  {
    "label": "HandleParticleDeathEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleParticleDeathEvents(UParticleSystemComponent* Component, const TArray<FParticleEventDeathData>& DeathEvents)"
  },
  {
    "label": "HandleParticleCollisionEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleParticleCollisionEvents(UParticleSystemComponent* Component, const TArray<FParticleEventCollideData>& CollisionEvents)"
  },
  {
    "label": "HandleParticleBurstEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleParticleBurstEvents(UParticleSystemComponent* Component, const TArray<FParticleEventBurstData>& BurstEvents)"
  }
]