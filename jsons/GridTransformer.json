[
  {
    "label": "TileSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TileSampler"
  },
  {
    "label": "TileSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TileSampler"
  },
  {
    "label": "TileSampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TileSampler"
  },
  {
    "label": "GridResampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridResampler"
  },
  {
    "label": "RangeProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RangeProcessor"
  },
  {
    "label": "GridTransformer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridTransformer"
  },
  {
    "label": "Sampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sampler"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "MatrixTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MatrixTransform"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "GridTransformer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GridTransformer"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "ABTransform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABTransform"
  },
  {
    "label": "HalfWidthOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HalfWidthOp"
  },
  {
    "label": "HalfWidthOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HalfWidthOp"
  },
  {
    "label": "HalfWidthOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HalfWidthOp"
  },
  {
    "label": "HalfWidthOp",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HalfWidthOp"
  },
  {
    "label": "Sampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sampler"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "Sampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sampler"
  },
  {
    "label": "TreeT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeT"
  },
  {
    "label": "GridResampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridResampler"
  },
  {
    "label": "Sampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sampler"
  },
  {
    "label": "GridT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GridT"
  },
  {
    "label": "Sampler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Sampler"
  },
  {
    "label": "InTreeT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InTreeT"
  },
  {
    "label": "OutTreeT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OutTreeT"
  },
  {
    "label": "Transformer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Transformer"
  },
  {
    "label": "resampleToMatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resampleToMatch(const GridType& inGrid, GridType& outGrid, Interrupter& interrupter)"
  },
  {
    "label": "resampleToMatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resampleToMatch(const GridType& inGrid, GridType& outGrid)"
  },
  {
    "label": "resampler()",
    "kind": "Method",
    "detail": "Function (GridResampler)",
    "insertText": "resampler()"
  },
  {
    "label": "setInterrupter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInterrupter(InterrupterType&)"
  },
  {
    "label": "transformer()",
    "kind": "Method",
    "detail": "Function (GridTransformer)",
    "insertText": "transformer(xform)"
  },
  {
    "label": "transformer()",
    "kind": "Method",
    "detail": "Function (GridTransformer)",
    "insertText": "transformer(pivot, scale, rotate, translate)"
  },
  {
    "label": "init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "init(const Vec3R& pivot, const Vec3R& scale,\n        const Vec3R& rotate, const Vec3R& translate,\n        const std::string& xformOrder, const std::string& rotOrder)"
  },
  {
    "label": "transformer()",
    "kind": "Method",
    "detail": "Function (GridTransformer)",
    "insertText": "transformer(mat)"
  },
  {
    "label": "xform()",
    "kind": "Method",
    "detail": "Function (MatrixTransform)",
    "insertText": "xform(mTransform)"
  },
  {
    "label": "xform()",
    "kind": "Method",
    "detail": "Function (MatrixTransform)",
    "insertText": "xform(mPreScaleTransform)"
  },
  {
    "label": "xform()",
    "kind": "Method",
    "detail": "Function (MatrixTransform)",
    "insertText": "xform(mPostScaleTransform)"
  },
  {
    "label": "tileRange()",
    "kind": "Method",
    "detail": "Function (RangeProc::TileRange)",
    "insertText": "tileRange(tileIter)"
  },
  {
    "label": "proc()",
    "kind": "Method",
    "detail": "Function (RangeProc)",
    "insertText": "proc(xform, clipBBox, inTree, outTree)"
  }
]