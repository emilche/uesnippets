[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "UMorphTarget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMorphTarget"
  },
  {
    "label": "FSkeletalMeshObjectStatic",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkeletalMeshObjectStatic"
  },
  {
    "label": "FSkeletalMeshObjectLOD",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkeletalMeshObjectLOD"
  },
  {
    "label": "FSkeletalMeshObjectStatic()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" ProfilingDebugging / ResourceSize . h \" # include \" RenderResource . h \" # include \" RayTracingGeometry . h \" # include \" LocalVertexFactory . h \" # include \" Components / SkinnedMeshComponent . h \" # include \" SkeletalRenderPublic . h \" class FPrimitiveDrawInterface ; class UMorphTarget ; class FSkeletalMeshObjectStatic : public FSkeletalMeshObject { public :)",
    "insertText": "FSkeletalMeshObjectStatic(USkinnedMeshComponent* InMeshComponent, FSkeletalMeshRenderData* InSkelMeshRenderData, ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "FSkeletalMeshObjectStatic()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSkeletalMeshObjectStatic()"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources(USkinnedMeshComponent* InMeshComponent)"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(int32 LODIndex,USkinnedMeshComponent* InMeshComponent,const FMorphTargetWeightMap& InActiveMorphTargets, const TArray<float>& MorphTargetWeights, EPreviousBoneTransformUpdateMode PreviousBoneTransformUpdateMode, const FExternalMorphWeightData& InExternalMorphWeightData)"
  },
  {
    "label": "EnableOverlayRendering()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "EnableOverlayRendering(bool bEnabled, const TArray<int32>* InBonesOfInterest, const TArray<UMorphTarget*>* InMorphTargetOfInterest)"
  },
  {
    "label": "IsCPUSkinned()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "IsCPUSkinned()"
  },
  {
    "label": "GetStaticSkinVertexFactory()",
    "kind": "Method",
    "detail": "Function (const FVertexFactory*)",
    "insertText": "GetStaticSkinVertexFactory(int32 LODIndex, int32 ChunkIdx, ESkinVertexFactoryMode VFMode)"
  },
  {
    "label": "GetComponentSpaceTransforms()",
    "kind": "Method",
    "detail": "Function (TArray<FTransform>*)",
    "insertText": "GetComponentSpaceTransforms()"
  },
  {
    "label": "GetReferenceToLocalMatrices()",
    "kind": "Method",
    "detail": "Function (const TArray<FMatrix44f>&)",
    "insertText": "GetReferenceToLocalMatrices()"
  },
  {
    "label": "GetLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLOD()"
  },
  {
    "label": "DrawVertexElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawVertexElements(FPrimitiveDrawInterface* PDI, const FMatrix& ToWorldSpace, bool bDrawNormals, bool bDrawTangents, bool bDrawBinormals)"
  },
  {
    "label": "HaveValidDynamicData()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "HaveValidDynamicData()"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (CumulativeResourceSize .)",
    "insertText": "AddDedicatedSystemMemoryBytes(sizeof(*this))"
  },
  {
    "label": "AddDedicatedSystemMemoryBytes()",
    "kind": "Method",
    "detail": "Function (CumulativeResourceSize .)",
    "insertText": "AddDedicatedSystemMemoryBytes(LODs.GetAllocatedSize())"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (LODs [ I ] .)",
    "insertText": "GetResourceSizeEx(CumulativeResourceSize)"
  },
  {
    "label": "UpdateSkinWeightBuffer()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "UpdateSkinWeightBuffer(USkinnedMeshComponent* InMeshComponent)"
  },
  {
    "label": "FSkeletalMeshObjectLOD()",
    "kind": "Method",
    "detail": "Function (} private : struct FSkeletalMeshObjectLOD { FSkeletalMeshRenderData* SkelMeshRenderData ; int32 LODIndex ; FLocalVertexFactory VertexFactory ; FColorVertexBuffer* ColorVertexBuffer ; # if RHI_RAYTRACING FRayTracingGeometry RayTracingGeometry ; # endif bool bResourcesInitialized ;)",
    "insertText": "FSkeletalMeshObjectLOD(ERHIFeatureLevel::Type InFeatureLevel, FSkeletalMeshRenderData* InSkelMeshRenderData, int32 InLOD) : SkelMeshRenderData(InSkelMeshRenderData) , LODIndex(InLOD) , VertexFactory(InFeatureLevel, \"FSkeletalMeshObjectStatic::FSkeletalMeshObjectLOD\") , ColorVertexBuffer(nullptr) , bResourcesInitialized(false)"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitResources(FSkelMeshComponentLODInfo* CompLODInfo)"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  }
]