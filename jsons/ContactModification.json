[
  {
    "label": "FImplicitObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImplicitObject"
  },
  {
    "label": "FPBDCollisionConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraint"
  },
  {
    "label": "FPBDCollisionConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraints"
  },
  {
    "label": "FCollisionContactModifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCollisionContactModifier"
  },
  {
    "label": "FContactPairModifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContactPairModifier"
  },
  {
    "label": "FPerShapeData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPerShapeData"
  },
  {
    "label": "FShapeInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FShapeInstance"
  },
  {
    "label": "FPBDCollisionConstraintContainerCookie",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPBDCollisionConstraintContainerCookie"
  },
  {
    "label": "FVisitedContactPairsTracker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVisitedContactPairsTracker"
  },
  {
    "label": "FContactPairModifierIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContactPairModifierIterator"
  },
  {
    "label": "FContactPairModifierParticleRangeIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContactPairModifierParticleRangeIterator"
  },
  {
    "label": "FContactPairModifierParticleRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FContactPairModifierParticleRange"
  },
  {
    "label": "FContactPairModifier()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" # include \" ParticleHandleFwd . h \" # include \" Chaos / ImplicitFwd . h \" namespace { int32 ParticleContactsStackSize = 1 6 ; } namespace Chaos { class FImplicitObject ; class FPBDCollisionConstraint ; class FPBDCollisionConstraints ; class FCollisionContactModifier ; class FContactPairModifier ; class FPerShapeData ; class FShapeInstance ; class FPBDCollisionConstraintContainerCookie ; class FContactPairModifier { public :)",
    "insertText": "FContactPairModifier() : Constraint(nullptr) , Modifier(nullptr)"
  },
  {
    "label": "FContactPairModifier()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FContactPairModifier(FPBDCollisionConstraint* InConstraint, FCollisionContactModifier& InModifier) : Constraint(InConstraint) , Modifier(&InModifier)"
  },
  {
    "label": "Disable()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Disable()"
  },
  {
    "label": "Enable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enable()"
  },
  {
    "label": "ConvertToProbe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToProbe()"
  },
  {
    "label": "ConvertToNonProbe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToNonProbe()"
  },
  {
    "label": "GetIsProbe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsProbe()"
  },
  {
    "label": "GetNumContacts()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumContacts()"
  },
  {
    "label": "GetDeepestContactIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDeepestContactIndex()"
  },
  {
    "label": "GetContactGeometry()",
    "kind": "Method",
    "detail": "Function (const FImplicitObject*)",
    "insertText": "GetContactGeometry(int32 ParticleIdx)"
  },
  {
    "label": "GetShapeToWorld()",
    "kind": "Method",
    "detail": "Function (FRigidTransform3)",
    "insertText": "GetShapeToWorld(int32 ParticleIdx)"
  },
  {
    "label": "GetSeparation()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetSeparation(int32 ContactPointIdx)"
  },
  {
    "label": "GetTargetSeparation()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetTargetSeparation(int32 ContactPointIdx)"
  },
  {
    "label": "ModifyTargetSeparation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyTargetSeparation(FReal TargetSeparation, int32 ContactPointIdx)"
  },
  {
    "label": "GetWorldNormal()",
    "kind": "Method",
    "detail": "Function (FVec3)",
    "insertText": "GetWorldNormal(int32 ContactPointIdx)"
  },
  {
    "label": "ModifyWorldNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyWorldNormal(const FVec3& Normal, int32 ContactPointIdx)"
  },
  {
    "label": "GetWorldContactLocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetWorldContactLocations(int32 ContactPointIdx, FVec3& OutLocation0, FVec3& OutLocation1)"
  },
  {
    "label": "GetWorldContactLocation()",
    "kind": "Method",
    "detail": "Function (FVec3)",
    "insertText": "GetWorldContactLocation(int32 ContactPointIdx)"
  },
  {
    "label": "ModifyWorldContactLocations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyWorldContactLocations(const FVec3& Location0, const FVec3& Location1, int32 ContactPointIdx)"
  },
  {
    "label": "GetRestitution()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetRestitution()"
  },
  {
    "label": "ModifyRestitution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyRestitution(FReal Restitution)"
  },
  {
    "label": "GetRestitutionThreshold()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetRestitutionThreshold()"
  },
  {
    "label": "ModifyRestitutionThreshold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyRestitutionThreshold(FReal Restitution)"
  },
  {
    "label": "GetDynamicFriction()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetDynamicFriction()"
  },
  {
    "label": "ModifyDynamicFriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyDynamicFriction(FReal DynamicFriction)"
  },
  {
    "label": "GetStaticFriction()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetStaticFriction()"
  },
  {
    "label": "ModifyStaticFriction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyStaticFriction(FReal StaticFriction)"
  },
  {
    "label": "GetParticleVelocity()",
    "kind": "Method",
    "detail": "Function (FVec3)",
    "insertText": "GetParticleVelocity(int32 ParticleIdx)"
  },
  {
    "label": "ModifyParticleVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyParticleVelocity(FVec3 Velocity, int32 ParticleIdx)"
  },
  {
    "label": "GetParticleAngularVelocity()",
    "kind": "Method",
    "detail": "Function (FVec3)",
    "insertText": "GetParticleAngularVelocity(int32 ParticleIdx)"
  },
  {
    "label": "ModifyParticleAngularVelocity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyParticleAngularVelocity(FVec3 AngularVelocity, int32 ParticleIdx)"
  },
  {
    "label": "GetParticlePosition()",
    "kind": "Method",
    "detail": "Function (FVec3)",
    "insertText": "GetParticlePosition(int32 ParticleIdx)"
  },
  {
    "label": "ModifyParticlePosition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyParticlePosition(FVec3 Position, bool bMaintainVelocity, int32 ParticleIdx)"
  },
  {
    "label": "GetParticleRotation()",
    "kind": "Method",
    "detail": "Function (FRotation3)",
    "insertText": "GetParticleRotation(int32 ParticleIdx)"
  },
  {
    "label": "ModifyParticleRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyParticleRotation(FRotation3 Rotation, bool bMaintainVelocity, int32 ParticleIdx)"
  },
  {
    "label": "GetInvInertiaScale()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetInvInertiaScale(int32 ParticleIdx)"
  },
  {
    "label": "ModifyInvInertiaScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyInvInertiaScale(FReal InvInertiaScale, int32 ParticleIdx)"
  },
  {
    "label": "GetInvMassScale()",
    "kind": "Method",
    "detail": "Function (FReal)",
    "insertText": "GetInvMassScale(int32 ParticleIdx)"
  },
  {
    "label": "ModifyInvMassScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyInvMassScale(FReal InvMassScale, int32 ParticleIdx)"
  },
  {
    "label": "GetOtherParticle()",
    "kind": "Method",
    "detail": "Function (FGeometryParticleHandle*)",
    "insertText": "GetOtherParticle(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "GetParticlePair()",
    "kind": "Method",
    "detail": "Function (TVec2<FGeometryParticleHandle*>)",
    "insertText": "GetParticlePair()"
  },
  {
    "label": "GetShapePair()",
    "kind": "Method",
    "detail": "Function (TVec2<const FPerShapeData*>)",
    "insertText": "GetShapePair()"
  },
  {
    "label": "GetShape()",
    "kind": "Method",
    "detail": "Function (const FShapeInstance*)",
    "insertText": "GetShape(int32 ParticleIdx)"
  },
  {
    "label": "GetImplicit()",
    "kind": "Method",
    "detail": "Function (const FConstImplicitObjectRef)",
    "insertText": "GetImplicit(int32 ParticleIdx)"
  },
  {
    "label": "IsEdgeContactPoint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEdgeContactPoint(int32 ContactPointIdx)"
  },
  {
    "label": "IsContactPointDisabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsContactPointDisabled(int32 ContactPointIdx)"
  },
  {
    "label": "SetContactPointDisabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContactPointDisabled(int32 ContactPointIdx)"
  },
  {
    "label": "GetConstraintContainerCookie()",
    "kind": "Method",
    "detail": "Function (private : const FPBDCollisionConstraintContainerCookie&)",
    "insertText": "GetConstraintContainerCookie()"
  },
  {
    "label": "UpdateConstraintShapeTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConstraintShapeTransforms()"
  },
  {
    "label": "FContactPairModifierIterator()",
    "kind": "Method",
    "detail": "Function (FPBDCollisionConstraint* Constraint ; FCollisionContactModifier* Modifier ; class FVisitedContactPairsTracker ; } ; class FContactPairModifierIterator { public :)",
    "insertText": "FContactPairModifierIterator()"
  },
  {
    "label": "SetToEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetToEnd()"
  },
  {
    "label": "FContactPairModifierIterator()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FContactPairModifierIterator(FCollisionContactModifier& InModifier) : ConstraintIdx(0) , Modifier(&InModifier) , PairModifier()"
  },
  {
    "label": "SeekValidContact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeekValidContact()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FContactPairModifier&)",
    "insertText": "operator()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FContactPairModifierIterator& Value)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "EnsureValid()",
    "kind": "Method",
    "detail": "Function (ConstraintIdx = INDEX_NONE ; Modifier = nullptr ; } void)",
    "insertText": "EnsureValid()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (+ + Index ; PairModifier =)",
    "insertText": "IsValid() ? FContactPairModifier(Constraints[Index], *Modifier) : FContactPairModifier()"
  },
  {
    "label": "FContactPairModifierParticleRangeIterator()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FContactPairModifierParticleRangeIterator(FCollisionContactModifier* InModifier, TArray<FPBDCollisionConstraint*, TInlineAllocator<ParticleContactsStackSize>>& InConstraints, int32 InIndex) : Modifier(InModifier) , Constraints(InConstraints) , Index(InIndex)"
  },
  {
    "label": "begin()",
    "kind": "Method",
    "detail": "Function (} FCollisionContactModifier* Modifier ; FContactPairModifier PairModifier ; TArray<FPBDCollisionConstraint*,TInlineAllocator<ParticleContactsStackSize>>& Constraints ; int32 Index ; class FContactPairModifierParticleRange ; } ; class FContactPairModifierParticleRange { public : FContactPairModifierParticleRangeIterator)",
    "insertText": "begin()"
  },
  {
    "label": "end()",
    "kind": "Method",
    "detail": "Function (FContactPairModifierParticleRangeIterator)",
    "insertText": "end()"
  },
  {
    "label": "FContactPairModifierParticleRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FContactPairModifierParticleRange(FContactPairModifierParticleRange&& Other) : Modifier(Other.Modifier) , Particle(Other.Particle) , Constraints(MoveTemp(Other.Constraints))"
  },
  {
    "label": "FContactPairModifierParticleRange()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FContactPairModifierParticleRange(FCollisionContactModifier* InModifier, FGeometryParticleHandle* InParticle)"
  },
  {
    "label": "Visit()",
    "kind": "Method",
    "detail": "Function (FCollisionContactModifier* Modifier ; FGeometryParticleHandle* Particle ; TArray<FPBDCollisionConstraint*,TInlineAllocator<ParticleContactsStackSize>> Constraints ; class FCollisionContactModifier ; } ; class FVisitedContactPairsTracker { public : bool)",
    "insertText": "Visit(const FContactPairModifier& ContactPair)"
  },
  {
    "label": "FVisitedContactPairsTracker()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FVisitedContactPairsTracker(const TArrayView<FPBDCollisionConstraint* const>& InConstraints) : Constraints(InConstraints) , VisitedContacts(false, Constraints.Num())"
  },
  {
    "label": "FCollisionContactModifier()",
    "kind": "Method",
    "detail": "Function (} TArrayView<FPBDCollisionConstraint* const> Constraints ; TBitArray<> VisitedContacts ; class FCollisionContactModifier ; } ; class FCollisionContactModifier { public : FContactPairModifier ; FContactPairModifierIterator ; FPBDCollisionConstraints ;)",
    "insertText": "FCollisionContactModifier(const TArrayView<FPBDCollisionConstraint* const>& InConstraints, FReal InDt) : Constraints(InConstraints) , Dt(InDt)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (} FContactPairModifierIterator)",
    "insertText": "Begin()"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (} FContactPairModifierIterator)",
    "insertText": "End()"
  },
  {
    "label": "GetContacts()",
    "kind": "Method",
    "detail": "Function (} FContactPairModifierParticleRange)",
    "insertText": "GetContacts(FGeometryParticleHandle* Particle)"
  },
  {
    "label": "MakeVisitedContactPairsTracker()",
    "kind": "Method",
    "detail": "Function (FVisitedContactPairsTracker)",
    "insertText": "MakeVisitedContactPairsTracker()"
  },
  {
    "label": "GetConstraints()",
    "kind": "Method",
    "detail": "Function (private : TArrayView<FPBDCollisionConstraint* const>&)",
    "insertText": "GetConstraints()"
  },
  {
    "label": "DisableConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisableConstraint(FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "EnableConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableConstraint(FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "ConvertToProbeConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToProbeConstraint(FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "ConvertToNonProbeConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertToNonProbeConstraint(FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "MarkConstraintForManifoldUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkConstraintForManifoldUpdate(FPBDCollisionConstraint& Constraint)"
  },
  {
    "label": "UpdateConstraintManifolds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConstraintManifolds()"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (TArrayView<FPBDCollisionConstraint* const> Constraints ; TSet<FPBDCollisionConstraint*> NeedsManifoldUpdate ; FReal Dt ; } ; using FCollisionModifierCallback = TFunction<)",
    "insertText": "void(const FCollisionContactModifier&)"
  }
]