[
  {
    "label": "FParticleSimulationSortInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FParticleSimulationSortInfo"
  },
  {
    "label": "FParticleSimulationSortInfo()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RenderResource . h \" # include \" GPUSortManager . h \" struct FParticleSimulationSortInfo { typedef FGPUSortManager::FAllocationInfo FAllocationInfo ;)",
    "insertText": "FParticleSimulationSortInfo(FRHIShaderResourceView* InVertexBufferSRV, const FVector& InViewOrigin, uint32 InParticleCount, const FAllocationInfo& InAllocationInfo) : VertexBufferSRV(InVertexBufferSRV) , ViewOrigin(InViewOrigin) , ParticleCount(InParticleCount) , AllocationInfo(InAllocationInfo)"
  },
  {
    "label": "GenerateParticleSortKeys()",
    "kind": "Method",
    "detail": "Function (} FRHIShaderResourceView* VertexBufferSRV = nullptr ; FVector ViewOrigin ; uint32 ParticleCount = 0 ; FGPUSortManager::FAllocationInfo AllocationInfo ; } ; int32)",
    "insertText": "GenerateParticleSortKeys(FRHICommandListImmediate& RHICmdList, FRHIUnorderedAccessView* KeyBufferUAV, FRHIUnorderedAccessView* SortedVertexBufferUAV, FRHITexture* PositionTextureRHI, const TArray<FParticleSimulationSortInfo>& SimulationsToSort, ERHIFeatureLevel::Type FeatureLevel, int32 BatchId = INDEX_NONE)"
  }
]