[
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "UPersonaOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPersonaOptions"
  },
  {
    "label": "FPersonaAssetFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersonaAssetFamily"
  },
  {
    "label": "FPersonaAssetFamilyManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPersonaAssetFamilyManager"
  },
  {
    "label": "FPersonaAssetFamily()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Animation / Skeleton . h \" # include \" Engine / SkeletalMesh . h \" # include \" Animation / AnimationAsset . h \" # include \" AssetRegistry / AssetData . h \" # include \" IAssetFamily . h \" class UAnimBlueprint ; class UPhysicsAsset ; class UPersonaOptions ; class FPersonaAssetFamily : public IAssetFamily,public TSharedFromThis<FPersonaAssetFamily> { public :)",
    "insertText": "FPersonaAssetFamily(const UObject* InFromObject)"
  },
  {
    "label": "FPersonaAssetFamily()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FPersonaAssetFamily(const UObject* InFromObject, const TSharedRef<FPersonaAssetFamily> InFromFamily)"
  },
  {
    "label": "FPersonaAssetFamily()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FPersonaAssetFamily()"
  },
  {
    "label": "GetAssetTypes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GetAssetTypes(TArray<UClass*>& OutAssetTypes)"
  },
  {
    "label": "FindAssetOfType()",
    "kind": "Method",
    "detail": "Function (FAssetData)",
    "insertText": "FindAssetOfType(UClass* InAssetClass)"
  },
  {
    "label": "FindAssetsOfType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindAssetsOfType(UClass* InAssetClass, TArray<FAssetData>& OutAssets)"
  },
  {
    "label": "GetAssetTypeDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetAssetTypeDisplayName(UClass* InAssetClass)"
  },
  {
    "label": "GetAssetTypeDisplayIcon()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetAssetTypeDisplayIcon(UClass* InAssetClass)"
  },
  {
    "label": "GetAssetTypeDisplayTint()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetAssetTypeDisplayTint(UClass* InAssetClass)"
  },
  {
    "label": "IsAssetCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetCompatible(const FAssetData& InAssetData)"
  },
  {
    "label": "GetAssetFamilyClass()",
    "kind": "Method",
    "detail": "Function (UClass*)",
    "insertText": "GetAssetFamilyClass(UClass* InClass)"
  },
  {
    "label": "RecordAssetOpened()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecordAssetOpened(const FAssetData& InAssetData)"
  },
  {
    "label": "DECLARE_DERIVED_EVENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DERIVED_EVENT(FPersonaAssetFamily, IAssetFamily::FOnAssetOpened, FOnAssetOpened) virtual FOnAssetOpened& GetOnAssetOpened()"
  },
  {
    "label": "FindCounterpartAssets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FindCounterpartAssets(const UObject* InAsset, const USkeleton*& OutSkeleton, const USkeletalMesh*& OutMesh)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "Initialize()"
  },
  {
    "label": "OnSettingsChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSettingsChange(const UPersonaOptions* InOptions, EPropertyChangeType::Type InChangeType)"
  }
]