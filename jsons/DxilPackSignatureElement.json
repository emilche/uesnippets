[
  {
    "label": "ShaderModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ShaderModel"
  },
  {
    "label": "DxilPackElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilPackElement"
  },
  {
    "label": "DxilSignature",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DxilSignature"
  },
  {
    "label": "DxilPackElement()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" dxc / DXIL / DxilCompType . h \" # include \" dxc / DXIL / DxilInterpolationMode . h \" # include \" dxc / DXIL / DxilSemantic . h \" # include \" dxc / DXIL / DxilSignatureElement . h \" # include \" dxc / HLSL / DxilSignatureAllocator . h \" # include \" llvm / ADT / StringRef . h \" # include<limits . h> # include<string> # include<vector> namespace hlsl { class ShaderModel ; class DxilPackElement : public DxilSignatureAllocator::PackElement { DxilSignatureElement* m_pSE ; bool m_bUseMinPrecision ; public :)",
    "insertText": "DxilPackElement(DxilSignatureElement *pSE, bool useMinPrecision) : m_pSE(pSE), m_bUseMinPrecision(useMinPrecision)"
  },
  {
    "label": "DxilPackElement()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "DxilPackElement()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "GetID()"
  },
  {
    "label": "GetKind()",
    "kind": "Method",
    "detail": "Function (} DXIL::SemanticKind)",
    "insertText": "GetKind()"
  },
  {
    "label": "GetInterpolationMode()",
    "kind": "Method",
    "detail": "Function (} DXIL::InterpolationMode)",
    "insertText": "GetInterpolationMode()"
  },
  {
    "label": "GetInterpretation()",
    "kind": "Method",
    "detail": "Function (} DXIL::SemanticInterpretationKind)",
    "insertText": "GetInterpretation()"
  },
  {
    "label": "GetDataBitWidth()",
    "kind": "Method",
    "detail": "Function (} DXIL::SignatureDataWidth)",
    "insertText": "GetDataBitWidth()"
  },
  {
    "label": "GetCompType()",
    "kind": "Method",
    "detail": "Function (uint8_t size = m_pSE ->)",
    "insertText": "GetCompType().GetSizeInBits()"
  },
  {
    "label": "GetCols()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "GetCols()"
  },
  {
    "label": "IsAllocated()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAllocated()"
  },
  {
    "label": "GetStartRow()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "GetStartRow()"
  },
  {
    "label": "GetStartCol()",
    "kind": "Method",
    "detail": "Function (} uint32_t)",
    "insertText": "GetStartCol()"
  },
  {
    "label": "ClearLocation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearLocation()"
  },
  {
    "label": "SetStartRow()",
    "kind": "Method",
    "detail": "Function (m_pSE ->)",
    "insertText": "SetStartRow(-1)"
  },
  {
    "label": "SetStartCol()",
    "kind": "Method",
    "detail": "Function (m_pSE ->)",
    "insertText": "SetStartCol(-1)"
  },
  {
    "label": "SetLocation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetLocation(uint32_t Row, uint32_t Col)"
  },
  {
    "label": "SetStartRow()",
    "kind": "Method",
    "detail": "Function (m_pSE ->)",
    "insertText": "SetStartRow(Row)"
  },
  {
    "label": "SetStartCol()",
    "kind": "Method",
    "detail": "Function (m_pSE ->)",
    "insertText": "SetStartCol(Col)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} DxilSignatureElement*)",
    "insertText": "Get()"
  }
]