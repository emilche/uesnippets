[
  {
    "label": "FTypedElementHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTypedElementHandle"
  },
  {
    "label": "FObjectElementData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectElementData"
  },
  {
    "label": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Elements / Framework / TypedElementData . h \" # include \" UObject / Object . h \" struct FTypedElementHandle ; struct FObjectElementData {)",
    "insertText": "UE_DECLARE_TYPED_ELEMENT_DATA_RTTI(FObjectElementData)"
  },
  {
    "label": "FObjectElementData()",
    "kind": "Method",
    "detail": "Function (UObject* Object = nullptr ; } ; template<> FString GetTypedElementDebugId<)",
    "insertText": "FObjectElementData(const FObjectElementData& InElementData)"
  },
  {
    "label": "GetFullName()",
    "kind": "Method",
    "detail": "Function (UObject* Object = InElementData . Object ; return Object ? Object ->)",
    "insertText": "GetFullName() : TEXT(\"null\")"
  },
  {
    "label": "GetObjectFromHandle()",
    "kind": "Method",
    "detail": "Function (} namespace ObjectElementDataUtil { UObject*)",
    "insertText": "GetObjectFromHandle(const FTypedElementHandle& InHandle, const bool bSilent = false)"
  },
  {
    "label": "GetObjectFromHandleChecked()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObjectFromHandleChecked(const FTypedElementHandle& InHandle)"
  },
  {
    "label": "GetObjectsFromHandles()",
    "kind": "Method",
    "detail": "Function (template<ElementHandleType> TArray<UObject*>)",
    "insertText": "GetObjectsFromHandles(TArrayView<const ElementHandleType> InHandles, const bool bSilent = false)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (TArray<UObject*> Objects ; Objects .)",
    "insertText": "Reserve(InHandles.Num())"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Objects .)",
    "insertText": "Add(Object)"
  },
  {
    "label": "GetObjectsFromHandlesChecked()",
    "kind": "Method",
    "detail": "Function (} } return Objects ; } template<ElementHandleType> TArray<UObject*>)",
    "insertText": "GetObjectsFromHandlesChecked(TArrayView<const ElementHandleType> InHandles)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Objects .)",
    "insertText": "Add(GetObjectFromHandleChecked(Handle))"
  }
]