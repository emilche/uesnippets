[
  {
    "label": "FBulkDataWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBulkDataWriter"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "FBulkDataWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" HAL / UnrealMemory . h \" # include \" Serialization / Archive . h \" # include \" Serialization / BulkData . h \" # include \" Containers / UnrealString . h \" class FBulkDataWriter final : public FArchive { public :)",
    "insertText": "FBulkDataWriter(FByteBulkData& InBulkData, bool bIsPersistent = false ) : BulkData( InBulkData ) , WriterPos( BulkData.GetBulkDataSize() ) , WriterSize( WriterPos)"
  },
  {
    "label": "SetIsSaving()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSaving(true)"
  },
  {
    "label": "SetIsPersistent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsPersistent(bIsPersistent)"
  },
  {
    "label": "Lock()",
    "kind": "Method",
    "detail": "Function (Buffer = BulkData .)",
    "insertText": "Lock(LOCK_READ_WRITE)"
  },
  {
    "label": "FBulkDataWriter()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FBulkDataWriter()"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (BulkData .)",
    "insertText": "Realloc(WriterSize)"
  },
  {
    "label": "Unlock()",
    "kind": "Method",
    "detail": "Function (BulkData .)",
    "insertText": "Unlock()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Serialize(void* Data, int64 Num)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (const int64 NewPos = WriterPos + Num ;)",
    "insertText": "check(NewPos >= WriterPos)"
  },
  {
    "label": "Realloc()",
    "kind": "Method",
    "detail": "Function (Buffer = BulkData .)",
    "insertText": "Realloc(NewPos + 3 * NewPos / 8 + 16)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Memcpy(static_cast<unsigned char*>( Buffer ) + WriterPos, Data, Num)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (WriterPos + = Num ; WriterSize =)",
    "insertText": "Max(WriterSize, WriterPos)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} using FArchive::operator<<; FArchive&)",
    "insertText": "operator(class FName& Name)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString StringName = Name .)",
    "insertText": "ToString()"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (* this<<StringName ; return* this ; } int64)",
    "insertText": "Tell()"
  },
  {
    "label": "AtEnd()",
    "kind": "Method",
    "detail": "Function (WriterPos = InPos ; } bool)",
    "insertText": "AtEnd()"
  }
]