[
  {
    "label": "TOOLWIDGETS_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TOOLWIDGETS_API"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "IActionButton()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Framework / SlateDelegates . h \" # include \" ToolWidgetsSlateTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Input / SComboButton . h \" class IActionButton { public : ~)",
    "insertText": "IActionButton()"
  },
  {
    "label": "SetMenuContentWidgetToFocus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuContentWidgetToFocus(TWeakPtr<SWidget> InWidget)"
  },
  {
    "label": "SetIsMenuOpen()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsMenuOpen(bool bInIsOpen, bool bInIsFocused)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (} ; class SActionButton : public SCompoundWidget,public IActionButton { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SActionButton) : _ActionButtonStyle(nullptr) , _ButtonStyle(nullptr) , _IconButtonStyle(nullptr) , _ComboButtonStyle(nullptr) , _TextBlockStyle(nullptr)"
  },
  {
    "label": "SLATE_STYLE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_STYLE_ARGUMENT(FActionButtonStyle, ActionButtonStyle) SLATE_ATTRIBUTE(EActionButtonType, ActionButtonType) SLATE_STYLE_ARGUMENT(FButtonStyle, ButtonStyle) SLATE_STYLE_ARGUMENT(FButtonStyle, IconButtonStyle) SLATE_ATTRIBUTE(FMargin, ButtonContentPadding) SLATE_STYLE_ARGUMENT(FComboButtonStyle, ComboButtonStyle) SLATE_ARGUMENT(TOptional<bool>, HasDownArrow) SLATE_ARGUMENT(TOptional<EHorizontalAlignment>, HorizontalContentAlignment) SLATE_ATTRIBUTE(FText, Text) SLATE_STYLE_ARGUMENT(FTextBlockStyle, TextBlockStyle) SLATE_ATTRIBUTE(const FSlateBrush*, Icon) SLATE_ATTRIBUTE(FSlateColor, IconColorAndOpacity) #pragma region Button SLATE_EVENT(FOnClicked, OnClicked) #pragma endregion Button #pragma region ComboButton SLATE_NAMED_SLOT(FArguments, MenuContent) SLATE_EVENT(FOnGetContent, OnGetMenuContent) SLATE_EVENT(FOnComboBoxOpened, OnComboBoxOpened) SLATE_EVENT(FOnIsOpenChanged, OnMenuOpenChanged) #pragma endregion ComboButton SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetIconColorAndOpacity()",
    "kind": "Method",
    "detail": "Function (protected : FSlateColor)",
    "insertText": "GetIconColorAndOpacity()"
  }
]