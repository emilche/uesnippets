[
  {
    "label": "plcrash_async_macho",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plcrash_async_macho"
  },
  {
    "label": "mach_header",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "mach_header"
  },
  {
    "label": "plcrash_async_macho_mapped_segment_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plcrash_async_macho_mapped_segment_t"
  },
  {
    "label": "plcrash_async_macho_symtab_entry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plcrash_async_macho_symtab_entry"
  },
  {
    "label": "plcrash_async_macho_symtab_reader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "plcrash_async_macho_symtab_reader"
  },
  {
    "label": "PLCF_DEBUG_IMAGE_NAME()",
    "kind": "Method",
    "detail": "Function (# ifndef PLCRASH_ASYNC_MACHO_IMAGE_H # define PLCRASH_ASYNC_MACHO_IMAGE_H # ifdef __cplusplus \" C \" { # endif # include<stdint . h> # include<mach / mach . h> # include<mach - o / loader . h> # include<mach - o / nlist . h> # include \" PLCrashAsyncMObject . h \" typedef struct plcrash_async_macho { mach_port_t task ; pl_vm_address_t header_addr ; pl_vm_off_t vmaddr_slide ; char* name ; struct mach_header header ; pl_vm_size_t header_size ; uint32_t ncmds ; plcrash_async_mobject_t load_cmds ; pl_vm_address_t text_vmaddr ; pl_vm_size_t text_size ; bool m64 ; const plcrash_async_byteorder_t* byteorder ; } plcrash_async_macho_t ; # define)",
    "insertText": "PLCF_DEBUG_IMAGE_NAME(image) (strrchr(image->name, '/') + 1)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (plcrash_async_mobject_t mobj ; uint64_t fileoff ; uint64_t filesize ; } pl_async_macho_mapped_segment_t ; typedef struct plcrash_async_macho_symtab_entry { uint32_t n_strx ; uint8_t n_type ; uint8_t n_sect ; uint16_t n_desc ; pl_vm_address_t n_value ; pl_vm_address_t normalized_value ; } plcrash_async_macho_symtab_entry_t ; typedef struct plcrash_async_macho_symtab_reader { plcrash_async_macho_t* image ; pl_async_macho_mapped_segment_t linkedit ; void* symtab ; uint32_t nsyms ; void* symtab_global ; uint32_t nsyms_global ; void* symtab_local ; uint32_t nsyms_local ; char* string_table ; size_t string_table_size ; } plcrash_async_macho_symtab_reader_t ; typedef)",
    "insertText": "void(*pl_async_macho_found_symbol_cb)(pl_vm_address_t address, const char *name, void *ctx)"
  },
  {
    "label": "plcrash_nasync_macho_init()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_nasync_macho_init(plcrash_async_macho_t *image, mach_port_t task, const char *name, pl_vm_address_t header)"
  },
  {
    "label": "plcrash_async_macho_byteorder()",
    "kind": "Method",
    "detail": "Function (const plcrash_async_byteorder_t*)",
    "insertText": "plcrash_async_macho_byteorder(plcrash_async_macho_t *image)"
  },
  {
    "label": "plcrash_async_macho_header()",
    "kind": "Method",
    "detail": "Function (const struct mach_header*)",
    "insertText": "plcrash_async_macho_header(plcrash_async_macho_t *image)"
  },
  {
    "label": "plcrash_async_macho_header_size()",
    "kind": "Method",
    "detail": "Function (pl_vm_size_t)",
    "insertText": "plcrash_async_macho_header_size(plcrash_async_macho_t *image)"
  },
  {
    "label": "plcrash_async_macho_contains_address()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "plcrash_async_macho_contains_address(plcrash_async_macho_t *image, pl_vm_address_t address)"
  },
  {
    "label": "plcrash_async_macho_cpu_type()",
    "kind": "Method",
    "detail": "Function (cpu_type_t)",
    "insertText": "plcrash_async_macho_cpu_type(plcrash_async_macho_t *image)"
  },
  {
    "label": "plcrash_async_macho_cpu_subtype()",
    "kind": "Method",
    "detail": "Function (cpu_subtype_t)",
    "insertText": "plcrash_async_macho_cpu_subtype(plcrash_async_macho_t *image)"
  },
  {
    "label": "plcrash_async_macho_next_command()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "plcrash_async_macho_next_command(plcrash_async_macho_t *image, void *previous)"
  },
  {
    "label": "plcrash_async_macho_next_command_type()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "plcrash_async_macho_next_command_type(plcrash_async_macho_t *image, void *previous, uint32_t expectedCommand)"
  },
  {
    "label": "plcrash_async_macho_find_command()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "plcrash_async_macho_find_command(plcrash_async_macho_t *image, uint32_t cmd)"
  },
  {
    "label": "plcrash_async_macho_find_segment_cmd()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "plcrash_async_macho_find_segment_cmd(plcrash_async_macho_t *image, const char *segname)"
  },
  {
    "label": "plcrash_async_macho_map_segment()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_macho_map_segment(plcrash_async_macho_t *image, const char *segname, pl_async_macho_mapped_segment_t *seg)"
  },
  {
    "label": "plcrash_async_macho_map_section()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_macho_map_section(plcrash_async_macho_t *image, const char *segname, const char *sectname, plcrash_async_mobject_t *mobj)"
  },
  {
    "label": "plcrash_async_macho_find_symbol_by_pc()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_macho_find_symbol_by_pc(plcrash_async_macho_t *image, pl_vm_address_t pc, pl_async_macho_found_symbol_cb symbol_cb, void *context)"
  },
  {
    "label": "plcrash_async_macho_find_symbol_by_name()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_macho_find_symbol_by_name(plcrash_async_macho_t *image, const char *symbol, pl_vm_address_t *pc)"
  },
  {
    "label": "plcrash_async_macho_symtab_reader_init()",
    "kind": "Method",
    "detail": "Function (plcrash_error_t)",
    "insertText": "plcrash_async_macho_symtab_reader_init(plcrash_async_macho_symtab_reader_t *reader, plcrash_async_macho_t *image)"
  },
  {
    "label": "plcrash_async_macho_symtab_reader_read()",
    "kind": "Method",
    "detail": "Function (plcrash_async_macho_symtab_entry_t)",
    "insertText": "plcrash_async_macho_symtab_reader_read(plcrash_async_macho_symtab_reader_t *reader, void *symtab, uint32_t index)"
  },
  {
    "label": "plcrash_async_macho_symtab_reader_symbol_name()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "plcrash_async_macho_symtab_reader_symbol_name(plcrash_async_macho_symtab_reader_t *reader, uint32_t n_strx)"
  },
  {
    "label": "plcrash_async_macho_symtab_reader_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "plcrash_async_macho_symtab_reader_free(plcrash_async_macho_symtab_reader_t *reader)"
  },
  {
    "label": "plcrash_async_macho_mapped_segment_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "plcrash_async_macho_mapped_segment_free(pl_async_macho_mapped_segment_t *segment)"
  },
  {
    "label": "plcrash_nasync_macho_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "plcrash_nasync_macho_free(plcrash_async_macho_t *image)"
  }
]