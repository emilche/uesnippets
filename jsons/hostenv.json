[
  {
    "label": "Enviro",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Enviro"
  },
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "HostEnv",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HostEnv"
  },
  {
    "label": "GetCwdbyCS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCwdbyCS( StrBuf &result, int charset )"
  },
  {
    "label": "GetCwd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCwd( StrBuf &result, Enviro * = 0 )"
  },
  {
    "label": "GetCwdbyCS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCwdbyCS( StrBuf &result, Error *e, int charset )"
  },
  {
    "label": "GetCwd()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetCwd( StrBuf &result, Error *e, Enviro * = 0 )"
  },
  {
    "label": "GetHost()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetHost( StrBuf &result )"
  },
  {
    "label": "GetUser()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetUser( StrBuf &result, Enviro * = 0 )"
  },
  {
    "label": "GetTicketFile()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTicketFile( StrBuf &result, Enviro * = 0 )"
  },
  {
    "label": "GetTrustFile()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetTrustFile( StrBuf &result, Enviro * = 0 )"
  },
  {
    "label": "GetAliasesFile()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetAliasesFile( StrBuf &result, Enviro * = 0 )"
  },
  {
    "label": "GetUid()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetUid( int &result )"
  },
  {
    "label": "GetHomeName()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetHomeName( const StrRef &, StrBuf &, \n\t\t\t             Enviro *, const char *varName )"
  }
]