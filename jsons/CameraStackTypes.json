[
  {
    "label": "APlayerCameraManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerCameraManager"
  },
  {
    "label": "FDummySpacerCameraTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDummySpacerCameraTypes"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FCameraUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCameraUpdateContext"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" CameraStackTypes . generated . h \" class APlayerCameraManager ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY()"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (enum Type : int { CABM_Linear)",
    "insertText": "UMETA(DisplayName=\"Linear\"), CABM_Cubic UMETA(DisplayName=\"Cubic\")"
  },
  {
    "label": "FCameraUpdateContext()",
    "kind": "Method",
    "detail": "Function (} struct FCameraUpdateContext { private : float TrueCurrentWeight ; float NonDebugCurrentWeight ; float DeltaTime ; APlayerCameraManager* Camera ; public :)",
    "insertText": "FCameraUpdateContext(APlayerCameraManager* InCamera, float InDeltaTime) : TrueCurrentWeight(1.0f) , NonDebugCurrentWeight(1.0f) , DeltaTime(InDeltaTime) , Camera(InCamera)"
  },
  {
    "label": "FractionalWeight()",
    "kind": "Method",
    "detail": "Function (} FCameraUpdateContext)",
    "insertText": "FractionalWeight(float Multiplier, bool bFromDebugNode)"
  },
  {
    "label": "Result()",
    "kind": "Method",
    "detail": "Function (FCameraUpdateContext)",
    "insertText": "Result(Camera, DeltaTime)"
  },
  {
    "label": "NonDebugCurrentWeight()",
    "kind": "Method",
    "detail": "Function (Result . TrueCurrentWeight = TrueCurrentWeight* Multiplier ; Result . NonDebugCurrentWeight =)",
    "insertText": "NonDebugCurrentWeight(bFromDebugNode ? 1.0f : Multiplier)"
  }
]