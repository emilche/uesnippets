[
  {
    "label": "FArchiveLoadCompressedProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchiveLoadCompressedProxy"
  },
  {
    "label": "FArchiveLoadCompressedProxy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreTypes . h \" # include \" Misc / Compression . h \" # include \" Misc / CompressionFlags . h \" # include \" Serialization / Archive . h \" # include \" UObject / NameTypes . h \" class FArchiveLoadCompressedProxy : public FArchive { public :)",
    "insertText": "FArchiveLoadCompressedProxy(const TArray<uint8>& InCompressedData, FName CompressionFormat, ECompressionFlags InCompressionFlags=COMPRESS_NoFlags)"
  },
  {
    "label": "FArchiveLoadCompressedProxy()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FArchiveLoadCompressedProxy()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(void* Data, int64 Count)"
  },
  {
    "label": "Seek()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Seek(int64 InPos)"
  },
  {
    "label": "Tell()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Tell()"
  },
  {
    "label": "DecompressMoreData()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "DecompressMoreData()"
  }
]