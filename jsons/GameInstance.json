[
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FOnlineSessionSearchResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOnlineSessionSearchResult"
  },
  {
    "label": "FTimerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimerManager"
  },
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "ULocalPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalPlayer"
  },
  {
    "label": "UOnlineSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UOnlineSession"
  },
  {
    "label": "EPlayNetMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPlayNetMode"
  },
  {
    "label": "FLatentActionManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLatentActionManager"
  },
  {
    "label": "FNetDriverReplicationSystemConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetDriverReplicationSystemConfig"
  },
  {
    "label": "ULevelEditorPlaySettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelEditorPlaySettings"
  },
  {
    "label": "IAnalyticsProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalyticsProvider"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FOnlineSessionSearchResult",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOnlineSessionSearchResult"
  },
  {
    "label": "FGameInstancePIEResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameInstancePIEResult"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FGameInstancePIEParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGameInstancePIEParameters"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UGameInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameInstance"
  },
  {
    "label": "FWorldContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldContext"
  },
  {
    "label": "UOnlineSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UOnlineSession"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "UEngine",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEngine"
  },
  {
    "label": "FWorldContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWorldContext"
  },
  {
    "label": "UGameViewportClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameViewportClient"
  },
  {
    "label": "FReplayPlaylistParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplayPlaylistParams"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "AGameModeBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AGameModeBase"
  },
  {
    "label": "UOnlineSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UOnlineSession"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "FGameInstancePIEResult()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FGameInstancePIEResult(false, InReason)"
  },
  {
    "label": "FGameInstancePIEParameters()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FGameInstancePIEParameters()"
  },
  {
    "label": "HandleOpenCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleOpenCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "HandleDisconnectCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDisconnectCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "HandleReconnectCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleReconnectCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "HandleTravelCommand()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTravelCommand(const TCHAR* Cmd, FOutputDevice& Ar, UWorld* InWorld)"
  },
  {
    "label": "OnPlayTogetherEventReceived()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPlayTogetherEventReceived(int32 UserIndex, const TArray<const FUniqueNetId&>& UserList)"
  },
  {
    "label": "OnConsoleInput()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConsoleInput(const FString& Command)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init()"
  },
  {
    "label": "ReceiveInit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveInit()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "ReceiveShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceiveShutdown()"
  },
  {
    "label": "HandleInputDeviceConnectionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInputDeviceConnectionChange(EInputDeviceConnectionState NewConnectionState, FPlatformUserId PlatformUserId, FInputDeviceId InputDeviceId)"
  },
  {
    "label": "HandleInputDevicePairingChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleInputDevicePairingChange(FInputDeviceId InputDeviceId, FPlatformUserId NewUserPlatformId, FPlatformUserId OldUserPlatformId)"
  },
  {
    "label": "HandleNetworkError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleNetworkError(ENetworkFailure::Type FailureType, bool bIsServer)"
  },
  {
    "label": "HandleTravelError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTravelError(ETravelFailure::Type FailureType)"
  },
  {
    "label": "InitializeStandalone()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeStandalone(const FName InWorldName = NAME_None, UPackage* InWorldPackage = nullptr)"
  },
  {
    "label": "InitializeForMinimalNetRPC()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeForMinimalNetRPC(const FName InPackageName)"
  },
  {
    "label": "CreateMinimalNetRPCWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateMinimalNetRPCWorld(const FName InPackageName, UPackage*& OutWorldPackage, UWorld*& OutWorld)"
  },
  {
    "label": "InitializeForPlayInEditor()",
    "kind": "Method",
    "detail": "Function (FGameInstancePIEResult)",
    "insertText": "InitializeForPlayInEditor(int32 PIEInstanceIndex, const FGameInstancePIEParameters& Params)"
  },
  {
    "label": "StartPlayInEditorGameInstance()",
    "kind": "Method",
    "detail": "Function (FGameInstancePIEResult)",
    "insertText": "StartPlayInEditorGameInstance(ULocalPlayer* LocalPlayer, const FGameInstancePIEParameters& Params)"
  },
  {
    "label": "PostCreateGameModeForPIE()",
    "kind": "Method",
    "detail": "Function (FGameInstancePIEResult)",
    "insertText": "PostCreateGameModeForPIE(const FGameInstancePIEParameters& Params, AGameModeBase* GameMode)"
  },
  {
    "label": "ReportPIEStartupTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReportPIEStartupTime()"
  },
  {
    "label": "OnWorldChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldChanged(UWorld* OldWorld, UWorld* NewWorld)"
  },
  {
    "label": "StartGameInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartGameInstance()"
  },
  {
    "label": "DebugCreatePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugCreatePlayer(int32 ControllerId)"
  },
  {
    "label": "DebugRemovePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DebugRemovePlayer(int32 ControllerId)"
  },
  {
    "label": "AddLocalPlayer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddLocalPlayer(ULocalPlayer* NewPlayer, int32 ControllerId)"
  },
  {
    "label": "AddLocalPlayer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddLocalPlayer(ULocalPlayer* NewPlayer, FPlatformUserId UserId)"
  },
  {
    "label": "RemoveLocalPlayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveLocalPlayer(ULocalPlayer * ExistingPlayer)"
  },
  {
    "label": "CleanupGameViewport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CleanupGameViewport()"
  },
  {
    "label": "StopRecordingReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRecordingReplay()"
  },
  {
    "label": "PlayReplayPlaylist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PlayReplayPlaylist(const struct FReplayPlaylistParams& PlaylistParams)"
  },
  {
    "label": "AddUserToReplay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddUserToReplay(const FString& UserString)"
  },
  {
    "label": "EnableListenServer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnableListenServer(bool bEnable, int32 PortOverride = 0)"
  },
  {
    "label": "ReceivedNetworkEncryptionToken()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedNetworkEncryptionToken(const FString& EncryptionToken, const FOnEncryptionKeyResponse& Delegate)"
  },
  {
    "label": "ReceivedNetworkEncryptionAck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReceivedNetworkEncryptionAck(const FOnEncryptionKeyResponse& Delegate)"
  },
  {
    "label": "ReceivedNetworkEncryptionFailure()",
    "kind": "Method",
    "detail": "Function (EEncryptionFailureAction)",
    "insertText": "ReceivedNetworkEncryptionFailure(UNetConnection* Connection)"
  },
  {
    "label": "PreloadContentForURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreloadContentForURL(FURL InURL)"
  },
  {
    "label": "SetPersistentTravelURL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPersistentTravelURL(FURL InURL)"
  },
  {
    "label": "GetOnlineSessionClass()",
    "kind": "Method",
    "detail": "Function (TSubclassOf<UOnlineSession>)",
    "insertText": "GetOnlineSessionClass()"
  },
  {
    "label": "ClientTravelToSession()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClientTravelToSession(int32 ControllerId, FName InSessionName)"
  },
  {
    "label": "NotifyPreClientTravel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyPreClientTravel(const FString& PendingURL, ETravelType TravelType, bool bIsSeamlessTravel)"
  },
  {
    "label": "ReturnToMainMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReturnToMainMenu()"
  },
  {
    "label": "RegisterReferencedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterReferencedObject(UObject* ObjectToReference)"
  },
  {
    "label": "UnregisterReferencedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterReferencedObject(UObject* ObjectToReference)"
  },
  {
    "label": "BroadcastOnStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastOnStart()"
  },
  {
    "label": "OnStart()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnStart()"
  },
  {
    "label": "GetMapOverrideName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetMapOverrideName(const TCHAR* CmdLine, FString& OverrideMapName)"
  }
]