[
  {
    "label": "QpParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "QpParser"
  },
  {
    "label": "H264QpParser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "H264QpParser"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_UTILITY_QP_PARSER_H_ # define MODULES_VIDEO_CODING_UTILITY_QP_PARSER_H_ # include \" absl / types / optional . h \" # include \" api / video / video_codec_constants . h \" # include \" api / video / video_codec_type . h \" # include \" common_video / h264 / h264_bitstream_parser . h \" # include \" rtc_base / synchronization / mutex . h \" namespace webrtc { class QpParser { public : absl::optional<uint32_t>)",
    "insertText": "Parse(VideoCodecType codec_type, size_t spatial_idx, const uint8_t* frame_data, size_t frame_size)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (private : class H264QpParser { public : absl::optional<uint32_t>)",
    "insertText": "Parse(const uint8_t* frame_data, size_t frame_size)"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : Mutex mutex_ ; H264BitstreamParser bitstream_parser_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  }
]