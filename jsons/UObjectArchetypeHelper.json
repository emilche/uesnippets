[
  {
    "label": "FObjectArchetypeHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectArchetypeHelper"
  },
  {
    "label": "IObjectArchetypePolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IObjectArchetypePolicy"
  },
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "FCacheArchetype",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCacheArchetype"
  },
  {
    "label": "FEditorCacheArchetypeManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEditorCacheArchetypeManager"
  },
  {
    "label": "GetArchetype()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreFwd . h \" # include \" UObject / Object . h \" # include \" UObject / UObjectAnnotation . h \" class FObjectArchetypeHelper { public : class IObjectArchetypePolicy { # if WITH_EDITOR public : UObject*)",
    "insertText": "GetArchetype(const UObject* InObject)"
  },
  {
    "label": "GetArchetype()",
    "kind": "Method",
    "detail": "Function (# endif } ; # if WITH_EDITOR private : class FPropertyNode ; # endif UObject*)",
    "insertText": "GetArchetype(const UObject* InObject, const IObjectArchetypePolicy* InPolicy)"
  },
  {
    "label": "IsDefault()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITOR struct FCacheArchetype { bool)",
    "insertText": "IsDefault()"
  },
  {
    "label": "CacheArchetype()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheArchetype(gsl::not_null<const UObject*> Object, UObject* Archetype = nullptr)"
  },
  {
    "label": "GetAnnotation()",
    "kind": "Method",
    "detail": "Function (FCacheArchetype Annotation = ObjectCachedArchetypeAnnotations .)",
    "insertText": "GetAnnotation(Object)"
  },
  {
    "label": "GetArchetype()",
    "kind": "Method",
    "detail": "Function (Annotation . CachedArchetype = Archetype ? Archetype : Object ->)",
    "insertText": "GetArchetype()"
  },
  {
    "label": "AddAnnotation()",
    "kind": "Method",
    "detail": "Function (ObjectCachedArchetypeAnnotations .)",
    "insertText": "AddAnnotation(Object, Annotation)"
  },
  {
    "label": "ResetCacheArchetype()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "ResetCacheArchetype(gsl::not_null<const UObject*> Object)"
  },
  {
    "label": "RemoveAnnotation()",
    "kind": "Method",
    "detail": "Function (ObjectCachedArchetypeAnnotations .)",
    "insertText": "RemoveAnnotation(Object)"
  },
  {
    "label": "GetCachedArchetype()",
    "kind": "Method",
    "detail": "Function (} UObject*)",
    "insertText": "GetCachedArchetype(gsl::not_null<const UObject*> Object)"
  }
]