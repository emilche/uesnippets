[
  {
    "label": "ICmpInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ICmpInst"
  },
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "getICmpCode()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_TRANSFORMS_UTILS_CMPINSTANALYSIS_H # define LLVM_TRANSFORMS_UTILS_CMPINSTANALYSIS_H # include \" llvm / IR / InstrTypes . h \" namespace llvm { class ICmpInst ; class Value ; unsigned)",
    "insertText": "getICmpCode(const ICmpInst *ICI, bool InvertPred = false)"
  },
  {
    "label": "getICmpValue()",
    "kind": "Method",
    "detail": "Function (Value*)",
    "insertText": "getICmpValue(bool Sign, unsigned Code, Value *LHS, Value *RHS, CmpInst::Predicate &NewICmpPred)"
  },
  {
    "label": "PredicatesFoldable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PredicatesFoldable(CmpInst::Predicate p1, CmpInst::Predicate p2)"
  }
]