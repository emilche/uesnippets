[
  {
    "label": "FMaterial",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterial"
  },
  {
    "label": "FParticleBeamTrailVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FParticleBeamTrailVertexFactory"
  },
  {
    "label": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UniformBuffer . h \" # include \" VertexFactory . h \" # include \" ParticleVertexFactory . h \" class FMaterial ;)",
    "insertText": "BEGIN_GLOBAL_SHADER_PARAMETER_STRUCT(FParticleBeamTrailUniformParameters, ENGINE_API) SHADER_PARAMETER( FVector4f, CameraRight ) SHADER_PARAMETER( FVector4f, CameraUp ) SHADER_PARAMETER( FVector4f, ScreenAlignment ) SHADER_PARAMETER( uint32, bUseLocalSpace) SHADER_PARAMETER( FVector3f, LWCTile) END_GLOBAL_SHADER_PARAMETER_STRUCT()"
  },
  {
    "label": "DECLARE_VERTEX_FACTORY_TYPE()",
    "kind": "Method",
    "detail": "Function (class FParticleBeamTrailVertexFactory : public FParticleVertexFactoryBase {)",
    "insertText": "DECLARE_VERTEX_FACTORY_TYPE(FParticleBeamTrailVertexFactory)"
  },
  {
    "label": "FParticleBeamTrailVertexFactory()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "FParticleBeamTrailVertexFactory(EParticleVertexFactoryType InType, ERHIFeatureLevel::Type InFeatureLevel ) : FParticleVertexFactoryBase(InType, InFeatureLevel) , IndexBuffer(nullptr) , FirstIndex(0) , OutTriangleCount(0) , bUsesDynamicParameter(true)"
  },
  {
    "label": "FParticleBeamTrailVertexFactory()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FParticleBeamTrailVertexFactory(ERHIFeatureLevel::Type InFeatureLevel) : FParticleVertexFactoryBase(PVFT_MAX, InFeatureLevel) , IndexBuffer(nullptr) , FirstIndex(0) , OutTriangleCount(0) , bUsesDynamicParameter(true)"
  },
  {
    "label": "ShouldCompilePermutation()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldCompilePermutation(const FVertexFactoryShaderPermutationParameters& Parameters)"
  },
  {
    "label": "ModifyCompilationEnvironment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ModifyCompilationEnvironment(const FVertexFactoryShaderPermutationParameters& Parameters, FShaderCompilerEnvironment& OutEnvironment)"
  },
  {
    "label": "GetPSOPrecacheVertexFetchElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPSOPrecacheVertexFetchElements(EVertexInputStreamType VertexInputStreamType, FVertexDeclarationElementList& Elements)"
  },
  {
    "label": "GetPSOPrecacheVertexDeclaration()",
    "kind": "Method",
    "detail": "Function (FRHIVertexDeclaration*)",
    "insertText": "GetPSOPrecacheVertexDeclaration(bool bUsesDynamicParameter)"
  },
  {
    "label": "InitRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRHI(FRHICommandListBase& RHICmdList)"
  },
  {
    "label": "GetBeamTrailUniformBuffer()",
    "kind": "Method",
    "detail": "Function (BeamTrailUniformBuffer = InSpriteUniformBuffer ; } FParticleBeamTrailUniformBufferRef)",
    "insertText": "GetBeamTrailUniformBuffer()"
  },
  {
    "label": "SetDynamicParameterBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDynamicParameterBuffer(const FVertexBuffer* InDynamicParameterBuffer, uint32 StreamOffset, uint32 Stride)"
  },
  {
    "label": "SetUsesDynamicParameter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetUsesDynamicParameter(bool bInUsesDynamicParameter)"
  },
  {
    "label": "GetIndexBuffer()",
    "kind": "Method",
    "detail": "Function (bUsesDynamicParameter = bInUsesDynamicParameter ; } FIndexBuffer*&)",
    "insertText": "GetIndexBuffer()"
  }
]