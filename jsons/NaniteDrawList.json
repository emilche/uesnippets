[
  {
    "label": "FNaniteMaterialListContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNaniteMaterialListContext"
  },
  {
    "label": "FDeferredPipelines",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeferredPipelines"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" NaniteShared . h \" # include \" NaniteMaterials . h \" # include \" PrimitiveSceneInfo . h \" class FNaniteMaterialListContext { public : struct FDeferredPipelines { FPrimitiveSceneInfo* PrimitiveSceneInfo ; TArray<FNaniteRasterPipeline,TInlineAllocator<4>> RasterPipelines ; TArray<FNaniteShadingPipeline,TInlineAllocator<4>> ShadingPipelines ; } ; public : void)",
    "insertText": "Apply(FScene& Scene)"
  },
  {
    "label": "GetMaterialSlotForWrite()",
    "kind": "Method",
    "detail": "Function (private : FNaniteMaterialSlot&)",
    "insertText": "GetMaterialSlotForWrite(FPrimitiveSceneInfo& PrimitiveSceneInfo, ENaniteMeshPass::Type MeshPass, uint8 SectionIndex)"
  },
  {
    "label": "AddRasterBin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRasterBin(FPrimitiveSceneInfo& PrimitiveSceneInfo, const FNaniteRasterBin& PrimaryRasterBin, const FNaniteRasterBin& FallbackRasterBin, ENaniteMeshPass::Type MeshPass, uint8 SectionIndex)"
  },
  {
    "label": "AddShadingBin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddShadingBin(FPrimitiveSceneInfo& PrimitiveSceneInfo, const FNaniteShadingBin& ShadingBin, ENaniteMeshPass::Type MeshPass, uint8 SectionIndex)"
  }
]