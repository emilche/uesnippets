[
  {
    "label": "acts",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "acts"
  },
  {
    "label": "allows",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "allows"
  },
  {
    "label": "with",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "with"
  },
  {
    "label": "FooScopedTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FooScopedTraits"
  },
  {
    "label": "BarScopedTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BarScopedTraits"
  },
  {
    "label": "ScopedGenericOwnershipTracking",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ScopedGenericOwnershipTracking"
  },
  {
    "label": "ScopedGeneric",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScopedGeneric"
  },
  {
    "label": "optimization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "optimization"
  },
  {
    "label": "Data",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Data"
  },
  {
    "label": "that",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "that"
  },
  {
    "label": "Receiver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Receiver"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Traits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Traits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Traits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Traits"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "Traits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Traits"
  },
  {
    "label": "foos()",
    "kind": "Method",
    "detail": "Function (std::vector<ScopedFoo>)",
    "insertText": "foos(64)"
  }
]