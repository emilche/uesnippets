[
  {
    "label": "FAutomationReport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAutomationReport"
  },
  {
    "label": "FAutomationReport()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / AutomationTest . h \" # include \" AutomationTestExcludelist . h \" # include \" IAutomationReport . h \" class FAutomationReport : public IAutomationReport { public :)",
    "insertText": "FAutomationReport(FAutomationTestInfo& TestInfo, bool bIsParent = false)"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "Empty()"
  },
  {
    "label": "GetTestParameter()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTestParameter()"
  },
  {
    "label": "GetTags()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTags()"
  },
  {
    "label": "GetAssetPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetAssetPath()"
  },
  {
    "label": "GetOpenCommand()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOpenCommand()"
  },
  {
    "label": "GetCommand()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCommand()"
  },
  {
    "label": "GetDisplayName()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetDisplayName()"
  },
  {
    "label": "GetFullTestPath()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetFullTestPath()"
  },
  {
    "label": "GetDisplayNameWithDecoration()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDisplayNameWithDecoration()"
  },
  {
    "label": "GetTotalNumChildren()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTotalNumChildren()"
  },
  {
    "label": "GetTotalNumFilteredChildren()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetTotalNumFilteredChildren()"
  },
  {
    "label": "GetEnabledTestsNum()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetEnabledTestsNum()"
  },
  {
    "label": "GetEnabledTestNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEnabledTestNames(TArray<FString>& OutEnabledTestNames, FString CurrentPath)"
  },
  {
    "label": "GetFilteredTestNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFilteredTestNames(TArray<FString>& OutFilteredTestNames, FString CurrentPath)"
  },
  {
    "label": "SetEnabledTests()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledTests(const TArray<FString>& EnabledTests, FString CurrentPath)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled()"
  },
  {
    "label": "SetEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabled(bool bShouldBeEnabled)"
  },
  {
    "label": "SetSupport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSupport(const int32 ClusterIndex)"
  },
  {
    "label": "IsSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSupported(const int32 ClusterIndex)"
  },
  {
    "label": "SetTestFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTestFlags(const EAutomationTestFlags TestFlags)"
  },
  {
    "label": "GetTestFlags()",
    "kind": "Method",
    "detail": "Function (EAutomationTestFlags)",
    "insertText": "GetTestFlags()"
  },
  {
    "label": "GetSourceFile()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetSourceFile()"
  },
  {
    "label": "GetSourceFileLine()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSourceFileLine()"
  },
  {
    "label": "IsParent()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsParent()"
  },
  {
    "label": "IsSmokeTest()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsSmokeTest()"
  },
  {
    "label": "SetFilter()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetFilter(TSharedPtr< AutomationFilterCollection > InFilter, const bool ParentPassedFilter = false)"
  },
  {
    "label": "GetFilteredChildren()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IAutomationReport>>&)",
    "insertText": "GetFilteredChildren()"
  },
  {
    "label": "GetChildReports()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedPtr<IAutomationReport>>&)",
    "insertText": "GetChildReports()"
  },
  {
    "label": "ClustersUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClustersUpdated(const int32 NumClusters)"
  },
  {
    "label": "ResetForExecution()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetForExecution(const int32 NumTestPasses)"
  },
  {
    "label": "SetResults()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetResults(const int32 ClusterIndex, const int32 PassIndex, const FAutomationTestResults& InResults)"
  },
  {
    "label": "AddArtifact()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddArtifact(const int32 ClusterIndex, const int32 PassIndex, const FAutomationArtifact& Artifact)"
  },
  {
    "label": "GetCompletionStatus()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCompletionStatus(const int32 ClusterIndex, const int32 PassIndex, FAutomationCompleteState& OutCompletionState)"
  },
  {
    "label": "GetState()",
    "kind": "Method",
    "detail": "Function (EAutomationState)",
    "insertText": "GetState(const int32 ClusterIndex, const int32 PassIndex)"
  },
  {
    "label": "SetState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetState(const EAutomationState State)"
  },
  {
    "label": "GetResults()",
    "kind": "Method",
    "detail": "Function (const FAutomationTestResults&)",
    "insertText": "GetResults(const int32 ClusterIndex, const int32 PassIndex)"
  },
  {
    "label": "GetNumResults()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetNumResults(const int32 ClusterIndex)"
  },
  {
    "label": "GetCurrentPassIndex()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetCurrentPassIndex(const int32 ClusterIndex)"
  },
  {
    "label": "GetGameInstanceName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetGameInstanceName(const int32 ClusterIndex)"
  },
  {
    "label": "EnsureReportExists()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAutomationReport>)",
    "insertText": "EnsureReportExists(FAutomationTestInfo& TestInfo, const int32 ClusterIndex, const int32 NumPasses)"
  },
  {
    "label": "GetNextReportToExecute()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IAutomationReport>)",
    "insertText": "GetNextReportToExecute(bool& bOutAllTestsComplete, const int32 ClusterIndex, const int32 PassIndex, const int32 NumDevicesInCluster)"
  },
  {
    "label": "GetEnabledTestReports()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetEnabledTestReports(TArray<TSharedPtr<IAutomationReport>>& OutReports)"
  },
  {
    "label": "HasErrors()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "HasErrors()"
  },
  {
    "label": "HasWarnings()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "HasWarnings()"
  },
  {
    "label": "GetDurationRange()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "GetDurationRange(float& OutMinTime, float& OutMaxTime)"
  },
  {
    "label": "GetNumDevicesRunningTest()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetNumDevicesRunningTest()"
  },
  {
    "label": "GetNumParticipantsRequired()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "GetNumParticipantsRequired()"
  },
  {
    "label": "SetNumParticipantsRequired()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNumParticipantsRequired(const int32 NewCount)"
  },
  {
    "label": "IncrementNetworkCommandResponses()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncrementNetworkCommandResponses()"
  },
  {
    "label": "ResetNetworkCommandResponses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetNetworkCommandResponses()"
  },
  {
    "label": "ExpandInUI()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "ExpandInUI()"
  },
  {
    "label": "StopRunningTest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopRunningTest()"
  },
  {
    "label": "IsToBeSkipped()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToBeSkipped(FName* OutReason = nullptr, bool* OutWarn = nullptr)"
  },
  {
    "label": "IsToBeSkippedOnConditions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToBeSkippedOnConditions()"
  },
  {
    "label": "IsToBeSkippedByPropagation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsToBeSkippedByPropagation()"
  },
  {
    "label": "SetSkipFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSkipFlag(bool bEnableSkip, const FAutomationTestExcludelistEntry* Template = nullptr, bool bFromPropagation = false)"
  },
  {
    "label": "GetExcludeOptions()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FAutomationTestExcludeOptions>)",
    "insertText": "GetExcludeOptions()"
  }
]