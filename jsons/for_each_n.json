[
  {
    "label": "_InputIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_InputIterator"
  },
  {
    "label": "_Size",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Size"
  },
  {
    "label": "_Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "_Function"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef _LIBCPP___ALGORITHM_FOR_EACH_N_H # define _LIBCPP___ALGORITHM_FOR_EACH_N_H # include<__config> # include<type_traits> # if !)",
    "insertText": "defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER) # pragma GCC system_header #endif _LIBCPP_BEGIN_NAMESPACE_STD #if _LIBCPP_STD_VER > 14 template <class _InputIterator, class _Size, class _Function> inline _LIBCPP_INLINE_VISIBILITY _LIBCPP_CONSTEXPR_AFTER_CXX17 _InputIterator for_each_n(_InputIterator __first, _Size __orig_n, _Function __f)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "decltype(_VSTD::__convert_to_integral(__orig_n))"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (_IntegralSize __n = __orig_n ;)",
    "insertText": "while(__n > 0)"
  },
  {
    "label": "__f()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "__f(*__first)"
  }
]