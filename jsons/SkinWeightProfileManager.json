[
  {
    "label": "FSkinWeightProfileManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightProfileManager"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FSetProfileRequest",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetProfileRequest"
  },
  {
    "label": "FSkinWeightProfileManagerAsyncTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSkinWeightProfileManagerAsyncTask"
  },
  {
    "label": "FSkinWeightProfileManagerTickFunction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSkinWeightProfileManagerTickFunction"
  },
  {
    "label": "TStructOpsTypeTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TStructOpsTypeTraits"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Components / SkinnedMeshComponent . h \" # include \" Engine / EngineBaseTypes . h \" # include \" Engine / SkeletalMesh . h \" # include \" Engine / World . h \" # include \" SkinWeightProfile . h \" # include \" Stats / Stats . h \" # include \" Templates / Function . h \" # include \" Tickable . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" SkinWeightProfileManager . generated . h \" class FSkinWeightProfileManager ; class UWorld ; typedef TFunction<)",
    "insertText": "void(TWeakObjectPtr<USkeletalMesh> WeakMesh, FSkinWeightProfileStack ProfileStack)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (struct FSetProfileRequest { FSkinWeightProfileStack ProfileStack ; TArray<int32> LODIndices ; FRequestFinished Callback ; TWeakObjectPtr<UObject> IdentifyingObject ; TWeakObjectPtr<USkeletalMesh> WeakSkeletalMesh ; bool)",
    "insertText": "operator(const FSetProfileRequest& A, const FSetProfileRequest& B)"
  },
  {
    "label": "FSkinWeightProfileManagerAsyncTask()",
    "kind": "Method",
    "detail": "Function (} } ; class FSkinWeightProfileManagerAsyncTask { FSkinWeightProfileManager* Owner ; public :)",
    "insertText": "FSkinWeightProfileManagerAsyncTask(FSkinWeightProfileManager* InOwner) : Owner(InOwner)"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (} TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "GetDesiredThread()",
    "kind": "Method",
    "detail": "Function (} ENamedThreads::Type)",
    "insertText": "GetDesiredThread()"
  },
  {
    "label": "IsRunningRHIInSeparateThread()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR return ENamedThreads::GameThread ; # else # if PLATFORM_ANDROID return)",
    "insertText": "IsRunningRHIInSeparateThread()"
  },
  {
    "label": "GetSubsequentsMode()",
    "kind": "Method",
    "detail": "Function (# else return ENamedThreads::AnyBackgroundHiPriTask ; # endif # endif } ESubsequentsMode::Type)",
    "insertText": "GetSubsequentsMode()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() virtual void ExecuteTick(float DeltaTime, ELevelTick TickType, ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "DiagnosticMessage()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DiagnosticMessage()"
  },
  {
    "label": "DiagnosticContext()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "DiagnosticContext(bool bDetailed)"
  },
  {
    "label": "OnWorldInit()",
    "kind": "Method",
    "detail": "Function (FSkinWeightProfileManager* Owner ; } ; template<> struct TStructOpsTypeTraits<FSkinWeightProfileManagerTickFunction> : public TStructOpsTypeTraitsBase2<FSkinWeightProfileManagerTickFunction> { enum { WithCopy = false } ; } ; class FSkinWeightProfileManager : public FTickableGameObject { protected : FSkinWeightProfileManagerAsyncTask ; TMap<UWorld*,FSkinWeightProfileManager*> WorldManagers ; void)",
    "insertText": "OnWorldInit(UWorld* World, const UWorld::InitializationValues IVS)"
  },
  {
    "label": "OnWorldCleanup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldCleanup(UWorld* World, bool bSessionEnded, bool bCleanupResources)"
  },
  {
    "label": "OnPreWorldFinishDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreWorldFinishDestroy(UWorld* World)"
  },
  {
    "label": "OnWorldBeginTearDown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWorldBeginTearDown(UWorld* World)"
  },
  {
    "label": "OnStartup()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "OnStartup()"
  },
  {
    "label": "OnShutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnShutdown()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FSkinWeightProfileManager*)",
    "insertText": "Get(UWorld* World)"
  },
  {
    "label": "FSkinWeightProfileManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSkinWeightProfileManager(UWorld* InWorld)"
  },
  {
    "label": "RequestSkinWeightProfileStack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSkinWeightProfileStack(FSkinWeightProfileStack InProfileStack, USkinnedAsset* SkinnedAsset, UObject* Requester, FRequestFinished& Callback, int32 LODIndex = INDEX_NONE)"
  },
  {
    "label": "CancelSkinWeightProfileRequest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelSkinWeightProfileRequest(UObject* Requester)"
  },
  {
    "label": "DoTick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoTick(float DeltaTime, ENamedThreads::Type CurrentThread, const FGraphEventRef& MyCompletionGraphEvent)"
  },
  {
    "label": "CleanupRequest()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CleanupRequest(const FSetProfileRequest& Request)"
  },
  {
    "label": "IsTickableWhenPaused()",
    "kind": "Method",
    "detail": "Function (protected : TArray<FSetProfileRequest,TInlineAllocator<4>> CanceledRequest ; TArray<FSetProfileRequest> PendingSetProfileRequests ; TMap<TWeakObjectPtr<USkeletalMesh>,int32> PendingMeshes ; FSkinWeightProfileManagerTickFunction TickFunction ; int32 LastGamethreadProfileIndex ; TWeakObjectPtr<UWorld> WeakWorld ; FGraphEventRef AsyncTask ; public : bool)",
    "insertText": "IsTickableWhenPaused()"
  },
  {
    "label": "IsTickableInEditor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickableInEditor()"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "IsTickable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTickable()"
  }
]