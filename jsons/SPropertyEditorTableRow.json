[
  {
    "label": "FPropertyNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyNode"
  },
  {
    "label": "SPropertyEditorTableRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyEditorTableRow"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "IPropertyUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyUtilities"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / STableRow . h \" # include \" IPropertyUtilities . h \" # include \" Presentation / PropertyEditor / PropertyEditor . h \" # include \" IPropertyTreeRow . h \" typedef SMultiColumnTableRow<TSharedPtr<class FPropertyNode*>> SPropertyRowBase ; class SPropertyEditorTableRow : public SPropertyRowBase,public IPropertyTreeRow { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyEditorTableRow) : _OnMiddleClicked()"
  },
  {
    "label": "SLATE_EVENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_EVENT(FOnPropertyClicked, OnMiddleClicked ) SLATE_EVENT( FConstructExternalColumnCell, ConstructExternalColumnCell ) SLATE_END_ARGS() void Construct( const FArguments& InArgs, const TSharedRef< class FPropertyEditor >& InPropertyEditor, const TSharedRef< class IPropertyUtilities >& InPropertyUtilities, const TSharedRef<STableViewBase>& InOwnerTable)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "OnMouseButtonUp()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonUp(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "GetPropertyPath()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyPath>)",
    "insertText": "GetPropertyPath()"
  },
  {
    "label": "IsCursorHovering()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCursorHovering()"
  },
  {
    "label": "OnGetRowVisibility()",
    "kind": "Method",
    "detail": "Function (private : EVisibility)",
    "insertText": "OnGetRowVisibility()"
  },
  {
    "label": "OnGetFavoritesVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetFavoritesVisibility()"
  },
  {
    "label": "OnGetFavoriteImage()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetFavoriteImage()"
  },
  {
    "label": "OnToggleFavoriteClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleFavoriteClicked()"
  },
  {
    "label": "OnNameDoubleClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnNameDoubleClicked()"
  },
  {
    "label": "ConstructNameColumnWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructNameColumnWidget()"
  },
  {
    "label": "ConstructValueColumnWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructValueColumnWidget()"
  },
  {
    "label": "ConstructPropertyEditorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "ConstructPropertyEditorWidget()"
  },
  {
    "label": "GetDiffersFromDefaultAsVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetDiffersFromDefaultAsVisibility()"
  },
  {
    "label": "GetImageBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetImageBrush()"
  },
  {
    "label": "OnClickedTestButton()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnClickedTestButton()"
  }
]