[
  {
    "label": "RtpBitrateConfigurator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpBitrateConfigurator"
  },
  {
    "label": "RtpBitrateConfigurator()",
    "kind": "Method",
    "detail": "Function (# ifndef CALL_RTP_BITRATE_CONFIGURATOR_H_ # define CALL_RTP_BITRATE_CONFIGURATOR_H_ # include \" absl / types / optional . h \" # include \" api / transport / bitrate_settings . h \" # include \" api / units / data_rate . h \" namespace webrtc { class RtpBitrateConfigurator { public :)",
    "insertText": "RtpBitrateConfigurator(const BitrateConstraints& bitrate_config)"
  },
  {
    "label": "RtpBitrateConfigurator()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpBitrateConfigurator()"
  },
  {
    "label": "RtpBitrateConfigurator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpBitrateConfigurator(const RtpBitrateConfigurator&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtpBitrateConfigurator&)",
    "insertText": "operator(const RtpBitrateConfigurator&)"
  },
  {
    "label": "GetConfig()",
    "kind": "Method",
    "detail": "Function (BitrateConstraints)",
    "insertText": "GetConfig()"
  },
  {
    "label": "UpdateWithSdpParameters()",
    "kind": "Method",
    "detail": "Function (absl::optional<BitrateConstraints>)",
    "insertText": "UpdateWithSdpParameters(const BitrateConstraints& bitrate_config_)"
  },
  {
    "label": "UpdateWithClientPreferences()",
    "kind": "Method",
    "detail": "Function (absl::optional<BitrateConstraints>)",
    "insertText": "UpdateWithClientPreferences(const BitrateSettings& bitrate_mask)"
  },
  {
    "label": "UpdateWithRelayCap()",
    "kind": "Method",
    "detail": "Function (absl::optional<BitrateConstraints>)",
    "insertText": "UpdateWithRelayCap(DataRate cap)"
  },
  {
    "label": "UpdateConstraints()",
    "kind": "Method",
    "detail": "Function (private : absl::optional<BitrateConstraints>)",
    "insertText": "UpdateConstraints(const absl::optional<int>& new_start)"
  },
  {
    "label": "PlusInfinity()",
    "kind": "Method",
    "detail": "Function (BitrateConstraints bitrate_config_ ; BitrateSettings bitrate_config_mask_ ; BitrateConstraints base_bitrate_config_ ; DataRate max_bitrate_over_relay_ =)",
    "insertText": "PlusInfinity()"
  }
]