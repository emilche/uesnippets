[
  {
    "label": "FStatisticalValue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStatisticalValue"
  },
  {
    "label": "FStatisticalValue()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / AssertionMacros . h \" # include \" Math / UnrealMathUtility . h \" template<T> struct FStatisticalValue { public :)",
    "insertText": "FStatisticalValue() : MinValue() , MaxValue() , Accumulator() , NumSamples()"
  },
  {
    "label": "AddSample()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddSample(T Value)"
  },
  {
    "label": "Min()",
    "kind": "Method",
    "detail": "Function (MinValue = MaxValue = Value ; } else { MinValue =)",
    "insertText": "Min(MinValue, Value)"
  },
  {
    "label": "Max()",
    "kind": "Method",
    "detail": "Function (MaxValue =)",
    "insertText": "Max(MaxValue, Value)"
  },
  {
    "label": "GetMinValue()",
    "kind": "Method",
    "detail": "Function (} Accumulator + = Value ; + + NumSamples ; } T)",
    "insertText": "GetMinValue()"
  },
  {
    "label": "GetCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetCount()"
  }
]