[
  {
    "label": "FReferenceCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReferenceCollector"
  },
  {
    "label": "FReplicationProtocol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationProtocol"
  },
  {
    "label": "FReplicationInstanceProtocol",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationInstanceProtocol"
  },
  {
    "label": "FReplicationProtocolManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationProtocolManager"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FNetRefHandleManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetRefHandleManager"
  },
  {
    "label": "FReplicatedObjectData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicatedObjectData"
  },
  {
    "label": "FInitParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInitParams"
  },
  {
    "label": "FScopeFrameData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeFrameData"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / ArrayView . h \" # include \" Net / Core / NetBitArray . h \" # include \" Net / Core / NetHandle / NetHandle . h \" # include \" Iris / IrisConstants . h \" # include \" Iris / Core / NetChunkedArray . h \" # include \" Iris / ReplicationState / ReplicationStateDescriptor . h \" # include \" Iris / ReplicationSystem / NetRefHandle . h \" # include \" Iris / ReplicationSystem / NetDependencyData . h \" # include \" Iris / ReplicationSystem / NetObjectFactoryRegistry . h \" # include \" UObject / ObjectPtr . h \" # include \" Delegates / Delegate . h \" class FReferenceCollector ; namespace UE::Net { struct FReplicationProtocol ; struct FReplicationInstanceProtocol ; namespace Private { class FReplicationProtocolManager ; } } namespace UE::Net::Private { typedef uint32 FInternalNetRefIndex ; enum class EAddSubObjectFlags : uint32 { None = 0 U,WarnIfAlreadySubObject = 1 U,SkipIfAlreadySubObject = WarnIfAlreadySubObject<<1 U,DestroyWithOwner = SkipIfAlreadySubObject<<1 U,ReplicateWithSubObject = DestroyWithOwner<<1 U,Default = WarnIfAlreadySubObject | DestroyWithOwner,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EAddSubObjectFlags)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum class ERemoveDependentObjectFlags : uint32 { None = 0 U,RemoveFromDependentParentObjects = 1 U,RemoveFromParentDependentObjects = RemoveFromDependentParentObjects<<1 U,All = RemoveFromDependentParentObjects | RemoveFromParentDependentObjects,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(ERemoveDependentObjectFlags)"
  },
  {
    "label": "FReplicatedObjectData()",
    "kind": "Method",
    "detail": "Function (class FNetRefHandleManager { public : enum { InvalidInternalIndex = 0 U } ; struct FReplicatedObjectData {)",
    "insertText": "FReplicatedObjectData() : Flags(0U)"
  },
  {
    "label": "IsSubObject()",
    "kind": "Method",
    "detail": "Function (} FNetRefHandle RefHandle ; FNetHandle NetHandle ; const FReplicationProtocol* Protocol = nullptr ; const FReplicationInstanceProtocol* InstanceProtocol = nullptr ; uint8* ReceiveStateBuffer = nullptr ; FInternalNetRefIndex SubObjectRootIndex = InvalidInternalIndex ; FInternalNetRefIndex SubObjectParentIndex = InvalidInternalIndex ; FNetObjectFactoryId NetFactoryId = InvalidNetObjectFactoryId ; union { uint16 Flags : 1 6 U ; struct { uint16 bShouldPropagateChangedStates : 1 U ; uint16 bTearOff : 1 U ; uint16 bDestroySubObjectWithOwner : 1 U ; uint16 bIsDependentObject : 1 U ; uint16 bHasDependentObjects : 1 U ; uint16 bAllowDestroyInstanceFromRemote : 1 U ; uint16 bNeedsFullCopyAndQuantize : 1 U ; uint16 bWantsFullPoll : 1 U ; uint16 bPendingEndReplication : 1 U ; uint16 bHasCachedCreationInfo : 1 U ; } ; } ; bool)",
    "insertText": "IsSubObject()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const FInitParams& InitParams)"
  },
  {
    "label": "Deinit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Deinit()"
  },
  {
    "label": "OnPreSendUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPreSendUpdate()"
  },
  {
    "label": "OnPostSendUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostSendUpdate()"
  },
  {
    "label": "IsScopableIndex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsScopableIndex(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "MakeNetRefHandle()",
    "kind": "Method",
    "detail": "Function (} FNetRefHandle)",
    "insertText": "MakeNetRefHandle(uint64 Id, uint32 ReplicationSystemId)"
  },
  {
    "label": "MakeNetRefHandleFromId()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "MakeNetRefHandleFromId(uint64 Id)"
  },
  {
    "label": "AllocateNetRefHandle()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "AllocateNetRefHandle(bool bIsStatic)"
  },
  {
    "label": "CreateNetObject()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "CreateNetObject(FNetRefHandle WantedHandle, FNetHandle GlobalHandle, const FReplicationProtocol* ReplicationProtocol)"
  },
  {
    "label": "CreateNetObjectFromRemote()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "CreateNetObjectFromRemote(FNetRefHandle WantedHandle, const FReplicationProtocol* ReplicationProtocol, FNetObjectFactoryId FactoryId)"
  },
  {
    "label": "AttachInstanceProtocol()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AttachInstanceProtocol(FInternalNetRefIndex InternalIndex, const FReplicationInstanceProtocol* InstanceProtocol, UObject* Instance)"
  },
  {
    "label": "DetachInstanceProtocol()",
    "kind": "Method",
    "detail": "Function (const FReplicationInstanceProtocol*)",
    "insertText": "DetachInstanceProtocol(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "CreateHandleForDestructionInfo()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "CreateHandleForDestructionInfo(FNetRefHandle Handle, const FReplicationProtocol* DestroydObjectProtocol)"
  },
  {
    "label": "DestroyNetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyNetObject(FNetRefHandle Handle)"
  },
  {
    "label": "RemoveFromScope()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFromScope(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "GetObjectsPendingDestroy()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FInternalNetRefIndex>)",
    "insertText": "GetObjectsPendingDestroy()"
  },
  {
    "label": "DestroyObjectsPendingDestroy()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DestroyObjectsPendingDestroy()"
  },
  {
    "label": "GetReplicatedObjectDataNoCheck()",
    "kind": "Method",
    "detail": "Function (const FReplicatedObjectData&)",
    "insertText": "GetReplicatedObjectDataNoCheck(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "GetReplicatedObjectStateBufferNoCheck()",
    "kind": "Method",
    "detail": "Function (const uint8*)",
    "insertText": "GetReplicatedObjectStateBufferNoCheck(FInternalNetRefIndex InternalObjectIndex)"
  },
  {
    "label": "IsLocal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocal(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "IsLocalNetRefHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocalNetRefHandle(FNetRefHandle Handle)"
  },
  {
    "label": "IsRemoteNetRefHandle()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRemoteNetRefHandle(FNetRefHandle Handle)"
  },
  {
    "label": "GetCompleteNetRefHandle()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "GetCompleteNetRefHandle(FNetRefHandle IncompleteHandle)"
  },
  {
    "label": "GetNetRefHandleFromInternalIndex()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "GetNetRefHandleFromInternalIndex(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "GetInternalIndex()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "GetInternalIndex(FNetRefHandle Handle)"
  },
  {
    "label": "GetInternalIndexFromNetHandle()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "GetInternalIndexFromNetHandle(FNetHandle Handle)"
  },
  {
    "label": "GetGlobalScopableInternalIndices()",
    "kind": "Method",
    "detail": "Function (const FNetBitArrayView)",
    "insertText": "GetGlobalScopableInternalIndices()"
  },
  {
    "label": "GetCurrentFrameScopableInternalIndices()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArrayView)",
    "insertText": "GetCurrentFrameScopableInternalIndices()"
  },
  {
    "label": "GetPrevFrameScopableInternalIndices()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArrayView)",
    "insertText": "GetPrevFrameScopableInternalIndices()"
  },
  {
    "label": "GetRelevantObjectsInternalIndices()",
    "kind": "Method",
    "detail": "Function (} FNetBitArrayView)",
    "insertText": "GetRelevantObjectsInternalIndices()"
  },
  {
    "label": "GetPolledObjectsInternalIndices()",
    "kind": "Method",
    "detail": "Function (} FNetBitArrayView)",
    "insertText": "GetPolledObjectsInternalIndices()"
  },
  {
    "label": "GetDirtyObjectsToQuantize()",
    "kind": "Method",
    "detail": "Function (} FNetBitArrayView)",
    "insertText": "GetDirtyObjectsToQuantize()"
  },
  {
    "label": "GetAssignedInternalIndices()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArrayView)",
    "insertText": "GetAssignedInternalIndices()"
  },
  {
    "label": "GetSubObjectInternalIndices()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArray&)",
    "insertText": "GetSubObjectInternalIndices()"
  },
  {
    "label": "AddSubObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AddSubObject(FNetRefHandle OwnerHandle, FNetRefHandle SubObjectHandle, FNetRefHandle RelativeOtherSubObjectHandle, EAddSubObjectFlags Flags = EAddSubObjectFlags::Default)"
  },
  {
    "label": "AddSubObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddSubObject(FNetRefHandle OwnerHandle, FNetRefHandle SubObjectHandle, EAddSubObjectFlags Flags = EAddSubObjectFlags::Default)"
  },
  {
    "label": "RemoveSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSubObject(FNetRefHandle SubObjectHandle)"
  },
  {
    "label": "GetRootObjectOfSubObject()",
    "kind": "Method",
    "detail": "Function (FNetRefHandle)",
    "insertText": "GetRootObjectOfSubObject(FNetRefHandle SubObjectHandle)"
  },
  {
    "label": "GetRootObjectInternalIndexOfSubObject()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "GetRootObjectInternalIndexOfSubObject(FInternalNetRefIndex SubObjectIndex)"
  },
  {
    "label": "SetSubObjectNetCondition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSubObjectNetCondition(FInternalNetRefIndex SubObjectInternalIndex, FLifeTimeConditionStorage SubObjectCondition)"
  },
  {
    "label": "GetDependentObjectInternalIndices()",
    "kind": "Method",
    "detail": "Function (const FNetBitArrayView)",
    "insertText": "GetDependentObjectInternalIndices()"
  },
  {
    "label": "GetObjectsWithDependentObjectsInternalIndices()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArrayView)",
    "insertText": "GetObjectsWithDependentObjectsInternalIndices()"
  },
  {
    "label": "AddDependentObject()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "AddDependentObject(FNetRefHandle ParentHandle, FNetRefHandle DependentHandle, EDependentObjectSchedulingHint SchedulingHint)"
  },
  {
    "label": "RemoveDependentObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDependentObject(FNetRefHandle ParentHandle, FNetRefHandle DependentHandle)"
  },
  {
    "label": "RemoveDependentObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveDependentObject(FNetRefHandle DependentHandle)"
  },
  {
    "label": "SetShouldPropagateChangedStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldPropagateChangedStates(FNetRefHandle Handle, bool bShouldPropagateChangedStates)"
  },
  {
    "label": "SetShouldPropagateChangedStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldPropagateChangedStates(FInternalNetRefIndex ObjectInternalIndex, bool bShouldPropagateChangedStates)"
  },
  {
    "label": "GetCurrentMaxInternalNetRefIndex()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "GetCurrentMaxInternalNetRefIndex()"
  },
  {
    "label": "ReleaseNetObjectRef()",
    "kind": "Method",
    "detail": "Function (+ + ReplicatedObjectRefCount [ InternalIndex ] ; } void)",
    "insertText": "ReleaseNetObjectRef(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "GetNetObjectRefCount()",
    "kind": "Method",
    "detail": "Function (- - ReplicatedObjectRefCount [ InternalIndex ] ; } uint16)",
    "insertText": "GetNetObjectRefCount(FInternalNetRefIndex ObjectInternalIndex)"
  },
  {
    "label": "GetDependentObjectParents()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FInternalNetRefIndex>)",
    "insertText": "GetDependentObjectParents(FInternalNetRefIndex DependentIndex)"
  },
  {
    "label": "GetSubObjects()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FInternalNetRefIndex>)",
    "insertText": "GetSubObjects(FInternalNetRefIndex OwnerIndex)"
  },
  {
    "label": "GetChildSubObjects()",
    "kind": "Method",
    "detail": "Function (TArrayView<const FInternalNetRefIndex>)",
    "insertText": "GetChildSubObjects(FInternalNetRefIndex ParentObjectIndex)"
  },
  {
    "label": "GetChildSubObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetChildSubObjects(FInternalNetRefIndex OwnerIndex, FChildSubObjectsInfo& OutInfo)"
  },
  {
    "label": "GetReplicatedHandles()",
    "kind": "Method",
    "detail": "Function (const FRefHandleMap&)",
    "insertText": "GetReplicatedHandles()"
  },
  {
    "label": "GetIsDestroyedStartupObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIsDestroyedStartupObject(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "GetOriginalDestroyedStartupObjectIndex()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "GetOriginalDestroyedStartupObjectIndex(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "GetDestroyedStartupObjectInternalIndices()",
    "kind": "Method",
    "detail": "Function (const FNetBitArrayView)",
    "insertText": "GetDestroyedStartupObjectInternalIndices()"
  },
  {
    "label": "GetWantToBeDormantInternalIndices()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArrayView)",
    "insertText": "GetWantToBeDormantInternalIndices()"
  },
  {
    "label": "GetDormantObjectsPendingFlushNet()",
    "kind": "Method",
    "detail": "Function (} const FNetBitArrayView)",
    "insertText": "GetDormantObjectsPendingFlushNet()"
  },
  {
    "label": "GetObjectsWithPreUpdate()",
    "kind": "Method",
    "detail": "Function (} FNetBitArrayView)",
    "insertText": "GetObjectsWithPreUpdate()"
  },
  {
    "label": "PrintObjectFromIndex()",
    "kind": "Method",
    "detail": "Function (} public : [ [ nodiscard ] ] FString)",
    "insertText": "PrintObjectFromIndex(FInternalNetRefIndex ObjectIndex)"
  },
  {
    "label": "PrintObjectFromNetRefHandle()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FString)",
    "insertText": "PrintObjectFromNetRefHandle(FNetRefHandle ObjectHandle)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnNetChunkedArrayIncrease, FInternalNetRefIndex HighestInternalIndex)"
  },
  {
    "label": "GetOnNetChunkedArrayIncreaseDelegate()",
    "kind": "Method",
    "detail": "Function (FOnNetChunkedArrayIncrease&)",
    "insertText": "GetOnNetChunkedArrayIncreaseDelegate()"
  },
  {
    "label": "GetOnMaxInternalNetRefIndexIncreasedDelegate()",
    "kind": "Method",
    "detail": "Function (FOnMaxInternalNetRefIndexIncreased&)",
    "insertText": "GetOnMaxInternalNetRefIndexIncreasedDelegate()"
  },
  {
    "label": "Functor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Functor(DependentObjectInfo.NetRefIndex)"
  },
  {
    "label": "InitNetBitArray()",
    "kind": "Method",
    "detail": "Function (} return ; } } ; private : void)",
    "insertText": "InitNetBitArray(FNetBitArray* NetBitArray)"
  },
  {
    "label": "InternalCreateNetObject()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "InternalCreateNetObject(const FNetRefHandle NetRefHandle, const FNetHandle GlobalHandle, const FReplicationProtocol* ReplicationProtocol)"
  },
  {
    "label": "InternalDestroyNetObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalDestroyNetObject(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "ClearStateForFreedInternalIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStateForFreedInternalIndex(FInternalNetRefIndex FreedInternalIndex)"
  },
  {
    "label": "MakeNetRefHandleId()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "MakeNetRefHandleId(uint64 Seed, bool bIsStatic)"
  },
  {
    "label": "GetNextNetRefHandleId()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "GetNextNetRefHandleId(uint64 HandleIndex)"
  },
  {
    "label": "GetNextFreeInternalIndex()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "GetNextFreeInternalIndex()"
  },
  {
    "label": "InternalAddSubObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InternalAddSubObject(FInternalNetRefIndex OwnerInternalIndex, FInternalNetRefIndex SubObjectInternalIndex, FInternalNetRefIndex RelativeOtherSubObjectInternalIndex, EAddSubObjectFlags Flags)"
  },
  {
    "label": "SetIsSubObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIsSubObject(FInternalNetRefIndex InternalIndex, bool IsSubObject)"
  },
  {
    "label": "SetBitValue()",
    "kind": "Method",
    "detail": "Function (SubObjectInternalIndices .)",
    "insertText": "SetBitValue(InternalIndex, IsSubObject)"
  },
  {
    "label": "InternalRemoveSubObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InternalRemoveSubObject(FInternalNetRefIndex OwnerInternalIndex, FInternalNetRefIndex SubObjectInternalIndex, bool bRemoveFromSubObjectArray = true)"
  },
  {
    "label": "InternalRemoveDependentObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalRemoveDependentObject(FInternalNetRefIndex ParentInternalIndex, FInternalNetRefIndex DependentInternalIndex, ERemoveDependentObjectFlags Flags = ERemoveDependentObjectFlags::All)"
  },
  {
    "label": "InternalRemoveDependentObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InternalRemoveDependentObject(FInternalNetRefIndex DependentInternalIndex)"
  },
  {
    "label": "GrowNetObjectLists()",
    "kind": "Method",
    "detail": "Function (FInternalNetRefIndex)",
    "insertText": "GrowNetObjectLists()"
  },
  {
    "label": "GrowNetChunkedArrayBuffers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GrowNetChunkedArrayBuffers(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "MaxInternalNetRefIndexIncreased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MaxInternalNetRefIndexIncreased(uint32 NewBitCount)"
  },
  {
    "label": "FScopeFrameData()",
    "kind": "Method",
    "detail": "Function (private : uint32 MaxActiveObjectCount = 0 ; uint32 ActiveObjectCount = 0 ; FInternalNetRefIndex InternalNetRefIndexGrowSize = 0 ; FInternalNetRefIndex CurrentMaxInternalNetRefIndex = 0 ; uint32 HighestNetChunkedArrayInternalIndex = 0 ; uint32 ReplicationSystemId = UE::Net::InvalidReplicationSystemId ; FRefHandleMap RefHandleToInternalIndex ; FNetHandleMap NetHandleToInternalIndex ; struct FScopeFrameData {)",
    "insertText": "FScopeFrameData() : bIsValid(false)"
  },
  {
    "label": "GetReplicatedObjectData()",
    "kind": "Method",
    "detail": "Function (} uint32 bIsValid : 1 ; FNetBitArray CurrentFrameScopableInternalIndices ; FNetBitArray PrevFrameScopableInternalIndices ; } ; FNetBitArray GlobalScopableInternalIndices ; FScopeFrameData ScopeFrameData ; FNetBitArray RelevantObjectsInternalIndices ; FNetBitArray PolledObjectsInternalIndices ; FNetBitArray DirtyObjectsToQuantize ; FNetBitArray AssignedInternalIndices ; FNetBitArray SubObjectInternalIndices ; FNetBitArray DependentObjectInternalIndices ; FNetBitArray ObjectsWithDependentObjectsInternalIndices ; FNetBitArray DestroyedStartupObjectInternalIndices ; FNetBitArray WantToBeDormantInternalIndices ; FNetBitArray DormantObjectsPendingFlushNet ; FNetBitArray ObjectsWithPreUpdate ; TMap<uint32,uint32> DestroyedStartupObject ; TArray<FInternalNetRefIndex> PendingDestroyInternalIndices ; TNetChunkedArray<FReplicatedObjectData> ReplicatedObjectData ; TNetChunkedArray<uint8*> ReplicatedObjectStateBuffers ; TNetChunkedArray<uint16> ReplicatedObjectRefCount ; TNetChunkedArray<TObjectPtr<UObject>> ReplicatedInstances ; uint64 NextStaticHandleIndex = 1 ; uint64 NextDynamicHandleIndex = 1 ; FNetDependencyData SubObjects ; FReplicationProtocolManager& ReplicationProtocolManager ; FOnMaxInternalNetRefIndexIncreased OnMaxInternalNetRefIndexIncreased ; FOnNetChunkedArrayIncrease OnNetChunkedArrayIncrease ; TArray<FNetBitArray*> OwnedNetBitArrays ; } ; const FNetRefHandleManager::FReplicatedObjectData&)",
    "insertText": "GetReplicatedObjectData(FInternalNetRefIndex InternalIndex)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (const FInternalNetRefIndex* InternalIndex = RefHandleToInternalIndex .)",
    "insertText": "Find(Handle)"
  },
  {
    "label": "GetInvalid()",
    "kind": "Method",
    "detail": "Function (} else { return)",
    "insertText": "GetInvalid()"
  },
  {
    "label": "IsValidNetRefHandle()",
    "kind": "Method",
    "detail": "Function (} } bool)",
    "insertText": "IsValidNetRefHandle(FNetRefHandle Handle)"
  },
  {
    "label": "Find()",
    "kind": "Method",
    "detail": "Function (const uint32* FoundOriginalInternalIndex = DestroyedStartupObject .)",
    "insertText": "Find(InternalIndex)"
  },
  {
    "label": "GetChildSubObjects()",
    "kind": "Method",
    "detail": "Function (} TArrayView<const FInternalNetRefIndex>)",
    "insertText": "GetChildSubObjects(FInternalNetRefIndex OwnerIndex)"
  }
]