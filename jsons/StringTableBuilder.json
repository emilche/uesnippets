[
  {
    "label": "StringTableBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StringTableBuilder"
  },
  {
    "label": "Kind",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Kind"
  },
  {
    "label": "add()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_STRINGTABLEBUILDER_H # define LLVM_MC_STRINGTABLEBUILDER_H # include \" llvm / ADT / SmallString . h \" # include \" llvm / ADT / StringMap . h \" # include<cassert> namespace llvm { class StringTableBuilder { SmallString<2 5 6> StringTable ; StringMap<size_t> StringIndexMap ; public : StringRef)",
    "insertText": "add(StringRef s)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(!isFinalized())"
  },
  {
    "label": "finalize()",
    "kind": "Method",
    "detail": "Function (} enum Kind { ELF,WinCOFF,MachO } ; void)",
    "insertText": "finalize(Kind kind)"
  },
  {
    "label": "data()",
    "kind": "Method",
    "detail": "Function (StringRef)",
    "insertText": "data()"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(isFinalized())"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(StringIndexMap.count(s) && \"String is not in table!\")"
  },
  {
    "label": "isFinalized()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "isFinalized()"
  }
]