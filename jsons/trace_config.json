[
  {
    "label": "ConvertableToTraceFormat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConvertableToTraceFormat"
  },
  {
    "label": "TraceRecordMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TraceRecordMode"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "Trigger",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Trigger"
  },
  {
    "label": "HeapProfiler",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HeapProfiler"
  },
  {
    "label": "MemoryDumpConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACE_EVENT_TRACE_CONFIG_H_ # define BASE_TRACE_EVENT_TRACE_CONFIG_H_ # include<stdint . h> # include<memory> # include<set> # include<string> # include<unordered_set> # include<vector> # include \" base / base_export . h \" # include \" base / gtest_prod_util . h \" # include \" base / strings / string_piece . h \" # include \" base / trace_event / memory_dump_request_args . h \" # include \" base / trace_event / trace_config_category_filter . h \" # include \" base / values . h \" namespace base { namespace trace_event { class ConvertableToTraceFormat ; enum TraceRecordMode { RECORD_UNTIL_FULL,RECORD_CONTINUOUSLY,RECORD_AS_MUCH_AS_POSSIBLE,ECHO_TO_CONSOLE,} ; class BASE_EXPORT TraceConfig { public : using StringList = std::vector<std::string> ; struct BASE_EXPORT MemoryDumpConfig {)",
    "insertText": "MemoryDumpConfig()"
  },
  {
    "label": "MemoryDumpConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MemoryDumpConfig(const MemoryDumpConfig& other)"
  },
  {
    "label": "HeapProfiler()",
    "kind": "Method",
    "detail": "Function (struct Trigger { uint32_t min_time_between_dumps_ms ; MemoryDumpLevelOfDetail level_of_detail ; MemoryDumpType trigger_type ; } ; struct HeapProfiler { enum { kDefaultBreakdownThresholdBytes = 1 0 2 4 } ;)",
    "insertText": "HeapProfiler()"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const MemoryDumpConfig& config)"
  },
  {
    "label": "ProcessFilterConfig()",
    "kind": "Method",
    "detail": "Function (std::set<MemoryDumpLevelOfDetail> allowed_dump_modes ; std::vector<Trigger> triggers ; HeapProfiler heap_profiler_options ; } ; class BASE_EXPORT ProcessFilterConfig { public :)",
    "insertText": "ProcessFilterConfig()"
  },
  {
    "label": "ProcessFilterConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFilterConfig(const std::unordered_set<base::ProcessId>& included_process_ids)"
  },
  {
    "label": "ProcessFilterConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFilterConfig(const ProcessFilterConfig&)"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "empty()"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const ProcessFilterConfig&)"
  },
  {
    "label": "InitializeFromConfigDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromConfigDict(const Value&)"
  },
  {
    "label": "ToDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToDict(Value::Dict& dict)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled(base::ProcessId)"
  },
  {
    "label": "included_process_ids()",
    "kind": "Method",
    "detail": "Function (const std::unordered_set<base::ProcessId>&)",
    "insertText": "included_process_ids()"
  },
  {
    "label": "EventFilterConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EventFilterConfig(const EventFilterConfig& tc)"
  },
  {
    "label": "EventFilterConfig()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "EventFilterConfig()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (EventFilterConfig&)",
    "insertText": "operator(const EventFilterConfig& rhs)"
  },
  {
    "label": "InitializeFromConfigDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromConfigDict(const Value& event_filter)"
  },
  {
    "label": "SetCategoryFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategoryFilter(const TraceConfigCategoryFilter& category_filter)"
  },
  {
    "label": "ToDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToDict(Value::Dict& filter_dict)"
  },
  {
    "label": "GetArgAsSet()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetArgAsSet(const char* key, std::unordered_set<std::string>*)"
  },
  {
    "label": "IsCategoryGroupEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCategoryGroupEnabled(const StringPiece& category_group_name)"
  },
  {
    "label": "predicate_name()",
    "kind": "Method",
    "detail": "Function (const std::string&)",
    "insertText": "predicate_name()"
  },
  {
    "label": "TraceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConfig()"
  },
  {
    "label": "TraceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConfig(StringPiece category_filter_string, StringPiece trace_options_string)"
  },
  {
    "label": "TraceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConfig(StringPiece category_filter_string, TraceRecordMode record_mode)"
  },
  {
    "label": "TraceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConfig(StringPiece config_string)"
  },
  {
    "label": "TraceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConfig(const Value& config)"
  },
  {
    "label": "TraceConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TraceConfig(const TraceConfig& tc)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (TraceConfig&)",
    "insertText": "operator(const TraceConfig& rhs)"
  },
  {
    "label": "GetTraceRecordMode()",
    "kind": "Method",
    "detail": "Function (TraceRecordMode)",
    "insertText": "GetTraceRecordMode()"
  },
  {
    "label": "SetTraceBufferSizeInEvents()",
    "kind": "Method",
    "detail": "Function (record_mode_ = mode ; } void)",
    "insertText": "SetTraceBufferSizeInEvents(size_t size)"
  },
  {
    "label": "SetTraceBufferSizeInKb()",
    "kind": "Method",
    "detail": "Function (trace_buffer_size_in_events_ = size ; } void)",
    "insertText": "SetTraceBufferSizeInKb(size_t size)"
  },
  {
    "label": "EnableSystrace()",
    "kind": "Method",
    "detail": "Function (trace_buffer_size_in_kb_ = size ; } void)",
    "insertText": "EnableSystrace()"
  },
  {
    "label": "EnableSystraceEvent()",
    "kind": "Method",
    "detail": "Function (enable_systrace_ = true ; } void)",
    "insertText": "EnableSystraceEvent(const std::string& systrace_event)"
  },
  {
    "label": "EnableArgumentFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableArgumentFilter()"
  },
  {
    "label": "EnableHistogram()",
    "kind": "Method",
    "detail": "Function (enable_argument_filter_ = true ; } void)",
    "insertText": "EnableHistogram(const std::string& histogram_name)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToString()"
  },
  {
    "label": "AsConvertableToTraceFormat()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<ConvertableToTraceFormat>)",
    "insertText": "AsConvertableToTraceFormat()"
  },
  {
    "label": "ToCategoryFilterString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToCategoryFilterString()"
  },
  {
    "label": "ToTraceOptionsString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "ToTraceOptionsString()"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if)",
    "insertText": "BUILDFLAG(USE_PERFETTO_CLIENT_LIBRARY) std::string ToPerfettoTrackEventConfigRaw( bool privacy_filtering_enabled)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const TraceConfig& config)"
  },
  {
    "label": "ResetMemoryDumpConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetMemoryDumpConfig(const MemoryDumpConfig& memory_dump_config)"
  },
  {
    "label": "category_filter()",
    "kind": "Method",
    "detail": "Function (const TraceConfigCategoryFilter&)",
    "insertText": "category_filter()"
  },
  {
    "label": "event_filters()",
    "kind": "Method",
    "detail": "Function (const EventFilters&)",
    "insertText": "event_filters()"
  },
  {
    "label": "IsEventPackageNameFilterEnabled()",
    "kind": "Method",
    "detail": "Function (event_filters_ = filter_configs ; } bool)",
    "insertText": "IsEventPackageNameFilterEnabled()"
  },
  {
    "label": "systrace_events()",
    "kind": "Method",
    "detail": "Function (enable_event_package_name_filter_ = enabled ; } const std::unordered_set<std::string>&)",
    "insertText": "systrace_events()"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(TraceConfigTest, TraceConfigFromInvalidLegacyStrings)"
  },
  {
    "label": "FRIEND_TEST_ALL_PREFIXES()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRIEND_TEST_ALL_PREFIXES(TraceConfigTest, SystraceEventsSerialization)"
  },
  {
    "label": "InitializeDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeDefault()"
  },
  {
    "label": "InitializeFromConfigDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromConfigDict(const Value& dict)"
  },
  {
    "label": "InitializeFromConfigString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromConfigString(StringPiece config_string)"
  },
  {
    "label": "InitializeFromStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeFromStrings(StringPiece category_filter_string, StringPiece trace_options_string)"
  },
  {
    "label": "SetMemoryDumpConfigFromConfigDict()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMemoryDumpConfigFromConfigDict(const Value& memory_dump_config)"
  },
  {
    "label": "SetDefaultMemoryDumpConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefaultMemoryDumpConfig()"
  },
  {
    "label": "SetHistogramNamesFromConfigList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHistogramNamesFromConfigList(const Value& histogram_names)"
  },
  {
    "label": "SetEventFiltersFromConfigList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEventFiltersFromConfigList(const Value& event_filters)"
  },
  {
    "label": "ToValue()",
    "kind": "Method",
    "detail": "Function (Value)",
    "insertText": "ToValue()"
  }
]