[
  {
    "label": "FWasapiInputStream",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWasapiInputStream"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AudioCaptureCore . h \" # include \" WasapiAudioFormat . h \" # include \" Windows / AllowWindowsPlatformTypes . h \" # include \" Windows / AllowWindowsPlatformAtomics . h \" # include \" Microsoft / COMPointer . h \" THIRD_PARTY_INCLUDES_START # include<AudioClient . h> # include<comdef . h> # include<Mmdeviceapi . h> THIRD_PARTY_INCLUDES_END # include \" Windows / HideWindowsPlatformAtomics . h \" # include \" Windows / HideWindowsPlatformTypes . h \" namespace Audio { typedef TFunction<)",
    "insertText": "void(void* InBuffer, uint32 InNumFrames, double InStreamPosition, bool bInDiscontinuityError)"
  },
  {
    "label": "FWasapiInputStream()",
    "kind": "Method",
    "detail": "Function (class FWasapiInputStream { public :)",
    "insertText": "FWasapiInputStream()"
  },
  {
    "label": "FWasapiInputStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiInputStream(FWasapiInputStream&& InOther)"
  },
  {
    "label": "FWasapiInputStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiInputStream(const FWasapiInputStream& InOther)"
  },
  {
    "label": "FWasapiInputStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWasapiInputStream(TComPtr<IMMDevice> InDevice, const FWasapiAudioFormat& InFormat, uint32 InNumFramesDesired, FWasapiOnAudioCaptureFunction InCallback)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWasapiInputStream&)",
    "insertText": "operator(FWasapiInputStream&& InOther)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FWasapiInputStream&)",
    "insertText": "operator(const FWasapiInputStream& InOther)"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "StartStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartStream()"
  },
  {
    "label": "StopStream()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopStream()"
  },
  {
    "label": "WaitOnBuffer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WaitOnBuffer()"
  },
  {
    "label": "CaptureAudioFrames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CaptureAudioFrames()"
  },
  {
    "label": "GetBufferSizeFrames()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBufferSizeFrames()"
  },
  {
    "label": "GetBufferSizeBytes()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetBufferSizeBytes()"
  },
  {
    "label": "DrainInputBuffer()",
    "kind": "Method",
    "detail": "Function (private : TComPtr<IAudioClient3> AudioClient ; TComPtr<IAudioCaptureClient> CaptureClient ; FWasapiAudioFormat AudioFormat ; bool bIsInitialized = false ; uint32 NumFramesPerBuffer = 0 ; std::atomic<double> DevicePosition = 0 . 0 ; HANDLE EventHandle = nullptr ; FWasapiOnAudioCaptureFunction OnAudioCaptureCallback ; TArray<uint8> SilienceBuffer ; bool)",
    "insertText": "DrainInputBuffer()"
  }
]