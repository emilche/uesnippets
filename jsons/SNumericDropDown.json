[
  {
    "label": "SNumericDropDown",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNumericDropDown"
  },
  {
    "label": "FNamedValue",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNamedValue"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Input / Events . h \" # include \" Widgets / SWidget . h \" # include \" Textures / SlateIcon . h \" # include \" Layout / Margin . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / SBoxPanel . h \" # include \" Framework / Commands / UIAction . h \" # include \" Framework / MultiBox / MultiBoxBuilder . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Framework / Application / SlateApplication . h \" # include \" Widgets / Input / SEditableTextBox . h \" # include \" Widgets / Input / SComboButton . h \" template<NumericType> class SNumericDropDown : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnValueChanged, NumericType)"
  },
  {
    "label": "FNamedValue()",
    "kind": "Method",
    "detail": "Function (public : class FNamedValue { public :)",
    "insertText": "FNamedValue(NumericType InValue, FText InName, FText InDescription)"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (Value = InValue ; Name = InName ; Description = InDescription ; } NumericType)",
    "insertText": "GetValue()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TArray<FNamedValue>, DropDownValues ) SLATE_ATTRIBUTE( FText, LabelText ) SLATE_ATTRIBUTE( EOrientation, Orientation ) SLATE_ATTRIBUTE( float, MinDesiredValueWidth ) SLATE_ATTRIBUTE( bool, bShowNamedValue ) SLATE_ATTRIBUTE( NumericType, Value ) SLATE_EVENT( FOnValueChanged, OnValueChanged ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (DropDownValues = InArgs . _DropDownValues ; LabelText = InArgs . _LabelText ; Orientation = InArgs . _Orientation ; bShowNamedValue = InArgs . _bShowNamedValue ; Value = InArgs . _Value ; OnValueChanged = InArgs . _OnValueChanged ; ChildSlot [)",
    "insertText": "SNew(SVerticalBox ) + SVerticalBox::Slot() .AutoHeight() .Padding( FMargin( 0, 0, 0, 3 ) ) [ SNew( STextBlock ) .Text(LabelText) .Visibility(this, &SNumericDropDown<NumericType>::GetLabelVisibility, EOrientation::Orient_Vertical) ] + SVerticalBox::Slot() .AutoHeight() [ SNew( SHorizontalBox ) + SHorizontalBox::Slot() .VAlign( EVerticalAlignment::VAlign_Center ) .AutoWidth() .Padding( FMargin( 0, 0, 3, 0 ) ) [ SNew( STextBlock ) .Text(LabelText) .Visibility( this, &SNumericDropDown<NumericType>::GetLabelVisibility, EOrientation::Orient_Horizontal ) ] + SHorizontalBox::Slot() [ SNew( SComboButton ) .ContentPadding( 1 ) .OnGetMenuContent( this, &SNumericDropDown<NumericType>::BuildMenu ) .ButtonContent() [ SNew( SEditableTextBox ) .MinDesiredWidth( InArgs._MinDesiredValueWidth ) .RevertTextOnEscape(true) .SelectAllTextWhenFocused(true) .Text( this, &SNumericDropDown<NumericType>::GetValueText ) .OnTextCommitted( this, &SNumericDropDown<NumericType>::ValueTextComitted)"
  },
  {
    "label": "GetLabelVisibility()",
    "kind": "Method",
    "detail": "Function (} private : EVisibility)",
    "insertText": "GetLabelVisibility(EOrientation LabelOrientation)"
  },
  {
    "label": "GetValueText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetValueText()"
  },
  {
    "label": "AsNumber()",
    "kind": "Method",
    "detail": "Function (} } } return)",
    "insertText": "AsNumber(Value.Get())"
  },
  {
    "label": "ValueTextComitted()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ValueTextComitted(const FText& InNewText, ETextCommit::Type InTextCommit)"
  },
  {
    "label": "FromString()",
    "kind": "Method",
    "detail": "Function (NumericType NewValue ; TTypeFromString<NumericType)",
    "insertText": "FromString(NewValue, *InNewText.ToString())"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnValueChanged .)",
    "insertText": "ExecuteIfBound(NewValue)"
  },
  {
    "label": "BuildMenu()",
    "kind": "Method",
    "detail": "Function (} } TSharedRef<SWidget>)",
    "insertText": "BuildMenu()"
  },
  {
    "label": "MenuBuilder()",
    "kind": "Method",
    "detail": "Function (FMenuBuilder)",
    "insertText": "MenuBuilder(true, NULL)"
  },
  {
    "label": "MenuAction()",
    "kind": "Method",
    "detail": "Function (FUIAction)",
    "insertText": "MenuAction(FExecuteAction::CreateSP(this, &SNumericDropDown::SetValue, DropDownValue.GetValue()))"
  },
  {
    "label": "AddMenuEntry()",
    "kind": "Method",
    "detail": "Function (MenuBuilder .)",
    "insertText": "AddMenuEntry(DropDownValue.GetName(), DropDownValue.GetDescription(), FSlateIcon(), MenuAction)"
  },
  {
    "label": "MakeWidget()",
    "kind": "Method",
    "detail": "Function (} return MenuBuilder .)",
    "insertText": "MakeWidget()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetValue(NumericType InValue)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Get().ClearKeyboardFocus( EFocusCause::Cleared)"
  },
  {
    "label": "ExecuteIfBound()",
    "kind": "Method",
    "detail": "Function (OnValueChanged .)",
    "insertText": "ExecuteIfBound(InValue)"
  }
]