[
  {
    "label": "FCachedOSPageAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedOSPageAllocator"
  },
  {
    "label": "FFreePageBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreePageBlock"
  },
  {
    "label": "TCachedOSPageAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCachedOSPageAllocator"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FFreePageBlock()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Misc / OutputDevice . h \" # include \" HAL / CriticalSection . h \" # include \" HAL / PlatformMemory . h \" struct FCachedOSPageAllocator { protected : struct FFreePageBlock { void* Ptr ; SIZE_T ByteSize ;)",
    "insertText": "FFreePageBlock()"
  },
  {
    "label": "AllocateImpl()",
    "kind": "Method",
    "detail": "Function (Ptr = nullptr ; ByteSize = 0 ; } } ; void*)",
    "insertText": "AllocateImpl(SIZE_T Size, uint32 CachedByteLimit, FFreePageBlock* First, FFreePageBlock* Last, uint32& FreedPageBlocksNum, SIZE_T& CachedTotal, FCriticalSection* Mutex)"
  },
  {
    "label": "FreeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeImpl(void* Ptr, SIZE_T Size, uint32 NumCacheBlocks, uint32 CachedByteLimit, FFreePageBlock* First, uint32& FreedPageBlocksNum, SIZE_T& CachedTotal, FCriticalSection* Mutex, bool ThreadIsTimeCritical)"
  },
  {
    "label": "FreeAllImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeAllImpl(FFreePageBlock* First, uint32& FreedPageBlocksNum, SIZE_T& CachedTotal, FCriticalSection* Mutex)"
  },
  {
    "label": "IsOSAllocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsOSAllocation(SIZE_T Size, uint32 CachedByteLimit)"
  },
  {
    "label": "TCachedOSPageAllocator()",
    "kind": "Method",
    "detail": "Function (} } ; template<uint32 NumCacheBlocks,uint32 CachedByteLimit> struct TCachedOSPageAllocator : private FCachedOSPageAllocator {)",
    "insertText": "TCachedOSPageAllocator() : CachedTotal(0) , FreedPageBlocksNum(0)"
  },
  {
    "label": "Allocate()",
    "kind": "Method",
    "detail": "Function (} void*)",
    "insertText": "Allocate(SIZE_T Size, uint32 AllocationHint = 0, FCriticalSection* Mutex = nullptr)"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Free(void* Ptr, SIZE_T Size, FCriticalSection* Mutex = nullptr, bool ThreadIsTimeCritical = false)"
  },
  {
    "label": "FreeAll()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FreeAll(FCriticalSection* Mutex = nullptr)"
  },
  {
    "label": "Refresh()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Refresh()"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateStats()"
  },
  {
    "label": "GetCachedFreeTotal()",
    "kind": "Method",
    "detail": "Function (} uint64)",
    "insertText": "GetCachedFreeTotal()"
  },
  {
    "label": "IsOSAllocation()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsOSAllocation(SIZE_T Size)"
  },
  {
    "label": "DumpAllocatorStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DumpAllocatorStats(class FOutputDevice& Ar)"
  },
  {
    "label": "Logf()",
    "kind": "Method",
    "detail": "Function (Ar .)",
    "insertText": "Logf(TEXT(\"CachedOSPageAllocator = %fkb\"), (double)GetCachedFreeTotal() / 1024.0)"
  }
]