[
  {
    "label": "FCachedOSPageAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCachedOSPageAllocator"
  },
  {
    "label": "FFreePageBlock",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFreePageBlock"
  },
  {
    "label": "TCachedOSPageAllocator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCachedOSPageAllocator"
  },
  {
    "label": "FOutputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FOutputDevice"
  },
  {
    "label": "FreeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeImpl(void* Ptr, SIZE_T Size, uint32 NumCacheBlocks, uint32 CachedByteLimit, FFreePageBlock* First, uint32& FreedPageBlocksNum, SIZE_T& CachedTotal, FCriticalSection* Mutex, bool ThreadIsTimeCritical)"
  },
  {
    "label": "FreeAllImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeAllImpl(FFreePageBlock* First, uint32& FreedPageBlocksNum, SIZE_T& CachedTotal, FCriticalSection* Mutex)"
  },
  {
    "label": "AllocateImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AllocateImpl(Size, CachedByteLimit, FreedPageBlocks, FreedPageBlocks + FreedPageBlocksNum, FreedPageBlocksNum, CachedTotal, Mutex)"
  },
  {
    "label": "FreeImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FreeImpl(Ptr, Size, ThreadIsTimeCritical ? NumCacheBlocks*2 : NumCacheBlocks, CachedByteLimit, FreedPageBlocks, FreedPageBlocksNum, CachedTotal, Mutex, ThreadIsTimeCritical)"
  },
  {
    "label": "FreeAllImpl()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FreeAllImpl(FreedPageBlocks, FreedPageBlocksNum, CachedTotal, Mutex)"
  },
  {
    "label": "GetCachedFreeTotal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetCachedFreeTotal()"
  }
]