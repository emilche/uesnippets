[
  {
    "label": "FixedFpsVideoFrameWriterAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FixedFpsVideoFrameWriterAdapter"
  },
  {
    "label": "FixedFpsVideoFrameWriterAdapter()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_TESTSUPPORT_FIXED_FPS_VIDEO_FRAME_WRITER_ADAPTER_H_ # define TEST_TESTSUPPORT_FIXED_FPS_VIDEO_FRAME_WRITER_ADAPTER_H_ # include<memory> # include \" absl / types / optional . h \" # include \" api / test / video / video_frame_writer . h \" # include \" api / video / video_sink_interface . h \" # include \" system_wrappers / include / clock . h \" # include \" test / testsupport / video_frame_writer . h \" namespace webrtc { namespace test { class FixedFpsVideoFrameWriterAdapter : public VideoFrameWriter { public :)",
    "insertText": "FixedFpsVideoFrameWriterAdapter(int fps, Clock* clock, std::unique_ptr<VideoFrameWriter> delegate)"
  },
  {
    "label": "FixedFpsVideoFrameWriterAdapter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FixedFpsVideoFrameWriterAdapter()"
  },
  {
    "label": "WriteFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "WriteFrame(const webrtc::VideoFrame& frame)"
  },
  {
    "label": "Close()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Close()"
  },
  {
    "label": "WriteMissedSlotsExceptLast()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "WriteMissedSlotsExceptLast(Timestamp now)"
  },
  {
    "label": "Now()",
    "kind": "Method",
    "detail": "Function (Timestamp)",
    "insertText": "Now()"
  },
  {
    "label": "MinusInfinity()",
    "kind": "Method",
    "detail": "Function (const TimeDelta inter_frame_interval_ ; Clock* const clock_ ; std::unique_ptr<VideoFrameWriter> delegate_ ; bool is_closed_ = false ; Timestamp last_frame_time_ =)",
    "insertText": "MinusInfinity()"
  }
]