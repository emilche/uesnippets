[
  {
    "label": "FCbWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCbWriter"
  },
  {
    "label": "FPropertyTag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyTag"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FTopLevelAssetPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTopLevelAssetPath"
  },
  {
    "label": "FTopLevelAssetPathFastLess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTopLevelAssetPathFastLess"
  },
  {
    "label": "FTopLevelAssetPathLexicalLess",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTopLevelAssetPathLexicalLess"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringFwd . h \" # include \" Containers / StringView . h \" # include \" Containers / UnrealString . h \" # include \" CoreTypes . h \" # include \" Serialization / Archive . h \" # include \" Serialization / StructuredArchive . h \" # include \" Serialization / StructuredArchiveNameHelpers . h \" # include \" Serialization / StructuredArchiveSlots . h \" # include \" Templates / TypeHash . h \" # include \" Traits / IsCharType . h \" # include \" UObject / NameTypes . h \" # include<type_traits> class FCbWriter ; struct FPropertyTag ; class FCbWriter ; class FString ; class UObject ; struct FTopLevelAssetPath {)",
    "insertText": "FTopLevelAssetPath()"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTopLevelAssetPath(TYPE_OF_NULLPTR)"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTopLevelAssetPath(FName InPackageName, FName InAssetName)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetPath(InPackageName, InAssetName)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetPath(InPath.ToString())"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTopLevelAssetPath(const FString& Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetPath(FStringView(Path))"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (} template<CharType,= std::enable_if<TIsCharType<CharType>::Value>::type>)",
    "insertText": "FTopLevelAssetPath(TStringView<CharType> Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetPath(Path)"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (} template<CharType,= std::enable_if<TIsCharType<CharType>::Value>::type>)",
    "insertText": "FTopLevelAssetPath(const CharType* Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetPath(TStringView<CharType>(Path))"
  },
  {
    "label": "FTopLevelAssetPath()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTopLevelAssetPath(const UObject* InObject)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrySetPath(InObject)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FTopLevelAssetPath&)",
    "insertText": "operator(const FString& Path)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySetPath(const UObject* InObject)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySetPath(FWideStringView Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySetPath(FUtf8StringView Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrySetPath(FAnsiStringView Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (template<CharType,= std::enable_if<TIsCharType<CharType>::Value>::type> bool)",
    "insertText": "TrySetPath(const CharType* Path)"
  },
  {
    "label": "TrySetPath()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "TrySetPath(const FString& Path)"
  },
  {
    "label": "GetPackageName()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "GetPackageName()"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendString(FUtf8StringBuilderBase& Builder)"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendString(FString& OutString)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToString(FString& OutString)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "IsNull()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsNull()"
  },
  {
    "label": "FName()",
    "kind": "Method",
    "detail": "Function (PackageName = AssetName =)",
    "insertText": "FName()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(FTopLevelAssetPath const& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FTopLevelAssetPath& Path)"
  },
  {
    "label": "EnterRecord()",
    "kind": "Method",
    "detail": "Function (FStructuredArchive::FRecord Record = Slot .)",
    "insertText": "EnterRecord()"
  },
  {
    "label": "SA_VALUE()",
    "kind": "Method",
    "detail": "Function (Record<<)",
    "insertText": "SA_VALUE(TEXT(\"PackageName\"), Path.PackageName) << SA_VALUE(TEXT(\"AssetName\"), Path.AssetName)"
  },
  {
    "label": "Compare()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "Compare(const FTopLevelAssetPath& Other)"
  },
  {
    "label": "CompareFast()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "CompareFast(const FTopLevelAssetPath& Other)"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} [ [ nodiscard ] ] uint32)",
    "insertText": "GetTypeHash(FTopLevelAssetPath const& This)"
  },
  {
    "label": "ExportTextItem()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ExportTextItem(FString& ValueStr, FTopLevelAssetPath const& DefaultValue, UObject* Parent, int32 PortFlags, UObject* ExportRootScope)"
  },
  {
    "label": "ImportTextItem()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ImportTextItem(const TCHAR*& Buffer, int32 PortFlags, UObject* Parent, FOutputDevice* ErrorText, FArchive* InSerializingArchive = nullptr)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromMismatchedTag(const FPropertyTag& Tag, FStructuredArchive::FSlot Slot)"
  },
  {
    "label": "WriteCompactBinary()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteCompactBinary(FCbWriter& Writer)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (private : FCbWriter&)",
    "insertText": "operator(FCbWriter& Writer, const FTopLevelAssetPath& Path)"
  },
  {
    "label": "WriteCompactBinary()",
    "kind": "Method",
    "detail": "Function (Path .)",
    "insertText": "WriteCompactBinary(Writer)"
  },
  {
    "label": "SerializeForLog()",
    "kind": "Method",
    "detail": "Function (FName PackageName ; FName AssetName ; void)",
    "insertText": "SerializeForLog(FCbWriter& Writer, const FTopLevelAssetPath& Value)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; FWideStringBuilderBase&)",
    "insertText": "operator(FWideStringBuilderBase& Builder, const FTopLevelAssetPath& Path)"
  },
  {
    "label": "AppendString()",
    "kind": "Method",
    "detail": "Function (Path .)",
    "insertText": "AppendString(Builder)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} } ; struct FTopLevelAssetPathLexicalLess { bool)",
    "insertText": "operator()(const FTopLevelAssetPath& A, const FTopLevelAssetPath& B)"
  }
]