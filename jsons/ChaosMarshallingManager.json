[
  {
    "label": "FGeometryCollectionResults",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGeometryCollectionResults"
  },
  {
    "label": "FDirtyPropertiesManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirtyPropertiesManager"
  },
  {
    "label": "FPullPhysicsData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPullPhysicsData"
  },
  {
    "label": "FDirtyProxy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirtyProxy"
  },
  {
    "label": "FDirtyProxiesBucket",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDirtyProxiesBucket"
  },
  {
    "label": "FDirtySet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDirtySet"
  },
  {
    "label": "FChaosMarshallingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosMarshallingManager"
  },
  {
    "label": "FPushPhysicsData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPushPhysicsData"
  },
  {
    "label": "FChaosMarshallingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FChaosMarshallingManager"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "ResetForHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetForHistory()"
  },
  {
    "label": "ResetDirtyProxiesBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetDirtyProxiesBuffer()"
  },
  {
    "label": "CopySubstepData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopySubstepData(const FPushPhysicsData& FirstStepData)"
  },
  {
    "label": "FChaosMarshallingManager()",
    "kind": "Method",
    "detail": "Function (CHAOS_API)",
    "insertText": "FChaosMarshallingManager()"
  },
  {
    "label": "Step_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Step_External(FReal ExternalDT, const int32 NumSteps = 1, bool bSolverSubstepped = false)"
  },
  {
    "label": "FreeData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeData_Internal(FPushPhysicsData* PushData)"
  },
  {
    "label": "FreeDataToHistory_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeDataToHistory_Internal(FPushPhysicsData* PushData)"
  },
  {
    "label": "FreePullData_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreePullData_External(FPullPhysicsData* PullData)"
  },
  {
    "label": "FinalizePullData_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizePullData_Internal(int32 LatestExternalTimestampConsumed, FReal SimStartTime, FReal DeltaTime)"
  },
  {
    "label": "SetHistoryLength_Internal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHistoryLength_Internal(int32 InHistoryLength)"
  },
  {
    "label": "PrepareExternalQueue_External()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareExternalQueue_External()"
  },
  {
    "label": "PreparePullData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreparePullData()"
  }
]