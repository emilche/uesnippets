[
  {
    "label": "SimpleTestTickClock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SimpleTestTickClock"
  },
  {
    "label": "SimpleTestTickClock()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_SIMPLE_TEST_TICK_CLOCK_H_ # define BASE_TEST_SIMPLE_TEST_TICK_CLOCK_H_ # include \" base / compiler_specific . h \" # include \" base / synchronization / lock . h \" # include \" base / time / tick_clock . h \" # include \" base / time / time . h \" namespace base { class SimpleTestTickClock : public TickClock { public :)",
    "insertText": "SimpleTestTickClock()"
  },
  {
    "label": "NowTicks()",
    "kind": "Method",
    "detail": "Function (TimeTicks)",
    "insertText": "NowTicks()"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(TimeDelta delta)"
  },
  {
    "label": "SetNowTicks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetNowTicks(TimeTicks ticks)"
  }
]