[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "SafeBaseName()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FILES_SAFE_BASE_NAME_H_ # define BASE_FILES_SAFE_BASE_NAME_H_ # include \" base / base_export . h \" # include \" base / files / file_path . h \" # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { class BASE_EXPORT SafeBaseName { public :)",
    "insertText": "SafeBaseName()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (absl::optional<SafeBaseName>)",
    "insertText": "Create(const FilePath&)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (absl::optional<SafeBaseName>)",
    "insertText": "Create(FilePath::StringPieceType)"
  },
  {
    "label": "path()",
    "kind": "Method",
    "detail": "Function (const FilePath&)",
    "insertText": "path()"
  },
  {
    "label": "SafeBaseName()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "SafeBaseName(const FilePath&)"
  }
]