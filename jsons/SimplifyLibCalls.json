[
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "CallInst",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CallInst"
  },
  {
    "label": "DataLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DataLayout"
  },
  {
    "label": "Instruction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Instruction"
  },
  {
    "label": "TargetLibraryInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TargetLibraryInfo"
  },
  {
    "label": "BasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BasicBlock"
  },
  {
    "label": "Function",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Function"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "FortifiedLibCallSimplifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FortifiedLibCallSimplifier"
  },
  {
    "label": "implements",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "implements"
  },
  {
    "label": "LibCallSimplifier",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LibCallSimplifier"
  },
  {
    "label": "FortifiedLibCallSimplifier()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FortifiedLibCallSimplifier(const TargetLibraryInfo *TLI,\n                             bool OnlyLowerUnknownSize = false)"
  },
  {
    "label": "isFortifiedCallFoldable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isFortifiedCallFoldable(CallInst *CI, unsigned ObjSizeOp,\n                               unsigned SizeOp, bool isString)"
  },
  {
    "label": "replaceAllUsesWithDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replaceAllUsesWithDefault(Instruction *I, Value *With)"
  },
  {
    "label": "replaceAllUsesWith()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replaceAllUsesWith(Instruction *I, Value *With)"
  },
  {
    "label": "classifyArgUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "classifyArgUse(Value *Val, BasicBlock *BB, bool IsFloat,\n                      SmallVectorImpl<CallInst *> &SinCalls,\n                      SmallVectorImpl<CallInst *> &CosCalls,\n                      SmallVectorImpl<CallInst *> &SinCosCalls)"
  },
  {
    "label": "replaceTrigInsts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "replaceTrigInsts(SmallVectorImpl<CallInst *> &Calls, Value *Res)"
  },
  {
    "label": "hasFloatVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "hasFloatVersion(StringRef FuncName)"
  }
]