[
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_NOTREACHED_H_ # define BASE_NOTREACHED_H_ # include \" base / base_export . h \" # include \" base / check . h \" # include \" base / dcheck_is_on . h \" # include \" base / logging_buildflags . h \" namespace logging { # if)",
    "insertText": "BUILDFLAG(ENABLE_LOG_ERROR_NOT_REACHED) || DCHECK_IS_ON() #define NOTREACHED() \\ LAZY_CHECK_STREAM(::logging::CheckError::NotReached(__FILE__, __LINE__), true) #else #define NOTREACHED() EAT_CHECK_STREAM_PARAMS() #endif #if DCHECK_IS_ON() #define NOTIMPLEMENTED() \\ ::logging::CheckError::NotImplemented(__FILE__, __LINE__, __PRETTY_FUNCTION__) #else #define NOTIMPLEMENTED() EAT_CHECK_STREAM_PARAMS() #endif #define NOTIMPLEMENTED_LOG_ONCE()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (\\ bool logged_once = false ; \\)",
    "insertText": "if(!logged_once)"
  },
  {
    "label": "NOTIMPLEMENTED()",
    "kind": "Method",
    "detail": "Function (\\)",
    "insertText": "NOTIMPLEMENTED()"
  }
]