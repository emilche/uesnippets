[
  {
    "label": "_cef_waitable_event_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_waitable_event_t"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_WAITABLE_EVENT_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_WAITABLE_EVENT_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif typedef struct _cef_waitable_event_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* reset)(struct _cef_waitable_event_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* signal)(struct _cef_waitable_event_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* is_signaled)(struct _cef_waitable_event_t* self)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(CEF_CALLBACK* wait)(struct _cef_waitable_event_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "int(CEF_CALLBACK* timed_wait)(struct _cef_waitable_event_t* self, int64 max_ms)"
  },
  {
    "label": "cef_waitable_event_create()",
    "kind": "Method",
    "detail": "Function (} cef_waitable_event_t ; CEF_EXPORT cef_waitable_event_t*)",
    "insertText": "cef_waitable_event_create(int automatic_reset, int initially_signaled)"
  }
]