[
  {
    "label": "FGenericWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericWindow"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "ITextInputMethodSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITextInputMethodSystem"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FForceFeedbackValues",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FForceFeedbackValues"
  },
  {
    "label": "FHapticFeedbackValues",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHapticFeedbackValues"
  },
  {
    "label": "FWindowsWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsWindow"
  },
  {
    "label": "FGenericApplicationMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericApplicationMessageHandler"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "FTaskbarList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskbarList"
  },
  {
    "label": "FDeferredWindowsMessage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeferredWindowsMessage"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FDragDropOLEData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDragDropOLEData"
  },
  {
    "label": "EWindowsOLEDataType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EWindowsOLEDataType"
  },
  {
    "label": "FDeferredWindowsDragDropOperation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDeferredWindowsDragDropOperation"
  },
  {
    "label": "IWindowsMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWindowsMessageHandler"
  },
  {
    "label": "FWindowsApplication",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsApplication"
  },
  {
    "label": "FGenericApplicationMessageHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGenericApplicationMessageHandler"
  },
  {
    "label": "IInputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInputDevice"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "IInputDevice",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IInputDevice"
  },
  {
    "label": "EModifierKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EModifierKey"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FWindowsUIAManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWindowsUIAManager"
  },
  {
    "label": "TouchInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TouchInfo"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTaskbarList>)",
    "insertText": "Create()"
  },
  {
    "label": "SetOverlayIcon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOverlayIcon(HWND WindowHandle, HICON Icon, FText Description)"
  },
  {
    "label": "SetProgressState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProgressState(HWND WindowHandle, ETaskbarProgressState::Type State)"
  },
  {
    "label": "SetProgressValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProgressValue(HWND WindowHandle, uint64 Current, uint64 Total)"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "DeferDragDropOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferDragDropOperation( const FDeferredWindowsDragDropOperation& DeferredDragDropOperation )"
  },
  {
    "label": "GetTaskbarList()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTaskbarList>)",
    "insertText": "GetTaskbarList()"
  },
  {
    "label": "OnOLEDragEnter()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "OnOLEDragEnter( const HWND HWnd, const FDragDropOLEData& OLEData, ::DWORD KeyState, POINTL CursorPosition, ::DWORD *CursorEffect)"
  },
  {
    "label": "OnOLEDragOver()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "OnOLEDragOver( const HWND HWnd, ::DWORD KeyState, POINTL CursorPosition, ::DWORD *CursorEffect)"
  },
  {
    "label": "OnOLEDragOut()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "OnOLEDragOut( const HWND HWnd )"
  },
  {
    "label": "OnOLEDrop()",
    "kind": "Method",
    "detail": "Function (HRESULT)",
    "insertText": "OnOLEDrop( const HWND HWnd, const FDragDropOLEData& OLEData, ::DWORD KeyState, POINTL CursorPosition, ::DWORD *CursorEffect)"
  },
  {
    "label": "AddMessageHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMessageHandler(IWindowsMessageHandler& InMessageHandler)"
  },
  {
    "label": "RemoveMessageHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveMessageHandler(IWindowsMessageHandler& InMessageHandler)"
  },
  {
    "label": "AddExternalInputDevice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddExternalInputDevice(TSharedPtr<class IInputDevice> InputDevice)"
  },
  {
    "label": "WindowsApplication_WndProc()",
    "kind": "Method",
    "detail": "Function (LRESULT)",
    "insertText": "WindowsApplication_WndProc(HWND hwnd, uint32 msg, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "AppWndProc()",
    "kind": "Method",
    "detail": "Function (CALLBACK)",
    "insertText": "AppWndProc(HWND hwnd, uint32 msg, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "ProcessMessage()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessMessage( HWND hwnd, uint32 msg, WPARAM wParam, LPARAM lParam )"
  },
  {
    "label": "ProcessDeferredMessage()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ProcessDeferredMessage( const FDeferredWindowsMessage& DeferredMessage )"
  },
  {
    "label": "ProcessDeferredDragDropOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessDeferredDragDropOperation(const FDeferredWindowsDragDropOperation& Op)"
  },
  {
    "label": "FWindowsApplication()",
    "kind": "Method",
    "detail": "Function (APPLICATIONCORE_API)",
    "insertText": "FWindowsApplication( const HINSTANCE HInstance, const HICON IconHandle )"
  },
  {
    "label": "ApplyLowLevelMouseFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyLowLevelMouseFilter()"
  },
  {
    "label": "RemoveLowLevelMouseFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveLowLevelMouseFilter()"
  },
  {
    "label": "HandleLowLevelMouseFilterHook()",
    "kind": "Method",
    "detail": "Function (CALLBACK)",
    "insertText": "HandleLowLevelMouseFilterHook(int nCode, WPARAM wParam, LPARAM lParam)"
  },
  {
    "label": "RegisterClass()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterClass( const HINSTANCE HInstance, const HICON HIcon )"
  },
  {
    "label": "IsKeyboardInputMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsKeyboardInputMessage( uint32 msg )"
  },
  {
    "label": "IsMouseInputMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMouseInputMessage( uint32 msg )"
  },
  {
    "label": "IsFakeMouseInputMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFakeMouseInputMessage(uint32 msg)"
  },
  {
    "label": "IsInputMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInputMessage( uint32 msg )"
  },
  {
    "label": "DeferMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeferMessage( TSharedPtr<FWindowsWindow>& NativeWindow, HWND InHWnd, uint32 InMessage, WPARAM InWParam, LPARAM InLParam, int32 MouseX = 0, int32 MouseY = 0, uint32 RawInputFlags = 0 )"
  },
  {
    "label": "CheckForShiftUpEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForShiftUpEvents(const int32 KeyCode)"
  },
  {
    "label": "ShutDownAfterError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutDownAfterError()"
  },
  {
    "label": "AllowAccessibilityShortcutKeys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllowAccessibilityShortcutKeys(const bool bAllowKeys)"
  },
  {
    "label": "QueryConnectedMice()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueryConnectedMice()"
  },
  {
    "label": "GetTouchIndexForID()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTouchIndexForID(int32 TouchID)"
  },
  {
    "label": "GetFirstFreeTouchIndex()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetFirstFreeTouchIndex()"
  },
  {
    "label": "UpdateAllModifierKeyStates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAllModifierKeyStates()"
  }
]