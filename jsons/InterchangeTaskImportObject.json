[
  {
    "label": "FTaskImportObject_GameThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskImportObject_GameThread"
  },
  {
    "label": "FTaskImportObject_Async",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskImportObject_Async"
  },
  {
    "label": "FTaskImportObjectFinalize_GameThread",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTaskImportObjectFinalize_GameThread"
  },
  {
    "label": "FTaskImportObject_GameThread()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" InterchangeFactoryBase . h \" # include \" InterchangeManager . h \" # include \" InterchangeTaskSystem . h \" # include \" Stats / Stats . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" Nodes / InterchangeFactoryBaseNode . h \" namespace UE::Interchange { class FTaskImportObject_GameThread : public FInterchangeTaskBase { private : FString PackageBasePath ; int32 SourceIndex ; TWeakPtr<FImportAsyncHelper,ESPMode::ThreadSafe> WeakAsyncHelper ; UInterchangeFactoryBaseNode* FactoryNode ; const UClass* FactoryClass ; public :)",
    "insertText": "FTaskImportObject_GameThread(const FString& InPackageBasePath, const int32 InSourceIndex, TWeakPtr<FImportAsyncHelper, ESPMode::ThreadSafe> InAsyncHelper, UInterchangeFactoryBaseNode* InFactoryNode, const UClass* InFactoryClass) : PackageBasePath(InPackageBasePath) , SourceIndex(InSourceIndex) , WeakAsyncHelper(InAsyncHelper) , FactoryNode(InFactoryNode) , FactoryClass(InFactoryClass)"
  },
  {
    "label": "GetTaskThread()",
    "kind": "Method",
    "detail": "Function (} EInterchangeTaskThread)",
    "insertText": "GetTaskThread()"
  },
  {
    "label": "FTaskImportObject_Async()",
    "kind": "Method",
    "detail": "Function (} ; class FTaskImportObject_Async : public FInterchangeTaskBase { private : FString PackageBasePath ; int32 SourceIndex ; TWeakPtr<FImportAsyncHelper,ESPMode::ThreadSafe> WeakAsyncHelper ; UInterchangeFactoryBaseNode* FactoryNode ; public :)",
    "insertText": "FTaskImportObject_Async(const FString& InPackageBasePath, const int32 InSourceIndex, TWeakPtr<FImportAsyncHelper, ESPMode::ThreadSafe> InAsyncHelper, UInterchangeFactoryBaseNode* InFactoryNode) : PackageBasePath(InPackageBasePath) , SourceIndex(InSourceIndex) , WeakAsyncHelper(InAsyncHelper) , FactoryNode(InFactoryNode)"
  },
  {
    "label": "Pin()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FImportAsyncHelper,ESPMode::ThreadSafe> AsyncHelper = WeakAsyncHelper .)",
    "insertText": "Pin()"
  },
  {
    "label": "FTaskImportObjectFinalize_GameThread()",
    "kind": "Method",
    "detail": "Function (} ; class FTaskImportObjectFinalize_GameThread : public FInterchangeTaskBase { private : FString PackageBasePath ; int32 SourceIndex ; TWeakPtr<FImportAsyncHelper,ESPMode::ThreadSafe> WeakAsyncHelper ; UInterchangeFactoryBaseNode* FactoryNode ; const UClass* FactoryClass ; public :)",
    "insertText": "FTaskImportObjectFinalize_GameThread(const FString& InPackageBasePath, const int32 InSourceIndex, TWeakPtr<FImportAsyncHelper, ESPMode::ThreadSafe> InAsyncHelper, UInterchangeFactoryBaseNode* InFactoryNode) : PackageBasePath(InPackageBasePath) , SourceIndex(InSourceIndex) , WeakAsyncHelper(InAsyncHelper) , FactoryNode(InFactoryNode)"
  }
]