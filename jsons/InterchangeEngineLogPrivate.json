[
  {
    "label": "FScopeInterchangeTraceAsyncTask",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScopeInterchangeTraceAsyncTask"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \")",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogInterchangeEngine, Log, All)"
  },
  {
    "label": "FScopeInterchangeTraceAsyncTask()",
    "kind": "Method",
    "detail": "Function (# define INTERCHANGE_TRACE_ASYNCHRONOUS_TASK_ENABLED 0 # if INTERCHANGE_TRACE_ASYNCHRONOUS_TASK_ENABLED class FScopeInterchangeTraceAsyncTask { public :)",
    "insertText": "FScopeInterchangeTraceAsyncTask(FString InTaskName) : TaskName(InTaskName)"
  },
  {
    "label": "Seconds()",
    "kind": "Method",
    "detail": "Function (StartTime =)",
    "insertText": "Seconds()"
  },
  {
    "label": "FromInt()",
    "kind": "Method",
    "detail": "Function (TaskID = FractionalPart* 1 0 0 0 0 0 0 0 0 0 ; FString MessageStr =)",
    "insertText": "FromInt(TaskID) + TEXT(\" \") + TaskName + TEXT(\" Execute Start on \") + (IsInGameThread() ? TraceAsyncGameThreadStr : TraceAsyncBackgroundThreadStr)"
  },
  {
    "label": "FScopeInterchangeTraceAsyncTask()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FScopeInterchangeTraceAsyncTask()"
  },
  {
    "label": "DeltaTime()",
    "kind": "Method",
    "detail": "Function (const int32)",
    "insertText": "DeltaTime(FPlatformTime::Seconds() - StartTime)"
  },
  {
    "label": "FromInt()",
    "kind": "Method",
    "detail": "Function (FString MessageStr =)",
    "insertText": "FromInt(TaskID) + TEXT(\" \") + TaskName + TEXT(\" Execute End on \") + (IsInGameThread() ? TraceAsyncGameThreadStr : TraceAsyncBackgroundThreadStr) + TEXT(\" Time: \") + FString::FromInt(DeltaTime) + TEXT(\"ms\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} private : double StartTime = 0 ; int32 TaskID = 0 ; FString TaskName ; const FString TraceAsyncGameThreadStr =)",
    "insertText": "TEXT(\"Game Thread\")"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (const FString TraceAsyncBackgroundThreadStr =)",
    "insertText": "TEXT(\"Background Thread\")"
  },
  {
    "label": "INTERCHANGE_TRACE_ASYNCHRONOUS_TASK()",
    "kind": "Method",
    "detail": "Function (} ; # define)",
    "insertText": "INTERCHANGE_TRACE_ASYNCHRONOUS_TASK(TaskName) \\ FScopeInterchangeTraceAsyncTask ScopeTraceAsynTask(TEXT(#TaskName))"
  }
]