[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "UPrimitiveComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPrimitiveComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCollisionQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryParams"
  },
  {
    "label": "FComponentQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentQueryParams"
  },
  {
    "label": "FCollisionResponseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseParams"
  },
  {
    "label": "FCollisionResponseContainer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionResponseContainer"
  },
  {
    "label": "FCollisionQueryFlag",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionQueryFlag"
  },
  {
    "label": "FCollisionObjectQueryParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCollisionObjectQueryParams"
  },
  {
    "label": "InitType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "InitType"
  },
  {
    "label": "ECC_TO_BITFIELD()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Engine / EngineTypes . h \" # include \" Chaos / ChaosEngineInterface . h \" # define)",
    "insertText": "ECC_TO_BITFIELD(x) (1<<(x)) #define CRC_TO_BITFIELD(x) (1<<(x))"
  },
  {
    "label": "SCENE_QUERY_STAT_ONLY()",
    "kind": "Method",
    "detail": "Function (class UPrimitiveComponent ; enum class EQueryMobilityType { Any,,Dynamic } ; # define FIND_UNKNOWN_SCENE_QUERIES 0 # if ENABLE_STATNAMEDEVENTS # define)",
    "insertText": "SCENE_QUERY_STAT_ONLY(QueryName) TStatId(ANSI_TO_PROFILING(#QueryName)) #else #define SCENE_QUERY_STAT_ONLY(QueryName) QUICK_USE_CYCLE_STAT(QueryName, STATGROUP_CollisionTags) #endif #define SCENE_QUERY_STAT_NAME_ONLY(QueryName) []()"
  },
  {
    "label": "StaticName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "StaticName(#QueryName)"
  },
  {
    "label": "GetUnknownStatId()",
    "kind": "Method",
    "detail": "Function (FName TraceTag ; FName OwnerTag ; bool bTraceComplex ; bool bFindInitialOverlaps ; bool bReturnFaceIndex ; bool bReturnPhysicalMaterial ; bool bIgnoreBlocks ; bool bIgnoreTouches ; bool bSkipNarrowPhase ; bool bTraceIntoSubComponents ; bool bReplaceHitWithSubComponents ; EQueryMobilityType MobilityType ; typedef TArray<uint32,TInlineAllocator<8>> IgnoreComponentsArrayType ; typedef TArray<uint32,TInlineAllocator<4>> IgnoreSourceObjectsArrayType ; typedef IgnoreSourceObjectsArrayType IgnoreActorsArrayType ; FMaskFilter IgnoreMask ; TStatId StatId ; TStatId)",
    "insertText": "GetUnknownStatId()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} #)",
    "insertText": "if(UE_BUILD_TEST || UE_BUILD_SHIPPING)"
  },
  {
    "label": "Internal_AddIgnoredComponent()",
    "kind": "Method",
    "detail": "Function (# endif private : bool bComponentListUnique ; IgnoreComponentsArrayType IgnoreComponents ; IgnoreSourceObjectsArrayType IgnoreSourceObjects ; void)",
    "insertText": "Internal_AddIgnoredComponent(const UPrimitiveComponent* InIgnoreComponent)"
  },
  {
    "label": "GetIgnoredComponents()",
    "kind": "Method",
    "detail": "Function (public : const IgnoreComponentsArrayType&)",
    "insertText": "GetIgnoredComponents()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (IgnoreComponents .)",
    "insertText": "Reset()"
  },
  {
    "label": "ClearIgnoredSourceObjects()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ClearIgnoredSourceObjects()"
  },
  {
    "label": "SetNumIgnoredComponents()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetNumIgnoredComponents(int32 NewNum)"
  },
  {
    "label": "FCollisionQueryParams()",
    "kind": "Method",
    "detail": "Function (# if ! FIND_UNKNOWN_SCENE_QUERIES)",
    "insertText": "FCollisionQueryParams()"
  },
  {
    "label": "FCollisionQueryParams()",
    "kind": "Method",
    "detail": "Function (# endif bTraceIntoSubComponents = true ; bReplaceHitWithSubComponents = true ; })",
    "insertText": "FCollisionQueryParams(FName InTraceTag, bool bInTraceComplex=false, const AActor* InIgnoreActor=NULL) : FCollisionQueryParams(InTraceTag, GetUnknownStatId(), bInTraceComplex, InIgnoreActor)"
  },
  {
    "label": "FCollisionQueryParams()",
    "kind": "Method",
    "detail": "Function (} # endif)",
    "insertText": "FCollisionQueryParams(FName InTraceTag, const TStatId& InStatId, bool bInTraceComplex = false, const AActor* InIgnoreActor = NULL)"
  },
  {
    "label": "AddIgnoredActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredActor(const AActor* InIgnoreActor)"
  },
  {
    "label": "AddIgnoredActor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredActor(const uint32 InIgnoreActorID)"
  },
  {
    "label": "AddIgnoredSourceObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredSourceObject(const UObject* InIgnoreActor)"
  },
  {
    "label": "AddIgnoredSourceObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredSourceObject(const uint32 InIgnoreActorID)"
  },
  {
    "label": "AddIgnoredActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredActors(const TArray<AActor*>& InIgnoreActors)"
  },
  {
    "label": "AddIgnoredActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredActors(const TArray<const AActor*>& InIgnoreActors)"
  },
  {
    "label": "AddIgnoredActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredActors(const TArray<TWeakObjectPtr<const AActor> >& InIgnoreActors)"
  },
  {
    "label": "AddIgnoredSourceObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredSourceObjects(const TArray<UObject*>& InIgnoreObjects)"
  },
  {
    "label": "AddIgnoredSourceObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredSourceObjects(const TArray<const UObject*>& InIgnoreObjects)"
  },
  {
    "label": "AddIgnoredSourceObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredSourceObjects(const TArray<TWeakObjectPtr<const UObject> >& InIgnoreObjects)"
  },
  {
    "label": "AddIgnoredComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredComponent(const UPrimitiveComponent* InIgnoreComponent)"
  },
  {
    "label": "AddIgnoredComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredComponents(const TArray<UPrimitiveComponent*>& InIgnoreComponents)"
  },
  {
    "label": "AddIgnoredComponents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredComponents(const TArray<TWeakObjectPtr<UPrimitiveComponent>>& InIgnoreComponents)"
  },
  {
    "label": "AddIgnoredComponent_LikelyDuplicatedRoot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddIgnoredComponent_LikelyDuplicatedRoot(const UPrimitiveComponent* InIgnoreComponent)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "ToString()"
  },
  {
    "label": "FComponentQueryParams()",
    "kind": "Method",
    "detail": "Function (} FCollisionQueryParams DefaultQueryParam ; } ; struct FComponentQueryParams : public FCollisionQueryParams { # if ! FIND_UNKNOWN_SCENE_QUERIES)",
    "insertText": "FComponentQueryParams() : FCollisionQueryParams(NAME_None, FCollisionQueryParams::GetUnknownStatId(),false)"
  },
  {
    "label": "FComponentQueryParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FComponentQueryParams(FName InTraceTag, const AActor* InIgnoreActor=NULL, const FCollisionEnabledMask InShapeCollisionMask = 0) : FComponentQueryParams(InTraceTag, GetUnknownStatId(), InIgnoreActor, InShapeCollisionMask)"
  },
  {
    "label": "FComponentQueryParams()",
    "kind": "Method",
    "detail": "Function (} # endif)",
    "insertText": "FComponentQueryParams(FName InTraceTag, const TStatId& InStatId, const AActor* InIgnoreActor = NULL, const FCollisionEnabledMask InShapeCollisionMask = 0) : FCollisionQueryParams(InTraceTag, InStatId, false, InIgnoreActor), ShapeCollisionMask(InShapeCollisionMask)"
  },
  {
    "label": "FCollisionResponseParams()",
    "kind": "Method",
    "detail": "Function (} FCollisionEnabledMask ShapeCollisionMask ; FComponentQueryParams DefaultComponentQueryParams ; } ; struct FCollisionResponseParams { struct FCollisionResponseContainer CollisionResponse ;)",
    "insertText": "FCollisionResponseParams(ECollisionResponse DefaultResponse = ECR_Block)"
  },
  {
    "label": "SetAllChannels()",
    "kind": "Method",
    "detail": "Function (CollisionResponse .)",
    "insertText": "SetAllChannels(DefaultResponse)"
  },
  {
    "label": "FCollisionResponseParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCollisionResponseParams(const FCollisionResponseContainer& ResponseContainer)"
  },
  {
    "label": "FCollisionQueryFlag()",
    "kind": "Method",
    "detail": "Function (CollisionResponse = ResponseContainer ; } FCollisionResponseParams DefaultResponseParam ; } ; struct FCollisionQueryFlag { private : int32 AllObjectQueryFlag ; int32 AllStaticObjectQueryFlag ;)",
    "insertText": "FCollisionQueryFlag()"
  },
  {
    "label": "ECC_TO_BITFIELD()",
    "kind": "Method",
    "detail": "Function (AllObjectQueryFlag = 0 xFFFFFFFF ; AllStaticObjectQueryFlag =)",
    "insertText": "ECC_TO_BITFIELD(ECC_WorldStatic)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (} public : FCollisionQueryFlag&)",
    "insertText": "Get()"
  },
  {
    "label": "GetAllObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetAllObjectsQueryFlag()"
  },
  {
    "label": "AddToAllObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddToAllObjectsQueryFlag(ECollisionChannel NewChannel)"
  },
  {
    "label": "SetAllObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllObjectsQueryFlag(AllObjectQueryFlag |= ECC_TO_BITFIELD(NewChannel))"
  },
  {
    "label": "AddToAllStaticObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "AddToAllStaticObjectsQueryFlag(ECollisionChannel NewChannel)"
  },
  {
    "label": "SetAllStaticObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllStaticObjectsQueryFlag(AllStaticObjectQueryFlag |= ECC_TO_BITFIELD(NewChannel))"
  },
  {
    "label": "RemoveFromAllObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RemoveFromAllObjectsQueryFlag(ECollisionChannel NewChannel)"
  },
  {
    "label": "SetAllObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllObjectsQueryFlag(AllObjectQueryFlag &= ~ECC_TO_BITFIELD(NewChannel))"
  },
  {
    "label": "RemoveFromAllStaticObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RemoveFromAllStaticObjectsQueryFlag(ECollisionChannel NewChannel)"
  },
  {
    "label": "SetAllStaticObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllStaticObjectsQueryFlag(AllObjectQueryFlag &= ~ECC_TO_BITFIELD(NewChannel))"
  },
  {
    "label": "SetAllObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetAllObjectsQueryFlag(int32 NewQueryFlag)"
  },
  {
    "label": "SetAllStaticObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (AllObjectQueryFlag = NewQueryFlag ; AllStaticObjectQueryFlag = AllObjectQueryFlag& AllStaticObjectQueryFlag ; } void)",
    "insertText": "SetAllStaticObjectsQueryFlag(int32 NewQueryFlag)"
  },
  {
    "label": "SetAllDynamicObjectsQueryFlag()",
    "kind": "Method",
    "detail": "Function (AllStaticObjectQueryFlag = NewQueryFlag ; } void)",
    "insertText": "SetAllDynamicObjectsQueryFlag(int32 NewQueryFlag)"
  },
  {
    "label": "FCollisionObjectQueryParams()",
    "kind": "Method",
    "detail": "Function (AllStaticObjectQueryFlag = AllObjectQueryFlag& ~ NewQueryFlag ; } } ; struct FCollisionObjectQueryParams { enum InitType { AllObjects,AllStaticObjects,AllDynamicObjects } ; int32 ObjectTypesToQuery ; FMaskFilter IgnoreMask ;)",
    "insertText": "FCollisionObjectQueryParams() : ObjectTypesToQuery(0) , IgnoreMask(0)"
  },
  {
    "label": "FCollisionObjectQueryParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCollisionObjectQueryParams(ECollisionChannel QueryChannel)"
  },
  {
    "label": "ECC_TO_BITFIELD()",
    "kind": "Method",
    "detail": "Function (ObjectTypesToQuery =)",
    "insertText": "ECC_TO_BITFIELD(QueryChannel)"
  },
  {
    "label": "FCollisionObjectQueryParams()",
    "kind": "Method",
    "detail": "Function (IgnoreMask = 0 ; })",
    "insertText": "FCollisionObjectQueryParams(const TArray<TEnumAsByte<EObjectTypeQuery> > & ObjectTypes)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (ObjectTypesToQuery = 0 ;)",
    "insertText": "for(auto Iter = ObjectTypes.CreateConstIterator(); Iter; ++Iter)"
  },
  {
    "label": "AddObjectTypesToQuery()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddObjectTypesToQuery(UEngineTypes::ConvertToCollisionChannel((*Iter).GetValue()))"
  },
  {
    "label": "FCollisionObjectQueryParams()",
    "kind": "Method",
    "detail": "Function (} IgnoreMask = 0 ; })",
    "insertText": "FCollisionObjectQueryParams(enum FCollisionObjectQueryParams::InitType QueryType)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (break ; case AllStaticObjects : ObjectTypesToQuery =)",
    "insertText": "Get().GetAllStaticObjectsQueryFlag()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (break ; case AllDynamicObjects : ObjectTypesToQuery =)",
    "insertText": "Get().GetAllDynamicObjectsQueryFlag()"
  },
  {
    "label": "FCollisionObjectQueryParams()",
    "kind": "Method",
    "detail": "Function (break ; } IgnoreMask = 0 ; } ;)",
    "insertText": "FCollisionObjectQueryParams(int32 InObjectTypesToQuery)"
  },
  {
    "label": "DoVerify()",
    "kind": "Method",
    "detail": "Function (ObjectTypesToQuery = InObjectTypesToQuery ; IgnoreMask = 0 ;)",
    "insertText": "DoVerify()"
  },
  {
    "label": "AddObjectTypesToQuery()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddObjectTypesToQuery(ECollisionChannel QueryChannel)"
  },
  {
    "label": "RemoveObjectTypesToQuery()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveObjectTypesToQuery(ECollisionChannel QueryChannel)"
  },
  {
    "label": "GetQueryBitfield()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetQueryBitfield()"
  },
  {
    "label": "IsValidObjectQuery()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidObjectQuery(ECollisionChannel QueryChannel)"
  },
  {
    "label": "GetCollisionChannelFromOverlapFilter()",
    "kind": "Method",
    "detail": "Function (} FCollisionObjectQueryParams::InitType)",
    "insertText": "GetCollisionChannelFromOverlapFilter(EOverlapFilterOption Filter)"
  }
]