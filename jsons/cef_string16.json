[
  {
    "label": "as",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "as"
  },
  {
    "label": "string16_char_traits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "string16_char_traits"
  },
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "std",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "std"
  },
  {
    "label": "c16memcmp()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "c16memcmp(const char16* s1, const char16* s2, size_t n)"
  },
  {
    "label": "c16len()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "c16len(const char16* s)"
  },
  {
    "label": "c16memcmp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "c16memcmp(s1, s2, n)"
  },
  {
    "label": "c16len()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "c16len(s)"
  },
  {
    "label": "c16memchr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "c16memchr(s, a, n)"
  },
  {
    "label": "c16memmove()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "c16memmove(s1, s2, n)"
  },
  {
    "label": "c16memcpy()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "c16memcpy(s1, s2, n)"
  },
  {
    "label": "c16memset()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "c16memset(s, a, n)"
  },
  {
    "label": "char_type()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "char_type(c)"
  },
  {
    "label": "int_type()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "int_type(c)"
  },
  {
    "label": "PrintTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrintTo(const string16& str, std::ostream* out)"
  }
]