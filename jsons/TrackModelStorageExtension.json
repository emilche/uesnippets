[
  {
    "label": "UMovieSceneTrack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneTrack"
  },
  {
    "label": "FTrackModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackModel"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "FViewModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewModel"
  },
  {
    "label": "FTrackModelStorageExtension",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackModelStorageExtension"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / ObjectKey . h \" # include \" MVVM / Extensions / DynamicExtensionContainer . h \" # include \" EventHandlers / ISequenceDataEventHandler . h \" # include \" ISequencerModule . h \" class UMovieSceneTrack ; namespace UE { namespace Sequencer { class FTrackModel ; class FSequenceModel ; class FViewModel ; class FTrackModelStorageExtension : public IDynamicExtension,private UE::MovieScene::TIntrusiveEventHandler<UE::MovieScene::ISequenceDataEventHandler> { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_VIEW_MODEL_TYPE_ID(FTrackModelStorageExtension) FTrackModelStorageExtension(const TArray<FOnCreateTrackModel>& InTrackModelCreators)"
  },
  {
    "label": "OnCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCreated(TSharedRef<FViewModel> InWeakOwner)"
  },
  {
    "label": "OnReinitialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnReinitialize()"
  },
  {
    "label": "CreateModelForTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTrackModel>)",
    "insertText": "CreateModelForTrack(UMovieSceneTrack* InTrack, TSharedPtr<FViewModel> DesiredParent = nullptr)"
  },
  {
    "label": "FindModelForTrack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTrackModel>)",
    "insertText": "FindModelForTrack(UMovieSceneTrack* InTrack)"
  },
  {
    "label": "OnTrackAdded()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnTrackAdded(UMovieSceneTrack*)"
  },
  {
    "label": "OnTrackRemoved()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTrackRemoved(UMovieSceneTrack*)"
  }
]