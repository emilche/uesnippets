[
  {
    "label": "MachineInstr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineInstr"
  },
  {
    "label": "MachineBasicBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineBasicBlock"
  },
  {
    "label": "MachineFunction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MachineFunction"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "LexicalScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LexicalScope"
  },
  {
    "label": "provides",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "provides"
  },
  {
    "label": "LexicalScopes",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LexicalScopes"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initialize(const MachineFunction &)"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "getMachineBasicBlocks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "getMachineBasicBlocks(const DILocation *DL,\n                             SmallPtrSetImpl<const MachineBasicBlock *> &MBBs)"
  },
  {
    "label": "dominates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "dominates(const DILocation *DL, MachineBasicBlock *MBB)"
  },
  {
    "label": "dump()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "dump()"
  },
  {
    "label": "extractLexicalScopes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "extractLexicalScopes(SmallVectorImpl<InsnRange> &MIRanges,\n                            DenseMap<const MachineInstr *, LexicalScope *> &M)"
  },
  {
    "label": "constructScopeNest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "constructScopeNest(LexicalScope *Scope)"
  },
  {
    "label": "assignInstructionRanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assignInstructionRanges(SmallVectorImpl<InsnRange> &MIRanges,\n                          DenseMap<const MachineInstr *, LexicalScope *> &M)"
  }
]