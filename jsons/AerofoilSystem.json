[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "CHAOSVEHICLESCORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CHAOSVEHICLESCORE_API"
  },
  {
    "label": "GetCenterOfLiftOffset()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetCenterOfLiftOffset()"
  },
  {
    "label": "GetForce()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetForce(FTransform& BodyTransform, const FVector& v, float Altitude, float DeltaTime)"
  },
  {
    "label": "CalcDynamicPressure()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalcDynamicPressure(float VelocitySqr, float InAltitude)"
  },
  {
    "label": "CalcCentreOfLift()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalcCentreOfLift()"
  },
  {
    "label": "CalcDragCoefficient()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalcDragCoefficient(float InAngleOfAttack, float InControlSurfaceAngle)"
  },
  {
    "label": "CalcLiftCoefficient()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalcLiftCoefficient(float InAngleOfAttack, float InControlSurfaceAngle)"
  },
  {
    "label": "CalcAngleOfAttackDegrees()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalcAngleOfAttackDegrees(const FVector& UpAxis, const FVector& InAirflowVector)"
  }
]