[
  {
    "label": "IDetailTreeNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailTreeNode"
  },
  {
    "label": "IPropertyRowGenerator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyRowGenerator"
  },
  {
    "label": "SGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNode"
  },
  {
    "label": "SGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphPin"
  },
  {
    "label": "SNodeTitle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNodeTitle"
  },
  {
    "label": "SPoseWatchOverlay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPoseWatchOverlay"
  },
  {
    "label": "SVerticalBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerticalBox"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FGraphInformationPopupInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphInformationPopupInfo"
  },
  {
    "label": "FNodeInfoContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeInfoContext"
  },
  {
    "label": "FOverlayWidgetInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlayWidgetInfo"
  },
  {
    "label": "TFunctionRef",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TFunctionRef"
  },
  {
    "label": "ANIMATIONBLUEPRINTEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMATIONBLUEPRINTEDITOR_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" Engine / PoseWatch . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" KismetNodes / SGraphNodeK2Base . h \" # include \" Math / Vector2D . h \" # include \" Misc / Attribute . h \" # include \" SNodePanel . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" class IDetailTreeNode ; class IPropertyRowGenerator ; class SGraphNode ; class SGraphPin ; class SNodeTitle ; class SPoseWatchOverlay ; class SVerticalBox ; class SWidget ; class UAnimBlueprint ; class UAnimGraphNode_Base ; class UEdGraphNode ; class UEdGraphPin ; struct FGeometry ; struct FGraphInformationPopupInfo ; struct FNodeInfoContext ; struct FOverlayWidgetInfo ; template<FuncType> class TFunctionRef ; class SAnimationGraphNode : public SGraphNodeK2Base { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimationGraphNode)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (const int32 TagAndFunctionsSlotReverseIndex = 1 ; void)",
    "insertText": "Construct(const FArguments& InArgs, UAnimGraphNode_Base* InNode)"
  },
  {
    "label": "ReconfigurePinWidgetsForPropertyBindings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReconfigurePinWidgetsForPropertyBindings(UAnimGraphNode_Base* InAnimGraphNode, TSharedRef<SGraphNode> InGraphNodeWidget, TFunctionRef<TSharedPtr<SGraphPin>(UEdGraphPin*)> InFindWidgetForPin)"
  },
  {
    "label": "CreateNodeFunctionsWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateNodeFunctionsWidget(UAnimGraphNode_Base* InAnimNode, TAttribute<bool> InUseLowDetail)"
  },
  {
    "label": "CreateNodeTagWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateNodeTagWidget(UAnimGraphNode_Base* InAnimNode, TAttribute<bool> InUseLowDetail)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "GetOverlayWidgets()",
    "kind": "Method",
    "detail": "Function (TArray<FOverlayWidgetInfo>)",
    "insertText": "GetOverlayWidgets(bool bSelected, const FVector2D& WidgetSize)"
  },
  {
    "label": "CreateTitleWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateTitleWidget(TSharedPtr<SNodeTitle> InNodeTitle)"
  },
  {
    "label": "GetNodeInfoPopups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeInfoPopups(FNodeInfoContext* Context, TArray<FGraphInformationPopupInfo>& Popups)"
  },
  {
    "label": "CreateBelowPinControls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBelowPinControls(TSharedPtr<SVerticalBox> MainBox)"
  },
  {
    "label": "CreateNodeContentArea()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateNodeContentArea()"
  },
  {
    "label": "IsHidingPinWidgets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHidingPinWidgets()"
  },
  {
    "label": "HandleNodeTitleChanged()",
    "kind": "Method",
    "detail": "Function (} private : void)",
    "insertText": "HandleNodeTitleChanged()"
  },
  {
    "label": "UseLowDetailNodeContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UseLowDetailNodeContent()"
  },
  {
    "label": "GetLowDetailDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetLowDetailDesiredSize()"
  },
  {
    "label": "HandlePoseWatchesChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandlePoseWatchesChanged(UAnimBlueprint* InAnimBlueprint, UEdGraphNode* InNode)"
  }
]