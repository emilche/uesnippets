[
  {
    "label": "WithFeatureOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WithFeatureOverride"
  },
  {
    "label": "INSTANTIATE_FEATURE_OVERRIDE_TEST_SUITE()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TEST_WITH_FEATURE_OVERRIDE_H_ # define BASE_TEST_WITH_FEATURE_OVERRIDE_H_ # include \" base / feature_list . h \" # include \" base / test / scoped_feature_list . h \" # include \" testing / gtest / include / gtest / gtest . h \" namespace base { namespace test { # define)",
    "insertText": "INSTANTIATE_FEATURE_OVERRIDE_TEST_SUITE(test_name) \\ INSTANTIATE_TEST_SUITE_P(All, test_name, testing::Values(false, true))"
  },
  {
    "label": "WithFeatureOverride()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "WithFeatureOverride(const base::Feature& feature)"
  },
  {
    "label": "WithFeatureOverride()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "WithFeatureOverride()"
  },
  {
    "label": "WithFeatureOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WithFeatureOverride(const WithFeatureOverride&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (WithFeatureOverride&)",
    "insertText": "operator(const WithFeatureOverride&)"
  },
  {
    "label": "IsParamFeatureEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsParamFeatureEnabled()"
  }
]