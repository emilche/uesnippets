[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "VIEWPORTINTERACTION_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIEWPORTINTERACTION_API"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UViewportDragOperationComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportDragOperationComponent"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "ABaseTransformGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABaseTransformGizmo"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UnrealWidgetFwd . h \" # include \" UObject / ObjectMacros . h \" # include \" Components / SceneComponent . h \" # include \" ViewportInteractionTypes . h \" # include \" VIGizmoHandle . generated . h \" class UMaterialInterface ; class UStaticMesh ; enum class EGizmoHandleTypes : uint8 ; class UActorComponent ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (float HoverAlpha ; } ;)",
    "insertText": "UCLASS(ABSTRACT)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: UGizmoHandleGroup()"
  },
  {
    "label": "MakeHandlePlacementForIndex()",
    "kind": "Method",
    "detail": "Function (FTransformGizmoHandlePlacement)",
    "insertText": "MakeHandlePlacementForIndex(const int32 HandleIndex)"
  },
  {
    "label": "MakeHandleIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "MakeHandleIndex(const FTransformGizmoHandlePlacement HandlePlacement)"
  },
  {
    "label": "MakeHandleName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "MakeHandleName(const FTransformGizmoHandlePlacement HandlePlacement)"
  },
  {
    "label": "GetAxisVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAxisVector(const int32 AxisIndex, const ETransformGizmoHandleDirection HandleDirection)"
  },
  {
    "label": "UpdateGizmoHandleGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGizmoHandleGroup(const FTransform& LocalToWorld, const FBox& LocalBounds, const FVector ViewLocation, const bool bAllHandlesVisible, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles, float AnimationAlpha, float GizmoScale, const float GizmoHoverScale, const float GizmoHoverAnimationDuration, bool& bOutIsHoveringOrDraggingThisHandleGroup)"
  },
  {
    "label": "UpdateVisibilityAndCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibilityAndCollision(const EGizmoHandleTypes GizmoType, const ECoordSystem GizmoCoordinateSpace, const bool bAllHandlesVisible, const bool bAllowRotationAndScaleHandles, UActorComponent* DraggingHandle)"
  },
  {
    "label": "GetDragOperationComponent()",
    "kind": "Method",
    "detail": "Function (class UViewportDragOperationComponent*)",
    "insertText": "GetDragOperationComponent()"
  },
  {
    "label": "GetDraggedHandleIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDraggedHandleIndex(class UStaticMeshComponent* DraggedMesh)"
  },
  {
    "label": "SetGizmoMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGizmoMaterial(UMaterialInterface* Material)"
  },
  {
    "label": "SetTranslucentGizmoMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTranslucentGizmoMaterial(UMaterialInterface* Material)"
  },
  {
    "label": "GetHandles()",
    "kind": "Method",
    "detail": "Function (TArray<FGizmoHandle>&)",
    "insertText": "GetHandles()"
  },
  {
    "label": "GetHandleType()",
    "kind": "Method",
    "detail": "Function (EGizmoHandleTypes)",
    "insertText": "GetHandleType()"
  },
  {
    "label": "SupportsWorldCoordinateSpace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsWorldCoordinateSpace()"
  },
  {
    "label": "GetShowOnUniversalGizmo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetShowOnUniversalGizmo()"
  },
  {
    "label": "SetOwningTransformGizmo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwningTransformGizmo(class ABaseTransformGizmo* TransformGizmo)"
  },
  {
    "label": "UpdateHandleColor()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "UpdateHandleColor(const int32 AxisIndex, FGizmoHandle& Handle, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles)"
  },
  {
    "label": "CreateMeshHandle()",
    "kind": "Method",
    "detail": "Function (class UGizmoHandleMeshComponent*)",
    "insertText": "CreateMeshHandle(class UStaticMesh* HandleMesh, const FString& ComponentName)"
  },
  {
    "label": "CreateAndAddMeshHandle()",
    "kind": "Method",
    "detail": "Function (class UGizmoHandleMeshComponent*)",
    "insertText": "CreateAndAddMeshHandle(class UStaticMesh* HandleMesh, const FString& ComponentName, const FTransformGizmoHandlePlacement& HandlePlacement)"
  },
  {
    "label": "AddMeshToHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeshToHandles(class UGizmoHandleMeshComponent* HandleMeshComponent, const FTransformGizmoHandlePlacement& HandlePlacement)"
  },
  {
    "label": "GetHandlePlacement()",
    "kind": "Method",
    "detail": "Function (FTransformGizmoHandlePlacement)",
    "insertText": "GetHandlePlacement(const int32 X, const int32 Y, const int32 Z)"
  },
  {
    "label": "UpdateHoverAnimation()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "UpdateHoverAnimation(class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles, const float GizmoHoverAnimationDuration, bool& bOutIsHoveringOrDraggingThisHandleGroup)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: void CreateHandles(UStaticMesh* HandleMesh, const FString& HandleComponentName)"
  },
  {
    "label": "UpdateHandlesRelativeTransformOnAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHandlesRelativeTransformOnAxis(const FTransform& HandleToCenter, const float AnimationAlpha, const float GizmoScale, const float GizmoHoverScale, const FVector& ViewLocation, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles)"
  }
]