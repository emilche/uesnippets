[
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "VIEWPORTINTERACTION_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VIEWPORTINTERACTION_API"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "VIEWPORTINTERACTION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VIEWPORTINTERACTION_API"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UViewportDragOperationComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportDragOperationComponent"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "ABaseTransformGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABaseTransformGizmo"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "UGizmoHandleMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGizmoHandleMeshComponent"
  },
  {
    "label": "ABaseTransformGizmo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ABaseTransformGizmo"
  },
  {
    "label": "UViewportDragOperationComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UViewportDragOperationComponent"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "VIEWPORTINTERACTION_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VIEWPORTINTERACTION_API"
  },
  {
    "label": "UActorComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorComponent"
  },
  {
    "label": "GetAxisVector()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAxisVector( const int32 AxisIndex, const ETransformGizmoHandleDirection HandleDirection )"
  },
  {
    "label": "UpdateGizmoHandleGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGizmoHandleGroup( const FTransform& LocalToWorld, const FBox& LocalBounds, const FVector ViewLocation, const bool bAllHandlesVisible, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles, \n\t\tfloat AnimationAlpha, float GizmoScale, const float GizmoHoverScale, const float GizmoHoverAnimationDuration, bool& bOutIsHoveringOrDraggingThisHandleGroup )"
  },
  {
    "label": "UpdateVisibilityAndCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateVisibilityAndCollision(const EGizmoHandleTypes GizmoType, const ECoordSystem GizmoCoordinateSpace, const bool bAllHandlesVisible, const bool bAllowRotationAndScaleHandles, UActorComponent* DraggingHandle)"
  },
  {
    "label": "GetDraggedHandleIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDraggedHandleIndex( class UStaticMeshComponent* DraggedMesh )"
  },
  {
    "label": "SetGizmoMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGizmoMaterial( UMaterialInterface* Material )"
  },
  {
    "label": "SetTranslucentGizmoMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTranslucentGizmoMaterial( UMaterialInterface* Material )"
  },
  {
    "label": "SetShowOnUniversalGizmo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShowOnUniversalGizmo( const bool bShowHandleUniversal )"
  },
  {
    "label": "SetOwningTransformGizmo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwningTransformGizmo(class ABaseTransformGizmo* TransformGizmo)"
  },
  {
    "label": "UpdateHandleColor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHandleColor( const int32 AxisIndex, FGizmoHandle& Handle, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles )"
  },
  {
    "label": "AddMeshToHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMeshToHandles( class UGizmoHandleMeshComponent* HandleMeshComponent, const FTransformGizmoHandlePlacement& HandlePlacement )"
  },
  {
    "label": "UpdateHoverAnimation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHoverAnimation( class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles, const float GizmoHoverAnimationDuration, bool& bOutIsHoveringOrDraggingThisHandleGroup )"
  },
  {
    "label": "CreateHandles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateHandles(UStaticMesh* HandleMesh, const FString& HandleComponentName)"
  },
  {
    "label": "UpdateHandlesRelativeTransformOnAxis()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateHandlesRelativeTransformOnAxis( const FTransform& HandleToCenter, const float AnimationAlpha, const float GizmoScale, const float GizmoHoverScale, \n\t\tconst FVector& ViewLocation, class UActorComponent* DraggingHandle, const TArray< UActorComponent* >& HoveringOverHandles )"
  }
]