[
  {
    "label": "FObjectKey",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectKey"
  },
  {
    "label": "TObjectKey",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TObjectKey"
  },
  {
    "label": "TObjectPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TObjectPtr"
  },
  {
    "label": "FNotImplemented",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNotImplemented"
  },
  {
    "label": "FComponentTypeDebugInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentTypeDebugInfo"
  },
  {
    "label": "THasAddReferencedObjectForComponent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "THasAddReferencedObjectForComponent"
  },
  {
    "label": "IComplexComponentOps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IComplexComponentOps"
  },
  {
    "label": "FComponentTypeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FComponentTypeInfo"
  },
  {
    "label": "TComplexComponentOpsBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TComplexComponentOpsBase"
  },
  {
    "label": "TComplexComponentOps",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TComplexComponentOps"
  },
  {
    "label": "TComplexComponentOpsCustomRefCollection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TComplexComponentOpsCustomRefCollection"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Templates / UniquePtr . h \" # include \" Templates / MemoryOps . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / UnrealType . h \" # include \" EntitySystem / MovieSceneComponentDebug . h \" # include \" EntitySystem / MovieSceneEntityIDs . h \" struct FObjectKey ; template<> class TObjectKey ; template<> struct TObjectPtr ; namespace UE { namespace MovieScene { struct FNotImplemented ; struct FComponentTypeDebugInfo ; using FComponentReferenceCollectionPtr =)",
    "insertText": "void(*)(FReferenceCollector&, void*, int32)"
  },
  {
    "label": "AddReferencedObjectForComponent()",
    "kind": "Method",
    "detail": "Function (FNotImplemented*)",
    "insertText": "AddReferencedObjectForComponent(...)"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (bool bTypeDependentFalse = ! std::is_same_v<T,T> ;)",
    "insertText": "static_assert(bTypeDependentFalse, \"Raw object pointers are no longer supported. Please use TObjectPtr<T> instead.\")"
  },
  {
    "label": "AddReferencedObjectForComponent()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "AddReferencedObjectForComponent(FReferenceCollector* ReferenceCollector, TObjectPtr<T>* Component)"
  },
  {
    "label": "AddReferencedObject()",
    "kind": "Method",
    "detail": "Function (ReferenceCollector ->)",
    "insertText": "AddReferencedObject(*Component)"
  },
  {
    "label": "AddReferencedObjectForComponent()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddReferencedObjectForComponent(FReferenceCollector* ReferenceCollector, FObjectKey* Component)"
  },
  {
    "label": "AddReferencedObjectForComponent()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "AddReferencedObjectForComponent(FReferenceCollector* ReferenceCollector, TObjectKey<T>* Component)"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (} template<T,U =)",
    "insertText": "decltype(T::StaticStruct())> void AddReferencedObjectForComponent(FReferenceCollector* ReferenceCollector, T* Component)"
  },
  {
    "label": "AddReferencedObject()",
    "kind": "Method",
    "detail": "Function (ReferenceCollector ->)",
    "insertText": "AddReferencedObject(It.Key()->GetObjectPtrPropertyValueRef(It.Value()))"
  },
  {
    "label": "decltype()",
    "kind": "Method",
    "detail": "Function (} } template<T> struct THasAddReferencedObjectForComponent { bool Value = ! std::is_same_v<FNotImplemented*,)",
    "insertText": "decltype(AddReferencedObjectForComponent((FReferenceCollector*)0, (T*)0))"
  },
  {
    "label": "IComplexComponentOps()",
    "kind": "Method",
    "detail": "Function (} ; struct IComplexComponentOps { ~)",
    "insertText": "IComplexComponentOps()"
  },
  {
    "label": "ConstructItems()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ConstructItems(void* Dest, int32 Num)"
  },
  {
    "label": "DestructItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestructItems(void* Dest, int32 Num)"
  },
  {
    "label": "CopyItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyItems(void* Dest, const void* Src, int32 Num)"
  },
  {
    "label": "RelocateConstructItems()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RelocateConstructItems(void* Dest, void* Src, int32 Num)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& ReferenceCollector, void* ComponentStart, int32 Num)"
  },
  {
    "label": "FComponentTypeInfo()",
    "kind": "Method",
    "detail": "Function (} ; struct FComponentTypeInfo {)",
    "insertText": "FComponentTypeInfo() : bIsZeroConstructType(0) , bIsTriviallyDestructable(0) , bIsTriviallyCopyAssignable(0) , bIsPreserved(0) , bIsCopiedToOutput(0) , bIsMigratedToOutput(0) , bHasReferencedObjects(0)"
  },
  {
    "label": "IsTag()",
    "kind": "Method",
    "detail": "Function (} TUniquePtr<IComplexComponentOps> ComplexComponentOps ; # if UE_MOVIESCENE_ENTITY_DEBUG TUniquePtr<FComponentTypeDebugInfo> DebugInfo ; # endif uint8 Sizeof ; uint8 Alignment ; uint8 bIsZeroConstructType : 1 ; uint8 bIsTriviallyDestructable : 1 ; uint8 bIsTriviallyCopyAssignable : 1 ; uint8 bIsPreserved : 1 ; uint8 bIsCopiedToOutput : 1 ; uint8 bIsMigratedToOutput : 1 ; uint8 bHasReferencedObjects : 1 ; bool)",
    "insertText": "IsTag()"
  },
  {
    "label": "Memset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memset(Components, 0, Sizeof * Num)"
  },
  {
    "label": "checkSlow()",
    "kind": "Method",
    "detail": "Function (} else {)",
    "insertText": "checkSlow(ComplexComponentOps.IsValid())"
  },
  {
    "label": "ConstructItems()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps ->)",
    "insertText": "ConstructItems(Components, Num)"
  },
  {
    "label": "DestructItems()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "DestructItems(void* Components, int32 Num)"
  },
  {
    "label": "DestructItems()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps ->)",
    "insertText": "DestructItems(Components, Num)"
  },
  {
    "label": "CopyItems()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "CopyItems(void* Dest, const void* Source, int32 Num)"
  },
  {
    "label": "Memcpy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memcpy(Dest, Source, Sizeof * Num)"
  },
  {
    "label": "CopyItems()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps ->)",
    "insertText": "CopyItems(Dest, Source, Num)"
  },
  {
    "label": "RelocateConstructItems()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "RelocateConstructItems(void* Dest, void* Source, int32 Num)"
  },
  {
    "label": "Memmove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Memmove(Dest, Source, Sizeof * Num)"
  },
  {
    "label": "RelocateConstructItems()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps ->)",
    "insertText": "RelocateConstructItems(Dest, Source, Num)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps ->)",
    "insertText": "AddReferencedObjects(ReferenceCollector, ComponentStart, Num)"
  },
  {
    "label": "MakeComplexComponentOps()",
    "kind": "Method",
    "detail": "Function (} } template<T> void)",
    "insertText": "MakeComplexComponentOps()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps = MakeUnique<TComplexComponentOps<)",
    "insertText": "T()"
  },
  {
    "label": "MakeComplexComponentOpsNoAddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "MakeComplexComponentOpsNoAddReferencedObjects()"
  },
  {
    "label": "MakeComplexComponentOps()",
    "kind": "Method",
    "detail": "Function (} template<T> void)",
    "insertText": "MakeComplexComponentOps(FComponentReferenceCollectionPtr RefCollectionPtr)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (ComplexComponentOps = MakeUnique<TComplexComponentOpsCustomRefCollection<)",
    "insertText": "T(RefCollectionPtr)"
  },
  {
    "label": "ConstructItems()",
    "kind": "Method",
    "detail": "Function (} private : template<T> struct TComplexComponentOpsBase : IComplexComponentOps { void)",
    "insertText": "ConstructItems(void* Components, int32 Num)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* TypedComponents = static_cast<)",
    "insertText": "T(Components)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (::DefaultConstructItems<)",
    "insertText": "T(TypedComponents, Num)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* TypedDst = static_cast<)",
    "insertText": "T(Dest)"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (const T* TypedSrc = static_cast<const)",
    "insertText": "T(Source)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "new(TypedDst) T(MoveTemp(*TypedSrc))"
  },
  {
    "label": "RelocateItemsElementTypeTypedef()",
    "kind": "Method",
    "detail": "Function (TypedSrc -> RelocateItemsElementTypeTypedef::~)",
    "insertText": "RelocateItemsElementTypeTypedef()"
  },
  {
    "label": "T()",
    "kind": "Method",
    "detail": "Function (T* ComponentData = static_cast<)",
    "insertText": "T(ComponentStart)"
  },
  {
    "label": "AddReferencedObjectForComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjectForComponent(&ReferenceCollector, ComponentData)"
  },
  {
    "label": "TComplexComponentOpsCustomRefCollection()",
    "kind": "Method",
    "detail": "Function (+ + ComponentData ; } } } ; template<T> struct TComplexComponentOpsCustomRefCollection : TComplexComponentOpsBase<T> { FComponentReferenceCollectionPtr RefCollectionPtr ;)",
    "insertText": "TComplexComponentOpsCustomRefCollection(FComponentReferenceCollectionPtr InRefCollectionPtr) : RefCollectionPtr(InRefCollectionPtr)"
  }
]