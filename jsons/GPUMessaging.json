[
  {
    "label": "FRDGBufferUAV",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBufferUAV"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSystem"
  },
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScope"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FReader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReader"
  },
  {
    "label": "persistent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "persistent"
  },
  {
    "label": "FHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FHandler"
  },
  {
    "label": "TLambdaHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TLambdaHandler"
  },
  {
    "label": "GPUMessageScope_()",
    "kind": "Method",
    "detail": "Function (GPUMessage::FScope)",
    "insertText": "GPUMessageScope_(GraphBuilder)"
  },
  {
    "label": "FScope()",
    "kind": "Method",
    "detail": "Function (RENDERCORE_API)",
    "insertText": "FScope(FRDGBuilder& GraphBuilder)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Payload()",
    "kind": "Method",
    "detail": "Function (TConstArrayView<uint32>)",
    "insertText": "Payload(PayloadData, PayloadSize)"
  },
  {
    "label": "RegisterHandler()",
    "kind": "Method",
    "detail": "Function (FSocket)",
    "insertText": "RegisterHandler(const TSharedPtr<FHandler>& Handler)"
  },
  {
    "label": "GetShaderParameters()",
    "kind": "Method",
    "detail": "Function (FParameters)",
    "insertText": "GetShaderParameters(FRDGBuilder& GraphBuilder)"
  }
]