[
  {
    "label": "IClassDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IClassDescriptor"
  },
  {
    "label": "GetField()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" FieldNotificationId . h \" namespace UE::FieldNotification { struct IClassDescriptor { enum { Max_IndexOf_ = 0,} ; FFieldId)",
    "insertText": "GetField(const UClass* Class, FName InFieldName)"
  },
  {
    "label": "ForEachField()",
    "kind": "Method",
    "detail": "Function (FFieldId FoundId ;)",
    "insertText": "ForEachField(Class, [&FoundId, InFieldName](const FFieldId Other) { if (Other.GetName() == InFieldName) { FoundId = Other; return false; } return true; })"
  },
  {
    "label": "IClassDescriptor()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "IClassDescriptor()"
  }
]