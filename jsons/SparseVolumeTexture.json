[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRequestOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequestOwner"
  },
  {
    "label": "FTextureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTextureData"
  },
  {
    "label": "FStreamingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingManager"
  },
  {
    "label": "FHeader",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FHeader"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "of"
  },
  {
    "label": "FPageTopology",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPageTopology"
  },
  {
    "label": "FMip",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMip"
  },
  {
    "label": "FMipLevelStreamingInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMipLevelStreamingInfo"
  },
  {
    "label": "FTileInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileInfo"
  },
  {
    "label": "FTileStreamingMetaData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTileStreamingMetaData"
  },
  {
    "label": "EResourceFlag",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EResourceFlag"
  },
  {
    "label": "FResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResources"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDerivedTextureData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedTextureData"
  },
  {
    "label": "FTextureRenderResources",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureRenderResources"
  },
  {
    "label": "FStreamingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStreamingManager"
  },
  {
    "label": "ESparseVolumeTextureShaderUniform",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ESparseVolumeTextureShaderUniform"
  },
  {
    "label": "USparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTexture"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "USparseVolumeTextureFrame",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USparseVolumeTextureFrame"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UE"
  },
  {
    "label": "UStreamableSparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStreamableSparseVolumeTexture"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UStreamableSparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStreamableSparseVolumeTexture"
  },
  {
    "label": "EPixelFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPixelFormat"
  },
  {
    "label": "EPixelFormat",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EPixelFormat"
  },
  {
    "label": "TextureAddress",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureAddress"
  },
  {
    "label": "TextureAddress",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureAddress"
  },
  {
    "label": "TextureAddress",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TextureAddress"
  },
  {
    "label": "UAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportData"
  },
  {
    "label": "UAssetUserData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetUserData"
  },
  {
    "label": "EInitState",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EInitState"
  },
  {
    "label": "UStaticSparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticSparseVolumeTexture"
  },
  {
    "label": "UAnimatedSparseVolumeTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimatedSparseVolumeTexture"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "UAnimatedSparseVolumeTextureController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimatedSparseVolumeTextureController"
  },
  {
    "label": "FHeader()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FHeader(const FIntVector3& AABBMin, const FIntVector3& AABBMax, EPixelFormat FormatA, EPixelFormat FormatB, const FVector4f& FallbackValueA, const FVector4f& FallbackValueB)"
  },
  {
    "label": "UpdatePageTableFromGlobalNumMipLevels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdatePageTableFromGlobalNumMipLevels(int32 NumMipLevelsGlobal)"
  },
  {
    "label": "Validate()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Validate(bool bPrintToLog)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar, UObject* Owner, bool bCooked)"
  },
  {
    "label": "DropBulkData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DropBulkData()"
  },
  {
    "label": "SetHasBuildFromDDCError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHasBuildFromDDCError(bool bHasError)"
  },
  {
    "label": "RebuildBulkDataFromCacheAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RebuildBulkDataFromCacheAsync(const UObject* Owner, bool& bFailed)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Build(USparseVolumeTextureFrame* Owner, UE::Serialization::FEditorBulkData& SourceData)"
  },
  {
    "label": "Cache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cache(USparseVolumeTextureFrame* Owner, UE::Serialization::FEditorBulkData& SourceData, bool bLocalCachingOnly)"
  },
  {
    "label": "SetDefault()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDefault(EPixelFormat FormatA, EPixelFormat FormatB, const FVector4f& FallbackValueA, const FVector4f& FallbackValueB)"
  },
  {
    "label": "BeginRebuildBulkDataFromCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginRebuildBulkDataFromCache(const UObject* Owner)"
  },
  {
    "label": "EndRebuildBulkDataFromCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndRebuildBulkDataFromCache()"
  },
  {
    "label": "CompressTiles()",
    "kind": "Method",
    "detail": "Function (FTileStreamingMetaData)",
    "insertText": "CompressTiles(const FPageTopology& Topology, const struct FDerivedTextureData& DerivedTextureData, TArray<uint8>& OutRootBulkData, TArray64<uint8>& OutStreamingBulkData)"
  },
  {
    "label": "SetGlobalVolumeResolution_GameThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetGlobalVolumeResolution_GameThread(const FIntVector3& GlobalVolumeResolution)"
  },
  {
    "label": "USparseVolumeTexture()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "USparseVolumeTexture()"
  },
  {
    "label": "FIntVector()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FIntVector()"
  },
  {
    "label": "FVector4f()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector4f()"
  },
  {
    "label": "FVector4()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FVector4(ForceInitToZero)"
  },
  {
    "label": "GetUniformParameterType()",
    "kind": "Method",
    "detail": "Function (UE::Shader::EValueType)",
    "insertText": "GetUniformParameterType(int32 Index)"
  },
  {
    "label": "NotifyMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyMaterials(const ENotifyMaterialsEffectOnShaders EffectOnShaders = ENotifyMaterialsEffectOnShaders::Default)"
  },
  {
    "label": "USparseVolumeTextureFrame()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "USparseVolumeTextureFrame()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(USparseVolumeTexture* InOwner, int32 InFrameIndex, const FTransform& InFrameTransform, UE::SVT::FTextureData& UncookedFrame)"
  },
  {
    "label": "CreateTextureRenderResources()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateTextureRenderResources()"
  },
  {
    "label": "Cache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cache(bool bSkipDDCAndSetResourcesToDefault)"
  },
  {
    "label": "BeginInitialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BeginInitialize(int32 NumExpectedFrames)"
  },
  {
    "label": "AppendFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AppendFrame(UE::SVT::FTextureData& UncookedFrame, const FTransform& FrameTransform)"
  },
  {
    "label": "EndInitialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EndInitialize()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Initialize(const TArrayView<UE::SVT::FTextureData>& UncookedData, const TArrayView<FTransform>& FrameTransforms)"
  },
  {
    "label": "OnAssetsAddExtraObjectsToDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetsAddExtraObjectsToDelete(TArray<UObject*>& ObjectsToDelete)"
  },
  {
    "label": "OnAddExtraObjectsToDelete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAddExtraObjectsToDelete(const TArray<UObject*>& InObjectsToDelete, TSet<UObject*>& OutSecondaryObjects)"
  },
  {
    "label": "RecacheFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecacheFrames()"
  },
  {
    "label": "ShouldRegisterDelegates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRegisterDelegates()"
  },
  {
    "label": "RegisterEditorDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterEditorDelegates()"
  },
  {
    "label": "UnregisterEditorDelegates()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterEditorDelegates()"
  },
  {
    "label": "UStaticSparseVolumeTexture()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UStaticSparseVolumeTexture()"
  },
  {
    "label": "UAnimatedSparseVolumeTexture()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UAnimatedSparseVolumeTexture()"
  },
  {
    "label": "UAnimatedSparseVolumeTextureController()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "UAnimatedSparseVolumeTextureController()"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play()"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(float DeltaTime)"
  },
  {
    "label": "GetFractionalFrameIndex()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetFractionalFrameIndex()"
  },
  {
    "label": "GetCurrentFramesForInterpolation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetCurrentFramesForInterpolation(USparseVolumeTextureFrame*& Frame0, USparseVolumeTextureFrame*& Frame1, float& LerpAlpha)"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDuration()"
  }
]