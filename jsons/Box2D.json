[
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TBox2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TBox2"
  },
  {
    "label": "TCanBulkSerialize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCanBulkSerialize"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "TCanBulkSerialize",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCanBulkSerialize"
  },
  {
    "label": "TIsPODType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsPODType"
  },
  {
    "label": "TIsUECoreVariant",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TIsUECoreVariant"
  },
  {
    "label": "NewBox()",
    "kind": "Method",
    "detail": "Function (TBox2<T>)",
    "insertText": "NewBox(Origin - Extent, Origin + Extent)"
  },
  {
    "label": "SerializeFromMismatchedTag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SerializeFromMismatchedTag(FName StructTag, FArchive& Ar)"
  },
  {
    "label": "EmptyBox()",
    "kind": "Method",
    "detail": "Function (TBox2<T>)",
    "insertText": "EmptyBox(ForceInit)"
  },
  {
    "label": "UE_DECLARE_LWC_TYPE()",
    "kind": "Method",
    "detail": "Function (UE)",
    "insertText": "UE_DECLARE_LWC_TYPE(Box2,, FBox2D)"
  },
  {
    "label": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG(Ar, Box2D, Box2f, Box2d)"
  },
  {
    "label": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_SERIALIZE_VARIANT_FROM_MISMATCHED_TAG(Ar, Box2D, Box2d, Box2f)"
  }
]