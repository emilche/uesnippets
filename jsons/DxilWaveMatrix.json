[
  {
    "label": "Value",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Value"
  },
  {
    "label": "Constant",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Constant"
  },
  {
    "label": "Type",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Type"
  },
  {
    "label": "StructType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StructType"
  },
  {
    "label": "DxilWaveMatrixProperties",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DxilWaveMatrixProperties"
  },
  {
    "label": "DxilWaveMatrixProperties()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DxilConstants . h \" namespace llvm { class Value ; class Constant ; class Type ; class StructType ; } namespace hlsl { struct DxilWaveMatrixProperties { DXIL::WaveMatrixKind kind ; DXIL::ComponentType compType ; unsigned dimM,dimN ;)",
    "insertText": "DxilWaveMatrixProperties() : kind(DXIL::WaveMatrixKind::NumKinds), compType(DXIL::ComponentType::Invalid), dimM(0), dimN(0)"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isValid()"
  },
  {
    "label": "LoadInfoFromConstant()",
    "kind": "Method",
    "detail": "Function (} } ; namespace wavemat_helper { DxilWaveMatrixProperties)",
    "insertText": "LoadInfoFromConstant(llvm::Constant *C)"
  },
  {
    "label": "GetInfoConstantFromWaveMatPtr()",
    "kind": "Method",
    "detail": "Function (llvm::Constant*)",
    "insertText": "GetInfoConstantFromWaveMatPtr(llvm::Value *waveMatPtr)"
  },
  {
    "label": "GetInfoFromWaveMatPtr()",
    "kind": "Method",
    "detail": "Function (DxilWaveMatrixProperties)",
    "insertText": "GetInfoFromWaveMatPtr(llvm::Value *waveMatPtr)"
  },
  {
    "label": "GetAsConstant()",
    "kind": "Method",
    "detail": "Function (llvm::Constant*)",
    "insertText": "GetAsConstant(const DxilWaveMatrixProperties &info, llvm::StructType *infoTy)"
  }
]