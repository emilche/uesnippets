[
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "FNamePermissionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNamePermissionList"
  },
  {
    "label": "FMultiBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMultiBox"
  },
  {
    "label": "FProxyTabmanager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProxyTabmanager"
  },
  {
    "label": "SDockingArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingArea"
  },
  {
    "label": "SDockingTabStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabStack"
  },
  {
    "label": "FLayoutExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutExtender"
  },
  {
    "label": "FTabMatcher",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabMatcher"
  },
  {
    "label": "FSidebarTabLists",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSidebarTabLists"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTabId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabId"
  },
  {
    "label": "FSpawnTabArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnTabArgs"
  },
  {
    "label": "FMinorTabConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMinorTabConfig"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "to",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "to"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTabSpawnerEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTabSpawnerEntry"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FGlobalTabmanager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalTabmanager"
  },
  {
    "label": "FStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStack"
  },
  {
    "label": "FSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSplitter"
  },
  {
    "label": "FArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArea"
  },
  {
    "label": "FLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayout"
  },
  {
    "label": "FLayoutNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutNode"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FTab",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTab"
  },
  {
    "label": "FStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStack"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayout"
  },
  {
    "label": "SDockingTabStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabStack"
  },
  {
    "label": "FSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSplitter"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FLayoutExtender",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayoutExtender"
  },
  {
    "label": "FArea",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArea"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "which",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "which"
  },
  {
    "label": "EWindowPlacement",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EWindowPlacement"
  },
  {
    "label": "FLayout",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLayout"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FPrivateApi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrivateApi"
  },
  {
    "label": "FPrivateApi",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrivateApi"
  },
  {
    "label": "FSearchPreference",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSearchPreference"
  },
  {
    "label": "FRequireClosedTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRequireClosedTab"
  },
  {
    "label": "FLiveTabSearch",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLiveTabSearch"
  },
  {
    "label": "FLastMajorOrNomadTab",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLastMajorOrNomadTab"
  },
  {
    "label": "ESearchPreference",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ESearchPreference"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FPopulateTabSpawnerMenu_Args",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPopulateTabSpawnerMenu_Args"
  },
  {
    "label": "SDockingNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingNode"
  },
  {
    "label": "SDockingNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingNode"
  },
  {
    "label": "SDockingNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingNode"
  },
  {
    "label": "SDockingSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingSplitter"
  },
  {
    "label": "SDockingSplitter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingSplitter"
  },
  {
    "label": "SDockingTabStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabStack"
  },
  {
    "label": "SDockingTabStack",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SDockingTabStack"
  },
  {
    "label": "FProxyTabmanager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProxyTabmanager"
  },
  {
    "label": "FGlobalTabmanager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalTabmanager"
  },
  {
    "label": "FSubTabManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSubTabManager"
  },
  {
    "label": "FindByTab",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FindByTab"
  },
  {
    "label": "FindByManager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FindByManager"
  },
  {
    "label": "FProxyTabmanager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProxyTabmanager"
  },
  {
    "label": "EnumHasAnyFlags()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "EnumHasAnyFlags(Flags, ETabIdFlags::SaveLayout)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "AsStack()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FStack>)",
    "insertText": "AsStack()"
  },
  {
    "label": "AsSplitter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FSplitter>)",
    "insertText": "AsSplitter()"
  },
  {
    "label": "AsArea()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FArea>)",
    "insertText": "AsArea()"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "SharedThis()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "SharedThis(this)"
  },
  {
    "label": "NewFromString()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager::FLayout>)",
    "insertText": "NewFromString( const FString& LayoutAsText )"
  },
  {
    "label": "NewFromJson()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager::FLayout>)",
    "insertText": "NewFromJson( const TSharedPtr<FJsonObject>& LayoutAsJson )"
  },
  {
    "label": "ProcessExtensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessExtensions(const FLayoutExtender& Extender)"
  },
  {
    "label": "PersistToString_Helper()",
    "kind": "Method",
    "detail": "Function (FJsonObject>)",
    "insertText": "PersistToString_Helper(const TSharedRef<FLayoutNode>& NodeToPersist)"
  },
  {
    "label": "NewFromString_Helper()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FLayoutNode>)",
    "insertText": "NewFromString_Helper( TSharedPtr<FJsonObject> JsonObject )"
  },
  {
    "label": "OnDockAreaCreated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDockAreaCreated( const TSharedRef<SDockingArea>& NewlyCreatedDockArea )"
  },
  {
    "label": "OnTabRelocated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabRelocated( const TSharedRef<SDockTab>& RelocatedTab, const TSharedPtr<SWindow>& NewOwnerWindow )"
  },
  {
    "label": "OnTabOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabOpening( const TSharedRef<SDockTab>& TabBeingOpened )"
  },
  {
    "label": "OnTabClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabClosing( const TSharedRef<SDockTab>& TabBeingClosed )"
  },
  {
    "label": "OnDockAreaClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDockAreaClosing( const TSharedRef<SDockingArea>& DockAreaThatIsClosing )"
  },
  {
    "label": "OnTabManagerClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabManagerClosing()"
  },
  {
    "label": "OnTabForegrounded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabForegrounded( const TSharedPtr<SDockTab>& NewForegroundTab, const TSharedPtr<SDockTab>& BackgroundedTab )"
  },
  {
    "label": "ShowWindows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowWindows()"
  },
  {
    "label": "HideWindows()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideWindows()"
  },
  {
    "label": "SetCanDoDeferredLayoutSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCanDoDeferredLayoutSave(bool bInCanDoDeferredLayoutSave)"
  },
  {
    "label": "FLiveTabSearch()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "FLiveTabSearch(FName InSearchForTabId = NAME_None)"
  },
  {
    "label": "FLastMajorOrNomadTab()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "FLastMajorOrNomadTab(FName InFallbackTabId)"
  },
  {
    "label": "SetOnPersistLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOnPersistLayout( const FOnPersistLayout& InHandler )"
  },
  {
    "label": "CloseAllAreas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseAllAreas()"
  },
  {
    "label": "SavePersistentLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePersistentLayout()"
  },
  {
    "label": "RequestSavePersistentLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestSavePersistentLayout()"
  },
  {
    "label": "ClearPendingLayoutSave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearPendingLayoutSave()"
  },
  {
    "label": "UnregisterTabSpawner()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterTabSpawner( const FName TabId )"
  },
  {
    "label": "UnregisterAllTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterAllTabSpawners()"
  },
  {
    "label": "RestoreFrom()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "RestoreFrom(const TSharedRef<FLayout>& Layout, const TSharedPtr<SWindow>& ParentWindow, const bool bEmbedTitleAreaContent = false,\n\t\t\tconst EOutputCanBeNullptr RestoreAreaOutputCanBeNullptr = EOutputCanBeNullptr::Never)"
  },
  {
    "label": "PopulateLocalTabSpawnerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateLocalTabSpawnerMenu( FMenuBuilder& PopulateMe )"
  },
  {
    "label": "PopulateTabSpawnerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateTabSpawnerMenu(FMenuBuilder& PopulateMe, TSharedRef<FWorkspaceItem> MenuStructure)"
  },
  {
    "label": "PopulateTabSpawnerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateTabSpawnerMenu( FMenuBuilder& PopulateMe, TSharedRef<FWorkspaceItem> MenuStructure, bool bIncludeOrphanedMenus)"
  },
  {
    "label": "PopulateTabSpawnerMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateTabSpawnerMenu( FMenuBuilder &PopulateMe, const FName& TabType )"
  },
  {
    "label": "DrawAttention()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawAttention( const TSharedRef<SDockTab>& TabToHighlight )"
  },
  {
    "label": "InsertNewDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertNewDocumentTab( FName PlaceholderId, FName NewTabId, const FSearchPreference& SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab )"
  },
  {
    "label": "InsertNewDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertNewDocumentTab( FName PlaceholderId, const FSearchPreference& SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab )"
  },
  {
    "label": "InsertNewDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertNewDocumentTab(FName PlaceholderId, ESearchPreference::Type SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab)"
  },
  {
    "label": "RestoreDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreDocumentTab(FName PlaceholderId, ESearchPreference::Type SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab)"
  },
  {
    "label": "TryInvokeTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "TryInvokeTab(const FTabId& TabId, bool bInvokeAsInactive = false)"
  },
  {
    "label": "SetAllowWindowMenuBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowWindowMenuBar(bool bInAllowWindowMenuBar)"
  },
  {
    "label": "SetMenuMultiBox()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMenuMultiBox(const TSharedPtr<FMultiBox> NewMenuMutliBox, const TSharedPtr<SWidget> MenuWidget)"
  },
  {
    "label": "UpdateMainMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMainMenu(TSharedPtr<SDockTab> ForTab, const bool bForce)"
  },
  {
    "label": "SetMainTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMainTab(const TSharedRef<const SDockTab>& InTab)"
  },
  {
    "label": "SetMainTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMainTab(const FTabId& InMainTabID)"
  },
  {
    "label": "IsReadOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadOnly()"
  },
  {
    "label": "SetReadOnly()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReadOnly(bool bInReadOnly)"
  },
  {
    "label": "ToggleSidebarOpenTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleSidebarOpenTabs()"
  },
  {
    "label": "AddLocalWorkspaceMenuCategory()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FWorkspaceItem>)",
    "insertText": "AddLocalWorkspaceMenuCategory( const FText& CategoryTitle )"
  },
  {
    "label": "AddLocalWorkspaceMenuItem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLocalWorkspaceMenuItem( const TSharedRef<FWorkspaceItem>& CategoryItem )"
  },
  {
    "label": "ClearLocalWorkspaceMenuCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearLocalWorkspaceMenuCategories()"
  },
  {
    "label": "GetUIActionForTabSpawnerMenuEntry()",
    "kind": "Method",
    "detail": "Function (FUIAction)",
    "insertText": "GetUIActionForTabSpawnerMenuEntry(TSharedPtr<FTabSpawnerEntry> InTabMenuEntry)"
  },
  {
    "label": "FindTabSpawnerFor()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabSpawnerEntry>)",
    "insertText": "FindTabSpawnerFor(FName TabId)"
  },
  {
    "label": "InvokeTabForMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InvokeTabForMenu( FName TabId )"
  },
  {
    "label": "InsertDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertDocumentTab( FName PlaceholderId, const FSearchPreference& SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab, bool bPlaySpawnAnim )"
  },
  {
    "label": "InsertDocumentTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertDocumentTab( FName PlaceholderId, FName NewTabId, const FSearchPreference& SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab, bool bPlaySpawnAnim )"
  },
  {
    "label": "OpenUnmanagedTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenUnmanagedTab(FName PlaceholderId, const FSearchPreference& SearchPreference, const TSharedRef<SDockTab>& UnmanagedTab)"
  },
  {
    "label": "PopulateTabSpawnerMenu_Helper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateTabSpawnerMenu_Helper( FMenuBuilder& PopulateMe, struct FPopulateTabSpawnerMenu_Args Args )"
  },
  {
    "label": "MakeSpawnerMenuEntry()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeSpawnerMenuEntry( FMenuBuilder &PopulateMe, const TSharedPtr<FTabSpawnerEntry> &InSpawnerNode )"
  },
  {
    "label": "InvokeTab_Internal()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "InvokeTab_Internal(const FTabId& TabId, bool bInvokeAsInactive = false, bool bForceOpenWindowIfNeeded = false)"
  },
  {
    "label": "FindPotentiallyClosedTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockingTabStack>)",
    "insertText": "FindPotentiallyClosedTab( const FTabId& ClosedTabId )"
  },
  {
    "label": "FTabManager()",
    "kind": "Method",
    "detail": "Function (SLATE_API)",
    "insertText": "FTabManager( const TSharedPtr<SDockTab>& InOwnerTab, const TSharedRef<FTabManager::FTabSpawner> & InNomadTabSpawner )"
  },
  {
    "label": "RestoreArea()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockingArea>)",
    "insertText": "RestoreArea(\n\t\tconst TSharedRef<FArea>& AreaToRestore, const TSharedPtr<SWindow>& InParentWindow, const bool bEmbedTitleAreaContent = false,\n\t\tconst EOutputCanBeNullptr OutputCanBeNullptr = EOutputCanBeNullptr::Never, bool bForceOpenWindowIfNeeded = false)"
  },
  {
    "label": "RestoreArea_Helper()",
    "kind": "Method",
    "detail": "Function (SDockingNode>)",
    "insertText": "RestoreArea_Helper(const TSharedRef<FLayoutNode>& LayoutNode, const TSharedPtr<SWindow>& ParentWindow, const bool bEmbedTitleAreaContent,\n\t\tFSidebarTabLists& OutSidebarTabs, const EOutputCanBeNullptr OutputCanBeNullptr = EOutputCanBeNullptr::Never, bool bForceOpenWindowIfNeeded = false)"
  },
  {
    "label": "CanRestoreSplitterContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRestoreSplitterContent(TArray<TSharedRef<class SDockingNode>>& DockingNodes, const TSharedRef<FSplitter>& SplitterNode, const TSharedPtr<SWindow>& ParentWindow, FSidebarTabLists& OutSidebarTabs, const EOutputCanBeNullptr OutputCanBeNullptr)"
  },
  {
    "label": "RestoreSplitterContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreSplitterContent(const TArray<TSharedRef<class SDockingNode>>& DockingNodes, const TSharedRef<class SDockingSplitter>& SplitterWidget)"
  },
  {
    "label": "RestoreSplitterContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestoreSplitterContent(const TSharedRef<FSplitter>& SplitterNode, const TSharedRef<class SDockingSplitter>& SplitterWidget, const TSharedPtr<SWindow>& ParentWindow, FSidebarTabLists& OutSidebarTabs)"
  },
  {
    "label": "SpawnTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "SpawnTab(const FTabId& TabId, const TSharedPtr<SWindow>& ParentWindow, const bool bCanOutputBeNullptr = false)"
  },
  {
    "label": "FindTabInLiveArea()",
    "kind": "Method",
    "detail": "Function (SDockingTabStack>)",
    "insertText": "FindTabInLiveArea( const FTabMatcher& TabMatcher, const TSharedRef<SDockingArea>& InArea )"
  },
  {
    "label": "OnTabForegrounded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabForegrounded( const TSharedPtr<SDockTab>& NewForegroundTab, const TSharedPtr<SDockTab>& BackgroundedTab )"
  },
  {
    "label": "OnTabRelocated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabRelocated( const TSharedRef<SDockTab>& RelocatedTab, const TSharedPtr<SWindow>& NewOwnerWindow )"
  },
  {
    "label": "OnTabOpening()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabOpening( const TSharedRef<SDockTab>& TabBeingOpened )"
  },
  {
    "label": "OnTabClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabClosing( const TSharedRef<SDockTab>& TabBeingClosed )"
  },
  {
    "label": "OnTabManagerClosing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabManagerClosing()"
  },
  {
    "label": "GetAllStacks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllStacks( const TSharedRef<SDockingArea>& InDockArea, TArray< TSharedRef<SDockingTabStack> >& OutTabStacks )"
  },
  {
    "label": "FindTabUnderNode()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager::FStack>)",
    "insertText": "FindTabUnderNode( const FTabMatcher& Matcher, const TSharedRef<FTabManager::FLayoutNode>& NodeToSearchUnder )"
  },
  {
    "label": "FindTabInCollapsedAreas()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "FindTabInCollapsedAreas( const FTabMatcher& Matcher )"
  },
  {
    "label": "RemoveTabFromCollapsedAreas()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveTabFromCollapsedAreas( const FTabMatcher& Matcher )"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStats()"
  },
  {
    "label": "AttemptToOpenTab()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockingTabStack>)",
    "insertText": "AttemptToOpenTab( const FTabId& ClosedTabId, bool bForceOpenWindowIfNeeded = false )"
  },
  {
    "label": "GetAreaForTabId()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FArea>)",
    "insertText": "GetAreaForTabId(const FTabId& TabId)"
  },
  {
    "label": "GetDefaultTabWindowSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetDefaultTabWindowSize(const FTabId& TabId)"
  },
  {
    "label": "OnActiveTabChanged_Subscribe()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "OnActiveTabChanged_Subscribe( const FOnActiveTabChanged::FDelegate& InDelegate )"
  },
  {
    "label": "OnActiveTabChanged_Unsubscribe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActiveTabChanged_Unsubscribe( FDelegateHandle Handle )"
  },
  {
    "label": "OnTabForegrounded_Subscribe()",
    "kind": "Method",
    "detail": "Function (FDelegateHandle)",
    "insertText": "OnTabForegrounded_Subscribe(const FOnActiveTabChanged::FDelegate& InDelegate)"
  },
  {
    "label": "OnTabForegrounded_Unsubscribe()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTabForegrounded_Unsubscribe(FDelegateHandle Handle)"
  },
  {
    "label": "CanSetAsActiveTab()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSetAsActiveTab(const TSharedPtr<SDockTab>& Tab)"
  },
  {
    "label": "SetActiveTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveTab( const TSharedPtr<SDockTab>& NewActiveTab )"
  },
  {
    "label": "UnregisterNomadTabSpawner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterNomadTabSpawner( const FName TabId )"
  },
  {
    "label": "SetApplicationTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetApplicationTitle( const FText& AppTitle )"
  },
  {
    "label": "GetMajorTabForTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SDockTab>)",
    "insertText": "GetMajorTabForTabManager(const TSharedRef<FTabManager>& ChildManager)"
  },
  {
    "label": "DrawAttentionToTabManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawAttentionToTabManager( const TSharedRef<FTabManager>& ChildManager )"
  },
  {
    "label": "NewTabManager()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FTabManager>)",
    "insertText": "NewTabManager( const TSharedRef<SDockTab>& InOwnerTab )"
  },
  {
    "label": "UpdateMainMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateMainMenu(const TSharedRef<SDockTab>& ForTab, bool const bForce)"
  },
  {
    "label": "SaveAllVisualState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveAllVisualState()"
  },
  {
    "label": "SetRootWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRootWindow( const TSharedRef<SWindow> InRootWindow )"
  },
  {
    "label": "AddLegacyTabType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddLegacyTabType(FName InLegacyTabType, FName InNewTabType)"
  },
  {
    "label": "SetProxyTabManager()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetProxyTabManager(TSharedPtr<FProxyTabmanager> InProxyTabManager)"
  },
  {
    "label": "SetInitialLayoutSP()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialLayoutSP(TSharedPtr<FTabManager::FLayout> InLayout)"
  },
  {
    "label": "GetInitialLayoutSP()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FTabManager::FLayout>)",
    "insertText": "GetInitialLayoutSP()"
  },
  {
    "label": "SetParentWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetParentWindow(TSharedRef<SWindow> InParentWindow)"
  }
]