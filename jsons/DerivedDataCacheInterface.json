[
  {
    "label": "FDerivedDataCacheUsageStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheUsageStats"
  },
  {
    "label": "FDerivedDataCacheStatsNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheStatsNode"
  },
  {
    "label": "IDDCCleanup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDDCCleanup"
  },
  {
    "label": "FDerivedDataCacheResourceStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataCacheResourceStat"
  },
  {
    "label": "FDerivedDataCacheSummaryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataCacheSummaryStats"
  },
  {
    "label": "FAnalyticsEventAttribute",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnalyticsEventAttribute"
  },
  {
    "label": "FDerivedDataCacheInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheInterface"
  },
  {
    "label": "FDerivedDataPluginInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataPluginInterface"
  },
  {
    "label": "EDDCNotification",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EDDCNotification"
  },
  {
    "label": "FDerivedDataCacheInterface()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / BitArray . h \" # include \" Containers / StringView . h \" # include \" Misc / AsciiSet . h \" # include \" DerivedDataCacheModule . h \" class FDerivedDataCacheUsageStats ; class FDerivedDataCacheStatsNode ; class IDDCCleanup ; struct FDerivedDataCacheResourceStat ; struct FDerivedDataCacheSummaryStats ; struct FAnalyticsEventAttribute ; class FDerivedDataCacheInterface { public : ~)",
    "insertText": "FDerivedDataCacheInterface()"
  },
  {
    "label": "GetSynchronous()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSynchronous(class FDerivedDataPluginInterface* DataDeriver, TArray<uint8>& OutData, bool* bDataWasBuilt = nullptr)"
  },
  {
    "label": "GetAsynchronous()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAsynchronous(class FDerivedDataPluginInterface* DataDeriver)"
  },
  {
    "label": "PollAsynchronousCompletion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollAsynchronousCompletion(uint32 Handle)"
  },
  {
    "label": "WaitAsynchronousCompletion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitAsynchronousCompletion(uint32 Handle)"
  },
  {
    "label": "GetAsynchronousResults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAsynchronousResults(uint32 Handle, TArray<uint8>& OutData, bool* bDataWasBuilt = nullptr)"
  },
  {
    "label": "GetAsynchronousResults()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAsynchronousResults(uint32 Handle, TArray64<uint8>& OutData, bool* bDataWasBuilt = nullptr)"
  },
  {
    "label": "AppendSanitized()",
    "kind": "Method",
    "detail": "Function (private : FAsciiSet ValidCacheKeyChars = \" ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_ $ \" ; void)",
    "insertText": "AppendSanitized(FString& Out, FStringView In)"
  },
  {
    "label": "FindPrefixWith()",
    "kind": "Method",
    "detail": "Function (FStringView SanePrefix =)",
    "insertText": "FindPrefixWith(In, ValidCacheKeyChars)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (Out .)",
    "insertText": "Append(SanePrefix)"
  },
  {
    "label": "RemovePrefix()",
    "kind": "Method",
    "detail": "Function (In .)",
    "insertText": "RemovePrefix(SanePrefix.Len())"
  },
  {
    "label": "Appendf()",
    "kind": "Method",
    "detail": "Function (break ; } Out .)",
    "insertText": "Appendf(TEXT(\"$%x\"), uint32(In[0]))"
  },
  {
    "label": "RemovePrefix()",
    "kind": "Method",
    "detail": "Function (In .)",
    "insertText": "RemovePrefix(1)"
  },
  {
    "label": "IsValidCacheChar()",
    "kind": "Method",
    "detail": "Function (} } public : bool)",
    "insertText": "IsValidCacheChar(const TCHAR C)"
  },
  {
    "label": "SanitizeCacheKey()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "SanitizeCacheKey(const TCHAR* CacheKey)"
  },
  {
    "label": "AppendSanitized()",
    "kind": "Method",
    "detail": "Function (FString Out ;)",
    "insertText": "AppendSanitized(Out, FStringView(CacheKey))"
  },
  {
    "label": "BuildCacheKey()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "BuildCacheKey(FStringView PluginName, FStringView VersionString, FStringView PluginSpecificCacheKeySuffix)"
  },
  {
    "label": "Reserve()",
    "kind": "Method",
    "detail": "Function (FString Out ; Out .)",
    "insertText": "Reserve(PluginName.Len() + 1 + VersionString.Len() + 1 + PluginSpecificCacheKeySuffix.Len())"
  },
  {
    "label": "AppendSanitized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSanitized(Out, PluginName)"
  },
  {
    "label": "AppendChar()",
    "kind": "Method",
    "detail": "Function (Out .)",
    "insertText": "AppendChar(TEXT('_'))"
  },
  {
    "label": "AppendSanitized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSanitized(Out, VersionString)"
  },
  {
    "label": "AppendSanitized()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendSanitized(Out, PluginSpecificCacheKeySuffix)"
  },
  {
    "label": "GetSynchronous()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSynchronous(const TCHAR* CacheKey, TArray64<uint8>& OutData, FStringView DebugContext)"
  },
  {
    "label": "GetAsynchronous()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetAsynchronous(const TCHAR* CacheKey, FStringView DebugContext)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Put(const TCHAR* CacheKey, TArrayView64<const uint8> Data, FStringView DataContext, bool bPutEvenIfExists = false)"
  },
  {
    "label": "MarkTransient()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkTransient(const TCHAR* CacheKey)"
  },
  {
    "label": "CachedDataProbablyExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CachedDataProbablyExists(const TCHAR* CacheKey)"
  },
  {
    "label": "CachedDataProbablyExistsBatch()",
    "kind": "Method",
    "detail": "Function (TBitArray<>)",
    "insertText": "CachedDataProbablyExistsBatch(TConstArrayView<FString> CacheKeys)"
  },
  {
    "label": "AllCachedDataProbablyExists()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AllCachedDataProbablyExists(TConstArrayView<FString> CacheKeys)"
  },
  {
    "label": "TryToPrefetch()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryToPrefetch(TConstArrayView<FString> CacheKeys, FStringView DebugContext)"
  },
  {
    "label": "NotifyBootComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyBootComplete()"
  },
  {
    "label": "AddToAsyncCompletionCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToAsyncCompletionCounter(int32 Addend)"
  },
  {
    "label": "AnyAsyncRequestsRemaining()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnyAsyncRequestsRemaining()"
  },
  {
    "label": "WaitForQuiescence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForQuiescence(bool bShutdown = false)"
  },
  {
    "label": "GetDirectories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDirectories(TArray<FString>& OutResults)"
  },
  {
    "label": "GetUsingSharedDDC()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUsingSharedDDC()"
  },
  {
    "label": "GetGraphName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetGraphName()"
  },
  {
    "label": "GetDefaultGraphName()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetDefaultGraphName()"
  },
  {
    "label": "IsDefaultGraph()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDefaultGraph()"
  },
  {
    "label": "GatherUsageStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "GatherUsageStats(TMap<FString, FDerivedDataCacheUsageStats>& UsageStats)"
  },
  {
    "label": "GatherResourceStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherResourceStats(TArray<FDerivedDataCacheResourceStat>& DDCResourceStats)"
  },
  {
    "label": "GatherSummaryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherSummaryStats(FDerivedDataCacheSummaryStats& DDCSummaryStats)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (enum EDDCNotification { SharedDDCPerformanceNotification } ;)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnDDCNotification, EDDCNotification)"
  },
  {
    "label": "GetDDCNotificationEvent()",
    "kind": "Method",
    "detail": "Function (FOnDDCNotification&)",
    "insertText": "GetDDCNotificationEvent()"
  }
]