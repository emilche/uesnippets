[
  {
    "label": "IWebBrowserAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IWebBrowserAdapter"
  },
  {
    "label": "FWebBrowserAdapterFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWebBrowserAdapterFactory"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" IWebBrowserWindow . h \" class IWebBrowserAdapter { public : FString)",
    "insertText": "GetName()"
  },
  {
    "label": "IsPermanent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPermanent()"
  },
  {
    "label": "ConnectTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConnectTo(const TSharedRef<IWebBrowserWindow>& BrowserWindow)"
  },
  {
    "label": "DisconnectFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisconnectFrom(const TSharedRef<IWebBrowserWindow>& BrowserWindow)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; class FWebBrowserAdapterFactory { public : TSharedRef<IWebBrowserAdapter>)",
    "insertText": "Create(const FString& Name, UObject* JSBridge, bool IsPermanent)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IWebBrowserAdapter>)",
    "insertText": "Create(const FString& Name, UObject* JSBridge, bool IsPermanent, const FString& ConnectScriptText, const FString& DisconnectScriptText)"
  }
]