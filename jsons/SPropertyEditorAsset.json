[
  {
    "label": "FAssetThumbnail",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetThumbnail"
  },
  {
    "label": "FPropertyEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyEditor"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SBorder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SBorder"
  },
  {
    "label": "SComboButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SComboButton"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "FDetailWidgetRow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDetailWidgetRow"
  },
  {
    "label": "FAssetButtonActionExtension",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetButtonActionExtension"
  },
  {
    "label": "SPropertyEditorAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyEditorAsset"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FObjectOrAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectOrAssetData"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "name"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( const TSharedRef<FPropertyEditor>& InPropertyEditor )"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Supports( const FProperty* NodeProperty )"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct( const FArguments& InArgs, const TSharedPtr<FPropertyEditor>& InPropertyEditor = NULL )"
  },
  {
    "label": "GetDesiredWidth()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDesiredWidth( float& OutMinDesiredWidth, float &OutMaxDesiredWidth )"
  },
  {
    "label": "OpenComboButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenComboButton()"
  },
  {
    "label": "OnGetMenuContent()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGetMenuContent()"
  },
  {
    "label": "OnMenuOpenChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMenuOpenChanged(bool bOpen)"
  },
  {
    "label": "CloseComboButton()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseComboButton()"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue( const FAssetData& AssetData )"
  },
  {
    "label": "OnAssetSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetSelected( const FAssetData& AssetData )"
  },
  {
    "label": "OnActorSelected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnActorSelected( AActor* InActor )"
  },
  {
    "label": "OnGetAllowedClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnGetAllowedClasses(TArray<const UClass*>& AllowedClasses)"
  },
  {
    "label": "OnOpenAssetEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenAssetEditor()"
  },
  {
    "label": "OnBrowse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBrowse()"
  },
  {
    "label": "OnUse()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUse()"
  },
  {
    "label": "OnClear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnClear()"
  },
  {
    "label": "GetAssetClassColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetAssetClassColor()"
  },
  {
    "label": "OnAssetDropped()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAssetDropped( const FDragDropEvent&, TArrayView<FAssetData> InAssets )"
  },
  {
    "label": "OnCopy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCopy()"
  },
  {
    "label": "OnPaste()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPaste()"
  },
  {
    "label": "OnPasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPasteFromText(const FString& InTag, const FString& InText, const TOptional<FGuid>& InOperationId)"
  },
  {
    "label": "PasteFromText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PasteFromText(const FString& InTag, const FString& InText)"
  },
  {
    "label": "CanPaste()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPaste()"
  },
  {
    "label": "OnAssetThumbnailDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnAssetThumbnailDoubleClick( const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent )"
  },
  {
    "label": "InitializeClassFilters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeClassFilters(const FProperty* Property)"
  },
  {
    "label": "InitializeAssetDataTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeAssetDataTags(const FProperty* Property)"
  },
  {
    "label": "IsAssetFiltered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAssetFiltered(const FAssetData& InAssetData)"
  },
  {
    "label": "GenerateCustomAssetPickerButtons()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateCustomAssetPickerButtons(const FAssetData& InAssetData, const TArray<FAssetButtonActionExtension>& InExtensions)"
  }
]