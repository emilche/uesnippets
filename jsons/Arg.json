[
  {
    "label": "Cord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Cord"
  },
  {
    "label": "FormatCountCapture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatCountCapture"
  },
  {
    "label": "FormatSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatSink"
  },
  {
    "label": "FormatConvertResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatConvertResult"
  },
  {
    "label": "FormatConversionSpec",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatConversionSpec"
  },
  {
    "label": "ArgConvertResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ArgConvertResult"
  },
  {
    "label": "HasUserDefinedConvert",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasUserDefinedConvert"
  },
  {
    "label": "HasUserDefinedConvert",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "HasUserDefinedConvert"
  },
  {
    "label": "StreamedWrapper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StreamedWrapper"
  },
  {
    "label": "VoidPtr",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VoidPtr"
  },
  {
    "label": "AbslCord",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AbslCord"
  },
  {
    "label": "FormatCountCaptureHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatCountCaptureHelper"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FormatArgImplFriend",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FormatArgImplFriend"
  },
  {
    "label": "FormatArgImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FormatArgImpl"
  },
  {
    "label": "store_by_value",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "store_by_value"
  },
  {
    "label": "StoragePolicy",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StoragePolicy"
  },
  {
    "label": "storage_policy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "storage_policy"
  },
  {
    "label": "DecayType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DecayType"
  },
  {
    "label": "DecayType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DecayType"
  },
  {
    "label": "str_format_internal",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "str_format_internal"
  },
  {
    "label": "Manager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Manager"
  },
  {
    "label": "Manager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Manager"
  },
  {
    "label": "Manager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Manager"
  },
  {
    "label": "Manager",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Manager"
  },
  {
    "label": "AbslFormatConvert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbslFormatConvert()"
  },
  {
    "label": "AbslStringify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AbslStringify()"
  },
  {
    "label": "AbslFormatConvert()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "AbslFormatConvert(v, fcs, &fs)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (ArgConvertResult<FormatConversionCharSetInternal::p>)",
    "insertText": "FormatConvertImpl(\n    VoidPtr v, FormatConversionSpecImpl conv, FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (StringConvertResult)",
    "insertText": "FormatConvertImpl(const std::string& v,\n                                      FormatConversionSpecImpl conv,\n                                      FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (StringConvertResult)",
    "insertText": "FormatConvertImpl(string_view v,\n                                      FormatConversionSpecImpl conv,\n                                      FormatSinkImpl* sink)"
  },
  {
    "label": "ConvertBoolArg()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ConvertBoolArg(bool v, FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (FloatingConvertResult)",
    "insertText": "FormatConvertImpl(float v, FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (FloatingConvertResult)",
    "insertText": "FormatConvertImpl(double v, FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (FloatingConvertResult)",
    "insertText": "FormatConvertImpl(long double v,\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (CharConvertResult)",
    "insertText": "FormatConvertImpl(char v, FormatConversionSpecImpl conv,\n                                    FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (CharConvertResult)",
    "insertText": "FormatConvertImpl(signed char v,\n                                    FormatConversionSpecImpl conv,\n                                    FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (CharConvertResult)",
    "insertText": "FormatConvertImpl(unsigned char v,\n                                    FormatConversionSpecImpl conv,\n                                    FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(short v,  // NOLINT\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(unsigned short v,  // NOLINT\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(int v, FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(unsigned v,\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(long v,  // NOLINT\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(unsigned long v,  // NOLINT\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(long long v,  // NOLINT\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(unsigned long long v,  // NOLINT\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(int128 v, FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult)",
    "insertText": "FormatConvertImpl(uint128 v,\n                                        FormatConversionSpecImpl conv,\n                                        FormatSinkImpl* sink)"
  },
  {
    "label": "FormatConvertImpl()",
    "kind": "Method",
    "detail": "Function (IntegralConvertResult>::type)",
    "insertText": "FormatConvertImpl(T v, FormatConversionSpecImpl conv, FormatSinkImpl* sink)"
  }
]