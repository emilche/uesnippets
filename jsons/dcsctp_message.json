[
  {
    "label": "DcSctpMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DcSctpMessage"
  },
  {
    "label": "DcSctpMessage()",
    "kind": "Method",
    "detail": "Function (# ifndef NET_DCSCTP_PUBLIC_DCSCTP_MESSAGE_H_ # define NET_DCSCTP_PUBLIC_DCSCTP_MESSAGE_H_ # include<cstdint> # include<utility> # include<vector> # include \" api / array_view . h \" # include \" net / dcsctp / public / types . h \" namespace dcsctp { class DcSctpMessage { public :)",
    "insertText": "DcSctpMessage(StreamID stream_id, PPID ppid, std::vector<uint8_t> payload) : stream_id_(stream_id), ppid_(ppid), payload_(std::move(payload))"
  },
  {
    "label": "DcSctpMessage()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "DcSctpMessage(DcSctpMessage&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DcSctpMessage&)",
    "insertText": "operator(DcSctpMessage&& other)"
  },
  {
    "label": "DcSctpMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DcSctpMessage(const DcSctpMessage&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (DcSctpMessage&)",
    "insertText": "operator(const DcSctpMessage&)"
  },
  {
    "label": "stream_id()",
    "kind": "Method",
    "detail": "Function (StreamID)",
    "insertText": "stream_id()"
  }
]