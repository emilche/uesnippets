[
  {
    "label": "ProcessStartInfoHolder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProcessStartInfoHolder"
  },
  {
    "label": "FixFileName()",
    "kind": "Method",
    "detail": "Function (# pragma once # define Local_GetLongPathNameW uba::GetLongPathNameW # include \" UbaBinaryReaderWriter . h \" # include \" UbaFile . h \" # include \" UbaPathUtils . h \" # include \" UbaProcessStartInfo . h \" namespace uba { void)",
    "insertText": "FixFileName(StringBufferBase& out, const tchar* fileName, const tchar* workingDir)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (tchar buffer [ 1 0 2 4 ] ; u32 charLen ; u64 workingDirLen = 0 ;)",
    "insertText": "if(workingDir) workingDirLen = TStrlen(workingDir)"
  },
  {
    "label": "FixPath2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixPath2(fileName, workingDir, workingDirLen, buffer, sizeof_array(buffer), &charLen)"
  },
  {
    "label": "Append()",
    "kind": "Method",
    "detail": "Function (out .)",
    "insertText": "Append(buffer)"
  },
  {
    "label": "ProcessStartInfoHolder()",
    "kind": "Method",
    "detail": "Function (} struct ProcessStartInfoHolder : public ProcessStartInfo {)",
    "insertText": "ProcessStartInfoHolder()"
  },
  {
    "label": "ProcessStartInfoHolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessStartInfoHolder(const ProcessStartInfo& si)"
  },
  {
    "label": "FixFileName()",
    "kind": "Method",
    "detail": "Function (StringBuffer<5 1 2> temp ;)",
    "insertText": "FixFileName(temp, si.workingDir, nullptr)"
  },
  {
    "label": "EnsureEndsWithSlash()",
    "kind": "Method",
    "detail": "Function (temp .)",
    "insertText": "EnsureEndsWithSlash()"
  },
  {
    "label": "c_str()",
    "kind": "Method",
    "detail": "Function (workingDirStr = temp . data ; workingDir = workingDirStr .)",
    "insertText": "c_str()"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Write(BinaryWriter& writer)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteString(descriptionStr)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteString(applicationStr)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteString(argumentsStr)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteString(workingDirStr)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteString(logFileStr)"
  },
  {
    "label": "WriteU32()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteU32(*(u32*)&weight)"
  },
  {
    "label": "WriteBool()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteBool(trackInputs)"
  },
  {
    "label": "WriteBool()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteBool(writeOutputFilesOnFail)"
  },
  {
    "label": "WriteU64()",
    "kind": "Method",
    "detail": "Function (writer .)",
    "insertText": "WriteU64(outputStatsThresholdMs)"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Read(BinaryReader& reader)"
  },
  {
    "label": "ReadString()",
    "kind": "Method",
    "detail": "Function (descriptionStr = reader .)",
    "insertText": "ReadString()"
  },
  {
    "label": "Replace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Replace(applicationStr.data(), '/', PathSeparator)"
  },
  {
    "label": "ReadU32()",
    "kind": "Method",
    "detail": "Function (u32 weight32 = reader .)",
    "insertText": "ReadU32()"
  },
  {
    "label": "weight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "weight(float*)"
  },
  {
    "label": "ReadBool()",
    "kind": "Method",
    "detail": "Function (trackInputs = reader .)",
    "insertText": "ReadBool()"
  },
  {
    "label": "ReadU64()",
    "kind": "Method",
    "detail": "Function (outputStatsThresholdMs = reader .)",
    "insertText": "ReadU64()"
  },
  {
    "label": "ProcessStartInfoHolder()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "ProcessStartInfoHolder(const ProcessStartInfoHolder& o)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (* this = o ; } void)",
    "insertText": "operator(const ProcessStartInfoHolder& o)"
  },
  {
    "label": "Expand()",
    "kind": "Method",
    "detail": "Function (weight = o . weight ; } bool)",
    "insertText": "Expand()"
  }
]