[
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "DelayedLoadMetadata()",
    "kind": "Method",
    "detail": "Function (# ifndef OPENVDB_DELAYED_LOAD_METADATA_HAS_BEEN_INCLUDED # define OPENVDB_DELAYED_LOAD_METADATA_HAS_BEEN_INCLUDED # include<openvdb / Metadata . h> # include<cstdint> # include<iostream> # include<string> # include<vector> namespace openvdb { OPENVDB_USE_VERSION_NAMESPACE namespace OPENVDB_VERSION_NAME { namespace io { class DelayedLoadMetadata : public Metadata { public : using Ptr = SharedPtr<DelayedLoadMetadata> ; using ConstPtr = SharedPtr<const DelayedLoadMetadata> ; using MaskType = int8_t ; using CompressedSizeType = int64_t ;)",
    "insertText": "DelayedLoadMetadata()"
  },
  {
    "label": "DelayedLoadMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DelayedLoadMetadata(const DelayedLoadMetadata& other)"
  },
  {
    "label": "typeName()",
    "kind": "Method",
    "detail": "Function (Name)",
    "insertText": "typeName()"
  },
  {
    "label": "copy()",
    "kind": "Method",
    "detail": "Function (Metadata::Ptr)",
    "insertText": "copy()"
  },
  {
    "label": "copy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "copy(const Metadata&)"
  },
  {
    "label": "str()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "str()"
  },
  {
    "label": "asBool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "asBool()"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (Index32)",
    "insertText": "size()"
  },
  {
    "label": "staticTypeName()",
    "kind": "Method",
    "detail": "Function (Name)",
    "insertText": "staticTypeName()"
  },
  {
    "label": "ret()",
    "kind": "Method",
    "detail": "Function (Metadata::Ptr)",
    "insertText": "ret(new DelayedLoadMetadata)"
  },
  {
    "label": "registerType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerType(DelayedLoadMetadata::staticTypeName(), DelayedLoadMetadata::createMetadata)"
  },
  {
    "label": "unregisterType()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "unregisterType()"
  },
  {
    "label": "unregisterType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unregisterType(DelayedLoadMetadata::staticTypeName())"
  },
  {
    "label": "isRegisteredType()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isRegisteredType()"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "clear()"
  },
  {
    "label": "empty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "empty()"
  },
  {
    "label": "resizeMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeMask(size_t size)"
  },
  {
    "label": "resizeCompressedSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "resizeCompressedSize(size_t size)"
  },
  {
    "label": "getMask()",
    "kind": "Method",
    "detail": "Function (MaskType)",
    "insertText": "getMask(size_t index)"
  },
  {
    "label": "setMask()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setMask(size_t index, const MaskType& value)"
  },
  {
    "label": "getCompressedSize()",
    "kind": "Method",
    "detail": "Function (CompressedSizeType)",
    "insertText": "getCompressedSize(size_t index)"
  },
  {
    "label": "setCompressedSize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setCompressedSize(size_t index, const CompressedSizeType& value)"
  },
  {
    "label": "readValue()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "readValue(std::istream&, Index32 numBytes)"
  },
  {
    "label": "writeValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "writeValue(std::ostream&)"
  }
]