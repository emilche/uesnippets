[
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "as",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "as"
  },
  {
    "label": "as",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "as"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "AUGMENTEDREALITY_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AUGMENTEDREALITY_API"
  },
  {
    "label": "IsARSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsARSupported()"
  },
  {
    "label": "StartARSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartARSession(UARSessionConfig* SessionConfig)"
  },
  {
    "label": "PauseARSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PauseARSession()"
  },
  {
    "label": "StopARSession()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StopARSession()"
  },
  {
    "label": "GetARSessionStatus()",
    "kind": "Method",
    "detail": "Function (FARSessionStatus)",
    "insertText": "GetARSessionStatus()"
  },
  {
    "label": "ToggleARCapture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ToggleARCapture(const bool bOnOff, const EARCaptureType CaptureType)"
  },
  {
    "label": "SetEnabledXRCamera()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetEnabledXRCamera(bool bOnOff)"
  },
  {
    "label": "ResizeXRCamera()",
    "kind": "Method",
    "detail": "Function (FIntPoint)",
    "insertText": "ResizeXRCamera(const FIntPoint& InSize)"
  },
  {
    "label": "SetAlignmentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAlignmentTransform( const FTransform& InAlignmentTransform )"
  },
  {
    "label": "LineTraceTrackedObjects()",
    "kind": "Method",
    "detail": "Function (TArray<FARTraceResult>)",
    "insertText": "LineTraceTrackedObjects( const FVector2D ScreenCoord, bool bTestFeaturePoints = true, bool bTestGroundPlane = true, bool bTestPlaneExtents = true, bool bTestPlaneBoundaryPolygon = true )"
  },
  {
    "label": "LineTraceTrackedObjects3D()",
    "kind": "Method",
    "detail": "Function (TArray<FARTraceResult>)",
    "insertText": "LineTraceTrackedObjects3D(const FVector Start, const FVector End, bool bTestFeaturePoints = true, bool bTestGroundPlane = true, bool bTestPlaneExtents = true, bool bTestPlaneBoundaryPolygon = true)"
  },
  {
    "label": "GetTrackingQuality()",
    "kind": "Method",
    "detail": "Function (EARTrackingQuality)",
    "insertText": "GetTrackingQuality()"
  },
  {
    "label": "GetTrackingQualityReason()",
    "kind": "Method",
    "detail": "Function (EARTrackingQualityReason)",
    "insertText": "GetTrackingQualityReason()"
  },
  {
    "label": "IsSessionTypeSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSessionTypeSupported(EARSessionType SessionType)"
  },
  {
    "label": "PinComponentToARPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PinComponentToARPin(USceneComponent* ComponentToPin, UARPin* Pin)"
  },
  {
    "label": "UnpinComponent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnpinComponent( USceneComponent* ComponentToUnpin )"
  },
  {
    "label": "RemovePin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemovePin( UARPin* PinToRemove )"
  },
  {
    "label": "IsARPinLocalStoreSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsARPinLocalStoreSupported()"
  },
  {
    "label": "IsARPinLocalStoreReady()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsARPinLocalStoreReady()"
  },
  {
    "label": "SaveARPinToLocalStore()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveARPinToLocalStore(FName InSaveName, UARPin* InPin)"
  },
  {
    "label": "RemoveARPinFromLocalStore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveARPinFromLocalStore(FName InSaveName)"
  },
  {
    "label": "RemoveAllARPinsFromLocalStore()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveAllARPinsFromLocalStore()"
  },
  {
    "label": "AddManualEnvironmentCaptureProbe()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddManualEnvironmentCaptureProbe(FVector Location, FVector Extent)"
  },
  {
    "label": "GetWorldMappingStatus()",
    "kind": "Method",
    "detail": "Function (EARWorldMappingState)",
    "insertText": "GetWorldMappingStatus()"
  },
  {
    "label": "GetPointCloud()",
    "kind": "Method",
    "detail": "Function (TArray<FVector>)",
    "insertText": "GetPointCloud()"
  },
  {
    "label": "GetSupportedVideoFormats()",
    "kind": "Method",
    "detail": "Function (TArray<FARVideoFormat>)",
    "insertText": "GetSupportedVideoFormats(EARSessionType SessionType)"
  },
  {
    "label": "SaveWorld()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "SaveWorld()"
  },
  {
    "label": "GetCandidateObject()",
    "kind": "Method",
    "detail": "Function (ESPMode::ThreadSafe>)",
    "insertText": "GetCandidateObject(FVector Location, FVector Extent)"
  },
  {
    "label": "IsSessionTrackingFeatureSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSessionTrackingFeatureSupported(EARSessionType SessionType, EARSessionTrackingFeature SessionTrackingFeature)"
  },
  {
    "label": "IsSceneReconstructionSupported()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSceneReconstructionSupported(EARSessionType SessionType, EARSceneReconstruction SceneReconstructionMethod)"
  },
  {
    "label": "GetAllTracked2DPoses()",
    "kind": "Method",
    "detail": "Function (TArray<FARPose2D>)",
    "insertText": "GetAllTracked2DPoses()"
  },
  {
    "label": "GetObjectClassificationAtLocation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetObjectClassificationAtLocation(const FVector& InWorldLocation, EARObjectClassification& OutClassification, FVector& OutClassificationLocation, float MaxLocationDiff = 10.f)"
  },
  {
    "label": "SetARWorldOriginLocationAndRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetARWorldOriginLocationAndRotation(FVector OriginLocation, FRotator OriginRotation, bool bIsTransformInWorldSpace = true, bool bMaintainUpDirection = true)"
  },
  {
    "label": "SetARWorldScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetARWorldScale(float InWorldScale)"
  },
  {
    "label": "GetARWorldScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetARWorldScale()"
  },
  {
    "label": "GetAlignmentTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetAlignmentTransform()"
  },
  {
    "label": "AddTrackedPointWithName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddTrackedPointWithName(const FTransform& WorldTransform, const FString& PointName, bool bDeletePointsWithSameName = true)"
  },
  {
    "label": "CalculateClosestIntersection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateClosestIntersection(const TArray<FVector>& StartPoints, const TArray<FVector>& EndPoints, FVector& ClosestIntersection)"
  },
  {
    "label": "CalculateAlignmentTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateAlignmentTransform(const FTransform& TransformInFirstCoordinateSystem, const FTransform& TransformInSecondCoordinateSystem, FTransform& AlignmentTransform)"
  },
  {
    "label": "GetNumberOfTrackedFacesSupported()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumberOfTrackedFacesSupported()"
  },
  {
    "label": "GetCameraIntrinsics()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCameraIntrinsics(FARCameraIntrinsics& OutCameraIntrinsics)"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "MoveTemp(Geometries)"
  },
  {
    "label": "RegisterAsARSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterAsARSystem(const TSharedRef<FARSupportInterface , ESPMode::ThreadSafe>& NewArSystem)"
  },
  {
    "label": "GetDistanceFromCamera()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetDistanceFromCamera( const FARTraceResult& TraceResult )"
  },
  {
    "label": "GetLocalToTrackingTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetLocalToTrackingTransform( const FARTraceResult& TraceResult )"
  },
  {
    "label": "GetLocalToWorldTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetLocalToWorldTransform( const FARTraceResult& TraceResult )"
  },
  {
    "label": "GetLocalTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetLocalTransform( const FARTraceResult& TraceResult )"
  },
  {
    "label": "GetTraceChannel()",
    "kind": "Method",
    "detail": "Function (EARLineTraceChannels)",
    "insertText": "GetTraceChannel( const FARTraceResult& TraceResult )"
  }
]