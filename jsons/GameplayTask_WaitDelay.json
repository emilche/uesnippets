[
  {
    "label": "UGameplayTask_WaitDelay",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameplayTask_WaitDelay"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ScriptInterface . h \" # include \" GameplayTaskOwnerInterface . h \" # include \" GameplayTask . h \" # include \" GameplayTask_WaitDelay . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() DECLARE_DYNAMIC_MULTICAST_DELEGATE(FTaskDelayDelegate)"
  },
  {
    "label": "UGameplayTask_WaitDelay()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "UGameplayTask_WaitDelay(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "Activate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Activate()"
  },
  {
    "label": "GetDebugString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDebugString()"
  },
  {
    "label": "TaskWaitDelay()",
    "kind": "Method",
    "detail": "Function (UGameplayTask_WaitDelay*)",
    "insertText": "TaskWaitDelay(IGameplayTaskOwnerInterface& InTaskOwner, float Time, const uint8 Priority = FGameplayTasks::DefaultPriority)"
  },
  {
    "label": "OnTimeFinish()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "OnTimeFinish()"
  }
]