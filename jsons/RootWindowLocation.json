[
  {
    "label": "FRootWindowLocation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootWindowLocation"
  },
  {
    "label": "FRootWindowLocation()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GenericPlatform / GenericApplication . h \" # include \" Framework / Application / SlateApplication . h \" # include \" Misc / ConfigCacheIni . h \" struct FRootWindowLocation { FVector2D ScreenPosition ; FVector2D WindowSize ; bool InitiallyMaximized ; public :)",
    "insertText": "FRootWindowLocation() : WindowSize( VectorFromSettings(TEXT(\"WindowSize\"), FVector2D(1280,720)) ) , InitiallyMaximized( BoolFromSettings(TEXT(\"InitiallyMaximized\"), true))"
  },
  {
    "label": "VectorFromSettings()",
    "kind": "Method",
    "detail": "Function (ScreenPosition =)",
    "insertText": "VectorFromSettings(TEXT(\"ScreenPosition\"), GetCenteredScreenPosition())"
  },
  {
    "label": "FRootWindowLocation()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRootWindowLocation(FVector2D InWindowSize, bool InInitiallyMaximized) : WindowSize(InWindowSize) , InitiallyMaximized(InInitiallyMaximized)"
  },
  {
    "label": "GetCenteredScreenPosition()",
    "kind": "Method",
    "detail": "Function (ScreenPosition =)",
    "insertText": "GetCenteredScreenPosition()"
  },
  {
    "label": "FRootWindowLocation()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FRootWindowLocation(FVector2D InScreenPosition, FVector2D InWindowSize, bool InInitiallyMaximized ) : ScreenPosition( InScreenPosition ) , WindowSize( InWindowSize ) , InitiallyMaximized( InInitiallyMaximized)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FDisplayMetrics DisplayMetrics ;)",
    "insertText": "Get().GetCachedDisplayMetrics(DisplayMetrics)"
  },
  {
    "label": "DisplayTopLeft()",
    "kind": "Method",
    "detail": "Function (const FVector2D)",
    "insertText": "DisplayTopLeft(DisplayMetrics.PrimaryDisplayWorkAreaRect.Left, DisplayMetrics.PrimaryDisplayWorkAreaRect.Top)"
  },
  {
    "label": "DisplaySize()",
    "kind": "Method",
    "detail": "Function (const FVector2D)",
    "insertText": "DisplaySize(DisplayMetrics.PrimaryDisplayWorkAreaRect.Right - DisplayMetrics.PrimaryDisplayWorkAreaRect.Left, DisplayMetrics.PrimaryDisplayWorkAreaRect.Bottom - DisplayMetrics.PrimaryDisplayWorkAreaRect.Top)"
  },
  {
    "label": "SaveToIni()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SaveToIni()"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (GConfig ->)",
    "insertText": "SetString(TEXT(\"RootWindow\"), TEXT(\"ScreenPosition\"), *ScreenPosition.ToString(), GEditorPerProjectIni)"
  },
  {
    "label": "SetString()",
    "kind": "Method",
    "detail": "Function (GConfig ->)",
    "insertText": "SetString(TEXT(\"RootWindow\"), TEXT(\"WindowSize\"), *WindowSize.ToString(), GEditorPerProjectIni)"
  },
  {
    "label": "SetBool()",
    "kind": "Method",
    "detail": "Function (GConfig ->)",
    "insertText": "SetBool(TEXT(\"RootWindow\"), TEXT(\"InitiallyMaximized\"), InitiallyMaximized, GEditorPerProjectIni)"
  },
  {
    "label": "VectorFromSettings()",
    "kind": "Method",
    "detail": "Function (} private : FVector2D)",
    "insertText": "VectorFromSettings(const TCHAR* SettingName, FVector2D DefaultValue)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (FVector2D ReturnValue = DefaultValue ; FString ValueAsString ;)",
    "insertText": "if(GConfig->GetString(TEXT(\"RootWindow\"), SettingName, ValueAsString, GEditorPerProjectIni) && ReturnValue.InitFromString(ValueAsString))"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bool ReturnValue ;)",
    "insertText": "if(GConfig->GetBool(TEXT(\"RootWindow\"), SettingName, ReturnValue, GEditorPerProjectIni))"
  }
]