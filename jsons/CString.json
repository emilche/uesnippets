[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "used",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "used"
  },
  {
    "label": "FToBoolHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToBoolHelper"
  },
  {
    "label": "also",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "also"
  },
  {
    "label": "TCString",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCString"
  },
  {
    "label": "TCStringSpcHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TCStringSpcHelper"
  },
  {
    "label": "FromCStringAnsi()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromCStringAnsi( const ANSICHAR* String )"
  },
  {
    "label": "FromCStringWide()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromCStringWide( const WIDECHAR* String )"
  },
  {
    "label": "FromCStringUtf8()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "FromCStringUtf8( const UTF8CHAR* String )"
  },
  {
    "label": "Strcpy()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Strcpy( Dest, DestCount, Src )"
  },
  {
    "label": "Strcat()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Strcat( Dest, DestCount, Src )"
  },
  {
    "label": "Strupr()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Strupr( Dest, DestCount )"
  },
  {
    "label": "Strcmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strcmp( const CharType* String1, const CharType* String2 )"
  },
  {
    "label": "Strncmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strncmp( const CharType* String1, const CharType* String2, SIZE_T Count)"
  },
  {
    "label": "Stricmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Stricmp( const CharType* String1, const CharType* String2 )"
  },
  {
    "label": "Strnicmp()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnicmp( const CharType* String1, const CharType* String2, SIZE_T Count )"
  },
  {
    "label": "Strlen()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strlen( const CharType* String )"
  },
  {
    "label": "Strnlen()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strnlen( const CharType* String, SIZE_T StringSize )"
  },
  {
    "label": "Strspn()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strspn( const CharType* String, const CharType* Mask )"
  },
  {
    "label": "Strcspn()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strcspn( const CharType* String, const CharType* Mask )"
  },
  {
    "label": "Atoi()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Atoi( const CharType* String )"
  },
  {
    "label": "Atoi64()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Atoi64( const CharType* String )"
  },
  {
    "label": "Atof()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "Atof( const CharType* String )"
  },
  {
    "label": "Atod()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "Atod( const CharType* String )"
  },
  {
    "label": "Strtoi()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "Strtoi( const CharType* Start, CharType** End, int32 Base )"
  },
  {
    "label": "Strtoi64()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "Strtoi64( const CharType* Start, CharType** End, int32 Base )"
  },
  {
    "label": "Strtoui64()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "Strtoui64( const CharType* Start, CharType** End, int32 Base )"
  },
  {
    "label": "SprintfImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "SprintfImpl(CharType* Dest, const CharType* Fmt, ...)"
  },
  {
    "label": "SnprintfImpl()",
    "kind": "Method",
    "detail": "Function (VARARGS)",
    "insertText": "SnprintfImpl(CharType* Dest, int32 DestSize, const CharType* Fmt, ...)"
  },
  {
    "label": "GetVarArgs()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVarArgs( CharType* Dest, SIZE_T DestSize, const CharType*& Fmt, va_list ArgPtr )"
  },
  {
    "label": "UE_PTRDIFF_TO_INT32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_PTRDIFF_TO_INT32(StringIt - String)"
  },
  {
    "label": "UE_PTRDIFF_TO_INT32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_PTRDIFF_TO_INT32(StringIt - String)"
  },
  {
    "label": "UE_PTRDIFF_TO_INT32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_PTRDIFF_TO_INT32(StringIt - String)"
  },
  {
    "label": "UE_PTRDIFF_TO_INT32()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "UE_PTRDIFF_TO_INT32(StringIt - String)"
  }
]