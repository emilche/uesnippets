[
  {
    "label": "FJavaAndroidMediaDataSource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJavaAndroidMediaDataSource"
  },
  {
    "label": "FJavaAndroidMediaPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJavaAndroidMediaPlayer"
  },
  {
    "label": "FAudioTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAudioTrack"
  },
  {
    "label": "FCaptionTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCaptionTrack"
  },
  {
    "label": "FVideoTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FVideoTrack"
  },
  {
    "label": "FJavaAndroidMediaDataSource()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if USE_ANDROID_JNI # include \" Android / AndroidJava . h \" # include \" RHI . h \" # include \" RHIResources . h \" class FJavaAndroidMediaDataSource { public :)",
    "insertText": "FJavaAndroidMediaDataSource(const TSharedRef<FArchive, ESPMode::ThreadSafe>& InArchive)"
  },
  {
    "label": "FJavaAndroidMediaDataSource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FJavaAndroidMediaDataSource()"
  },
  {
    "label": "GetSize()",
    "kind": "Method",
    "detail": "Function (public : int64)",
    "insertText": "GetSize()"
  },
  {
    "label": "GetCurrentPosition()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetCurrentPosition()"
  },
  {
    "label": "ReadAt()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ReadAt(int64 Position, uint8* Buffer, int32 Count)"
  },
  {
    "label": "FJavaAndroidMediaPlayer()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<FArchive,ESPMode::ThreadSafe> Archive ; FCriticalSection CriticalSection ; } ; class FJavaAndroidMediaPlayer : public FJavaClassObject { public : struct FAudioTrack { int32 Index ; FString MimeType ; FString DisplayName ; FString Language ; FString Name ; uint32 Channels ; uint32 SampleRate ; } ; struct FCaptionTrack { int32 Index ; FString MimeType ; FString DisplayName ; FString Language ; FString Name ; } ; struct FVideoTrack { int32 Index ; FString MimeType ; FString DisplayName ; FString Language ; FString Name ; uint32 BitRate ; FIntPoint Dimensions ; float FrameRate ; } ; public :)",
    "insertText": "FJavaAndroidMediaPlayer(bool swizzlePixels, bool vulkanRenderer, bool needTrackInfo)"
  },
  {
    "label": "FJavaAndroidMediaPlayer()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FJavaAndroidMediaPlayer()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDuration()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "IsLooping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLooping()"
  },
  {
    "label": "IsPlaying()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlaying()"
  },
  {
    "label": "IsPrepared()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPrepared()"
  },
  {
    "label": "DidComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DidComplete()"
  },
  {
    "label": "SetDataSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataSource(const FString & Url)"
  },
  {
    "label": "SetDataSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataSource(const TSharedRef<FArchive, ESPMode::ThreadSafe>& InArchive)"
  },
  {
    "label": "SetDataSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataSource(const FString& MoviePathOnDevice, int64 offset, int64 size)"
  },
  {
    "label": "SetDataSource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetDataSource(jobject AssetMgr, const FString& AssetPath, int64 offset, int64 size)"
  },
  {
    "label": "Prepare()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Prepare()"
  },
  {
    "label": "PrepareAsync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareAsync()"
  },
  {
    "label": "SeekTo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SeekTo(int32 Milliseconds)"
  },
  {
    "label": "SetLooping()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLooping(bool Looping)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "GetVideoHeight()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVideoHeight()"
  },
  {
    "label": "GetVideoWidth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVideoWidth()"
  },
  {
    "label": "SetVideoEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVideoEnabled(bool enabled = true)"
  },
  {
    "label": "SetAudioEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioEnabled(bool enabled = true)"
  },
  {
    "label": "SetAudioVolume()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAudioVolume(float Volume)"
  },
  {
    "label": "GetVideoLastFrameData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVideoLastFrameData(void* & outPixels, int64 & outCount)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "GetVideoLastFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVideoLastFrame(int32 destTexture)"
  },
  {
    "label": "SelectTrack()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SelectTrack(int32 index)"
  },
  {
    "label": "GetAudioTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAudioTracks(TArray<FAudioTrack>& AudioTracks)"
  },
  {
    "label": "GetCaptionTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetCaptionTracks(TArray<FCaptionTrack>& CaptionTracks)"
  },
  {
    "label": "GetVideoTracks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetVideoTracks(TArray<FVideoTrack>& VideoTracks)"
  },
  {
    "label": "DidResolutionChange()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DidResolutionChange()"
  },
  {
    "label": "GetExternalTextureId()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetExternalTextureId()"
  },
  {
    "label": "UpdateVideoFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateVideoFrame(int32 ExternalTextureId, int32 *CurrentPosition, bool *bRegionChanged)"
  },
  {
    "label": "GetClassName()",
    "kind": "Method",
    "detail": "Function (private : FName)",
    "insertText": "GetClassName()"
  },
  {
    "label": "GetVideoTexture()",
    "kind": "Method",
    "detail": "Function (bool bTrackInfoSupported ; FJavaClassMethod GetDurationMethod ; FJavaClassMethod ResetMethod ; FJavaClassMethod StopMethod ; FJavaClassMethod GetCurrentPositionMethod ; FJavaClassMethod IsLoopingMethod ; FJavaClassMethod IsPlayingMethod ; FJavaClassMethod IsPreparedMethod ; FJavaClassMethod DidCompleteMethod ; FJavaClassMethod SetDataSourceURLMethod ; FJavaClassMethod SetDataSourceArchiveMethod ; FJavaClassMethod SetDataSourceFileMethod ; FJavaClassMethod SetDataSourceAssetMethod ; FJavaClassMethod PrepareMethod ; FJavaClassMethod PrepareAsyncMethod ; FJavaClassMethod SeekToMethod ; FJavaClassMethod SetLoopingMethod ; FJavaClassMethod ReleaseMethod ; FJavaClassMethod GetVideoHeightMethod ; FJavaClassMethod GetVideoWidthMethod ; FJavaClassMethod SetVideoEnabledMethod ; FJavaClassMethod SetAudioEnabledMethod ; FJavaClassMethod SetAudioVolumeMethod ; FJavaClassMethod GetVideoLastFrameDataMethod ; FJavaClassMethod StartMethod ; FJavaClassMethod PauseMethod ; FJavaClassMethod GetVideoLastFrameMethod ; FJavaClassMethod SelectTrackMethod ; FJavaClassMethod GetAudioTracksMethod ; FJavaClassMethod GetCaptionTracksMethod ; FJavaClassMethod GetVideoTracksMethod ; FJavaClassMethod DidResolutionChangeMethod ; FJavaClassMethod GetExternalTextureIdMethod ; FJavaClassMethod UpdateVideoFrameMethod ; jclass FrameUpdateInfoClass ; jfieldID FrameUpdateInfo_CurrentPosition ; jfieldID FrameUpdateInfo_FrameReady ; jfieldID FrameUpdateInfo_RegionChanged ; jfieldID FrameUpdateInfo_UScale ; jfieldID FrameUpdateInfo_UOffset ; jfieldID FrameUpdateInfo_VScale ; jfieldID FrameUpdateInfo_VOffset ; jclass AudioTrackInfoClass ; jfieldID AudioTrackInfo_Index ; jfieldID AudioTrackInfo_MimeType ; jfieldID AudioTrackInfo_DisplayName ; jfieldID AudioTrackInfo_Language ; jfieldID AudioTrackInfo_Channels ; jfieldID AudioTrackInfo_SampleRate ; jclass CaptionTrackInfoClass ; jfieldID CaptionTrackInfo_Index ; jfieldID CaptionTrackInfo_MimeType ; jfieldID CaptionTrackInfo_DisplayName ; jfieldID CaptionTrackInfo_Language ; jclass VideoTrackInfoClass ; jfieldID VideoTrackInfo_Index ; jfieldID VideoTrackInfo_MimeType ; jfieldID VideoTrackInfo_DisplayName ; jfieldID VideoTrackInfo_Language ; jfieldID VideoTrackInfo_BitRate ; jfieldID VideoTrackInfo_Width ; jfieldID VideoTrackInfo_Height ; jfieldID VideoTrackInfo_FrameRate ; FTextureRHIRef VideoTexture ; bool bVideoTextureValid ; float UScale,UOffset ; float VScale,VOffset ; TSharedPtr<FJavaAndroidMediaDataSource,ESPMode::ThreadSafe> MediaDataSource ; public : FTextureRHIRef)",
    "insertText": "GetVideoTexture()"
  },
  {
    "label": "SetVideoTextureValid()",
    "kind": "Method",
    "detail": "Function (VideoTexture = Texture ; } void)",
    "insertText": "SetVideoTextureValid(bool Condition)"
  },
  {
    "label": "IsVideoTextureValid()",
    "kind": "Method",
    "detail": "Function (bVideoTextureValid = Condition ; } bool)",
    "insertText": "IsVideoTextureValid()"
  },
  {
    "label": "AddMediaDataSourcePtr()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddMediaDataSourcePtr(int64 Identifier, TSharedPtr<FJavaAndroidMediaDataSource, ESPMode::ThreadSafe> MediaDataSource)"
  }
]