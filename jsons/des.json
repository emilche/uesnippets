[
  {
    "label": "DES_ks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DES_ks"
  },
  {
    "label": "DES_KEY_SZ()",
    "kind": "Method",
    "detail": "Function (# ifndef HEADER_DES_H # define HEADER_DES_H # include<openssl / opensslconf . h> # ifndef OPENSSL_NO_DES # ifdef __cplusplus \" C \" { # endif # include<openssl / e_os2 . h> typedef unsigned int DES_LONG ; # ifdef OPENSSL_BUILD_SHLIBCRYPTO # undef OPENSSL_EXTERN # define OPENSSL_EXTERN OPENSSL_EXPORT # endif typedef unsigned char DES_cblock [ 8 ] ; typedef unsigned char const_DES_cblock [ 8 ] ; typedef struct DES_ks { union { DES_cblock cblock ; DES_LONG deslong [ 2 ] ; } ks [ 1 6 ] ; } DES_key_schedule ; # define)",
    "insertText": "DES_KEY_SZ(sizeof(DES_cblock)) # define DES_SCHEDULE_SZ (sizeof(DES_key_schedule)) # define DES_ENCRYPT 1 # define DES_DECRYPT 0 # define DES_CBC_MODE 0 # define DES_PCBC_MODE 1 # define DES_ecb2_encrypt(i,o,k1,k2,e) \\ DES_ecb3_encrypt((i),(o),(k1),(k2),(k1),(e)) # define DES_ede2_cbc_encrypt(i,o,l,k1,k2,iv,e) \\ DES_ede3_cbc_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(e)) # define DES_ede2_cfb64_encrypt(i,o,l,k1,k2,iv,n,e) \\ DES_ede3_cfb64_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(n),(e)) # define DES_ede2_ofb64_encrypt(i,o,l,k1,k2,iv,n) \\ DES_ede3_ofb64_encrypt((i),(o),(l),(k1),(k2),(k1),(iv),(n)) OPENSSL_DECLARE_GLOBAL(int, DES_check_key)"
  },
  {
    "label": "OPENSSL_GLOBAL_REF()",
    "kind": "Method",
    "detail": "Function (# define DES_check_key)",
    "insertText": "OPENSSL_GLOBAL_REF(DES_check_key) const char *DES_options(void)"
  },
  {
    "label": "DES_ecb3_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ecb3_encrypt(const_DES_cblock *input, DES_cblock *output, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3, int enc)"
  },
  {
    "label": "DES_cbc_cksum()",
    "kind": "Method",
    "detail": "Function (DES_LONG)",
    "insertText": "DES_cbc_cksum(const unsigned char *input, DES_cblock *output, long length, DES_key_schedule *schedule, const_DES_cblock *ivec)"
  },
  {
    "label": "DES_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_cbc_encrypt(const unsigned char *input, unsigned char *output, long length, DES_key_schedule *schedule, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ncbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ncbc_encrypt(const unsigned char *input, unsigned char *output, long length, DES_key_schedule *schedule, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_xcbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_xcbc_encrypt(const unsigned char *input, unsigned char *output, long length, DES_key_schedule *schedule, DES_cblock *ivec, const_DES_cblock *inw, const_DES_cblock *outw, int enc)"
  },
  {
    "label": "DES_cfb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_cfb_encrypt(const unsigned char *in, unsigned char *out, int numbits, long length, DES_key_schedule *schedule, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ecb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ecb_encrypt(const_DES_cblock *input, DES_cblock *output, DES_key_schedule *ks, int enc)"
  },
  {
    "label": "DES_encrypt1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_encrypt1(DES_LONG *data, DES_key_schedule *ks, int enc)"
  },
  {
    "label": "DES_encrypt2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_encrypt2(DES_LONG *data, DES_key_schedule *ks, int enc)"
  },
  {
    "label": "DES_encrypt3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_encrypt3(DES_LONG *data, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3)"
  },
  {
    "label": "DES_decrypt3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_decrypt3(DES_LONG *data, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3)"
  },
  {
    "label": "DES_ede3_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_cbc_encrypt(const unsigned char *input, unsigned char *output, long length, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ede3_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_cfb64_encrypt(const unsigned char *in, unsigned char *out, long length, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3, DES_cblock *ivec, int *num, int enc)"
  },
  {
    "label": "DES_ede3_cfb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_cfb_encrypt(const unsigned char *in, unsigned char *out, int numbits, long length, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ede3_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_ofb64_encrypt(const unsigned char *in, unsigned char *out, long length, DES_key_schedule *ks1, DES_key_schedule *ks2, DES_key_schedule *ks3, DES_cblock *ivec, int *num)"
  },
  {
    "label": "DES_fcrypt()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "DES_fcrypt(const char *buf, const char *salt, char *ret)"
  },
  {
    "label": "DES_crypt()",
    "kind": "Method",
    "detail": "Function (char*)",
    "insertText": "DES_crypt(const char *buf, const char *salt)"
  },
  {
    "label": "DES_ofb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ofb_encrypt(const unsigned char *in, unsigned char *out, int numbits, long length, DES_key_schedule *schedule, DES_cblock *ivec)"
  },
  {
    "label": "DES_pcbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_pcbc_encrypt(const unsigned char *input, unsigned char *output, long length, DES_key_schedule *schedule, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_quad_cksum()",
    "kind": "Method",
    "detail": "Function (DES_LONG)",
    "insertText": "DES_quad_cksum(const unsigned char *input, DES_cblock output[], long length, int out_count, DES_cblock *seed)"
  },
  {
    "label": "DES_random_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_random_key(DES_cblock *ret)"
  },
  {
    "label": "DES_set_odd_parity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_set_odd_parity(DES_cblock *key)"
  },
  {
    "label": "DES_check_key_parity()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_check_key_parity(const_DES_cblock *key)"
  },
  {
    "label": "DES_is_weak_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_is_weak_key(const_DES_cblock *key)"
  },
  {
    "label": "DES_set_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_set_key(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_key_sched()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_key_sched(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_set_key_checked()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_set_key_checked(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_set_key_unchecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_set_key_unchecked(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_string_to_key()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_string_to_key(const char *str, DES_cblock *key)"
  },
  {
    "label": "DES_string_to_2keys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_string_to_2keys(const char *str, DES_cblock *key1, DES_cblock *key2)"
  },
  {
    "label": "DES_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_cfb64_encrypt(const unsigned char *in, unsigned char *out, long length, DES_key_schedule *schedule, DES_cblock *ivec, int *num, int enc)"
  },
  {
    "label": "DES_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ofb64_encrypt(const unsigned char *in, unsigned char *out, long length, DES_key_schedule *schedule, DES_cblock *ivec, int *num)"
  }
]