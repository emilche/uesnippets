[
  {
    "label": "DES_ks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DES_ks"
  },
  {
    "label": "DES_ecb3_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ecb3_encrypt(const_DES_cblock *input, DES_cblock *output,\n                      DES_key_schedule *ks1, DES_key_schedule *ks2,\n                      DES_key_schedule *ks3, int enc)"
  },
  {
    "label": "DES_cbc_cksum()",
    "kind": "Method",
    "detail": "Function (DES_LONG)",
    "insertText": "DES_cbc_cksum(const unsigned char *input, DES_cblock *output,\n                       long length, DES_key_schedule *schedule,\n                       const_DES_cblock *ivec)"
  },
  {
    "label": "DES_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_cbc_encrypt(const unsigned char *input, unsigned char *output,\n                     long length, DES_key_schedule *schedule,\n                     DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ncbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ncbc_encrypt(const unsigned char *input, unsigned char *output,\n                      long length, DES_key_schedule *schedule,\n                      DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_xcbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_xcbc_encrypt(const unsigned char *input, unsigned char *output,\n                      long length, DES_key_schedule *schedule,\n                      DES_cblock *ivec, const_DES_cblock *inw,\n                      const_DES_cblock *outw, int enc)"
  },
  {
    "label": "DES_cfb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_cfb_encrypt(const unsigned char *in, unsigned char *out, int numbits,\n                     long length, DES_key_schedule *schedule,\n                     DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ecb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ecb_encrypt(const_DES_cblock *input, DES_cblock *output,\n                     DES_key_schedule *ks, int enc)"
  },
  {
    "label": "DES_encrypt1()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_encrypt1(DES_LONG *data, DES_key_schedule *ks, int enc)"
  },
  {
    "label": "DES_encrypt2()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_encrypt2(DES_LONG *data, DES_key_schedule *ks, int enc)"
  },
  {
    "label": "DES_encrypt3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_encrypt3(DES_LONG *data, DES_key_schedule *ks1,\n                  DES_key_schedule *ks2, DES_key_schedule *ks3)"
  },
  {
    "label": "DES_decrypt3()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_decrypt3(DES_LONG *data, DES_key_schedule *ks1,\n                  DES_key_schedule *ks2, DES_key_schedule *ks3)"
  },
  {
    "label": "DES_ede3_cbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_cbc_encrypt(const unsigned char *input, unsigned char *output,\n                          long length,\n                          DES_key_schedule *ks1, DES_key_schedule *ks2,\n                          DES_key_schedule *ks3, DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ede3_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_cfb64_encrypt(const unsigned char *in, unsigned char *out,\n                            long length, DES_key_schedule *ks1,\n                            DES_key_schedule *ks2, DES_key_schedule *ks3,\n                            DES_cblock *ivec, int *num, int enc)"
  },
  {
    "label": "DES_ede3_cfb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_cfb_encrypt(const unsigned char *in, unsigned char *out,\n                          int numbits, long length, DES_key_schedule *ks1,\n                          DES_key_schedule *ks2, DES_key_schedule *ks3,\n                          DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_ede3_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ede3_ofb64_encrypt(const unsigned char *in, unsigned char *out,\n                            long length, DES_key_schedule *ks1,\n                            DES_key_schedule *ks2, DES_key_schedule *ks3,\n                            DES_cblock *ivec, int *num)"
  },
  {
    "label": "DES_ofb_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ofb_encrypt(const unsigned char *in, unsigned char *out, int numbits,\n                     long length, DES_key_schedule *schedule,\n                     DES_cblock *ivec)"
  },
  {
    "label": "DES_pcbc_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_pcbc_encrypt(const unsigned char *input, unsigned char *output,\n                      long length, DES_key_schedule *schedule,\n                      DES_cblock *ivec, int enc)"
  },
  {
    "label": "DES_quad_cksum()",
    "kind": "Method",
    "detail": "Function (DES_LONG)",
    "insertText": "DES_quad_cksum(const unsigned char *input, DES_cblock output[],\n                        long length, int out_count, DES_cblock *seed)"
  },
  {
    "label": "DES_random_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_random_key(DES_cblock *ret)"
  },
  {
    "label": "DES_set_odd_parity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_set_odd_parity(DES_cblock *key)"
  },
  {
    "label": "DES_check_key_parity()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_check_key_parity(const_DES_cblock *key)"
  },
  {
    "label": "DES_is_weak_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_is_weak_key(const_DES_cblock *key)"
  },
  {
    "label": "DES_set_key()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_set_key(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_key_sched()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_key_sched(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_set_key_checked()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "DES_set_key_checked(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_set_key_unchecked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_set_key_unchecked(const_DES_cblock *key, DES_key_schedule *schedule)"
  },
  {
    "label": "DES_string_to_key()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_string_to_key(const char *str, DES_cblock *key)"
  },
  {
    "label": "DES_string_to_2keys()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_string_to_2keys(const char *str, DES_cblock *key1, DES_cblock *key2)"
  },
  {
    "label": "DES_cfb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_cfb64_encrypt(const unsigned char *in, unsigned char *out,\n                       long length, DES_key_schedule *schedule,\n                       DES_cblock *ivec, int *num, int enc)"
  },
  {
    "label": "DES_ofb64_encrypt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DES_ofb64_encrypt(const unsigned char *in, unsigned char *out,\n                       long length, DES_key_schedule *schedule,\n                       DES_cblock *ivec, int *num)"
  }
]