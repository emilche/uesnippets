[
  {
    "label": "FModifyBoneEditMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FModifyBoneEditMode"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "FAnimNode_Base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Base"
  },
  {
    "label": "FAnimNode_ModifyBone",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_ModifyBone"
  },
  {
    "label": "UAnimGraphNode_ModifyBone",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_ModifyBone"
  },
  {
    "label": "FModifyBoneEditMode()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AnimNodeEditMode . h \" # include \" BoneControllers / AnimNode_ModifyBone . h \" # include \" Math / MathFwd . h \" # include \" Math / Rotator . h \" # include \" UObject / NameTypes . h \" # include \" UnrealWidgetFwd . h \" class FModifyBoneEditMode : public FAnimNodeEditMode { public :)",
    "insertText": "FModifyBoneEditMode()"
  },
  {
    "label": "EnterMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnterMode(class UAnimGraphNode_Base* InEditorNode, struct FAnimNode_Base* InRuntimeNode)"
  },
  {
    "label": "ExitMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitMode()"
  },
  {
    "label": "GetWidgetCoordinateSystem()",
    "kind": "Method",
    "detail": "Function (ECoordSystem)",
    "insertText": "GetWidgetCoordinateSystem()"
  },
  {
    "label": "GetWidgetLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetWidgetLocation()"
  },
  {
    "label": "GetWidgetMode()",
    "kind": "Method",
    "detail": "Function (UE::Widget::EWidgetMode)",
    "insertText": "GetWidgetMode()"
  },
  {
    "label": "ChangeToNextWidgetMode()",
    "kind": "Method",
    "detail": "Function (UE::Widget::EWidgetMode)",
    "insertText": "ChangeToNextWidgetMode(UE::Widget::EWidgetMode InCurWidgetMode)"
  },
  {
    "label": "SetWidgetMode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetWidgetMode(UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "UsesTransformWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesTransformWidget(UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "GetSelectedBone()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetSelectedBone()"
  },
  {
    "label": "DoTranslation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoTranslation(FVector& InTranslation)"
  },
  {
    "label": "DoRotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoRotation(FRotator& InRotation)"
  },
  {
    "label": "DoScale()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DoScale(FVector& InScale)"
  },
  {
    "label": "ShouldDrawWidget()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDrawWidget()"
  },
  {
    "label": "FindValidWidgetMode()",
    "kind": "Method",
    "detail": "Function (private : UE::Widget::EWidgetMode)",
    "insertText": "FindValidWidgetMode(UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "GetBoneModificationMode()",
    "kind": "Method",
    "detail": "Function (EBoneModificationMode)",
    "insertText": "GetBoneModificationMode(UE::Widget::EWidgetMode InWidgetMode)"
  },
  {
    "label": "GetNextWidgetMode()",
    "kind": "Method",
    "detail": "Function (UE::Widget::EWidgetMode)",
    "insertText": "GetNextWidgetMode(UE::Widget::EWidgetMode InWidgetMode)"
  }
]