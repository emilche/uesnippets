[
  {
    "label": "UReplicationSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UReplicationSystem"
  },
  {
    "label": "FFragmentRegistrationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FFragmentRegistrationContext"
  },
  {
    "label": "FNetSerializationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetSerializationContext"
  },
  {
    "label": "FReplicationStateDescriptor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationStateDescriptor"
  },
  {
    "label": "FReplicationStateDescriptorRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationStateDescriptorRegistry"
  },
  {
    "label": "FFragmentRegistrationContextPrivateAccessor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFragmentRegistrationContextPrivateAccessor"
  },
  {
    "label": "FReplicationStateOwnerCollector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationStateOwnerCollector"
  },
  {
    "label": "FReplicationStateApplyContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationStateApplyContext"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FReplicationFragment",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReplicationFragment"
  },
  {
    "label": "FReplicationFragmentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReplicationFragmentInfo"
  },
  {
    "label": "FReplicationStateOwnerCollector()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Misc / CoreMiscDefines . h \" # include \" Misc / EnumClassFlags . h \" class UReplicationSystem ; namespace UE::Net { class FFragmentRegistrationContext ; class FNetSerializationContext ; struct FReplicationStateDescriptor ; namespace Private { class FReplicationStateDescriptorRegistry ; struct FFragmentRegistrationContextPrivateAccessor ; } } namespace UE::Net { class FReplicationStateOwnerCollector { public :)",
    "insertText": "FReplicationStateOwnerCollector(UObject** InOwners, uint32 InMaxOwnerCount) : Owners(InOwners) , OwnerCount(0) , MaxOwnerCount(InMaxOwnerCount)"
  },
  {
    "label": "AddOwner()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddOwner(UObject* Object)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (OwnerCount = 0 ; } private : UObject** Owners ; uint32 OwnerCount ; const uint32 MaxOwnerCount ; } ; struct FReplicationStateApplyContext { const FReplicationStateDescriptor* Descriptor ; FNetSerializationContext* NetSerializationContext ; union FStateBufferData { uint8* ExternalStateBuffer ; struct { const uint32* ChangeMaskData ; const uint8* RawStateBuffer ; } ; } ; FStateBufferData StateBufferData ; uint32 bIsInit : 1 ; uint32 bHasUnresolvableReferences : 1 ; uint32 bMightHaveUnresolvableInitReferences : 1 ; } ; enum class EReplicationStateToStringFlags : uint32 { None = 0 U,OnlyIncludeDirtyMembers = 1 U,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EReplicationStateToStringFlags)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum class EReplicationFragmentTraits : uint32 { None = 0,HasInterpolation = 1,HasRepNotifies = HasInterpolation<<1,KeepPreviousState = HasRepNotifies<<1,DeleteWithInstanceProtocol = KeepPreviousState<<1,HasPersistentTargetStateBuffer = DeleteWithInstanceProtocol<<1,CanReplicate = HasPersistentTargetStateBuffer<<1,CanReceive = CanReplicate<<1,NeedsPoll = CanReceive<<1,NeedsLegacyCallbacks = NeedsPoll<<1,NeedsPreSendUpdate = NeedsLegacyCallbacks<<1,NeedsWorldLocationUpdate = NeedsPreSendUpdate<<1,HasPushBasedDirtiness = NeedsWorldLocationUpdate<<1,HasPropertyReplicationState = HasPushBasedDirtiness<<1,HasObjectReference = HasPropertyReplicationState<<1,SupportsPartialDequantizedState = HasObjectReference<<1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EReplicationFragmentTraits)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (enum class EReplicationFragmentPollFlags : uint32 { None = 0,ForceRefreshCachedObjectReferencesAfterGC = 1,PollAllState = ForceRefreshCachedObjectReferencesAfterGC<<1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EReplicationFragmentPollFlags)"
  },
  {
    "label": "FReplicationFragment()",
    "kind": "Method",
    "detail": "Function (class FReplicationFragment { public :)",
    "insertText": "FReplicationFragment(const FReplicationFragment&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FReplicationFragment&)",
    "insertText": "operator(const FReplicationFragment&)"
  },
  {
    "label": "FReplicationFragment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FReplicationFragment(EReplicationFragmentTraits InTraits) : Traits(InTraits)"
  },
  {
    "label": "FReplicationFragment()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FReplicationFragment()"
  },
  {
    "label": "GetTraits()",
    "kind": "Method",
    "detail": "Function (} EReplicationFragmentTraits)",
    "insertText": "GetTraits()"
  },
  {
    "label": "CollectOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectOwner(FReplicationStateOwnerCollector* Owners)"
  },
  {
    "label": "CallRepNotifies()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "CallRepNotifies(FReplicationStateApplyContext& Context)"
  },
  {
    "label": "PollReplicatedState()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "PollReplicatedState(EReplicationFragmentPollFlags PollOption = EReplicationFragmentPollFlags::PollAllState)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} ; protected : EReplicationFragmentTraits Traits ; } ; enum class EFragmentRegistrationFlags : uint32 { None = 0 U,RegisterRPCsOnly = 1 U,InitializeDefaultStateFromClassDefaults = RegisterRPCsOnly<<1 U,AllowFastArraysWithAdditionalProperties = InitializeDefaultStateFromClassDefaults<<1 U,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EFragmentRegistrationFlags)"
  },
  {
    "label": "FFragmentRegistrationContext()",
    "kind": "Method",
    "detail": "Function (struct FReplicationFragmentInfo { const FReplicationStateDescriptor* Descriptor = nullptr ; void* SrcReplicationStateBuffer = nullptr ; FReplicationFragment* Fragment = nullptr ; } ; typedef TArray<FReplicationFragmentInfo,TInlineAllocator<3 2>> FReplicationFragments ; class FFragmentRegistrationContext { public :)",
    "insertText": "FFragmentRegistrationContext(Private::FReplicationStateDescriptorRegistry* InReplicationStateRegistry, UReplicationSystem* InReplicationSystem, const EReplicationFragmentTraits InFragmentTraits) : ReplicationStateRegistry(InReplicationStateRegistry) , ReplicationSystem(InReplicationSystem) , FragmentTraits(InFragmentTraits)"
  },
  {
    "label": "GetFragmentTraits()",
    "kind": "Method",
    "detail": "Function (} const EReplicationFragmentTraits)",
    "insertText": "GetFragmentTraits()"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Fragments .)",
    "insertText": "Add({ Descriptor, SrcReplicationStateBuffer, Fragment })"
  },
  {
    "label": "SetIsFragmentlessNetObject()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIsFragmentlessNetObject(bool bIsFragmentless)"
  },
  {
    "label": "IsFragmentlessNetObject()",
    "kind": "Method",
    "detail": "Function (bIsAFragmentlessNetObject = bIsFragmentless ; } bool)",
    "insertText": "IsFragmentlessNetObject()"
  },
  {
    "label": "NumFragments()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "NumFragments()"
  }
]