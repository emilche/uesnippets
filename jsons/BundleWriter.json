[
  {
    "label": "FPacketWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPacketWriter"
  },
  {
    "label": "HORDE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "HORDE_API"
  },
  {
    "label": "FPendingExportHandleData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPendingExportHandleData"
  },
  {
    "label": "FPendingPacketHandleData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPendingPacketHandleData"
  },
  {
    "label": "FPendingBundleHandleData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPendingBundleHandleData"
  },
  {
    "label": "FBundleWriter()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Containers / Utf8String . h \" # include \" Storage / StorageClient . h \" # include \" Storage / BlobWriter . h \" # include \" Storage / ChunkedBufferWriter . h \" # include \" Storage / Clients / BundleStorageClient . h \" # include \" Storage / Clients / KeyValueStorageClient . h \" class FPacketWriter ; class FBundleWriter final : public FBlobWriter { public :)",
    "insertText": "FBundleWriter(TSharedRef<FKeyValueStorageClient> InStorageClient, FUtf8String InBasePath, const FBundleOptions& InOptions)"
  },
  {
    "label": "FBundleWriter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FBundleWriter()"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "Fork()",
    "kind": "Method",
    "detail": "Function (TUniquePtr<FBlobWriter>)",
    "insertText": "Fork()"
  },
  {
    "label": "AddAlias()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAlias(const FAliasInfo& AliasInfo)"
  },
  {
    "label": "AddImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddImport(FBlobHandle Target)"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddRef(const FRefName& RefName, const FRefOptions& Options)"
  },
  {
    "label": "CompleteBlob()",
    "kind": "Method",
    "detail": "Function (FBlobHandle)",
    "insertText": "CompleteBlob(const FBlobType& InType)"
  },
  {
    "label": "GetOutputBufferAsSpan()",
    "kind": "Method",
    "detail": "Function (FMutableMemoryView)",
    "insertText": "GetOutputBufferAsSpan(size_t UsedSize, size_t DesiredSize)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(size_t Size)"
  },
  {
    "label": "StartPacket()",
    "kind": "Method",
    "detail": "Function (private : class FPendingExportHandleData ; class FPendingPacketHandleData ; class FPendingBundleHandleData ; TSharedRef<FKeyValueStorageClient> StorageClient ; FUtf8String BasePath ; FBundleOptions Options ; TBlobHandle<FPendingPacketHandleData> CurrentPacketHandle ; TUniquePtr<FPacketWriter> PacketWriter ; TBlobHandle<FPendingBundleHandleData> CurrentBundleHandle ; FChunkedBufferWriter CompressedPacketWriter ; TArray<FBlobHandle> CurrentBundleImports ; TArray<FBlobHandle> BundleReferences ; void)",
    "insertText": "StartPacket()"
  },
  {
    "label": "FinishPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishPacket()"
  }
]