[
  {
    "label": "FPropertyRestriction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyRestriction"
  },
  {
    "label": "IDetailLayoutBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailLayoutBuilder"
  },
  {
    "label": "UMaterialExpressionTextureBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialExpressionTextureBase"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FMaterialExpressionTextureBaseDetails",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMaterialExpressionTextureBaseDetails"
  },
  {
    "label": "MakeInstance()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Delegates / IDelegateInstance . h \" # include \" IDetailCustomization . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FPropertyRestriction ; class IDetailLayoutBuilder ; class UMaterialExpressionTextureBase ; class UObject ; struct FPropertyChangedEvent ; class FMaterialExpressionTextureBaseDetails : public IDetailCustomization { public : TSharedRef<IDetailCustomization>)",
    "insertText": "MakeInstance()"
  },
  {
    "label": "FMaterialExpressionTextureBaseDetails()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FMaterialExpressionTextureBaseDetails()"
  },
  {
    "label": "CustomizeDetails()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CustomizeDetails(IDetailLayoutBuilder& DetailLayout)"
  },
  {
    "label": "OnTextureChanged()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPropertyRestriction> EnumRestriction ; TWeakObjectPtr<UMaterialExpressionTextureBase> Expression ; FDelegateHandle DelegateHandle ; void)",
    "insertText": "OnTextureChanged()"
  },
  {
    "label": "OnPropertyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPropertyChanged(UObject* ObjectBeingModified, FPropertyChangedEvent& PropertyChangedEvent)"
  }
]