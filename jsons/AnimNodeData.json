[
  {
    "label": "IAnimClassInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimClassInterface"
  },
  {
    "label": "FAnimNode_Base",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_Base"
  },
  {
    "label": "FAnimNodeData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNodeData"
  },
  {
    "label": "FNodeDataId",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeDataId"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FAnimBlueprintCompilerContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimBlueprintCompilerContext"
  },
  {
    "label": "UE",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "UE"
  },
  {
    "label": "FAnimNodeStructData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNodeStructData"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimNodeData . generated . h \" class IAnimClassInterface ; struct FAnimNode_Base ; struct FAnimNodeData ; # define ANIM_NODE_DATA_INVALID_ENTRY 0 xffffffff # define ANIM_NODE_DATA_INSTANCE_DATA_FLAG 0 x80000000 # define ANIM_NODE_DATA_INSTANCE_DATA_MASK ~ ANIM_NODE_DATA_INSTANCE_DATA_FLAG namespace UE { namespace Anim { struct FNodeDataId { struct::FAnimNodeData ; struct::FAnimNode_Base ; bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "FNodeDataId()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FNodeDataId(FName InPropertyName, const FAnimNode_Base* InNode, const UScriptStruct* InNodeStruct)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (private : FName Id = NAME_None ; int32 Index = INDEX_NONE ; # if WITH_EDITORONLY_DATA const UScriptStruct* Struct = nullptr ; const FProperty* Property = nullptr ; # endif } ; } })",
    "insertText": "UENUM()"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (None = 0 x00000000,HasInitialUpdateFunction = 0 x00000001,HasBecomeRelevantFunction = 0 x00000002,HasUpdateFunction = 0 x00000004,AllFunctions = HasInitialUpdateFunction | HasBecomeRelevantFunction | HasUpdateFunction,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EAnimNodeDataFlags)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API const void* GetData(UE::Anim::FNodeDataId InId, const FAnimNode_Base* InNode, const UObject* InCurrentObject = nullptr)"
  },
  {
    "label": "GetMutableData()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void*)",
    "insertText": "GetMutableData(UE::Anim::FNodeDataId InId, FAnimNode_Base* InNode, UObject* InCurrentObject = nullptr)"
  },
  {
    "label": "GetInstanceData()",
    "kind": "Method",
    "detail": "Function (# endif void*)",
    "insertText": "GetInstanceData(UE::Anim::FNodeDataId InId, FAnimNode_Base* InNode, UObject* InCurrentObject = nullptr)"
  },
  {
    "label": "GetAnimClassInterface()",
    "kind": "Method",
    "detail": "Function (const IAnimClassInterface&)",
    "insertText": "GetAnimClassInterface()"
  },
  {
    "label": "SetNodeFlags()",
    "kind": "Method",
    "detail": "Function (} private : class FAnimBlueprintCompilerContext ; struct UE::Anim::FNodeDataId ; void)",
    "insertText": "SetNodeFlags(EAnimNodeDataFlags InFlags)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FAnimNodeStructData()"
  },
  {
    "label": "FAnimNodeStructData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimNodeStructData(const UScriptStruct* InNodeType)"
  },
  {
    "label": "GetPropertyIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPropertyIndex(FName InPropertyName)"
  },
  {
    "label": "GetNumProperties()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumProperties()"
  },
  {
    "label": "DoesLayoutMatch()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA bool)",
    "insertText": "DoesLayoutMatch(const FAnimNodeStructData& InOther)"
  }
]