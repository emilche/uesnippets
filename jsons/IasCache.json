[
  {
    "label": "FIoBuffer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoBuffer"
  },
  {
    "label": "FIoReadOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIoReadOptions"
  },
  {
    "label": "FIoHash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIoHash"
  },
  {
    "label": "IIasCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IIasCache"
  },
  {
    "label": "FIasCacheConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FIasCacheConfig"
  },
  {
    "label": "FRate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRate"
  },
  {
    "label": "FDemand",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDemand"
  },
  {
    "label": "IIasCache()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / StringView . h \" # include \" IO / IoStatus . h \" # include \" Memory / MemoryFwd . h \" # include \" Tasks / Task . h \" # include \" Templates / UniquePtr . h \" class FIoBuffer ; class FIoReadOptions ; struct FIoHash ; namespace UE::IoStore { class IIasCache { public : ~)",
    "insertText": "IIasCache()"
  },
  {
    "label": "Abandon()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Abandon()"
  },
  {
    "label": "ContainsChunk()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsChunk(const FIoHash& Key)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (EIoErrorCode)",
    "insertText": "Get(const FIoHash& Key, FIoBuffer& OutData)"
  },
  {
    "label": "Materialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Materialize(const FIoHash& Key, FIoBuffer& Dest, EIoErrorCode& Status, UE::Tasks::FTaskEvent DoneEvent)"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel(FIoBuffer& GivenDest)"
  },
  {
    "label": "Put()",
    "kind": "Method",
    "detail": "Function (FIoStatus)",
    "insertText": "Put(const FIoHash& Key, FIoBuffer& Data)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} ; struct FIasCacheConfig { struct FRate { uint32 Allowance = 1 6<<2 0 ; uint32 Ops = 3 2 ; uint32 Seconds = 6 0 ; } ; struct FDemand { uint8 Threshold = 3 0 ; uint8 Boost = 6 0 ; uint8 SuperBoost = 8 7 ; } ; FStringView Name =)",
    "insertText": "TEXT(\"ias\")"
  },
  {
    "label": "MakeIasCache()",
    "kind": "Method",
    "detail": "Function (uint64 DiskQuota = 5 1 2 ull<<2 0 ; uint32 MemoryQuota = 2<<2 0 ; uint32 JournalQuota = 4<<2 0 ; uint32 JournalMagic = 0 ; FRate WriteRate ; FDemand Demand ; bool DropCache = false ; } ; TUniquePtr<IIasCache>)",
    "insertText": "MakeIasCache(const TCHAR* RootDir, const FIasCacheConfig& Config)"
  }
]