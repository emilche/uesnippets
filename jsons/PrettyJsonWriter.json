[
  {
    "label": "TPrettyJsonPrintPolicySingleNewLine",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TPrettyJsonPrintPolicySingleNewLine"
  },
  {
    "label": "FPrettyJsonWriter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPrettyJsonWriter"
  },
  {
    "label": "WriteLineTerminator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Serialization / JsonWriter . h \" namespace UE::Private { struct TPrettyJsonPrintPolicySingleNewLine : public TPrettyJsonPrintPolicy<ANSICHAR> { void)",
    "insertText": "WriteLineTerminator(FArchive* Stream)"
  },
  {
    "label": "WriteString()",
    "kind": "Method",
    "detail": "Function (TJsonPrintPolicy<ANSICHAR)",
    "insertText": "WriteString(Stream, FStringView(TEXT(\"\\n\")))"
  },
  {
    "label": "FPrettyJsonWriter()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPrettyJsonWriter : public TJsonWriter<ANSICHAR,TPrettyJsonPrintPolicySingleNewLine> { using Super = TJsonWriter<ANSICHAR,TPrettyJsonPrintPolicySingleNewLine> ; using PrintPolicy = TPrettyJsonPrintPolicySingleNewLine ; using CharType = ANSICHAR ;)",
    "insertText": "FPrettyJsonWriter(FArchive* const InStream, int32 InitialIndentLevel)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FPrettyJsonWriter>)",
    "insertText": "Create(FArchive* const InStream, int32 InitialIndent = 0)"
  },
  {
    "label": "WriteJsonRaw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteJsonRaw(FAnsiStringView Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(FText Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(const FString& Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(FAnsiStringView UTF8Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(FUtf8StringView UTF8Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(int16 Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(uint16 Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteValueInline(uint32 Value)"
  },
  {
    "label": "WriteValueInline()",
    "kind": "Method",
    "detail": "Function (template<T> void)",
    "insertText": "WriteValueInline(T Value)"
  },
  {
    "label": "WriteCommaAndNewlineIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteCommaAndNewlineIfNeeded()"
  },
  {
    "label": "WriteValueOnly()",
    "kind": "Method",
    "detail": "Function (PreviousTokenWritten =)",
    "insertText": "WriteValueOnly(Value)"
  },
  {
    "label": "WriteUtf8Value()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "WriteUtf8Value(FStringView Identifier, FUtf8StringView UTF8Value)"
  },
  {
    "label": "WriteObjectStartInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteObjectStartInline()"
  },
  {
    "label": "WriteArrayStartInline()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteArrayStartInline()"
  },
  {
    "label": "WriteNewlineAndArrayEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteNewlineAndArrayEnd()"
  },
  {
    "label": "WriteLineTerminator()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteLineTerminator()"
  },
  {
    "label": "HACK_SetPreviousTokenWritten()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HACK_SetPreviousTokenWritten()"
  }
]