[
  {
    "label": "FTriangleMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTriangleMesh"
  },
  {
    "label": "FXPBDAnisotropicEdgeSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXPBDAnisotropicEdgeSpringConstraints"
  },
  {
    "label": "FXPBDAnisotropicSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXPBDAnisotropicSpringConstraints"
  },
  {
    "label": "FXPBDAnisotropicAxialSpringConstraints",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FXPBDAnisotropicAxialSpringConstraints"
  },
  {
    "label": "MinStiffness()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / CollectionPropertyFacade . h \" # include \" Chaos / PBDAxialSpringConstraintsBase . h \" # include \" Chaos / PBDSpringConstraintsBase . h \" # include \" Chaos / PBDWeightMap . h \" # include \" Chaos / PBDFlatWeightMap . h \" namespace Chaos { class FTriangleMesh ; } namespace Chaos::Softs { class FXPBDAnisotropicEdgeSpringConstraints : public FPBDSpringConstraintsBase { typedef FPBDSpringConstraintsBase Base ; public : FSolverReal)",
    "insertText": "MinStiffness(FSolverReal)"
  },
  {
    "label": "MaxStiffness()",
    "kind": "Method",
    "detail": "Function (FSolverReal)",
    "insertText": "MaxStiffness(FSolverReal)"
  },
  {
    "label": "MinDampingRatio()",
    "kind": "Method",
    "detail": "Function (FSolverReal)",
    "insertText": "MinDampingRatio(FSolverReal)"
  },
  {
    "label": "MaxDampingRatio()",
    "kind": "Method",
    "detail": "Function (FSolverReal)",
    "insertText": "MaxDampingRatio(FSolverReal)"
  },
  {
    "label": "MinWarpWeftScale()",
    "kind": "Method",
    "detail": "Function (FSolverReal)",
    "insertText": "MinWarpWeftScale(FSolverReal)"
  },
  {
    "label": "MaxWarpWeftScale()",
    "kind": "Method",
    "detail": "Function (FSolverReal)",
    "insertText": "MaxWarpWeftScale(FSolverReal)"
  },
  {
    "label": "FXPBDAnisotropicEdgeSpringConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FXPBDAnisotropicEdgeSpringConstraints(const FSolverParticlesRange& Particles, const FTriangleMesh& TriangleMesh, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, bool bUse3dRestLengths, const TConstArrayView<FRealSingle>& StiffnessWarpMultipliers, const TConstArrayView<FRealSingle>& StiffnessWeftMultipliers, const TConstArrayView<FRealSingle>& StiffnessBiasMultipliers, const TConstArrayView<FRealSingle>& DampingMultipliers, const TConstArrayView<FRealSingle>& WarpScaleMultipliers, const TConstArrayView<FRealSingle>& WeftScaleMultipliers, const FSolverVec2& InStiffnessWarp, const FSolverVec2& InStiffnessWeft, const FSolverVec2& InStiffnessBias, const FSolverVec2& InDampingRatio, const FSolverVec2& InWarpScale, const FSolverVec2& InWeftScale)"
  },
  {
    "label": "FXPBDAnisotropicEdgeSpringConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FXPBDAnisotropicEdgeSpringConstraints(const FSolverParticles& InParticles, int32 InParticleOffset, int32 InParticleCount, const FTriangleMesh& TriangleMesh, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, bool bUse3dRestLengths, const TConstArrayView<FRealSingle>& StiffnessWarpMultipliers, const TConstArrayView<FRealSingle>& StiffnessWeftMultipliers, const TConstArrayView<FRealSingle>& StiffnessBiasMultipliers, const TConstArrayView<FRealSingle>& DampingMultipliers, const TConstArrayView<FRealSingle>& WarpScaleMultipliers, const TConstArrayView<FRealSingle>& WeftScaleMultipliers, const FSolverVec2& InStiffnessWarp, const FSolverVec2& InStiffnessWeft, const FSolverVec2& InStiffnessBias, const FSolverVec2& InDampingRatio, const FSolverVec2& InWarpScale, const FSolverVec2& InWeftScale)"
  },
  {
    "label": "FXPBDAnisotropicEdgeSpringConstraints()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXPBDAnisotropicEdgeSpringConstraints()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Init()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (Lambdas .)",
    "insertText": "Reset()"
  },
  {
    "label": "AddZeroed()",
    "kind": "Method",
    "detail": "Function (Lambdas .)",
    "insertText": "AddZeroed(Constraints.Num())"
  },
  {
    "label": "ApplyProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ApplyProperties(const FSolverReal , const int32)"
  },
  {
    "label": "ApplyValues()",
    "kind": "Method",
    "detail": "Function (bool bWarpScaleChanged = false ; WarpScale .)",
    "insertText": "ApplyValues(&bWarpScaleChanged)"
  },
  {
    "label": "ApplyValues()",
    "kind": "Method",
    "detail": "Function (bool bWeftScaleChanged = false ; WeftScale .)",
    "insertText": "ApplyValues(&bWeftScaleChanged)"
  },
  {
    "label": "UpdateDists()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateDists()"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (} } template<SolverParticlesOrRange> void)",
    "insertText": "Apply(SolverParticlesOrRange& Particles, const FSolverReal Dt)"
  },
  {
    "label": "UpdateLinearSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLinearSystem(const FSolverParticlesRange& Particles, const FSolverReal Dt, FEvolutionLinearSystem& LinearSystem)"
  },
  {
    "label": "GetConstraintsPerColorStartIndex()",
    "kind": "Method",
    "detail": "Function (const TArray<int32>&)",
    "insertText": "GetConstraintsPerColorStartIndex()"
  },
  {
    "label": "InitFromPatternData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitFromPatternData(bool bUse3dRestLengths, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, const FTriangleMesh& TriangleMesh)"
  },
  {
    "label": "ApplyHelper()",
    "kind": "Method",
    "detail": "Function (template<bool bDampingBefore,bool bSingleLambda,bool bSeparateStretch,bool bDampingAfter,SolverParticlesOrRange> void)",
    "insertText": "ApplyHelper(SolverParticlesOrRange& Particles, const FSolverReal Dt, const int32 ConstraintIndex, const FSolverVec3& StiffnessValue, const FSolverReal DampingRatioValue)"
  },
  {
    "label": "FXPBDAnisotropicAxialSpringConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FXPBDAnisotropicAxialSpringConstraints(const FSolverParticlesRange& Particles, const FTriangleMesh& TriangleMesh, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, bool bUse3dRestLengths, const TConstArrayView<FRealSingle>& StiffnessWarpMultipliers, const TConstArrayView<FRealSingle>& StiffnessWeftMultipliers, const TConstArrayView<FRealSingle>& StiffnessBiasMultipliers, const TConstArrayView<FRealSingle>& DampingMultipliers, const TConstArrayView<FRealSingle>& WarpScaleMultipliers, const TConstArrayView<FRealSingle>& WeftScaleMultipliers, const FSolverVec2& InStiffnessWarp, const FSolverVec2& InStiffnessWeft, const FSolverVec2& InStiffnessBias, const FSolverVec2& InDampingRatio, const FSolverVec2& InWarpScale, const FSolverVec2& InWeftScale)"
  },
  {
    "label": "FXPBDAnisotropicAxialSpringConstraints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FXPBDAnisotropicAxialSpringConstraints(const FSolverParticles& InParticles, int32 InParticleOffset, int32 InParticleCount, const FTriangleMesh& TriangleMesh, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, bool bUse3dRestLengths, const TConstArrayView<FRealSingle>& StiffnessWarpMultipliers, const TConstArrayView<FRealSingle>& StiffnessWeftMultipliers, const TConstArrayView<FRealSingle>& StiffnessBiasMultipliers, const TConstArrayView<FRealSingle>& DampingMultipliers, const TConstArrayView<FRealSingle>& WarpScaleMultipliers, const TConstArrayView<FRealSingle>& WeftScaleMultipliers, const FSolverVec2& InStiffnessWarp, const FSolverVec2& InStiffnessWeft, const FSolverVec2& InStiffnessBias, const FSolverVec2& InDampingRatio, const FSolverVec2& InWarpScale, const FSolverVec2& InWeftScale)"
  },
  {
    "label": "FXPBDAnisotropicAxialSpringConstraints()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FXPBDAnisotropicAxialSpringConstraints()"
  },
  {
    "label": "DefaultStiffness()",
    "kind": "Method",
    "detail": "Function (using Base::Constraints ; using Base::ParticleOffset ; using Base::ParticleCount ; using Base::Barys ; using Base::Dists ; FPBDFlatWeightMap StiffnessWarp ; FPBDFlatWeightMap StiffnessWeft ; FPBDFlatWeightMap StiffnessBias ; FPBDFlatWeightMap DampingRatio ; FPBDWeightMap WarpScale ; FPBDWeightMap WeftScale ; TArray<FSolverReal> Lambdas ; TArray<FSolverReal> LambdasDamping ; TArray<FSolverReal> BaseDists ; TArray<FSolverVec3> WarpWeftBiasBaseMultipliers ; TArray<FSolverVec2> WarpWeftScaleBaseMultipliers ; TArray<int32> ConstraintsPerColorStartIndex ; class FXPBDAnisotropicSpringConstraints ; } ; class FXPBDAnisotropicSpringConstraints final { public : FSolverReal)",
    "insertText": "DefaultStiffness(FSolverReal)"
  },
  {
    "label": "DefaultDamping()",
    "kind": "Method",
    "detail": "Function (FSolverReal)",
    "insertText": "DefaultDamping(FSolverReal)"
  },
  {
    "label": "DefaultWarpWeftScale()",
    "kind": "Method",
    "detail": "Function (bool bDefaultUse3dRestLengths = true ; FSolverReal)",
    "insertText": "DefaultWarpWeftScale(FSolverReal)"
  },
  {
    "label": "IsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEnabled(const FCollectionPropertyConstFacade& PropertyCollection)"
  },
  {
    "label": "FXPBDAnisotropicSpringConstraints()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FXPBDAnisotropicSpringConstraints(const FSolverParticlesRange& Particles, const FTriangleMesh& TriangleMesh, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps, const FCollectionPropertyConstFacade& PropertyCollection) : EdgeConstraints( Particles, TriangleMesh, FaceVertexPatternPositions, GetXPBDAnisoSpringUse3dRestLengths(PropertyCollection, bDefaultUse3dRestLengths), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWarpString(PropertyCollection, XPBDAnisoSpringStiffnessWarpName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWeftString(PropertyCollection, XPBDAnisoSpringStiffnessWeftName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessBiasString(PropertyCollection, XPBDAnisoSpringStiffnessBiasName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringDampingString(PropertyCollection, XPBDAnisoSpringDampingName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWarpScaleString(PropertyCollection, XPBDAnisoSpringWarpScaleName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWeftScaleString(PropertyCollection, XPBDAnisoSpringWeftScaleName.ToString())), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWarp(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWeft(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessBias(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringDamping(PropertyCollection, DefaultDamping)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWarpScale(PropertyCollection, DefaultWarpWeftScale)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWeftScale(PropertyCollection, DefaultWarpWeftScale))) , AxialConstraints( Particles, TriangleMesh, FaceVertexPatternPositions, GetXPBDAnisoSpringUse3dRestLengths(PropertyCollection, bDefaultUse3dRestLengths), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWarpString(PropertyCollection, XPBDAnisoSpringStiffnessWarpName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWeftString(PropertyCollection, XPBDAnisoSpringStiffnessWeftName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessBiasString(PropertyCollection, XPBDAnisoSpringStiffnessBiasName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringDampingString(PropertyCollection, XPBDAnisoSpringDampingName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWarpScaleString(PropertyCollection, XPBDAnisoSpringWarpScaleName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWeftScaleString(PropertyCollection, XPBDAnisoSpringWeftScaleName.ToString())), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWarp(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWeft(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessBias(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringDamping(PropertyCollection, DefaultDamping)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWarpScale(PropertyCollection, DefaultWarpWeftScale)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWeftScale(PropertyCollection, DefaultWarpWeftScale))) , XPBDAnisoSpringUse3dRestLengthsIndex(PropertyCollection) , XPBDAnisoSpringStiffnessWarpIndex(PropertyCollection) , XPBDAnisoSpringStiffnessWeftIndex(PropertyCollection) , XPBDAnisoSpringStiffnessBiasIndex(PropertyCollection) , XPBDAnisoSpringDampingIndex(PropertyCollection) , XPBDAnisoSpringWarpScaleIndex(PropertyCollection) , XPBDAnisoSpringWeftScaleIndex(PropertyCollection)"
  },
  {
    "label": "FXPBDAnisotropicSpringConstraints()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FXPBDAnisotropicSpringConstraints(const FSolverParticles& InParticles, int32 InParticleOffset, int32 InParticleCount, const FTriangleMesh& TriangleMesh, const TArray<TVec3<FVec2f>>& FaceVertexPatternPositions, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps, const FCollectionPropertyConstFacade& PropertyCollection) : EdgeConstraints( InParticles, InParticleOffset, InParticleCount, TriangleMesh, FaceVertexPatternPositions, GetXPBDAnisoSpringUse3dRestLengths(PropertyCollection, bDefaultUse3dRestLengths), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWarpString(PropertyCollection, XPBDAnisoSpringStiffnessWarpName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWeftString(PropertyCollection, XPBDAnisoSpringStiffnessWeftName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessBiasString(PropertyCollection, XPBDAnisoSpringStiffnessBiasName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringDampingString(PropertyCollection, XPBDAnisoSpringDampingName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWarpScaleString(PropertyCollection, XPBDAnisoSpringWarpScaleName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWeftScaleString(PropertyCollection, XPBDAnisoSpringWeftScaleName.ToString())), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWarp(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWeft(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessBias(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringDamping(PropertyCollection, DefaultDamping)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWarpScale(PropertyCollection, DefaultWarpWeftScale)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWeftScale(PropertyCollection, DefaultWarpWeftScale))) , AxialConstraints( InParticles, InParticleOffset, InParticleCount, TriangleMesh, FaceVertexPatternPositions, GetXPBDAnisoSpringUse3dRestLengths(PropertyCollection, bDefaultUse3dRestLengths), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWarpString(PropertyCollection, XPBDAnisoSpringStiffnessWarpName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessWeftString(PropertyCollection, XPBDAnisoSpringStiffnessWeftName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringStiffnessBiasString(PropertyCollection, XPBDAnisoSpringStiffnessBiasName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringDampingString(PropertyCollection, XPBDAnisoSpringDampingName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWarpScaleString(PropertyCollection, XPBDAnisoSpringWarpScaleName.ToString())), WeightMaps.FindRef(GetXPBDAnisoSpringWeftScaleString(PropertyCollection, XPBDAnisoSpringWeftScaleName.ToString())), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWarp(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessWeft(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringStiffnessBias(PropertyCollection, DefaultStiffness)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringDamping(PropertyCollection, DefaultDamping)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWarpScale(PropertyCollection, DefaultWarpWeftScale)), FSolverVec2(GetWeightedFloatXPBDAnisoSpringWeftScale(PropertyCollection, DefaultWarpWeftScale))) , XPBDAnisoSpringUse3dRestLengthsIndex(PropertyCollection) , XPBDAnisoSpringStiffnessWarpIndex(PropertyCollection) , XPBDAnisoSpringStiffnessWeftIndex(PropertyCollection) , XPBDAnisoSpringStiffnessBiasIndex(PropertyCollection) , XPBDAnisoSpringDampingIndex(PropertyCollection) , XPBDAnisoSpringWarpScaleIndex(PropertyCollection) , XPBDAnisoSpringWeftScaleIndex(PropertyCollection)"
  },
  {
    "label": "SetProperties()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetProperties(const FCollectionPropertyConstFacade& PropertyCollection, const TMap<FString, TConstArrayView<FRealSingle>>& WeightMaps)"
  },
  {
    "label": "ApplyProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplyProperties(const FSolverReal Dt, const int32 NumIterations)"
  },
  {
    "label": "ApplyProperties()",
    "kind": "Method",
    "detail": "Function (EdgeConstraints .)",
    "insertText": "ApplyProperties(Dt, NumIterations)"
  },
  {
    "label": "GetEdgeConstraints()",
    "kind": "Method",
    "detail": "Function (} const FXPBDAnisotropicEdgeSpringConstraints&)",
    "insertText": "GetEdgeConstraints()"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(XPBDAnisoSpringStiffnessWarp, float)"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(XPBDAnisoSpringStiffnessWeft, float)"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(XPBDAnisoSpringStiffnessBias, float)"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(XPBDAnisoSpringDamping, float)"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(XPBDAnisoSpringWarpScale, float)"
  },
  {
    "label": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UE_CHAOS_DECLARE_PROPERTYCOLLECTION_NAME(XPBDAnisoSpringWeftScale, float)"
  }
]