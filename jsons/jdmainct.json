[
  {
    "label": "jpeg_d_main_controller",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "jpeg_d_main_controller"
  },
  {
    "label": "LOCAL()",
    "kind": "Method",
    "detail": "Function (# define JPEG_INTERNALS # include \" jpeglib . h \" # include \" jpegcomp . h \" typedef struct { struct jpeg_d_main_controller pub ; JSAMPARRAY buffer [ MAX_COMPONENTS ] ; boolean buffer_full ; JDIMENSION rowgroup_ctr ; JSAMPIMAGE xbuffer [ 2 ] ; int whichptr ; int context_state ; JDIMENSION rowgroups_avail ; JDIMENSION iMCU_row_ctr ; } my_main_controller ; typedef my_main_controller* my_main_ptr ; # define CTX_PREPARE_FOR_IMCU 0 # define CTX_PROCESS_IMCU 1 # define CTX_POSTPONED_ROW 2)",
    "insertText": "LOCAL(void) set_wraparound_pointers(j_decompress_ptr cinfo)"
  },
  {
    "label": "main_ptr()",
    "kind": "Method",
    "detail": "Function (main)",
    "insertText": "main_ptr(my_main_ptr)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (int ci,i,rgroup ; int M = cinfo -> _min_DCT_scaled_size ; jpeg_component_info* compptr ; JSAMPARRAY xbuf0,xbuf1 ;)",
    "insertText": "for(ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components; ci++, compptr++)"
  },
  {
    "label": "rgroup()",
    "kind": "Method",
    "detail": "Function (_min_DCT_scaled_size)",
    "insertText": "rgroup(compptr->v_samp_factor * compptr->_DCT_scaled_size)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (xbuf0 = main_ptr -> xbuffer [ 0 ] [ ci ] ; xbuf1 = main_ptr -> xbuffer [ 1 ] [ ci ] ;)",
    "insertText": "for(i = 0; i < rgroup; i++)"
  },
  {
    "label": "rgroup()",
    "kind": "Method",
    "detail": "Function (xbuf0 [ i - rgroup ] = xbuf0 [)",
    "insertText": "rgroup(M + 1)"
  },
  {
    "label": "rgroup()",
    "kind": "Method",
    "detail": "Function (xbuf0 [)",
    "insertText": "rgroup(M + 2)"
  }
]