[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "USceneComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USceneComponent"
  },
  {
    "label": "FActorRootComponentReconstructionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorRootComponentReconstructionData"
  },
  {
    "label": "FAttachedActorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAttachedActorInfo"
  },
  {
    "label": "FActorTransactionAnnotationData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FActorTransactionAnnotationData"
  },
  {
    "label": "FActorTransactionAnnotation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActorTransactionAnnotation"
  },
  {
    "label": "FDiffableComponentInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiffableComponentInfo"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Engine / EngineTypes . h \" # include \" ComponentInstanceDataCache . h \" # if WITH_EDITOR # include \" TransactionCommon . h \" # include \" Misc / ITransactionObjectAnnotation . h \" # endif class AActor ; class USceneComponent ; struct FActorRootComponentReconstructionData { struct FAttachedActorInfo { TWeakObjectPtr<AActor> Actor ; TWeakObjectPtr<USceneComponent> AttachParent ; FName AttachParentName ; FName SocketName ; FTransform RelativeTransform ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FAttachedActorInfo& ActorInfo)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; FTransform Transform ; FRotationConversionCache TransformRotationCache ; FAttachedActorInfo AttachedParentInfo ; TArray<FAttachedActorInfo> AttachedToInfo ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FActorRootComponentReconstructionData& RootComponentData)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} ; struct FActorTransactionAnnotationData { TWeakObjectPtr<const AActor> Actor ; FComponentInstanceDataCache ComponentInstanceData ; bool bRootComponentDataCached ; FActorRootComponentReconstructionData RootComponentData ; FArchive&)",
    "insertText": "operator(FArchive& Ar, FActorTransactionAnnotationData& ActorTransactionAnnotationData)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITOR class FActorTransactionAnnotation : public ITransactionObjectAnnotation { public : TSharedRef<FActorTransactionAnnotation>)",
    "insertText": "Create()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FActorTransactionAnnotation>)",
    "insertText": "Create(const AActor* InActor, const bool InCacheRootComponentData = true)"
  },
  {
    "label": "CreateIfRequired()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FActorTransactionAnnotation>)",
    "insertText": "CreateIfRequired(const AActor* InActor, const bool InCacheRootComponentData = true)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "SupportsAdditionalObjectChanges()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsAdditionalObjectChanges()"
  },
  {
    "label": "HasInstanceData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInstanceData()"
  },
  {
    "label": "FActorTransactionAnnotation()",
    "kind": "Method",
    "detail": "Function (FActorTransactionAnnotationData ActorTransactionAnnotationData ; private :)",
    "insertText": "FActorTransactionAnnotation()"
  },
  {
    "label": "FActorTransactionAnnotation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FActorTransactionAnnotation(const AActor* InActor, FComponentInstanceDataCache&& InComponentInstanceData, const bool InCacheRootComponentData = true)"
  },
  {
    "label": "FDiffableComponentInfo()",
    "kind": "Method",
    "detail": "Function (struct FDiffableComponentInfo {)",
    "insertText": "FDiffableComponentInfo()"
  },
  {
    "label": "FDiffableComponentInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDiffableComponentInfo(const UActorComponent* Component)"
  }
]