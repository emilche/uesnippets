[
  {
    "label": "RtcEventLogEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcEventLogEncoder"
  },
  {
    "label": "RtcEventLogEncoder()",
    "kind": "Method",
    "detail": "Function (# ifndef LOGGING_RTC_EVENT_LOG_ENCODER_RTC_EVENT_LOG_ENCODER_H_ # define LOGGING_RTC_EVENT_LOG_ENCODER_RTC_EVENT_LOG_ENCODER_H_ # include<deque> # include<memory> # include<string> # include \" api / rtc_event_log / rtc_event . h \" namespace webrtc { class RtcEventLogEncoder { public : ~)",
    "insertText": "RtcEventLogEncoder()"
  },
  {
    "label": "EncodeLogStart()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EncodeLogStart(int64_t timestamp_us, int64_t utc_time_us)"
  },
  {
    "label": "EncodeLogEnd()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EncodeLogEnd(int64_t timestamp_us)"
  },
  {
    "label": "EncodeBatch()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "EncodeBatch(std::deque<std::unique_ptr<RtcEvent>>::const_iterator begin, std::deque<std::unique_ptr<RtcEvent>>::const_iterator end)"
  }
]