[
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FNavCollisionConvex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNavCollisionConvex"
  },
  {
    "label": "UNavCollisionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavCollisionBase"
  },
  {
    "label": "FDelegateInitializer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDelegateInitializer"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # include \" AI / NavigationSystemHelpers . h \" # include \" AI / Navigation / NavigationTypes . h \" # include \" NavCollisionBase . generated . h \" class FPrimitiveDrawInterface ; struct FNavCollisionConvex { TNavStatArray<FVector> VertexBuffer ; TNavStatArray<int32> IndexBuffer ; } ;)",
    "insertText": "UCLASS(abstract, config=Engine, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() protected: DECLARE_DELEGATE_RetVal_OneParam(UNavCollisionBase*, FConstructNew, UObject&)"
  },
  {
    "label": "FDelegateInitializer()",
    "kind": "Method",
    "detail": "Function (FConstructNew ConstructNewInstanceDelegate ; struct FDelegateInitializer {)",
    "insertText": "FDelegateInitializer()"
  },
  {
    "label": "ConstructNew()",
    "kind": "Method",
    "detail": "Function (uint32 bHasConvexGeometry : 1 ; FNavCollisionConvex TriMeshCollision ; FNavCollisionConvex ConvexCollision ; public : UNavCollisionBase*)",
    "insertText": "ConstructNew(UObject& Outer)"
  },
  {
    "label": "UNavCollisionBase()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UNavCollisionBase(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "Setup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Setup(class UBodySetup* BodySetup) PURE_VIRTUAL(UNavCollisionBase::Setup,)"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function ([ [ nodiscard ] ] FBox)",
    "insertText": "GetBounds() const PURE_VIRTUAL(UNavCollisionBase::GetBounds, static FBox InvalidBox; return InvalidBox;)"
  },
  {
    "label": "ExportGeometry()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExportGeometry(const FTransform& LocalToWorld, FNavigableGeometryExport& GeoExport) const PURE_VIRTUAL(UNavCollisionBase::ExportGeometry, return false;)"
  },
  {
    "label": "GetNavigationModifier()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNavigationModifier(FCompositeNavModifier& Modifier, const FTransform& LocalToWorld) PURE_VIRTUAL(UNavCollisionBase::GetNavigationModifier,)"
  },
  {
    "label": "DrawSimpleGeom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DrawSimpleGeom(FPrimitiveDrawInterface* PDI, const FTransform& Transform, const FColor Color)"
  },
  {
    "label": "InvalidateCollision()",
    "kind": "Method",
    "detail": "Function (} # if WITH_EDITOR void)",
    "insertText": "InvalidateCollision() PURE_VIRTUAL(UNavCollisionBase::InvalidateCollision,)"
  },
  {
    "label": "IsDynamicObstacle()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsDynamicObstacle()"
  }
]