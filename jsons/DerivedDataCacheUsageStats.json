[
  {
    "label": "FDerivedDataCacheUsageStats",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheUsageStats"
  },
  {
    "label": "FDerivedDataCacheSpeedStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataCacheSpeedStats"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDerivedDataCacheSummaryStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataCacheSummaryStats"
  },
  {
    "label": "FDerivedDataCacheStatsNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDerivedDataCacheStatsNode"
  },
  {
    "label": "FDerivedDataCacheResourceStat",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataCacheResourceStat"
  },
  {
    "label": "FDerivedDataCacheResourceStatKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDerivedDataCacheResourceStatKeyFuncs"
  },
  {
    "label": "TimeProbablyExists()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" # include \" ProfilingDebugging / CookStats . h \" # include \" Templates / Function . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" class FDerivedDataCacheUsageStats { # if ENABLE_COOK_STATS public : FCookStats::FScopedStatsCounter)",
    "insertText": "TimeProbablyExists()"
  },
  {
    "label": "TimeGet()",
    "kind": "Method",
    "detail": "Function (} FCookStats::FScopedStatsCounter)",
    "insertText": "TimeGet()"
  },
  {
    "label": "TimePut()",
    "kind": "Method",
    "detail": "Function (} FCookStats::FScopedStatsCounter)",
    "insertText": "TimePut()"
  },
  {
    "label": "TimePrefetch()",
    "kind": "Method",
    "detail": "Function (} FCookStats::FScopedStatsCounter)",
    "insertText": "TimePrefetch()"
  },
  {
    "label": "LogStats()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "LogStats(FCookStatsManager::AddStatFuncRef AddStat, const FString& StatName, const FString& NodeName)"
  },
  {
    "label": "LogStats()",
    "kind": "Method",
    "detail": "Function (GetStats .)",
    "insertText": "LogStats(AddStat, StatName, NodeName, TEXT(\"Get\"))"
  },
  {
    "label": "LogStats()",
    "kind": "Method",
    "detail": "Function (PutStats .)",
    "insertText": "LogStats(AddStat, StatName, NodeName, TEXT(\"Put\"))"
  },
  {
    "label": "LogStats()",
    "kind": "Method",
    "detail": "Function (ExistsStats .)",
    "insertText": "LogStats(AddStat, StatName, NodeName, TEXT(\"Exists\"))"
  },
  {
    "label": "LogStats()",
    "kind": "Method",
    "detail": "Function (PrefetchStats .)",
    "insertText": "LogStats(AddStat, StatName, NodeName, TEXT(\"Prefetch\"))"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Combine(const FDerivedDataCacheUsageStats& Other)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (GetStats .)",
    "insertText": "Combine(Other.GetStats)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (PutStats .)",
    "insertText": "Combine(Other.PutStats)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (ExistsStats .)",
    "insertText": "Combine(Other.ExistsStats)"
  },
  {
    "label": "Combine()",
    "kind": "Method",
    "detail": "Function (PrefetchStats .)",
    "insertText": "Combine(Other.PrefetchStats)"
  },
  {
    "label": "COOK_STAT()",
    "kind": "Method",
    "detail": "Function (} FCookStats::CallStats GetStats ; FCookStats::CallStats PutStats ; FCookStats::CallStats ExistsStats ; FCookStats::CallStats PrefetchStats ; # endif } ; struct FDerivedDataCacheSpeedStats { double ReadSpeedMBs = 0 . 0 ; double WriteSpeedMBs = 0 . 0 ; double LatencyMS = 0 . 0 ; } ; enum class EDerivedDataCacheStatus { None = 0,Information,Warning,Error,Deactivation } ;)",
    "insertText": "COOK_STAT(using FDerivedDataCacheSummaryStat = FCookStatsManager::StringKeyValue)"
  },
  {
    "label": "COOK_STAT()",
    "kind": "Method",
    "detail": "Function (struct FDerivedDataCacheSummaryStats {)",
    "insertText": "COOK_STAT(TArray<FDerivedDataCacheSummaryStat> Stats)"
  },
  {
    "label": "FDerivedDataCacheStatsNode()",
    "kind": "Method",
    "detail": "Function (} ; class FDerivedDataCacheStatsNode : public TSharedFromThis<FDerivedDataCacheStatsNode> { public :)",
    "insertText": "FDerivedDataCacheStatsNode()"
  },
  {
    "label": "FDerivedDataCacheStatsNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDerivedDataCacheStatsNode(const FString& InCacheType, const FString& InCacheName, bool bInIsLocal, EDerivedDataCacheStatus InCacheStatus = EDerivedDataCacheStatus::None, const TCHAR* InCacheStatusText = nullptr) : CacheType(InCacheType) , CacheName(InCacheName) , CacheStatusText(InCacheStatusText) , CacheStatus(InCacheStatus) , bIsLocal(bInIsLocal)"
  },
  {
    "label": "GetCacheType()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetCacheType()"
  },
  {
    "label": "GatherLegacyUsageStats()",
    "kind": "Method",
    "detail": "Function (TMap<FString,FDerivedDataCacheUsageStats> Stats ;)",
    "insertText": "GatherLegacyUsageStats(Stats, TEXT(\" 0\"))"
  },
  {
    "label": "Predicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Predicate(SharedThis(this))"
  },
  {
    "label": "ForEachDescendant()",
    "kind": "Method",
    "detail": "Function (Child ->)",
    "insertText": "ForEachDescendant(Predicate)"
  },
  {
    "label": "GetTotalPhysicalSize()",
    "kind": "Method",
    "detail": "Function (} } uint64)",
    "insertText": "GetTotalPhysicalSize()"
  },
  {
    "label": "GatherLegacyUsageStats()",
    "kind": "Method",
    "detail": "Function (TotalPhysicalSize = InTotalPhysicalSize ; } public : void)",
    "insertText": "GatherLegacyUsageStats(TMap<FString, FDerivedDataCacheUsageStats>& UsageStatsMap, FString&& GraphPath)"
  },
  {
    "label": "COOK_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "COOK_STAT(UsageStatsMap.Add(FString::Printf(TEXT(\"%s: %s\"), *GraphPath, *GetCacheName()), KVP.Value))"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} } else {)",
    "insertText": "for(const auto& KVP : UsageStats)"
  },
  {
    "label": "COOK_STAT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "COOK_STAT(UsageStatsMap.Add(FString::Printf(TEXT(\"%s: %s.%s\"), *GraphPath, *GetCacheName(), *KVP.Key), KVP.Value))"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (} } int Ndx = 0 ;)",
    "insertText": "for(const TSharedRef<FDerivedDataCacheStatsNode>& Child : Children)"
  },
  {
    "label": "GatherLegacyUsageStats()",
    "kind": "Method",
    "detail": "Function (Child ->)",
    "insertText": "GatherLegacyUsageStats(UsageStatsMap, GraphPath + FString::Printf(TEXT(\".%2d\"), Ndx++))"
  },
  {
    "label": "COOK_STAT()",
    "kind": "Method",
    "detail": "Function (} } TMap<FString,FDerivedDataCacheUsageStats> UsageStats ; FDerivedDataCacheSpeedStats SpeedStats ;)",
    "insertText": "COOK_STAT(TArray<FCookStatsManager::StringKeyValue> CustomStats)"
  },
  {
    "label": "FDerivedDataCacheResourceStat()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<FDerivedDataCacheStatsNode>> Children ; protected : FString CacheType ; FString CacheName ; FString CacheStatusText ; uint64 TotalPhysicalSize = ~ 0 ull ; EDerivedDataCacheStatus CacheStatus ; bool bIsLocal ; } ; struct FDerivedDataCacheResourceStat { public :)",
    "insertText": "FDerivedDataCacheResourceStat(FString InAssetType = TEXT(\"None\"), bool bIsGameThreadTime = 0.0, double InLoadTimeSec = 0.0, double InLoadSizeMB = 0.0, int64 InAssetsLoaded = 0, double InBuildTimeSec = 0.0, double InBuildSizeMB = 0.0, int64 InAssetsBuilt = 0) : AssetType(MoveTemp(InAssetType)), LoadTimeSec(InLoadTimeSec), LoadSizeMB(InLoadSizeMB), LoadCount(InAssetsLoaded), BuildTimeSec(InBuildTimeSec), BuildSizeMB(InBuildSizeMB), BuildCount(InAssetsBuilt), GameThreadTimeSec(bIsGameThreadTime ? InLoadTimeSec + InBuildTimeSec : 0.0)"
  },
  {
    "label": "TotalCount()",
    "kind": "Method",
    "detail": "Function (TotalCount = LoadCount + BuildCount ; Efficiency =)",
    "insertText": "TotalCount(double)LoadCount / (double)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} const FDerivedDataCacheResourceStat&)",
    "insertText": "operator(const FDerivedDataCacheResourceStat& OtherStat)"
  },
  {
    "label": "GetSetKey()",
    "kind": "Method",
    "detail": "Function (* this =* this - OtherStat ; return* this ; } FString AssetType ; double LoadTimeSec = 0 ; double LoadSizeMB = 0 ; int64 LoadCount = 0 ; double BuildTimeSec = 0 ; double BuildSizeMB = 0 ; int64 BuildCount = 0 ; int64 TotalCount = 0 ; double Efficiency = 0 ; double GameThreadTimeSec ; } ; struct FDerivedDataCacheResourceStatKeyFuncs : BaseKeyFuncs<FDerivedDataCacheResourceStat,FString,false> { const FString&)",
    "insertText": "GetSetKey(const FDerivedDataCacheResourceStat& Element)"
  },
  {
    "label": "GatherDerivedDataCacheResourceStats()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "GatherDerivedDataCacheResourceStats(TArray<FDerivedDataCacheResourceStat>& DDCResourceStats)"
  },
  {
    "label": "GatherDerivedDataCacheSummaryStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDerivedDataCacheSummaryStats(FDerivedDataCacheSummaryStats& DDCSummaryStats)"
  }
]