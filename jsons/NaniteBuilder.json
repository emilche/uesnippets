[
  {
    "label": "FMeshBuildVertexView",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshBuildVertexView"
  },
  {
    "label": "FMeshNaniteSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshNaniteSettings"
  },
  {
    "label": "FResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FResources"
  },
  {
    "label": "IBuilderModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuilderModule"
  },
  {
    "label": "FInputMeshData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInputMeshData"
  },
  {
    "label": "FOutputMeshData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOutputMeshData"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" StaticMeshResources . h \" # include \" Math / Bounds . h \" struct FMeshBuildVertexView ; struct FMeshNaniteSettings ; namespace Nanite { const int32 MaxSectionArraySize = 6 4 ; struct FResources ; class IBuilderModule : public IModuleInterface { public : typedef TDelegate<)",
    "insertText": "void(bool bFallbackIsReduced)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (IBuilderModule&)",
    "insertText": "Get()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "GetVersionString()",
    "kind": "Method",
    "detail": "Function (} const FString&)",
    "insertText": "GetVersionString()"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (struct FInputMeshData { FMeshBuildVertexData Vertices ; TArray<uint32> TriangleIndices ; TArray<uint32> TriangleCounts ; TArray<int32> MaterialIndices ; FStaticMeshSectionArray Sections ; FBounds3f VertexBounds ; uint32 NumTexCoords = 0 ; uint32 NumBoneInfluences = 0 ; float PercentTriangles = 1 . 0 f ; float MaxDeviation = 0 . 0 f ; } ; struct FOutputMeshData { FMeshBuildVertexData Vertices ; TArray<uint32> TriangleIndices ; FStaticMeshSectionArray Sections ; } ; bool)",
    "insertText": "Build(FResources& Resources, FInputMeshData& InputMeshData, FOutputMeshData* OutFallbackMeshData, const FMeshNaniteSettings& Settings, FOnFreeInputMeshData OnFreeInputMeshData)"
  }
]