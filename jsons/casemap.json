[
  {
    "label": "BreakIterator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BreakIterator"
  },
  {
    "label": "ByteSink",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ByteSink"
  },
  {
    "label": "Edits",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Edits"
  },
  {
    "label": "U_COMMON_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_COMMON_API"
  },
  {
    "label": "toLower()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "toLower(\n            const char *locale, uint32_t options,\n            const char16_t *src, int32_t srcLength,\n            char16_t *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "toUpper()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "toUpper(\n            const char *locale, uint32_t options,\n            const char16_t *src, int32_t srcLength,\n            char16_t *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "toTitle()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "toTitle(\n            const char *locale, uint32_t options, BreakIterator *iter,\n            const char16_t *src, int32_t srcLength,\n            char16_t *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "fold()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "fold(\n            uint32_t options,\n            const char16_t *src, int32_t srcLength,\n            char16_t *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8ToLower()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "utf8ToLower(\n            const char *locale, uint32_t options,\n            StringPiece src, ByteSink &sink, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8ToUpper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "utf8ToUpper(\n            const char *locale, uint32_t options,\n            StringPiece src, ByteSink &sink, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8ToTitle()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "utf8ToTitle(\n            const char *locale, uint32_t options, BreakIterator *iter,\n            StringPiece src, ByteSink &sink, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8Fold()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "utf8Fold(\n            uint32_t options,\n            StringPiece src, ByteSink &sink, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8ToLower()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "utf8ToLower(\n            const char *locale, uint32_t options,\n            const char *src, int32_t srcLength,\n            char *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8ToUpper()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "utf8ToUpper(\n            const char *locale, uint32_t options,\n            const char *src, int32_t srcLength,\n            char *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8ToTitle()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "utf8ToTitle(\n            const char *locale, uint32_t options, BreakIterator *iter,\n            const char *src, int32_t srcLength,\n            char *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  },
  {
    "label": "utf8Fold()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "utf8Fold(\n            uint32_t options,\n            const char *src, int32_t srcLength,\n            char *dest, int32_t destCapacity, Edits *edits,\n            UErrorCode &errorCode)"
  }
]