[
  {
    "label": "FTimedDataInputCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTimedDataInputCollection"
  },
  {
    "label": "ITimeManagementModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimeManagementModule"
  },
  {
    "label": "FCommonFrameRateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommonFrameRateInfo"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Modules / ModuleInterface . h \" # include \" Modules / ModuleManager . h \" # include \" Widgets / SFrameRatePicker . h \" # define TIMEMANAGEMENT_MODULE_NAME)",
    "insertText": "TEXT(\"TimeManagement\")"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (class ITimeManagementModule : public IModuleInterface { public : ITimeManagementModule&)",
    "insertText": "Get()"
  },
  {
    "label": "IsAvailable()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsAvailable()"
  },
  {
    "label": "GetTimedDataInputCollection()",
    "kind": "Method",
    "detail": "Function (} FTimedDataInputCollection&)",
    "insertText": "GetTimedDataInputCollection()"
  },
  {
    "label": "GetAllCommonFrameRates()",
    "kind": "Method",
    "detail": "Function (TArrayView<const struct FCommonFrameRateInfo>)",
    "insertText": "GetAllCommonFrameRates()"
  },
  {
    "label": "CreateFrameRatePicker()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SFrameRatePicker>)",
    "insertText": "CreateFrameRatePicker(SFrameRatePicker::FArguments Arguments)"
  }
]