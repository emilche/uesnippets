[
  {
    "label": "FImageWrapperBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FImageWrapperBase"
  },
  {
    "label": "FImageWrapperBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Containers / Array . h \" # include \" Containers / EnumAsByte . h \" # include \" Containers / UnrealString . h \" # include \" IImageWrapper . h \" class FImageWrapperBase : public IImageWrapper { public :)",
    "insertText": "FImageWrapperBase()"
  },
  {
    "label": "GetRawData()",
    "kind": "Method",
    "detail": "Function (public : const TArray64<uint8>&)",
    "insertText": "GetRawData()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (OutRawData =)",
    "insertText": "MoveTemp(RawData)"
  },
  {
    "label": "Compress()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "Compress(int32 Quality)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetError()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetError(const TCHAR* ErrorMessage)"
  },
  {
    "label": "GetLastError()",
    "kind": "Method",
    "detail": "Function (const FString&)",
    "insertText": "GetLastError()"
  },
  {
    "label": "Uncompress()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Uncompress(const ERGBFormat InFormat, int32 InBitDepth, FDecompressedImageOutput& OutDecompressedImage)"
  },
  {
    "label": "GetCompressed()",
    "kind": "Method",
    "detail": "Function (public : TArray64<uint8>)",
    "insertText": "GetCompressed(int32 Quality = 0)"
  },
  {
    "label": "GetBitDepth()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetBitDepth()"
  },
  {
    "label": "GetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetRaw(const ERGBFormat InFormat, int32 InBitDepth, FDecompressedImageOutput& OutDecompressedImage)"
  },
  {
    "label": "GetWidth()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetWidth()"
  },
  {
    "label": "SetRaw()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetRaw(const void* InRawData, int64 InRawSize, const int32 InWidth, const int32 InHeight, const ERGBFormat InFormat, const int32 InBitDepth, const int32 InBytesPerRow = 0)"
  },
  {
    "label": "GetBytesPerPel()",
    "kind": "Method",
    "detail": "Function (protected : int64)",
    "insertText": "GetBytesPerPel()"
  },
  {
    "label": "GetBytesPerRow()",
    "kind": "Method",
    "detail": "Function (} int64)",
    "insertText": "GetBytesPerRow()"
  },
  {
    "label": "GetImageViewOfSetRawForCompress()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetImageViewOfSetRawForCompress(FImageView & OutImage)"
  }
]