[
  {
    "label": "VCMVideoProtection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "VCMVideoProtection"
  },
  {
    "label": "VCMReceiveCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMReceiveCallback"
  },
  {
    "label": "VCMReceiveStatisticsCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMReceiveStatisticsCallback"
  },
  {
    "label": "VCMFrameTypeCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMFrameTypeCallback"
  },
  {
    "label": "VCMPacketRequestCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VCMPacketRequestCallback"
  },
  {
    "label": "FrameToRender()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_INCLUDE_VIDEO_CODING_DEFINES_H_ # define MODULES_VIDEO_CODING_INCLUDE_VIDEO_CODING_DEFINES_H_ # include<stddef . h> # include<stdint . h> # include \" absl / types / optional . h \" # include \" api / video / video_content_type . h \" # include \" api / video / video_frame . h \" # include \" api / video / video_timing . h \" # include \" api / video_codecs / video_decoder . h \" namespace webrtc { # define VCM_FRAME_NOT_READY 3 # define VCM_MISSING_CALLBACK 1 # define VCM_OK 0 # define VCM_GENERAL_ERROR - 1 # define VCM_PARAMETER_ERROR - 4 # define VCM_NO_CODEC_REGISTERED - 8 # define VCM_JITTER_BUFFER_ERROR - 9 enum { kDefaultTimingFramesDelayMs = 2 0 0,kDefaultOutlierFrameSizePercent = 5 0 0,kMaxEncodeStartTimeListSize = 1 5 0,} ; enum VCMVideoProtection { kProtectionNack,kProtectionNackFEC,} ; class VCMReceiveCallback { public : int32_t)",
    "insertText": "FrameToRender(VideoFrame& videoFrame, absl::optional<uint8_t> qp, TimeDelta decode_time, VideoContentType content_type)"
  },
  {
    "label": "OnDroppedFrames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDroppedFrames(uint32_t frames_dropped)"
  },
  {
    "label": "OnIncomingPayloadType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnIncomingPayloadType(int payload_type)"
  },
  {
    "label": "OnDecoderInfoChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecoderInfoChanged(const VideoDecoder::DecoderInfo& decoder_info)"
  },
  {
    "label": "VCMReceiveCallback()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "VCMReceiveCallback()"
  },
  {
    "label": "OnCompleteFrame()",
    "kind": "Method",
    "detail": "Function (} } ; class VCMReceiveStatisticsCallback { public : void)",
    "insertText": "OnCompleteFrame(bool is_keyframe, size_t size_bytes, VideoContentType content_type)"
  },
  {
    "label": "OnFrameBufferTimingsUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFrameBufferTimingsUpdated(int max_decode_ms, int current_delay_ms, int target_delay_ms, int jitter_buffer_ms, int min_playout_delay_ms, int render_delay_ms)"
  },
  {
    "label": "OnTimingFrameInfoUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnTimingFrameInfoUpdated(const TimingFrameInfo& info)"
  },
  {
    "label": "VCMReceiveStatisticsCallback()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "VCMReceiveStatisticsCallback()"
  },
  {
    "label": "RequestKeyFrame()",
    "kind": "Method",
    "detail": "Function (} } ; class VCMFrameTypeCallback { public : int32_t)",
    "insertText": "RequestKeyFrame()"
  },
  {
    "label": "VCMFrameTypeCallback()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "VCMFrameTypeCallback()"
  },
  {
    "label": "ResendPackets()",
    "kind": "Method",
    "detail": "Function (} } ; class VCMPacketRequestCallback { public : int32_t)",
    "insertText": "ResendPackets(const uint16_t* sequenceNumbers, uint16_t length)"
  },
  {
    "label": "VCMPacketRequestCallback()",
    "kind": "Method",
    "detail": "Function (protected : ~)",
    "insertText": "VCMPacketRequestCallback()"
  }
]