[
  {
    "label": "MockAudioEncoder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockAudioEncoder"
  },
  {
    "label": "FakeEncoding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FakeEncoding"
  },
  {
    "label": "CopyEncoding",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CopyEncoding"
  },
  {
    "label": "MockAudioEncoder()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_MOCK_AUDIO_ENCODER_H_ # define TEST_MOCK_AUDIO_ENCODER_H_ # include<string> # include \" api / array_view . h \" # include \" api / audio_codecs / audio_encoder . h \" # include \" test / gmock . h \" namespace webrtc { class MockAudioEncoder : public AudioEncoder { public :)",
    "insertText": "MockAudioEncoder()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, SampleRateHz, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, NumChannels, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, RtpTimestampRateHz, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, Num10MsFramesInNextPacket, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(size_t, Max10MsFramesInAPacket, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int, GetTargetBitrate, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD((absl::optional<std::pair<TimeDelta, TimeDelta>>), GetFrameLengthRange, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Reset, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, SetFec, (bool enable), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, SetDtx, (bool enable), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, SetApplication, (Application application), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetMaxPlaybackRate, (int frequency_hz), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnReceivedUplinkBandwidth, (int target_audio_bitrate_bps, absl::optional<int64_t> probing_interval_ms), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnReceivedUplinkPacketLossFraction, (float uplink_packet_loss_fraction), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnReceivedOverhead, (size_t overhead_bytes_per_packet), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, EnableAudioNetworkAdaptor, (const std::string& config_string, RtcEventLog*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(EncodedInfo, EncodeImpl, (uint32_t timestamp, rtc::ArrayView<const int16_t> audio, rtc::Buffer*), (override))"
  },
  {
    "label": "FakeEncoding()",
    "kind": "Method",
    "detail": "Function (class FakeEncoding { public :)",
    "insertText": "FakeEncoding(const AudioEncoder::EncodedInfo& info)"
  },
  {
    "label": "FakeEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FakeEncoding(size_t encoded_bytes)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (AudioEncoder::EncodedInfo)",
    "insertText": "operator()(uint32_t timestamp, rtc::ArrayView<const int16_t> audio, rtc::Buffer* encoded)"
  },
  {
    "label": "CopyEncoding()",
    "kind": "Method",
    "detail": "Function (private : AudioEncoder::EncodedInfo info_ ; } ; class CopyEncoding { public : ~)",
    "insertText": "CopyEncoding()"
  },
  {
    "label": "CopyEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyEncoding(AudioEncoder::EncodedInfo info, rtc::ArrayView<const uint8_t> payload)"
  },
  {
    "label": "CopyEncoding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyEncoding(rtc::ArrayView<const uint8_t> payload)"
  }
]