[
  {
    "label": "RtpSequenceNumberMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtpSequenceNumberMap"
  },
  {
    "label": "Info",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Info"
  },
  {
    "label": "Association",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Association"
  },
  {
    "label": "Info()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_SOURCE_RTP_SEQUENCE_NUMBER_MAP_H_ # define MODULES_RTP_RTCP_SOURCE_RTP_SEQUENCE_NUMBER_MAP_H_ # include<cstddef> # include<cstdint> # include<deque> # include \" absl / types / optional . h \" namespace webrtc { class RtpSequenceNumberMap final { public : struct Info final {)",
    "insertText": "Info(uint32_t timestamp, bool is_first, bool is_last) : timestamp(timestamp), is_first(is_first), is_last(is_last)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const Info& lhs, const Info& rhs)"
  },
  {
    "label": "RtpSequenceNumberMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RtpSequenceNumberMap(const RtpSequenceNumberMap& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RtpSequenceNumberMap&)",
    "insertText": "operator(const RtpSequenceNumberMap& other)"
  },
  {
    "label": "RtpSequenceNumberMap()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "RtpSequenceNumberMap()"
  },
  {
    "label": "InsertPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertPacket(uint16_t sequence_number, Info info)"
  },
  {
    "label": "InsertFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InsertFrame(uint16_t first_sequence_number, size_t packet_count, uint32_t timestamp)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (absl::optional<Info>)",
    "insertText": "Get(uint16_t sequence_number)"
  },
  {
    "label": "AssociationCountForTesting()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "AssociationCountForTesting()"
  },
  {
    "label": "Association()",
    "kind": "Method",
    "detail": "Function (private : struct Association {)",
    "insertText": "Association(uint16_t sequence_number) : Association(sequence_number, Info(0, false, false))"
  },
  {
    "label": "Association()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "Association(uint16_t sequence_number, Info info) : sequence_number(sequence_number), info(info)"
  }
]