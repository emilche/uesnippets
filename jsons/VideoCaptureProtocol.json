[
  {
    "label": "UVideoCaptureProtocol",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UVideoCaptureProtocol"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" MovieSceneCaptureProtocolBase . h \" # include \" FrameGrabber . h \" # include \" Protocols / FrameGrabberProtocol . h \" # include \" AVIWriter . h \" # include \" VideoCaptureProtocol . generated . h \")",
    "insertText": "UCLASS(meta=(DisplayName=\"Video Sequence (avi)\", CommandLineID=\"Video\"), MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UVideoCaptureProtocol(const FObjectInitializer& Init) : Super(Init) , bUseCompression(true) , CompressionQuality(75)"
  },
  {
    "label": "SetupImpl()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "SetupImpl()"
  },
  {
    "label": "FinalizeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinalizeImpl()"
  },
  {
    "label": "GetFramePayload()",
    "kind": "Method",
    "detail": "Function (FFramePayloadPtr)",
    "insertText": "GetFramePayload(const FFrameMetrics& FrameMetrics)"
  },
  {
    "label": "ProcessFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessFrame(FCapturedFrameData Frame)"
  },
  {
    "label": "CanWriteToFileImpl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanWriteToFileImpl(const TCHAR* InFilename, bool bOverwriteExisting)"
  },
  {
    "label": "ConditionallyCreateWriter()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ConditionallyCreateWriter()"
  }
]