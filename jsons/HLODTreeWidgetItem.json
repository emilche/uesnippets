[
  {
    "label": "FDragDropEvent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDragDropEvent"
  },
  {
    "label": "STableViewBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STableViewBase"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UWorld",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorld"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "ITreeItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ITreeItem"
  },
  {
    "label": "SHLODOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHLODOutliner"
  },
  {
    "label": "SHLODWidgetItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SHLODWidgetItem"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / BitArray . h \" # include \" Delegates / IDelegateInstance . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Styling / SlateColor . h \" # include \" Templates / SharedPointer . h \" # include \" Templates / UnrealTemplate . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / Views / SListView . h \" # include \" Widgets / Views / STableRow . h \" class FDragDropEvent ; class STableViewBase ; class SWidget ; class UWorld ; struct FGeometry ; namespace HLODOutliner { struct ITreeItem ; typedef TSharedPtr<ITreeItem> FTreeItemPtr ; class SHLODOutliner ; class SHLODWidgetItem : public SMultiColumnTableRow<FTreeItemPtr> { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SHLODWidgetItem) : _TreeItemToVisualize(), _Outliner(), _World()"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(FTreeItemPtr, TreeItemToVisualize) SLATE_ARGUMENT(SHLODOutliner*, Outliner) SLATE_ARGUMENT(UWorld*, World) SLATE_END_ARGS() public: void Construct(const FArguments& InArgs, const TSharedRef<STableViewBase>& InOwner)"
  },
  {
    "label": "GenerateWidgetForColumn()",
    "kind": "Method",
    "detail": "Function (public : TSharedRef<SWidget>)",
    "insertText": "GenerateWidgetForColumn(const FName& ColumnName)"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "GetTint()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetTint()"
  },
  {
    "label": "OnDragEnter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragEnter(FGeometry const& MyGeometry, FDragDropEvent const& DragDropEvent)"
  },
  {
    "label": "OnDragLeave()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDragLeave(FDragDropEvent const& DragDropEvent)"
  },
  {
    "label": "OnDragOver()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDragOver(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  },
  {
    "label": "OnDrop()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnDrop(const FGeometry& MyGeometry, const FDragDropEvent& DragDropEvent)"
  }
]