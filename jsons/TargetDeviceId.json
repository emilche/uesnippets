[
  {
    "label": "FTargetDeviceId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTargetDeviceId"
  },
  {
    "label": "FTargetDeviceId()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" class FTargetDeviceId { public :)",
    "insertText": "FTargetDeviceId()"
  },
  {
    "label": "FTargetDeviceId()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTargetDeviceId(const FString& InPlatformName, const FString& InDeviceName ) : PlatformName(InPlatformName) , DeviceName(InDeviceName)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "operator(const FTargetDeviceId& Other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FTargetDeviceId& Uri)"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "GetTypeHash()",
    "kind": "Method",
    "detail": "Function (} public : uint32)",
    "insertText": "GetTypeHash(const FTargetDeviceId& Uri)"
  },
  {
    "label": "Parse()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "Parse(const FString& IdString, FTargetDeviceId& OutId)"
  }
]