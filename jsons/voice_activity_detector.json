[
  {
    "label": "VoiceActivityDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VoiceActivityDetector"
  },
  {
    "label": "VoiceActivityDetector()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_VAD_VOICE_ACTIVITY_DETECTOR_H_ # define MODULES_AUDIO_PROCESSING_VAD_VOICE_ACTIVITY_DETECTOR_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include<vector> # include \" common_audio / resampler / include / resampler . h \" # include \" modules / audio_processing / vad / common . h \" # include \" modules / audio_processing / vad / pitch_based_vad . h \" # include \" modules / audio_processing / vad / standalone_vad . h \" # include \" modules / audio_processing / vad / vad_audio_proc . h \" namespace webrtc { class VoiceActivityDetector { public :)",
    "insertText": "VoiceActivityDetector()"
  },
  {
    "label": "ProcessChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessChunk(const int16_t* audio, size_t length, int sample_rate_hz)"
  },
  {
    "label": "chunkwise_voice_probabilities()",
    "kind": "Method",
    "detail": "Function (const std::vector<double>&)",
    "insertText": "chunkwise_voice_probabilities()"
  }
]