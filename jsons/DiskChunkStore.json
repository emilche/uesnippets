[
  {
    "label": "IBuildInstallerSharedContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IBuildInstallerSharedContext"
  },
  {
    "label": "IFileSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IFileSystem"
  },
  {
    "label": "IChunkDataSerialization",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IChunkDataSerialization"
  },
  {
    "label": "IDiskChunkStoreStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDiskChunkStoreStat"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IDiskChunkStore",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDiskChunkStore"
  },
  {
    "label": "FDiskChunkStoreConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiskChunkStoreConfig"
  },
  {
    "label": "FDiskChunkStoreFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDiskChunkStoreFactory"
  },
  {
    "label": "IDiskChunkStore()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Installer / ChunkStore . h \" class IBuildInstallerSharedContext ; namespace BuildPatchServices { class IFileSystem ; class IChunkDataSerialization ; class IDiskChunkStoreStat ; enum class EChunkSaveResult : uint8 ; enum class EChunkLoadResult : uint8 ; class IDiskChunkStore : public IChunkStore { public : ~)",
    "insertText": "IDiskChunkStore()"
  },
  {
    "label": "FDiskChunkStoreConfig()",
    "kind": "Method",
    "detail": "Function (} } ; struct FDiskChunkStoreConfig { FString StoreRootPath ; int32 QueueSize = 5 0 ; double MaxRetryTime = 2 . 0 ; IBuildInstallerSharedContext* SharedContext = nullptr ;)",
    "insertText": "FDiskChunkStoreConfig(FString InStoreRootPath) : StoreRootPath(MoveTemp(InStoreRootPath))"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} } ; class FDiskChunkStoreFactory { public : IDiskChunkStore*)",
    "insertText": "Create(IFileSystem* FileSystem, IChunkDataSerialization* Serializer, IDiskChunkStoreStat* DiskChunkStoreStat, FDiskChunkStoreConfig Configuration)"
  },
  {
    "label": "IDiskChunkStoreStat()",
    "kind": "Method",
    "detail": "Function (} ; class IDiskChunkStoreStat { public : ~)",
    "insertText": "IDiskChunkStoreStat()"
  },
  {
    "label": "OnChunkStored()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnChunkStored(const FGuid& ChunkId, const FString& ChunkFilename, EChunkSaveResult SaveResult)"
  },
  {
    "label": "OnBeforeChunkLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnBeforeChunkLoad(const FGuid& ChunkId)"
  },
  {
    "label": "OnChunkLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChunkLoaded(const FGuid& ChunkId, const FString& ChunkFilename, EChunkLoadResult LoadResult)"
  },
  {
    "label": "OnCacheUseUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCacheUseUpdated(int32 ChunkCount)"
  }
]