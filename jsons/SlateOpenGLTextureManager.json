[
  {
    "label": "FSlateOpenGLTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLTexture"
  },
  {
    "label": "ISlateAtlasProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateAtlasProvider"
  },
  {
    "label": "ISlateStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISlateStyle"
  },
  {
    "label": "FSlateVectorGraphicsCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateVectorGraphicsCache"
  },
  {
    "label": "FSlateTextureAtlasOpenGL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateTextureAtlasOpenGL"
  },
  {
    "label": "FSlateOpenGLTextureManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateOpenGLTextureManager"
  },
  {
    "label": "FDynamicTextureResource",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDynamicTextureResource"
  },
  {
    "label": "FSlateOpenGLTextureManager()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Rendering / ShaderResourceManager . h \" class FSlateOpenGLTexture ; class ISlateAtlasProvider ; class ISlateStyle ; class FSlateVectorGraphicsCache ; class FSlateTextureAtlasOpenGL ; class FSlateOpenGLTextureManager : public FSlateShaderResourceManager,public ISlateAtlasProvider { public :)",
    "insertText": "FSlateOpenGLTextureManager()"
  },
  {
    "label": "LoadUsedTextures()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadUsedTextures()"
  },
  {
    "label": "LoadStyleResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadStyleResources(const ISlateStyle& Style)"
  },
  {
    "label": "GetShaderResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetShaderResource(const FSlateBrush& Brush, FVector2f LocalSize, float DrawScale)"
  },
  {
    "label": "GetTextureAtlasProvider()",
    "kind": "Method",
    "detail": "Function (ISlateAtlasProvider*)",
    "insertText": "GetTextureAtlasProvider()"
  },
  {
    "label": "GetNumAtlasPages()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumAtlasPages()"
  },
  {
    "label": "GetAtlasPageResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResource*)",
    "insertText": "GetAtlasPageResource(const int32 InIndex)"
  },
  {
    "label": "IsAtlasPageResourceAlphaOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAtlasPageResourceAlphaOnly(const int32 InIndex)"
  },
  {
    "label": "GetAtlasSlotInfoAtPosition()",
    "kind": "Method",
    "detail": "Function (# if WITH_ATLAS_DEBUGGING FAtlasSlotInfo)",
    "insertText": "GetAtlasSlotInfoAtPosition(FIntPoint InPosition, int32 AtlasIndex)"
  },
  {
    "label": "CreateColorTexture()",
    "kind": "Method",
    "detail": "Function (# endif FSlateOpenGLTexture*)",
    "insertText": "CreateColorTexture(const FName TextureName, FColor InColor)"
  },
  {
    "label": "CreateDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "CreateDynamicTextureResource(FName ResourceName, uint32 Width, uint32 Height, const TArray< uint8 >& RawData)"
  },
  {
    "label": "ReleaseDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseDynamicTextureResource(const FSlateBrush& InBrush)"
  },
  {
    "label": "UpdateCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCache()"
  },
  {
    "label": "ConditionalFlushCache()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionalFlushCache()"
  },
  {
    "label": "CreateTextures()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "CreateTextures(const TArray< const FSlateBrush* >& Resources)"
  },
  {
    "label": "LoadTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadTexture(const FSlateBrush& InBrush, uint32& OutWidth, uint32& OutHeight, TArray<uint8>& OutDecodedImage)"
  },
  {
    "label": "GenerateTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GenerateTextureResource(const FNewTextureInfo& Info, FName TextureName)"
  },
  {
    "label": "GetDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetDynamicTextureResource(const FSlateBrush& InBrush)"
  },
  {
    "label": "GetVectorResource()",
    "kind": "Method",
    "detail": "Function (FSlateShaderResourceProxy*)",
    "insertText": "GetVectorResource(const FSlateBrush& Brush, FVector2f LocalSize, float DrawScale)"
  },
  {
    "label": "FDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (private : struct FDynamicTextureResource { FSlateShaderResourceProxy* Proxy ; FSlateOpenGLTexture* OpenGLTexture ;)",
    "insertText": "FDynamicTextureResource(FSlateOpenGLTexture* OpenGLTexture)"
  },
  {
    "label": "FDynamicTextureResource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDynamicTextureResource()"
  }
]