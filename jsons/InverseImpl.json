[
  {
    "label": "compute_inverse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse"
  },
  {
    "label": "compute_inverse_and_det_with_check",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse_and_det_with_check"
  },
  {
    "label": "compute_inverse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse"
  },
  {
    "label": "compute_inverse_and_det_with_check",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse_and_det_with_check"
  },
  {
    "label": "compute_inverse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse"
  },
  {
    "label": "compute_inverse_and_det_with_check",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse_and_det_with_check"
  },
  {
    "label": "compute_inverse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse"
  },
  {
    "label": "compute_inverse_and_det_with_check",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse_and_det_with_check"
  },
  {
    "label": "compute_inverse_size4",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse_size4"
  },
  {
    "label": "compute_inverse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse"
  },
  {
    "label": "compute_inverse_and_det_with_check",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "compute_inverse_and_det_with_check"
  },
  {
    "label": "Assignment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Assignment"
  },
  {
    "label": "PartialPivLU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PartialPivLU"
  },
  {
    "label": "FullPivLU",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FullPivLU"
  },
  {
    "label": "matrixEval()",
    "kind": "Method",
    "detail": "Function (internal::evaluator<MatrixType>)",
    "insertText": "matrixEval(matrix)"
  }
]