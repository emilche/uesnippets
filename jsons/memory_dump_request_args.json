[
  {
    "label": "ProcessMemoryDump",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ProcessMemoryDump"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "MemoryDumpArgs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MemoryDumpArgs"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TRACE_EVENT_MEMORY_DUMP_REQUEST_ARGS_H_ # define BASE_TRACE_EVENT_MEMORY_DUMP_REQUEST_ARGS_H_ # include<stdint . h> # include<memory> # include<string> # include \" base / base_export . h \" # include \" base / callback . h \" # include \" base / process / process_handle . h \" namespace base { namespace trace_event { class ProcessMemoryDump ; enum class MemoryDumpType { PERIODIC_INTERVAL,EXPLICITLY_TRIGGERED,SUMMARY_ONLY,LAST = SUMMARY_ONLY } ; enum class MemoryDumpLevelOfDetail : uint32_t { FIRST,BACKGROUND = FIRST,LIGHT,DETAILED,LAST = DETAILED } ; enum class MemoryDumpDeterminism : uint32_t { NONE,FORCE_GC } ; struct BASE_EXPORT MemoryDumpRequestArgs { uint64_t dump_guid ; MemoryDumpType dump_type ; MemoryDumpLevelOfDetail level_of_detail ; MemoryDumpDeterminism determinism ; } ; struct MemoryDumpArgs { MemoryDumpLevelOfDetail level_of_detail ; MemoryDumpDeterminism determinism ; uint64_t dump_guid ; } ; using ProcessMemoryDumpCallback = OnceCallback<)",
    "insertText": "void(bool success, uint64_t dump_guid, std::unique_ptr<ProcessMemoryDump>)"
  },
  {
    "label": "MemoryDumpTypeToString()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT const char*)",
    "insertText": "MemoryDumpTypeToString(const MemoryDumpType& dump_type)"
  },
  {
    "label": "StringToMemoryDumpType()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT MemoryDumpType)",
    "insertText": "StringToMemoryDumpType(const std::string& str)"
  },
  {
    "label": "MemoryDumpLevelOfDetailToString()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT const char*)",
    "insertText": "MemoryDumpLevelOfDetailToString(const MemoryDumpLevelOfDetail& level_of_detail)"
  },
  {
    "label": "StringToMemoryDumpLevelOfDetail()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT MemoryDumpLevelOfDetail)",
    "insertText": "StringToMemoryDumpLevelOfDetail(const std::string& str)"
  }
]