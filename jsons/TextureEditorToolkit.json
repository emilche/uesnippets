[
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "STextBlock",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextBlock"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "STextureEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "STextureEditorViewport"
  },
  {
    "label": "UFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UFactory"
  },
  {
    "label": "UTexture",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTexture"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTextureEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureEditorToolkit"
  },
  {
    "label": "IToolkitHost",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IToolkitHost"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "IDetailsView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDetailsView"
  },
  {
    "label": "SCheckBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCheckBox"
  },
  {
    "label": "FTextureEditorCustomEncode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTextureEditorCustomEncode"
  },
  {
    "label": "FTextureEditorToolkit()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" DerivedDataCacheKeyProxy . h \" # include \" UObject / GCObject . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" EditorUndoClient . h \" # include \" Toolkits / IToolkitHost . h \" # include \" Interfaces / ITextureEditorToolkit . h \" # include \" IDetailsView . h \" # include \" TextureEditorSettings . h \" class SMenuAnchor ; class STextBlock ; class SButton ; class STextureEditorViewport ; class UFactory ; class UTexture ; namespace FOodleDataCompression { enum class ECompressor : uint8 ; enum class ECompressionLevel : int8 ; } enum class ETextureChannelButton : uint8 { Red,Green,Blue,Alpha } ; class FTextureEditorToolkit : public ITextureEditorToolkit,public FEditorUndoClient,public FGCObject { public :)",
    "insertText": "FTextureEditorToolkit()"
  },
  {
    "label": "InitTextureEditor()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "InitTextureEditor(const EToolkitMode::Type Mode, const TSharedPtr<class IToolkitHost>& InitToolkitHost, UObject* ObjectToEdit)"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (public : FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "RegisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "UnregisterTabSpawners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterTabSpawners(const TSharedRef<class FTabManager>& TabManager)"
  },
  {
    "label": "CalculateTextureDimensions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateTextureDimensions(int32& OutWidth, int32& OutHeight, int32& OutDepth, int32& OutArraySize, bool bInIncludeBorderSize)"
  },
  {
    "label": "GetColourChannelBlendMode()",
    "kind": "Method",
    "detail": "Function (ESimpleElementBlendMode)",
    "insertText": "GetColourChannelBlendMode()"
  },
  {
    "label": "GetMipLevel()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMipLevel()"
  },
  {
    "label": "GetLayer()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLayer()"
  },
  {
    "label": "GetSlice()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSlice()"
  },
  {
    "label": "GetFace()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetFace()"
  },
  {
    "label": "GetTexture()",
    "kind": "Method",
    "detail": "Function (UTexture*)",
    "insertText": "GetTexture()"
  },
  {
    "label": "HasValidTextureResource()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidTextureResource()"
  },
  {
    "label": "GetUseSpecifiedMip()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseSpecifiedMip()"
  },
  {
    "label": "GetUseSpecifiedSlice()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseSpecifiedSlice()"
  },
  {
    "label": "GetUseSpecifiedFace()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetUseSpecifiedFace()"
  },
  {
    "label": "GetCustomZoomLevel()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "GetCustomZoomLevel()"
  },
  {
    "label": "SetCustomZoomLevel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCustomZoomLevel(double ZoomValue)"
  },
  {
    "label": "PopulateQuickInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateQuickInfo()"
  },
  {
    "label": "SetZoomMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetZoomMode(const ETextureEditorZoomMode ZoomMode)"
  },
  {
    "label": "GetZoomMode()",
    "kind": "Method",
    "detail": "Function (ETextureEditorZoomMode)",
    "insertText": "GetZoomMode()"
  },
  {
    "label": "CalculateDisplayedZoomLevel()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "CalculateDisplayedZoomLevel()"
  },
  {
    "label": "ZoomIn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomIn()"
  },
  {
    "label": "ZoomOut()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomOut()"
  },
  {
    "label": "GetVolumeOpacity()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetVolumeOpacity()"
  },
  {
    "label": "SetVolumeOpacity()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolumeOpacity(float VolumeOpacity)"
  },
  {
    "label": "GetVolumeViewMode()",
    "kind": "Method",
    "detail": "Function (ETextureEditorVolumeViewMode)",
    "insertText": "GetVolumeViewMode()"
  },
  {
    "label": "SetVolumeViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVolumeViewMode(const ETextureEditorVolumeViewMode VolumeViewMode)"
  },
  {
    "label": "GetCubemapViewMode()",
    "kind": "Method",
    "detail": "Function (ETextureEditorCubemapViewMode)",
    "insertText": "GetCubemapViewMode()"
  },
  {
    "label": "SetCubemapViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCubemapViewMode(const ETextureEditorCubemapViewMode CubemapViewMode)"
  },
  {
    "label": "IsUsingOrientation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUsingOrientation()"
  },
  {
    "label": "GetOrientation()",
    "kind": "Method",
    "detail": "Function (const FRotator&)",
    "insertText": "GetOrientation()"
  },
  {
    "label": "SetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOrientation(const FRotator& InOrientation)"
  },
  {
    "label": "ResetOrientation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetOrientation()"
  },
  {
    "label": "GetSampling()",
    "kind": "Method",
    "detail": "Function (ETextureEditorSampling)",
    "insertText": "GetSampling()"
  },
  {
    "label": "GetExposureBias()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetExposureBias()"
  },
  {
    "label": "GetToolkitFName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetToolkitFName()"
  },
  {
    "label": "GetWorldCentricTabColorScale()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetWorldCentricTabColorScale()"
  },
  {
    "label": "GetWorldCentricTabPrefix()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetWorldCentricTabPrefix()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  },
  {
    "label": "GetReferencerName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetReferencerName()"
  },
  {
    "label": "PostUndo()",
    "kind": "Method",
    "detail": "Function (} protected : void)",
    "insertText": "PostUndo(bool bSuccess)"
  },
  {
    "label": "PostRedo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostRedo(bool bSuccess)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "BuildTexturePropertiesWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildTexturePropertiesWidget()"
  },
  {
    "label": "CreateInternalWidgets()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInternalWidgets()"
  },
  {
    "label": "ExtendToolBar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExtendToolBar()"
  },
  {
    "label": "FillToolbar()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillToolbar(FToolBarBuilder& ToolbarBuilder)"
  },
  {
    "label": "GetMaxMipLevel()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetMaxMipLevel()"
  },
  {
    "label": "GetNumMips()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumMips()"
  },
  {
    "label": "GetPixelFormat()",
    "kind": "Method",
    "detail": "Function (EPixelFormat)",
    "insertText": "GetPixelFormat()"
  },
  {
    "label": "GetMaxLayer()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetMaxLayer()"
  },
  {
    "label": "GetMaxSlice()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetMaxSlice()"
  },
  {
    "label": "IsCubeTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCubeTexture()"
  },
  {
    "label": "IsVolumeTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVolumeTexture()"
  },
  {
    "label": "Is2DArrayTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Is2DArrayTexture()"
  },
  {
    "label": "IsArrayTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsArrayTexture()"
  },
  {
    "label": "OnGenerateMipMapLevelMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateMipMapLevelMenu()"
  },
  {
    "label": "OnGenerateSettingsMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "OnGenerateSettingsMenu()"
  },
  {
    "label": "IsChannelButtonEnabled()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsChannelButtonEnabled(ETextureChannelButton Button)"
  },
  {
    "label": "GetChannelButtonBackgroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetChannelButtonBackgroundColor(ETextureChannelButton Button)"
  },
  {
    "label": "GetChannelButtonForegroundColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetChannelButtonForegroundColor(ETextureChannelButton Button)"
  },
  {
    "label": "OnChannelButtonCheckStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChannelButtonCheckStateChanged(ETextureChannelButton Button)"
  },
  {
    "label": "OnGetChannelButtonCheckState()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "OnGetChannelButtonCheckState(ETextureChannelButton Button)"
  },
  {
    "label": "HandleCheckeredBackgroundActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCheckeredBackgroundActionExecute(ETextureEditorBackgrounds Background)"
  },
  {
    "label": "HandleCheckeredBackgroundActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCheckeredBackgroundActionIsChecked(ETextureEditorBackgrounds Background)"
  },
  {
    "label": "HandleSamplingActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSamplingActionExecute(ETextureEditorSampling Sampling)"
  },
  {
    "label": "HandleSamplingActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleSamplingActionIsChecked(ETextureEditorSampling Sampling)"
  },
  {
    "label": "HandleVolumeViewModeActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleVolumeViewModeActionExecute(ETextureEditorVolumeViewMode InViewMode)"
  },
  {
    "label": "HandleVolumeViewModeActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleVolumeViewModeActionIsChecked(ETextureEditorVolumeViewMode InViewMode)"
  },
  {
    "label": "HandleCubemapViewModeActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCubemapViewModeActionExecute(ETextureEditorCubemapViewMode InViewMode)"
  },
  {
    "label": "HandleCubemapViewModeActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCubemapViewModeActionIsChecked(ETextureEditorCubemapViewMode InViewMode)"
  },
  {
    "label": "HandleCompressNowActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCompressNowActionExecute()"
  },
  {
    "label": "HandleCompressNowActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleCompressNowActionCanExecute()"
  },
  {
    "label": "HandleFitToViewportActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFitToViewportActionExecute()"
  },
  {
    "label": "HandleFillToViewportActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFillToViewportActionExecute()"
  },
  {
    "label": "IsFitToViewport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFitToViewport()"
  },
  {
    "label": "IsFillToViewport()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFillToViewport()"
  },
  {
    "label": "HandleZoomToNaturalActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleZoomToNaturalActionExecute()"
  },
  {
    "label": "HandleMipLevelCheckBoxCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMipLevelCheckBoxCheckedStateChanged(ECheckBoxState InNewState)"
  },
  {
    "label": "HandleMipLevelCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleMipLevelCheckBoxIsChecked()"
  },
  {
    "label": "HandleMipLevelCheckBoxIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleMipLevelCheckBoxIsEnabled()"
  },
  {
    "label": "HandleMipLevelChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMipLevelChanged(int32 NewMipLevel)"
  },
  {
    "label": "HandleMipLevelEntryBoxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "HandleMipLevelEntryBoxValue()"
  },
  {
    "label": "HandleMipMapMinusButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleMipMapMinusButtonClicked()"
  },
  {
    "label": "HandleMipMapPlusButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleMipMapPlusButtonClicked()"
  },
  {
    "label": "HandleLayerEntryBoxChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleLayerEntryBoxChanged(int32 NewMipLevel)"
  },
  {
    "label": "HandleLayerEntryBoxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "HandleLayerEntryBoxValue()"
  },
  {
    "label": "HasLayers()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasLayers()"
  },
  {
    "label": "HasSlices()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasSlices()"
  },
  {
    "label": "GetNumSlices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSlices()"
  },
  {
    "label": "HandleSliceCheckBoxIsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleSliceCheckBoxIsEnabled()"
  },
  {
    "label": "HandleSliceCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleSliceCheckBoxIsChecked()"
  },
  {
    "label": "HandleSliceCheckBoxCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSliceCheckBoxCheckedStateChanged(ECheckBoxState InNewState)"
  },
  {
    "label": "HandleSliceEntryBoxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "HandleSliceEntryBoxValue()"
  },
  {
    "label": "HandleSliceEntryBoxChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSliceEntryBoxChanged(int32 Slice)"
  },
  {
    "label": "HandleFaceCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleFaceCheckBoxIsChecked()"
  },
  {
    "label": "HandleFaceCheckBoxCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFaceCheckBoxCheckedStateChanged(ECheckBoxState InNewState)"
  },
  {
    "label": "HandleFaceEntryBoxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "HandleFaceEntryBoxValue()"
  },
  {
    "label": "HandleFaceEntryBoxChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleFaceEntryBoxChanged(int32 Face)"
  },
  {
    "label": "HandleView3DCheckBoxIsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "HandleView3DCheckBoxIsChecked()"
  },
  {
    "label": "HandleView3DCheckBoxCheckedStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleView3DCheckBoxCheckedStateChanged(ECheckBoxState InNewState)"
  },
  {
    "label": "HandleReimportActionCanExecute()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleReimportActionCanExecute()"
  },
  {
    "label": "HandleReimportActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReimportActionExecute()"
  },
  {
    "label": "HandleReimportManagerPostReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReimportManagerPostReimport(UObject* InObject, bool bSuccess)"
  },
  {
    "label": "HandleReimportManagerPreReimport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleReimportManagerPreReimport(UObject* InObject)"
  },
  {
    "label": "HandleAssetPostImport()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAssetPostImport(UFactory* InFactory, UObject* InObject)"
  },
  {
    "label": "HandleDesaturationChannelActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleDesaturationChannelActionExecute()"
  },
  {
    "label": "HandleDesaturationChannelActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleDesaturationChannelActionIsChecked()"
  },
  {
    "label": "HandleSettingsActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleSettingsActionExecute()"
  },
  {
    "label": "HandleTabSpawnerSpawnProperties()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "HandleTabSpawnerSpawnProperties(const FSpawnTabArgs& Args)"
  },
  {
    "label": "HandleTabSpawnerSpawnViewport()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "HandleTabSpawnerSpawnViewport(const FSpawnTabArgs& Args)"
  },
  {
    "label": "HandleTabSpawnerSpawnOodle()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SDockTab>)",
    "insertText": "HandleTabSpawnerSpawnOodle(const FSpawnTabArgs& Args)"
  },
  {
    "label": "HandleTextureBorderActionExecute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleTextureBorderActionExecute()"
  },
  {
    "label": "HandleTextureBorderActionIsChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleTextureBorderActionIsChecked()"
  },
  {
    "label": "HandleExposureBiasWidgetVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "HandleExposureBiasWidgetVisibility()"
  },
  {
    "label": "HandleExposureBiasBoxValue()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "HandleExposureBiasBoxValue()"
  },
  {
    "label": "HandleExposureBiasBoxValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleExposureBiasBoxValueChanged(int32 NewExposure)"
  },
  {
    "label": "HandleOpacitySliderChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleOpacitySliderChanged(float NewValue)"
  },
  {
    "label": "HandleOpacitySliderValue()",
    "kind": "Method",
    "detail": "Function (TOptional<float>)",
    "insertText": "HandleOpacitySliderValue()"
  },
  {
    "label": "HandleZoomMenuEntryClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleZoomMenuEntryClicked(double ZoomValue)"
  },
  {
    "label": "HandleZoomMenuFillClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleZoomMenuFillClicked()"
  },
  {
    "label": "IsZoomMenuFillChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsZoomMenuFillChecked()"
  },
  {
    "label": "HandleZoomMenuFitClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleZoomMenuFitClicked()"
  },
  {
    "label": "IsZoomMenuFitChecked()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsZoomMenuFitChecked()"
  },
  {
    "label": "HandleZoomPercentageText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "HandleZoomPercentageText()"
  },
  {
    "label": "HandleZoomSliderChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleZoomSliderChanged(float NewValue)"
  },
  {
    "label": "HandleZoomSliderValue()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "HandleZoomSliderValue()"
  },
  {
    "label": "HandleViewOptionsMenuButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleViewOptionsMenuButtonClicked()"
  },
  {
    "label": "MakeChannelControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeChannelControlWidget()"
  },
  {
    "label": "MakeLODControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeLODControlWidget()"
  },
  {
    "label": "MakeLayerControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeLayerControlWidget()"
  },
  {
    "label": "MakeSliceControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeSliceControlWidget()"
  },
  {
    "label": "MakeFaceControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeFaceControlWidget()"
  },
  {
    "label": "MakeExposureContolWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeExposureContolWidget()"
  },
  {
    "label": "MakeOpacityControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeOpacityControlWidget()"
  },
  {
    "label": "MakeZoomControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeZoomControlWidget()"
  },
  {
    "label": "MakeView3DControlWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeView3DControlWidget()"
  },
  {
    "label": "MakePlatformSelectorWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakePlatformSelectorWidget()"
  },
  {
    "label": "OnUseEditorOodleSettingsChanged()",
    "kind": "Method",
    "detail": "Function (private : TObjectPtr<UTexture> Texture ; TSharedPtr<STextureEditorViewport> TextureViewport ; TSharedPtr<SVerticalBox> OodleTabContainer ; TSharedPtr<SVerticalBox> TextureProperties ; TSharedPtr<class IDetailsView> TexturePropertiesWidget ; TSharedPtr<STextBlock> ImportedText ; TSharedPtr<STextBlock> CurrentText ; TSharedPtr<STextBlock> MaxInGameText ; TSharedPtr<STextBlock> SizeText ; TSharedPtr<STextBlock> MethodText ; TSharedPtr<STextBlock> FormatText ; TSharedPtr<STextBlock> LODBiasText ; TSharedPtr<STextBlock> HasAlphaChannelText ; TSharedPtr<STextBlock> SourceMipsAlphaDetectedText ; TSharedPtr<SButton> DetectSourceAlphaButton ; TSharedPtr<STextBlock> NumMipsText ; TSharedPtr<STextBlock> MipLevelTextBlock ; TSharedPtr<STextBlock> EncodeSpeedText ; TSharedPtr<STextBlock> SceneCaptureSizeText ; TSharedPtr<STextBlock> SceneCaptureNameText ; TSharedPtr<STextBlock> OodleRDOText ; TSharedPtr<STextBlock> OodleEffortText ; TSharedPtr<STextBlock> OodleTilingText ; TSharedPtr<STextBlock> OodleRDOSourceText ; TSharedPtr<STextBlock> OodleEncoderText ; TSharedPtr<STextBlock> OodleEncodeSpeedText ; TSharedPtr<STextBlock> OodleRDOEnabledLabel ; TSharedPtr<STextBlock> OodleRDOSourceLabel ; TSharedPtr<STextBlock> OodleEffortLabel ; TSharedPtr<STextBlock> OodleTilingLabel ; TSharedPtr<SMenuAnchor> ViewOptionsMenuAnchor ; bool bIsRedChannel ; bool bIsGreenChannel ; bool bIsBlueChannel ; bool bIsAlphaChannel ; bool bIsDesaturation ; int32 PreviewEffectiveTextureWidth ; int32 PreviewEffectiveTextureHeight ; int32 SpecifiedMipLevel ; bool bUseSpecifiedMipLevel ; int32 SpecifiedLayer ; int32 SpecifiedSlice ; bool bUseSpecifiedSlice ; int32 SpecifiedFace ; bool bUseSpecifiedFace ; double Zoom ; FName ViewingPlatform ; int32 ExposureBias ; ETextureEditorZoomMode ZoomMode ; float VolumeOpacity ; ETextureEditorVolumeViewMode VolumeViewMode ; ETextureEditorCubemapViewMode CubemapViewMode ; ETextureEditorSampling Sampling ; FRotator Orientation ; bool bIsVolumeTexture ; TArray<TSharedPtr<FString>> AvailablePlatforms ; TArray<FName> AvailablePlatformNames ; TSharedPtr<class SCheckBox> OodleOverrideCheck ; void)",
    "insertText": "OnUseEditorOodleSettingsChanged(ECheckBoxState NewState)"
  },
  {
    "label": "UseEditorOodleSettingsChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "UseEditorOodleSettingsChecked()"
  },
  {
    "label": "DetectSourceAlphaButton_Clicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "DetectSourceAlphaButton_Clicked()"
  },
  {
    "label": "CanPlatformPreview()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanPlatformPreview()"
  },
  {
    "label": "EditorOodleSettingsEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EditorOodleSettingsEnabled()"
  },
  {
    "label": "GetEditorOodleSettingsEffort()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetEditorOodleSettingsEffort()"
  },
  {
    "label": "EditorOodleSettingsEffortChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorOodleSettingsEffortChanged(int32 NewValue, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "GetEditorOodleSettingsRDO()",
    "kind": "Method",
    "detail": "Function (TOptional<int32>)",
    "insertText": "GetEditorOodleSettingsRDO()"
  },
  {
    "label": "EditorOodleSettingsRDOCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorOodleSettingsRDOCommitted(int32 NewValue, ETextCommit::Type CommitType)"
  },
  {
    "label": "GetEditorOodleSettingsTiling()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetEditorOodleSettingsTiling()"
  },
  {
    "label": "EditorOodleSettingsTilingChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorOodleSettingsTilingChanged(int32 NewValue, ESelectInfo::Type SelectionType)"
  },
  {
    "label": "EstimateCompressionEnabled()",
    "kind": "Method",
    "detail": "Function (TVariant<FString,UE::DerivedData::FCacheKeyProxy> OodleCompressedPreviewDDCKey ; bool bEstimateCompressionEnabled = false ; bool)",
    "insertText": "EstimateCompressionEnabled()"
  },
  {
    "label": "EstimateCompressionChecked()",
    "kind": "Method",
    "detail": "Function (ECheckBoxState)",
    "insertText": "EstimateCompressionChecked()"
  },
  {
    "label": "PackagingSettingsChanged()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<STextBlock> OodleCompressorUsed ; TSharedPtr<STextBlock> OodleLevelUsed ; TSharedPtr<STextBlock> OodleCompressionBlockUsed ; TSharedPtr<STextBlock> OodleEstimateRaw ; TSharedPtr<STextBlock> OodleEstimateCompressed ; TArray<TSharedPtr<FString>> PackagingSettingsNames ; void)",
    "insertText": "PackagingSettingsChanged(TSharedPtr<FString> Selection, ESelectInfo::Type SelectInfo)"
  },
  {
    "label": "PostTextureRecode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostTextureRecode()"
  }
]