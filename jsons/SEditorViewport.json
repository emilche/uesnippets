[
  {
    "label": "FActiveTimerHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FActiveTimerHandle"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "FUICommandList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUICommandList"
  },
  {
    "label": "SViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SViewport"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FToolMenuContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FToolMenuContext"
  },
  {
    "label": "SEditorViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SEditorViewport"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Styling / SlateColor . h \" # include \" Input / Reply . h \" # include \" Widgets / SOverlay . h \" # include \" Widgets / SViewport . h \" # include \" UnrealWidgetFwd . h \" # include \" EditorViewportClient . h \" class FActiveTimerHandle ; class FSceneViewport ; class FUICommandList ; class SViewport ; struct FSlateBrush ; struct FToolMenuContext ; class SEditorViewport : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SEditorViewport) : _ViewportSize(SViewport::FArguments::GetDefaultViewportSize())"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(FVector2D, ViewportSize)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_END_ARGS() UNREALED_API SEditorViewport()"
  },
  {
    "label": "SEditorViewport()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SEditorViewport()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "OnFocusReceived()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnFocusReceived(const FGeometry& MyGeometry, const FFocusEvent& InFocusEvent)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Tick(const FGeometry& AllottedGeometry, const double InCurrentTime, const float InDeltaTime)"
  },
  {
    "label": "IsRealtime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRealtime()"
  },
  {
    "label": "IsVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsVisible()"
  },
  {
    "label": "Invalidate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Invalidate()"
  },
  {
    "label": "OnToggleRealtime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleRealtime()"
  },
  {
    "label": "SetRenderDirectlyToWindow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderDirectlyToWindow(const bool bInRenderDirectlyToWindow)"
  },
  {
    "label": "EnableStereoRendering()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableStereoRendering(const bool bInEnableStereoRendering)"
  },
  {
    "label": "IsCoordSystemActive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCoordSystemActive(ECoordSystem CoordSystem)"
  },
  {
    "label": "OnCycleCoordinateSystem()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCycleCoordinateSystem()"
  },
  {
    "label": "GetCommandList()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<FUICommandList>)",
    "insertText": "GetCommandList()"
  },
  {
    "label": "BuildFixedEV100Menu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildFixedEV100Menu()"
  },
  {
    "label": "BuildWireframeMenu()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildWireframeMenu()"
  },
  {
    "label": "ToggleInViewportContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleInViewportContextMenu()"
  },
  {
    "label": "HideInViewportContextMenu()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "HideInViewportContextMenu()"
  },
  {
    "label": "UpdateInViewportMenuLocation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "UpdateInViewportMenuLocation(const FVector2D InLocation)"
  },
  {
    "label": "CanToggleInViewportContextMenu()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanToggleInViewportContextMenu()"
  },
  {
    "label": "TogglePreviewingScreenPercentage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TogglePreviewingScreenPercentage()"
  },
  {
    "label": "OnOpenViewportPerformanceProjectSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenViewportPerformanceProjectSettings()"
  },
  {
    "label": "OnOpenViewportPerformanceEditorPreferences()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnOpenViewportPerformanceEditorPreferences()"
  },
  {
    "label": "GetCurrentFeatureLevelPreviewText()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetCurrentFeatureLevelPreviewText(bool bDrawOnlyLabel)"
  },
  {
    "label": "GetShaderPlatformHelper()",
    "kind": "Method",
    "detail": "Function (EShaderPlatform)",
    "insertText": "GetShaderPlatformHelper(const ERHIFeatureLevel::Type InFeatureLevel)"
  },
  {
    "label": "GetCurrentFeatureLevelPreviewTextVisibility()",
    "kind": "Method",
    "detail": "Function (protected : EVisibility)",
    "insertText": "GetCurrentFeatureLevelPreviewTextVisibility()"
  },
  {
    "label": "CanToggleRealtime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanToggleRealtime()"
  },
  {
    "label": "BuildFeatureLevelWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "BuildFeatureLevelWidget()"
  },
  {
    "label": "OnGetFixedEV100Value()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "OnGetFixedEV100Value()"
  },
  {
    "label": "OnFixedEV100ValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFixedEV100ValueChanged(float NewValue)"
  },
  {
    "label": "IsFixedEV100Enabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFixedEV100Enabled()"
  },
  {
    "label": "OnWireframeOpacityChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnWireframeOpacityChanged(float Opacity)"
  },
  {
    "label": "OnGetWireframeOpacity()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "OnGetWireframeOpacity()"
  },
  {
    "label": "MakeEditorViewportClient()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FEditorViewportClient>)",
    "insertText": "MakeEditorViewportClient()"
  },
  {
    "label": "BuildViewportToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "BuildViewportToolbar()"
  },
  {
    "label": "MakeViewportToolbar()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "MakeViewportToolbar()"
  },
  {
    "label": "PopulateViewportOverlays()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PopulateViewportOverlays(TSharedRef<SOverlay> Overlay)"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "BindShowCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindShowCommands(FUICommandList& OutCommandList)"
  },
  {
    "label": "OnGetViewportBorderBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "OnGetViewportBorderBrush()"
  },
  {
    "label": "OnGetFocusedViewportIndicatorVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "OnGetFocusedViewportIndicatorVisibility()"
  },
  {
    "label": "ToggleStatCommand()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleStatCommand(FString CommandName)"
  },
  {
    "label": "IsStatCommandVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStatCommandVisible(FString CommandName)"
  },
  {
    "label": "ToggleShowFlag()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToggleShowFlag(uint32 EngineShowFlagIndex)"
  },
  {
    "label": "IsShowFlagEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsShowFlagEnabled(uint32 EngineShowFlagIndex)"
  },
  {
    "label": "ChangeExposureSetting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ChangeExposureSetting()"
  },
  {
    "label": "IsExposureSettingSelected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExposureSettingSelected()"
  },
  {
    "label": "OnScreenCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScreenCapture()"
  },
  {
    "label": "OnScreenCaptureForProjectThumbnail()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnScreenCaptureForProjectThumbnail()"
  },
  {
    "label": "DoesAllowScreenCapture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesAllowScreenCapture()"
  },
  {
    "label": "OnDecrementPositionGridSize()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnDecrementPositionGridSize()"
  },
  {
    "label": "OnIncrementRotationGridSize()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnIncrementRotationGridSize()"
  },
  {
    "label": "OnDecrementRotationGridSize()",
    "kind": "Method",
    "detail": "Function (} ; void)",
    "insertText": "OnDecrementRotationGridSize()"
  },
  {
    "label": "IsWidgetModeActive()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "IsWidgetModeActive(UE::Widget::EWidgetMode Mode)"
  },
  {
    "label": "IsTranslateRotateModeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTranslateRotateModeVisible()"
  },
  {
    "label": "Is2DModeVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Is2DModeVisible()"
  },
  {
    "label": "OnCycleWidgetMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCycleWidgetMode()"
  },
  {
    "label": "OnFocusViewportToSelection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnFocusViewportToSelection()"
  },
  {
    "label": "GetWorld()",
    "kind": "Method",
    "detail": "Function (} UWorld*)",
    "insertText": "GetWorld()"
  },
  {
    "label": "OnToggleSurfaceSnap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleSurfaceSnap()"
  },
  {
    "label": "OnIsSurfaceSnapEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnIsSurfaceSnapEnabled()"
  },
  {
    "label": "OnToggleRotateToSurfaceNormal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnToggleRotateToSurfaceNormal()"
  },
  {
    "label": "IsRotateToSurfaceNormalEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsRotateToSurfaceNormalEnabled()"
  },
  {
    "label": "EnsureTick()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<SOverlay> ViewportOverlay ; TSharedPtr<FSceneViewport> SceneViewport ; TSharedPtr<SViewport> ViewportWidget ; TSharedPtr<FEditorViewportClient> Client ; TSharedPtr<FUICommandList> CommandList ; double LastTickTime ; FVector2D InViewportContextMenuLocation ; private : EActiveTimerReturnType)",
    "insertText": "EnsureTick(double InCurrentTime, float InDeltaTime)"
  },
  {
    "label": "GetActiveBorderVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetActiveBorderVisibility()"
  }
]