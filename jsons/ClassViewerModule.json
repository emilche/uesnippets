[
  {
    "label": "FClassViewerFilterFuncs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerFilterFuncs"
  },
  {
    "label": "IClassViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IClassViewerFilter"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FClassViewerSortElementInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FClassViewerSortElementInfo"
  },
  {
    "label": "FClassViewerInitializationOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerInitializationOptions"
  },
  {
    "label": "FClassViewerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassViewerModule"
  },
  {
    "label": "DEFINE_LOG_CATEGORY_STATIC()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" AssetRegistry / AssetData . h \" # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" CoreTypes . h \" # include \" Delegates / Delegate . h \" # include \" Internationalization / Text . h \" # include \" Logging / LogMacros . h \" # include \" Modules / ModuleInterface . h \" # include \" Templates / SharedPointer . h \" class FClassViewerFilterFuncs ; class IClassViewerFilter ; class IPropertyHandle ; class SWidget ; class UClass ;)",
    "insertText": "DEFINE_LOG_CATEGORY_STATIC(LogEditorClassViewer, Log, All)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnClassPicked, UClass*)"
  },
  {
    "label": "FClassViewerSortElementInfo()",
    "kind": "Method",
    "detail": "Function (namespace EClassViewerMode { enum Type { ClassBrowsing,ClassPicker,} ; } namespace EClassViewerDisplayMode { enum Type { DefaultView,TreeView,ListView,} ; } enum class EClassViewerNameTypeToDisplay : uint8 { Dynamic,DisplayName,ClassName,} ; struct FClassViewerSortElementInfo {)",
    "insertText": "FClassViewerSortElementInfo(TWeakObjectPtr<UClass> InClass, TSharedPtr<FString> InName, TSharedPtr<FString> InDisplayName) : Class(InClass), Name(InName), DisplayName(InDisplayName)"
  },
  {
    "label": "bool()",
    "kind": "Method",
    "detail": "Function (TArray<TSharedRef<IClassViewerFilter>> ClassFilters ; TFunction<)",
    "insertText": "bool(const FClassViewerSortElementInfo&, const FClassViewerSortElementInfo&)"
  },
  {
    "label": "FClassViewerInitializationOptions()",
    "kind": "Method",
    "detail": "Function (EClassViewerMode::Type Mode ; EClassViewerDisplayMode::Type DisplayMode ; bool bIsActorsOnly ; bool bIsPlaceableOnly ; bool bIsBlueprintBaseOnly ; bool bShowUnloadedBlueprints ; bool bShowNoneOption ; bool bShowObjectRootClass ; bool bExpandRootNodes ; bool bExpandAllNodes ; bool bEnableClassDynamicLoading ; EClassViewerNameTypeToDisplay NameTypeToDisplay ; FText ViewerTitleString ; TSharedPtr<IPropertyHandle> PropertyHandle ; TArray<FAssetData> AdditionalReferencingAssets ; bool bAllowViewOptions ; bool bShowBackgroundBorder = true ; TArray<UClass*> ExtraPickerCommonClasses ; bool bEditorClassesOnly ; UClass* InitiallySelectedClass ; bool bShowDefaultClasses ; bool bShowClassesViewer ; public :)",
    "insertText": "FClassViewerInitializationOptions() : Mode( EClassViewerMode::ClassPicker ) , DisplayMode(EClassViewerDisplayMode::DefaultView) , bIsActorsOnly(false) , bIsPlaceableOnly(false) , bIsBlueprintBaseOnly(false) , bShowUnloadedBlueprints(true) , bShowNoneOption(false) , bShowObjectRootClass(false) , bExpandRootNodes(true) , bExpandAllNodes(false) , bEnableClassDynamicLoading(true) , NameTypeToDisplay(EClassViewerNameTypeToDisplay::ClassName) , bAllowViewOptions(true) , bEditorClassesOnly(false) , InitiallySelectedClass(nullptr) , bShowDefaultClasses(true) , bShowClassesViewer(true)"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (} } ; PRAGMA_ENABLE_DEPRECATION_WARNINGS class FClassViewerModule : public IModuleInterface { public : void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "CreateClassViewer()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "CreateClassViewer(const FClassViewerInitializationOptions& InitOptions, const FOnClassPicked& OnClassPickedDelegate)"
  },
  {
    "label": "CreateClassFilter()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IClassViewerFilter>)",
    "insertText": "CreateClassFilter(const FClassViewerInitializationOptions& InitOptions)"
  },
  {
    "label": "CreateFilterFuncs()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FClassViewerFilterFuncs>)",
    "insertText": "CreateFilterFuncs()"
  },
  {
    "label": "RegisterGlobalClassViewerFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterGlobalClassViewerFilter(const TSharedRef<IClassViewerFilter>& Filter)"
  },
  {
    "label": "GetGlobalClassViewerFilter()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<IClassViewerFilter>&)",
    "insertText": "GetGlobalClassViewerFilter()"
  },
  {
    "label": "GetOnGlobalClassViewerFilterModified()",
    "kind": "Method",
    "detail": "Function (FSimpleMulticastDelegate&)",
    "insertText": "GetOnGlobalClassViewerFilterModified()"
  }
]