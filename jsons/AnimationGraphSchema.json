[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "FBPInterfaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPInterfaceDescription"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UAnimGraphNode_LinkedAnimGraphBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_LinkedAnimGraphBase"
  },
  {
    "label": "UAnimationGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationGraphSchema"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "SpawnNodeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnNodeFromAsset(UAnimationAsset* Asset, const FVector2D& GraphPosition, UEdGraph* Graph, UEdGraphPin* PinIfAvailable)"
  },
  {
    "label": "SpawnRigidBodyNodeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnRigidBodyNodeFromAsset(UPhysicsAsset* Asset, const FVector2D& GraphPosition, UEdGraph* Graph)"
  },
  {
    "label": "UpdateNodeWithAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNodeWithAsset(class UK2Node* K2Node, UAnimationAsset* Asset)"
  },
  {
    "label": "AutoArrangeInterfaceGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoArrangeInterfaceGraph(UEdGraph& Graph)"
  },
  {
    "label": "IsPosePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPosePin(const FEdGraphPinType& PinType)"
  },
  {
    "label": "IsLocalSpacePosePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocalSpacePosePin(const FEdGraphPinType& PinType)"
  },
  {
    "label": "IsComponentSpacePosePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComponentSpacePosePin(const FEdGraphPinType& PinType)"
  },
  {
    "label": "MakeLocalSpacePosePin()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "MakeLocalSpacePosePin()"
  },
  {
    "label": "MakeComponentSpacePosePin()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "MakeComponentSpacePosePin()"
  },
  {
    "label": "ConformAnimGraphToInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformAnimGraphToInterface(UBlueprint* InBlueprint, UEdGraph& InGraph, UFunction* InFunction)"
  },
  {
    "label": "ConformAnimLayersByGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformAnimLayersByGuid(const UAnimBlueprint* InAnimBlueprint, const FBPInterfaceDescription& CurrentInterfaceDesc)"
  },
  {
    "label": "GetPositionForNewLinkedInputPoseNode()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "GetPositionForNewLinkedInputPoseNode(InGraph)"
  },
  {
    "label": "GetPositionForNewLinkedInputPoseNode()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "GetPositionForNewLinkedInputPoseNode(UEdGraph& InGraph)"
  },
  {
    "label": "MakeBindingWidgetForPin()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "MakeBindingWidgetForPin(const TArray<UAnimGraphNode_Base*>& InAnimGraphNodes, FName InPinName, bool bInOnGraphNode, TAttribute<bool> bInIsEnabled)"
  },
  {
    "label": "HideUnboundPropertyPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideUnboundPropertyPins(UAnimGraphNode_LinkedAnimGraphBase* Node)"
  }
]