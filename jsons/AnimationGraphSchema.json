[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "UAnimBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimBlueprint"
  },
  {
    "label": "UPhysicsAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPhysicsAsset"
  },
  {
    "label": "FBPInterfaceDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBPInterfaceDescription"
  },
  {
    "label": "UAnimGraphNode_Base",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_Base"
  },
  {
    "label": "UAnimGraphNode_LinkedAnimGraphBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_LinkedAnimGraphBase"
  },
  {
    "label": "UAnimationGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationGraphSchema"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" AssetRegistry / AssetData . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" EdGraphSchema_K2 . h \" # include \" AnimationGraphSchema . generated . h \" class FMenuBuilder ; class UAnimationAsset ; class UAnimBlueprint ; class UPhysicsAsset ; struct FBPInterfaceDescription ; class UAnimGraphNode_Base ; class UAnimGraphNode_LinkedAnimGraphBase ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() UPROPERTY()"
  },
  {
    "label": "GetPinTypeColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetPinTypeColor(const FEdGraphPinType& PinType)"
  },
  {
    "label": "GetGraphType()",
    "kind": "Method",
    "detail": "Function (EGraphType)",
    "insertText": "GetGraphType(const UEdGraph* TestEdGraph)"
  },
  {
    "label": "CreateDefaultNodesForGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateDefaultNodesForGraph(UEdGraph& Graph)"
  },
  {
    "label": "HandleGraphBeingDeleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleGraphBeingDeleted(UEdGraph& GraphBeingRemoved)"
  },
  {
    "label": "CreateAutomaticConversionNodeAndConnections()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CreateAutomaticConversionNodeAndConnections(UEdGraphPin* PinA, UEdGraphPin* PinB)"
  },
  {
    "label": "DroppedAssetsOnGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnGraph(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraph* Graph)"
  },
  {
    "label": "DroppedAssetsOnNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnNode(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphNode* Node)"
  },
  {
    "label": "DroppedAssetsOnPin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DroppedAssetsOnPin(const TArray<FAssetData>& Assets, const FVector2D& GraphPosition, UEdGraphPin* Pin)"
  },
  {
    "label": "GetAssetsNodeHoverMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsNodeHoverMessage(const TArray<FAssetData>& Assets, const UEdGraphNode* HoverNode, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "GetAssetsPinHoverMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsPinHoverMessage(const TArray<FAssetData>& Assets, const UEdGraphPin* HoverPin, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "GetAssetsGraphHoverMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetsGraphHoverMessage(const TArray<FAssetData>& Assets, const UEdGraph* HoverGraph, FString& OutTooltipText, bool& OutOkIcon)"
  },
  {
    "label": "GetContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetContextMenuActions(class UToolMenu* Menu, class UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "GetPinDisplayName()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPinDisplayName(const UEdGraphPin* Pin)"
  },
  {
    "label": "CanDuplicateGraph()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateGraph(UEdGraph* InSourceGraph)"
  },
  {
    "label": "ShouldAlwaysPurgeOnModification()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldAlwaysPurgeOnModification()"
  },
  {
    "label": "GetGraphDisplayInformation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGraphDisplayInformation(const UEdGraph& Graph, FGraphDisplayInfo& DisplayInfo)"
  },
  {
    "label": "CanGraphBeDropped()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanGraphBeDropped(TSharedPtr<FEdGraphSchemaAction> InAction)"
  },
  {
    "label": "BeginGraphDragAction()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "BeginGraphDragAction(TSharedPtr<FEdGraphSchemaAction> InAction, const FPointerEvent& MouseEvent = FPointerEvent())"
  },
  {
    "label": "DetermineConnectionResponseOfCompatibleTypedPins()",
    "kind": "Method",
    "detail": "Function (const FPinConnectionResponse)",
    "insertText": "DetermineConnectionResponseOfCompatibleTypedPins(const UEdGraphPin* PinA, const UEdGraphPin* PinB, const UEdGraphPin* InputPin, const UEdGraphPin* OutputPin)"
  },
  {
    "label": "SearchForAutocastFunction()",
    "kind": "Method",
    "detail": "Function (TOptional<FSearchForAutocastFunctionResults>)",
    "insertText": "SearchForAutocastFunction(const FEdGraphPinType& OutputPinType, const FEdGraphPinType& InputPinType)"
  },
  {
    "label": "ArePinsCompatible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ArePinsCompatible(const UEdGraphPin* PinA, const UEdGraphPin* PinB, const UClass* CallingContext = NULL, bool bIgnoreArray = false)"
  },
  {
    "label": "DoesSupportCollapsedNodes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesSupportCollapsedNodes()"
  },
  {
    "label": "CreateFunctionGraphTerminators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFunctionGraphTerminators(UEdGraph& Graph, UClass* Class)"
  },
  {
    "label": "CanShowDataTooltipForPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanShowDataTooltipForPin(const UEdGraphPin& Pin)"
  },
  {
    "label": "SpawnNodeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnNodeFromAsset(UAnimationAsset* Asset, const FVector2D& GraphPosition, UEdGraph* Graph, UEdGraphPin* PinIfAvailable)"
  },
  {
    "label": "SpawnRigidBodyNodeFromAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SpawnRigidBodyNodeFromAsset(UPhysicsAsset* Asset, const FVector2D& GraphPosition, UEdGraph* Graph)"
  },
  {
    "label": "UpdateNodeWithAsset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateNodeWithAsset(class UK2Node* K2Node, UAnimationAsset* Asset)"
  },
  {
    "label": "AutoArrangeInterfaceGraph()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoArrangeInterfaceGraph(UEdGraph& Graph)"
  },
  {
    "label": "IsPosePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPosePin(const FEdGraphPinType& PinType)"
  },
  {
    "label": "IsLocalSpacePosePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLocalSpacePosePin(const FEdGraphPinType& PinType)"
  },
  {
    "label": "IsComponentSpacePosePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsComponentSpacePosePin(const FEdGraphPinType& PinType)"
  },
  {
    "label": "MakeLocalSpacePosePin()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "MakeLocalSpacePosePin()"
  },
  {
    "label": "MakeComponentSpacePosePin()",
    "kind": "Method",
    "detail": "Function (FEdGraphPinType)",
    "insertText": "MakeComponentSpacePosePin()"
  },
  {
    "label": "ConformAnimGraphToInterface()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformAnimGraphToInterface(UBlueprint* InBlueprint, UEdGraph& InGraph, UFunction* InFunction)"
  },
  {
    "label": "ConformAnimLayersByGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConformAnimLayersByGuid(const UAnimBlueprint* InAnimBlueprint, const FBPInterfaceDescription& CurrentInterfaceDesc)"
  },
  {
    "label": "GetPositionForNewLinkedInputPoseNode()",
    "kind": "Method",
    "detail": "Function (} FVector2D)",
    "insertText": "GetPositionForNewLinkedInputPoseNode(UEdGraph& InGraph)"
  },
  {
    "label": "MakeBindingWidgetForPin()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "MakeBindingWidgetForPin(const TArray<UAnimGraphNode_Base*>& InAnimGraphNodes, FName InPinName, bool bInOnGraphNode, TAttribute<bool> bInIsEnabled)"
  },
  {
    "label": "HideUnboundPropertyPins()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HideUnboundPropertyPins(UAnimGraphNode_LinkedAnimGraphBase* Node)"
  }
]