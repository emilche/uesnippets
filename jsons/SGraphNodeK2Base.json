[
  {
    "label": "SToolTip",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SToolTip"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGraphInformationPopupInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphInformationPopupInfo"
  },
  {
    "label": "FLinearColor",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearColor"
  },
  {
    "label": "FNodeInfoContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeInfoContext"
  },
  {
    "label": "FOverlayBrushInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FOverlayBrushInfo"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "GRAPHEDITOR_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "GRAPHEDITOR_API"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" CoreMinimal . h \" # include \" Internationalization / Text . h \" # include \" Math / Vector2D . h \" # include \" SGraphNode . h \" # include \" SNodePanel . h \" # include \" Templates / SharedPointer . h \" class SToolTip ; class UObject ; struct FGraphInformationPopupInfo ; struct FLinearColor ; struct FNodeInfoContext ; struct FOverlayBrushInfo ; struct FSlateBrush ; class SGraphNodeK2Base : public SGraphNode { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SGraphNodeK2Base)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<ISlateStyle>, Style) SLATE_END_ARGS() void Construct(const FArguments& InArgs)"
  },
  {
    "label": "UpdateGraphNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateGraphNode()"
  },
  {
    "label": "GetOverlayBrushes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOverlayBrushes(bool bSelected, const FVector2D WidgetSize, TArray<FOverlayBrushInfo>& Brushes)"
  },
  {
    "label": "GetNodeInfoPopups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeInfoPopups(FNodeInfoContext* Context, TArray<FGraphInformationPopupInfo>& Popups)"
  },
  {
    "label": "GetShadowBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetShadowBrush(bool bSelected)"
  },
  {
    "label": "GetDiffHighlightBrushes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetDiffHighlightBrushes(const FSlateBrush*& BackgroundOut, const FSlateBrush*& ForegroundOut)"
  },
  {
    "label": "PerformSecondPassLayout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PerformSecondPassLayout(const TMap< UObject*, TSharedRef<SNode> >& NodeToWidgetLookup)"
  },
  {
    "label": "GetComplexTooltip()",
    "kind": "Method",
    "detail": "Function (protected : TSharedPtr<SToolTip>)",
    "insertText": "GetComplexTooltip()"
  },
  {
    "label": "UpdateStandardNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStandardNode()"
  },
  {
    "label": "UpdateCompactNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCompactNode()"
  },
  {
    "label": "GetNodeCompactTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeCompactTitle()"
  },
  {
    "label": "GetToolTipHeading()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetToolTipHeading()"
  },
  {
    "label": "GetStyleSet()",
    "kind": "Method",
    "detail": "Function (const ISlateStyle&)",
    "insertText": "GetStyleSet()"
  }
]