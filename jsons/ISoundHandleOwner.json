[
  {
    "label": "ISoundHandleOwner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISoundHandleOwner"
  },
  {
    "label": "ISoundHandleOwner()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" Audio . h \" # include \" Audio / ISoundHandleSystem . h \" class ISoundHandleOwner { public : ~)",
    "insertText": "ISoundHandleOwner()"
  },
  {
    "label": "CreateSoundHandle()",
    "kind": "Method",
    "detail": "Function (Audio::EResult)",
    "insertText": "CreateSoundHandle(USoundBase* Sound, Audio::FSoundHandleID& OutSoundHandleID)"
  },
  {
    "label": "CreateSoundHandle()",
    "kind": "Method",
    "detail": "Function (OutSoundHandleID = Interface ->)",
    "insertText": "CreateSoundHandle(Sound, this)"
  },
  {
    "label": "UE_LOG()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "UE_LOG(LogAudio, Warning, TEXT(\"Couldn't create Sound Handle because we couldn't find any ISoundHandleSystems!\"))"
  }
]