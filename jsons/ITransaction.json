[
  {
    "label": "FArchive",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArchive"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FTransactionContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTransactionContext"
  },
  {
    "label": "ITransaction",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITransaction"
  },
  {
    "label": "FScriptArray",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScriptArray"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Misc / Guid . h \" # include \" Internationalization / Text . h \" # include \" UObject / UObjectHierarchyFwd . h \" # include \" Change . h \" typedef)",
    "insertText": "void(*STRUCT_DC)( void* TPtr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*STRUCT_AR)( class FArchive& Ar, void* TPtr)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (typedef)",
    "insertText": "void(*STRUCT_DTOR)( void* TPtr)"
  },
  {
    "label": "FTransactionContext()",
    "kind": "Method",
    "detail": "Function (enum class ETransactionStateEventType : uint8 { TransactionStarted,TransactionCanceled,PreTransactionFinalized,TransactionFinalized,PostTransactionFinalized,UndoRedoStarted,UndoRedoFinalized,} ; struct FTransactionContext {)",
    "insertText": "FTransactionContext() : TransactionId() , OperationId() , Title() , Context() , PrimaryObject(nullptr)"
  },
  {
    "label": "FTransactionContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FTransactionContext(const FGuid& InTransactionId, const FGuid& InOperationId, const FText& InSessionTitle, const TCHAR* InContext, UObject* InPrimaryObject) : TransactionId(InTransactionId) , OperationId(InOperationId) , Title(InSessionTitle) , Context(InContext) , PrimaryObject(InPrimaryObject)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "BeginOperation()",
    "kind": "Method",
    "detail": "Function (} FGuid TransactionId ; FGuid OperationId ; FText Title ; FString Context ; UObject* PrimaryObject ; } ; class ITransaction { public : void)",
    "insertText": "BeginOperation()"
  },
  {
    "label": "EndOperation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndOperation()"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize()"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply()"
  },
  {
    "label": "GetContext()",
    "kind": "Method",
    "detail": "Function (FTransactionContext)",
    "insertText": "GetContext()"
  },
  {
    "label": "IsTransient()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsTransient()"
  },
  {
    "label": "ContainsPieObjects()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsPieObjects()"
  },
  {
    "label": "SaveArray()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveArray(UObject* Object, class FScriptArray* Array, int32 Index, int32 Count, int32 Oper, int32 ElementSize, uint32 ElementAlignment, STRUCT_DC DefaultConstructor, STRUCT_AR Serializer, STRUCT_DTOR Destructor)"
  },
  {
    "label": "SaveObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveObject(UObject* Object)"
  },
  {
    "label": "StoreUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StoreUndo(UObject* Object, TUniquePtr<FChange> CustomChange)"
  },
  {
    "label": "SetPrimaryObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPrimaryObject(UObject* Object)"
  },
  {
    "label": "SnapshotObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapshotObject(UObject* Object, TArrayView<const FProperty*> Properties)"
  },
  {
    "label": "ContainsObject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsObject(const UObject* Object)"
  }
]