[
  {
    "label": "InstrItinerary",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "InstrItinerary"
  },
  {
    "label": "MCProcResourceDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MCProcResourceDesc"
  },
  {
    "label": "MCWriteProcResEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MCWriteProcResEntry"
  },
  {
    "label": "MCWriteLatencyEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MCWriteLatencyEntry"
  },
  {
    "label": "MCReadAdvanceEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MCReadAdvanceEntry"
  },
  {
    "label": "MCSchedClassDesc",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MCSchedClassDesc"
  },
  {
    "label": "MCSchedModel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "MCSchedModel"
  },
  {
    "label": "InstrItineraryData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "InstrItineraryData"
  },
  {
    "label": "idx",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "idx"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_MC_MCSCHEDULE_H # define LLVM_MC_MCSCHEDULE_H # include \" llvm / Support / DataTypes . h \" # include<cassert> namespace llvm { struct InstrItinerary ; struct MCProcResourceDesc { # ifndef NDEBUG const char* Name ; # endif unsigned NumUnits ; unsigned SuperIdx ; int BufferSize ; bool)",
    "insertText": "operator(const MCProcResourceDesc &Other)"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(hasInstrSchedModel() && \"No scheduling machine model\")"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(ProcResourceIdx < NumProcResourceKinds && \"bad proc resource idx\")"
  },
  {
    "label": "assert()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "assert(SchedClassIdx < NumSchedClasses && \"bad scheduling class idx\")"
  }
]