[
  {
    "label": "CacheClient",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CacheClient"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Config"
  },
  {
    "label": "ConfigTable",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ConfigTable"
  },
  {
    "label": "Process",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Process"
  },
  {
    "label": "RootPaths",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RootPaths"
  },
  {
    "label": "SessionServer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SessionServer"
  },
  {
    "label": "NextProcessInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NextProcessInfo"
  },
  {
    "label": "ProcessStartInfoHolder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProcessStartInfoHolder"
  },
  {
    "label": "SchedulerCreateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SchedulerCreateInfo"
  },
  {
    "label": "EnqueueProcessInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EnqueueProcessInfo"
  },
  {
    "label": "Scheduler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Scheduler"
  },
  {
    "label": "ExitProcessInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ExitProcessInfo"
  },
  {
    "label": "ProcessStartInfo2",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProcessStartInfo2"
  },
  {
    "label": "ProcessStatus",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ProcessStatus"
  },
  {
    "label": "ProcessEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ProcessEntry"
  },
  {
    "label": "Apply()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Apply(Config& config)"
  },
  {
    "label": "Scheduler()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "Scheduler(const SchedulerCreateInfo& info)"
  },
  {
    "label": "Start()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Start()"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop()"
  },
  {
    "label": "SetMaxLocalProcessors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaxLocalProcessors(u32 maxLocalProcessors)"
  },
  {
    "label": "EnqueueProcess()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "EnqueueProcess(const EnqueueProcessInfo& info)"
  },
  {
    "label": "GetStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetStats(u32& outQueued, u32& outActiveLocal, u32& outActiveRemote, u32& outFinished)"
  },
  {
    "label": "EnqueueFromFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnqueueFromFile(const tchar* yamlFilename)"
  },
  {
    "label": "GetProcessCountThatCanRunRemotelyNow()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "GetProcessCountThatCanRunRemotelyNow()"
  },
  {
    "label": "ThreadLoop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ThreadLoop()"
  },
  {
    "label": "RemoteProcessReturned()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoteProcessReturned(Process& process)"
  },
  {
    "label": "HandleCacheMissed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCacheMissed(ExitProcessInfo* ei)"
  },
  {
    "label": "RemoteSlotAvailable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoteSlotAvailable()"
  },
  {
    "label": "ProcessExited()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessExited(ExitProcessInfo* info, const ProcessHandle& handle)"
  },
  {
    "label": "PopProcess()",
    "kind": "Method",
    "detail": "Function (u32)",
    "insertText": "PopProcess(bool isLocal, ProcessStatus& outPrevStatus)"
  },
  {
    "label": "RunQueuedProcess()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunQueuedProcess(bool isLocal)"
  },
  {
    "label": "HandleReuseMessage()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HandleReuseMessage(Process& process, NextProcessInfo& outNextProcess, u32 prevExitCode)"
  },
  {
    "label": "ExitProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitProcess(ExitProcessInfo& info, Process& process, u32 exitCode, bool fromCache)"
  },
  {
    "label": "SkipProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SkipProcess(ProcessStartInfo2& info)"
  },
  {
    "label": "UpdateQueueCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateQueueCounter(int offset)"
  },
  {
    "label": "UpdateActiveProcessCounter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateActiveProcessCounter(bool isLocal, int offset)"
  },
  {
    "label": "FinishProcess()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishProcess(const ProcessHandle& handle)"
  }
]