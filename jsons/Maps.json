[
  {
    "label": "MapBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MapBase"
  },
  {
    "label": "ScaleMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScaleMap"
  },
  {
    "label": "TranslationMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TranslationMap"
  },
  {
    "label": "ScaleTranslateMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScaleTranslateMap"
  },
  {
    "label": "UniformScaleMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UniformScaleMap"
  },
  {
    "label": "UniformScaleTranslateMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UniformScaleTranslateMap"
  },
  {
    "label": "AffineMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AffineMap"
  },
  {
    "label": "UnitaryMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnitaryMap"
  },
  {
    "label": "NonlinearFrustumMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NonlinearFrustumMap"
  },
  {
    "label": "CompoundMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompoundMap"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_linear",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_linear"
  },
  {
    "label": "is_uniform_scale",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_uniform_scale"
  },
  {
    "label": "is_uniform_scale",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_uniform_scale"
  },
  {
    "label": "is_uniform_scale_translate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_uniform_scale_translate"
  },
  {
    "label": "is_uniform_scale_translate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_uniform_scale_translate"
  },
  {
    "label": "is_uniform_scale_translate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_uniform_scale_translate"
  },
  {
    "label": "is_scale",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_scale"
  },
  {
    "label": "is_scale",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_scale"
  },
  {
    "label": "is_scale_translate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_scale_translate"
  },
  {
    "label": "is_scale_translate",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_scale_translate"
  },
  {
    "label": "is_uniform_diagonal_jacobian",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_uniform_diagonal_jacobian"
  },
  {
    "label": "is_diagonal_jacobian",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is_diagonal_jacobian"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "AffineMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AffineMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "ScaleMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScaleMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "UniformScaleMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UniformScaleMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "TranslationMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TranslationMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "ScaleTanslateMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ScaleTanslateMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "UniformScaleTanslateMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UniformScaleTanslateMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "UnitaryMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UnitaryMap"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "OPENVDB_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OPENVDB_API"
  },
  {
    "label": "NonlinearFrustumMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NonlinearFrustumMap"
  },
  {
    "label": "CompoundMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompoundMap"
  },
  {
    "label": "CompoundMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CompoundMap"
  },
  {
    "label": "createSymmetricMap()",
    "kind": "Method",
    "detail": "Function (SharedPtr<SymmetricMap>)",
    "insertText": "createSymmetricMap(const Mat3d& m)"
  },
  {
    "label": "createFullyDecomposedMap()",
    "kind": "Method",
    "detail": "Function (SharedPtr<FullyDecomposedMap>)",
    "insertText": "createFullyDecomposedMap(const Mat4d& m)"
  },
  {
    "label": "createPolarDecomposedMap()",
    "kind": "Method",
    "detail": "Function (SharedPtr<PolarDecomposedMap>)",
    "insertText": "createPolarDecomposedMap(const Mat3d& m)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (SharedPtr<MapBase>)",
    "insertText": "simplify(SharedPtr<AffineMap> affine)"
  },
  {
    "label": "approxInverse()",
    "kind": "Method",
    "detail": "Function (Mat4d)",
    "insertText": "approxInverse(const Mat4d& mat)"
  },
  {
    "label": "createMap()",
    "kind": "Method",
    "detail": "Function (MapBase::Ptr)",
    "insertText": "createMap(const Name&)"
  },
  {
    "label": "isRegistered()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isRegistered(const Name&)"
  },
  {
    "label": "registerMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "registerMap(const Name&, MapBase::MapFactory)"
  },
  {
    "label": "unregisterMap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "unregisterMap(const Name&)"
  },
  {
    "label": "clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "clear()"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"AffineMap\")"
  },
  {
    "label": "isUnitary()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isUnitary(mat)"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "applyJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJacobian(in)"
  },
  {
    "label": "applyInverseJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseJacobian(in)"
  },
  {
    "label": "applyJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJT(in)"
  },
  {
    "label": "Vec3d()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3d( m[ 0] * in[0] + m[ 1] * in[1] + m[ 2] * in[2],\n                      m[ 4] * in[0] + m[ 5] * in[1] + m[ 6] * in[2],\n                      m[ 8] * in[0] + m[ 9] * in[1] + m[10] * in[2] )"
  },
  {
    "label": "applyIJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJT(in)"
  },
  {
    "label": "applyIJC()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJC(in)"
  },
  {
    "label": "determinant()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "determinant()"
  },
  {
    "label": "voxelSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "voxelSize()"
  },
  {
    "label": "isDiagonal()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isDiagonal()"
  },
  {
    "label": "createFullyDecomposedMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "createFullyDecomposedMap(mMatrix)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"ScaleMap\")"
  },
  {
    "label": "applyJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJacobian(in)"
  },
  {
    "label": "applyMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyMap(in)"
  },
  {
    "label": "applyInverseJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseJacobian(in)"
  },
  {
    "label": "applyInverseMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseMap(in)"
  },
  {
    "label": "applyJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJT(in)"
  },
  {
    "label": "applyMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyMap(in)"
  },
  {
    "label": "applyIJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJT(in)"
  },
  {
    "label": "applyInverseMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseMap(in)"
  },
  {
    "label": "applyIJC()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJC(in)"
  },
  {
    "label": "determinant()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "determinant()"
  },
  {
    "label": "voxelSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "voxelSize()"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"UniformScaleMap\")"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "new_scale()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "new_scale(v * mScaleValues)"
  },
  {
    "label": "preScale()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "preScale(v)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"TranslationMap\")"
  },
  {
    "label": "applyJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJacobian(in)"
  },
  {
    "label": "applyInverseJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseJacobian(in)"
  },
  {
    "label": "applyJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJT(in)"
  },
  {
    "label": "applyIJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJT(in)"
  },
  {
    "label": "applyIJC()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJC(mat)"
  },
  {
    "label": "determinant()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "determinant()"
  },
  {
    "label": "Vec3d()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Vec3d(1,1,1)"
  },
  {
    "label": "voxelSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "voxelSize()"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"ScaleTranslateMap\")"
  },
  {
    "label": "applyJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJacobian(in)"
  },
  {
    "label": "applyInverseJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseJacobian(in)"
  },
  {
    "label": "applyJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJT(in)"
  },
  {
    "label": "applyJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJacobian(in)"
  },
  {
    "label": "applyIJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJT(in)"
  },
  {
    "label": "applyIJC()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJC(in)"
  },
  {
    "label": "determinant()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "determinant()"
  },
  {
    "label": "voxelSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "voxelSize()"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"UniformScaleTranslateMap\")"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "new_scale()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "new_scale( v * mScaleValues )"
  },
  {
    "label": "new_scale()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "new_scale( v * mScaleValues )"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"UnitaryMap\")"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "applyJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJacobian(in)"
  },
  {
    "label": "applyInverseJacobian()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseJacobian(in)"
  },
  {
    "label": "applyJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyJT(in)"
  },
  {
    "label": "applyInverseMap()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyInverseMap(in)"
  },
  {
    "label": "applyIJT()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJT(in)"
  },
  {
    "label": "applyIJC()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "applyIJC(in)"
  },
  {
    "label": "determinant()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "determinant()"
  },
  {
    "label": "voxelSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "voxelSize()"
  },
  {
    "label": "first()",
    "kind": "Method",
    "detail": "Function (UnitaryMap)",
    "insertText": "first(axis, radians)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "second()",
    "kind": "Method",
    "detail": "Function (UnitaryMap)",
    "insertText": "second(axis, radians)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "simplify()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "simplify(affineMap)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  },
  {
    "label": "Name()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "Name(\"NonlinearFrustumMap\")"
  },
  {
    "label": "e1()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "e1(1,0,0)"
  },
  {
    "label": "e2()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "e2(0,1,0)"
  },
  {
    "label": "e3()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "e3(0,0,1)"
  },
  {
    "label": "isEqualBase()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "isEqualBase(*this, other)"
  },
  {
    "label": "e()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "e(0,0,0)"
  },
  {
    "label": "centered()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "centered(isloc)"
  },
  {
    "label": "centered()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "centered(isloc)"
  },
  {
    "label": "centered()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "centered(isloc)"
  },
  {
    "label": "voxelSize()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "voxelSize(loc)"
  },
  {
    "label": "out()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "out(in)"
  },
  {
    "label": "out()",
    "kind": "Method",
    "detail": "Function (Vec3d)",
    "insertText": "out(in)"
  },
  {
    "label": "mapType()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "mapType()"
  }
]