[
  {
    "label": "ALEMBIC_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ALEMBIC_EXPORT"
  },
  {
    "label": "OCollectionsSchema()",
    "kind": "Method",
    "detail": "Function (# ifndef Alembic_AbcCollection_OCollections_h # define Alembic_AbcCollection_OCollections_h # include<Alembic / Abc / All . h> # include<Alembic / Util / Export . h> # include<Alembic / AbcCollection / SchemaInfoDeclarations . h> namespace Alembic { namespace AbcCollection { namespace ALEMBIC_VERSION_NS { class ALEMBIC_EXPORT OCollectionsSchema : public Abc::OSchema<CollectionsSchemaInfo> { public : typedef OCollectionsSchema this_type ;)",
    "insertText": "OCollectionsSchema()"
  },
  {
    "label": "OCollectionsSchema()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OCollectionsSchema(Alembic::AbcCoreAbstract::CompoundPropertyWriterPtr iParent, const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument(), const Abc::Argument &iArg2 = Abc::Argument(), const Abc::Argument &iArg3 = Abc::Argument())"
  },
  {
    "label": "OCollectionsSchema()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OCollectionsSchema(Abc::OCompoundProperty iParent, const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument(), const Abc::Argument &iArg2 = Abc::Argument())"
  },
  {
    "label": "createCollection()",
    "kind": "Method",
    "detail": "Function (Abc::OStringArrayProperty)",
    "insertText": "createCollection(const std::string &iName, const Abc::Argument &iArg0 = Abc::Argument(), const Abc::Argument &iArg1 = Abc::Argument(), const Abc::Argument &iArg2 = Abc::Argument())"
  },
  {
    "label": "getNumCollections()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "getNumCollections()"
  },
  {
    "label": "getCollection()",
    "kind": "Method",
    "detail": "Function (} Abc::OStringArrayProperty)",
    "insertText": "getCollection(size_t i)"
  },
  {
    "label": "getCollection()",
    "kind": "Method",
    "detail": "Function (Abc::OStringArrayProperty)",
    "insertText": "getCollection(const std::string & iName)"
  },
  {
    "label": "valid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "valid()"
  }
]