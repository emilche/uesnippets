[
  {
    "label": "Error",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Error"
  },
  {
    "label": "FPrimitiveDrawInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPrimitiveDrawInterface"
  },
  {
    "label": "FSceneView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneView"
  },
  {
    "label": "FVectorFieldVisualizationVertexFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldVisualizationVertexFactory"
  },
  {
    "label": "FRHICommandListImmediate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHICommandListImmediate"
  },
  {
    "label": "FVectorFieldResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldResource"
  },
  {
    "label": "FVectorFieldInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVectorFieldInstance"
  },
  {
    "label": "DECLARE_LOG_CATEGORY_EXTERN()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" RenderResource . h \" class Error ; class FPrimitiveDrawInterface ; class FSceneView ; class FVectorFieldVisualizationVertexFactory ; class FRHICommandListImmediate ; # define VECTOR_FIELD_LOG_VERBOSITY Error)",
    "insertText": "DECLARE_LOG_CATEGORY_EXTERN(LogVectorField,VECTOR_FIELD_LOG_VERBOSITY,VECTOR_FIELD_LOG_VERBOSITY)"
  },
  {
    "label": "FVectorFieldResource()",
    "kind": "Method",
    "detail": "Function (class FVectorFieldResource : public FRenderResource { public : FTextureRHIRef VolumeTextureRHI ; int32 SizeX ; int32 SizeY ; int32 SizeZ ; float Intensity ; FBox LocalBounds ;)",
    "insertText": "FVectorFieldResource()"
  },
  {
    "label": "ReleaseRHI()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseRHI()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(FRHICommandListImmediate& RHICmdList, float DeltaSeconds)"
  },
  {
    "label": "ResetVectorField()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "ResetVectorField()"
  },
  {
    "label": "AddRef()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "AddRef()"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (} uint32)",
    "insertText": "Release()"
  },
  {
    "label": "NewValue()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "NewValue(uint32)NumRefs.Decrement()"
  },
  {
    "label": "FVectorFieldInstance()",
    "kind": "Method",
    "detail": "Function (FThreadSafeCounter NumRefs ; } ; class FVectorFieldInstance { public : TRefCountPtr<FVectorFieldResource> Resource ; FBox WorldBounds ; FMatrix VolumeToWorldNoScale ; FMatrix WorldToVolume ; FMatrix VolumeToWorld ; float Tightness ; float Intensity ; int32 Index ; uint32 bTileX : 1 ; uint32 bTileY : 1 ; uint32 bTileZ : 1 ; uint32 bUseFixDT : 1 ;)",
    "insertText": "FVectorFieldInstance() : Resource(NULL) , VolumeToWorldNoScale(FMatrix::Identity) , WorldToVolume(FMatrix::Identity) , VolumeToWorld(FMatrix::Identity) , Tightness(0.0f) , Intensity(0.0f) , Index(INDEX_NONE) , bTileX(false) , bTileY(false) , bTileZ(false) , bUseFixDT(false) , bInstancedResource(false)"
  },
  {
    "label": "FVectorFieldInstance()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FVectorFieldInstance()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(FVectorFieldResource* InResource, bool bInstanced)"
  },
  {
    "label": "UpdateTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTransforms(const FMatrix& LocalToWorld)"
  }
]