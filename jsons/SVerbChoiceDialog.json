[
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FKeyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FKeyEvent"
  },
  {
    "label": "SVerbChoiceDialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SVerbChoiceDialog"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" HAL / Platform . h \" # include \" Input / Reply . h \" # include \" Internationalization / Text . h \" # include \" Misc / Attribute . h \" # include \" Templates / SharedPointer . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class SWindow ; struct FGeometry ; struct FKeyEvent ; class SVerbChoiceDialog : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SVerbChoiceDialog)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TSharedPtr<SWindow>, ParentWindow) SLATE_ATTRIBUTE(FText, Message) SLATE_ATTRIBUTE(TArray<FText>, Hyperlinks) SLATE_ATTRIBUTE(TArray<FText>, Buttons) SLATE_ATTRIBUTE(float, WrapMessageAt) SLATE_END_ARGS() static int32 ShowModal(const FText& InTitle, const FText& InText, const TArray<FText>& InButtons)"
  },
  {
    "label": "ShowModal()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ShowModal(const FText& InTitle, const FText& InText, const TArray<FText>& InHyperlinks, const TArray<FText>& InButtons)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "OnKeyDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnKeyDown(const FGeometry& MyGeometry, const FKeyEvent& InKeyEvent)"
  },
  {
    "label": "SupportsKeyboardFocus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsKeyboardFocus()"
  },
  {
    "label": "CopyMessageToClipboard()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "CopyMessageToClipboard()"
  },
  {
    "label": "HandleCopyMessageButtonClicked()",
    "kind": "Method",
    "detail": "Function (private : FReply)",
    "insertText": "HandleCopyMessageButtonClicked()"
  },
  {
    "label": "HandleHyperlinkClicked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleHyperlinkClicked(int32 InResponse)"
  },
  {
    "label": "HandleButtonClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleButtonClicked(int32 InResponse)"
  }
]