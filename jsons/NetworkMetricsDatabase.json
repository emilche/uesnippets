[
  {
    "label": "MetricType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MetricType"
  },
  {
    "label": "FNetworkMetric",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkMetric"
  },
  {
    "label": "FNetworkMetricSnapshot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNetworkMetricSnapshot"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UNetworkMetricsMyListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetworkMetricsMyListener"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UNetworkMetricsCSV_ExampleCategory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetworkMetricsCSV_ExampleCategory"
  },
  {
    "label": "can",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "can"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "must",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "must"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "CreateFloat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateFloat(const FName MetricName, float DefaultValue)"
  },
  {
    "label": "CreateInt()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateInt(const FName MetricName, int64 DefaultValue)"
  },
  {
    "label": "SetFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetFloat(const FName MetricName, float Value)"
  },
  {
    "label": "SetMinFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMinFloat(const FName MetricName, float Value)"
  },
  {
    "label": "SetMaxFloat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMaxFloat(const FName MetricName, float Value)"
  },
  {
    "label": "SetInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetInt(const FName MetricName, int64 Value)"
  },
  {
    "label": "SetMinInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMinInt(const FName MetricName, int64 Value)"
  },
  {
    "label": "SetMaxInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetMaxInt(const FName MetricName, int64 Value)"
  },
  {
    "label": "IncrementInt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IncrementInt(const FName MetricName, int64 Value)"
  },
  {
    "label": "ProcessListeners()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProcessListeners()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "Register()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Register(const FName MetricName, TWeakObjectPtr<UNetworkMetricsBaseListener> Reporter)"
  },
  {
    "label": "HasReportIntervalPassed()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasReportIntervalPassed(double CurrentTimeSeconds, UNetworkMetricsBaseListener* Listener)"
  },
  {
    "label": "UNetworkMetricsBaseListener()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UNetworkMetricsBaseListener()"
  },
  {
    "label": "UNetworkMetricsCSV()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UNetworkMetricsCSV()"
  },
  {
    "label": "SetCategory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCategory(const FString& CategoryName)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(const UE::Net::FNetworkMetricSnapshot& Snapshot)"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(const UE::Net::FNetworkMetricSnapshot& Snapshot)"
  },
  {
    "label": "UNetworkMetricsStats()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "UNetworkMetricsStats()"
  },
  {
    "label": "Report()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Report(const UE::Net::FNetworkMetricSnapshot& Snapshot)"
  }
]