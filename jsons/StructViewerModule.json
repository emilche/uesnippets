[
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IStructViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructViewerFilter"
  },
  {
    "label": "UScriptStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UScriptStruct"
  },
  {
    "label": "picking",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "picking"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "picking",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "picking"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "name",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "name"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "FStructViewerInitializationOptions",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructViewerInitializationOptions"
  },
  {
    "label": "IStructViewerFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStructViewerFilter"
  },
  {
    "label": "dynamic",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "dynamic"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "picker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "picker"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "picker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "picker"
  },
  {
    "label": "FStructViewerModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStructViewerModule"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "picking",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "picking"
  },
  {
    "label": "viewer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "viewer"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "CreateStructViewer()",
    "kind": "Method",
    "detail": "Function (SWidget>)",
    "insertText": "CreateStructViewer(const FStructViewerInitializationOptions& InitOptions, const FOnStructPicked& OnStructPickedDelegate)"
  }
]