[
  {
    "label": "segmentation",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "segmentation"
  },
  {
    "label": "SEG_TREE_PROBS()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP9_COMMON_VP9_SEG_COMMON_H_ # define VPX_VP9_COMMON_VP9_SEG_COMMON_H_ # include \" vpx_dsp / prob . h \" # ifdef __cplusplus \" C \" { # endif # define SEGMENT_DELTADATA 0 # define SEGMENT_ABSDATA 1 # define MAX_SEGMENTS 8 # define)",
    "insertText": "SEG_TREE_PROBS(MAX_SEGMENTS - 1)"
  },
  {
    "label": "segfeature_active()",
    "kind": "Method",
    "detail": "Function (SEG_LVL_ALT_Q = 0,SEG_LVL_ALT_LF = 1,SEG_LVL_REF_FRAME = 2,SEG_LVL_SKIP = 3,SEG_LVL_MAX = 4 } SEG_LVL_FEATURES ; struct segmentation { uint8_t enabled ; uint8_t update_map ; uint8_t update_data ; uint8_t abs_delta ; uint8_t temporal_update ; vpx_prob tree_probs [ SEG_TREE_PROBS ] ; vpx_prob pred_probs [ PREDICTION_PROBS ] ; int16_t feature_data [ MAX_SEGMENTS ] [ SEG_LVL_MAX ] ; uint32_t feature_mask [ MAX_SEGMENTS ] ; int aq_av_offset ; } ; int)",
    "insertText": "segfeature_active(const struct segmentation *seg, int segment_id, SEG_LVL_FEATURES feature_id)"
  },
  {
    "label": "vp9_clearall_segfeatures()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "vp9_clearall_segfeatures(struct segmentation *seg)"
  },
  {
    "label": "vp9_enable_segfeature()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_enable_segfeature(struct segmentation *seg, int segment_id, SEG_LVL_FEATURES feature_id)"
  },
  {
    "label": "vp9_seg_feature_data_max()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_seg_feature_data_max(SEG_LVL_FEATURES feature_id)"
  },
  {
    "label": "vp9_is_segfeature_signed()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "vp9_is_segfeature_signed(SEG_LVL_FEATURES feature_id)"
  },
  {
    "label": "vp9_set_segdata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "vp9_set_segdata(struct segmentation *seg, int segment_id, SEG_LVL_FEATURES feature_id, int seg_data)"
  },
  {
    "label": "get_segdata()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "get_segdata(const struct segmentation *seg, int segment_id, SEG_LVL_FEATURES feature_id)"
  }
]