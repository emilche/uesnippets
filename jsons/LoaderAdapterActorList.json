[
  {
    "label": "FLoaderAdapterActorList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoaderAdapterActorList"
  },
  {
    "label": "FLoaderAdapterActorList()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" WorldPartition / LoaderAdapter / LoaderAdapterList . h \" class FLoaderAdapterActorList : public FLoaderAdapterList { public :)",
    "insertText": "FLoaderAdapterActorList(UWorld* InWorld)"
  },
  {
    "label": "AddActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActors(const TArray<FGuid>& ActorGuids)"
  },
  {
    "label": "AddActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddActors(const TArray<FWorldPartitionHandle>& ActorHandles)"
  },
  {
    "label": "RemoveActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActors(const TArray<FGuid>& ActorGuids)"
  },
  {
    "label": "RemoveActors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveActors(const TArray<FWorldPartitionHandle>& ActorHandles)"
  },
  {
    "label": "ContainsActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsActor(const FGuid& ActorGuid)"
  },
  {
    "label": "ContainsActor()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsActor(const FWorldPartitionHandle& ActorHandle)"
  },
  {
    "label": "PassActorDescFilter()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "PassActorDescFilter(const FWorldPartitionHandle& ActorHandle)"
  }
]