[
  {
    "label": "IAnalysisSession",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalysisSession"
  },
  {
    "label": "IAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnalyzer"
  },
  {
    "label": "FIncrementalVariance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FIncrementalVariance"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "to"
  },
  {
    "label": "instances",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "instances"
  },
  {
    "label": "FSummarizeCpuScopeAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSummarizeCpuScopeAnalyzer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FScopeEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeEvent"
  },
  {
    "label": "FScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScope"
  },
  {
    "label": "FSummarizeCpuProfilerProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSummarizeCpuProfilerProvider"
  },
  {
    "label": "FScopeEnter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeEnter"
  },
  {
    "label": "FScopeTreeInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScopeTreeInfo"
  },
  {
    "label": "FThread",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FThread"
  },
  {
    "label": "FMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMetadata"
  },
  {
    "label": "FSummarizeScope",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSummarizeScope"
  },
  {
    "label": "FSummarizeCpuScopeDurationAnalyzer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSummarizeCpuScopeDurationAnalyzer"
  },
  {
    "label": "FSummarizeBookmark",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSummarizeBookmark"
  },
  {
    "label": "Increment()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Increment(const double InSample)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const FIncrementalVariance& Other)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "FSummarizeCpuProfilerProvider()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "FSummarizeCpuProfilerProvider()"
  },
  {
    "label": "AddCpuScopeAnalyzer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCpuScopeAnalyzer(TSharedPtr<FSummarizeCpuScopeAnalyzer> Analyzer)"
  },
  {
    "label": "AnalysisComplete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AnalysisComplete()"
  },
  {
    "label": "AppendBeginEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendBeginEvent(const FSummarizeCpuScopeAnalyzer::FScopeEvent& ScopeEvent)"
  },
  {
    "label": "AppendEndEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendEndEvent(const FSummarizeCpuScopeAnalyzer::FScope& ScopeEvent, const FString* ScopeName)"
  },
  {
    "label": "OnCpuScopeTree()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCpuScopeTree(uint32 ThreadId, const FScopeTreeInfo& ScopeTreeInfo)"
  },
  {
    "label": "AddDuration()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddDuration(double StartSeconds, double FinishSeconds)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Merge(const FSummarizeScope& Other)"
  },
  {
    "label": "AddTimestamp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTimestamp(double Seconds)"
  },
  {
    "label": "IsCsvSafeString()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCsvSafeString(const FString& String)"
  },
  {
    "label": "WriteAsUTF8String()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteAsUTF8String(IFileHandle* Handle, const FString& String)"
  }
]