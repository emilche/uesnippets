[
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FDataLayerDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerDragDropOp"
  },
  {
    "label": "FDataLayerActorMoveOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerActorMoveOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / Map . h \" # include \" Containers / UnrealString . h \" # include \" DragAndDrop / DecoratedDragDropOp . h \" # include \" Input / DragAndDrop . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtrTemplates . h \" # include \" WorldPartition / DataLayer / DataLayerInstance . h \" class AActor ; typedef TPair<TWeakObjectPtr<AActor>,TWeakObjectPtr<UDataLayerInstance>> FDataLayerActorMoveElement ; class FDataLayerDragDropOp : public FDecoratedDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FDataLayerDragDropOp, FDecoratedDragDropOp) void Init(const TArray<TWeakObjectPtr<UDataLayerInstance>>& InDataLayerInstances)"
  },
  {
    "label": "Emplace()",
    "kind": "Method",
    "detail": "Function (DataLayerInstances .)",
    "insertText": "Emplace(DataLayerInstance.Get())"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} } } TArray<TWeakObjectPtr<UDataLayerInstance>> DataLayerInstances ; void)",
    "insertText": "Construct()"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (} ; class FDataLayerActorMoveOp : public FDecoratedDragDropOp { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FDataLayerActorMoveOp, FDecoratedDragDropOp)"
  }
]