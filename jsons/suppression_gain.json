[
  {
    "label": "SuppressionGain",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SuppressionGain"
  },
  {
    "label": "LowNoiseRenderDetector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LowNoiseRenderDetector"
  },
  {
    "label": "GainParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "GainParameters"
  },
  {
    "label": "SuppressionGain()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "SuppressionGain(const EchoCanceller3Config& config,\n                  Aec3Optimization optimization,\n                  int sample_rate_hz,\n                  size_t num_capture_channels)"
  },
  {
    "label": "GetGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetGain(\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          nearend_spectrum,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> echo_spectrum,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          residual_echo_spectrum,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          residual_echo_spectrum_unbounded,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          comfort_noise_spectrum,\n      const RenderSignalAnalyzer& render_signal_analyzer,\n      const AecState& aec_state,\n      const Block& render,\n      bool clock_drift,\n      float* high_bands_gain,\n      std::array<float, kFftLengthBy2Plus1>* low_band_gain)"
  },
  {
    "label": "SetInitialState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetInitialState(bool state)"
  },
  {
    "label": "LowerBandGain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LowerBandGain(\n      bool stationary_with_low_power,\n      const AecState& aec_state,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>>\n          suppressor_input,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> residual_echo,\n      rtc::ArrayView<const std::array<float, kFftLengthBy2Plus1>> comfort_noise,\n      bool clock_drift,\n      std::array<float, kFftLengthBy2Plus1>* gain)"
  },
  {
    "label": "Detect()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Detect(const Block& render)"
  },
  {
    "label": "GainParameters()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "GainParameters(\n        int last_lf_band,\n        int first_hf_band,\n        const EchoCanceller3Config::Suppressor::Tuning& tuning)"
  }
]