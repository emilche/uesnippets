[
  {
    "label": "UActorDescContainerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UActorDescContainerInstance"
  },
  {
    "label": "UDataLayerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerManager"
  },
  {
    "label": "UExternalDataLayerAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerAsset"
  },
  {
    "label": "UExternalDataLayerInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UExternalDataLayerInstance"
  },
  {
    "label": "UWorldPartitionRuntimeCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeCell"
  },
  {
    "label": "URuntimeHashExternalStreamingObjectBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "URuntimeHashExternalStreamingObjectBase"
  },
  {
    "label": "AWorldDataLayers",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AWorldDataLayers"
  },
  {
    "label": "ENGINE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ENGINE_API"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "FDataLayerMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerMode"
  },
  {
    "label": "FDataLayerEditorModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataLayerEditorModule"
  },
  {
    "label": "FExternalDataLayerHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FExternalDataLayerHelper"
  },
  {
    "label": "UWorldPartition",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartition"
  },
  {
    "label": "UDataLayerEditorSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDataLayerEditorSubsystem"
  },
  {
    "label": "ULevelInstanceSubsystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelInstanceSubsystem"
  },
  {
    "label": "UContentBundleEditingSubmodule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UContentBundleEditingSubmodule"
  },
  {
    "label": "UWorldPartitionRuntimeLevelStreamingCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWorldPartitionRuntimeLevelStreamingCell"
  },
  {
    "label": "UGameFeatureActionConvertContentBundleWorldPartitionBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGameFeatureActionConvertContentBundleWorldPartitionBuilder"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreFwd . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" WorldPartition / WorldPartition . h \" # include \" WorldPartition / WorldPartitionHandle . h \" # include \" WorldPartition / WorldPartitionHelpers . h \" # include \" WorldPartition / DataLayer / WorldDataLayersActorDesc . h \" # include \" WorldPartition / DataLayer / ExternalDataLayerEngineSubsystem . h \" # include \" ExternalDataLayerManager . generated . h \" class UActorDescContainerInstance ; class UDataLayerManager ; class UExternalDataLayerAsset ; class UExternalDataLayerInstance ; class UWorldPartitionRuntimeCell ; class URuntimeHashExternalStreamingObjectBase ; class AWorldDataLayers ;)",
    "insertText": "UCLASS(Within = WorldPartition)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: template <class T> static UExternalDataLayerManager* GetExternalDataLayerManager(const T* InObject)"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (UWorldPartition* WorldPartition =)",
    "insertText": "IsValid(InObject) ? FWorldPartitionHelpers::GetWorldPartition(InObject)"
  },
  {
    "label": "UExternalDataLayerManager()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "UExternalDataLayerManager()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "UpdateExternalDataLayerInjectionState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateExternalDataLayerInjectionState(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "CanInjectExternalDataLayerAsset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanInjectExternalDataLayerAsset(const UExternalDataLayerAsset* InExternalDataLayerAsset, FText* OutReason = nullptr)"
  },
  {
    "label": "IsExternalDataLayerInjected()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsExternalDataLayerInjected(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "InjectExternalDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InjectExternalDataLayer(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "RemoveExternalDataLayer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveExternalDataLayer(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "InjectIntoGameWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InjectIntoGameWorld(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "RemoveFromGameWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveFromGameWorld(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "RegisterExternalStreamingObjectForGameWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterExternalStreamingObjectForGameWorld(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "UnregisterExternalStreamingObjectForGameWorld()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterExternalStreamingObjectForGameWorld(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "OnExternalDataLayerAssetRegistrationStateChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnExternalDataLayerAssetRegistrationStateChanged(const UExternalDataLayerAsset* InExternalDataLayerAsset, EExternalDataLayerRegistrationState InOldState, EExternalDataLayerRegistrationState InNewState)"
  },
  {
    "label": "GetExternalDataLayerLevelRootPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetExternalDataLayerLevelRootPath(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "GetExternalStreamingObjectPackagePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetExternalStreamingObjectPackagePath(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "GetExternalDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (const UExternalDataLayerInstance*)",
    "insertText": "GetExternalDataLayerInstance(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "GetDataLayerManager()",
    "kind": "Method",
    "detail": "Function (UDataLayerManager&)",
    "insertText": "GetDataLayerManager()"
  },
  {
    "label": "PreEditUndo()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PreEditUndo()"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "RegisterExternalDataLayerActorDescContainer()",
    "kind": "Method",
    "detail": "Function (UActorDescContainerInstance*)",
    "insertText": "RegisterExternalDataLayerActorDescContainer(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "UnregisterExternalDataLayerActorDescContainer()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterExternalDataLayerActorDescContainer(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "ValidateOnActorExternalDataLayerAssetChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateOnActorExternalDataLayerAssetChanged(AActor* InActor)"
  },
  {
    "label": "RegisterExternalDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RegisterExternalDataLayerInstance(UExternalDataLayerInstance* InExternalDataLayerInstance)"
  },
  {
    "label": "UnregisterExternalDataLayerInstance()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UnregisterExternalDataLayerInstance(UExternalDataLayerInstance* InExternalDataLayerInstance)"
  },
  {
    "label": "GetMatchingExternalDataLayerAssetForObjectPath()",
    "kind": "Method",
    "detail": "Function (const UExternalDataLayerAsset*)",
    "insertText": "GetMatchingExternalDataLayerAssetForObjectPath(const FSoftObjectPath& InObjectPath)"
  },
  {
    "label": "GetActorEditorContextCurrentExternalDataLayer()",
    "kind": "Method",
    "detail": "Function (const UExternalDataLayerAsset*)",
    "insertText": "GetActorEditorContextCurrentExternalDataLayer()"
  },
  {
    "label": "GetWorldDataLayers()",
    "kind": "Method",
    "detail": "Function (AWorldDataLayers*)",
    "insertText": "GetWorldDataLayers(const UExternalDataLayerAsset* InExternalDataLayerAsset, bool bInAllowCreate = false)"
  },
  {
    "label": "GetActorPackageName()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetActorPackageName(const UExternalDataLayerAsset* InExternalDataLayerAsset, const ULevel* InDestinationLevel, const FString& InActorPath)"
  },
  {
    "label": "CreateExternalStreamingObjectUsingStreamingGeneration()",
    "kind": "Method",
    "detail": "Function (URuntimeHashExternalStreamingObjectBase*)",
    "insertText": "CreateExternalStreamingObjectUsingStreamingGeneration(const UExternalDataLayerAsset* InExternalDataLayerAsset)"
  },
  {
    "label": "HasInjectedExternalDataLayerAssets()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasInjectedExternalDataLayerAssets()"
  },
  {
    "label": "PrepareEditorGameWorld()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PrepareEditorGameWorld()"
  },
  {
    "label": "ShutdownEditorGameWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownEditorGameWorld()"
  },
  {
    "label": "GetCellForCookPackage()",
    "kind": "Method",
    "detail": "Function (UWorldPartitionRuntimeCell*)",
    "insertText": "GetCellForCookPackage(const FString& InCookPackageName)"
  },
  {
    "label": "GetExternalStreamingObjectForCookPackage()",
    "kind": "Method",
    "detail": "Function (URuntimeHashExternalStreamingObjectBase*)",
    "insertText": "GetExternalStreamingObjectForCookPackage(const FString& InCookPackageName)"
  },
  {
    "label": "ForEachExternalStreamingObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachExternalStreamingObjects(TFunctionRef<bool(URuntimeHashExternalStreamingObjectBase*)> Func)"
  },
  {
    "label": "IsRunningGameOrInstancedWorldPartition()",
    "kind": "Method",
    "detail": "Function (# endif private : bool)",
    "insertText": "IsRunningGameOrInstancedWorldPartition()"
  }
]