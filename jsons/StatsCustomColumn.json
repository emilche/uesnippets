[
  {
    "label": "FProperty",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProperty"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "IPropertyHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyHandle"
  },
  {
    "label": "IPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCell"
  },
  {
    "label": "IPropertyTableCellPresenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCellPresenter"
  },
  {
    "label": "IPropertyTableColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableColumn"
  },
  {
    "label": "IPropertyTableUtilities",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableUtilities"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FStatsCustomColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStatsCustomColumn"
  },
  {
    "label": "Supports()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Map . h \" # include \" IPropertyTableCustomColumn . h \" # include \" Internationalization / Text . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / NameTypes . h \" # include \" UObject / WeakObjectPtr . h \" # include \" UObject / WeakObjectPtrTemplates . h \" class FProperty ; class FString ; class IPropertyHandle ; class IPropertyTableCell ; class IPropertyTableCellPresenter ; class IPropertyTableColumn ; class IPropertyTableUtilities ; class SWidget ; class UObject ; class FStatsCustomColumn : public TSharedFromThis<FStatsCustomColumn>,public IPropertyTableCustomColumn { public : bool)",
    "insertText": "Supports(const TSharedRef< IPropertyTableColumn >& Column, const TSharedRef< IPropertyTableUtilities >& Utilities)"
  },
  {
    "label": "CreateColumnLabel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateColumnLabel(const TSharedRef< IPropertyTableColumn >& Column, const TSharedRef< IPropertyTableUtilities >& Utilities, const FName& Style)"
  },
  {
    "label": "CreateCellPresenter()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<IPropertyTableCellPresenter>)",
    "insertText": "CreateCellPresenter(const TSharedRef< IPropertyTableCell >& Cell, const TSharedRef< IPropertyTableUtilities >& Utilities, const FName& Style)"
  },
  {
    "label": "SupportsProperty()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsProperty(const FProperty* Property)"
  },
  {
    "label": "GetPropertyAsText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPropertyAsText(const TSharedPtr< IPropertyHandle > PropertyHandle, bool bGetRawValue = false)"
  },
  {
    "label": "GetTotalText()",
    "kind": "Method",
    "detail": "Function (public : TMap<FString,FText> TotalsMap ; private : FText)",
    "insertText": "GetTotalText(TSharedRef< IPropertyTableColumn > Column)"
  }
]