[
  {
    "label": "UMaterialGraphNode_Knot",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialGraphNode_Knot"
  },
  {
    "label": "INameValidatorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INameValidatorInterface"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" MaterialGraph / MaterialGraphNode . h \" # include \" MaterialGraphNode_Knot . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: virtual void AllocateDefaultPins()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "ShouldOverridePinNames()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldOverridePinNames()"
  },
  {
    "label": "GetPinNameOverride()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetPinNameOverride(const UEdGraphPin& Pin)"
  },
  {
    "label": "OnRenameNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRenameNode(const FString& NewName)"
  },
  {
    "label": "MakeNameValidator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class INameValidatorInterface>)",
    "insertText": "MakeNameValidator()"
  },
  {
    "label": "CanSplitPin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanSplitPin(const UEdGraphPin* Pin)"
  },
  {
    "label": "IsCompilerRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCompilerRelevant()"
  },
  {
    "label": "ShouldDrawNodeAsControlPointOnly()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldDrawNodeAsControlPointOnly(int32& OutInputPinIndex, int32& OutOutputPinIndex)"
  },
  {
    "label": "CreateVisualWidget()",
    "kind": "Method",
    "detail": "Function (OutInputPinIndex = 0 ; OutOutputPinIndex = 1 ; return true ; } TSharedPtr<SGraphNode>)",
    "insertText": "CreateVisualWidget()"
  },
  {
    "label": "GetInputPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetInputPin()"
  },
  {
    "label": "GetOutputPin()",
    "kind": "Method",
    "detail": "Function (} UEdGraphPin*)",
    "insertText": "GetOutputPin()"
  }
]