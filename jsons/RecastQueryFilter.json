[
  {
    "label": "UNavigationSystemV1",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemV1"
  },
  {
    "label": "FRecastQueryFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRecastQueryFilter"
  },
  {
    "label": "FRecastSpeciaLinkFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRecastSpeciaLinkFilter"
  },
  {
    "label": "FRecastQueryFilter()",
    "kind": "Method",
    "detail": "Function (# pragma once # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" CoreMinimal . h \" # endif # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_2 # include \" NavFilters / NavigationQueryFilter . h \" # endif # include \" AI / Navigation / NavigationTypes . h \" # include \" AI / Navigation / NavQueryFilter . h \" # if WITH_RECAST # if UE_ENABLE_INCLUDE_ORDER_DEPRECATED_IN_5_4 # include \" Detour / DetourNavMesh . h \" # endif # include \" Detour / DetourNavMeshQuery . h \" # define RECAST_VERY_SMALL_AGENT_RADIUS 0 . 0 f class UNavigationSystemV1 ; class FRecastQueryFilter : public INavigationQueryFilterInterface,public dtQueryFilter { public :)",
    "insertText": "FRecastQueryFilter(bool bIsVirtual = true)"
  },
  {
    "label": "FRecastQueryFilter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRecastQueryFilter()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Reset()"
  },
  {
    "label": "SetAreaCost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAreaCost(uint8 AreaType, float Cost)"
  },
  {
    "label": "SetFixedAreaEnteringCost()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFixedAreaEnteringCost(uint8 AreaType, float Cost)"
  },
  {
    "label": "SetExcludedArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExcludedArea(uint8 AreaType)"
  },
  {
    "label": "SetAllAreaCosts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllAreaCosts(const float* CostArray, const int32 Count)"
  },
  {
    "label": "GetAllAreaCosts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAllAreaCosts(float* CostArray, float* FixedCostArray, const int32 Count)"
  },
  {
    "label": "SetBacktrackingEnabled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBacktrackingEnabled(const bool bBacktracking)"
  },
  {
    "label": "IsBacktrackingEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsBacktrackingEnabled()"
  },
  {
    "label": "GetHeuristicScale()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetHeuristicScale()"
  },
  {
    "label": "IsEqual()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsEqual(const INavigationQueryFilterInterface* Other)"
  },
  {
    "label": "SetIncludeFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetIncludeFlags(uint16 Flags)"
  },
  {
    "label": "GetIncludeFlags()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetIncludeFlags()"
  },
  {
    "label": "SetExcludeFlags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExcludeFlags(uint16 Flags)"
  },
  {
    "label": "GetExcludeFlags()",
    "kind": "Method",
    "detail": "Function (uint16)",
    "insertText": "GetExcludeFlags()"
  },
  {
    "label": "GetAdjustedEndLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetAdjustedEndLocation(const FVector& EndLocation)"
  },
  {
    "label": "GetAsDetourQueryFilter()",
    "kind": "Method",
    "detail": "Function (const dtQueryFilter*)",
    "insertText": "GetAsDetourQueryFilter()"
  },
  {
    "label": "SetShouldIgnoreClosedNodes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetShouldIgnoreClosedNodes(const bool bIgnoreClosed)"
  },
  {
    "label": "FRecastSpeciaLinkFilter()",
    "kind": "Method",
    "detail": "Function (} ; struct FRecastSpeciaLinkFilter : public dtQuerySpecialLinkFilter {)",
    "insertText": "FRecastSpeciaLinkFilter(UNavigationSystemV1* NavSystem, const UObject* Owner) : NavSys(NavSystem), SearchOwner(Owner), CachedOwnerOb(nullptr)"
  },
  {
    "label": "isLinkAllowed()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "isLinkAllowed(const uint64 UserId)"
  },
  {
    "label": "initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "initialize()"
  }
]