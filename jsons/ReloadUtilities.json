[
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UK2Node",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UK2Node"
  },
  {
    "label": "FReload",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FReload"
  },
  {
    "label": "FNativeFuncPtrMapKeyFuncs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNativeFuncPtrMapKeyFuncs"
  },
  {
    "label": "FReinstanceStats",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FReinstanceStats"
  },
  {
    "label": "FBlueprintUpdateInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBlueprintUpdateInfo"
  },
  {
    "label": "GetKeyHash()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" UObject / Reload . h \" # include \" Containers / StringFwd . h \" class UBlueprint ; class UK2Node ; class FReload : public IReload { public : struct FNativeFuncPtrMapKeyFuncs : TDefaultMapKeyFuncs<FNativeFuncPtr,FNativeFuncPtr,false> { uint32)",
    "insertText": "GetKeyHash(FNativeFuncPtr Key)"
  },
  {
    "label": "FReload()",
    "kind": "Method",
    "detail": "Function (} } ; using TFunctionRemap = TMap<FNativeFuncPtr,FNativeFuncPtr,FDefaultSetAllocator,FNativeFuncPtrMapKeyFuncs> ; public :)",
    "insertText": "FReload(EActiveReloadType InType, const TCHAR* InPrefix, const TArray<UPackage*>& InPackages, FOutputDevice& InAr)"
  },
  {
    "label": "FReload()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FReload(EActiveReloadType InType, const TCHAR* InPrefix, FOutputDevice& InAr)"
  },
  {
    "label": "FReload()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FReload()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EActiveReloadType)",
    "insertText": "GetType()"
  },
  {
    "label": "NotifyFunctionRemap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyFunctionRemap(FNativeFuncPtr NewFunctionPointer, FNativeFuncPtr OldFunctionPointer)"
  },
  {
    "label": "NotifyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyChange(UClass* New, UClass* Old)"
  },
  {
    "label": "NotifyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyChange(UEnum* New, UEnum* Old)"
  },
  {
    "label": "NotifyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyChange(UScriptStruct* New, UScriptStruct* Old)"
  },
  {
    "label": "NotifyChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyChange(UPackage* New, UPackage* Old)"
  },
  {
    "label": "Reinstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reinstance()"
  },
  {
    "label": "GetReinstancedCDO()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetReinstancedCDO(UObject* CDO)"
  },
  {
    "label": "GetReinstancedCDO()",
    "kind": "Method",
    "detail": "Function (const UObject*)",
    "insertText": "GetReinstancedCDO(const UObject* CDO)"
  },
  {
    "label": "GetReinstancedClasses()",
    "kind": "Method",
    "detail": "Function (const TMap<UClass*,UClass*>&)",
    "insertText": "GetReinstancedClasses()"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize(bool bRunGC = true)"
  },
  {
    "label": "SetSendReloadCompleteNotification()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSendReloadCompleteNotification(bool bSend)"
  },
  {
    "label": "SetEnableReinstancing()",
    "kind": "Method",
    "detail": "Function (bSendReloadComplete = bSend ; } void)",
    "insertText": "SetEnableReinstancing(bool bInEnableReinstancing)"
  },
  {
    "label": "HasReinstancingOccurred()",
    "kind": "Method",
    "detail": "Function (bEnableReinstancing = bInEnableReinstancing ; } bool)",
    "insertText": "HasReinstancingOccurred()"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStats(FReinstanceStats& Stats, void* New, void* Old)"
  },
  {
    "label": "FormatStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatStats(FStringBuilderBase& Out, const TCHAR* Singular, const TCHAR* Plural, const FReinstanceStats& Stats)"
  },
  {
    "label": "FormatStat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FormatStat(FStringBuilderBase& Out, const TCHAR* Singular, const TCHAR* Plural, const TCHAR* What, int32 Value)"
  }
]