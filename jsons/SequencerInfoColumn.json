[
  {
    "label": "ISceneOutliner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISceneOutliner"
  },
  {
    "label": "FSequencer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencer"
  },
  {
    "label": "FLevelEditorSequencerBindingData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelEditorSequencerBindingData"
  },
  {
    "label": "FSequencerInfoColumn",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequencerInfoColumn"
  },
  {
    "label": "FSequencerInfoColumn()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / Views / STableViewBase . h \" # include \" Widgets / Views / SHeaderRow . h \" # include \" Widgets / Views / STableRow . h \" # include \" SceneOutlinerPublicTypes . h \" # include \" SceneOutlinerFwd . h \" # include \" Misc / EnumRange . h \" # include \" ISceneOutliner . h \" # include \" ISceneOutlinerColumn . h \" class ISceneOutliner ; class FSequencer ; class FLevelEditorSequencerBindingData ; namespace Sequencer { class FSequencerInfoColumn : public ISceneOutlinerColumn { public :)",
    "insertText": "FSequencerInfoColumn(ISceneOutliner& InSceneOutliner, FSequencer& InSequencer, const FLevelEditorSequencerBindingData& InBindingData)"
  },
  {
    "label": "FSequencerInfoColumn()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSequencerInfoColumn(ISceneOutliner& InSceneOutliner)"
  },
  {
    "label": "FSequencerInfoColumn()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSequencerInfoColumn()"
  },
  {
    "label": "GetID()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetID()"
  },
  {
    "label": "GetColumnID()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetColumnID()"
  },
  {
    "label": "ConstructHeaderRowColumn()",
    "kind": "Method",
    "detail": "Function (SHeaderRow::FColumn::FArguments)",
    "insertText": "ConstructHeaderRowColumn()"
  },
  {
    "label": "ConstructRowWidget()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<SWidget>)",
    "insertText": "ConstructRowWidget(FSceneOutlinerTreeItemRef TreeItem, const STableRow<FSceneOutlinerTreeItemPtr>& Row)"
  },
  {
    "label": "PopulateSearchStrings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateSearchStrings(const ISceneOutlinerTreeItem& Item, TArray< FString >& OutSearchStrings)"
  },
  {
    "label": "SupportsSorting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsSorting()"
  },
  {
    "label": "GetTextForActor()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetTextForActor(AActor* InActor)"
  },
  {
    "label": "GetTextForItem()",
    "kind": "Method",
    "detail": "Function (private : FText)",
    "insertText": "GetTextForItem(const TWeakPtr<ISceneOutlinerTreeItem> TreeItem)"
  }
]