[
  {
    "label": "FDatasmithLevelSequenceElementImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithLevelSequenceElementImpl"
  },
  {
    "label": "FDatasmithBaseAnimationElementImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithBaseAnimationElementImpl"
  },
  {
    "label": "FDatasmithTransformAnimationElementImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithTransformAnimationElementImpl"
  },
  {
    "label": "FDatasmithVisibilityAnimationElementImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithVisibilityAnimationElementImpl"
  },
  {
    "label": "FDatasmithSubsequenceAnimationElementImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDatasmithSubsequenceAnimationElementImpl"
  },
  {
    "label": "FDatasmithLevelSequenceElementImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DatasmithAnimationElements . h \" # include \" DatasmithSceneElementsImpl . h \" # include \" Containers / Array . h \" # include \" Templates / SharedPointer . h \" class FDatasmithLevelSequenceElementImpl : public FDatasmithElementImpl<IDatasmithLevelSequenceElement> { public :)",
    "insertText": "FDatasmithLevelSequenceElementImpl(const TCHAR* InName)"
  },
  {
    "label": "GetFile()",
    "kind": "Method",
    "detail": "Function (const TCHAR*)",
    "insertText": "GetFile()"
  },
  {
    "label": "SetFile()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetFile(const TCHAR* InFile)"
  },
  {
    "label": "GetFileHash()",
    "kind": "Method",
    "detail": "Function (File = InFile ; } ; FMD5Hash)",
    "insertText": "GetFileHash()"
  },
  {
    "label": "GetFrameRate()",
    "kind": "Method",
    "detail": "Function (FileHash = Hash ; } float)",
    "insertText": "GetFrameRate()"
  },
  {
    "label": "AddAnimation()",
    "kind": "Method",
    "detail": "Function (FrameRate = FramePerSecs ; } void)",
    "insertText": "AddAnimation(const TSharedRef< IDatasmithBaseAnimationElement >& InAnimation)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Animations .)",
    "insertText": "Add(InAnimation)"
  },
  {
    "label": "GetAnimationsCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetAnimationsCount()"
  },
  {
    "label": "GetAnimation()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<IDatasmithBaseAnimationElement>)",
    "insertText": "GetAnimation(int32 InIndex)"
  },
  {
    "label": "RemoveAnimation()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveAnimation(const TSharedRef< IDatasmithBaseAnimationElement >& InAnimation)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (Animations .)",
    "insertText": "Remove(InAnimation)"
  },
  {
    "label": "FDatasmithBaseAnimationElementImpl()",
    "kind": "Method",
    "detail": "Function (} private : TReflected<FString> File ; TReflected<FMD5Hash> FileHash ; TReflected<float> FrameRate ; TArray<TSharedRef<IDatasmithBaseAnimationElement>> Animations ; } ; template<InterfaceType> class FDatasmithBaseAnimationElementImpl : public FDatasmithElementImpl<InterfaceType> { public :)",
    "insertText": "FDatasmithBaseAnimationElementImpl(const TCHAR* InName, EDatasmithElementType ChildType, EDatasmithElementAnimationSubType InSubtype = EDatasmithElementAnimationSubType::BaseAnimation)"
  },
  {
    "label": "IsSubType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSubType(const EDatasmithElementAnimationSubType AnimSubType)"
  },
  {
    "label": "SetCompletionMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCompletionMode(EDatasmithCompletionMode InCompletionMode)"
  },
  {
    "label": "GetCompletionMode()",
    "kind": "Method",
    "detail": "Function (CompletionMode = InCompletionMode ; } EDatasmithCompletionMode)",
    "insertText": "GetCompletionMode()"
  },
  {
    "label": "FDatasmithTransformAnimationElementImpl()",
    "kind": "Method",
    "detail": "Function (} class FDatasmithTransformAnimationElementImpl : public FDatasmithBaseAnimationElementImpl<IDatasmithTransformAnimationElement> { public :)",
    "insertText": "FDatasmithTransformAnimationElementImpl(const TCHAR* InName)"
  },
  {
    "label": "AddFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFrame(EDatasmithTransformType TransformType, const FDatasmithTransformFrameInfo& FrameInfo)"
  },
  {
    "label": "Frames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Frames(uint8)TransformType].Add(FrameInfo)"
  },
  {
    "label": "GetFramesCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetFramesCount(EDatasmithTransformType TransformType)"
  },
  {
    "label": "SetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCurveInterpMode(EDatasmithTransformType TransformType, EDatasmithCurveInterpMode CurveInterpMode)"
  },
  {
    "label": "TransformCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TransformCurveInterpMode(uint32)"
  },
  {
    "label": "GetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (} EDatasmithCurveInterpMode)",
    "insertText": "GetCurveInterpMode(EDatasmithTransformType TransformType)"
  },
  {
    "label": "GetFrame()",
    "kind": "Method",
    "detail": "Function (} const FDatasmithTransformFrameInfo&)",
    "insertText": "GetFrame(EDatasmithTransformType TransformType, int32 Index)"
  },
  {
    "label": "RemoveFrame()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveFrame(EDatasmithTransformType TransformType, int32 Index)"
  },
  {
    "label": "Frames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Frames(uint8)TransformType].RemoveAt(Index)"
  },
  {
    "label": "GetEnabledTransformChannels()",
    "kind": "Method",
    "detail": "Function (} } EDatasmithTransformChannels)",
    "insertText": "GetEnabledTransformChannels()"
  },
  {
    "label": "Frames()",
    "kind": "Method",
    "detail": "Function (EnabledChannels = Channels ; } private : TArray<FDatasmithTransformFrameInfo>)",
    "insertText": "Frames(uint8)"
  },
  {
    "label": "TransformCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (EDatasmithCurveInterpMode)",
    "insertText": "TransformCurveInterpMode(uint8)"
  },
  {
    "label": "FDatasmithVisibilityAnimationElementImpl()",
    "kind": "Method",
    "detail": "Function (EDatasmithTransformChannels EnabledChannels ; } ; class FDatasmithVisibilityAnimationElementImpl : public FDatasmithBaseAnimationElementImpl<IDatasmithVisibilityAnimationElement> { public :)",
    "insertText": "FDatasmithVisibilityAnimationElementImpl(const TCHAR* InName)"
  },
  {
    "label": "AddFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFrame(const FDatasmithVisibilityFrameInfo& FrameInfo)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Frames .)",
    "insertText": "Add(FrameInfo)"
  },
  {
    "label": "GetFramesCount()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetFramesCount()"
  },
  {
    "label": "SetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCurveInterpMode(EDatasmithCurveInterpMode InCurveInterpMode)"
  },
  {
    "label": "GetCurveInterpMode()",
    "kind": "Method",
    "detail": "Function (CurveInterpMode = InCurveInterpMode ; } EDatasmithCurveInterpMode)",
    "insertText": "GetCurveInterpMode()"
  },
  {
    "label": "RemoveFrame()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveFrame(int32 Index)"
  },
  {
    "label": "RemoveAt()",
    "kind": "Method",
    "detail": "Function (Frames .)",
    "insertText": "RemoveAt(Index)"
  },
  {
    "label": "SetPropagateToChildren()",
    "kind": "Method",
    "detail": "Function (} } void)",
    "insertText": "SetPropagateToChildren(bool bInPropagate)"
  },
  {
    "label": "GetPropagateToChildren()",
    "kind": "Method",
    "detail": "Function (bPropagate = bInPropagate ; } bool)",
    "insertText": "GetPropagateToChildren()"
  },
  {
    "label": "GetStartTime()",
    "kind": "Method",
    "detail": "Function (FFrameNumber)",
    "insertText": "GetStartTime()"
  },
  {
    "label": "GetDuration()",
    "kind": "Method",
    "detail": "Function (StartTime = InStartTime ; } int32)",
    "insertText": "GetDuration()"
  },
  {
    "label": "GetTimeScale()",
    "kind": "Method",
    "detail": "Function (Duration = InDuration ; } float)",
    "insertText": "GetTimeScale()"
  },
  {
    "label": "GetSubsequence()",
    "kind": "Method",
    "detail": "Function (TimeScale = InTimeScale ; } TWeakPtr<IDatasmithLevelSequenceElement>)",
    "insertText": "GetSubsequence()"
  }
]