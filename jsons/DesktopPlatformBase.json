[
  {
    "label": "FEngineVersion",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEngineVersion"
  },
  {
    "label": "FJsonObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FJsonObject"
  },
  {
    "label": "FDesktopPlatformBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDesktopPlatformBase"
  },
  {
    "label": "FDesktopPlatformBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / PlatformProcess . h \" # include \" IDesktopPlatform . h \" # include \" Misc / UProjectInfo . h \" # include \" Misc / CompilationResult . h \" class FEngineVersion ; class FJsonObject ; PRAGMA_DISABLE_DEPRECATION_WARNINGS class FDesktopPlatformBase : public IDesktopPlatform { public :)",
    "insertText": "FDesktopPlatformBase()"
  },
  {
    "label": "GetEngineDescription()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEngineDescription(const FString& Identifier)"
  },
  {
    "label": "GetCurrentEngineIdentifier()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetCurrentEngineIdentifier()"
  },
  {
    "label": "EnumerateLauncherEngineInstallations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateLauncherEngineInstallations(TMap<FString, FString> &OutInstallations)"
  },
  {
    "label": "EnumerateLauncherSampleInstallations()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateLauncherSampleInstallations(TArray<FString> &OutInstallations)"
  },
  {
    "label": "EnumerateLauncherSampleProjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnumerateLauncherSampleProjects(TArray<FString> &OutFileNames)"
  },
  {
    "label": "GetEngineRootDirFromIdentifier()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEngineRootDirFromIdentifier(const FString &Identifier, FString &OutRootDir)"
  },
  {
    "label": "GetEngineIdentifierFromRootDir()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEngineIdentifierFromRootDir(const FString &RootDir, FString &OutIdentifier)"
  },
  {
    "label": "GetDefaultEngineIdentifier()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDefaultEngineIdentifier(FString &OutIdentifier)"
  },
  {
    "label": "GetDefaultEngineRootDir()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetDefaultEngineRootDir(FString &OutRootDir)"
  },
  {
    "label": "GetEngineSavedConfigDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetEngineSavedConfigDirectory(const FString& Identifier)"
  },
  {
    "label": "IsPreferredEngineIdentifier()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPreferredEngineIdentifier(const FString &Identifier, const FString &OtherIdentifier)"
  },
  {
    "label": "TryGetEngineVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetEngineVersion(const FString& RootDir, FEngineVersion& OutVersion)"
  },
  {
    "label": "IsStockEngineRelease()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStockEngineRelease(const FString &Identifier)"
  },
  {
    "label": "TryParseStockEngineVersion()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryParseStockEngineVersion(const FString& Identifier, FEngineVersion& OutVersion)"
  },
  {
    "label": "IsSourceDistribution()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSourceDistribution(const FString &RootDir)"
  },
  {
    "label": "IsPerforceBuild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPerforceBuild(const FString &RootDir)"
  },
  {
    "label": "IsValidRootDirectory()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidRootDirectory(const FString &RootDir)"
  },
  {
    "label": "SetEngineIdentifierForProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetEngineIdentifierForProject(const FString &ProjectFileName, const FString &Identifier)"
  },
  {
    "label": "GetEngineIdentifierForProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEngineIdentifierForProject(const FString &ProjectFileName, FString &OutIdentifier)"
  },
  {
    "label": "OpenProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OpenProject(const FString& ProjectFileName)"
  },
  {
    "label": "CleanGameProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CleanGameProject(const FString& ProjectDir, FString& OutFailPath, FFeedbackContext* Warn)"
  },
  {
    "label": "CompileGameProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CompileGameProject(const FString& RootDir, const FString& ProjectFileName, FFeedbackContext* Warn, ECompilationResult::Type* OutResult)"
  },
  {
    "label": "GenerateProjectFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateProjectFiles(const FString& RootDir, const FString& ProjectFileName, FFeedbackContext* Warn, FString LogFilePath = FString())"
  },
  {
    "label": "IsUnrealBuildToolAvailable()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnrealBuildToolAvailable()"
  },
  {
    "label": "InvokeUnrealBuildToolSync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InvokeUnrealBuildToolSync(const FString& InCmdLineParams, FOutputDevice &Ar, bool bSkipBuildUBT, int32& OutReturnCode, FString& OutProcOutput)"
  },
  {
    "label": "InvokeUnrealBuildToolAsync()",
    "kind": "Method",
    "detail": "Function (FProcHandle)",
    "insertText": "InvokeUnrealBuildToolAsync(const FString& InCmdLineParams, FOutputDevice &Ar, void*& OutReadPipe, void*& OutWritePipe, bool bSkipBuildUBT = false)"
  },
  {
    "label": "RunUnrealBuildTool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RunUnrealBuildTool(const FText& Description, const FString& RootDir, const FString& Arguments, FFeedbackContext* Warn)"
  },
  {
    "label": "IsUnrealBuildToolRunning()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUnrealBuildToolRunning()"
  },
  {
    "label": "GetOidcAccessToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOidcAccessToken(const FString& RootDir, const FString& ProjectFileName, const FString& ProviderIdentifier, bool bUnattended, FFeedbackContext* Warn, FString& OutToken, FDateTime& OutTokenExpiresAt, bool& bOutWasInteractiveLogin)"
  },
  {
    "label": "GetOidcTokenStatus()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOidcTokenStatus(const FString& RootDir, const FString& ProjectFileName, const FString& ProviderIdentifier, FFeedbackContext* Warn, int& OutStatus)"
  },
  {
    "label": "GetHordeUrl()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHordeUrl(FString& OutHordeUrl, FString* OutHordeUrlConfigSource = nullptr)"
  },
  {
    "label": "SetHordeUrl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHordeUrl(const FString& HordeUrl)"
  },
  {
    "label": "GetHordeAccessToken()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetHordeAccessToken(const FString& HordeUrl, bool bUnattended, FFeedbackContext* Warn, FString& OutToken, FDateTime& OutTokenExpiresAt, bool& bOutWasInteractiveLogin)"
  },
  {
    "label": "GetTargetsForProject()",
    "kind": "Method",
    "detail": "Function (const TArray<FTargetInfo>&)",
    "insertText": "GetTargetsForProject(const FString& ProjectFile)"
  },
  {
    "label": "GetTargetsForCurrentProject()",
    "kind": "Method",
    "detail": "Function (const TArray<FTargetInfo>&)",
    "insertText": "GetTargetsForCurrentProject()"
  },
  {
    "label": "EnumerateProjectsKnownByEngine()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EnumerateProjectsKnownByEngine(const FString &Identifier, bool bIncludeNativeProjects, TArray<FString> &OutProjectFileNames)"
  },
  {
    "label": "GetDefaultProjectCreationPath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDefaultProjectCreationPath()"
  },
  {
    "label": "ReadHordeUrlWithoutCache()",
    "kind": "Method",
    "detail": "Function (private : FString CurrentEngineIdentifier ; FDateTime LauncherInstallationTimestamp ; TMap<FString,FString> LauncherInstallationList ; TMap<FString,FUProjectDictionary> CachedProjectDictionaries ; TMap<FString,TArray<FTargetInfo>> ProjectFileToTargets ; bool bInitializedHordeServerUrl = false ; FString HordeServerUrl ; FString HordeServerUrlConfigSource ; FString)",
    "insertText": "ReadHordeUrlWithoutCache(FString& OutHordeUrlConfigSource)"
  },
  {
    "label": "ReadLauncherInstallationList()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadLauncherInstallationList()"
  },
  {
    "label": "CheckForLauncherEngineInstallation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForLauncherEngineInstallation(const FString &AppId, const FString &Identifier, TMap<FString, FString> &OutInstallations)"
  },
  {
    "label": "ParseReleaseVersion()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "ParseReleaseVersion(const FString &Version)"
  },
  {
    "label": "LoadProjectFile()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FJsonObject>)",
    "insertText": "LoadProjectFile(const FString &FileName)"
  },
  {
    "label": "SaveProjectFile()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SaveProjectFile(const FString &FileName, TSharedPtr<FJsonObject> Object)"
  },
  {
    "label": "GetCachedProjectDictionary()",
    "kind": "Method",
    "detail": "Function (const FUProjectDictionary&)",
    "insertText": "GetCachedProjectDictionary(const FString& RootDir)"
  },
  {
    "label": "GetProjectBuildProducts()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetProjectBuildProducts(const FString& ProjectFileName, TArray<FString> &OutFileNames, TArray<FString> &OutDirectoryNames)"
  },
  {
    "label": "BuildUnrealBuildTool()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "BuildUnrealBuildTool(const FString& RootDir, FOutputDevice &Ar)"
  },
  {
    "label": "InvokeOidcTokenToolSync()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InvokeOidcTokenToolSync(const FText& Description, const FString& RootDir, const FString& Arguments, FFeedbackContext* Warn, int32& OutReturnCode, FString& OutProcOutput)"
  },
  {
    "label": "InvokeOidcTokenToolAsync()",
    "kind": "Method",
    "detail": "Function (FProcHandle)",
    "insertText": "InvokeOidcTokenToolAsync(const FString& InArguments, void*& OutReadPipe, void*& OutWritePipe)"
  },
  {
    "label": "GetOidcAccessTokenInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOidcAccessTokenInternal(const FString& RootDir, const FString& Arguments, bool bUnattended, FFeedbackContext* Warn, FString& OutToken, FDateTime& OutTokenExpiresAt, bool& bOutWasInteractiveLogin)"
  },
  {
    "label": "GetOidcAccessTokenInteractive()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetOidcAccessTokenInteractive(const FString& RootDir, const FString& Arguments, bool bUnattended, FFeedbackContext* Warn, int32& OutReturnCode)"
  },
  {
    "label": "ReadTargetInfo()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadTargetInfo(const FString& FileName, TArray<FTargetInfo>& Targets)"
  },
  {
    "label": "GetUserDir()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetUserDir(const FString& Identifier)"
  },
  {
    "label": "GetLegacyEngineSavedConfigDirectory()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetLegacyEngineSavedConfigDirectory(const FString& Identifier)"
  },
  {
    "label": "GetUnrealBuildToolProjectFileName()",
    "kind": "Method",
    "detail": "Function (protected : FString)",
    "insertText": "GetUnrealBuildToolProjectFileName(const FString& RootDir)"
  },
  {
    "label": "GetUnrealBuildToolExecutableFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetUnrealBuildToolExecutableFilename(const FString& RootDir)"
  },
  {
    "label": "GetOidcTokenExecutableFilename()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetOidcTokenExecutableFilename(const FString& RootDir)"
  }
]