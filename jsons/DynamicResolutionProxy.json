[
  {
    "label": "FDynamicResolutionHeuristicProxy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDynamicResolutionHeuristicProxy"
  },
  {
    "label": "IDynamicResolutionState",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDynamicResolutionState"
  },
  {
    "label": "FrameHistoryEntry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FrameHistoryEntry"
  },
  {
    "label": "uint64()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" SceneView . h \" # include \" Engine / EngineTypes . h \" # include \" TemporalUpscaler . h \" class FDynamicResolutionHeuristicProxy { public : uint64 kInvalidEntryId = ~)",
    "insertText": "uint64(0)"
  },
  {
    "label": "FDynamicResolutionHeuristicProxy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FDynamicResolutionHeuristicProxy()"
  },
  {
    "label": "Reset_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset_RenderThread()"
  },
  {
    "label": "CreateNewPreviousFrameTimings_RenderThread()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "CreateNewPreviousFrameTimings_RenderThread(float FrameTime, float GameThreadTimeMs, float RenderThreadTimeMs, float RHIThreadTime)"
  },
  {
    "label": "CommitPreviousFrameGPUTimings_RenderThread()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CommitPreviousFrameGPUTimings_RenderThread(uint64 HistoryFrameId, float TotalFrameGPUBusyTimeMs, float DynamicResolutionGPUBusyTimeMs, const DynamicRenderScaling::TMap<float>& BudgetTimingMs)"
  },
  {
    "label": "RefreshCurrentFrameResolutionFraction_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCurrentFrameResolutionFraction_RenderThread()"
  },
  {
    "label": "GetResolutionFractionsApproximation_GameThread()",
    "kind": "Method",
    "detail": "Function (} DynamicRenderScaling::TMap<float>)",
    "insertText": "GetResolutionFractionsApproximation_GameThread()"
  },
  {
    "label": "GetResolutionFractionUpperBounds()",
    "kind": "Method",
    "detail": "Function (} DynamicRenderScaling::TMap<float>)",
    "insertText": "GetResolutionFractionUpperBounds()"
  },
  {
    "label": "CreateDefaultState()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<class IDynamicResolutionState>)",
    "insertText": "CreateDefaultState()"
  },
  {
    "label": "SetTemporalUpscaler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTemporalUpscaler(const UE::Renderer::Private::ITemporalUpscaler* InTemporalUpscaler)"
  },
  {
    "label": "FrameHistoryEntry()",
    "kind": "Method",
    "detail": "Function (private : struct FrameHistoryEntry { float FrameTimeMs = - 1 . 0 f ; float GameThreadTimeMs = - 1 . 0 f ; float RenderThreadTimeMs = - 1 . 0 f ; float RHIThreadTimeMs = - 1 . 0 f ; float TotalFrameGPUBusyTimeMs = - 1 . 0 f ; float GlobalDynamicResolutionTimeMs = - 1 . 0 f ; DynamicRenderScaling::TMap<float> BudgetTimingMs ; DynamicRenderScaling::TMap<float> ResolutionFractions ;)",
    "insertText": "FrameHistoryEntry()"
  },
  {
    "label": "SetAll()",
    "kind": "Method",
    "detail": "Function (ResolutionFractions .)",
    "insertText": "SetAll(1.0f)"
  },
  {
    "label": "SetAll()",
    "kind": "Method",
    "detail": "Function (BudgetTimingMs .)",
    "insertText": "SetAll(-1.0f)"
  },
  {
    "label": "HasGPUTimings()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasGPUTimings()"
  },
  {
    "label": "History()",
    "kind": "Method",
    "detail": "Function (const FrameHistoryEntry InvalidEntry ; return InvalidEntry ; } return)",
    "insertText": "History(History.Num() + PreviousFrameIndex - BrowsingFrameId) % History.Num()"
  },
  {
    "label": "QueryCurrentFrameResolutionFractions_Internal()",
    "kind": "Method",
    "detail": "Function (} DynamicRenderScaling::TMap<float>)",
    "insertText": "QueryCurrentFrameResolutionFractions_Internal()"
  },
  {
    "label": "RefreshCurrentFrameResolutionFractionUpperBound_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCurrentFrameResolutionFractionUpperBound_RenderThread()"
  },
  {
    "label": "RefreshHeuristicStats_RenderThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshHeuristicStats_RenderThread()"
  },
  {
    "label": "ResetInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetInternal()"
  },
  {
    "label": "ResizeHistoryIfNeeded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeHistoryIfNeeded()"
  }
]