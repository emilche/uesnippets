[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FCurveHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveHandle"
  },
  {
    "label": "FCurveSequence",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCurveSequence"
  },
  {
    "label": "FCurveHandle()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" HAL / Platform . h \" enum class ECurveEaseFunction : uint8 { Linear,QuadIn,QuadOut,QuadInOut,CubicIn,CubicOut,CubicInOut,} ; struct FCurveHandle {)",
    "insertText": "FCurveHandle(const struct FCurveSequence* InOwnerSequence = nullptr, int32 InCurveIndex = 0)"
  },
  {
    "label": "GetLerp()",
    "kind": "Method",
    "detail": "Function (public : float)",
    "insertText": "GetLerp()"
  },
  {
    "label": "IsInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsInitialized()"
  },
  {
    "label": "ApplyEasing()",
    "kind": "Method",
    "detail": "Function (} public : float)",
    "insertText": "ApplyEasing(float Time, ECurveEaseFunction EaseType)"
  }
]