[
  {
    "label": "PRTimeParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PRTimeParameters"
  },
  {
    "label": "PRExplodedTime",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PRExplodedTime"
  },
  {
    "label": "NSPR_API()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_PRTIME_H__ # define BASE_PRTIME_H__ # include<stdint . h> # include \" base / base_export . h \" typedef int8_t PRInt8 ; typedef int16_t PRInt16 ; typedef int32_t PRInt32 ; typedef int64_t PRInt64 ; typedef int PRIntn ; typedef PRIntn PRBool ; # define PR_TRUE 1 # define PR_FALSE 0 typedef enum { PR_FAILURE = - 1,PR_SUCCESS = 0 } PRStatus ; # define PR_ASSERT DCHECK # define PR_CALLBACK # define PR_INT16_MAX 3 2 7 6 7 # define)",
    "insertText": "NSPR_API(__type) extern __type #define LL_I2L(l, i) ((l) = (PRInt64)(i)) #define LL_MUL(r, a, b) ((r) = (a) * (b)) #define LL_ADD(r, a, b) ((r) = (a) + (b)) #define LL_SUB(r, a, b) ((r) = (a) - (b))"
  },
  {
    "label": "PRTimeParameters()",
    "kind": "Method",
    "detail": "Function (typedef struct PRTimeParameters { PRInt32 tp_gmt_offset ; PRInt32 tp_dst_offset ; } PRTimeParameters ; typedef struct PRExplodedTime { PRInt32 tm_usec ; PRInt32 tm_sec ; PRInt32 tm_min ; PRInt32 tm_hour ; PRInt32 tm_mday ; PRInt32 tm_month ; PRInt16 tm_year ; PRInt8 tm_wday ; PRInt16 tm_yday ; PRTimeParameters tm_params ; } PRExplodedTime ; typedef)",
    "insertText": "PRTimeParameters(PR_CALLBACK *PRTimeParamFn)(const PRExplodedTime *gmt)"
  },
  {
    "label": "NSPR_API()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NSPR_API(PRTime) PR_ImplodeTime(const PRExplodedTime *exploded)"
  },
  {
    "label": "NSPR_API()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NSPR_API(void) PR_NormalizeTime( PRExplodedTime *exploded, PRTimeParamFn params)"
  },
  {
    "label": "NSPR_API()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NSPR_API(PRTimeParameters) PR_GMTParameters(const PRExplodedTime *gmt)"
  },
  {
    "label": "PR_ParseTimeString()",
    "kind": "Method",
    "detail": "Function (BASE_EXPORT PRStatus)",
    "insertText": "PR_ParseTimeString(const char *string, PRBool default_to_gmt, PRTime *result)"
  }
]