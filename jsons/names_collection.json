[
  {
    "label": "NamesCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NamesCollection"
  },
  {
    "label": "NamesCollection()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_PC_E2E_ANALYZER_VIDEO_NAMES_COLLECTION_H_ # define TEST_PC_E2E_ANALYZER_VIDEO_NAMES_COLLECTION_H_ # include<map> # include<set> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / array_view . h \" namespace webrtc { class NamesCollection { public :)",
    "insertText": "NamesCollection()"
  },
  {
    "label": "NamesCollection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NamesCollection(rtc::ArrayView<const std::string> names)"
  },
  {
    "label": "size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "size()"
  },
  {
    "label": "index()",
    "kind": "Method",
    "detail": "Function (} size_t)",
    "insertText": "index(absl::string_view name)"
  },
  {
    "label": "name()",
    "kind": "Method",
    "detail": "Function (} const std::string&)",
    "insertText": "name(size_t index)"
  },
  {
    "label": "HasName()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasName(absl::string_view name)"
  },
  {
    "label": "AddIfAbsent()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "AddIfAbsent(absl::string_view name)"
  },
  {
    "label": "RemoveIfPresent()",
    "kind": "Method",
    "detail": "Function (absl::optional<size_t>)",
    "insertText": "RemoveIfPresent(absl::string_view name)"
  },
  {
    "label": "GetPresentIndexes()",
    "kind": "Method",
    "detail": "Function (std::set<size_t>)",
    "insertText": "GetPresentIndexes()"
  },
  {
    "label": "GetAllIndexes()",
    "kind": "Method",
    "detail": "Function (std::set<size_t>)",
    "insertText": "GetAllIndexes()"
  }
]