[
  {
    "label": "_xmpp_mem_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_mem_t"
  },
  {
    "label": "_xmpp_log_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_log_t"
  },
  {
    "label": "_xmpp_ctx_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_ctx_t"
  },
  {
    "label": "_xmpp_mem_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_mem_t"
  },
  {
    "label": "_xmpp_log_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_log_t"
  },
  {
    "label": "_xmpp_conn_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_conn_t"
  },
  {
    "label": "_xmpp_stanza_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_stanza_t"
  },
  {
    "label": "_xmpp_sha1_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_xmpp_sha1_t"
  },
  {
    "label": "xmpp_initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_initialize(void)"
  },
  {
    "label": "xmpp_shutdown()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_shutdown(void)"
  },
  {
    "label": "xmpp_version_check()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_version_check(int major, int minor)"
  },
  {
    "label": "xmpp_ctx_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_ctx_free(xmpp_ctx_t * const ctx)"
  },
  {
    "label": "xmpp_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_free(const xmpp_ctx_t * const ctx, void *p)"
  },
  {
    "label": "xmpp_send_error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_send_error(xmpp_conn_t * const conn, xmpp_error_type_t const type, char * const text)"
  },
  {
    "label": "xmpp_conn_release()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_release(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_get_flags()",
    "kind": "Method",
    "detail": "Function (long)",
    "insertText": "xmpp_conn_get_flags(const xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_set_flags()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_set_flags(xmpp_conn_t * const conn, long flags)"
  },
  {
    "label": "xmpp_conn_set_jid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_conn_set_jid(xmpp_conn_t * const conn, const char * const jid)"
  },
  {
    "label": "xmpp_conn_set_pass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_conn_set_pass(xmpp_conn_t * const conn, const char * const pass)"
  },
  {
    "label": "xmpp_conn_disable_tls()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_conn_disable_tls(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_is_secured()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_is_secured(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_set_keepalive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_conn_set_keepalive(xmpp_conn_t * const conn, int timeout, int interval)"
  },
  {
    "label": "xmpp_conn_is_connecting()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_is_connecting(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_is_connected()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_is_connected(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_is_disconnected()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_is_disconnected(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_connect_client()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_connect_client(xmpp_conn_t * const conn, \n\t\t\t  const char * const altdomain,\n\t\t\t  unsigned short altport,\n\t\t\t  xmpp_conn_handler callback,\n\t\t\t  void * const userdata)"
  },
  {
    "label": "xmpp_connect_component()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_connect_component(xmpp_conn_t * const conn, const char * const server,\n                           unsigned short port, xmpp_conn_handler callback,\n                           void * const userdata)"
  },
  {
    "label": "xmpp_connect_raw()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_connect_raw(xmpp_conn_t * const conn,\n                     const char * const altdomain,\n                     unsigned short altport,\n                     xmpp_conn_handler callback,\n                     void * const userdata)"
  },
  {
    "label": "xmpp_conn_open_stream_default()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_open_stream_default(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_conn_open_stream()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_open_stream(xmpp_conn_t * const conn, char **attributes,\n                          size_t attributes_len)"
  },
  {
    "label": "xmpp_conn_tls_start()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_conn_tls_start(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_disconnect()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_disconnect(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_send()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_send(xmpp_conn_t * const conn,\n\t       xmpp_stanza_t * const stanza)"
  },
  {
    "label": "xmpp_send_raw_string()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_send_raw_string(xmpp_conn_t * const conn, \n\t\t\t  const char * const fmt, ...)"
  },
  {
    "label": "xmpp_send_raw()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_send_raw(xmpp_conn_t * const conn, \n\t\t   const char * const data, const size_t len)"
  },
  {
    "label": "xmpp_conn_set_extsock_handlers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_conn_set_extsock_handlers(xmpp_conn_t * const conn, const xmpp_conn_extsock_t * const handlers)"
  },
  {
    "label": "xmpp_extsock_connect_client()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_extsock_connect_client(xmpp_conn_t * const conn, xmpp_conn_handler callbask, void * const userdata)"
  },
  {
    "label": "xmpp_extsock_connected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_extsock_connected(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_extsock_connection_error()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_extsock_connection_error(xmpp_conn_t * const conn, const char * const reason)"
  },
  {
    "label": "xmpp_extsock_receive()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_extsock_receive(xmpp_conn_t * const conn, const char * const data, const size_t len)"
  },
  {
    "label": "xmpp_extsock_parser_reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_extsock_parser_reset(xmpp_conn_t * const conn)"
  },
  {
    "label": "xmpp_timed_handler_add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_timed_handler_add(xmpp_conn_t * const conn,\n\t\t\t    xmpp_timed_handler handler,\n\t\t\t    const unsigned long period,\n\t\t\t    void * const userdata)"
  },
  {
    "label": "xmpp_timed_handler_delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_timed_handler_delete(xmpp_conn_t * const conn,\n\t\t\t       xmpp_timed_handler handler)"
  },
  {
    "label": "xmpp_handler_add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_handler_add(xmpp_conn_t * const conn,\n\t\t      xmpp_handler handler,\n\t\t      const char * const ns,\n\t\t      const char * const name,\n\t\t      const char * const type,\n\t\t      void * const userdata)"
  },
  {
    "label": "xmpp_handler_delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_handler_delete(xmpp_conn_t * const conn,\n\t\t\t xmpp_handler handler)"
  },
  {
    "label": "xmpp_id_handler_add()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_id_handler_add(xmpp_conn_t * const conn,\n\t\t\t xmpp_handler handler,\n\t\t\t const char * const id,\n\t\t\t void * const userdata)"
  },
  {
    "label": "xmpp_id_handler_delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_id_handler_delete(xmpp_conn_t * const conn,\n\t\t\t    xmpp_handler handler,\n\t\t\t    const char * const id)"
  },
  {
    "label": "xmpp_stanza_release()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_release(xmpp_stanza_t * const stanza)"
  },
  {
    "label": "xmpp_stanza_is_text()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_is_text(xmpp_stanza_t * const stanza)"
  },
  {
    "label": "xmpp_stanza_is_tag()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_is_tag(xmpp_stanza_t * const stanza)"
  },
  {
    "label": "xmpp_stanza_to_text()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_to_text(xmpp_stanza_t *stanza, \n\t\t\tchar ** const buf, size_t * const buflen)"
  },
  {
    "label": "xmpp_stanza_add_child()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_add_child(xmpp_stanza_t *stanza, xmpp_stanza_t *child)"
  },
  {
    "label": "xmpp_stanza_get_attribute_count()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_get_attribute_count(xmpp_stanza_t * const stanza)"
  },
  {
    "label": "xmpp_stanza_get_attributes()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_get_attributes(xmpp_stanza_t * const stanza,\n\t\t\t       const char **attr, int attrlen)"
  },
  {
    "label": "xmpp_stanza_set_attribute()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_attribute(xmpp_stanza_t * const stanza, \n\t\t\t      const char * const key,\n\t\t\t      const char * const value)"
  },
  {
    "label": "xmpp_stanza_set_name()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_name(xmpp_stanza_t *stanza,\n\t\t\t const char * const name)"
  },
  {
    "label": "xmpp_stanza_set_text()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_text(xmpp_stanza_t *stanza,\n\t\t\t const char * const text)"
  },
  {
    "label": "xmpp_stanza_set_text_with_size()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_text_with_size(xmpp_stanza_t *stanza,\n\t\t\t\t   const char * const text, \n\t\t\t\t   const size_t size)"
  },
  {
    "label": "xmpp_stanza_del_attribute()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_del_attribute(xmpp_stanza_t * const stanza,\n                              const char * const name)"
  },
  {
    "label": "xmpp_stanza_set_ns()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_ns(xmpp_stanza_t * const stanza, const char * const ns)"
  },
  {
    "label": "xmpp_stanza_set_id()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_id(xmpp_stanza_t * const stanza, const char * const id)"
  },
  {
    "label": "xmpp_stanza_set_type()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_type(xmpp_stanza_t * const stanza, const char * const type)"
  },
  {
    "label": "xmpp_stanza_set_to()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_to(xmpp_stanza_t * const stanza, const char * const to)"
  },
  {
    "label": "xmpp_stanza_set_from()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_stanza_set_from(xmpp_stanza_t * const stanza, const char * const from)"
  },
  {
    "label": "xmpp_message_set_body()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "xmpp_message_set_body(xmpp_stanza_t *msg, const char * const text)"
  },
  {
    "label": "xmpp_run_once()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_run_once(xmpp_ctx_t *ctx, const unsigned long  timeout)"
  },
  {
    "label": "xmpp_run()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_run(xmpp_ctx_t *ctx)"
  },
  {
    "label": "xmpp_stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_stop(xmpp_ctx_t *ctx)"
  },
  {
    "label": "xmpp_ctx_set_timeout()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_ctx_set_timeout(xmpp_ctx_t * const ctx, const unsigned long timeout)"
  },
  {
    "label": "xmpp_sha1_digest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_sha1_digest(const unsigned char *data, size_t len,\n                      unsigned char *digest)"
  },
  {
    "label": "xmpp_sha1_free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_sha1_free(xmpp_sha1_t *sha1)"
  },
  {
    "label": "xmpp_sha1_update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_sha1_update(xmpp_sha1_t *sha1, const unsigned char *data, size_t len)"
  },
  {
    "label": "xmpp_sha1_final()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_sha1_final(xmpp_sha1_t *sha1)"
  },
  {
    "label": "xmpp_sha1_to_digest()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_sha1_to_digest(xmpp_sha1_t *sha1, unsigned char *digest)"
  },
  {
    "label": "xmpp_base64_decode_bin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "xmpp_base64_decode_bin(xmpp_ctx_t *ctx, const char *base64, size_t len,\n                            unsigned char **out, size_t *outlen)"
  }
]