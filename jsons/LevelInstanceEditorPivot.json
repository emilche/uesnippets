[
  {
    "label": "ILevelInstanceEditorPivotInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILevelInstanceEditorPivotInterface"
  },
  {
    "label": "ILevelInstanceInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ILevelInstanceInterface"
  },
  {
    "label": "ULevelStreaming",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULevelStreaming"
  },
  {
    "label": "AActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AActor"
  },
  {
    "label": "FLevelInstanceEditorPivotHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelInstanceEditorPivotHelper"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_EDITOR # include \" CoreMinimal . h \" # include \" LevelInstance / LevelInstanceTypes . h \" class ILevelInstanceEditorPivotInterface ; class ILevelInstanceInterface ; class ULevelStreaming ; class AActor ; class FLevelInstanceEditorPivotHelper { public : ILevelInstanceEditorPivotInterface*)",
    "insertText": "Create(ILevelInstanceInterface* LevelInstance, ULevelStreaming* LevelStreaming)"
  },
  {
    "label": "SetPivot()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPivot(ILevelInstanceEditorPivotInterface* PivotInterface, ELevelInstancePivotType PivotType, AActor* PivotToActor)"
  },
  {
    "label": "GetPivot()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetPivot(ILevelInstanceEditorPivotInterface* PivotInterface, ELevelInstancePivotType PivotType, AActor* PivotToActor)"
  },
  {
    "label": "ShowPivotLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShowPivotLocation(const FVector& PivotLocation)"
  }
]