[
  {
    "label": "FMovieSceneAnimTypeID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneAnimTypeID"
  },
  {
    "label": "UMovieSceneMotionVectorSimulationSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneMotionVectorSimulationSystem"
  },
  {
    "label": "FSimulatedTransform",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSimulatedTransform"
  },
  {
    "label": "GetSimulatedMotionVectorTime()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" Math / Transform . h \" # include \" Containers / Map . h \" # include \" UObject / ObjectKey . h \" # include \" UObject / NameTypes . h \" # include \" MovieSceneMotionVectorSimulationSystem . generated . h \" struct FMovieSceneAnimTypeID ; namespace UE { namespace MovieScene { FFrameTime)",
    "insertText": "GetSimulatedMotionVectorTime(const FMovieSceneContext& Context)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() MOVIESCENETRACKS_API UMovieSceneMotionVectorSimulationSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "EnableThisFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnableThisFrame()"
  },
  {
    "label": "SimulateAllTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SimulateAllTransforms()"
  },
  {
    "label": "IsSimulationEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSimulationEnabled()"
  },
  {
    "label": "AddSimulatedTransform()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSimulatedTransform(USceneComponent* Component, const FTransform& SimulatedTransform, FName SocketName)"
  },
  {
    "label": "IsRelevantImpl()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsRelevantImpl(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "OnPostEvaluation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnPostEvaluation()"
  },
  {
    "label": "ComputeSimulatedMotion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ComputeSimulatedMotion()"
  },
  {
    "label": "PropagateMotionToComponents()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "PropagateMotionToComponents()"
  },
  {
    "label": "GetTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetTransform(USceneComponent* Component)"
  },
  {
    "label": "GetSocketTransform()",
    "kind": "Method",
    "detail": "Function (FTransform)",
    "insertText": "GetSocketTransform(USceneComponent* Component, FName SocketName)"
  },
  {
    "label": "HavePreviousTransformForParent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HavePreviousTransformForParent(USceneComponent* InComponent)"
  },
  {
    "label": "ApplySimulatedTransforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ApplySimulatedTransforms(USceneComponent* InComponent, const FTransform& InPreviousTransform)"
  },
  {
    "label": "FSimulatedTransform()",
    "kind": "Method",
    "detail": "Function (private : struct FSimulatedTransform {)",
    "insertText": "FSimulatedTransform(const FTransform& InTransform, FName InSocketName = NAME_None) : Transform(InTransform), SocketName(InSocketName)"
  }
]