[
  {
    "label": "INameValidatorInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "INameValidatorInterface"
  },
  {
    "label": "SGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SGraphNode"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "UBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlueprint"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UEdGraphNode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphNode"
  },
  {
    "label": "UEdGraphPin",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin"
  },
  {
    "label": "UEdGraphSchema",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphSchema"
  },
  {
    "label": "FEdGraphPinType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphPinType"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FSlateIcon",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateIcon"
  },
  {
    "label": "FDiffResults",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiffResults"
  },
  {
    "label": "FDiffSingleResult",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FDiffSingleResult"
  },
  {
    "label": "FPropertyLocalizationDataGatherer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPropertyLocalizationDataGatherer"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEdGraphTerminalType",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphTerminalType"
  },
  {
    "label": "EEdGraphPinDirection",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EEdGraphPinDirection"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FNodeMetadata",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNodeMetadata"
  },
  {
    "label": "UGraphNodeContextMenuContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UGraphNodeContextMenuContext"
  },
  {
    "label": "FEdGraphNodeDeprecationResponse",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEdGraphNodeDeprecationResponse"
  },
  {
    "label": "UEdGraphPin_Deprecated",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraphPin_Deprecated"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FNameParameterHelper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FNameParameterHelper"
  },
  {
    "label": "FCreatePinParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCreatePinParams"
  },
  {
    "label": "UStruct",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStruct"
  },
  {
    "label": "UToolMenu",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UToolMenu"
  },
  {
    "label": "FCompilerResultsLog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCompilerResultsLog"
  },
  {
    "label": "FGraphContextMenuBuilder",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGraphContextMenuBuilder"
  },
  {
    "label": "FSearchTagDataPair",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSearchTagDataPair"
  },
  {
    "label": "FSetAsIntermediateNode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSetAsIntermediateNode"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / Object . h \" # include \" Misc / Guid . h \" # include \" UObject / WeakObjectPtr . h \" # include \" EdGraphNode . generated . h \" class INameValidatorInterface ; class SGraphNode ; class SWidget ; class UBlueprint ; class UEdGraph ; class UEdGraphNode ; class UEdGraphPin ; class UEdGraphSchema ; struct FEdGraphPinType ; struct FPropertyChangedEvent ; struct FSlateIcon ; struct FDiffResults ; struct FDiffSingleResult ; class FPropertyLocalizationDataGatherer ; enum class EPropertyLocalizationGathererTextFlags : uint8 ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FEdGraphTerminalType() : TerminalCategory() , TerminalSubCategory() , TerminalSubCategoryObject(nullptr) , bTerminalIsConst(false) , bTerminalIsWeakPointer(false) , bTerminalIsUObjectWrapper(false)"
  },
  {
    "label": "FromPinType()",
    "kind": "Method",
    "detail": "Function (FEdGraphTerminalType)",
    "insertText": "FromPinType(const FEdGraphPinType& PinType)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FEdGraphTerminalType& P)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FEdGraphTerminalType& A, const FEdGraphTerminalType& B)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UENUM()"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (EGPD_Input,EGPD_Output,EGPD_MAX,} ; const TCHAR* const)",
    "insertText": "LexToString(const EEdGraphPinDirection State)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (default : break ; })",
    "insertText": "checkf(false, TEXT(\"Missing EEdGraphPinDirection Type: %d\"), static_cast<const int32>(State))"
  },
  {
    "label": "LexToString()",
    "kind": "Method",
    "detail": "Function (Enabled,Disabled,DevelopmentOnly } ; const TCHAR* const)",
    "insertText": "LexToString(const ENodeEnabledState State)"
  },
  {
    "label": "checkf()",
    "kind": "Method",
    "detail": "Function (default : break ; })",
    "insertText": "checkf(false, TEXT(\"Missing ENodeEnabledState Type: %d\"), static_cast<const int32>(State))"
  },
  {
    "label": "FNodeMetadata()",
    "kind": "Method",
    "detail": "Function (} enum class ESaveOrphanPinMode : uint8 { SaveNone,SaveAll,SaveAllButExec } ; struct FNodeMetadata { const FName DefaultGraphNode ; private :)",
    "insertText": "FNodeMetadata()"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (} } ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UGraphNodeContextMenuContext()"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Init(const UEdGraph* InGraph, const UEdGraphNode* InNode, const UEdGraphPin* InPin, bool bInDebuggingMode)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} ; enum class EEdGraphNodeDeprecationType { NodeTypeIsDeprecated,NodeHasDeprecatedReference } ; enum class EEdGraphNodeDeprecationMessageType { None,Note,Warning } ; struct FEdGraphNodeDeprecationResponse { EEdGraphNodeDeprecationMessageType MessageType = EEdGraphNodeDeprecationMessageType::None ; FText MessageText ; } ; enum class EGetFindReferenceSearchStringFlags : int8 { None = 0,Legacy = 1<<0,UseSearchSyntax = 1<<1,} ;)",
    "insertText": "ENUM_CLASS_FLAGS(EGetFindReferenceSearchStringFlags)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY()"
  },
  {
    "label": "IsNodeEnabled()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "IsNodeEnabled()"
  },
  {
    "label": "GetCanRenameNode()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetCanRenameNode()"
  },
  {
    "label": "GetDesiredEnabledState()",
    "kind": "Method",
    "detail": "Function (ENodeEnabledState)",
    "insertText": "GetDesiredEnabledState()"
  },
  {
    "label": "SetForceDisplayAsDisabled()",
    "kind": "Method",
    "detail": "Function (EnabledState = NewState ; bUserSetEnabledState = bUserAction ; } void)",
    "insertText": "SetForceDisplayAsDisabled(const bool bInNewDisplayState)"
  },
  {
    "label": "IsDisplayAsDisabledForced()",
    "kind": "Method",
    "detail": "Function (bDisplayAsDisabled = bInNewDisplayState ; } bool)",
    "insertText": "IsDisplayAsDisabledForced()"
  },
  {
    "label": "IsNodeUnrelated()",
    "kind": "Method",
    "detail": "Function (bUnrelated = bNodeUnrelated ; } bool)",
    "insertText": "IsNodeUnrelated()"
  },
  {
    "label": "IsAutomaticallyPlacedGhostNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAutomaticallyPlacedGhostNode()"
  },
  {
    "label": "MakeAutomaticallyPlacedGhostNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MakeAutomaticallyPlacedGhostNode()"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "DeclareCustomVersions()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareCustomVersions(FArchive& Ar, const UClass* SpecificSubclass)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (# endif # if WITH_EDITOR private : TArray<UEdGraphPin*> PooledPins ; public : void)",
    "insertText": "AddReferencedObjects(UObject* InThis, FReferenceCollector& Collector)"
  },
  {
    "label": "PreSave()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS void)",
    "insertText": "PreSave(FObjectPreSaveContext ObjectSaveContext)"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "ExportCustomProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExportCustomProperties(FOutputDevice& Out, uint32 Indent)"
  },
  {
    "label": "ImportCustomProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ImportCustomProperties(const TCHAR* SourceText, FFeedbackContext* Warn)"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "GetAllPins()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<SGraphNode> DEPRECATED_NodeWidget ; const TArray<UEdGraphPin*>&)",
    "insertText": "GetAllPins()"
  },
  {
    "label": "FNameParameterHelper()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNameParameterHelper(const FString& InNameParameter) : NameParameter(*InNameParameter)"
  },
  {
    "label": "FNameParameterHelper()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FNameParameterHelper(const TCHAR* InNameParameter) : NameParameter(InNameParameter)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FName)",
    "insertText": "operator()"
  },
  {
    "label": "FCreatePinParams()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FCreatePinParams(const FEdGraphPinType& PinType)"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (EPinContainerType ContainerType ; bool bIsReference ; bool bIsConst ; int32 Index ; FEdGraphTerminalType ValueTerminalType ; } ; UEdGraphPin*)",
    "insertText": "CreatePin(EEdGraphPinDirection Dir, const FName PinCategory, const FName PinName, const FCreatePinParams& PinParams = FCreatePinParams())"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (} UEdGraphPin*)",
    "insertText": "CreatePin(EEdGraphPinDirection Dir, const FName PinCategory, const FName PinSubCategory, const FName PinName, const FCreatePinParams& PinParams = FCreatePinParams())"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (} UEdGraphPin*)",
    "insertText": "CreatePin(EEdGraphPinDirection Dir, const FName PinCategory, UObject* PinSubCategoryObject, const FName PinName, const FCreatePinParams& PinParams = FCreatePinParams())"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (} UEdGraphPin*)",
    "insertText": "CreatePin(EEdGraphPinDirection Dir, const FName PinCategory, const FName PinSubCategory, UObject* PinSubCategoryObject, const FName PinName, const FCreatePinParams& PinParams = FCreatePinParams())"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "CreatePin(EEdGraphPinDirection Dir, const FEdGraphPinType& InPinType, const FName PinName, int32 Index = INDEX_NONE)"
  },
  {
    "label": "CreatePin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "CreatePin(EEdGraphPinDirection Dir, const FEdGraphPinType& InPinType, const TCHAR* PinName, int32 Index = INDEX_NONE)"
  },
  {
    "label": "DestroyPin()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DestroyPin(UEdGraphPin* Pin)"
  },
  {
    "label": "FindPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindPin(const FName PinName, const EEdGraphPinDirection Direction = EGPD_MAX)"
  },
  {
    "label": "FindPinChecked()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindPinChecked(const FName PinName, const EEdGraphPinDirection Direction = EGPD_MAX)"
  },
  {
    "label": "FindPin()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin* Result =)",
    "insertText": "FindPin(PinName, Direction)"
  },
  {
    "label": "FindPinChecked()",
    "kind": "Method",
    "detail": "Function (} UEdGraphPin*)",
    "insertText": "FindPinChecked(const FString& PinName, const EEdGraphPinDirection Direction = EGPD_MAX)"
  },
  {
    "label": "FindPin()",
    "kind": "Method",
    "detail": "Function (} UEdGraphPin*)",
    "insertText": "FindPin(const TCHAR* PinName, const EEdGraphPinDirection Direction = EGPD_MAX)"
  },
  {
    "label": "FindPinChecked()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindPinChecked(const TCHAR* PinName, const EEdGraphPinDirection Direction = EGPD_MAX)"
  },
  {
    "label": "FindPinByIdChecked()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindPinByIdChecked(const FGuid PinId)"
  },
  {
    "label": "FindPinByPredicate()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "FindPinByPredicate(TFunctionRef<bool(UEdGraphPin* InPin)> InFunction)"
  },
  {
    "label": "RemovePin()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemovePin(UEdGraphPin* Pin)"
  },
  {
    "label": "IsIntermediateNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsIntermediateNode()"
  },
  {
    "label": "GetPinDisplayName()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetPinDisplayName(const UEdGraphPin* Pin)"
  },
  {
    "label": "GetPinHoverText()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetPinHoverText(const UEdGraphPin& Pin, FString& HoverTextOut)"
  },
  {
    "label": "GetPinIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetPinIndex(UEdGraphPin* Pin)"
  },
  {
    "label": "GetPinAt()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetPinAt(int32 Index)"
  },
  {
    "label": "GetPinWithDirectionAt()",
    "kind": "Method",
    "detail": "Function (UEdGraphPin*)",
    "insertText": "GetPinWithDirectionAt(int32 Index, EEdGraphPinDirection PinDirection)"
  },
  {
    "label": "BreakAllNodeLinks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BreakAllNodeLinks(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "SnapToGrid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SnapToGrid(uint32 GridSnapSize)"
  },
  {
    "label": "ClearCompilerMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCompilerMessage()"
  },
  {
    "label": "ShowVisualWarning()",
    "kind": "Method",
    "detail": "Function (bHasCompilerMessage = false ; } bool)",
    "insertText": "ShowVisualWarning()"
  },
  {
    "label": "GetVisualWarningTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetVisualWarningTooltipText()"
  },
  {
    "label": "CreateUniquePinName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "CreateUniquePinName(FName SourcePinName)"
  },
  {
    "label": "PinName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "PinName(SourcePinName)"
  },
  {
    "label": "while()",
    "kind": "Method",
    "detail": "Function (int32 Index = 1 ;)",
    "insertText": "while(FindPin(PinName) != nullptr)"
  },
  {
    "label": "Printf()",
    "kind": "Method",
    "detail": "Function (+ + Index ; PinName =*)",
    "insertText": "Printf(TEXT(\"%s%d\"),*SourcePinName.ToString(),Index)"
  },
  {
    "label": "GetGraph()",
    "kind": "Method",
    "detail": "Function (} return PinName ; } class UEdGraph*)",
    "insertText": "GetGraph()"
  },
  {
    "label": "GetSubGraphs()",
    "kind": "Method",
    "detail": "Function (TArray<UEdGraph*>)",
    "insertText": "GetSubGraphs()"
  },
  {
    "label": "AllocateDefaultPins()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AllocateDefaultPins()"
  },
  {
    "label": "DestroyNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DestroyNode()"
  },
  {
    "label": "ReconstructNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReconstructNode()"
  },
  {
    "label": "RemovePinAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemovePinAt(const int32 PinIndex, const EEdGraphPinDirection PinDirection)"
  },
  {
    "label": "PrepareForCopying()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareForCopying()"
  },
  {
    "label": "CanPasteHere()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanPasteHere(const UEdGraph* TargetGraph)"
  },
  {
    "label": "CanCreateUnderSpecifiedSchema()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "CanCreateUnderSpecifiedSchema(const UEdGraphSchema* Schema)"
  },
  {
    "label": "PostPasteNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostPasteNode()"
  },
  {
    "label": "GetNodeTitle()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetNodeTitle(ENodeTitleType::Type TitleType)"
  },
  {
    "label": "GetFindReferenceSearchString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFindReferenceSearchString(EGetFindReferenceSearchStringFlags InFlags)"
  },
  {
    "label": "GetFindReferenceSearchString_Impl()",
    "kind": "Method",
    "detail": "Function (protected : FString)",
    "insertText": "GetFindReferenceSearchString_Impl(EGetFindReferenceSearchStringFlags InFlags)"
  },
  {
    "label": "GetFindReferenceSearchString()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GetFindReferenceSearchString()"
  },
  {
    "label": "GetNodeTitleColor()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } public : FLinearColor)",
    "insertText": "GetNodeTitleColor()"
  },
  {
    "label": "GetNodeCommentColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeCommentColor()"
  },
  {
    "label": "GetNodeBodyTintColor()",
    "kind": "Method",
    "detail": "Function (FLinearColor)",
    "insertText": "GetNodeBodyTintColor()"
  },
  {
    "label": "GetTooltipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipText()"
  },
  {
    "label": "GetKeywords()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetKeywords()"
  },
  {
    "label": "GetDocumentationLink()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDocumentationLink()"
  },
  {
    "label": "GetDocumentationExcerptName()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "GetDocumentationExcerptName()"
  },
  {
    "label": "GetIconAndTint()",
    "kind": "Method",
    "detail": "Function (FSlateIcon)",
    "insertText": "GetIconAndTint(FLinearColor& OutColor)"
  },
  {
    "label": "ShowPaletteIconOnNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShowPaletteIconOnNode()"
  },
  {
    "label": "PostPlacedNewNode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostPlacedNewNode()"
  },
  {
    "label": "PinDefaultValueChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PinDefaultValueChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "PinConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PinConnectionListChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "PinTypeChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PinTypeChanged(UEdGraphPin* Pin)"
  },
  {
    "label": "NodeConnectionListChanged()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NodeConnectionListChanged()"
  },
  {
    "label": "GetSchema()",
    "kind": "Method",
    "detail": "Function (} const UEdGraphSchema*)",
    "insertText": "GetSchema()"
  },
  {
    "label": "CanDuplicateNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDuplicateNode()"
  },
  {
    "label": "CanUserDeleteNode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserDeleteNode()"
  },
  {
    "label": "CanUserEditPinAdvancedViewFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanUserEditPinAdvancedViewFlag()"
  },
  {
    "label": "ResizeNode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResizeNode(const FVector2D& NewSize)"
  },
  {
    "label": "HasExternalDependencies()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "HasExternalDependencies(TArray<class UStruct*>* OptionalOutput = nullptr)"
  },
  {
    "label": "HasDeprecatedReference()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasDeprecatedReference()"
  },
  {
    "label": "GetJumpTargetForDoubleClick()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetJumpTargetForDoubleClick()"
  },
  {
    "label": "CanJumpToDefinition()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanJumpToDefinition()"
  },
  {
    "label": "JumpToDefinition()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "JumpToDefinition()"
  },
  {
    "label": "CreateNewGuid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNewGuid()"
  },
  {
    "label": "GetNodeContextMenuActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetNodeContextMenuActions(class UToolMenu* Menu, class UGraphNodeContextMenuContext* Context)"
  },
  {
    "label": "IncludeParentNodeContextMenu()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IncludeParentNodeContextMenu()"
  },
  {
    "label": "FindDiffs()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "FindDiffs(class UEdGraphNode* OtherNode, FDiffResults& Results)"
  },
  {
    "label": "GetMenuEntries()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetMenuEntries(struct FGraphContextMenuBuilder& ContextMenuBuilder)"
  },
  {
    "label": "MakeNameValidator()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<class INameValidatorInterface>)",
    "insertText": "MakeNameValidator()"
  },
  {
    "label": "OnUpdateCommentText()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnUpdateCommentText(const FString& NewComment)"
  },
  {
    "label": "SupportsCommentBubble()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsCommentBubble()"
  },
  {
    "label": "OnPinRemoved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnPinRemoved(UEdGraphPin* InRemovedPin)"
  },
  {
    "label": "ShouldDrawNodeAsControlPointOnly()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ShouldDrawNodeAsControlPointOnly(int32& OutInputPinIndex, int32& OutOutputPinIndex)"
  },
  {
    "label": "AddSearchMetaDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSearchMetaDataInfo(TArray<struct FSearchTagDataPair>& OutTaggedMetaData)"
  },
  {
    "label": "AddPinSearchMetaDataInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddPinSearchMetaDataInfo(const UEdGraphPin* Pin, TArray<struct FSearchTagDataPair>& OutTaggedMetaData)"
  },
  {
    "label": "GetPinMetaData()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPinMetaData(FName InPinName, FName InKey)"
  },
  {
    "label": "IsCompilerRelevant()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCompilerRelevant()"
  },
  {
    "label": "CreateNodeImage()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "CreateNodeImage()"
  },
  {
    "label": "AddNodeUpgradeNote()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddNodeUpgradeNote(FText InUpgradeNote)"
  },
  {
    "label": "ShouldMakeCommentBubbleVisible()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldMakeCommentBubbleVisible()"
  },
  {
    "label": "SetMakeCommentBubbleVisible()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMakeCommentBubbleVisible(bool MakeVisible)"
  },
  {
    "label": "ForEachNodeDirectlyConnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachNodeDirectlyConnected(TFunctionRef<void(UEdGraphNode*)> Func)"
  },
  {
    "label": "ForEachNodeDirectlyConnectedIf()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachNodeDirectlyConnectedIf(TFunctionRef<bool(const UEdGraphPin* Pin)> Filter, TFunctionRef<void(UEdGraphNode*)> Func)"
  },
  {
    "label": "ForEachNodeDirectlyConnectedToInputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachNodeDirectlyConnectedToInputs(TFunctionRef<void(UEdGraphNode*)> Func)"
  },
  {
    "label": "ForEachNodeDirectlyConnectedToOutputs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ForEachNodeDirectlyConnectedToOutputs(TFunctionRef<void(UEdGraphNode*)> Func)"
  },
  {
    "label": "GatherGraphNodeForLocalization()",
    "kind": "Method",
    "detail": "Function (protected : # if WITH_EDITORONLY_DATA void)",
    "insertText": "GatherGraphNodeForLocalization(const UObject* const Object, FPropertyLocalizationDataGatherer& PropertyLocalizationDataGatherer, const EPropertyLocalizationGathererTextFlags GatherTextFlags)"
  },
  {
    "label": "GatherForLocalization()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherForLocalization(FPropertyLocalizationDataGatherer& PropertyLocalizationDataGatherer, const EPropertyLocalizationGathererTextFlags GatherTextFlags)"
  },
  {
    "label": "DiffProperties()",
    "kind": "Method",
    "detail": "Function (# endif void)",
    "insertText": "DiffProperties(UClass* StructA, UClass* StructB, UObject* DataA, UObject* DataB, FDiffResults& Results, FDiffSingleResult& Diff)"
  },
  {
    "label": "DiffProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DiffProperties(UStruct* StructA, UStruct* StructB, uint8* DataA, uint8* DataB, FDiffResults& Results, FDiffSingleResult& Diff)"
  },
  {
    "label": "GetPropertyNameAndValueForDiff()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetPropertyNameAndValueForDiff(const FProperty* Prop, const uint8* PropertyAddr)"
  },
  {
    "label": "FSetAsIntermediateNode()",
    "kind": "Method",
    "detail": "Function (# endif struct FSetAsIntermediateNode ; } ; struct FSetAsIntermediateNode { UEdGraph ; private :)",
    "insertText": "FSetAsIntermediateNode(UEdGraphNode* GraphNode)"
  }
]