[
  {
    "label": "FloatImage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FloatImage"
  },
  {
    "label": "BitMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BitMap"
  },
  {
    "label": "BitMap()",
    "kind": "Method",
    "detail": "Function (# ifndef NV_IMAGE_HOLEFILLING_H # define NV_IMAGE_HOLEFILLING_H # include<nvcore / BitArray . h> # include<nvimage / nvimage . h> namespace nv { class FloatImage ; class BitMap { public :)",
    "insertText": "BitMap(uint w, uint h) : m_width(w), m_height(h), m_bitArray(w*h)"
  },
  {
    "label": "width()",
    "kind": "Method",
    "detail": "Function (} const uint)",
    "insertText": "width()"
  },
  {
    "label": "nvDebugCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvDebugCheck(x < m_width && y < m_height)"
  },
  {
    "label": "bitAt()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "bitAt(uint idx)"
  },
  {
    "label": "setBitAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setBitAt(uint x, uint y)"
  },
  {
    "label": "setBitAt()",
    "kind": "Method",
    "detail": "Function (m_bitArray .)",
    "insertText": "setBitAt(y * m_width + x)"
  },
  {
    "label": "setBitAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setBitAt(uint idx)"
  },
  {
    "label": "setBitAt()",
    "kind": "Method",
    "detail": "Function (m_bitArray .)",
    "insertText": "setBitAt(idx)"
  },
  {
    "label": "clearBitAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "clearBitAt(uint x, uint y)"
  },
  {
    "label": "clearBitAt()",
    "kind": "Method",
    "detail": "Function (m_bitArray .)",
    "insertText": "clearBitAt(y * m_width + x)"
  },
  {
    "label": "clearBitAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "clearBitAt(uint idx)"
  },
  {
    "label": "clearBitAt()",
    "kind": "Method",
    "detail": "Function (m_bitArray .)",
    "insertText": "clearBitAt(idx)"
  },
  {
    "label": "clearAll()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "clearAll()"
  },
  {
    "label": "setAll()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "setAll()"
  },
  {
    "label": "toggleAll()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "toggleAll()"
  },
  {
    "label": "swap()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "swap(BitMap & a, BitMap & b)"
  },
  {
    "label": "nvCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvCheck(a.m_width == b.m_width)"
  },
  {
    "label": "nvCheck()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "nvCheck(a.m_height == b.m_height)"
  },
  {
    "label": "swap()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "swap(a.m_bitArray, b.m_bitArray)"
  },
  {
    "label": "fillVoronoi()",
    "kind": "Method",
    "detail": "Function (} private : const uint m_width ; const uint m_height ; BitArray m_bitArray ; } ; void)",
    "insertText": "fillVoronoi(FloatImage * img, const BitMap * bmap)"
  },
  {
    "label": "fillBlur()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fillBlur(FloatImage * img, const BitMap * bmap)"
  },
  {
    "label": "fillPullPush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fillPullPush(FloatImage * img, const BitMap * bmap)"
  },
  {
    "label": "fillExtrapolate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fillExtrapolate(int passCount, FloatImage * img, BitMap * bmap)"
  },
  {
    "label": "fillQuadraticExtrapolate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "fillQuadraticExtrapolate(int passCount, FloatImage * img, BitMap * bmap, int coverageIndex = -1)"
  }
]