[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UInteractiveTool",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UInteractiveTool"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FInteractiveToolAction",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FInteractiveToolAction"
  },
  {
    "label": "FInteractiveToolActionSet",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInteractiveToolActionSet"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Containers / UnrealString . h \" # include \" CoreMinimal . h \" # include \" GenericPlatform / GenericApplication . h \" # include \" HAL / Platform . h \" # include \" InputCoreTypes . h \" # include \" Internationalization / Text . h \" # include \" Templates / Function . h \" class UClass ; class UInteractiveTool ; enum class EStandardToolActions { IncreaseBrushSize = 1 0 0,DecreaseBrushSize = 1 0 1,ToggleWireframe = 1 0 2,BaseClientDefinedActionID = 1 0 0 0 0 } ; struct FInteractiveToolAction { const UClass* ClassType ; int32 ActionID ; FString ActionName ; FText ShortName ; FText Description ; EModifierKey::Type DefaultModifiers ; FKey DefaultKey ; TFunction<)",
    "insertText": "void()"
  },
  {
    "label": "FInteractiveToolAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FInteractiveToolAction()"
  },
  {
    "label": "FInteractiveToolAction()",
    "kind": "Method",
    "detail": "Function (ClassType = nullptr ; ActionID = 0 ; })",
    "insertText": "FInteractiveToolAction(const UClass* ClassTypeIn, int32 ActionIDIn, const FString& ActionNameIn, const FText& ShortNameIn, const FText& DescriptionIn, EModifierKey::Type DefaultModifiersIn, const FKey& DefaultKeyIn)"
  },
  {
    "label": "RegisterAction()",
    "kind": "Method",
    "detail": "Function (ClassType = ClassTypeIn ; ActionID = ActionIDIn ; ActionName = ActionNameIn ; ShortName = ShortNameIn ; Description = DescriptionIn ; DefaultModifiers = DefaultModifiersIn ; DefaultKey = DefaultKeyIn ; } } ; class FInteractiveToolActionSet { public : void)",
    "insertText": "RegisterAction(UInteractiveTool* Tool, int32 ActionID, const FString& ActionName, const FText& ShortUIName, const FText& DescriptionText, EModifierKey::Type Modifiers, const FKey& ShortcutKey, TFunction<void()> ActionFunction)"
  },
  {
    "label": "FindActionByID()",
    "kind": "Method",
    "detail": "Function (const FInteractiveToolAction*)",
    "insertText": "FindActionByID(int32 ActionID)"
  },
  {
    "label": "CollectActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectActions(TArray<FInteractiveToolAction>& OutActions)"
  },
  {
    "label": "ExecuteAction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecuteAction(int32 ActionID)"
  }
]