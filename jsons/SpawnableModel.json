[
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FSequenceModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSequenceModel"
  },
  {
    "label": "TAutoRegisterViewModelTypeID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAutoRegisterViewModelTypeID"
  },
  {
    "label": "FMovieSceneBinding",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneBinding"
  },
  {
    "label": "FMovieSceneSpawnable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSpawnable"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FSpawnableModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpawnableModel"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Internationalization / Text . h \" # include \" MVVM / ICastable . h \" # include \" MVVM / ViewModels / ObjectBindingModel . h \" # include \" Misc / Guid . h \" class UClass ; namespace UE::Sequencer { class FSequenceModel ; } namespace UE::Sequencer { template<T> struct TAutoRegisterViewModelTypeID ; } struct FMovieSceneBinding ; struct FMovieSceneSpawnable ; struct FSlateBrush ; namespace UE { namespace Sequencer { class FSpawnableModel : public FObjectBindingModel { public :)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FSpawnableModel, FObjectBindingModel)"
  },
  {
    "label": "FSpawnableModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSpawnableModel(FSequenceModel* InOwnerModel, const FMovieSceneBinding& InBinding, const FMovieSceneSpawnable& InSpawnable)"
  },
  {
    "label": "FSpawnableModel()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FSpawnableModel()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (EObjectBindingType)",
    "insertText": "GetType()"
  },
  {
    "label": "GetIconOverlayBrush()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush*)",
    "insertText": "GetIconOverlayBrush()"
  },
  {
    "label": "GetTooltipForSingleObjectBinding()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetTooltipForSingleObjectBinding()"
  },
  {
    "label": "FindObjectClass()",
    "kind": "Method",
    "detail": "Function (const UClass*)",
    "insertText": "FindObjectClass()"
  },
  {
    "label": "OnConstruct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnConstruct()"
  },
  {
    "label": "GetIconToolTipText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetIconToolTipText()"
  },
  {
    "label": "Delete()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Delete()"
  },
  {
    "label": "GetInvalidBindingLabelColor()",
    "kind": "Method",
    "detail": "Function (FSlateColor)",
    "insertText": "GetInvalidBindingLabelColor()"
  }
]