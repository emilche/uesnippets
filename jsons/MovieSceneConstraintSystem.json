[
  {
    "label": "UTransformableComponentHandle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTransformableComponentHandle"
  },
  {
    "label": "UTickableTransformConstraint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UTickableTransformConstraint"
  },
  {
    "label": "FEvaluateConstraintChannels",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEvaluateConstraintChannels"
  },
  {
    "label": "UMovieSceneConstraintSystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneConstraintSystem"
  },
  {
    "label": "FUpdateHandleForConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUpdateHandleForConstraint"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntitySystem . h \" # include \" MovieSceneConstraintSystem . generated . h \" class UTransformableComponentHandle ; class UTickableTransformConstraint ; namespace UE::MovieScene { struct FEvaluateConstraintChannels ; })",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UMovieSceneConstraintSystem()",
    "kind": "Method",
    "detail": "Function (TWeakObjectPtr<UTickableTransformConstraint> Constraint ; TWeakObjectPtr<UTransformableComponentHandle> TransformHandle ; } ;)",
    "insertText": "UMovieSceneConstraintSystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "OnSchedulePersistentTasks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSchedulePersistentTasks(UE::MovieScene::IEntitySystemScheduler* TaskScheduler)"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  }
]