[
  {
    "label": "MockPeerConnectionInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockPeerConnectionInterface"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TEST_MOCK_PEERCONNECTIONINTERFACE_H_ # define API_TEST_MOCK_PEERCONNECTIONINTERFACE_H_ # include<memory> # include<string> # include<type_traits> # include<utility> # include<vector> # include \" api / peer_connection_interface . h \" # include \" api / scoped_refptr . h \" # include \" api / sctp_transport_interface . h \" # include \" rtc_base / ref_counted_object . h \" # include \" test / gmock . h \" namespace webrtc { class MockPeerConnectionInterface : public webrtc::PeerConnectionInterface { public : rtc::scoped_refptr<MockPeerConnectionInterface>)",
    "insertText": "Create()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<StreamCollectionInterface>, local_streams, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<StreamCollectionInterface>, remote_streams, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, AddStream, (MediaStreamInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, RemoveStream, (MediaStreamInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<RtpSenderInterface>>, AddTrack, (rtc::scoped_refptr<MediaStreamTrackInterface>, const std::vector<std::string>&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<RtpSenderInterface>>, AddTrack, (rtc::scoped_refptr<MediaStreamTrackInterface>, const std::vector<std::string>&, const std::vector<RtpEncodingParameters>&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCError, RemoveTrackOrError, (rtc::scoped_refptr<RtpSenderInterface>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<RtpTransceiverInterface>>, AddTransceiver, (rtc::scoped_refptr<MediaStreamTrackInterface>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<RtpTransceiverInterface>>, AddTransceiver, (rtc::scoped_refptr<MediaStreamTrackInterface>, const RtpTransceiverInit&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<RtpTransceiverInterface>>, AddTransceiver, (cricket::MediaType), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<RtpTransceiverInterface>>, AddTransceiver, (cricket::MediaType, const RtpTransceiverInit&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<RtpSenderInterface>, CreateSender, (const std::string&, const std::string&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<rtc::scoped_refptr<RtpSenderInterface>>, GetSenders, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<rtc::scoped_refptr<RtpReceiverInterface>>, GetReceivers, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(std::vector<rtc::scoped_refptr<RtpTransceiverInterface>>, GetTransceivers, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, GetStats, (StatsObserver*, MediaStreamTrackInterface*, StatsOutputLevel), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, GetStats, (RTCStatsCollectorCallback*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, GetStats, (rtc::scoped_refptr<RtpSenderInterface>, rtc::scoped_refptr<RTCStatsCollectorCallback>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, GetStats, (rtc::scoped_refptr<RtpReceiverInterface>, rtc::scoped_refptr<RTCStatsCollectorCallback>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ClearStatsCache, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<SctpTransportInterface>, GetSctpTransport, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCErrorOr<rtc::scoped_refptr<DataChannelInterface>>, CreateDataChannelOrError, (const std::string&, const DataChannelInit*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const SessionDescriptionInterface*, local_description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const SessionDescriptionInterface*, remote_description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const SessionDescriptionInterface*, current_local_description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const SessionDescriptionInterface*, current_remote_description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const SessionDescriptionInterface*, pending_local_description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(const SessionDescriptionInterface*, pending_remote_description, (), (const, override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, RestartIce, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, CreateOffer, (CreateSessionDescriptionObserver*, const RTCOfferAnswerOptions&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, CreateAnswer, (CreateSessionDescriptionObserver*, const RTCOfferAnswerOptions&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetLocalDescription, (SetSessionDescriptionObserver*, SessionDescriptionInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetRemoteDescription, (SetSessionDescriptionObserver*, SessionDescriptionInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetRemoteDescription, (std::unique_ptr<SessionDescriptionInterface>, rtc::scoped_refptr<SetRemoteDescriptionObserverInterface>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(PeerConnectionInterface::RTCConfiguration, GetConfiguration, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCError, SetConfiguration, (const PeerConnectionInterface::RTCConfiguration&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, AddIceCandidate, (const IceCandidateInterface*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, RemoveIceCandidates, (const std::vector<cricket::Candidate>&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(RTCError, SetBitrate, (const BitrateSettings&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetAudioPlayout, (bool), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SetAudioRecording, (bool), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(rtc::scoped_refptr<DtlsTransportInterface>, LookupDtlsTransportByMid, (const std::string&), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(SignalingState, signaling_state, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(IceConnectionState, ice_connection_state, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(IceConnectionState, standardized_ice_connection_state, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(PeerConnectionState, peer_connection_state, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(IceGatheringState, ice_gathering_state, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(absl::optional<bool>, can_trickle_ice_candidates, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, StartRtcEventLog, (std::unique_ptr<RtcEventLogOutput>, int64_t), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, StartRtcEventLog, (std::unique_ptr<RtcEventLogOutput>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, StopRtcEventLog, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, Close, (), (override))"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "static_assert(!std::is_abstract_v<rtc::RefCountedObject<MockPeerConnectionInterface>>, \"\")"
  }
]