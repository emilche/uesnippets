[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_ATOMICOPS_INTERNALS_ATOMICWORD_COMPAT_H_ # define BASE_ATOMICOPS_INTERNALS_ATOMICWORD_COMPAT_H_ # include<stdint . h> # include \" build / build_config . h \" # if !)",
    "insertText": "defined(ARCH_CPU_64_BITS)"
  },
  {
    "label": "NoBarrier_CompareAndSwap()",
    "kind": "Method",
    "detail": "Function (namespace subtle { AtomicWord)",
    "insertText": "NoBarrier_CompareAndSwap(volatile AtomicWord* ptr, AtomicWord old_value, AtomicWord new_value)"
  },
  {
    "label": "NoBarrier_AtomicExchange()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "NoBarrier_AtomicExchange(volatile AtomicWord* ptr, AtomicWord new_value)"
  },
  {
    "label": "NoBarrier_AtomicIncrement()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "NoBarrier_AtomicIncrement(volatile AtomicWord* ptr, AtomicWord increment)"
  },
  {
    "label": "Barrier_AtomicIncrement()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "Barrier_AtomicIncrement(volatile AtomicWord* ptr, AtomicWord increment)"
  },
  {
    "label": "Acquire_CompareAndSwap()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "Acquire_CompareAndSwap(volatile AtomicWord* ptr, AtomicWord old_value, AtomicWord new_value)"
  },
  {
    "label": "Release_CompareAndSwap()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "Release_CompareAndSwap(volatile AtomicWord* ptr, AtomicWord old_value, AtomicWord new_value)"
  },
  {
    "label": "NoBarrier_Store()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NoBarrier_Store(volatile AtomicWord *ptr, AtomicWord value)"
  },
  {
    "label": "NoBarrier_Store()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NoBarrier_Store(reinterpret_cast<volatile Atomic32*>(ptr), value)"
  },
  {
    "label": "Release_Store()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Release_Store(volatile AtomicWord* ptr, AtomicWord value)"
  },
  {
    "label": "NoBarrier_Load()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "NoBarrier_Load(volatile const AtomicWord *ptr)"
  },
  {
    "label": "Acquire_Load()",
    "kind": "Method",
    "detail": "Function (} AtomicWord)",
    "insertText": "Acquire_Load(volatile const AtomicWord* ptr)"
  }
]