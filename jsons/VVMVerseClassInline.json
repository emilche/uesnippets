[
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__) #include \"UObject/VerseValueProperty.h\" #include \"VerseVM/VVMFunction.h\" #include \"VerseVM/VVMLog.h\" #include \"VerseVM/VVMNativeConverter.h\" #include \"VerseVM/VVMNativeFunction.h\" #include \"VerseVM/VVMNativeRef.h\" #include \"VerseVM/VVMVerseClass.h\" inline Verse::VValue UVerseClass::LoadField(Verse::FAllocationContext Context, UObject* Object, Verse::VUniqueString& FieldName)"
  },
  {
    "label": "UVerseClass()",
    "kind": "Method",
    "detail": "Function (using namespace Verse ; const UVerseClass* Class = CastChecked<)",
    "insertText": "UVerseClass(Object->GetClass())"
  },
  {
    "label": "GetField()",
    "kind": "Method",
    "detail": "Function (const VShape::VEntry* Field = Class -> Shape ->)",
    "insertText": "GetField(FieldName)"
  },
  {
    "label": "V_DIE_IF()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "V_DIE_IF(FieldValue.IsCellOfType<VProcedure>())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(VNativeFunction* NativeFunction = FieldValue.DynamicCast<VNativeFunction>(); NativeFunction && !NativeFunction->HasSelf())"
  },
  {
    "label": "VERSE_UNREACHABLE()",
    "kind": "Method",
    "detail": "Function (} else { return FieldValue ; } } default :)",
    "insertText": "VERSE_UNREACHABLE()"
  }
]