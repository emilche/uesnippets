[
  {
    "label": "IElementLocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IElementLocator"
  },
  {
    "label": "IAsyncDriverSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverSequence"
  },
  {
    "label": "IAsyncDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElement"
  },
  {
    "label": "IAsyncDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncDriverElementCollection"
  },
  {
    "label": "FDriverConfiguration",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDriverConfiguration"
  },
  {
    "label": "IAsyncAutomationDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAsyncAutomationDriver"
  },
  {
    "label": "IDriverSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverSequence"
  },
  {
    "label": "IDriverElement",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverElement"
  },
  {
    "label": "IDriverElementCollection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDriverElementCollection"
  },
  {
    "label": "IAutomationDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAutomationDriver"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / AsyncResult . h \" # include \" Misc / Timespan . h \" # include \" WaitUntil . h \" # include \" GenericPlatform / GenericApplication . h \" class IElementLocator ; class IAsyncDriverSequence ; class IAsyncDriverElement ; class IAsyncDriverElementCollection ; class FDriverConfiguration ; class IAsyncAutomationDriver { public : TAsyncResult<bool>)",
    "insertText": "Wait(FTimespan Timespan)"
  },
  {
    "label": "Wait()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<bool>)",
    "insertText": "Wait(const FDriverWaitDelegate& Delegate)"
  },
  {
    "label": "CreateSequence()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IAsyncDriverSequence,ESPMode::ThreadSafe>)",
    "insertText": "CreateSequence()"
  },
  {
    "label": "GetCursorPosition()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FVector2D>)",
    "insertText": "GetCursorPosition()"
  },
  {
    "label": "GetModifierKeys()",
    "kind": "Method",
    "detail": "Function (TAsyncResult<FModifierKeysState>)",
    "insertText": "GetModifierKeys()"
  },
  {
    "label": "FindElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IAsyncDriverElement,ESPMode::ThreadSafe>)",
    "insertText": "FindElement(const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& ElementLocator)"
  },
  {
    "label": "FindElements()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IAsyncDriverElementCollection,ESPMode::ThreadSafe>)",
    "insertText": "FindElements(const TSharedRef<IElementLocator, ESPMode::ThreadSafe>& ElementLocator)"
  },
  {
    "label": "GetConfiguration()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FDriverConfiguration,ESPMode::ThreadSafe>)",
    "insertText": "GetConfiguration()"
  }
]