[
  {
    "label": "FCEFBrowserByteResource",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCEFBrowserByteResource"
  },
  {
    "label": "FCEFBrowserByteResource()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if WITH_CEF3 # include \" CEFLibCefIncludes . h \" class FCEFBrowserByteResource : public CefResourceHandler { public :)",
    "insertText": "FCEFBrowserByteResource(const CefRefPtr<CefPostDataElement>& PostData, const FString& InMimeType)"
  },
  {
    "label": "FCEFBrowserByteResource()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FCEFBrowserByteResource()"
  },
  {
    "label": "Cancel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Cancel()"
  },
  {
    "label": "GetResponseHeaders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResponseHeaders(CefRefPtr<CefResponse> Response, int64& ResponseLength, CefString& RedirectUrl)"
  },
  {
    "label": "ProcessRequest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProcessRequest(CefRefPtr<CefRequest> Request, CefRefPtr<CefCallback> Callback)"
  },
  {
    "label": "ReadResponse()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ReadResponse(void* DataOut, int BytesToRead, int& BytesRead, CefRefPtr<CefCallback> Callback)"
  },
  {
    "label": "IMPLEMENT_REFCOUNTING()",
    "kind": "Method",
    "detail": "Function (private : int32 Position ; int32 Size ; unsigned char* Buffer ; FString MimeType ;)",
    "insertText": "IMPLEMENT_REFCOUNTING(FCEFBrowserByteResource)"
  }
]