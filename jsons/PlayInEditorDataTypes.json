[
  {
    "label": "FSlatePlayInEditorInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlatePlayInEditorInfo"
  },
  {
    "label": "ULocalPlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ULocalPlayer"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "FSceneViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewport"
  },
  {
    "label": "IAssetViewport",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAssetViewport"
  },
  {
    "label": "FPIELoginInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPIELoginInfo"
  },
  {
    "label": "FPieLoginStruct",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPieLoginStruct"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FRequestPlaySessionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRequestPlaySessionParams"
  },
  {
    "label": "FLauncherDeviceInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLauncherDeviceInfo"
  },
  {
    "label": "FPlayInEditorSessionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlayInEditorSessionInfo"
  },
  {
    "label": "FWindowSizeAndPos",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FWindowSizeAndPos"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Optional . h \" # include \" Engine / GameInstance . h \" # include \" UObject / GCObject . h \" # include \" PlayInEditorDataTypes . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "FSlatePlayInEditorInfo()",
    "kind": "Method",
    "detail": "Function (TWeakPtr<class SWindow> SlatePlayInEditorWindow ; TSharedPtr<class FSceneViewport> SlatePlayInEditorWindowViewport ; TWeakPtr<class IAssetViewport> DestinationSlateViewport ;)",
    "insertText": "FSlatePlayInEditorInfo() : SlatePlayInEditorWindow(NULL), DestinationSlateViewport(NULL)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UPROPERTY()"
  },
  {
    "label": "FPieLoginStruct()",
    "kind": "Method",
    "detail": "Function (} ; struct FPieLoginStruct { FName WorldContextHandle ; int32 NextX ; int32 NextY ; double PIEStartTime ; FGameInstancePIEParameters GameInstancePIEParameters ; int32 PIEInstanceIndex ;)",
    "insertText": "FPieLoginStruct(const FPieLoginStruct& InOther)"
  },
  {
    "label": "FPieLoginStruct()",
    "kind": "Method",
    "detail": "Function (WorldContextHandle = InOther . WorldContextHandle ; NextX = InOther . NextX ; NextY = InOther . NextY ; PIEStartTime = InOther . PIEStartTime ; GameInstancePIEParameters = InOther . GameInstancePIEParameters ; PIEInstanceIndex = InOther . PIEInstanceIndex ; })",
    "insertText": "FPieLoginStruct() : WorldContextHandle(NAME_None) , NextX(0) , NextY(0) , PIEStartTime(0) , PIEInstanceIndex(-1)"
  },
  {
    "label": "FRequestPlaySessionParams()",
    "kind": "Method",
    "detail": "Function (} } ; enum class EPlaySessionDestinationType : uint8 { InProcess,NewProcess,Launcher } ; enum class EPlaySessionWorldType : uint8 { PlayInEditor,SimulateInEditor } ; enum class EPlaySessionPreviewType : uint8 { NoPreview,MobilePreview,VulkanPreview,VRPreview,} ; struct FRequestPlaySessionParams { public :)",
    "insertText": "FRequestPlaySessionParams() : SessionDestination(EPlaySessionDestinationType::InProcess) , WorldType(EPlaySessionWorldType::PlayInEditor) , EditorPlaySettings(nullptr) , bAllowOnlineSubsystem(true)"
  },
  {
    "label": "HasPlayWorldPlacement()",
    "kind": "Method",
    "detail": "Function (} struct FLauncherDeviceInfo { FString DeviceId ; FString DeviceName ; bool bUpdateDeviceFlash = false ; bool bIsSimulator = false ; } ; EPlaySessionDestinationType SessionDestination ; EPlaySessionWorldType WorldType ; TOptional<EPlaySessionPreviewType> SessionPreviewTypeOverride ; TObjectPtr<ULevelEditorPlaySettings> EditorPlaySettings ; TOptional<FVector> StartLocation ; TOptional<FRotator> StartRotation ; TOptional<TWeakPtr<class IAssetViewport>> DestinationSlateViewport ; TOptional<FLauncherDeviceInfo> LauncherTargetDevice ; TOptional<FString> AdditionalStandaloneCommandLineParameters ; TOptional<FString> MobilePreviewTargetDevice ; TWeakPtr<SWindow> CustomPIEWindow ; TSubclassOf<AGameModeBase> GameModeOverride ; FString GlobalMapOverride ; bool bAllowOnlineSubsystem ; bool)",
    "insertText": "HasPlayWorldPlacement()"
  },
  {
    "label": "FPlayInEditorSessionInfo()",
    "kind": "Method",
    "detail": "Function (} } ; struct FPlayInEditorSessionInfo { public :)",
    "insertText": "FPlayInEditorSessionInfo() : PlayRequestStartTime(0.0) , PlayRequestStartTime_StudioAnalytics(0.0) , PIEInstanceCount(0) , NumViewportInstancesCreated(0) , NumClientInstancesCreated(0) , NumOutstandingPIELogins(0) , bStartedInSpectatorMode(false) , bUsingOnlinePlatform(false) , bAnyBlueprintErrors(false) , bServerWasLaunched(false) , bLateJoinRequested(false)"
  },
  {
    "label": "FWindowSizeAndPos()",
    "kind": "Method",
    "detail": "Function (} double PlayRequestStartTime ; double PlayRequestStartTime_StudioAnalytics ; FRequestPlaySessionParams OriginalRequestParams ; struct FWindowSizeAndPos {)",
    "insertText": "FWindowSizeAndPos() : Size(0,0) , Position(0,0)"
  }
]