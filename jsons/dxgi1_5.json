[
  {
    "label": "DXGI_OUTDUPL_FLAG",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_OUTDUPL_FLAG"
  },
  {
    "label": "IDXGIOutput5Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIOutput5Vtbl"
  },
  {
    "label": "DXGI_HDR_METADATA_TYPE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_HDR_METADATA_TYPE"
  },
  {
    "label": "DXGI_HDR_METADATA_HDR10",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_HDR_METADATA_HDR10"
  },
  {
    "label": "DXGI_HDR_METADATA_HDR10PLUS",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DXGI_HDR_METADATA_HDR10PLUS"
  },
  {
    "label": "IDXGISwapChain4Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGISwapChain4Vtbl"
  },
  {
    "label": "_DXGI_OFFER_RESOURCE_FLAGS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_DXGI_OFFER_RESOURCE_FLAGS"
  },
  {
    "label": "_DXGI_RECLAIM_RESOURCE_RESULTS",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "_DXGI_RECLAIM_RESOURCE_RESULTS"
  },
  {
    "label": "IDXGIDevice4Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIDevice4Vtbl"
  },
  {
    "label": "DXGI_FEATURE",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "DXGI_FEATURE"
  },
  {
    "label": "IDXGIFactory5Vtbl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IDXGIFactory5Vtbl"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef __REQUIRED_RPCNDR_H_VERSION__ # define __REQUIRED_RPCNDR_H_VERSION__ 5 0 0 # endif # ifndef __REQUIRED_RPCSAL_H_VERSION__ # define __REQUIRED_RPCSAL_H_VERSION__ 1 0 0 # endif # include \" rpc . h \" # include \" rpcndr . h \" # ifndef __RPCNDR_H_VERSION__ # error this stub requires an updated version of<rpcndr . h> # endif # ifndef COM_NO_WINDOWS_H # include \" windows . h \" # include \" ole2 . h \" # endif # ifndef __dxgi1_5_h__ # define __dxgi1_5_h__ # if)",
    "insertText": "defined(_MSC_VER) && (_MSC_VER >= 1020)"
  },
  {
    "label": "WINAPI_FAMILY_PARTITION()",
    "kind": "Method",
    "detail": "Function (# endif # ifndef __IDXGISwapChain4_FWD_DEFINED__ # define __IDXGISwapChain4_FWD_DEFINED__ typedef interface IDXGISwapChain4 IDXGISwapChain4 ; # endif # ifndef __IDXGIDevice4_FWD_DEFINED__ # define __IDXGIDevice4_FWD_DEFINED__ typedef interface IDXGIDevice4 IDXGIDevice4 ; # endif # ifndef __IDXGIFactory5_FWD_DEFINED__ # define __IDXGIFactory5_FWD_DEFINED__ typedef interface IDXGIFactory5 IDXGIFactory5 ; # endif # include \" dxgi1_4 . h \" # ifdef __cplusplus \" C \" { # endif # include<winapifamily . h> # pragma region App Family # if)",
    "insertText": "WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_APP)"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (DXGI_OUTDUPL_COMPOSITED_UI_CAPTURE_ONLY = 1 } DXGI_OUTDUPL_FLAG ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0000_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0000_v0_0_s_ifspec ; # ifndef __IDXGIOutput5_INTERFACE_DEFINED__ # define __IDXGIOutput5_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIOutput5 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"80A07424-AB52-42EB-833C-0C42FD282D98\")"
  },
  {
    "label": "DuplicateOutput1()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "DuplicateOutput1(_In_ IUnknown *pDevice, UINT Flags, _In_ UINT SupportedFormatsCount, _In_reads_(SupportedFormatsCount) const DXGI_FORMAT *pSupportedFormats, _COM_Outptr_ IDXGIOutputDuplication **ppOutputDuplication)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIOutput5Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIOutput5 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIOutput5 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIOutput5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIOutput5 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIOutput5 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIOutput5 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIOutput5 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGIOutput5 * This, _Out_ DXGI_OUTPUT_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDisplayModeList )( IDXGIOutput5 * This, DXGI_FORMAT EnumFormat, UINT Flags, _Inout_ UINT *pNumModes, _Out_writes_to_opt_(*pNumModes,*pNumModes) DXGI_MODE_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *FindClosestMatchingMode )( IDXGIOutput5 * This, _In_ const DXGI_MODE_DESC *pModeToMatch, _Out_ DXGI_MODE_DESC *pClosestMatch, _In_opt_ IUnknown *pConcernedDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *WaitForVBlank )( IDXGIOutput5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *TakeOwnership )( IDXGIOutput5 * This, _In_ IUnknown *pDevice, BOOL Exclusive)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *ReleaseOwnership )( IDXGIOutput5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGammaControlCapabilities )( IDXGIOutput5 * This, _Out_ DXGI_GAMMA_CONTROL_CAPABILITIES *pGammaCaps)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetGammaControl )( IDXGIOutput5 * This, _In_ const DXGI_GAMMA_CONTROL *pArray)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGammaControl )( IDXGIOutput5 * This, _Out_ DXGI_GAMMA_CONTROL *pArray)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetDisplaySurface )( IDXGIOutput5 * This, _In_ IDXGISurface *pScanoutSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDisplaySurfaceData )( IDXGIOutput5 * This, _In_ IDXGISurface *pDestination)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFrameStatistics )( IDXGIOutput5 * This, _Out_ DXGI_FRAME_STATISTICS *pStats)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDisplayModeList1 )( IDXGIOutput5 * This, DXGI_FORMAT EnumFormat, UINT Flags, _Inout_ UINT *pNumModes, _Out_writes_to_opt_(*pNumModes,*pNumModes) DXGI_MODE_DESC1 *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *FindClosestMatchingMode1 )( IDXGIOutput5 * This, _In_ const DXGI_MODE_DESC1 *pModeToMatch, _Out_ DXGI_MODE_DESC1 *pClosestMatch, _In_opt_ IUnknown *pConcernedDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDisplaySurfaceData1 )( IDXGIOutput5 * This, _In_ IDXGIResource *pDestination)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *DuplicateOutput )( IDXGIOutput5 * This, _In_ IUnknown *pDevice, _COM_Outptr_ IDXGIOutputDuplication **ppOutputDuplication)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *SupportsOverlays )( IDXGIOutput5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckOverlaySupport )( IDXGIOutput5 * This, _In_ DXGI_FORMAT EnumFormat, _In_ IUnknown *pConcernedDevice, _Out_ UINT *pFlags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckOverlayColorSpaceSupport )( IDXGIOutput5 * This, _In_ DXGI_FORMAT Format, _In_ DXGI_COLOR_SPACE_TYPE ColorSpace, _In_ IUnknown *pConcernedDevice, _Out_ UINT *pFlags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *DuplicateOutput1 )( IDXGIOutput5 * This, _In_ IUnknown *pDevice, UINT Flags, _In_ UINT SupportedFormatsCount, _In_reads_(SupportedFormatsCount) const DXGI_FORMAT *pSupportedFormats, _COM_Outptr_ IDXGIOutputDuplication **ppOutputDuplication)"
  },
  {
    "label": "IDXGIOutput5_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIOutput5Vtbl ; interface IDXGIOutput5 { CONST_VTBL struct IDXGIOutput5Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIOutput5_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIOutput5_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIOutput5_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIOutput5_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIOutput5_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIOutput5_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIOutput5_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIOutput5_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGIOutput5_GetDisplayModeList(This,EnumFormat,Flags,pNumModes,pDesc) \\ ( (This)->lpVtbl -> GetDisplayModeList(This,EnumFormat,Flags,pNumModes,pDesc) ) #define IDXGIOutput5_FindClosestMatchingMode(This,pModeToMatch,pClosestMatch,pConcernedDevice) \\ ( (This)->lpVtbl -> FindClosestMatchingMode(This,pModeToMatch,pClosestMatch,pConcernedDevice) ) #define IDXGIOutput5_WaitForVBlank(This) \\ ( (This)->lpVtbl -> WaitForVBlank(This) ) #define IDXGIOutput5_TakeOwnership(This,pDevice,Exclusive) \\ ( (This)->lpVtbl -> TakeOwnership(This,pDevice,Exclusive) ) #define IDXGIOutput5_ReleaseOwnership(This) \\ ( (This)->lpVtbl -> ReleaseOwnership(This) ) #define IDXGIOutput5_GetGammaControlCapabilities(This,pGammaCaps) \\ ( (This)->lpVtbl -> GetGammaControlCapabilities(This,pGammaCaps) ) #define IDXGIOutput5_SetGammaControl(This,pArray) \\ ( (This)->lpVtbl -> SetGammaControl(This,pArray) ) #define IDXGIOutput5_GetGammaControl(This,pArray) \\ ( (This)->lpVtbl -> GetGammaControl(This,pArray) ) #define IDXGIOutput5_SetDisplaySurface(This,pScanoutSurface) \\ ( (This)->lpVtbl -> SetDisplaySurface(This,pScanoutSurface) ) #define IDXGIOutput5_GetDisplaySurfaceData(This,pDestination) \\ ( (This)->lpVtbl -> GetDisplaySurfaceData(This,pDestination) ) #define IDXGIOutput5_GetFrameStatistics(This,pStats) \\ ( (This)->lpVtbl -> GetFrameStatistics(This,pStats) ) #define IDXGIOutput5_GetDisplayModeList1(This,EnumFormat,Flags,pNumModes,pDesc) \\ ( (This)->lpVtbl -> GetDisplayModeList1(This,EnumFormat,Flags,pNumModes,pDesc) ) #define IDXGIOutput5_FindClosestMatchingMode1(This,pModeToMatch,pClosestMatch,pConcernedDevice) \\ ( (This)->lpVtbl -> FindClosestMatchingMode1(This,pModeToMatch,pClosestMatch,pConcernedDevice) ) #define IDXGIOutput5_GetDisplaySurfaceData1(This,pDestination) \\ ( (This)->lpVtbl -> GetDisplaySurfaceData1(This,pDestination) ) #define IDXGIOutput5_DuplicateOutput(This,pDevice,ppOutputDuplication) \\ ( (This)->lpVtbl -> DuplicateOutput(This,pDevice,ppOutputDuplication) ) #define IDXGIOutput5_SupportsOverlays(This) \\ ( (This)->lpVtbl -> SupportsOverlays(This) ) #define IDXGIOutput5_CheckOverlaySupport(This,EnumFormat,pConcernedDevice,pFlags) \\ ( (This)->lpVtbl -> CheckOverlaySupport(This,EnumFormat,pConcernedDevice,pFlags) ) #define IDXGIOutput5_CheckOverlayColorSpaceSupport(This,Format,ColorSpace,pConcernedDevice,pFlags) \\ ( (This)->lpVtbl -> CheckOverlayColorSpaceSupport(This,Format,ColorSpace,pConcernedDevice,pFlags) ) #define IDXGIOutput5_DuplicateOutput1(This,pDevice,Flags,SupportedFormatsCount,pSupportedFormats,ppOutputDuplication) \\ ( (This)->lpVtbl -> DuplicateOutput1(This,pDevice,Flags,SupportedFormatsCount,pSupportedFormats,ppOutputDuplication))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (DXGI_HDR_METADATA_TYPE_NONE = 0,DXGI_HDR_METADATA_TYPE_HDR10 = 1,DXGI_HDR_METADATA_TYPE_HDR10PLUS = 2 } DXGI_HDR_METADATA_TYPE ; typedef struct DXGI_HDR_METADATA_HDR10 { UINT16 RedPrimary [ 2 ] ; UINT16 GreenPrimary [ 2 ] ; UINT16 BluePrimary [ 2 ] ; UINT16 WhitePoint [ 2 ] ; UINT MaxMasteringLuminance ; UINT MinMasteringLuminance ; UINT16 MaxContentLightLevel ; UINT16 MaxFrameAverageLightLevel ; } DXGI_HDR_METADATA_HDR10 ; typedef struct DXGI_HDR_METADATA_HDR10PLUS { BYTE Data [ 7 2 ] ; } DXGI_HDR_METADATA_HDR10PLUS ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0001_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0001_v0_0_s_ifspec ; # ifndef __IDXGISwapChain4_INTERFACE_DEFINED__ # define __IDXGISwapChain4_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGISwapChain4 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"3D585D5A-BD4A-489E-B1F4-3DBCB6452FFB\")"
  },
  {
    "label": "SetHDRMetaData()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "SetHDRMetaData(_In_ DXGI_HDR_METADATA_TYPE Type, _In_ UINT Size, _In_reads_opt_(Size) void *pMetaData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGISwapChain4Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGISwapChain4 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGISwapChain4 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGISwapChain4 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGISwapChain4 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGISwapChain4 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGISwapChain4 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGISwapChain4 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDevice )( IDXGISwapChain4 * This, _In_ REFIID riid, _COM_Outptr_ void **ppDevice)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Present )( IDXGISwapChain4 * This, UINT SyncInterval, UINT Flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetBuffer )( IDXGISwapChain4 * This, UINT Buffer, _In_ REFIID riid, _COM_Outptr_ void **ppSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetFullscreenState )( IDXGISwapChain4 * This, BOOL Fullscreen, _In_opt_ IDXGIOutput *pTarget)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFullscreenState )( IDXGISwapChain4 * This, _Out_opt_ BOOL *pFullscreen, _COM_Outptr_opt_result_maybenull_ IDXGIOutput **ppTarget)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc )( IDXGISwapChain4 * This, _Out_ DXGI_SWAP_CHAIN_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ResizeBuffers )( IDXGISwapChain4 * This, UINT BufferCount, UINT Width, UINT Height, DXGI_FORMAT NewFormat, UINT SwapChainFlags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ResizeTarget )( IDXGISwapChain4 * This, _In_ const DXGI_MODE_DESC *pNewTargetParameters)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetContainingOutput )( IDXGISwapChain4 * This, _COM_Outptr_ IDXGIOutput **ppOutput)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFrameStatistics )( IDXGISwapChain4 * This, _Out_ DXGI_FRAME_STATISTICS *pStats)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetLastPresentCount )( IDXGISwapChain4 * This, _Out_ UINT *pLastPresentCount)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetDesc1 )( IDXGISwapChain4 * This, _Out_ DXGI_SWAP_CHAIN_DESC1 *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetFullscreenDesc )( IDXGISwapChain4 * This, _Out_ DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pDesc)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetHwnd )( IDXGISwapChain4 * This, _Out_ HWND *pHwnd)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetCoreWindow )( IDXGISwapChain4 * This, _In_ REFIID refiid, _COM_Outptr_ void **ppUnk)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *Present1 )( IDXGISwapChain4 * This, UINT SyncInterval, UINT PresentFlags, _In_ const DXGI_PRESENT_PARAMETERS *pPresentParameters)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *IsTemporaryMonoSupported )( IDXGISwapChain4 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetRestrictToOutput )( IDXGISwapChain4 * This, _Out_ IDXGIOutput **ppRestrictToOutput)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetBackgroundColor )( IDXGISwapChain4 * This, _In_ const DXGI_RGBA *pColor)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetBackgroundColor )( IDXGISwapChain4 * This, _Out_ DXGI_RGBA *pColor)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetRotation )( IDXGISwapChain4 * This, _In_ DXGI_MODE_ROTATION Rotation)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetRotation )( IDXGISwapChain4 * This, _Out_ DXGI_MODE_ROTATION *pRotation)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetSourceSize )( IDXGISwapChain4 * This, UINT Width, UINT Height)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetSourceSize )( IDXGISwapChain4 * This, _Out_ UINT *pWidth, _Out_ UINT *pHeight)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetMaximumFrameLatency )( IDXGISwapChain4 * This, UINT MaxLatency)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetMaximumFrameLatency )( IDXGISwapChain4 * This, _Out_ UINT *pMaxLatency)"
  },
  {
    "label": "HANDLE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HANDLE(STDMETHODCALLTYPE *GetFrameLatencyWaitableObject )( IDXGISwapChain4 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetMatrixTransform )( IDXGISwapChain4 * This, const DXGI_MATRIX_3X2_F *pMatrix)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetMatrixTransform )( IDXGISwapChain4 * This, _Out_ DXGI_MATRIX_3X2_F *pMatrix)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetCurrentBackBufferIndex )( IDXGISwapChain4 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckColorSpaceSupport )( IDXGISwapChain4 * This, _In_ DXGI_COLOR_SPACE_TYPE ColorSpace, _Out_ UINT *pColorSpaceSupport)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetColorSpace1 )( IDXGISwapChain4 * This, _In_ DXGI_COLOR_SPACE_TYPE ColorSpace)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ResizeBuffers1 )( IDXGISwapChain4 * This, _In_ UINT BufferCount, _In_ UINT Width, _In_ UINT Height, _In_ DXGI_FORMAT Format, _In_ UINT SwapChainFlags, _In_reads_(BufferCount) const UINT *pCreationNodeMask, _In_reads_(BufferCount) IUnknown *const *ppPresentQueue)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetHDRMetaData )( IDXGISwapChain4 * This, _In_ DXGI_HDR_METADATA_TYPE Type, _In_ UINT Size, _In_reads_opt_(Size) void *pMetaData)"
  },
  {
    "label": "IDXGISwapChain4_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGISwapChain4Vtbl ; interface IDXGISwapChain4 { CONST_VTBL struct IDXGISwapChain4Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGISwapChain4_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGISwapChain4_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGISwapChain4_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGISwapChain4_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGISwapChain4_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGISwapChain4_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGISwapChain4_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGISwapChain4_GetDevice(This,riid,ppDevice) \\ ( (This)->lpVtbl -> GetDevice(This,riid,ppDevice) ) #define IDXGISwapChain4_Present(This,SyncInterval,Flags) \\ ( (This)->lpVtbl -> Present(This,SyncInterval,Flags) ) #define IDXGISwapChain4_GetBuffer(This,Buffer,riid,ppSurface) \\ ( (This)->lpVtbl -> GetBuffer(This,Buffer,riid,ppSurface) ) #define IDXGISwapChain4_SetFullscreenState(This,Fullscreen,pTarget) \\ ( (This)->lpVtbl -> SetFullscreenState(This,Fullscreen,pTarget) ) #define IDXGISwapChain4_GetFullscreenState(This,pFullscreen,ppTarget) \\ ( (This)->lpVtbl -> GetFullscreenState(This,pFullscreen,ppTarget) ) #define IDXGISwapChain4_GetDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc(This,pDesc) ) #define IDXGISwapChain4_ResizeBuffers(This,BufferCount,Width,Height,NewFormat,SwapChainFlags) \\ ( (This)->lpVtbl -> ResizeBuffers(This,BufferCount,Width,Height,NewFormat,SwapChainFlags) ) #define IDXGISwapChain4_ResizeTarget(This,pNewTargetParameters) \\ ( (This)->lpVtbl -> ResizeTarget(This,pNewTargetParameters) ) #define IDXGISwapChain4_GetContainingOutput(This,ppOutput) \\ ( (This)->lpVtbl -> GetContainingOutput(This,ppOutput) ) #define IDXGISwapChain4_GetFrameStatistics(This,pStats) \\ ( (This)->lpVtbl -> GetFrameStatistics(This,pStats) ) #define IDXGISwapChain4_GetLastPresentCount(This,pLastPresentCount) \\ ( (This)->lpVtbl -> GetLastPresentCount(This,pLastPresentCount) ) #define IDXGISwapChain4_GetDesc1(This,pDesc) \\ ( (This)->lpVtbl -> GetDesc1(This,pDesc) ) #define IDXGISwapChain4_GetFullscreenDesc(This,pDesc) \\ ( (This)->lpVtbl -> GetFullscreenDesc(This,pDesc) ) #define IDXGISwapChain4_GetHwnd(This,pHwnd) \\ ( (This)->lpVtbl -> GetHwnd(This,pHwnd) ) #define IDXGISwapChain4_GetCoreWindow(This,refiid,ppUnk) \\ ( (This)->lpVtbl -> GetCoreWindow(This,refiid,ppUnk) ) #define IDXGISwapChain4_Present1(This,SyncInterval,PresentFlags,pPresentParameters) \\ ( (This)->lpVtbl -> Present1(This,SyncInterval,PresentFlags,pPresentParameters) ) #define IDXGISwapChain4_IsTemporaryMonoSupported(This) \\ ( (This)->lpVtbl -> IsTemporaryMonoSupported(This) ) #define IDXGISwapChain4_GetRestrictToOutput(This,ppRestrictToOutput) \\ ( (This)->lpVtbl -> GetRestrictToOutput(This,ppRestrictToOutput) ) #define IDXGISwapChain4_SetBackgroundColor(This,pColor) \\ ( (This)->lpVtbl -> SetBackgroundColor(This,pColor) ) #define IDXGISwapChain4_GetBackgroundColor(This,pColor) \\ ( (This)->lpVtbl -> GetBackgroundColor(This,pColor) ) #define IDXGISwapChain4_SetRotation(This,Rotation) \\ ( (This)->lpVtbl -> SetRotation(This,Rotation) ) #define IDXGISwapChain4_GetRotation(This,pRotation) \\ ( (This)->lpVtbl -> GetRotation(This,pRotation) ) #define IDXGISwapChain4_SetSourceSize(This,Width,Height) \\ ( (This)->lpVtbl -> SetSourceSize(This,Width,Height) ) #define IDXGISwapChain4_GetSourceSize(This,pWidth,pHeight) \\ ( (This)->lpVtbl -> GetSourceSize(This,pWidth,pHeight) ) #define IDXGISwapChain4_SetMaximumFrameLatency(This,MaxLatency) \\ ( (This)->lpVtbl -> SetMaximumFrameLatency(This,MaxLatency) ) #define IDXGISwapChain4_GetMaximumFrameLatency(This,pMaxLatency) \\ ( (This)->lpVtbl -> GetMaximumFrameLatency(This,pMaxLatency) ) #define IDXGISwapChain4_GetFrameLatencyWaitableObject(This) \\ ( (This)->lpVtbl -> GetFrameLatencyWaitableObject(This) ) #define IDXGISwapChain4_SetMatrixTransform(This,pMatrix) \\ ( (This)->lpVtbl -> SetMatrixTransform(This,pMatrix) ) #define IDXGISwapChain4_GetMatrixTransform(This,pMatrix) \\ ( (This)->lpVtbl -> GetMatrixTransform(This,pMatrix) ) #define IDXGISwapChain4_GetCurrentBackBufferIndex(This) \\ ( (This)->lpVtbl -> GetCurrentBackBufferIndex(This) ) #define IDXGISwapChain4_CheckColorSpaceSupport(This,ColorSpace,pColorSpaceSupport) \\ ( (This)->lpVtbl -> CheckColorSpaceSupport(This,ColorSpace,pColorSpaceSupport) ) #define IDXGISwapChain4_SetColorSpace1(This,ColorSpace) \\ ( (This)->lpVtbl -> SetColorSpace1(This,ColorSpace) ) #define IDXGISwapChain4_ResizeBuffers1(This,BufferCount,Width,Height,Format,SwapChainFlags,pCreationNodeMask,ppPresentQueue) \\ ( (This)->lpVtbl -> ResizeBuffers1(This,BufferCount,Width,Height,Format,SwapChainFlags,pCreationNodeMask,ppPresentQueue) ) #define IDXGISwapChain4_SetHDRMetaData(This,Type,Size,pMetaData) \\ ( (This)->lpVtbl -> SetHDRMetaData(This,Type,Size,pMetaData))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (DXGI_OFFER_RESOURCE_FLAG_ALLOW_DECOMMIT = 0 x1 } DXGI_OFFER_RESOURCE_FLAGS ; typedef enum _DXGI_RECLAIM_RESOURCE_RESULTS { DXGI_RECLAIM_RESOURCE_RESULT_OK = 0,DXGI_RECLAIM_RESOURCE_RESULT_DISCARDED = 1,DXGI_RECLAIM_RESOURCE_RESULT_NOT_COMMITTED = 2 } DXGI_RECLAIM_RESOURCE_RESULTS ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0002_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0002_v0_0_s_ifspec ; # ifndef __IDXGIDevice4_INTERFACE_DEFINED__ # define __IDXGIDevice4_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIDevice4 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"95B4F95F-D8DA-4CA4-9EE6-3B76D5968A10\")"
  },
  {
    "label": "OfferResources1()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "OfferResources1(_In_ UINT NumResources, _In_reads_(NumResources) IDXGIResource *const *ppResources, _In_ DXGI_OFFER_RESOURCE_PRIORITY Priority, _In_ UINT Flags)"
  },
  {
    "label": "ReclaimResources1()",
    "kind": "Method",
    "detail": "Function (HRESULT STDMETHODCALLTYPE)",
    "insertText": "ReclaimResources1(_In_ UINT NumResources, _In_reads_(NumResources) IDXGIResource *const *ppResources, _Out_writes_all_(NumResources) DXGI_RECLAIM_RESOURCE_RESULTS *pResults)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIDevice4Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIDevice4 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIDevice4 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIDevice4 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIDevice4 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIDevice4 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIDevice4 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIDevice4 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetAdapter )( IDXGIDevice4 * This, _COM_Outptr_ IDXGIAdapter **pAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSurface )( IDXGIDevice4 * This, _In_ const DXGI_SURFACE_DESC *pDesc, UINT NumSurfaces, DXGI_USAGE Usage, _In_opt_ const DXGI_SHARED_RESOURCE *pSharedResource, _COM_Outptr_ IDXGISurface **ppSurface)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryResourceResidency )( IDXGIDevice4 * This, _In_reads_(NumResources) IUnknown *const *ppResources, _Out_writes_(NumResources) DXGI_RESIDENCY *pResidencyStatus, UINT NumResources)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetGPUThreadPriority )( IDXGIDevice4 * This, INT Priority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetGPUThreadPriority )( IDXGIDevice4 * This, _Out_ INT *pPriority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetMaximumFrameLatency )( IDXGIDevice4 * This, UINT MaxLatency)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetMaximumFrameLatency )( IDXGIDevice4 * This, _Out_ UINT *pMaxLatency)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *OfferResources )( IDXGIDevice4 * This, _In_ UINT NumResources, _In_reads_(NumResources) IDXGIResource *const *ppResources, _In_ DXGI_OFFER_RESOURCE_PRIORITY Priority)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ReclaimResources )( IDXGIDevice4 * This, _In_ UINT NumResources, _In_reads_(NumResources) IDXGIResource *const *ppResources, _Out_writes_all_opt_(NumResources) BOOL *pDiscarded)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnqueueSetEvent )( IDXGIDevice4 * This, _In_ HANDLE hEvent)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *Trim )( IDXGIDevice4 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *OfferResources1 )( IDXGIDevice4 * This, _In_ UINT NumResources, _In_reads_(NumResources) IDXGIResource *const *ppResources, _In_ DXGI_OFFER_RESOURCE_PRIORITY Priority, _In_ UINT Flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *ReclaimResources1 )( IDXGIDevice4 * This, _In_ UINT NumResources, _In_reads_(NumResources) IDXGIResource *const *ppResources, _Out_writes_all_(NumResources) DXGI_RECLAIM_RESOURCE_RESULTS *pResults)"
  },
  {
    "label": "IDXGIDevice4_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIDevice4Vtbl ; interface IDXGIDevice4 { CONST_VTBL struct IDXGIDevice4Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIDevice4_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIDevice4_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIDevice4_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIDevice4_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIDevice4_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIDevice4_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIDevice4_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIDevice4_GetAdapter(This,pAdapter) \\ ( (This)->lpVtbl -> GetAdapter(This,pAdapter) ) #define IDXGIDevice4_CreateSurface(This,pDesc,NumSurfaces,Usage,pSharedResource,ppSurface) \\ ( (This)->lpVtbl -> CreateSurface(This,pDesc,NumSurfaces,Usage,pSharedResource,ppSurface) ) #define IDXGIDevice4_QueryResourceResidency(This,ppResources,pResidencyStatus,NumResources) \\ ( (This)->lpVtbl -> QueryResourceResidency(This,ppResources,pResidencyStatus,NumResources) ) #define IDXGIDevice4_SetGPUThreadPriority(This,Priority) \\ ( (This)->lpVtbl -> SetGPUThreadPriority(This,Priority) ) #define IDXGIDevice4_GetGPUThreadPriority(This,pPriority) \\ ( (This)->lpVtbl -> GetGPUThreadPriority(This,pPriority) ) #define IDXGIDevice4_SetMaximumFrameLatency(This,MaxLatency) \\ ( (This)->lpVtbl -> SetMaximumFrameLatency(This,MaxLatency) ) #define IDXGIDevice4_GetMaximumFrameLatency(This,pMaxLatency) \\ ( (This)->lpVtbl -> GetMaximumFrameLatency(This,pMaxLatency) ) #define IDXGIDevice4_OfferResources(This,NumResources,ppResources,Priority) \\ ( (This)->lpVtbl -> OfferResources(This,NumResources,ppResources,Priority) ) #define IDXGIDevice4_ReclaimResources(This,NumResources,ppResources,pDiscarded) \\ ( (This)->lpVtbl -> ReclaimResources(This,NumResources,ppResources,pDiscarded) ) #define IDXGIDevice4_EnqueueSetEvent(This,hEvent) \\ ( (This)->lpVtbl -> EnqueueSetEvent(This,hEvent) ) #define IDXGIDevice4_Trim(This) \\ ( (This)->lpVtbl -> Trim(This) ) #define IDXGIDevice4_OfferResources1(This,NumResources,ppResources,Priority,Flags) \\ ( (This)->lpVtbl -> OfferResources1(This,NumResources,ppResources,Priority,Flags) ) #define IDXGIDevice4_ReclaimResources1(This,NumResources,ppResources,pResults) \\ ( (This)->lpVtbl -> ReclaimResources1(This,NumResources,ppResources,pResults))"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (DXGI_FEATURE_PRESENT_ALLOW_TEARING = 0 } DXGI_FEATURE ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0003_v0_0_c_ifspec ; RPC_IF_HANDLE __MIDL_itf_dxgi1_5_0000_0003_v0_0_s_ifspec ; # ifndef __IDXGIFactory5_INTERFACE_DEFINED__ # define __IDXGIFactory5_INTERFACE_DEFINED__ EXTERN_C const IID IID_IDXGIFactory5 ; # if)",
    "insertText": "defined(__cplusplus) && !defined(CINTERFACE) MIDL_INTERFACE(\"7632e1f5-ee65-4dca-87fd-84cd75f8838d\")"
  },
  {
    "label": "CheckFeatureSupport()",
    "kind": "Method",
    "detail": "Function (public : HRESULT STDMETHODCALLTYPE)",
    "insertText": "CheckFeatureSupport(DXGI_FEATURE Feature, _Inout_updates_bytes_(FeatureSupportDataSize) void *pFeatureSupportData, UINT FeatureSupportDataSize)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (} ; # else typedef struct IDXGIFactory5Vtbl { BEGIN_INTERFACE)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *QueryInterface )( IDXGIFactory5 * This, REFIID riid, _COM_Outptr_ void **ppvObject)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *AddRef )( IDXGIFactory5 * This)"
  },
  {
    "label": "ULONG()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ULONG(STDMETHODCALLTYPE *Release )( IDXGIFactory5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateData )( IDXGIFactory5 * This, _In_ REFGUID Name, UINT DataSize, _In_reads_bytes_(DataSize) const void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *SetPrivateDataInterface )( IDXGIFactory5 * This, _In_ REFGUID Name, _In_opt_ const IUnknown *pUnknown)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetPrivateData )( IDXGIFactory5 * This, _In_ REFGUID Name, _Inout_ UINT *pDataSize, _Out_writes_bytes_(*pDataSize) void *pData)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetParent )( IDXGIFactory5 * This, _In_ REFIID riid, _COM_Outptr_ void **ppParent)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumAdapters )( IDXGIFactory5 * This, UINT Adapter, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *MakeWindowAssociation )( IDXGIFactory5 * This, HWND WindowHandle, UINT Flags)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetWindowAssociation )( IDXGIFactory5 * This, _Out_ HWND *pWindowHandle)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSwapChain )( IDXGIFactory5 * This, _In_ IUnknown *pDevice, _In_ DXGI_SWAP_CHAIN_DESC *pDesc, _COM_Outptr_ IDXGISwapChain **ppSwapChain)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSoftwareAdapter )( IDXGIFactory5 * This, HMODULE Module, _COM_Outptr_ IDXGIAdapter **ppAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumAdapters1 )( IDXGIFactory5 * This, UINT Adapter, _COM_Outptr_ IDXGIAdapter1 **ppAdapter)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *IsCurrent )( IDXGIFactory5 * This)"
  },
  {
    "label": "BOOL()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BOOL(STDMETHODCALLTYPE *IsWindowedStereoEnabled )( IDXGIFactory5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSwapChainForHwnd )( IDXGIFactory5 * This, _In_ IUnknown *pDevice, _In_ HWND hWnd, _In_ const DXGI_SWAP_CHAIN_DESC1 *pDesc, _In_opt_ const DXGI_SWAP_CHAIN_FULLSCREEN_DESC *pFullscreenDesc, _In_opt_ IDXGIOutput *pRestrictToOutput, _COM_Outptr_ IDXGISwapChain1 **ppSwapChain)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSwapChainForCoreWindow )( IDXGIFactory5 * This, _In_ IUnknown *pDevice, _In_ IUnknown *pWindow, _In_ const DXGI_SWAP_CHAIN_DESC1 *pDesc, _In_opt_ IDXGIOutput *pRestrictToOutput, _COM_Outptr_ IDXGISwapChain1 **ppSwapChain)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *GetSharedResourceAdapterLuid )( IDXGIFactory5 * This, _In_ HANDLE hResource, _Out_ LUID *pLuid)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *RegisterStereoStatusWindow )( IDXGIFactory5 * This, _In_ HWND WindowHandle, _In_ UINT wMsg, _Out_ DWORD *pdwCookie)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *RegisterStereoStatusEvent )( IDXGIFactory5 * This, _In_ HANDLE hEvent, _Out_ DWORD *pdwCookie)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *UnregisterStereoStatus )( IDXGIFactory5 * This, _In_ DWORD dwCookie)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *RegisterOcclusionStatusWindow )( IDXGIFactory5 * This, _In_ HWND WindowHandle, _In_ UINT wMsg, _Out_ DWORD *pdwCookie)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *RegisterOcclusionStatusEvent )( IDXGIFactory5 * This, _In_ HANDLE hEvent, _Out_ DWORD *pdwCookie)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "void(STDMETHODCALLTYPE *UnregisterOcclusionStatus )( IDXGIFactory5 * This, _In_ DWORD dwCookie)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CreateSwapChainForComposition )( IDXGIFactory5 * This, _In_ IUnknown *pDevice, _In_ const DXGI_SWAP_CHAIN_DESC1 *pDesc, _In_opt_ IDXGIOutput *pRestrictToOutput, _COM_Outptr_ IDXGISwapChain1 **ppSwapChain)"
  },
  {
    "label": "UINT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UINT(STDMETHODCALLTYPE *GetCreationFlags )( IDXGIFactory5 * This)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumAdapterByLuid )( IDXGIFactory5 * This, _In_ LUID AdapterLuid, _In_ REFIID riid, _COM_Outptr_ void **ppvAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *EnumWarpAdapter )( IDXGIFactory5 * This, _In_ REFIID riid, _COM_Outptr_ void **ppvAdapter)"
  },
  {
    "label": "HRESULT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HRESULT(STDMETHODCALLTYPE *CheckFeatureSupport )( IDXGIFactory5 * This, DXGI_FEATURE Feature, _Inout_updates_bytes_(FeatureSupportDataSize) void *pFeatureSupportData, UINT FeatureSupportDataSize)"
  },
  {
    "label": "IDXGIFactory5_QueryInterface()",
    "kind": "Method",
    "detail": "Function (END_INTERFACE } IDXGIFactory5Vtbl ; interface IDXGIFactory5 { CONST_VTBL struct IDXGIFactory5Vtbl* lpVtbl ; } ; # ifdef COBJMACROS # define)",
    "insertText": "IDXGIFactory5_QueryInterface(This,riid,ppvObject) \\ ( (This)->lpVtbl -> QueryInterface(This,riid,ppvObject) ) #define IDXGIFactory5_AddRef(This) \\ ( (This)->lpVtbl -> AddRef(This) ) #define IDXGIFactory5_Release(This) \\ ( (This)->lpVtbl -> Release(This) ) #define IDXGIFactory5_SetPrivateData(This,Name,DataSize,pData) \\ ( (This)->lpVtbl -> SetPrivateData(This,Name,DataSize,pData) ) #define IDXGIFactory5_SetPrivateDataInterface(This,Name,pUnknown) \\ ( (This)->lpVtbl -> SetPrivateDataInterface(This,Name,pUnknown) ) #define IDXGIFactory5_GetPrivateData(This,Name,pDataSize,pData) \\ ( (This)->lpVtbl -> GetPrivateData(This,Name,pDataSize,pData) ) #define IDXGIFactory5_GetParent(This,riid,ppParent) \\ ( (This)->lpVtbl -> GetParent(This,riid,ppParent) ) #define IDXGIFactory5_EnumAdapters(This,Adapter,ppAdapter) \\ ( (This)->lpVtbl -> EnumAdapters(This,Adapter,ppAdapter) ) #define IDXGIFactory5_MakeWindowAssociation(This,WindowHandle,Flags) \\ ( (This)->lpVtbl -> MakeWindowAssociation(This,WindowHandle,Flags) ) #define IDXGIFactory5_GetWindowAssociation(This,pWindowHandle) \\ ( (This)->lpVtbl -> GetWindowAssociation(This,pWindowHandle) ) #define IDXGIFactory5_CreateSwapChain(This,pDevice,pDesc,ppSwapChain) \\ ( (This)->lpVtbl -> CreateSwapChain(This,pDevice,pDesc,ppSwapChain) ) #define IDXGIFactory5_CreateSoftwareAdapter(This,Module,ppAdapter) \\ ( (This)->lpVtbl -> CreateSoftwareAdapter(This,Module,ppAdapter) ) #define IDXGIFactory5_EnumAdapters1(This,Adapter,ppAdapter) \\ ( (This)->lpVtbl -> EnumAdapters1(This,Adapter,ppAdapter) ) #define IDXGIFactory5_IsCurrent(This) \\ ( (This)->lpVtbl -> IsCurrent(This) ) #define IDXGIFactory5_IsWindowedStereoEnabled(This) \\ ( (This)->lpVtbl -> IsWindowedStereoEnabled(This) ) #define IDXGIFactory5_CreateSwapChainForHwnd(This,pDevice,hWnd,pDesc,pFullscreenDesc,pRestrictToOutput,ppSwapChain) \\ ( (This)->lpVtbl -> CreateSwapChainForHwnd(This,pDevice,hWnd,pDesc,pFullscreenDesc,pRestrictToOutput,ppSwapChain) ) #define IDXGIFactory5_CreateSwapChainForCoreWindow(This,pDevice,pWindow,pDesc,pRestrictToOutput,ppSwapChain) \\ ( (This)->lpVtbl -> CreateSwapChainForCoreWindow(This,pDevice,pWindow,pDesc,pRestrictToOutput,ppSwapChain) ) #define IDXGIFactory5_GetSharedResourceAdapterLuid(This,hResource,pLuid) \\ ( (This)->lpVtbl -> GetSharedResourceAdapterLuid(This,hResource,pLuid) ) #define IDXGIFactory5_RegisterStereoStatusWindow(This,WindowHandle,wMsg,pdwCookie) \\ ( (This)->lpVtbl -> RegisterStereoStatusWindow(This,WindowHandle,wMsg,pdwCookie) ) #define IDXGIFactory5_RegisterStereoStatusEvent(This,hEvent,pdwCookie) \\ ( (This)->lpVtbl -> RegisterStereoStatusEvent(This,hEvent,pdwCookie) ) #define IDXGIFactory5_UnregisterStereoStatus(This,dwCookie) \\ ( (This)->lpVtbl -> UnregisterStereoStatus(This,dwCookie) ) #define IDXGIFactory5_RegisterOcclusionStatusWindow(This,WindowHandle,wMsg,pdwCookie) \\ ( (This)->lpVtbl -> RegisterOcclusionStatusWindow(This,WindowHandle,wMsg,pdwCookie) ) #define IDXGIFactory5_RegisterOcclusionStatusEvent(This,hEvent,pdwCookie) \\ ( (This)->lpVtbl -> RegisterOcclusionStatusEvent(This,hEvent,pdwCookie) ) #define IDXGIFactory5_UnregisterOcclusionStatus(This,dwCookie) \\ ( (This)->lpVtbl -> UnregisterOcclusionStatus(This,dwCookie) ) #define IDXGIFactory5_CreateSwapChainForComposition(This,pDevice,pDesc,pRestrictToOutput,ppSwapChain) \\ ( (This)->lpVtbl -> CreateSwapChainForComposition(This,pDevice,pDesc,pRestrictToOutput,ppSwapChain) ) #define IDXGIFactory5_GetCreationFlags(This) \\ ( (This)->lpVtbl -> GetCreationFlags(This) ) #define IDXGIFactory5_EnumAdapterByLuid(This,AdapterLuid,riid,ppvAdapter) \\ ( (This)->lpVtbl -> EnumAdapterByLuid(This,AdapterLuid,riid,ppvAdapter) ) #define IDXGIFactory5_EnumWarpAdapter(This,riid,ppvAdapter) \\ ( (This)->lpVtbl -> EnumWarpAdapter(This,riid,ppvAdapter) ) #define IDXGIFactory5_CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize) \\ ( (This)->lpVtbl -> CheckFeatureSupport(This,Feature,pFeatureSupportData,FeatureSupportDataSize) ) #endif #endif #endif #endif #pragma endregion DEFINE_GUID(IID_IDXGIOutput5,0x80A07424,0xAB52,0x42EB,0x83,0x3C,0x0C,0x42,0xFD,0x28,0x2D,0x98)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGISwapChain4,0x3D585D5A,0xBD4A,0x489E,0xB1,0xF4,0x3D,0xBC,0xB6,0x45,0x2F,0xFB)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIDevice4,0x95B4F95F,0xD8DA,0x4CA4,0x9E,0xE6,0x3B,0x76,0xD5,0x96,0x8A,0x10)"
  },
  {
    "label": "DEFINE_GUID()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DEFINE_GUID(IID_IDXGIFactory5,0x7632e1f5,0xee65,0x4dca,0x87,0xfd,0x84,0xcd,0x75,0xf8,0x83,0x8d)"
  }
]