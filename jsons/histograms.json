[
  {
    "label": "Histograms",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Histograms"
  },
  {
    "label": "Histograms()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_PROCESSING_NS_HISTOGRAMS_H_ # define MODULES_AUDIO_PROCESSING_NS_HISTOGRAMS_H_ # include<array> # include \" api / array_view . h \" # include \" modules / audio_processing / ns / ns_common . h \" # include \" modules / audio_processing / ns / signal_model . h \" namespace webrtc { int kHistogramSize = 1 0 0 0 ; class Histograms { public :)",
    "insertText": "Histograms()"
  },
  {
    "label": "Histograms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Histograms(const Histograms&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Histograms&)",
    "insertText": "operator(const Histograms&)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(const SignalModel& features_)"
  },
  {
    "label": "get_lrt()",
    "kind": "Method",
    "detail": "Function (rtc::ArrayView<const int,kHistogramSize>)",
    "insertText": "get_lrt()"
  }
]