[
  {
    "label": "GetBits()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include<stdlib . h> # include \" Misc / ByteSwap . h \" namespace UE::Net::BitStreamUtils { uint32)",
    "insertText": "GetBits(const uint32* Src, uint32 SrcBit, uint32 BitCount)"
  },
  {
    "label": "ShiftAmount1()",
    "kind": "Method",
    "detail": "Function (const uint32 ShiftAmount0 = SrcBit& 3 1 U ; const uint32)",
    "insertText": "ShiftAmount1(32U - SrcBit)"
  },
  {
    "label": "WordOffset1()",
    "kind": "Method",
    "detail": "Function (const uint32 WordOffset0 = SrcBit>> 5 U ; const uint32)",
    "insertText": "WordOffset1(SrcBit + BitCount - 1)"
  },
  {
    "label": "INTEL_ORDER32()",
    "kind": "Method",
    "detail": "Function (const uint32 Word0 =)",
    "insertText": "INTEL_ORDER32(Src[WordOffset0])"
  },
  {
    "label": "INTEL_ORDER32()",
    "kind": "Method",
    "detail": "Function (const uint32 Word1 =)",
    "insertText": "INTEL_ORDER32(Src[WordOffset1])"
  },
  {
    "label": "WordMask()",
    "kind": "Method",
    "detail": "Function (const uint32 Word1Mask = WordOffset0 - WordOffset1 ; const uint32)",
    "insertText": "WordMask(1U << BitCount)"
  },
  {
    "label": "Word()",
    "kind": "Method",
    "detail": "Function (const uint32)",
    "insertText": "Word((Word1 & Word1Mask) | Word0)"
  }
]