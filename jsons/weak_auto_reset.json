[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "U",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U"
  },
  {
    "label": "WeakAutoReset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "WeakAutoReset"
  },
  {
    "label": "WeakAutoReset()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_MEMORY_WEAK_AUTO_RESET_H_ # define BASE_MEMORY_WEAK_AUTO_RESET_H_ # include \" base / memory / weak_ptr . h \" namespace base { template<class T,class U> class WeakAutoReset { public :)",
    "insertText": "WeakAutoReset()"
  },
  {
    "label": "WeakAutoReset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WeakAutoReset(base::WeakPtr<T> ptr, U T::*field, U new_value) : ptr_(ptr), field_(field), old_value_(std::exchange(ptr.get()->*field, std::move(new_value)))"
  },
  {
    "label": "WeakAutoReset()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "WeakAutoReset(WeakAutoReset&& other) : ptr_(std::move(other.ptr_)), field_(std::exchange(other.field_, nullptr)), old_value_(std::move(other.old_value_))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} WeakAutoReset&)",
    "insertText": "operator(WeakAutoReset&& other)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (ptr_ =)",
    "insertText": "move(other.ptr_)"
  },
  {
    "label": "exchange()",
    "kind": "Method",
    "detail": "Function (field_ =)",
    "insertText": "exchange(other.field_, nullptr)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (old_value_ =)",
    "insertText": "move(other.old_value_)"
  },
  {
    "label": "U()",
    "kind": "Method",
    "detail": "Function (} base::WeakPtr<T> ptr_ ; U T::* field_ = nullptr ; U old_value_ =)",
    "insertText": "U()"
  }
]