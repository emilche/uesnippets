[
  {
    "label": "SDL_WindowShapeMode",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SDL_WindowShapeMode"
  },
  {
    "label": "SDL_CreateShapedWindow()",
    "kind": "Method",
    "detail": "Function (# ifndef SDL_shape_h_ # define SDL_shape_h_ # include \" SDL_stdinc . h \" # include \" SDL_pixels . h \" # include \" SDL_rect . h \" # include \" SDL_surface . h \" # include \" SDL_video . h \" # include \" begin_code . h \" # ifdef __cplusplus \" C \" { # endif # define SDL_NONSHAPEABLE_WINDOW - 1 # define SDL_INVALID_SHAPE_ARGUMENT - 2 # define SDL_WINDOW_LACKS_SHAPE - 3 DECLSPEC SDL_Window* SDLCALL)",
    "insertText": "SDL_CreateShapedWindow(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags)"
  },
  {
    "label": "SDL_IsShapedWindow()",
    "kind": "Method",
    "detail": "Function (DECLSPEC SDL_bool SDLCALL)",
    "insertText": "SDL_IsShapedWindow(const SDL_Window *window)"
  },
  {
    "label": "SDL_SHAPEMODEALPHA()",
    "kind": "Method",
    "detail": "Function (typedef enum { ShapeModeDefault,ShapeModeBinarizeAlpha,ShapeModeReverseBinarizeAlpha,ShapeModeColorKey } WindowShapeMode ; # define)",
    "insertText": "SDL_SHAPEMODEALPHA(mode) (mode == ShapeModeDefault || mode == ShapeModeBinarizeAlpha || mode == ShapeModeReverseBinarizeAlpha)"
  },
  {
    "label": "SDL_SetWindowShape()",
    "kind": "Method",
    "detail": "Function (Uint8 binarizationCutoff ; SDL_Color colorKey ; } SDL_WindowShapeParams ; typedef struct SDL_WindowShapeMode { WindowShapeMode mode ; SDL_WindowShapeParams parameters ; } SDL_WindowShapeMode ; DECLSPEC int SDLCALL)",
    "insertText": "SDL_SetWindowShape(SDL_Window *window,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode)"
  },
  {
    "label": "SDL_GetShapedWindowMode()",
    "kind": "Method",
    "detail": "Function (DECLSPEC int SDLCALL)",
    "insertText": "SDL_GetShapedWindowMode(SDL_Window *window,SDL_WindowShapeMode *shape_mode)"
  }
]