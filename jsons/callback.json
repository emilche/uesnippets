[
  {
    "label": "OnceCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "OnceCallback"
  },
  {
    "label": "RepeatingCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RepeatingCallback"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_FUNCTIONAL_CALLBACK_H_ # define BASE_FUNCTIONAL_CALLBACK_H_ # include<stddef . h> # include<utility> # include \" base / check . h \" # include \" base / functional / bind . h \" # include \" base / functional / callback_forward . h \" # include \" base / functional / callback_internal . h \" # include \" base / functional / callback_tags . h \" # include \" base / functional / function_ref . h \" # include \" base / notreached . h \" # include \" base / types / always_false . h \" namespace base { namespace internal { template<bool is_once,R,. . . UnboundArgs,. . . BoundArgs> std::conditional_t<is_once,OnceCallback<)",
    "insertText": "R(UnboundArgs...)>, RepeatingCallback<R(UnboundArgs...)>> ToDoNothingCallback(DoNothingCallbackTag::WithBoundArguments<BoundArgs...> t)"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (} } template<R,. . . Args> class OnceCallback<)",
    "insertText": "R(Args...)"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (using PolymorphicInvoke =)",
    "insertText": "R(*)(internal::BindStateBase*, internal::PassingType<Args>...)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback()"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(std::nullptr_t)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(internal::NullCallbackTag) : OnceCallback()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} OnceCallback&)",
    "insertText": "operator(internal::NullCallbackTag)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} OnceCallback&)",
    "insertText": "operator(internal::NullCallbackTag::WithSignature<RunType>)"
  },
  {
    "label": "NullCallbackTag()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "NullCallbackTag()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} OnceCallback&)",
    "insertText": "operator(internal::DoNothingCallbackTag)"
  },
  {
    "label": "BindOnce()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "BindOnce([](Args... args) {})"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} OnceCallback&)",
    "insertText": "operator(internal::DoNothingCallbackTag::WithSignature<RunType>)"
  },
  {
    "label": "DoNothingCallbackTag()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "DoNothingCallbackTag()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} template<. . . BoundArgs> OnceCallback&)",
    "insertText": "operator(internal::DoNothingCallbackTag::WithBoundArguments<BoundArgs...> tag)"
  },
  {
    "label": "Args()",
    "kind": "Method",
    "detail": "Function (* this = internal::ToDoNothingCallback<true,R,)",
    "insertText": "Args(std::move(tag))"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "OnceCallback(const OnceCallback&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OnceCallback&)",
    "insertText": "operator(const OnceCallback&)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(OnceCallback&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (OnceCallback&)",
    "insertText": "operator(OnceCallback&&)"
  },
  {
    "label": "OnceCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnceCallback(RepeatingCallback<RunType> other) : internal::CallbackBase(std::move(other))"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} OnceCallback&)",
    "insertText": "operator(RepeatingCallback<RunType> other)"
  },
  {
    "label": "CallbackBase()",
    "kind": "Method",
    "detail": "Function (static_cast<)",
    "insertText": "CallbackBase(*this) = std::move(other)"
  },
  {
    "label": "NOTREACHED()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NOTREACHED()"
  },
  {
    "label": "Run()",
    "kind": "Method",
    "detail": "Function (} R)",
    "insertText": "Run(Args... args)"
  },
  {
    "label": "move()",
    "kind": "Method",
    "detail": "Function (OnceCallback cb =)",
    "insertText": "move(*this)"
  },
  {
    "label": "PolymorphicInvoke()",
    "kind": "Method",
    "detail": "Function (PolymorphicInvoke f = reinterpret_cast<)",
    "insertText": "PolymorphicInvoke(cb.polymorphic_invoke())"
  },
  {
    "label": "ThenR()",
    "kind": "Method",
    "detail": "Function (} template<ThenR,. . . ThenArgs> OnceCallback<)",
    "insertText": "ThenR(Args...)> Then(OnceCallback<ThenR(ThenArgs...)> then)"
  },
  {
    "label": "ThenR()",
    "kind": "Method",
    "detail": "Function (} template<ThenR,. . . ThenArgs> OnceCallback<)",
    "insertText": "ThenR(Args...)> Then( RepeatingCallback<ThenR(ThenArgs...)> then)"
  },
  {
    "label": "Signature()",
    "kind": "Method",
    "detail": "Function (} template<Signature> operator FunctionRef<)",
    "insertText": "Signature()"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback()"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback(std::nullptr_t)"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback(internal::NullCallbackTag) : RepeatingCallback()"
  },
  {
    "label": "BindRepeating()",
    "kind": "Method",
    "detail": "Function (* this =)",
    "insertText": "BindRepeating([](Args... args) {})"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "RepeatingCallback(const RepeatingCallback&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RepeatingCallback&)",
    "insertText": "operator(const RepeatingCallback&)"
  },
  {
    "label": "RepeatingCallback()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RepeatingCallback(RepeatingCallback&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (RepeatingCallback&)",
    "insertText": "operator(RepeatingCallback&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const RepeatingCallback& other)"
  },
  {
    "label": "PolymorphicInvoke()",
    "kind": "Method",
    "detail": "Function (auto bind_state_protector = this -> bind_state_ ; PolymorphicInvoke f = reinterpret_cast<)",
    "insertText": "PolymorphicInvoke(this->polymorphic_invoke())"
  }
]