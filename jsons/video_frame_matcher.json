[
  {
    "label": "VideoFrameMatcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "VideoFrameMatcher"
  },
  {
    "label": "DecodedFrameBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DecodedFrameBase"
  },
  {
    "label": "CapturedFrame",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "CapturedFrame"
  },
  {
    "label": "VideoLayer",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VideoLayer"
  },
  {
    "label": "CapturedFrameTap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CapturedFrameTap"
  },
  {
    "label": "ForwardingCapturedFrameTap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForwardingCapturedFrameTap"
  },
  {
    "label": "DecodedFrameTap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DecodedFrameTap"
  },
  {
    "label": "RegisterLayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterLayer(int layer_id)"
  },
  {
    "label": "OnCapturedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCapturedFrame(const VideoFrame& frame, Timestamp at_time)"
  },
  {
    "label": "OnDecodedFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnDecodedFrame(const VideoFrame& frame,\n                      int layer_id,\n                      Timestamp render_time,\n                      Timestamp at_time)"
  },
  {
    "label": "HandleMatch()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleMatch(CapturedFrame captured, int layer_id)"
  },
  {
    "label": "Finalize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Finalize()"
  },
  {
    "label": "CapturedFrameTap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "CapturedFrameTap(Clock* clock, VideoFrameMatcher* matcher)"
  },
  {
    "label": "ForwardingCapturedFrameTap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "ForwardingCapturedFrameTap(Clock* clock,\n                             VideoFrameMatcher* matcher,\n                             rtc::VideoSourceInterface<VideoFrame>* source)"
  },
  {
    "label": "DecodedFrameTap()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DecodedFrameTap(Clock* clock, VideoFrameMatcher* matcher, int layer_id)"
  }
]