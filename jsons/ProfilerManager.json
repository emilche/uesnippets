[
  {
    "label": "SProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProfilerWindow"
  },
  {
    "label": "FProfilerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerSettings"
  },
  {
    "label": "FTrackedStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackedStat"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FProfilerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerManager"
  },
  {
    "label": "FProfilerActionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerActionManager"
  },
  {
    "label": "FProfilerSettings()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # if STATS # include \" Misc / Guid . h \" # include \" Framework / Commands / UICommandList . h \" # include \" Misc / ConfigCacheIni . h \" # include \" Misc / ConfigContext . h \" # include \" IProfilerClient . h \" # include \" ISessionManager . h \" # include \" ProfilerDataSource . h \" # include \" ProfilerSession . h \" # include \" ProfilerCommands . h \" # include \" Containers / Ticker . h \" class SProfilerWindow ; class FProfilerSettings { public :)",
    "insertText": "FProfilerSettings(bool bInIsDefault = false) : bShowCoalescedViewModesInEventGraph(true) , bIsEditing(false) , bIsDefault(bInIsDefault)"
  },
  {
    "label": "LoadFromConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadFromConfig()"
  },
  {
    "label": "FProfilerSettings()",
    "kind": "Method",
    "detail": "Function (} } ~)",
    "insertText": "FProfilerSettings()"
  },
  {
    "label": "SaveToConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SaveToConfig()"
  },
  {
    "label": "ReadIntoGConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReadIntoGConfig().Load(TEXT(\"ProfilerSettings\"), ProfilerSettingsIni)"
  },
  {
    "label": "GetBool()",
    "kind": "Method",
    "detail": "Function (GConfig ->)",
    "insertText": "GetBool(TEXT(\"Profiler.ProfilerOptions\"), TEXT(\"bShowCoalescedViewModesInEventGraph\"), bShowCoalescedViewModesInEventGraph, ProfilerSettingsIni)"
  },
  {
    "label": "SetBool()",
    "kind": "Method",
    "detail": "Function (GConfig ->)",
    "insertText": "SetBool(TEXT(\"Profiler.ProfilerOptions\"), TEXT(\"bShowCoalescedViewModesInEventGraph\"), bShowCoalescedViewModesInEventGraph, ProfilerSettingsIni)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (GConfig ->)",
    "insertText": "Flush(false, ProfilerSettingsIni)"
  },
  {
    "label": "EnterEditMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "EnterEditMode()"
  },
  {
    "label": "ExitEditMode()",
    "kind": "Method",
    "detail": "Function (bIsEditing = true ; } void)",
    "insertText": "ExitEditMode()"
  },
  {
    "label": "IsEditing()",
    "kind": "Method",
    "detail": "Function (bIsEditing = false ; } const bool)",
    "insertText": "IsEditing()"
  },
  {
    "label": "FTrackedStat()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "FTrackedStat()"
  },
  {
    "label": "FProfilerManager()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<const FGraphDataSource> GraphDataSource ; const FLinearColor GraphColor ; const uint32 StatID ; } ; enum class EProfilerViewMode { LineIndexBased,ThreadViewTimeBased,InvalidOrMax,} ; class FProfilerManager : public TSharedFromThis<FProfilerManager> { class FProfilerActionManager ; public :)",
    "insertText": "FProfilerManager(const TSharedRef<ISessionManager>& InSessionManager)"
  },
  {
    "label": "FProfilerManager()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FProfilerManager()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FProfilerManager>)",
    "insertText": "Initialize(const TSharedRef<ISessionManager>& SessionManager)"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (FProfilerManager::Instance .)",
    "insertText": "Reset()"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (} FProfilerManager::Instance =)",
    "insertText": "MakeShareable(new FProfilerManager(SessionManager))"
  },
  {
    "label": "PostConstructor()",
    "kind": "Method",
    "detail": "Function (FProfilerManager::Instance ->)",
    "insertText": "PostConstructor()"
  },
  {
    "label": "Shutdown()",
    "kind": "Method",
    "detail": "Function (ProfilerWindow = InProfilerWindow ; } void)",
    "insertText": "Shutdown()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<FProfilerManager>)",
    "insertText": "Get()"
  },
  {
    "label": "GetActionManager()",
    "kind": "Method",
    "detail": "Function (FProfilerActionManager&)",
    "insertText": "GetActionManager()"
  },
  {
    "label": "GetSettings()",
    "kind": "Method",
    "detail": "Function (FProfilerSettings&)",
    "insertText": "GetSettings()"
  },
  {
    "label": "GetCommandList()",
    "kind": "Method",
    "detail": "Function (const TSharedRef<FUICommandList>)",
    "insertText": "GetCommandList()"
  },
  {
    "label": "GetCommands()",
    "kind": "Method",
    "detail": "Function (const FProfilerCommands&)",
    "insertText": "GetCommands()"
  },
  {
    "label": "GetProfilerSession()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FProfilerSession>)",
    "insertText": "GetProfilerSession()"
  },
  {
    "label": "TrackStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrackStat(const uint32 StatID)"
  },
  {
    "label": "UntrackStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UntrackStat(const uint32 StatID)"
  },
  {
    "label": "TrackDefaultStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackDefaultStats()"
  },
  {
    "label": "ClearStatsAndInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStatsAndInstances()"
  },
  {
    "label": "IsStatTracked()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsStatTracked(const uint32 StatID)"
  },
  {
    "label": "IsCaptureFileFullyProcessed()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsCaptureFileFullyProcessed()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (const bool bIsValid = ActiveSession .)",
    "insertText": "IsValid() && ActiveInstanceID.IsValid()"
  },
  {
    "label": "IsLivePreview()",
    "kind": "Method",
    "detail": "Function (} const bool)",
    "insertText": "IsLivePreview()"
  },
  {
    "label": "SetDataPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataPreview(const bool bRequestedDataPreviewState)"
  },
  {
    "label": "IsDataCapturing()",
    "kind": "Method",
    "detail": "Function (const bool)",
    "insertText": "IsDataCapturing()"
  },
  {
    "label": "SetDataCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataCapture(const bool bRequestedDataCaptureState)"
  },
  {
    "label": "ProfilerSession_OnCaptureFileProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerSession_OnCaptureFileProcessed(const FGuid ProfilerInstanceID)"
  },
  {
    "label": "ProfilerSession_OnAddThreadTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerSession_OnAddThreadTime(int32 FrameIndex, const TMap<uint32, float>& ThreadMS, const TSharedRef<FProfilerStatMetaData>& StatMetaData)"
  },
  {
    "label": "CreateEventGraphTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEventGraphTab(const FGuid ProfilerInstanceID)"
  },
  {
    "label": "CloseAllEventGraphTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseAllEventGraphTabs()"
  },
  {
    "label": "DataGraph_OnSelectionChangedForIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DataGraph_OnSelectionChangedForIndex(uint32 FrameStartIndex, uint32 FrameEndIndex)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "DECLARE_EVENT_OneParam(FProfilerManager, FViewModeChangedEvent, EProfilerViewMode)"
  },
  {
    "label": "OnViewModeChanged()",
    "kind": "Method",
    "detail": "Function (FViewModeChangedEvent&)",
    "insertText": "OnViewModeChanged()"
  },
  {
    "label": "OnTrackedStatChanged()",
    "kind": "Method",
    "detail": "Function (FTrackedStatChangedEvent&)",
    "insertText": "OnTrackedStatChanged()"
  },
  {
    "label": "OnFrameAdded()",
    "kind": "Method",
    "detail": "Function (FFrameAddedEvent&)",
    "insertText": "OnFrameAdded()"
  },
  {
    "label": "OnOneSecondPassed()",
    "kind": "Method",
    "detail": "Function (FOneSecondPassedEvent&)",
    "insertText": "OnOneSecondPassed()"
  },
  {
    "label": "OnSessionInstancesUpdated()",
    "kind": "Method",
    "detail": "Function (FOnSessionsUpdatedEvent&)",
    "insertText": "OnSessionInstancesUpdated()"
  },
  {
    "label": "OnRequestFilterAndPresetsUpdate()",
    "kind": "Method",
    "detail": "Function (FRequestFilterAndPresetsUpdateEvent&)",
    "insertText": "OnRequestFilterAndPresetsUpdate()"
  },
  {
    "label": "LoadRawStatsFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadRawStatsFile(const FString& RawStatsFileFileath)"
  },
  {
    "label": "ProfilerClient_OnProfilerData()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "ProfilerClient_OnProfilerData(const FGuid& InstanceID, const FProfilerDataFrame& Content)"
  },
  {
    "label": "ProfilerClient_OnClientConnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnClientConnected(const FGuid& SessioID, const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnClientDisconnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnClientDisconnected(const FGuid& SessionID, const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnMetaDataUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnMetaDataUpdated(const FGuid& InstanceID, const FStatMetaData& MetaData)"
  },
  {
    "label": "ProfilerClient_OnLoadCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnLoadCompleted(const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnLoadCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnLoadCancelled(const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnLoadStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnLoadStarted(const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnProfilerFileTransfer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnProfilerFileTransfer(const FString& Filename, int64 FileProgress, int64 FileSize)"
  },
  {
    "label": "SessionManager_OnInstanceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SessionManager_OnInstanceSelectionChanged(const TSharedPtr<ISessionInstanceInfo>& Instance, bool Selected)"
  },
  {
    "label": "GetColorForStatID()",
    "kind": "Method",
    "detail": "Function (public : const FLinearColor&)",
    "insertText": "GetColorForStatID(const uint32 StatID)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (protected : bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "GetProfilerWindow()",
    "kind": "Method",
    "detail": "Function (public : TSharedPtr<class SProfilerWindow>)",
    "insertText": "GetProfilerWindow()"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetViewMode(EProfilerViewMode NewViewMode)"
  }
]