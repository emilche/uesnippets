[
  {
    "label": "SProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProfilerWindow"
  },
  {
    "label": "FProfilerSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerSettings"
  },
  {
    "label": "FTrackedStat",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTrackedStat"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "type"
  },
  {
    "label": "manages",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "manages"
  },
  {
    "label": "FProfilerManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerManager"
  },
  {
    "label": "FProfilerActionManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FProfilerActionManager"
  },
  {
    "label": "SProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProfilerWindow"
  },
  {
    "label": "SProfilerWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SProfilerWindow"
  },
  {
    "label": "PostConstructor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostConstructor()"
  },
  {
    "label": "BindCommands()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindCommands()"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FProfilerManager>)",
    "insertText": "Get()"
  },
  {
    "label": "GetProfilerSession()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FProfilerSession>)",
    "insertText": "GetProfilerSession()"
  },
  {
    "label": "TrackStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TrackStat(const uint32 StatID)"
  },
  {
    "label": "UntrackStat()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UntrackStat(const uint32 StatID)"
  },
  {
    "label": "TrackDefaultStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TrackDefaultStats()"
  },
  {
    "label": "ClearStatsAndInstances()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearStatsAndInstances()"
  },
  {
    "label": "SetDataPreview()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataPreview(const bool bRequestedDataPreviewState)"
  },
  {
    "label": "SetDataCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetDataCapture(const bool bRequestedDataCaptureState)"
  },
  {
    "label": "ProfilerSession_OnCaptureFileProcessed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerSession_OnCaptureFileProcessed(const FGuid ProfilerInstanceID)"
  },
  {
    "label": "ProfilerSession_OnAddThreadTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerSession_OnAddThreadTime(int32 FrameIndex, const TMap<uint32, float>& ThreadMS, const TSharedRef<FProfilerStatMetaData>& StatMetaData)"
  },
  {
    "label": "CreateEventGraphTab()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateEventGraphTab(const FGuid ProfilerInstanceID)"
  },
  {
    "label": "CloseAllEventGraphTabs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseAllEventGraphTabs()"
  },
  {
    "label": "DataGraph_OnSelectionChangedForIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DataGraph_OnSelectionChangedForIndex(uint32 FrameStartIndex, uint32 FrameEndIndex)"
  },
  {
    "label": "DECLARE_EVENT_OneParam()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_EVENT_OneParam(FProfilerManager, FViewModeChangedEvent, EProfilerViewMode /*NewViewMode*/)"
  },
  {
    "label": "LoadProfilerCapture()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadProfilerCapture(const FString& ProfilerCaptureFilepath)"
  },
  {
    "label": "LoadRawStatsFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadRawStatsFile(const FString& RawStatsFileFileath)"
  },
  {
    "label": "ProfilerClient_OnProfilerData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnProfilerData(const FGuid& InstanceID, const FProfilerDataFrame& Content)"
  },
  {
    "label": "ProfilerClient_OnClientConnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnClientConnected(const FGuid& SessioID, const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnClientDisconnected()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnClientDisconnected(const FGuid& SessionID, const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnMetaDataUpdated()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnMetaDataUpdated(const FGuid& InstanceID, const FStatMetaData& MetaData)"
  },
  {
    "label": "ProfilerClient_OnLoadCompleted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnLoadCompleted(const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnLoadCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnLoadCancelled(const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnLoadStarted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnLoadStarted(const FGuid& InstanceID)"
  },
  {
    "label": "ProfilerClient_OnProfilerFileTransfer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ProfilerClient_OnProfilerFileTransfer(const FString& Filename, int64 FileProgress, int64 FileSize)"
  },
  {
    "label": "SessionManager_OnInstanceSelectionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SessionManager_OnInstanceSelectionChanged(const TSharedPtr<ISessionInstanceInfo>& Instance, bool Selected)"
  },
  {
    "label": "Tick()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Tick(float DeltaTime)"
  },
  {
    "label": "SetViewMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetViewMode(EProfilerViewMode NewViewMode)"
  }
]