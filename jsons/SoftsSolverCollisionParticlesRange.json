[
  {
    "label": "FSolverCollisionParticlesRange",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSolverCollisionParticlesRange"
  },
  {
    "label": "FSolverCollisionParticlesRange()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / SoftsSolverCollisionParticles . h \" # include \" Chaos / PBDSoftsEvolutionFwd . h \" # include \" Chaos / ParticlesRange . h \" namespace Chaos::Softs { class FSolverCollisionParticlesRange final : public TParticlesRange<FSolverCollisionParticles> { public :)",
    "insertText": "FSolverCollisionParticlesRange()"
  },
  {
    "label": "FSolverCollisionParticlesRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSolverCollisionParticlesRange(const FSolverCollisionParticlesRange&)"
  },
  {
    "label": "FSolverCollisionParticlesRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSolverCollisionParticlesRange(FSolverCollisionParticlesRange&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSolverCollisionParticlesRange&)",
    "insertText": "operator(const FSolverCollisionParticlesRange&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FSolverCollisionParticlesRange&)",
    "insertText": "operator(FSolverCollisionParticlesRange&&)"
  },
  {
    "label": "FSolverCollisionParticlesRange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FSolverCollisionParticlesRange(TParticlesRange<FSolverCollisionParticles>&& Other) :TParticlesRange<FSolverCollisionParticles>(MoveTemp(Other))"
  },
  {
    "label": "V()",
    "kind": "Method",
    "detail": "Function (} const FSolverVec3&)",
    "insertText": "V(const int32 Index)"
  },
  {
    "label": "GetV()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<FSolverVec3>)",
    "insertText": "GetV()"
  },
  {
    "label": "W()",
    "kind": "Method",
    "detail": "Function (} const FSolverVec3&)",
    "insertText": "W(const int32 Index)"
  },
  {
    "label": "GetW()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<FSolverVec3>)",
    "insertText": "GetW()"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (} const FSolverRotation3)",
    "insertText": "R(const int32 Index)"
  },
  {
    "label": "SetR()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetR(const int32 Index, const FSolverRotation3& InR)"
  },
  {
    "label": "GetParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParticles().SetR(Index + Offset, InR)"
  },
  {
    "label": "GetR()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<FSolverRotation3>)",
    "insertText": "GetR()"
  },
  {
    "label": "GetGeometry()",
    "kind": "Method",
    "detail": "Function (} const FImplicitObjectPtr&)",
    "insertText": "GetGeometry(const int32 Index)"
  },
  {
    "label": "SetGeometry()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetGeometry(const int32 Index, const FImplicitObjectPtr& InGeometry)"
  },
  {
    "label": "GetAllGeometry()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<FImplicitObjectPtr>)",
    "insertText": "GetAllGeometry()"
  },
  {
    "label": "X()",
    "kind": "Method",
    "detail": "Function (} const FSolverVec3&)",
    "insertText": "X(const int32 Index)"
  },
  {
    "label": "GetParticles()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GetParticles().X(Index + Offset)"
  },
  {
    "label": "GetX()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } const FSolverVec3&)",
    "insertText": "GetX(const int32 Index)"
  },
  {
    "label": "SetX()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetX(const int32 Index, const FSolverVec3& InX)"
  },
  {
    "label": "GetParticles()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetParticles().SetX(Index + Offset, InX)"
  },
  {
    "label": "XArray()",
    "kind": "Method",
    "detail": "Function (} TConstArrayView<FSolverVec3>)",
    "insertText": "XArray()"
  }
]