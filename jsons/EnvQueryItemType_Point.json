[
  {
    "label": "UEnvQueryItemType_Point",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEnvQueryItemType_Point"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" AI / Navigation / NavigationTypes . h \" # include \" EnvironmentQuery / EnvQueryTypes . h \" # include \" EnvironmentQuery / Items / EnvQueryItemType_VectorBase . h \" # include \" EnvQueryItemType_Point . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "UEnvQueryItemType_Point()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UEnvQueryItemType_Point(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "GetValue()",
    "kind": "Method",
    "detail": "Function (FNavLocation)",
    "insertText": "GetValue(const uint8* RawData)"
  },
  {
    "label": "SetValue()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetValue(uint8* RawData, const FNavLocation& Value)"
  },
  {
    "label": "SetContextHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContextHelper(FEnvQueryContextData& ContextData, const FVector& SinglePoint)"
  },
  {
    "label": "SetContextHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContextHelper(FEnvQueryContextData& ContextData, const TArray<FVector>& MultiplePoints)"
  },
  {
    "label": "GetItemLocation()",
    "kind": "Method",
    "detail": "Function (FVector)",
    "insertText": "GetItemLocation(const uint8* RawData)"
  },
  {
    "label": "GetItemNavLocation()",
    "kind": "Method",
    "detail": "Function (FNavLocation)",
    "insertText": "GetItemNavLocation(const uint8* RawData)"
  },
  {
    "label": "SetItemNavLocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetItemNavLocation(uint8* RawData, const FNavLocation& Value)"
  },
  {
    "label": "FVector()",
    "kind": "Method",
    "detail": "Function (} ; template<> void FEnvQueryInstance::AddItemData<UEnvQueryItemType_Point,)",
    "insertText": "FVector(FVector ItemValue)"
  }
]