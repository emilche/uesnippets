[
  {
    "label": "StunMessageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunMessageType"
  },
  {
    "label": "StunAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunAttributeType"
  },
  {
    "label": "StunAttributeValueType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunAttributeValueType"
  },
  {
    "label": "StunAddressFamily",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunAddressFamily"
  },
  {
    "label": "StunErrorCode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunErrorCode"
  },
  {
    "label": "StunAddressAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunAddressAttribute"
  },
  {
    "label": "StunAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunAttribute"
  },
  {
    "label": "StunByteStringAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunByteStringAttribute"
  },
  {
    "label": "StunErrorCodeAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunErrorCodeAttribute"
  },
  {
    "label": "StunUInt16ListAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt16ListAttribute"
  },
  {
    "label": "StunUInt32Attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt32Attribute"
  },
  {
    "label": "StunUInt64Attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt64Attribute"
  },
  {
    "label": "StunXorAddressAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunXorAddressAttribute"
  },
  {
    "label": "StunMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunMessage"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "StunAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunAttribute"
  },
  {
    "label": "StunAddressAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunAddressAttribute"
  },
  {
    "label": "StunXorAddressAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunXorAddressAttribute"
  },
  {
    "label": "StunUInt32Attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt32Attribute"
  },
  {
    "label": "StunUInt64Attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt64Attribute"
  },
  {
    "label": "StunByteStringAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunByteStringAttribute"
  },
  {
    "label": "StunErrorCodeAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunErrorCodeAttribute"
  },
  {
    "label": "StunUInt16ListAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt16ListAttribute"
  },
  {
    "label": "RelayMessageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RelayMessageType"
  },
  {
    "label": "RelayAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RelayAttributeType"
  },
  {
    "label": "RelayMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelayMessage"
  },
  {
    "label": "TurnMessageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TurnMessageType"
  },
  {
    "label": "TurnAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TurnAttributeType"
  },
  {
    "label": "TurnErrorType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TurnErrorType"
  },
  {
    "label": "TurnMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TurnMessage"
  },
  {
    "label": "IceAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceAttributeType"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "IceErrorCode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceErrorCode"
  },
  {
    "label": "IceMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IceMessage"
  },
  {
    "label": "StunMessage()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "StunMessage(uint16_t type)"
  },
  {
    "label": "AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttribute(std::unique_ptr<StunAttribute> attr)"
  },
  {
    "label": "RemoveAttribute()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunAttribute>)",
    "insertText": "RemoveAttribute(int type)"
  },
  {
    "label": "ClearAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAttributes()"
  },
  {
    "label": "ValidateMessageIntegrity()",
    "kind": "Method",
    "detail": "Function (IntegrityStatus)",
    "insertText": "ValidateMessageIntegrity(const std::string& password)"
  },
  {
    "label": "RevalidateMessageIntegrity()",
    "kind": "Method",
    "detail": "Function (IntegrityStatus)",
    "insertText": "RevalidateMessageIntegrity(const std::string& password)"
  },
  {
    "label": "AddMessageIntegrity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMessageIntegrity(absl::string_view password)"
  },
  {
    "label": "AddMessageIntegrity32()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMessageIntegrity32(absl::string_view password)"
  },
  {
    "label": "IsStunMethod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunMethod(rtc::ArrayView<int> methods,\n                           const char* data,\n                           size_t size)"
  },
  {
    "label": "ValidateFingerprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateFingerprint(const char* data, size_t size)"
  },
  {
    "label": "GenerateTransactionId()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GenerateTransactionId()"
  },
  {
    "label": "AddFingerprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddFingerprint()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(rtc::ByteBufferReader* buf)"
  },
  {
    "label": "SetStunMagicCookie()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetStunMagicCookie(uint32_t val)"
  },
  {
    "label": "SetTransactionIdForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransactionIdForTesting(absl::string_view transaction_id)"
  },
  {
    "label": "ValidateMessageIntegrity()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrity(\n      const char* data,\n      size_t size,\n      const std::string& password)"
  },
  {
    "label": "ValidateMessageIntegrity32()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrity32(\n      const char* data,\n      size_t size,\n      const std::string& password)"
  },
  {
    "label": "ValidateMessageIntegrityForTesting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrityForTesting(const char* data,\n                                                 size_t size,\n                                                 const std::string& password)"
  },
  {
    "label": "ValidateMessageIntegrity32ForTesting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrity32ForTesting(const char* data,\n                                                   size_t size,\n                                                   const std::string& password)"
  },
  {
    "label": "IsValidTransactionId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidTransactionId(absl::string_view transaction_id)"
  },
  {
    "label": "AddMessageIntegrityOfType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMessageIntegrityOfType(int mi_attr_type,\n                                 size_t mi_attr_size,\n                                 absl::string_view key)"
  },
  {
    "label": "ValidateMessageIntegrityOfType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrityOfType(int mi_attr_type,\n                                             size_t mi_attr_size,\n                                             const char* data,\n                                             size_t size,\n                                             const std::string& password)"
  },
  {
    "label": "CreateAddress()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunAddressAttribute>)",
    "insertText": "CreateAddress(uint16_t type)"
  },
  {
    "label": "CreateXorAddress()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunXorAddressAttribute>)",
    "insertText": "CreateXorAddress(\n      uint16_t type)"
  },
  {
    "label": "CreateUInt32()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt32Attribute>)",
    "insertText": "CreateUInt32(uint16_t type)"
  },
  {
    "label": "CreateUInt64()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt64Attribute>)",
    "insertText": "CreateUInt64(uint16_t type)"
  },
  {
    "label": "CreateByteString()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunByteStringAttribute>)",
    "insertText": "CreateByteString(\n      uint16_t type)"
  },
  {
    "label": "CreateUInt16ListAttribute()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt16ListAttribute>)",
    "insertText": "CreateUInt16ListAttribute(\n      uint16_t type)"
  },
  {
    "label": "CreateErrorCode()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunErrorCodeAttribute>)",
    "insertText": "CreateErrorCode()"
  },
  {
    "label": "CreateUnknownAttributes()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt16ListAttribute>)",
    "insertText": "CreateUnknownAttributes()"
  },
  {
    "label": "StunAttribute()",
    "kind": "Method",
    "detail": "Function (protected:)",
    "insertText": "StunAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "StunXorAddressAttribute()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "StunXorAddressAttribute(uint16_t type, const rtc::SocketAddress& addr)"
  },
  {
    "label": "StunUInt32Attribute()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "StunUInt32Attribute(uint16_t type)"
  },
  {
    "label": "SetBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBit(size_t index, bool value)"
  },
  {
    "label": "StunUInt64Attribute()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "StunUInt64Attribute(uint16_t type)"
  },
  {
    "label": "StunByteStringAttribute()",
    "kind": "Method",
    "detail": "Function (explicit)",
    "insertText": "StunByteStringAttribute(uint16_t type)"
  },
  {
    "label": "CopyBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyBytes(const void* bytes, size_t length)"
  },
  {
    "label": "CopyBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyBytes(absl::string_view bytes)"
  },
  {
    "label": "SetByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetByte(size_t index, uint8_t value)"
  },
  {
    "label": "SetBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBytes(char* bytes, size_t length)"
  },
  {
    "label": "SetCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCode(int code)"
  },
  {
    "label": "SetReason()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetReason(const std::string& reason)"
  },
  {
    "label": "StunUInt16ListAttribute()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "StunUInt16ListAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType(int index, uint16_t value)"
  },
  {
    "label": "AddType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddType(uint16_t value)"
  },
  {
    "label": "AddTypeAtIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTypeAtIndex(uint16_t index, uint16_t value)"
  },
  {
    "label": "StunMethodToString()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "StunMethodToString(int msg_type)"
  },
  {
    "label": "GetStunSuccessResponseType()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStunSuccessResponseType(int request_type)"
  },
  {
    "label": "GetStunErrorResponseType()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStunErrorResponseType(int request_type)"
  },
  {
    "label": "IsStunRequestType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunRequestType(int msg_type)"
  },
  {
    "label": "IsStunIndicationType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunIndicationType(int msg_type)"
  },
  {
    "label": "IsStunSuccessResponseType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunSuccessResponseType(int msg_type)"
  },
  {
    "label": "IsStunErrorResponseType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunErrorResponseType(int msg_type)"
  },
  {
    "label": "ComputeStunCredentialHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeStunCredentialHash(const std::string& username,\n                               const std::string& realm,\n                               const std::string& password,\n                               std::string* hash)"
  },
  {
    "label": "CopyStunAttribute()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunAttribute>)",
    "insertText": "CopyStunAttribute(\n    const StunAttribute& attribute,\n    rtc::ByteBufferWriter* tmp_buffer_ptr = 0)"
  }
]