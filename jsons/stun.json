[
  {
    "label": "StunMessageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunMessageType"
  },
  {
    "label": "StunAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunAttributeType"
  },
  {
    "label": "StunAttributeValueType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunAttributeValueType"
  },
  {
    "label": "StunAddressFamily",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunAddressFamily"
  },
  {
    "label": "StunErrorCode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "StunErrorCode"
  },
  {
    "label": "StunAddressAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunAddressAttribute"
  },
  {
    "label": "StunAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunAttribute"
  },
  {
    "label": "StunByteStringAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunByteStringAttribute"
  },
  {
    "label": "StunErrorCodeAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunErrorCodeAttribute"
  },
  {
    "label": "StunUInt16ListAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt16ListAttribute"
  },
  {
    "label": "StunUInt32Attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt32Attribute"
  },
  {
    "label": "StunUInt64Attribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunUInt64Attribute"
  },
  {
    "label": "StunXorAddressAttribute",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunXorAddressAttribute"
  },
  {
    "label": "StunMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "StunMessage"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "RelayMessageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RelayMessageType"
  },
  {
    "label": "RelayAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "RelayAttributeType"
  },
  {
    "label": "RelayMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RelayMessage"
  },
  {
    "label": "TurnMessageType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TurnMessageType"
  },
  {
    "label": "TurnAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TurnAttributeType"
  },
  {
    "label": "TurnErrorType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "TurnErrorType"
  },
  {
    "label": "TurnMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TurnMessage"
  },
  {
    "label": "IceAttributeType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceAttributeType"
  },
  {
    "label": "IceErrorCode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "IceErrorCode"
  },
  {
    "label": "IceMessage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IceMessage"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (# ifndef API_TRANSPORT_STUN_H_ # define API_TRANSPORT_STUN_H_ # include<stddef . h> # include<stdint . h> # include<functional> # include<memory> # include<string> # include<vector> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" rtc_base / byte_buffer . h \" # include \" rtc_base / ip_address . h \" # include \" rtc_base / socket_address . h \" namespace cricket { enum StunMessageType : uint16_t { STUN_INVALID_MESSAGE_TYPE = 0 x0000,STUN_BINDING_REQUEST = 0 x0001,STUN_BINDING_INDICATION = 0 x0011,STUN_BINDING_RESPONSE = 0 x0101,STUN_BINDING_ERROR_RESPONSE = 0 x0111,GOOG_PING_REQUEST = 0 x200,GOOG_PING_RESPONSE = 0 x300,GOOG_PING_ERROR_RESPONSE = 0 x310,} ; enum StunAttributeType { STUN_ATTR_MAPPED_ADDRESS = 0 x0001,STUN_ATTR_USERNAME = 0 x0006,STUN_ATTR_MESSAGE_INTEGRITY = 0 x0008,STUN_ATTR_ERROR_CODE = 0 x0009,STUN_ATTR_UNKNOWN_ATTRIBUTES = 0 x000a,STUN_ATTR_REALM = 0 x0014,STUN_ATTR_NONCE = 0 x0015,STUN_ATTR_XOR_MAPPED_ADDRESS = 0 x0020,STUN_ATTR_SOFTWARE = 0 x8022,STUN_ATTR_ALTERNATE_SERVER = 0 x8023,STUN_ATTR_FINGERPRINT = 0 x8028,STUN_ATTR_RETRANSMIT_COUNT = 0 xFF00 } ; enum StunAttributeValueType { STUN_VALUE_UNKNOWN = 0,STUN_VALUE_ADDRESS = 1,STUN_VALUE_XOR_ADDRESS = 2,STUN_VALUE_UINT32 = 3,STUN_VALUE_UINT64 = 4,STUN_VALUE_BYTE_STRING = 5,STUN_VALUE_ERROR_CODE = 6,STUN_VALUE_UINT16_LIST = 7 } ; enum StunAddressFamily { STUN_ADDRESS_UNDEF = 0,STUN_ADDRESS_IPV4 = 1,STUN_ADDRESS_IPV6 = 2 } ; enum StunErrorCode { STUN_ERROR_TRY_ALTERNATE = 3 0 0,STUN_ERROR_BAD_REQUEST = 4 0 0,STUN_ERROR_UNAUTHORIZED = 4 0 1,STUN_ERROR_UNKNOWN_ATTRIBUTE = 4 2 0,STUN_ERROR_STALE_NONCE = 4 3 8,STUN_ERROR_SERVER_ERROR = 5 0 0,STUN_ERROR_GLOBAL_FAILURE = 6 0 0 } ; const char STUN_ERROR_REASON_TRY_ALTERNATE_SERVER [ ] ; const char STUN_ERROR_REASON_BAD_REQUEST [ ] ; const char STUN_ERROR_REASON_UNAUTHORIZED [ ] ; const char STUN_ERROR_REASON_UNKNOWN_ATTRIBUTE [ ] ; const char STUN_ERROR_REASON_STALE_NONCE [ ] ; const char STUN_ERROR_REASON_SERVER_ERROR [ ] ; const uint32_t kStunTypeMask = 0 x0110 ; const size_t kStunAttributeHeaderSize = 4 ; const size_t kStunHeaderSize = 2 0 ; const size_t kStunTransactionIdOffset = 8 ; const size_t kStunTransactionIdLength = 1 2 ; const uint32_t kStunMagicCookie = 0 x2112A442 ; size_t kStunMagicCookieLength =)",
    "insertText": "sizeof(kStunMagicCookie)"
  },
  {
    "label": "StunMessage()",
    "kind": "Method",
    "detail": "Function (const size_t kStunLegacyTransactionIdLength = 1 6 ; const size_t kStunMessageIntegritySize = 2 0 ; const size_t kStunMessageIntegrity32Size = 4 ; class StunAddressAttribute ; class StunAttribute ; class StunByteStringAttribute ; class StunErrorCodeAttribute ; class StunUInt16ListAttribute ; class StunUInt32Attribute ; class StunUInt64Attribute ; class StunXorAddressAttribute ; class StunMessage { public :)",
    "insertText": "StunMessage()"
  },
  {
    "label": "StunMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunMessage(uint16_t type)"
  },
  {
    "label": "StunMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunMessage(uint16_t type, absl::string_view transaction_id)"
  },
  {
    "label": "type()",
    "kind": "Method",
    "detail": "Function (enum class IntegrityStatus { kNotSet = 0,kNoIntegrity = 1,kIntegrityOk = 2,kIntegrityBad = 3,kMaxValue = kIntegrityBad,} ; int)",
    "insertText": "type()"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function ([ [ deprecated ] ] void)",
    "insertText": "SetType(int type)"
  },
  {
    "label": "uint16_t()",
    "kind": "Method",
    "detail": "Function (type_ = static_cast<)",
    "insertText": "uint16_t(type)"
  },
  {
    "label": "SetTransactionID()",
    "kind": "Method",
    "detail": "Function (} [ [ deprecated ] ] bool)",
    "insertText": "SetTransactionID(absl::string_view transaction_id)"
  },
  {
    "label": "SetTransactionIdForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransactionIdForTesting(transaction_id)"
  },
  {
    "label": "GetAddress()",
    "kind": "Method",
    "detail": "Function (const StunAddressAttribute*)",
    "insertText": "GetAddress(int type)"
  },
  {
    "label": "GetUInt32()",
    "kind": "Method",
    "detail": "Function (const StunUInt32Attribute*)",
    "insertText": "GetUInt32(int type)"
  },
  {
    "label": "GetUInt64()",
    "kind": "Method",
    "detail": "Function (const StunUInt64Attribute*)",
    "insertText": "GetUInt64(int type)"
  },
  {
    "label": "GetByteString()",
    "kind": "Method",
    "detail": "Function (const StunByteStringAttribute*)",
    "insertText": "GetByteString(int type)"
  },
  {
    "label": "GetUInt16List()",
    "kind": "Method",
    "detail": "Function (const StunUInt16ListAttribute*)",
    "insertText": "GetUInt16List(int type)"
  },
  {
    "label": "GetErrorCode()",
    "kind": "Method",
    "detail": "Function (const StunErrorCodeAttribute*)",
    "insertText": "GetErrorCode()"
  },
  {
    "label": "GetErrorCodeValue()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetErrorCodeValue()"
  },
  {
    "label": "GetUnknownAttributes()",
    "kind": "Method",
    "detail": "Function (const StunUInt16ListAttribute*)",
    "insertText": "GetUnknownAttributes()"
  },
  {
    "label": "AddAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAttribute(std::unique_ptr<StunAttribute> attr)"
  },
  {
    "label": "RemoveAttribute()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunAttribute>)",
    "insertText": "RemoveAttribute(int type)"
  },
  {
    "label": "ClearAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAttributes()"
  },
  {
    "label": "ValidateMessageIntegrity()",
    "kind": "Method",
    "detail": "Function (IntegrityStatus)",
    "insertText": "ValidateMessageIntegrity(const std::string& password)"
  },
  {
    "label": "RevalidateMessageIntegrity()",
    "kind": "Method",
    "detail": "Function (IntegrityStatus)",
    "insertText": "RevalidateMessageIntegrity(const std::string& password)"
  },
  {
    "label": "integrity()",
    "kind": "Method",
    "detail": "Function (IntegrityStatus)",
    "insertText": "integrity()"
  },
  {
    "label": "RTC_DCHECK()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RTC_DCHECK(integrity_ != IntegrityStatus::kNotSet)"
  },
  {
    "label": "AddMessageIntegrity32()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMessageIntegrity32(absl::string_view password)"
  },
  {
    "label": "IsStunMethod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunMethod(rtc::ArrayView<int> methods, const char* data, size_t size)"
  },
  {
    "label": "ValidateFingerprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateFingerprint(const char* data, size_t size)"
  },
  {
    "label": "GenerateTransactionId()",
    "kind": "Method",
    "detail": "Function (std::string)",
    "insertText": "GenerateTransactionId()"
  },
  {
    "label": "AddFingerprint()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddFingerprint()"
  },
  {
    "label": "Read()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Read(rtc::ByteBufferReader* buf)"
  },
  {
    "label": "Write()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Write(rtc::ByteBufferWriter* buf)"
  },
  {
    "label": "CreateNew()",
    "kind": "Method",
    "detail": "Function (StunMessage*)",
    "insertText": "CreateNew()"
  },
  {
    "label": "SetStunMagicCookie()",
    "kind": "Method",
    "detail": "Function ([ [ deprecated ] ] void)",
    "insertText": "SetStunMagicCookie(uint32_t val)"
  },
  {
    "label": "SetTransactionIdForTesting()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTransactionIdForTesting(absl::string_view transaction_id)"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunMessage>)",
    "insertText": "Clone()"
  },
  {
    "label": "EqualAttributes()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "EqualAttributes(const StunMessage* other, std::function<bool(int type)> attribute_type_mask)"
  },
  {
    "label": "deprecated()",
    "kind": "Method",
    "detail": "Function ([ [)",
    "insertText": "deprecated(\"Use member function\")]] static bool ValidateMessageIntegrity( const char* data, size_t size, const std::string& password)"
  },
  {
    "label": "deprecated()",
    "kind": "Method",
    "detail": "Function ([ [)",
    "insertText": "deprecated(\"Use member function\")]] static bool ValidateMessageIntegrity32( const char* data, size_t size, const std::string& password)"
  },
  {
    "label": "ValidateMessageIntegrityForTesting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrityForTesting(const char* data, size_t size, const std::string& password)"
  },
  {
    "label": "ValidateMessageIntegrity32ForTesting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrity32ForTesting(const char* data, size_t size, const std::string& password)"
  },
  {
    "label": "GetAttributeValueType()",
    "kind": "Method",
    "detail": "Function (protected : StunAttributeValueType)",
    "insertText": "GetAttributeValueType(int type)"
  },
  {
    "label": "CreateAttribute()",
    "kind": "Method",
    "detail": "Function (std::vector<std::unique_ptr<StunAttribute>> attrs_ ; private : StunAttribute*)",
    "insertText": "CreateAttribute(int type, size_t length)"
  },
  {
    "label": "GetAttribute()",
    "kind": "Method",
    "detail": "Function (const StunAttribute*)",
    "insertText": "GetAttribute(int type)"
  },
  {
    "label": "IsValidTransactionId()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidTransactionId(absl::string_view transaction_id)"
  },
  {
    "label": "AddMessageIntegrityOfType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddMessageIntegrityOfType(int mi_attr_type, size_t mi_attr_size, absl::string_view key)"
  },
  {
    "label": "ValidateMessageIntegrityOfType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateMessageIntegrityOfType(int mi_attr_type, size_t mi_attr_size, const char* data, size_t size, const std::string& password)"
  },
  {
    "label": "StunAttribute()",
    "kind": "Method",
    "detail": "Function (uint16_t type_ = STUN_INVALID_MESSAGE_TYPE ; uint16_t length_ = 0 ; std::string transaction_id_ ; uint32_t reduced_transaction_id_ = 0 ; uint32_t stun_magic_cookie_ = kStunMagicCookie ; std::string buffer_ ; IntegrityStatus integrity_ = IntegrityStatus::kNotSet ; std::string password_ ; } ; class StunAttribute { public : ~)",
    "insertText": "StunAttribute()"
  },
  {
    "label": "SetOwner()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetOwner(StunMessage* owner)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (StunAttribute*)",
    "insertText": "Create(StunAttributeValueType value_type, uint16_t type, uint16_t length, StunMessage* owner)"
  },
  {
    "label": "CreateAddress()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunAddressAttribute>)",
    "insertText": "CreateAddress(uint16_t type)"
  },
  {
    "label": "CreateXorAddress()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunXorAddressAttribute>)",
    "insertText": "CreateXorAddress(uint16_t type)"
  },
  {
    "label": "CreateUInt32()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt32Attribute>)",
    "insertText": "CreateUInt32(uint16_t type)"
  },
  {
    "label": "CreateUInt64()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt64Attribute>)",
    "insertText": "CreateUInt64(uint16_t type)"
  },
  {
    "label": "CreateByteString()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunByteStringAttribute>)",
    "insertText": "CreateByteString(uint16_t type)"
  },
  {
    "label": "CreateUInt16ListAttribute()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt16ListAttribute>)",
    "insertText": "CreateUInt16ListAttribute(uint16_t type)"
  },
  {
    "label": "CreateErrorCode()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunErrorCodeAttribute>)",
    "insertText": "CreateErrorCode()"
  },
  {
    "label": "CreateUnknownAttributes()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunUInt16ListAttribute>)",
    "insertText": "CreateUnknownAttributes()"
  },
  {
    "label": "StunAttribute()",
    "kind": "Method",
    "detail": "Function (protected :)",
    "insertText": "StunAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "SetLength()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLength(uint16_t length)"
  },
  {
    "label": "WritePadding()",
    "kind": "Method",
    "detail": "Function (length_ = length ; } void)",
    "insertText": "WritePadding(rtc::ByteBufferWriter* buf)"
  },
  {
    "label": "ConsumePadding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConsumePadding(rtc::ByteBufferReader* buf)"
  },
  {
    "label": "StunAddressAttribute()",
    "kind": "Method",
    "detail": "Function (private : uint16_t type_ ; uint16_t length_ ; } ; class StunAddressAttribute : public StunAttribute { public : const uint16_t SIZE_UNDEF = 0 ; const uint16_t SIZE_IP4 = 8 ; const uint16_t SIZE_IP6 = 2 0 ;)",
    "insertText": "StunAddressAttribute(uint16_t type, const rtc::SocketAddress& addr)"
  },
  {
    "label": "StunAddressAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunAddressAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "value_type()",
    "kind": "Method",
    "detail": "Function (StunAttributeValueType)",
    "insertText": "value_type()"
  },
  {
    "label": "family()",
    "kind": "Method",
    "detail": "Function (StunAddressFamily)",
    "insertText": "family()"
  },
  {
    "label": "port()",
    "kind": "Method",
    "detail": "Function (} uint16_t)",
    "insertText": "port()"
  },
  {
    "label": "SetAddress()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAddress(const rtc::SocketAddress& addr)"
  },
  {
    "label": "EnsureAddressLength()",
    "kind": "Method",
    "detail": "Function (address_ = addr ;)",
    "insertText": "EnsureAddressLength()"
  },
  {
    "label": "SetIP()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetIP(const rtc::IPAddress& ip)"
  },
  {
    "label": "SetIP()",
    "kind": "Method",
    "detail": "Function (address_ .)",
    "insertText": "SetIP(ip)"
  },
  {
    "label": "SetPort()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetPort(uint16_t port)"
  },
  {
    "label": "SetPort()",
    "kind": "Method",
    "detail": "Function (address_ .)",
    "insertText": "SetPort(port)"
  },
  {
    "label": "SetLength()",
    "kind": "Method",
    "detail": "Function (break ; } case STUN_ADDRESS_IPV6 : {)",
    "insertText": "SetLength(SIZE_IP6)"
  },
  {
    "label": "SetLength()",
    "kind": "Method",
    "detail": "Function (break ; } default : {)",
    "insertText": "SetLength(SIZE_UNDEF)"
  },
  {
    "label": "StunXorAddressAttribute()",
    "kind": "Method",
    "detail": "Function (break ; } } } rtc::SocketAddress address_ ; } ; class StunXorAddressAttribute : public StunAddressAttribute { public :)",
    "insertText": "StunXorAddressAttribute(uint16_t type, const rtc::SocketAddress& addr)"
  },
  {
    "label": "StunXorAddressAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunXorAddressAttribute(uint16_t type, uint16_t length, StunMessage* owner)"
  },
  {
    "label": "GetXoredIP()",
    "kind": "Method",
    "detail": "Function (private : rtc::IPAddress)",
    "insertText": "GetXoredIP()"
  },
  {
    "label": "StunUInt32Attribute()",
    "kind": "Method",
    "detail": "Function (StunMessage* owner_ ; } ; class StunUInt32Attribute : public StunAttribute { public : const uint16_t SIZE = 4 ;)",
    "insertText": "StunUInt32Attribute(uint16_t type, uint32_t value)"
  },
  {
    "label": "StunUInt32Attribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunUInt32Attribute(uint16_t type)"
  },
  {
    "label": "value()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "value()"
  },
  {
    "label": "GetBit()",
    "kind": "Method",
    "detail": "Function (bits_ = bits ; } bool)",
    "insertText": "GetBit(size_t index)"
  },
  {
    "label": "SetBit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBit(size_t index, bool value)"
  },
  {
    "label": "StunUInt64Attribute()",
    "kind": "Method",
    "detail": "Function (private : uint32_t bits_ ; } ; class StunUInt64Attribute : public StunAttribute { public : const uint16_t SIZE = 8 ;)",
    "insertText": "StunUInt64Attribute(uint16_t type, uint64_t value)"
  },
  {
    "label": "StunUInt64Attribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunUInt64Attribute(uint16_t type)"
  },
  {
    "label": "StunByteStringAttribute()",
    "kind": "Method",
    "detail": "Function (private : uint64_t bits_ ; } ; class StunByteStringAttribute : public StunAttribute { public :)",
    "insertText": "StunByteStringAttribute(uint16_t type)"
  },
  {
    "label": "StunByteStringAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunByteStringAttribute(uint16_t type, absl::string_view str)"
  },
  {
    "label": "StunByteStringAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunByteStringAttribute(uint16_t type, const void* bytes, size_t length)"
  },
  {
    "label": "StunByteStringAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunByteStringAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "StunByteStringAttribute()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StunByteStringAttribute()"
  },
  {
    "label": "bytes()",
    "kind": "Method",
    "detail": "Function (const char*)",
    "insertText": "bytes()"
  },
  {
    "label": "GetString()",
    "kind": "Method",
    "detail": "Function (} [ [ deprecated ] ] std::string)",
    "insertText": "GetString()"
  },
  {
    "label": "CopyBytes()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "CopyBytes(const void* bytes, size_t length)"
  },
  {
    "label": "CopyBytes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyBytes(absl::string_view bytes)"
  },
  {
    "label": "GetByte()",
    "kind": "Method",
    "detail": "Function (uint8_t)",
    "insertText": "GetByte(size_t index)"
  },
  {
    "label": "SetByte()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetByte(size_t index, uint8_t value)"
  },
  {
    "label": "SetBytes()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "SetBytes(char* bytes, size_t length)"
  },
  {
    "label": "StunErrorCodeAttribute()",
    "kind": "Method",
    "detail": "Function (char* bytes_ ; } ; class StunErrorCodeAttribute : public StunAttribute { public : const uint16_t MIN_SIZE ;)",
    "insertText": "StunErrorCodeAttribute(uint16_t type, int code, const std::string& reason)"
  },
  {
    "label": "StunErrorCodeAttribute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StunErrorCodeAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "StunErrorCodeAttribute()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StunErrorCodeAttribute()"
  },
  {
    "label": "code()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "code()"
  },
  {
    "label": "SetCode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCode(int code)"
  },
  {
    "label": "eclass()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "eclass()"
  },
  {
    "label": "SetNumber()",
    "kind": "Method",
    "detail": "Function (class_ = eclass ; } void)",
    "insertText": "SetNumber(uint8_t number)"
  },
  {
    "label": "SetReason()",
    "kind": "Method",
    "detail": "Function (number_ = number ; } void)",
    "insertText": "SetReason(const std::string& reason)"
  },
  {
    "label": "StunUInt16ListAttribute()",
    "kind": "Method",
    "detail": "Function (private : uint8_t class_ ; uint8_t number_ ; std::string reason_ ; } ; class StunUInt16ListAttribute : public StunAttribute { public :)",
    "insertText": "StunUInt16ListAttribute(uint16_t type, uint16_t length)"
  },
  {
    "label": "StunUInt16ListAttribute()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "StunUInt16ListAttribute()"
  },
  {
    "label": "Size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "Size()"
  },
  {
    "label": "GetType()",
    "kind": "Method",
    "detail": "Function (uint16_t)",
    "insertText": "GetType(int index)"
  },
  {
    "label": "SetType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetType(int index, uint16_t value)"
  },
  {
    "label": "AddType()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddType(uint16_t value)"
  },
  {
    "label": "AddTypeAtIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddTypeAtIndex(uint16_t index, uint16_t value)"
  },
  {
    "label": "StunMethodToString()",
    "kind": "Method",
    "detail": "Function (private : std::vector<uint16_t>* attr_types_ ; } ; std::string)",
    "insertText": "StunMethodToString(int msg_type)"
  },
  {
    "label": "GetStunSuccessResponseType()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStunSuccessResponseType(int request_type)"
  },
  {
    "label": "GetStunErrorResponseType()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "GetStunErrorResponseType(int request_type)"
  },
  {
    "label": "IsStunRequestType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunRequestType(int msg_type)"
  },
  {
    "label": "IsStunIndicationType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunIndicationType(int msg_type)"
  },
  {
    "label": "IsStunSuccessResponseType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunSuccessResponseType(int msg_type)"
  },
  {
    "label": "IsStunErrorResponseType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsStunErrorResponseType(int msg_type)"
  },
  {
    "label": "ComputeStunCredentialHash()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ComputeStunCredentialHash(const std::string& username, const std::string& realm, const std::string& password, std::string* hash)"
  },
  {
    "label": "CopyStunAttribute()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<StunAttribute>)",
    "insertText": "CopyStunAttribute(const StunAttribute& attribute, rtc::ByteBufferWriter* tmp_buffer_ptr = 0)"
  }
]