[
  {
    "label": "FUniqueNetIdRepl",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FUniqueNetIdRepl"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FPlayerMuteList",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPlayerMuteList"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FUniqueNetId",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FUniqueNetId"
  },
  {
    "label": "AddVoiceBlockReason()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AddVoiceBlockReason(const FUniqueNetIdPtr& PlayerId, EVoiceBlockReasons VoiceBlockReason)"
  },
  {
    "label": "RemoveVoiceBlockReason()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveVoiceBlockReason(const FUniqueNetIdPtr& PlayerId, EVoiceBlockReasons VoiceBlockReason)"
  },
  {
    "label": "ServerMutePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerMutePlayer(class APlayerController* OwningPC, const FUniqueNetIdRepl& MuteId)"
  },
  {
    "label": "ServerUnmutePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUnmutePlayer(class APlayerController* OwningPC, const FUniqueNetIdRepl& UnmuteId)"
  },
  {
    "label": "GameplayMutePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GameplayMutePlayer(class APlayerController* OwningPC, const FUniqueNetIdRepl& MuteId)"
  },
  {
    "label": "GameplayUnmutePlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GameplayUnmutePlayer(class APlayerController* OwningPC, const FUniqueNetIdRepl& UnmuteId)"
  },
  {
    "label": "GameplayUnmuteAllPlayers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GameplayUnmuteAllPlayers(class APlayerController* OwningPC)"
  },
  {
    "label": "ServerBlockPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerBlockPlayer(class APlayerController* OwningPC, const FUniqueNetIdRepl& BlockId)"
  },
  {
    "label": "ServerUnblockPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ServerUnblockPlayer(class APlayerController* OwningPC, const FUniqueNetIdRepl& UnblockId)"
  },
  {
    "label": "IsPlayerMuted()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsPlayerMuted(const class FUniqueNetId& PlayerId)"
  },
  {
    "label": "DumpMutelistState()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DumpMutelistState(UWorld* World)"
  }
]