[
  {
    "label": "ReorderOptimizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ReorderOptimizer"
  },
  {
    "label": "ReorderOptimizer()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_CODING_NETEQ_REORDER_OPTIMIZER_H_ # define MODULES_AUDIO_CODING_NETEQ_REORDER_OPTIMIZER_H_ # include \" absl / types / optional . h \" # include \" modules / audio_coding / neteq / histogram . h \" namespace webrtc { class ReorderOptimizer { public :)",
    "insertText": "ReorderOptimizer(int forget_factor, int ms_per_loss_percent, absl::optional<int> start_forget_weight)"
  },
  {
    "label": "Update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Update(int relative_delay_ms, bool reordered, int base_delay_ms)"
  },
  {
    "label": "GetOptimalDelayMs()",
    "kind": "Method",
    "detail": "Function (absl::optional<int>)",
    "insertText": "GetOptimalDelayMs()"
  },
  {
    "label": "MinimizeCostFunction()",
    "kind": "Method",
    "detail": "Function (private : int)",
    "insertText": "MinimizeCostFunction(int base_delay_ms)"
  }
]