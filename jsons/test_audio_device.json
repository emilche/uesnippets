[
  {
    "label": "TestAudioDeviceModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TestAudioDeviceModule"
  },
  {
    "label": "Capturer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Capturer"
  },
  {
    "label": "Renderer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Renderer"
  },
  {
    "label": "PulsedNoiseCapturer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PulsedNoiseCapturer"
  },
  {
    "label": "SamplesPerFrame()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_AUDIO_DEVICE_INCLUDE_TEST_AUDIO_DEVICE_H_ # define MODULES_AUDIO_DEVICE_INCLUDE_TEST_AUDIO_DEVICE_H_ # include<stddef . h> # include<stdint . h> # include<memory> # include<string> # include \" absl / strings / string_view . h \" # include \" api / array_view . h \" # include \" api / scoped_refptr . h \" # include \" api / task_queue / task_queue_factory . h \" # include \" modules / audio_device / include / audio_device . h \" # include \" modules / audio_device / include / audio_device_defines . h \" # include \" rtc_base / buffer . h \" namespace webrtc { class TestAudioDeviceModule : public AudioDeviceModule { public : size_t)",
    "insertText": "SamplesPerFrame(int sampling_frequency_in_hz)"
  },
  {
    "label": "Capturer()",
    "kind": "Method",
    "detail": "Function (class Capturer { public : ~)",
    "insertText": "Capturer()"
  },
  {
    "label": "SamplingFrequency()",
    "kind": "Method",
    "detail": "Function (} int)",
    "insertText": "SamplingFrequency()"
  },
  {
    "label": "NumChannels()",
    "kind": "Method",
    "detail": "Function (int)",
    "insertText": "NumChannels()"
  },
  {
    "label": "Capture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Capture(rtc::BufferT<int16_t>* buffer)"
  },
  {
    "label": "Renderer()",
    "kind": "Method",
    "detail": "Function (} ; class Renderer { public : ~)",
    "insertText": "Renderer()"
  },
  {
    "label": "Render()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Render(rtc::ArrayView<const int16_t> data)"
  },
  {
    "label": "PulsedNoiseCapturer()",
    "kind": "Method",
    "detail": "Function (} ; class PulsedNoiseCapturer : public Capturer { public : ~)",
    "insertText": "PulsedNoiseCapturer()"
  },
  {
    "label": "SetMaxAmplitude()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetMaxAmplitude(int16_t amplitude)"
  },
  {
    "label": "TestAudioDeviceModule()",
    "kind": "Method",
    "detail": "Function (} ; ~)",
    "insertText": "TestAudioDeviceModule()"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (} rtc::scoped_refptr<TestAudioDeviceModule>)",
    "insertText": "Create(TaskQueueFactory* task_queue_factory, std::unique_ptr<Capturer> capturer, std::unique_ptr<Renderer> renderer, float speed = 1)"
  },
  {
    "label": "CreatePulsedNoiseCapturer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<PulsedNoiseCapturer>)",
    "insertText": "CreatePulsedNoiseCapturer(int16_t max_amplitude, int sampling_frequency_in_hz, int num_channels = 1)"
  },
  {
    "label": "CreateDiscardRenderer()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Renderer>)",
    "insertText": "CreateDiscardRenderer(int sampling_frequency_in_hz, int num_channels = 1)"
  },
  {
    "label": "CreateWavFileReader()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Capturer>)",
    "insertText": "CreateWavFileReader(absl::string_view filename, int sampling_frequency_in_hz, int num_channels = 1)"
  },
  {
    "label": "CreateWavFileReader()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Capturer>)",
    "insertText": "CreateWavFileReader(absl::string_view filename, bool repeat = false)"
  },
  {
    "label": "CreateWavFileWriter()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Renderer>)",
    "insertText": "CreateWavFileWriter(absl::string_view filename, int sampling_frequency_in_hz, int num_channels = 1)"
  },
  {
    "label": "CreateBoundedWavFileWriter()",
    "kind": "Method",
    "detail": "Function (std::unique_ptr<Renderer>)",
    "insertText": "CreateBoundedWavFileWriter(absl::string_view filename, int sampling_frequency_in_hz, int num_channels = 1)"
  },
  {
    "label": "Init()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Init()"
  },
  {
    "label": "RegisterAudioCallback()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RegisterAudioCallback(AudioTransport* callback)"
  },
  {
    "label": "StartPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StartPlayout()"
  },
  {
    "label": "StopPlayout()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StopPlayout()"
  },
  {
    "label": "StartRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StartRecording()"
  },
  {
    "label": "StopRecording()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "StopRecording()"
  },
  {
    "label": "Playing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Playing()"
  },
  {
    "label": "Recording()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Recording()"
  },
  {
    "label": "WaitForRecordingEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitForRecordingEnd()"
  }
]