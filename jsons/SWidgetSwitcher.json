[
  {
    "label": "FArrangedChildren",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedChildren"
  },
  {
    "label": "SWidgetSwitcher",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidgetSwitcher"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / Attribute . h \" # include \" Layout / Visibility . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" SlotBase . h \" # include \" Layout / Children . h \" # include \" Widgets / SPanel . h \" class FArrangedChildren ; class SWidgetSwitcher : public SPanel { public : using FSlot = FBasicLayoutWidgetSlot ;)",
    "insertText": "SLATE_BEGIN_ARGS(SWidgetSwitcher) : _WidgetIndex(0)"
  },
  {
    "label": "SLATE_SLOT_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (_Visibility = EVisibility::SelfHitTestInvisible ; })",
    "insertText": "SLATE_SLOT_ARGUMENT(FSlot, Slots) SLATE_ATTRIBUTE(int32, WidgetIndex) SLATE_END_ARGS() SLATE_API SWidgetSwitcher()"
  },
  {
    "label": "SWidgetSwitcher()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "SWidgetSwitcher()"
  },
  {
    "label": "AddSlot()",
    "kind": "Method",
    "detail": "Function (public : using FScopedWidgetSlotArguments = TPanelChildren<FSlot>::FScopedWidgetSlotArguments ; FScopedWidgetSlotArguments)",
    "insertText": "AddSlot(int32 SlotIndex = INDEX_NONE)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs)"
  },
  {
    "label": "GetActiveWidget()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetActiveWidget()"
  },
  {
    "label": "GetActiveWidgetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetActiveWidgetIndex()"
  },
  {
    "label": "GetNumWidgets()",
    "kind": "Method",
    "detail": "Function (} int32)",
    "insertText": "GetNumWidgets()"
  },
  {
    "label": "GetWidget()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<SWidget>)",
    "insertText": "GetWidget(int32 SlotIndex)"
  },
  {
    "label": "GetWidgetIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetWidgetIndex(TSharedRef<SWidget> Widget)"
  },
  {
    "label": "RemoveSlot()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "RemoveSlot(TSharedRef<SWidget> WidgetToRemove)"
  },
  {
    "label": "SetActiveWidget()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveWidget(TSharedRef<SWidget> Widget)"
  },
  {
    "label": "SetActiveWidgetIndex()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetActiveWidgetIndex(GetWidgetIndex(Widget))"
  },
  {
    "label": "SetActiveWidgetIndex()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetActiveWidgetIndex(int32 Index)"
  },
  {
    "label": "ValidatePathToChild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidatePathToChild(SWidget* InChild)"
  },
  {
    "label": "Slot()",
    "kind": "Method",
    "detail": "Function (public : FSlot::FSlotArguments)",
    "insertText": "Slot()"
  },
  {
    "label": "OnArrangeChildren()",
    "kind": "Method",
    "detail": "Function (protected : void)",
    "insertText": "OnArrangeChildren(const FGeometry& AllottedGeometry, FArrangedChildren& ArrangedChildren)"
  },
  {
    "label": "ComputeDesiredSize()",
    "kind": "Method",
    "detail": "Function (FVector2D)",
    "insertText": "ComputeDesiredSize(float)"
  },
  {
    "label": "GetChildren()",
    "kind": "Method",
    "detail": "Function (FChildren*)",
    "insertText": "GetChildren()"
  },
  {
    "label": "OnSlotAdded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSlotAdded(int32 AddedIndex)"
  },
  {
    "label": "OnSlotRemoved()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "OnSlotRemoved(int32 RemovedIndex, TSharedRef<SWidget> RemovedWidget, bool bWasActiveSlot)"
  },
  {
    "label": "ComputeVolatility()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "ComputeVolatility()"
  },
  {
    "label": "GetActiveSlot()",
    "kind": "Method",
    "detail": "Function (} const FSlot*)",
    "insertText": "GetActiveSlot()"
  },
  {
    "label": "GetTypedChildren()",
    "kind": "Method",
    "detail": "Function (TPanelChildren<FSlot>&)",
    "insertText": "GetTypedChildren()"
  }
]