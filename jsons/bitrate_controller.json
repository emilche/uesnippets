[
  {
    "label": "PccBitrateController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "PccBitrateController"
  },
  {
    "label": "PccBitrateController()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "PccBitrateController(double initial_conversion_factor,\n                       double initial_dynamic_boundary,\n                       double dynamic_boundary_increment,\n                       double rtt_gradient_coefficient,\n                       double loss_coefficient,\n                       double throughput_coefficient,\n                       double throughput_power,\n                       double rtt_gradient_threshold,\n                       double delay_gradient_negative_bound)"
  },
  {
    "label": "ComputeRateUpdateForSlowStartMode()",
    "kind": "Method",
    "detail": "Function (absl::optional<DataRate>)",
    "insertText": "ComputeRateUpdateForSlowStartMode(\n      const PccMonitorInterval& monitor_interval)"
  },
  {
    "label": "ComputeRateUpdateForOnlineLearningMode()",
    "kind": "Method",
    "detail": "Function (DataRate)",
    "insertText": "ComputeRateUpdateForOnlineLearningMode(\n      const std::vector<PccMonitorInterval>& block,\n      DataRate bandwidth_estimate)"
  },
  {
    "label": "ApplyDynamicBoundary()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ApplyDynamicBoundary(double rate_change, double bitrate)"
  },
  {
    "label": "ComputeStepSize()",
    "kind": "Method",
    "detail": "Function (double)",
    "insertText": "ComputeStepSize(double utility_gradient)"
  }
]