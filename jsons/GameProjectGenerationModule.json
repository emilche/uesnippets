[
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "FModuleContextInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FModuleContextInfo"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "FTemplateCategory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTemplateCategory"
  },
  {
    "label": "FGameProjectGenerationModule",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGameProjectGenerationModule"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "dialog",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dialog"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "is"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "StartupModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "StartupModule()"
  },
  {
    "label": "ShutdownModule()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ShutdownModule()"
  },
  {
    "label": "CreateGameProjectDialog()",
    "kind": "Method",
    "detail": "Function (SWidget>)",
    "insertText": "CreateGameProjectDialog(bool bAllowProjectOpening, bool bAllowProjectCreate)"
  },
  {
    "label": "CreateNewClassDialog()",
    "kind": "Method",
    "detail": "Function (SWidget>)",
    "insertText": "CreateNewClassDialog(const UClass* InClass)"
  },
  {
    "label": "OpenAddBlueprintToProjectDialog()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OpenAddBlueprintToProjectDialog(const FAddToProjectConfig& Config)"
  },
  {
    "label": "TryMakeProjectFileWriteable()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "TryMakeProjectFileWriteable(const FString& ProjectFile)"
  },
  {
    "label": "CheckForOutOfDateGameProjectFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForOutOfDateGameProjectFile()"
  },
  {
    "label": "UpdateGameProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateGameProject(const FString& ProjectFile, const FString& EngineIdentifier, FText& OutFailReason)"
  },
  {
    "label": "UpdateCodeProject()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateCodeProject(FText& OutFailReason, FText& OutFailLog)"
  },
  {
    "label": "ProjectHasCodeFiles()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ProjectHasCodeFiles()"
  },
  {
    "label": "DetermineModuleIncludePath()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "DetermineModuleIncludePath(const FModuleContextInfo& ModuleInfo, const FString& FileRelativeTo)"
  },
  {
    "label": "IsValidBaseClassForCreation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidBaseClassForCreation(const UClass* InClass, const FModuleContextInfo& InModuleInfo)"
  },
  {
    "label": "IsValidBaseClassForCreation()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidBaseClassForCreation(const UClass* InClass, const TArray<FModuleContextInfo>& InModuleInfoArray)"
  },
  {
    "label": "GetProjectSourceDirectoryInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetProjectSourceDirectoryInfo(int32& OutNumFiles, int64& OutDirectorySize)"
  },
  {
    "label": "CheckAndWarnProjectFilenameValid()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckAndWarnProjectFilenameValid()"
  },
  {
    "label": "GenerateBasicSourceCode()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GenerateBasicSourceCode(TArray<FString>& OutCreatedFiles, FText& OutFailReason)"
  },
  {
    "label": "UpdateSupportedTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateSupportedTargetPlatforms(const FName& InPlatformName, const bool bIsSupported)"
  },
  {
    "label": "ClearSupportedTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearSupportedTargetPlatforms()"
  },
  {
    "label": "LoadTemplateCategories()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LoadTemplateCategories()"
  }
]