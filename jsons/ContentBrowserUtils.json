[
  {
    "label": "FPathPermissionList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPathPermissionList"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "SAssetView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAssetView"
  },
  {
    "label": "SFilterList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFilterList"
  },
  {
    "label": "SPathView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPathView"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FARFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FARFilter"
  },
  {
    "label": "FAssetData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetData"
  },
  {
    "label": "FContentBrowserDataFilter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserDataFilter"
  },
  {
    "label": "FContentBrowserInstanceConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserInstanceConfig"
  },
  {
    "label": "FContentBrowserItem",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserItem"
  },
  {
    "label": "FContentBrowserItemPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FContentBrowserItemPath"
  },
  {
    "label": "FPathViewConfig",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPathViewConfig"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "roots",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "roots"
  },
  {
    "label": "roots",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "roots"
  },
  {
    "label": "DisplayMessage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DisplayMessage(const FText& Message, const FSlateRect& ScreenAnchor, const TSharedRef<SWidget>& ParentContent)"
  },
  {
    "label": "GetItemReferencesText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetItemReferencesText(const TArray<FContentBrowserItem>& Items)"
  },
  {
    "label": "GetItemObjectPathText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetItemObjectPathText(const TArray<FContentBrowserItem>& Items)"
  },
  {
    "label": "GetItemPackageNameText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetItemPackageNameText(const TArray<FContentBrowserItem>& Items)"
  },
  {
    "label": "GetFolderReferencesText()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetFolderReferencesText(const TArray<FContentBrowserItem>& Folders)"
  },
  {
    "label": "CopyItemReferencesToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyItemReferencesToClipboard(const TArray<FContentBrowserItem>& ItemsToCopy)"
  },
  {
    "label": "CopyItemObjectPathToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyItemObjectPathToClipboard(const TArray<FContentBrowserItem>& ItemsToCopy)"
  },
  {
    "label": "CopyItemPackageNameToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyItemPackageNameToClipboard(const TArray<FContentBrowserItem>& ItemsToCopy)"
  },
  {
    "label": "CopyFolderReferencesToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFolderReferencesToClipboard(const TArray<FContentBrowserItem>& FoldersToCopy)"
  },
  {
    "label": "CopyFilePathsToClipboard()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFilePathsToClipboard(const TArray<FContentBrowserItem>& ItemsToCopy)"
  },
  {
    "label": "IsItemDeveloperContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemDeveloperContent(const FContentBrowserItem& InItem)"
  },
  {
    "label": "IsItemLocalizedContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemLocalizedContent(const FContentBrowserItem& InItem)"
  },
  {
    "label": "IsItemEngineContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemEngineContent(const FContentBrowserItem& InItem)"
  },
  {
    "label": "IsItemProjectContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemProjectContent(const FContentBrowserItem& InItem)"
  },
  {
    "label": "IsItemPluginContent()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemPluginContent(const FContentBrowserItem& InItem)"
  },
  {
    "label": "IsItemPluginRootFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsItemPluginRootFolder(const FContentBrowserItem& InItem)"
  },
  {
    "label": "TryGetFolderBrushAndShadowName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetFolderBrushAndShadowName(const FContentBrowserItem& InFolder, FName& OutBrushName, FName& OutShadowBrushName)"
  },
  {
    "label": "TryGetFolderBrushAndShadowNameSmall()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryGetFolderBrushAndShadowNameSmall(const FContentBrowserItem& InFolder, FName& OutBrushName, FName& OutShadowBrushName)"
  },
  {
    "label": "IsCollectionPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCollectionPath(const FString& InPath, FName* OutCollectionName = nullptr, ECollectionShareType::Type* OutCollectionShareType = nullptr)"
  },
  {
    "label": "CountPathTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountPathTypes(const TArray<FString>& InPaths, int32& OutNumAssetPaths, int32& OutNumClassPaths)"
  },
  {
    "label": "CountPathTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountPathTypes(const TArray<FName>& InPaths, int32& OutNumAssetPaths, int32& OutNumClassPaths)"
  },
  {
    "label": "CountItemTypes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CountItemTypes(const TArray<FAssetData>& InItems, int32& OutNumAssetItems, int32& OutNumClassItems)"
  },
  {
    "label": "GetExploreFolderText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetExploreFolderText()"
  },
  {
    "label": "ExploreFolders()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExploreFolders(const TArray<FContentBrowserItem>& InItems, const TSharedRef<SWidget>& InParentContent)"
  },
  {
    "label": "CanExploreFolders()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanExploreFolders(const TArray<FContentBrowserItem>& InItems)"
  },
  {
    "label": "ConvertLegacySelectionToVirtualPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLegacySelectionToVirtualPaths(TArrayView<const FAssetData> InAssets, TArrayView<const FString> InFolders, const bool InUseFolderPaths, TArray<FName>& OutVirtualPaths)"
  },
  {
    "label": "ConvertLegacySelectionToVirtualPaths()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLegacySelectionToVirtualPaths(TArrayView<const FAssetData> InAssets, TArrayView<const FString> InFolders, const bool InUseFolderPaths, TSet<FName>& OutVirtualPaths)"
  },
  {
    "label": "AppendAssetFilterToContentBrowserFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AppendAssetFilterToContentBrowserFilter(const FARFilter& InAssetFilter, const TSharedPtr<FPathPermissionList>& InAssetClassPermissionList, const TSharedPtr<FPathPermissionList>& InFolderPermissionList, FContentBrowserDataFilter& OutDataFilter)"
  },
  {
    "label": "GetCombinedFolderPermissionList()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FPathPermissionList>)",
    "insertText": "GetCombinedFolderPermissionList(const TSharedPtr<FPathPermissionList>& FolderPermissionList, const TSharedPtr<FPathPermissionList>& WritableFolderPermissionList)"
  },
  {
    "label": "CanDeleteFromAssetView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteFromAssetView(TWeakPtr<SAssetView> AssetView, FText* OutErrorMsg = nullptr)"
  },
  {
    "label": "CanRenameFromAssetView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameFromAssetView(TWeakPtr<SAssetView> AssetView, FText* OutErrorMsg = nullptr)"
  },
  {
    "label": "CanDeleteFromPathView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanDeleteFromPathView(TWeakPtr<SPathView> PathView, FText* OutErrorMsg = nullptr)"
  },
  {
    "label": "CanRenameFromPathView()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanRenameFromPathView(TWeakPtr<SPathView> PathView, FText* OutErrorMsg = nullptr)"
  },
  {
    "label": "GetInvariantPath()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetInvariantPath(const FContentBrowserItemPath& ItemPath)"
  },
  {
    "label": "GetIsFolderVisibleFlags()",
    "kind": "Method",
    "detail": "Function (EContentBrowserIsFolderVisibleFlags)",
    "insertText": "GetIsFolderVisibleFlags(const bool bDisplayEmpty)"
  },
  {
    "label": "IsFavoriteFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFavoriteFolder(const FString& FolderPath)"
  },
  {
    "label": "IsFavoriteFolder()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFavoriteFolder(const FContentBrowserItemPath& FolderPath)"
  },
  {
    "label": "AddFavoriteFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFavoriteFolder(const FString& FolderPath, bool bFlushConfig = true)"
  },
  {
    "label": "AddFavoriteFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddFavoriteFolder(const FContentBrowserItemPath& FolderPath)"
  },
  {
    "label": "RemoveFavoriteFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFavoriteFolder(const FString& FolderPath, bool bFlushConfig = true)"
  },
  {
    "label": "RemoveFavoriteFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveFavoriteFolder(const FContentBrowserItemPath& FolderPath)"
  },
  {
    "label": "AddShowPrivateContentFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddShowPrivateContentFolder(const FStringView VirtualFolderPath, const FName Owner)"
  },
  {
    "label": "RemoveShowPrivateContentFolder()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveShowPrivateContentFolder(const FStringView VirtualFolderPath, const FName Owner)"
  },
  {
    "label": "ShouldShowCustomVirtualFolderIcon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowCustomVirtualFolderIcon()"
  },
  {
    "label": "ShouldShowPluginFolderIcon()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowPluginFolderIcon()"
  },
  {
    "label": "ShouldShowRedirectors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldShowRedirectors(TSharedPtr<SFilterList> Filters)"
  },
  {
    "label": "GetContentBrowserItemAttributeFilter()",
    "kind": "Method",
    "detail": "Function (EContentBrowserItemAttributeFilter)",
    "insertText": "GetContentBrowserItemAttributeFilter(FName InstanceName)"
  },
  {
    "label": "TryGetItemFromUserProvidedPath()",
    "kind": "Method",
    "detail": "Function (FContentBrowserItem)",
    "insertText": "TryGetItemFromUserProvidedPath(FStringView RequestedPathView)"
  }
]