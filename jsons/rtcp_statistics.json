[
  {
    "label": "RtcpPacketTypeCounter",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "RtcpPacketTypeCounter"
  },
  {
    "label": "RtcpPacketTypeCounterObserver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcpPacketTypeCounterObserver"
  },
  {
    "label": "RtcpCnameCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "RtcpCnameCallback"
  },
  {
    "label": "RtcpPacketTypeCounter()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_RTP_RTCP_INCLUDE_RTCP_STATISTICS_H_ # define MODULES_RTP_RTCP_INCLUDE_RTCP_STATISTICS_H_ # include<stdint . h> # include \" absl / strings / string_view . h \" namespace webrtc { struct RtcpPacketTypeCounter {)",
    "insertText": "RtcpPacketTypeCounter() : nack_packets(0), fir_packets(0), pli_packets(0), nack_requests(0), unique_nack_requests(0)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Add(const RtcpPacketTypeCounter& other)"
  },
  {
    "label": "Subtract()",
    "kind": "Method",
    "detail": "Function (nack_packets + = other . nack_packets ; fir_packets + = other . fir_packets ; pli_packets + = other . pli_packets ; nack_requests + = other . nack_requests ; unique_nack_requests + = other . unique_nack_requests ; } void)",
    "insertText": "Subtract(const RtcpPacketTypeCounter& other)"
  },
  {
    "label": "UniqueNackRequestsInPercent()",
    "kind": "Method",
    "detail": "Function (nack_packets - = other . nack_packets ; fir_packets - = other . fir_packets ; pli_packets - = other . pli_packets ; nack_requests - = other . nack_requests ; unique_nack_requests - = other . unique_nack_requests ; } int)",
    "insertText": "UniqueNackRequestsInPercent()"
  },
  {
    "label": "RtcpPacketTypeCounterObserver()",
    "kind": "Method",
    "detail": "Function (} uint32_t nack_packets ; uint32_t fir_packets ; uint32_t pli_packets ; uint32_t nack_requests ; uint32_t unique_nack_requests ; } ; class RtcpPacketTypeCounterObserver { public : ~)",
    "insertText": "RtcpPacketTypeCounterObserver()"
  },
  {
    "label": "RtcpPacketTypesCounterUpdated()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RtcpPacketTypesCounterUpdated(uint32_t ssrc, const RtcpPacketTypeCounter& packet_counter)"
  },
  {
    "label": "RtcpCnameCallback()",
    "kind": "Method",
    "detail": "Function (} ; class RtcpCnameCallback { public : ~)",
    "insertText": "RtcpCnameCallback()"
  },
  {
    "label": "OnCname()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCname(uint32_t ssrc, absl::string_view cname)"
  }
]