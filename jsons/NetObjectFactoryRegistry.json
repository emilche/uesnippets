[
  {
    "label": "FNetObjectFactoryRegistry",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FNetObjectFactoryRegistry"
  },
  {
    "label": "FFactoryData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFactoryData"
  },
  {
    "label": "RegisterFactory()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ArrayView . h \" # include \" UObject / NameTypes . h \" # ifndef UE_IRIS_MAX_NETOBJECT_FACTORIES # define UE_IRIS_MAX_NETOBJECT_FACTORIES 8 # endif namespace UE::Net { typedef uint8 FNetObjectFactoryId ; enum { InvalidNetObjectFactoryId = MAX_uint8 } ; class FNetObjectFactoryRegistry { public : void)",
    "insertText": "RegisterFactory(UClass* FactoryClass, FName FactoryName)"
  },
  {
    "label": "UnregisterFactory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterFactory(FName FactoryName)"
  },
  {
    "label": "GetFactoryIdFromName()",
    "kind": "Method",
    "detail": "Function (FNetObjectFactoryId)",
    "insertText": "GetFactoryIdFromName(FName FactoryName)"
  },
  {
    "label": "SetFactoryRegistrationAllowed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFactoryRegistrationAllowed(bool bAllowed)"
  },
  {
    "label": "GetMaxBits()",
    "kind": "Method",
    "detail": "Function (uint32 MaxFactories = UE_IRIS_MAX_NETOBJECT_FACTORIES ; uint32)",
    "insertText": "GetMaxBits()"
  },
  {
    "label": "GetRegisteredFactories()",
    "kind": "Method",
    "detail": "Function (} struct FFactoryData { FName Name ; UClass* NetFactoryClass = nullptr ; FNetObjectFactoryId Id = InvalidNetObjectFactoryId ; } ; const TConstArrayView<FFactoryData>)",
    "insertText": "GetRegisteredFactories()"
  },
  {
    "label": "FNetObjectFactoryRegistry()",
    "kind": "Method",
    "detail": "Function (} private :)",
    "insertText": "FNetObjectFactoryRegistry()"
  },
  {
    "label": "GetNumBits()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumBits(uint32 Number)"
  }
]