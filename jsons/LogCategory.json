[
  {
    "label": "FLogCategoryBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogCategoryBase"
  },
  {
    "label": "FLogSuppressionImplementation",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogSuppressionImplementation"
  },
  {
    "label": "FLogScopedVerbosityOverride",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLogScopedVerbosityOverride"
  },
  {
    "label": "FLogCategory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLogCategory"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" Logging / LogVerbosity . h \" # include \" UObject / NameTypes . h \" # define # if)",
    "insertText": "defined(UE_LOG_LAZY_CATEGORY_NAMES)"
  },
  {
    "label": "FLogCategoryBase()",
    "kind": "Method",
    "detail": "Function (# else using FLogCategoryName = FName ; # endif struct FLogCategoryBase {)",
    "insertText": "FLogCategoryBase(const FLogCategoryName& CategoryName, ELogVerbosity::Type DefaultVerbosity, ELogVerbosity::Type CompileTimeVerbosity)"
  },
  {
    "label": "FLogCategoryBase()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLogCategoryBase()"
  },
  {
    "label": "PostTrigger()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "PostTrigger(ELogVerbosity::Type VerbosityLevel)"
  },
  {
    "label": "GetCategoryName()",
    "kind": "Method",
    "detail": "Function (const FLogCategoryName&)",
    "insertText": "GetCategoryName()"
  },
  {
    "label": "SetVerbosity()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetVerbosity(ELogVerbosity::Type Verbosity)"
  },
  {
    "label": "GetCompileTimeVerbosity()",
    "kind": "Method",
    "detail": "Function (ELogVerbosity::Type)",
    "insertText": "GetCompileTimeVerbosity()"
  },
  {
    "label": "static_assert()",
    "kind": "Method",
    "detail": "Function (ELogVerbosity::Type Verbosity ; bool DebugBreakOnLog ; uint8 DefaultVerbosity ; const ELogVerbosity::Type CompileTimeVerbosity ; const FLogCategoryName CategoryName ; } ; template<ELogVerbosity::Type InDefaultVerbosity,ELogVerbosity::Type InCompileTimeVerbosity> struct FLogCategory : public FLogCategoryBase {)",
    "insertText": "static_assert((InDefaultVerbosity & ELogVerbosity::VerbosityMask) < ELogVerbosity::NumVerbosity, \"Bogus default verbosity.\")"
  }
]