[
  {
    "label": "EMemZeroed",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMemZeroed"
  },
  {
    "label": "EMemOned",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EMemOned"
  },
  {
    "label": "FPageAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPageAllocator"
  },
  {
    "label": "FMemStackBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemStackBase"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMemMark",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemMark"
  },
  {
    "label": "FTaggedMemory",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTaggedMemory"
  },
  {
    "label": "FMemMark",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemMark"
  },
  {
    "label": "CORE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "CORE_API"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "TMemStackAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TMemStackAllocator"
  },
  {
    "label": "ForElementType",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ForElementType"
  },
  {
    "label": "TAllocatorTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "TAllocatorTraits"
  },
  {
    "label": "FMemMark",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMemMark"
  },
  {
    "label": "Free()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Free(void* Mem)"
  },
  {
    "label": "FreeSmall()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeSmall(void* Mem)"
  },
  {
    "label": "BytesUsed()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "BytesUsed()"
  },
  {
    "label": "BytesFree()",
    "kind": "Method",
    "detail": "Function (uint64)",
    "insertText": "BytesFree()"
  },
  {
    "label": "LatchProtectedMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LatchProtectedMode()"
  },
  {
    "label": "UpdateStats()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateStats()"
  },
  {
    "label": "FMemStackBase()",
    "kind": "Method",
    "detail": "Function (CORE_API)",
    "insertText": "FMemStackBase(EPageSize PageSize = EPageSize::Small)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, FMemStackBase& Mem, int32 Count)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, std::align_val_t Align, FMemStackBase& Mem, int32 Count)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, FMemStackBase& Mem, EMemZeroed Tag, int32 Count)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, std::align_val_t Align, FMemStackBase& Mem, EMemZeroed Tag, int32 Count)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, FMemStackBase& Mem, EMemOned Tag, int32 Count)"
  },
  {
    "label": "new()",
    "kind": "Method",
    "detail": "Function (operator)",
    "insertText": "new(size_t Size, std::align_val_t Align, FMemStackBase& Mem, EMemOned Tag, int32 Count)"
  },
  {
    "label": "AllocateNewChunk()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AllocateNewChunk( int32 MinSize )"
  },
  {
    "label": "FreeChunks()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FreeChunks( FTaggedMemory* NewTopChunk )"
  },
  {
    "label": "OnInvalidMemStackAllocatorNum()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnInvalidMemStackAllocatorNum(int32 NewNum, SIZE_T NumBytesPerElement)"
  },
  {
    "label": "DefaultCalculateSlackReserve()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackReserve(NewMax, NumBytesPerElement, false, Alignment)"
  },
  {
    "label": "DefaultCalculateSlackShrink()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackShrink(NewMax, CurrentMax, NumBytesPerElement, false, Alignment)"
  },
  {
    "label": "DefaultCalculateSlackGrow()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "DefaultCalculateSlackGrow(NewMax, CurrentMax, NumBytesPerElement, false, Alignment)"
  }
]