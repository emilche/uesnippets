[
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "UAnimInstance",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimInstance"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "UBlendProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBlendProfile"
  },
  {
    "label": "USkeletalMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "USkeletalMeshComponent"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "for",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "for"
  },
  {
    "label": "FCompositeSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompositeSection"
  },
  {
    "label": "UAnimMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMetaData"
  },
  {
    "label": "UAnimMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMetaData"
  },
  {
    "label": "FSlotAnimationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlotAnimationTrack"
  },
  {
    "label": "FBranchingPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBranchingPoint"
  },
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FBranchingPointMarker",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBranchingPointMarker"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "to",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "to"
  },
  {
    "label": "FMontageSubStepper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMontageSubStepper"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "FMontageBlendSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMontageBlendSettings"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "FMontageSubStepper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMontageSubStepper"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "FMontageSubStepper",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMontageSubStepper"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "FRootMotionMovementParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionMovementParams"
  },
  {
    "label": "FRootMotionMovementParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRootMotionMovementParams"
  },
  {
    "label": "has",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "has"
  },
  {
    "label": "UAnimMontage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontage"
  },
  {
    "label": "FAnimMontageInstance",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimMontageInstance"
  },
  {
    "label": "UAnimMontageFactory",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMontageFactory"
  },
  {
    "label": "FMarkerSyncData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMarkerSyncData"
  },
  {
    "label": "FSlotAnimationTrack",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlotAnimationTrack"
  },
  {
    "label": "FBranchingPoint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBranchingPoint"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "UAnimMetaData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimMetaData"
  },
  {
    "label": "FSlotAnimationTrack()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FSlotAnimationTrack()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(const struct FAnimMontageInstance& InAnimInstance)"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (EMontageSubStepResult)",
    "insertText": "Advance(float& InOut_P_Original, const FBranchingPointMarker** OutBranchingPointMarkerPtr)"
  },
  {
    "label": "GetRemainingPlayTimeToSectionEnd()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRemainingPlayTimeToSectionEnd(const float In_P_Original)"
  },
  {
    "label": "ConditionallyUpdateTimeStretchCurveCachedData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConditionallyUpdateTimeStretchCurveCachedData()"
  },
  {
    "label": "FindMontagePosition_Target()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "FindMontagePosition_Target(float In_P_Original)"
  },
  {
    "label": "FindMontagePosition_Original()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "FindMontagePosition_Original(float In_P_Target)"
  },
  {
    "label": "FMontageBlendSettings()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMontageBlendSettings()"
  },
  {
    "label": "FMontageBlendSettings()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMontageBlendSettings(float BlendTime)"
  },
  {
    "label": "FMontageBlendSettings()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FMontageBlendSettings(const FAlphaBlendArgs& BlendArgs)"
  },
  {
    "label": "MontageSync_Follow()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MontageSync_Follow(struct FAnimMontageInstance* NewLeaderMontageInstance)"
  },
  {
    "label": "MontageSync_StopLeading()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MontageSync_StopLeading()"
  },
  {
    "label": "MontageSync_StopFollowing()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MontageSync_StopFollowing()"
  },
  {
    "label": "MontageSync_PreUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MontageSync_PreUpdate()"
  },
  {
    "label": "MontageSync_PostUpdate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MontageSync_PostUpdate()"
  },
  {
    "label": "MontageSync_PerformSyncToLeader()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MontageSync_PerformSyncToLeader()"
  },
  {
    "label": "InitializeBlend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeBlend(const FAlphaBlend& InAlphaBlend)"
  },
  {
    "label": "ValidateInstanceAfterNotifyState()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ValidateInstanceAfterNotifyState(const TWeakObjectPtr<UAnimInstance>& InAnimInstance, const UAnimNotifyState* InNotifyStateClass)"
  },
  {
    "label": "FAnimMontageInstance()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAnimMontageInstance()"
  },
  {
    "label": "FAnimMontageInstance()",
    "kind": "Method",
    "detail": "Function (ENGINE_API)",
    "insertText": "FAnimMontageInstance(UAnimInstance * InAnimInstance)"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play(float InPlayRate = 1.f)"
  },
  {
    "label": "Play()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Play(float InPlayRate, const FMontageBlendSettings& BlendInSettings)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(const FAlphaBlend& InBlendOut, bool bInterrupt=true)"
  },
  {
    "label": "Stop()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Stop(const FMontageBlendSettings& InBlendOutSettings, bool bInterrupt=true)"
  },
  {
    "label": "Pause()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Pause()"
  },
  {
    "label": "Initialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize(class UAnimMontage * InMontage)"
  },
  {
    "label": "JumpToSectionName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "JumpToSectionName(FName const & SectionName, bool bEndOfSection = false)"
  },
  {
    "label": "SetNextSectionName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetNextSectionName(FName const & SectionName, FName const & NewNextSectionName)"
  },
  {
    "label": "SetNextSectionID()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetNextSectionID(int32 const & SectionID, int32 const & NewNextSectionID)"
  },
  {
    "label": "Terminate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Terminate()"
  },
  {
    "label": "UpdateWeight()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateWeight(float DeltaTime)"
  },
  {
    "label": "EditorOnly_PreAdvance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EditorOnly_PreAdvance()"
  },
  {
    "label": "Advance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Advance(float DeltaTime, struct FRootMotionMovementParams * OutRootMotionParams, bool bBlendRootMotion)"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects( FReferenceCollector& Collector )"
  },
  {
    "label": "HandleEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleEvents(float PreviousTrackPos, float CurrentTrackPos, const FBranchingPointMarker* BranchingPointMarker)"
  },
  {
    "label": "OnMontagePositionChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnMontagePositionChanged(FName const & ToSectionName)"
  },
  {
    "label": "UpdateActiveStateBranchingPoints()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UpdateActiveStateBranchingPoints(float CurrentTrackPosition)"
  },
  {
    "label": "BranchingPointEventHandler()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BranchingPointEventHandler(const FBranchingPointMarker* BranchingPointMarker)"
  },
  {
    "label": "RefreshNextPrevSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshNextPrevSections()"
  },
  {
    "label": "FAlphaBlendArgs()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FAlphaBlendArgs(BlendIn)"
  },
  {
    "label": "FAlphaBlendArgs()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FAlphaBlendArgs(BlendOut)"
  },
  {
    "label": "CalculateSequenceLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "CalculateSequenceLength()"
  },
  {
    "label": "UpdateLinkableElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLinkableElements()"
  },
  {
    "label": "UpdateLinkableElements()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLinkableElements(int32 SlotIdx, int32 SegmentIdx)"
  },
  {
    "label": "GetSectionTimeLeftFromPos()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetSectionTimeLeftFromPos(float Position)"
  },
  {
    "label": "AddAnimCompositeSection()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "AddAnimCompositeSection(FName InSectionName, float StartPos)"
  },
  {
    "label": "DeleteAnimCompositeSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DeleteAnimCompositeSection(int32 SectionIndex)"
  },
  {
    "label": "SortAnimCompositeSectionByPos()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortAnimCompositeSectionByPos()"
  },
  {
    "label": "PropagateChanges()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PropagateChanges()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnMontageChangedMulticaster)"
  },
  {
    "label": "RegisterOnMontageChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterOnMontageChanged(const FOnMontageChanged& Delegate)"
  },
  {
    "label": "UnregisterOnMontageChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterOnMontageChanged(void* Unregister)"
  },
  {
    "label": "ConvertBranchingPointsToAnimNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertBranchingPointsToAnimNotifies()"
  },
  {
    "label": "RefreshBranchingPointMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshBranchingPointMarkers()"
  },
  {
    "label": "AddBranchingPointMarker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddBranchingPointMarker(FBranchingPointMarker Marker, TMap<float, FAnimNotifyEvent*>& TriggerTimes)"
  },
  {
    "label": "FilterOutNotifyBranchingPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterOutNotifyBranchingPoints(TArray<const FAnimNotifyEvent*>& InAnimNotifies)"
  },
  {
    "label": "FilterOutNotifyBranchingPoints()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterOutNotifyBranchingPoints(TArray<FAnimNotifyEventReference>& InAnimNotifies)"
  },
  {
    "label": "CollectMarkers()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CollectMarkers()"
  },
  {
    "label": "BakeTimeStretchCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BakeTimeStretchCurve()"
  }
]