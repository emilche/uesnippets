[
  {
    "label": "pas_heap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "pas_heap"
  },
  {
    "label": "verse_heap_object_set",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "verse_heap_object_set"
  },
  {
    "label": "verse_heap_page_header",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "verse_heap_page_header"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (# ifndef VERSE_HEAP_UE_H # define VERSE_HEAP_UE_H # include \" pas_thread_local_cache_node_ue . h \" # include \" verse_heap_config_ue . h \" # include<stddef . h> # ifdef __cplusplus \" C \" { # endif typedef struct pas_heap pas_heap ; typedef struct verse_heap_object_set verse_heap_object_set ; typedef struct verse_heap_page_header verse_heap_page_header ; verse_heap_object_set verse_heap_all_objects ; size_t verse_heap_live_bytes ; size_t verse_heap_swept_bytes ; size_t verse_heap_live_bytes_trigger_threshold ;)",
    "insertText": "void(*verse_heap_live_bytes_trigger_callback)(void)"
  },
  {
    "label": "verse_heap_create()",
    "kind": "Method",
    "detail": "Function (pas_heap*)",
    "insertText": "verse_heap_create(size_t min_align, size_t size, size_t alignment)"
  },
  {
    "label": "verse_heap_did_become_ready_for_allocation()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_did_become_ready_for_allocation(void)"
  },
  {
    "label": "verse_heap_get_base()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_heap_get_base(pas_heap* heap)"
  },
  {
    "label": "verse_heap_add_to_set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_add_to_set(pas_heap* heap, verse_heap_object_set* set)"
  },
  {
    "label": "verse_heap_try_allocate()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_heap_try_allocate(pas_heap* heap, size_t size)"
  },
  {
    "label": "verse_heap_allocate()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_heap_allocate(pas_heap* heap, size_t size)"
  },
  {
    "label": "verse_heap_try_allocate_with_alignment()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_heap_try_allocate_with_alignment(pas_heap* heap, size_t size, size_t alignment)"
  },
  {
    "label": "verse_heap_allocate_with_alignment()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "verse_heap_allocate_with_alignment(pas_heap* heap, size_t size, size_t alignment)"
  },
  {
    "label": "verse_heap_start_allocating_black_before_handshake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_start_allocating_black_before_handshake(void)"
  },
  {
    "label": "verse_heap_start_sweep_before_handshake()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_start_sweep_before_handshake(void)"
  },
  {
    "label": "verse_heap_start_sweep_after_handshake()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "verse_heap_start_sweep_after_handshake(void)"
  },
  {
    "label": "verse_heap_sweep_range()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_sweep_range(size_t begin, size_t end)"
  },
  {
    "label": "verse_heap_end_sweep()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_end_sweep(void)"
  },
  {
    "label": "verse_heap_get_thread_local_cache_node()",
    "kind": "Method",
    "detail": "Function (pas_thread_local_cache_node*)",
    "insertText": "verse_heap_get_thread_local_cache_node(void)"
  },
  {
    "label": "verse_heap_thread_local_cache_node_stop_local_allocators()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "verse_heap_thread_local_cache_node_stop_local_allocators(pas_thread_local_cache_node* node, uint64_t expected_version)"
  },
  {
    "label": "verse_heap_find_allocated_object_start()",
    "kind": "Method",
    "detail": "Function (uintptr_t)",
    "insertText": "verse_heap_find_allocated_object_start(uintptr_t inner_ptr)"
  },
  {
    "label": "verse_heap_get_allocation_size()",
    "kind": "Method",
    "detail": "Function (size_t)",
    "insertText": "verse_heap_get_allocation_size(uintptr_t inner_ptr)"
  },
  {
    "label": "verse_heap_owns_address()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "verse_heap_owns_address(uintptr_t ptr)"
  },
  {
    "label": "verse_heap_get_page_header()",
    "kind": "Method",
    "detail": "Function (verse_heap_page_header*)",
    "insertText": "verse_heap_get_page_header(uintptr_t inner_ptr)"
  },
  {
    "label": "verse_heap_get_heap()",
    "kind": "Method",
    "detail": "Function (pas_heap*)",
    "insertText": "verse_heap_get_heap(uintptr_t inner_ptr)"
  }
]