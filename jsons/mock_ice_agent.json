[
  {
    "label": "MockIceAgent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MockIceAgent"
  },
  {
    "label": "MockIceAgent()",
    "kind": "Method",
    "detail": "Function (# ifndef P2P_BASE_MOCK_ICE_AGENT_H_ # define P2P_BASE_MOCK_ICE_AGENT_H_ # include<vector> # include \" p2p / base / connection . h \" # include \" p2p / base / ice_agent_interface . h \" # include \" p2p / base / ice_switch_reason . h \" # include \" p2p / base / transport_description . h \" # include \" test / gmock . h \" namespace cricket { class MockIceAgent : public IceAgentInterface { public : ~)",
    "insertText": "MockIceAgent()"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(int64_t, GetLastPingSentMs, (), (override, const))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(IceRole, GetIceRole, (), (override, const))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, OnStartedPinging, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, UpdateConnectionStates, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, UpdateState, (), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, ForgetLearnedStateForConnections, (rtc::ArrayView<const Connection* const>), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SendPingRequest, (const Connection*), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(void, SwitchSelectedConnection, (const Connection*, IceSwitchReason), (override))"
  },
  {
    "label": "MOCK_METHOD()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MOCK_METHOD(bool, PruneConnections, (rtc::ArrayView<const Connection* const>), (override))"
  }
]