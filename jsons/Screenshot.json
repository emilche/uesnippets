[
  {
    "label": "FScreenshot",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FScreenshot"
  },
  {
    "label": "IScreenshotProvider",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IScreenshotProvider"
  },
  {
    "label": "InvalidScreenshotId()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" Templates / SharedPointer . h \" # include \" TraceServices / Model / AnalysisSession . h \" # include \" UObject / NameTypes . h \" namespace TraceServices { struct FScreenshot { uint32 Id ; FString Name ; double Timestamp ; uint32 Width ; uint32 Height ; uint32 ChunkNum ; uint32 Size ; TArray<uint8> Data ; const uint32)",
    "insertText": "InvalidScreenshotId(uint32)"
  },
  {
    "label": "IScreenshotProvider()",
    "kind": "Method",
    "detail": "Function (} ; class IScreenshotProvider : public IProvider { public : ~)",
    "insertText": "IScreenshotProvider()"
  },
  {
    "label": "GetScreenshot()",
    "kind": "Method",
    "detail": "Function (const TSharedPtr<const FScreenshot>)",
    "insertText": "GetScreenshot(uint32 Id)"
  },
  {
    "label": "GetScreenshotProviderName()",
    "kind": "Method",
    "detail": "Function (} ; FName)",
    "insertText": "GetScreenshotProviderName()"
  },
  {
    "label": "ReadScreenshotProvider()",
    "kind": "Method",
    "detail": "Function (const IScreenshotProvider&)",
    "insertText": "ReadScreenshotProvider(const IAnalysisSession& Session)"
  }
]