[
  {
    "label": "APlayerController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "APlayerController"
  },
  {
    "label": "FObjectReplicator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectReplicator"
  },
  {
    "label": "UDemoNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetDriver"
  },
  {
    "label": "UDemoNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDemoNetConnection"
  },
  {
    "label": "UNetDriver",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetDriver"
  },
  {
    "label": "UNetConnection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNetConnection"
  },
  {
    "label": "FSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSocket"
  },
  {
    "label": "FInternetAddr",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FInternetAddr"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / NetConnection . h \" # include \" ReplayTypes . h \" # include \" DemoNetConnection . generated . h \" class APlayerController ; class FObjectReplicator ; class UDemoNetDriver ;)",
    "insertText": "UCLASS(transient, config=Engine, MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: ENGINE_API UDemoNetConnection(const FObjectInitializer& ObjectInitializer)"
  },
  {
    "label": "InitConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitConnection(class UNetDriver* InDriver, EConnectionState InState, const FURL& InURL, int32 InConnectionSpeed = 0, int32 InMaxPacket=0)"
  },
  {
    "label": "LowLevelGetRemoteAddress()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LowLevelGetRemoteAddress(bool bAppendPort = false)"
  },
  {
    "label": "LowLevelDescribe()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "LowLevelDescribe()"
  },
  {
    "label": "LowLevelSend()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LowLevelSend(void* Data, int32 CountBits, FOutPacketTraits& Traits)"
  },
  {
    "label": "IsNetReady()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "IsNetReady(bool Saturate)"
  },
  {
    "label": "FlushNet()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FlushNet(bool bIgnoreSimulation = false)"
  },
  {
    "label": "HandleClientPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleClientPlayer(APlayerController* PC, class UNetConnection* NetConnection)"
  },
  {
    "label": "GetRemoteAddr()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<const FInternetAddr>)",
    "insertText": "GetRemoteAddr()"
  },
  {
    "label": "ClientHasInitializedLevel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ClientHasInitializedLevel(const ULevel* TestLevel)"
  },
  {
    "label": "CreateReplicatorForNewActorChannel()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FObjectReplicator>)",
    "insertText": "CreateReplicatorForNewActorChannel(UObject* Object)"
  },
  {
    "label": "RemoteAddressToString()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "RemoteAddressToString()"
  },
  {
    "label": "NotifyActorNetGUID()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "NotifyActorNetGUID(UActorChannel* Channel)"
  },
  {
    "label": "NotifyActorChannelCleanedUp()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyActorChannelCleanedUp(UActorChannel* Channel, EChannelCloseReason CloseReason)"
  },
  {
    "label": "InitRemoteConnection()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitRemoteConnection(UNetDriver* InDriver, class FSocket* InSocket, const FURL& InURL, const class FInternetAddr& InRemoteAddr, EConnectionState InState, int32 InMaxPacket = 0, int32 InPacketOverhead = 0)"
  },
  {
    "label": "InitLocalConnection()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "InitLocalConnection(UNetDriver* InDriver, class FSocket* InSocket, const FURL& InURL, EConnectionState InState, int32 InMaxPacket = 0, int32 InPacketOverhead = 0)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (} public : void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "GetDriver()",
    "kind": "Method",
    "detail": "Function (} const class UDemoNetDriver*)",
    "insertText": "GetDriver()"
  },
  {
    "label": "GetOpenChannelMap()",
    "kind": "Method",
    "detail": "Function (} TMap<FNetworkGUID,UActorChannel*>&)",
    "insertText": "GetOpenChannelMap()"
  },
  {
    "label": "QueueNetStartupActorForRewind()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "QueueNetStartupActorForRewind(AActor* Actor)"
  },
  {
    "label": "TrackSendForProfiler()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "TrackSendForProfiler(const void* Data, int32 NumBytes)"
  }
]