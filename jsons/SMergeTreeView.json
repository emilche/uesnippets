[
  {
    "label": "FSCSDiff",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSCSDiff"
  },
  {
    "label": "SMergeTreeView",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMergeTreeView"
  },
  {
    "label": "SMergeTreeView()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" BlueprintMergeData . h \" # include \" DiffUtils . h \" class FSCSDiff ; class SMergeTreeView : public SCompoundWidget { public : ~)",
    "insertText": "SMergeTreeView()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_BEGIN_ARGS(SMergeTreeView)"
  },
  {
    "label": "SLATE_END_ARGS()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_END_ARGS() void Construct( const FArguments InArgs , const FBlueprintMergeData& InData , FOnMergeNodeSelected SelectionCallback , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutTreeEntries , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutRealDifferences , TArray< TSharedPtr<FBlueprintDifferenceTreeEntry> >& OutConflicts)"
  },
  {
    "label": "HighlightDifference()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HighlightDifference(FSCSIdentifier VarName, FPropertySoftPath Property)"
  },
  {
    "label": "GetRemoteView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSCSDiff>&)",
    "insertText": "GetRemoteView()"
  },
  {
    "label": "GetBaseView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSCSDiff>&)",
    "insertText": "GetBaseView()"
  },
  {
    "label": "GetLocalView()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSCSDiff>&)",
    "insertText": "GetLocalView()"
  }
]