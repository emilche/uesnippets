[
  {
    "label": "AnalyzingVideoSinksHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AnalyzingVideoSinksHelper"
  },
  {
    "label": "AddConfig()",
    "kind": "Method",
    "detail": "Function (# ifndef TEST_PC_E2E_ANALYZER_VIDEO_ANALYZING_VIDEO_SINKS_HELPER_H_ # define TEST_PC_E2E_ANALYZER_VIDEO_ANALYZING_VIDEO_SINKS_HELPER_H_ # include<list> # include<map> # include<memory> # include<set> # include<string> # include<utility> # include \" absl / strings / string_view . h \" # include \" absl / types / optional . h \" # include \" api / test / pclf / media_configuration . h \" # include \" api / test / video / video_frame_writer . h \" # include \" rtc_base / synchronization / mutex . h \" # include \" rtc_base / thread_annotations . h \" namespace webrtc { namespace webrtc_pc_e2e { class AnalyzingVideoSinksHelper { public : void)",
    "insertText": "AddConfig(absl::string_view sender_peer_name, VideoConfig config)"
  },
  {
    "label": "GetPeerAndConfig()",
    "kind": "Method",
    "detail": "Function (absl::optional<std::pair<std::string,VideoConfig>>)",
    "insertText": "GetPeerAndConfig(absl::string_view stream_label)"
  },
  {
    "label": "RemoveConfig()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveConfig(absl::string_view stream_label)"
  },
  {
    "label": "AddVideoWriter()",
    "kind": "Method",
    "detail": "Function (test::VideoFrameWriter*)",
    "insertText": "AddVideoWriter(std::unique_ptr<test::VideoFrameWriter> video_writer)"
  },
  {
    "label": "CloseAndRemoveVideoWriters()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CloseAndRemoveVideoWriters(std::set<test::VideoFrameWriter*> writers_to_close)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "RTC_GUARDED_BY()",
    "kind": "Method",
    "detail": "Function (private : Mutex mutex_ ; std::map<std::string,std::pair<std::string,VideoConfig>> video_configs_)",
    "insertText": "RTC_GUARDED_BY(mutex_)"
  }
]