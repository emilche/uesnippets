[
  {
    "label": "TaskBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TaskBase"
  },
  {
    "label": "Task",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "Task"
  },
  {
    "label": "TaskBase()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreTypes . h \" # include \" LC_CriticalSection . h \" # include \" LC_Platform . h \" # include<functional> namespace scheduler { class TaskBase { public :)",
    "insertText": "TaskBase(TaskBase* parent)"
  },
  {
    "label": "TaskBase()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "TaskBase(void)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Execute(void)"
  },
  {
    "label": "IsFinished()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsFinished(void)"
  },
  {
    "label": "DoExecute()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "DoExecute(void)"
  },
  {
    "label": "OnChildAttach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildAttach(void)"
  },
  {
    "label": "OnChildDetach()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnChildDetach(void)"
  },
  {
    "label": "LC_DISABLE_COPY()",
    "kind": "Method",
    "detail": "Function (TaskBase* const m_parent ; unsigned int m_openTasks ; CriticalSection m_taskCS ;)",
    "insertText": "LC_DISABLE_COPY(TaskBase)"
  },
  {
    "label": "LC_DISABLE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_ASSIGNMENT(TaskBase)"
  },
  {
    "label": "LC_DISABLE_MOVE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_MOVE(TaskBase)"
  },
  {
    "label": "LC_DISABLE_MOVE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_MOVE_ASSIGNMENT(TaskBase)"
  },
  {
    "label": "Task()",
    "kind": "Method",
    "detail": "Function (} ; template<R> class Task : public TaskBase { public : template<F>)",
    "insertText": "Task(TaskBase* parent, const F& function) : TaskBase(parent) , m_function(function) , m_result()"
  },
  {
    "label": "Task()",
    "kind": "Method",
    "detail": "Function (} template<F>)",
    "insertText": "Task(const F& function) : TaskBase(nullptr) , m_function(function) , m_result()"
  },
  {
    "label": "Task()",
    "kind": "Method",
    "detail": "Function (} ~)",
    "insertText": "Task(void)"
  },
  {
    "label": "GetResult()",
    "kind": "Method",
    "detail": "Function (} R)",
    "insertText": "GetResult(void)"
  },
  {
    "label": "m_function()",
    "kind": "Method",
    "detail": "Function (m_result =)",
    "insertText": "m_function()"
  },
  {
    "label": "R()",
    "kind": "Method",
    "detail": "Function (} std::function<)",
    "insertText": "R(void)"
  },
  {
    "label": "LC_DISABLE_COPY()",
    "kind": "Method",
    "detail": "Function (R m_result ;)",
    "insertText": "LC_DISABLE_COPY(Task)"
  },
  {
    "label": "LC_DISABLE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_ASSIGNMENT(Task)"
  },
  {
    "label": "LC_DISABLE_MOVE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_MOVE(Task)"
  },
  {
    "label": "LC_DISABLE_MOVE_ASSIGNMENT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "LC_DISABLE_MOVE_ASSIGNMENT(Task)"
  }
]