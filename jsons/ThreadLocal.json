[
  {
    "label": "ThreadLocalImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadLocalImpl"
  },
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "ThreadLocal",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ThreadLocal"
  },
  {
    "label": "sizeof()",
    "kind": "Method",
    "detail": "Function (# ifndef LLVM_SUPPORT_THREADLOCAL_H # define LLVM_SUPPORT_THREADLOCAL_H # include \" llvm / Support / DataTypes . h \" # include \" llvm / Support / Threading . h \" # include<cassert> namespace llvm { namespace sys { class ThreadLocalImpl { typedef uint64_t ThreadLocalDataTy ; union { char data [)",
    "insertText": "sizeof(ThreadLocalDataTy)"
  },
  {
    "label": "ThreadLocalImpl()",
    "kind": "Method",
    "detail": "Function (ThreadLocalDataTy align_data ; } ; public :)",
    "insertText": "ThreadLocalImpl()"
  },
  {
    "label": "setInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInstance(const void* d)"
  },
  {
    "label": "getInstance()",
    "kind": "Method",
    "detail": "Function (void*)",
    "insertText": "getInstance()"
  },
  {
    "label": "removeInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "removeInstance()"
  },
  {
    "label": "ThreadLocal()",
    "kind": "Method",
    "detail": "Function (} ; template<class T> class ThreadLocal : public ThreadLocalImpl { public :)",
    "insertText": "ThreadLocal() : ThreadLocalImpl()"
  },
  {
    "label": "get()",
    "kind": "Method",
    "detail": "Function (} T*)",
    "insertText": "get()"
  },
  {
    "label": "set()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "set(T* d)"
  },
  {
    "label": "setInstance()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "setInstance(d)"
  },
  {
    "label": "erase()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "erase()"
  }
]