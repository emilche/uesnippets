[
  {
    "label": "UAnimationAsset",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationAsset"
  },
  {
    "label": "IAnimationSequenceBrowser",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimationSequenceBrowser"
  },
  {
    "label": "SelectAsset()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Widgets / SCompoundWidget . h \" class UAnimationAsset ; class IAnimationSequenceBrowser : public SCompoundWidget { public : void)",
    "insertText": "SelectAsset(UAnimationAsset* InAsset)"
  },
  {
    "label": "AddToHistory()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddToHistory(UAnimationAsset* AnimAsset)"
  },
  {
    "label": "FilterBySkeletonNotify()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FilterBySkeletonNotify(const FName& InNotifyName)"
  }
]