[
  {
    "label": "FClassDragDropOp",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FClassDragDropOp"
  },
  {
    "label": "DRAG_DROP_OPERATOR_TYPE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Input / DragAndDrop . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SBoxPanel . h \" # include \" Widgets / Text / STextBlock . h \" # include \" Styling / AppStyle . h \" # include \" Widgets / Layout / SBorder . h \" # include \" Widgets / Images / SImage . h \" # include \" Styling / SlateIconFinder . h \" class FClassDragDropOp : public FDragDropOperation { public :)",
    "insertText": "DRAG_DROP_OPERATOR_TYPE(FClassDragDropOp, FDragDropOperation)"
  },
  {
    "label": "GetDefaultDecorator()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "GetDefaultDecorator()"
  },
  {
    "label": "FindIconBrushForClass()",
    "kind": "Method",
    "detail": "Function (const FSlateBrush* ClassIcon =)",
    "insertText": "FindIconBrushForClass(ClassesToDrop[0].Get())"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (} return)",
    "insertText": "SNew(SBorder) .BorderImage(FAppStyle::GetBrush(\"Graph.ConnectorFeedback.Border\")) .Content() [ SNew(SHorizontalBox) + SHorizontalBox::Slot() .AutoWidth() [ SNew(STextBlock) .Text( FText::FromString(ClassesToDrop[0]->GetName()))"
  },
  {
    "label": "New()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<FClassDragDropOp>)",
    "insertText": "New(TWeakObjectPtr<UClass> ClassToDrop)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FClassDragDropOp> Operation =)",
    "insertText": "MakeShareable(new FClassDragDropOp)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (Operation -> ClassesToDrop .)",
    "insertText": "Add(ClassToDrop)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (Operation ->)",
    "insertText": "Construct()"
  }
]