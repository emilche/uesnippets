[
  {
    "label": "FMovieSceneChannelHandle",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneChannelHandle"
  },
  {
    "label": "FName",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FName"
  },
  {
    "label": "ISequencerSection",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ISequencerSection"
  },
  {
    "label": "FTimeWarpChannelModel",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimeWarpChannelModel"
  },
  {
    "label": "UE_SEQUENCER_DECLARE_CASTABLE()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Templates / SharedPointerFwd . h \" # include \" MVVM / ViewModels / ChannelModel . h \" struct FMovieSceneChannelHandle ; class FName ; class ISequencerSection ; namespace UE::Sequencer { struct FTimeWarpChannelModel : FChannelModel {)",
    "insertText": "UE_SEQUENCER_DECLARE_CASTABLE(FTimeWarpChannelModel, FChannelModel)"
  },
  {
    "label": "FTimeWarpChannelModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTimeWarpChannelModel(FName InChannelName, TWeakPtr<ISequencerSection> InSection, FMovieSceneChannelHandle InChannel)"
  },
  {
    "label": "CreateOutlinerViewForColumn()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "CreateOutlinerViewForColumn(const FCreateOutlinerViewParams& InParams, const FName& InColumnName)"
  },
  {
    "label": "BuildContextMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildContextMenu(FMenuBuilder& MenuBuilder, TViewModelPtr<FChannelGroupOutlinerModel> GroupOwner)"
  },
  {
    "label": "BuildReplaceTimeWarpSubMenu()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "BuildReplaceTimeWarpSubMenu()"
  },
  {
    "label": "PopulateReplaceTimeWarpSubMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateReplaceTimeWarpSubMenu(FMenuBuilder& MenuBuilder)"
  }
]