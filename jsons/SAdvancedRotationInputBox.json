[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "SAdvancedRotationInputBox",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAdvancedRotationInputBox"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" AnimationCoreLibrary . h \" # include \" Layout / Margin . h \" # include \" Fonts / SlateFontInfo . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / SCompoundWidget . h \" # include \" Widgets / Input / SRotatorInputBox . h \" # include \" Widgets / Input / SVectorInputBox . h \" # include \" Styling / CoreStyle . h \" # include \" Framework / SlateDelegates . h \" # include \" Widgets / Input / NumericTypeInterface . h \" # include \" Widgets / Input / NumericUnitTypeInterface . inl \" namespace ESlateRotationRepresentation { enum Type : int { EulerXYZ,EulerXZY,EulerYXZ,EulerYZX,EulerZXY,EulerZYX,Rotator,Quaternion,AxisAndAngle,Max } ; } namespace ESlateTransformSubComponent { enum Type : int { X,Y,Z,W,Angle,Pitch,Yaw,Roll,Max } ; } template<NumericType = FVector::FReal> class SAdvancedRotationInputBox : public SCompoundWidget { public : typedef SNumericVectorInputBox<NumericType,UE::Math::TVector<NumericType>,3> SNumericVectorInputBox3 ; typedef SNumericVectorInputBox<NumericType,UE::Math::TVector4<NumericType>,4> SNumericVectorInputBox4 ;)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnRotatorChanged, FRotator)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnRotatorCommitted, FRotator, ETextCommit::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_OneParam(FOnQuaternionChanged, FQuat)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnQuaternionCommitted, FQuat, ETextCommit::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(TOptional<NumericType>, FOnGetNumericValue, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnNumericValueChanged, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type, NumericType)"
  },
  {
    "label": "DECLARE_DELEGATE_FourParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_FourParams(FOnNumericValueCommitted, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type, NumericType, ETextCommit::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_TwoParams(FOnBeginSliderMovement, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnEndSliderMovement, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type, NumericType)"
  },
  {
    "label": "DECLARE_DELEGATE_RetVal_TwoParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_RetVal_TwoParams(ECheckBoxState, FOnGetToggleChecked, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type)"
  },
  {
    "label": "DECLARE_DELEGATE_ThreeParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE_ThreeParams(FOnToggleChanged, ESlateRotationRepresentation::Type, ESlateTransformSubComponent::Type, ECheckBoxState)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SAdvancedRotationInputBox ) : _Representation(ESlateRotationRepresentation::Rotator) , _bColorAxisLabels(true) , _Font(FAppStyle::Get().GetFontStyle(\"NormalFont\")) , _AllowSpin(true) , _DisplayToggle( false ) , _TogglePadding( FMargin( 1.f,0.f,1.f,0.f ))"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(ESlateRotationRepresentation::Type, Representation ) SLATE_ATTRIBUTE( TOptional<FRotator>, Rotator ) SLATE_EVENT( FOnRotatorChanged, OnRotatorChanged ) SLATE_EVENT( FOnRotatorCommitted, OnRotatorCommitted ) SLATE_ATTRIBUTE( TOptional<FQuat>, Quaternion ) SLATE_EVENT( FOnQuaternionChanged, OnQuaternionChanged ) SLATE_EVENT( FOnQuaternionCommitted, OnQuaternionCommitted ) SLATE_EVENT( FOnGetNumericValue, OnGetNumericValue ) SLATE_EVENT( FOnNumericValueChanged, OnNumericValueChanged ) SLATE_EVENT( FOnNumericValueCommitted, OnNumericValueCommitted ) SLATE_EVENT(FOnBeginSliderMovement, OnBeginSliderMovement) SLATE_EVENT(FOnEndSliderMovement, OnEndSliderMovement) SLATE_ARGUMENT( bool, bColorAxisLabels ) SLATE_ATTRIBUTE( FSlateFontInfo, Font ) SLATE_ARGUMENT( bool, AllowSpin ) SLATE_ARGUMENT( bool, DisplayToggle ) SLATE_EVENT( FOnGetToggleChecked, OnGetToggleChecked ) SLATE_EVENT( FOnToggleChanged, OnToggleChanged ) SLATE_ARGUMENT( FMargin, TogglePadding ) SLATE_END_ARGS() void Construct( const FArguments& InArgs)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (Representation = InArgs . _Representation ; Rotator = InArgs . _Rotator ; OnRotatorChanged = InArgs . _OnRotatorChanged ; OnRotatorCommitted = InArgs . _OnRotatorCommitted ; Quaternion = InArgs . _Quaternion ; OnQuaternionChanged = InArgs . _OnQuaternionChanged ; OnQuaternionCommitted = InArgs . _OnQuaternionCommitted ; OnGetNumericValue = InArgs . _OnGetNumericValue ; OnNumericValueChanged = InArgs . _OnNumericValueChanged ; OnNumericValueCommitted = InArgs . _OnNumericValueCommitted ; OnBeginSliderMovement = InArgs . _OnBeginSliderMovement ; OnEndSliderMovement = InArgs . _OnEndSliderMovement ; OnGetToggleChecked = InArgs . _OnGetToggleChecked ; OnToggleChanged = InArgs . _OnToggleChanged ; TSharedRef<SWidget> AngleLabelWidget = SNullWidget::NullWidget ;)",
    "insertText": "if(InArgs._bColorAxisLabels)"
  },
  {
    "label": "BuildNarrowColorLabel()",
    "kind": "Method",
    "detail": "Function (const FLinearColor AngleLabelColor = SNumericEntryBox<NumericType>::GreenLabelBackgroundColor ; AngleLabelWidget = SNumericEntryBox<NumericType)",
    "insertText": "BuildNarrowColorLabel(AngleLabelColor)"
  },
  {
    "label": "MakeShareable()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<TNumericUnitTypeInterface<NumericType>> DegreesTypeInterface =)",
    "insertText": "MakeShareable(new TNumericUnitTypeInterface<NumericType>(EUnit::Degrees))"
  },
  {
    "label": "SNew()",
    "kind": "Method",
    "detail": "Function (this -> ChildSlot [)",
    "insertText": "SNew(SHorizontalBox) +SHorizontalBox::Slot() .Padding(FMargin(0.f)) [ SNew(SNumericRotatorInputBox<NumericType>) .bColorAxisLabels(InArgs._bColorAxisLabels) .Font(InArgs._Font) .AllowSpin(InArgs._AllowSpin) .TypeInterface(DegreesTypeInterface) .Roll(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Roll) .Yaw(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Yaw) .Pitch(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Pitch) .OnRollChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Roll) .OnYawChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Yaw) .OnPitchChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Pitch) .OnRollCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Roll) .OnYawCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Yaw) .OnPitchCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Pitch) .DisplayToggle(InArgs._DisplayToggle) .ToggleRollChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Roll) .ToggleYawChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Yaw) .TogglePitchChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Pitch) .OnToggleRollChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Roll) .OnToggleYawChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Yaw) .OnTogglePitchChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Pitch) .OnPitchBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Pitch) .OnYawBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Yaw) .OnRollBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Roll) .OnPitchEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Pitch) .OnYawEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Yaw) .OnRollEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Roll) .TogglePadding(InArgs._TogglePadding) .Visibility(this, &SAdvancedRotationInputBox::IsRotatorInputBoxVisible) ] +SHorizontalBox::Slot() .Padding(FMargin(0.f)) [ SNew(SNumericVectorInputBox3) .bColorAxisLabels(InArgs._bColorAxisLabels) .Font(InArgs._Font) .AllowSpin(InArgs._AllowSpin) .SpinDelta(0.01f) .MinSliderVector(FVector(-360.f, -360.f, -360.f)) .MaxSliderVector(FVector(360.f, 360.f, 360.f)) .TypeInterface(DegreesTypeInterface) .X(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::X) .Y(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Y) .Z(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Z) .OnXChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::X) .OnYChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Y) .OnZChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Z) .OnXCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::X) .OnYCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Y) .OnZCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Z) .DisplayToggle(InArgs._DisplayToggle) .ToggleXChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::X) .ToggleYChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Y) .ToggleZChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Z) .OnToggleXChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::X) .OnToggleYChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Y) .OnToggleZChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Z) .OnXBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::X) .OnXEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::X) .OnYBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Y) .OnYEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Y) .OnZBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Z) .OnZEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Z) .TogglePadding(InArgs._TogglePadding) .Visibility(this, &SAdvancedRotationInputBox::IsEulerInputBoxVisible) ] +SHorizontalBox::Slot() .FillWidth(1.f) .Padding(FMargin(0.f)) [ SNew(SNumericVectorInputBox4) .bColorAxisLabels(InArgs._bColorAxisLabels) .Font(InArgs._Font) .AllowSpin(InArgs._AllowSpin) .SpinDelta(0.001f) .MinSliderVector(FVector4(-1.f, -1.f, -1.f, -1.f)) .MaxSliderVector(FVector4(1.f, 1.f, 1.f, 1.f)) .X(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::X) .Y(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Y) .Z(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Z) .W(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::W) .OnXChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::X) .OnYChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Y) .OnZChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Z) .OnWChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::W) .OnXCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::X) .OnYCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Y) .OnZCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Z) .OnWCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::W) .DisplayToggle(InArgs._DisplayToggle) .ToggleXChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::X) .ToggleYChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Y) .ToggleZChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Z) .ToggleWChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::W) .OnToggleXChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::X) .OnToggleYChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Y) .OnToggleZChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Z) .OnToggleWChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::W) .OnXBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::X) .OnXEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::X) .OnYBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Y) .OnYEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Y) .OnZBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Z) .OnZEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Z) .OnWBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::W) .OnWEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::W) .TogglePadding(InArgs._TogglePadding) .Visibility(this, &SAdvancedRotationInputBox::IsQuaternionInputBoxVisible) ] +SHorizontalBox::Slot() .Padding(FMargin(0.f)) [ SNew(SNumericVectorInputBox3) .bColorAxisLabels(InArgs._bColorAxisLabels) .Font(InArgs._Font) .AllowSpin(InArgs._AllowSpin) .SpinDelta(0.01f) .MinSliderVector(FVector(-1.f, -1.f, -1.f)) .MaxSliderVector(FVector(1.f, 1.f, 1.f)) .X(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::X) .Y(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Y) .Z(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Z) .OnXChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::X) .OnYChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Y) .OnZChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Z) .OnXCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::X) .OnYCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Y) .OnZCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Z) .DisplayToggle(InArgs._DisplayToggle) .ToggleXChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::X) .ToggleYChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Y) .ToggleZChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Z) .OnToggleXChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::X) .OnToggleYChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Y) .OnToggleZChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Z) .OnXBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::X) .OnXEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::X) .OnYBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Y) .OnYEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Y) .OnZBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Z) .OnZEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Z) .TogglePadding(InArgs._TogglePadding) .Visibility(this, &SAdvancedRotationInputBox::IsAxisAndAngleInputBoxVisible) ] +SHorizontalBox::Slot() .Padding(FMargin(0.f)) .FillWidth(0.333f) [ SNew(SNumericEntryBox<NumericType>) .Font(InArgs._Font) .AllowSpin(InArgs._AllowSpin) .Delta(0.01f) .MinSliderValue(-360.f) .MaxSliderValue(360.f) .Value(this, &SAdvancedRotationInputBox::HandleGetNumericValue, ESlateTransformSubComponent::Angle) .OnValueChanged(this, &SAdvancedRotationInputBox::HandleOnNumericValueChanged, ESlateTransformSubComponent::Angle) .OnValueCommitted(this, &SAdvancedRotationInputBox::HandleOnNumericValueCommitted, ESlateTransformSubComponent::Angle) .ToolTipText_Lambda([this]() { TOptional<NumericType> Value = HandleGetNumericValue(ESlateTransformSubComponent::Angle); if (Value.IsSet()) { return FText::Format(NSLOCTEXT(\"SAdvancedRotationInputBox\", \"Angle_ToolTip\", \"Angle: {0}\"), Value.GetValue()); } return NSLOCTEXT(\"SAdvancedRotationInputBox\", \"MultipleValues\", \"Multiple Values\"); }) .UndeterminedString(NSLOCTEXT(\"SAdvancedRotationInputBox\", \"MultipleValues\", \"Multiple Values\")) .TypeInterface(DegreesTypeInterface) .LabelPadding(FMargin(3)) .LabelLocation(SNumericEntryBox<NumericType>::ELabelLocation::Inside) .Label() [ AngleLabelWidget ] .DisplayToggle(InArgs._DisplayToggle) .TogglePadding(InArgs._TogglePadding) .ToggleChecked(this, &SAdvancedRotationInputBox::HandleGetToggleChecked, ESlateTransformSubComponent::Angle) .OnToggleChanged(this, &SAdvancedRotationInputBox::HandleOnToggleChanged, ESlateTransformSubComponent::Angle) .OnBeginSliderMovement(this, &SAdvancedRotationInputBox::HandleOnBeginSliderMovement, ESlateTransformSubComponent::Angle) .OnEndSliderMovement(this, &SAdvancedRotationInputBox::HandleOnEndSliderMovement, ESlateTransformSubComponent::Angle) .Visibility(this, &SAdvancedRotationInputBox::IsAxisAndAngleInputBoxVisible)"
  },
  {
    "label": "IsValidComponent()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsValidComponent(ESlateRotationRepresentation::Type InRepresentation, ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (const ESlateRotationRepresentation::Type& Repr = Representation .)",
    "insertText": "Get()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} else)",
    "insertText": "if(Rotator.IsBound() || Quaternion.IsBound())"
  },
  {
    "label": "GetRotatorAndQuat()",
    "kind": "Method",
    "detail": "Function (TOptional<FRotator> Rot ; TOptional<FQuat> Quat ;)",
    "insertText": "GetRotatorAndQuat(Rot, Quat)"
  },
  {
    "label": "EulerFromQuat()",
    "kind": "Method",
    "detail": "Function (const FVector Euler =)",
    "insertText": "EulerFromQuat(Quat.GetValue(), EEulerRotationOrder(RotationOrder), true)"
  },
  {
    "label": "GetRotatorAndQuat()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetRotatorAndQuat(TOptional<FRotator>& Rot, TOptional<FQuat> &Quat)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bool bSuccess = false ;)",
    "insertText": "if(Rotator.IsBound())"
  },
  {
    "label": "Quaternion()",
    "kind": "Method",
    "detail": "Function (Quat = Rot ->)",
    "insertText": "Quaternion()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (bSuccess = true ; } })",
    "insertText": "if(Quaternion.IsBound())"
  },
  {
    "label": "Rotator()",
    "kind": "Method",
    "detail": "Function (Rot = Quat ->)",
    "insertText": "Rotator()"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} bSuccess = true ; ; } else)",
    "insertText": "if(Rot.IsSet())"
  },
  {
    "label": "ApplyNumericValueChangeToRotatorAndQuat()",
    "kind": "Method",
    "detail": "Function (bSuccess = true ; } } return bSuccess ; } bool)",
    "insertText": "ApplyNumericValueChangeToRotatorAndQuat(TOptional<FRotator>& Rot, TOptional<FQuat> &Quat, NumericType InValue, ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "switch()",
    "kind": "Method",
    "detail": "Function (break ; } case ESlateRotationRepresentation::Rotator : {)",
    "insertText": "switch(InSubComponent)"
  },
  {
    "label": "ToAxisAndAngle()",
    "kind": "Method",
    "detail": "Function (break ; } case ESlateRotationRepresentation::AxisAndAngle : { FVector Axis ; double Angle ; Quat ->)",
    "insertText": "ToAxisAndAngle(Axis, Angle)"
  },
  {
    "label": "HandleOnNumericValueChanged()",
    "kind": "Method",
    "detail": "Function (break ; } } } return true ; } void)",
    "insertText": "HandleOnNumericValueChanged(NumericType InValue, ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnNumericValueChanged .)",
    "insertText": "Execute(Repr, InSubComponent, InValue)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(OnRotatorChanged.IsBound() || OnQuaternionChanged.IsBound())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (TOptional<FRotator> Rot ; TOptional<FQuat> Quat ;)",
    "insertText": "if(ApplyNumericValueChangeToRotatorAndQuat(Rot, Quat, InValue, InSubComponent))"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnRotatorChanged .)",
    "insertText": "Execute(Rot.GetValue())"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(OnQuaternionChanged.IsBound() && Quat.IsSet())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnQuaternionChanged .)",
    "insertText": "Execute(Quat.GetValue())"
  },
  {
    "label": "HandleOnNumericValueCommitted()",
    "kind": "Method",
    "detail": "Function (} } } } } void)",
    "insertText": "HandleOnNumericValueCommitted(NumericType InValue, ETextCommit::Type InCommitType, ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnNumericValueCommitted .)",
    "insertText": "Execute(Repr, InSubComponent, InValue, InCommitType)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(OnRotatorCommitted.IsBound() || OnQuaternionCommitted.IsBound())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnRotatorCommitted .)",
    "insertText": "Execute(Rot.GetValue(), InCommitType)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "if(OnQuaternionCommitted.IsBound() && Quat.IsSet())"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnQuaternionCommitted .)",
    "insertText": "Execute(Quat.GetValue(), InCommitType)"
  },
  {
    "label": "HandleGetToggleChecked()",
    "kind": "Method",
    "detail": "Function (} } } } } ECheckBoxState)",
    "insertText": "HandleGetToggleChecked(ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "HandleOnToggleChanged()",
    "kind": "Method",
    "detail": "Function (} } return ECheckBoxState::Checked ; } void)",
    "insertText": "HandleOnToggleChanged(ECheckBoxState InValue, ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "HandleOnBeginSliderMovement()",
    "kind": "Method",
    "detail": "Function (} } } void)",
    "insertText": "HandleOnBeginSliderMovement(ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (OnBeginSliderMovement .)",
    "insertText": "Execute(Repr, InSubComponent)"
  },
  {
    "label": "HandleOnEndSliderMovement()",
    "kind": "Method",
    "detail": "Function (} } } void)",
    "insertText": "HandleOnEndSliderMovement(NumericType InValue, ESlateTransformSubComponent::Type InSubComponent)"
  },
  {
    "label": "IsRotatorInputBoxVisible()",
    "kind": "Method",
    "detail": "Function (} } } EVisibility)",
    "insertText": "IsRotatorInputBoxVisible()"
  }
]