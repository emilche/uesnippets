[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "ITimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimeSliderController"
  },
  {
    "label": "SCurveEditorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorTree"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "SCurveEditorPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorPanel"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FRichCurveEditorModelNamed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRichCurveEditorModelNamed"
  },
  {
    "label": "SAnimSequenceCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimSequenceCurveEditor"
  },
  {
    "label": "FRichCurveEditorModelNamed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FRichCurveEditorModelNamed(const FName& InName, ERawCurveTrackTypes InType, int32 InCurveIndex, UAnimSequenceBase* InAnimSequence, FCurveEditorTreeItemID InTreeId = FCurveEditorTreeItemID())"
  },
  {
    "label": "FRichCurveEditorModelNamed()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FRichCurveEditorModelNamed()"
  },
  {
    "label": "IsValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValid()"
  },
  {
    "label": "GetRichCurve()",
    "kind": "Method",
    "detail": "Function (FRichCurve&)",
    "insertText": "GetRichCurve()"
  },
  {
    "label": "GetReadOnlyRichCurve()",
    "kind": "Method",
    "detail": "Function (const FRichCurve&)",
    "insertText": "GetReadOnlyRichCurve()"
  },
  {
    "label": "SetKeyPositions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyPositions(TArrayView<const FKeyHandle> InKeys, TArrayView<const FKeyPosition> InKeyPositions, EPropertyChangeType::Type ChangeType)"
  },
  {
    "label": "SetKeyAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetKeyAttributes(TArrayView<const FKeyHandle> InKeys, TArrayView<const FKeyAttributes> InAttributes, EPropertyChangeType::Type ChangeType = EPropertyChangeType::Unspecified)"
  },
  {
    "label": "SetCurveAttributes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetCurveAttributes(const FCurveAttributes& InCurveAttributes)"
  },
  {
    "label": "CurveHasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CurveHasChanged()"
  },
  {
    "label": "OnModelHasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModelHasChanged(const EAnimDataModelNotifyType& NotifyType, IAnimationDataModel* Model, const FAnimDataModelNotifPayload& Payload)"
  },
  {
    "label": "UpdateCachedCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedCurve()"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (FName CurveName ; TWeakObjectPtr<UAnimSequenceBase> AnimSequence ; int32 CurveIndex ; ERawCurveTrackTypes Type ; FCurveEditorTreeItemID TreeId ; FAnimationCurveIdentifier CurveId ; UE::Anim::FAnimDataModelNotifyCollector NotifyCollector ; FRichCurve CachedCurve ; bool bCurveRemoved ; TUniquePtr<IAnimationDataController::FScopedBracket> InteractiveBracket ; } ; class SAnimSequenceCurveEditor : public IAnimSequenceCurveEditor {)",
    "insertText": "SLATE_BEGIN_ARGS(SAnimSequenceCurveEditor)"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr<ITimeSliderController>, ExternalTimeSliderController) SLATE_ARGUMENT(TSharedPtr<FTabManager>, TabManager) SLATE_END_ARGS() ~SAnimSequenceCurveEditor()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<IPersonaPreviewScene>& InPreviewScene, UAnimSequenceBase* InAnimSequence)"
  },
  {
    "label": "ResetCurves()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetCurves()"
  },
  {
    "label": "AddCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCurve(const FText& InCurveDisplayName, const FLinearColor& InCurveColor, const FName& InName, ERawCurveTrackTypes InType, int32 InCurveIndex, FSimpleDelegate InOnCurveModified)"
  },
  {
    "label": "RemoveCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveCurve(const FName& InName, ERawCurveTrackTypes InType, int32 InCurveIndex)"
  },
  {
    "label": "ZoomToFit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ZoomToFit()"
  },
  {
    "label": "MakeToolbar()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "MakeToolbar(TSharedRef<SCurveEditorPanel> InEditorPanel)"
  },
  {
    "label": "OnContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnContextMenuOpening()"
  }
]