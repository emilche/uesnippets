[
  {
    "label": "FCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCurveEditor"
  },
  {
    "label": "ITimeSliderController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITimeSliderController"
  },
  {
    "label": "SCurveEditorTree",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorTree"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "SCurveEditorPanel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SCurveEditorPanel"
  },
  {
    "label": "FTabManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FTabManager"
  },
  {
    "label": "FRichCurveEditorModelNamed",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRichCurveEditorModelNamed"
  },
  {
    "label": "SAnimSequenceCurveEditor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SAnimSequenceCurveEditor"
  },
  {
    "label": "CurveHasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CurveHasChanged()"
  },
  {
    "label": "OnModelHasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModelHasChanged(const EAnimDataModelNotifyType& NotifyType, IAnimationDataModel* Model, const FAnimDataModelNotifPayload& Payload)"
  },
  {
    "label": "UpdateCachedCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateCachedCurve()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef<IPersonaPreviewScene>& InPreviewScene, UAnimSequenceBase* InAnimSequence)"
  },
  {
    "label": "OnModelHasChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModelHasChanged(const EAnimDataModelNotifyType& NotifyType, IAnimationDataModel* Model, const FAnimDataModelNotifPayload& Payload)"
  },
  {
    "label": "MakeToolbar()",
    "kind": "Method",
    "detail": "Function (TSharedRef<SWidget>)",
    "insertText": "MakeToolbar(TSharedRef<SCurveEditorPanel> InEditorPanel)"
  },
  {
    "label": "OnContextMenuOpening()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<SWidget>)",
    "insertText": "OnContextMenuOpening()"
  }
]