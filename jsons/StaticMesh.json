[
  {
    "label": "FSpeedTreeWind",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSpeedTreeWind"
  },
  {
    "label": "FStaticMeshLODGroup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshLODGroup"
  },
  {
    "label": "UAssetUserData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetUserData"
  },
  {
    "label": "UMaterialInterface",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMaterialInterface"
  },
  {
    "label": "UNavCollisionBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavCollisionBase"
  },
  {
    "label": "UStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshComponent"
  },
  {
    "label": "UStaticMeshDescription",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshDescription"
  },
  {
    "label": "FStaticMeshUpdate",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshUpdate"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FMeshDescription",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshDescription"
  },
  {
    "label": "FStaticMeshLODResources",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshLODResources"
  },
  {
    "label": "IStaticMeshComponent",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IStaticMeshComponent"
  },
  {
    "label": "FStaticMeshSection",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshSection"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FStaticMeshPostLoadContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshPostLoadContext"
  },
  {
    "label": "FStaticMeshBuildContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshBuildContext"
  },
  {
    "label": "FStaticMeshAsyncBuildScope",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshAsyncBuildScope"
  },
  {
    "label": "FStaticMeshAsyncBuildWorker",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshAsyncBuildWorker"
  },
  {
    "label": "FStaticMeshAsyncBuildTask",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshAsyncBuildTask"
  },
  {
    "label": "ENormalMode",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ENormalMode"
  },
  {
    "label": "EImportanceLevel",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EImportanceLevel"
  },
  {
    "label": "EOptimizationType",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EOptimizationType"
  },
  {
    "label": "FStaticMeshOptimizationSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshOptimizationSettings"
  },
  {
    "label": "FMeshSectionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshSectionInfo"
  },
  {
    "label": "FMeshSectionInfoMap",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshSectionInfoMap"
  },
  {
    "label": "FAssetEditorOrbitCameraPosition",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAssetEditorOrbitCameraPosition"
  },
  {
    "label": "UStaticMesh",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMesh"
  },
  {
    "label": "FStaticMaterial",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMaterial"
  },
  {
    "label": "EImportStaticMeshVersion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EImportStaticMeshVersion"
  },
  {
    "label": "FMaterialRemapIndex",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialRemapIndex"
  },
  {
    "label": "FStaticMeshRenderData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshRenderData"
  },
  {
    "label": "UBodySetup",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UBodySetup"
  },
  {
    "label": "UAssetImportData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAssetImportData"
  },
  {
    "label": "UThumbnailInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UThumbnailInfo"
  },
  {
    "label": "UStaticMeshSocket",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UStaticMeshSocket"
  },
  {
    "label": "FStaticMeshCompilingManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshCompilingManager"
  },
  {
    "label": "FStaticMeshUpdateContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshUpdateContext"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FCommitMeshDescriptionParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCommitMeshDescriptionParams"
  },
  {
    "label": "FBuildMeshDescriptionsLODParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildMeshDescriptionsLODParams"
  },
  {
    "label": "FBuildMeshDescriptionsParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildMeshDescriptionsParams"
  },
  {
    "label": "FDataValidationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FDataValidationContext"
  },
  {
    "label": "FBuildParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FBuildParameters"
  },
  {
    "label": "FTriMeshCollisionData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTriMeshCollisionData"
  },
  {
    "label": "FTriMeshCollisionDataEstimates",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTriMeshCollisionDataEstimates"
  },
  {
    "label": "FMeshReductionSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMeshReductionSettings"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "SNotificationItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SNotificationItem"
  },
  {
    "label": "FStaticMeshCompilationContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FStaticMeshCompilationContext"
  },
  {
    "label": "FStaticMeshBuildParameters",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FStaticMeshBuildParameters"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Async / AsyncWork . h \" # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / UObjectGlobals . h \" # include \" UObject / Object . h \" # include \" UObject / StrongObjectPtr . h \" # include \" Misc / Guid . h \" # include \" Templates / SubclassOf . h \" # include \" Templates / UnrealTemplate . h \" # include \" Engine / EngineTypes . h \" # include \" UObject / ScriptMacros . h \" # include \" Interfaces / Interface_AssetUserData . h \" # include \" RenderCommandFence . h \" # include \" Interfaces / Interface_CollisionDataProvider . h \" # include \" Interfaces / Interface_AsyncCompilation . h \" # include \" MeshUVChannelInfo . h \" # include \" Engine / StreamableRenderAsset . h \" # include \" Templates / UniquePtr . h \" # include \" StaticMeshSourceData . h \" # include \" UObject / PerPlatformProperties . h \" # include \" MeshTypes . h \" # include \" PerQualityLevelProperties . h \" # include \" StaticMesh . generated . h \" class FSpeedTreeWind ; class FStaticMeshLODGroup ; class UAssetUserData ; class UMaterialInterface ; class UNavCollisionBase ; class UStaticMeshComponent ; class UStaticMeshDescription ; class FStaticMeshUpdate ; class UPackage ; struct FMeshDescription ; struct FStaticMeshLODResources ; class IStaticMeshComponent ; struct FStaticMeshSection ; enum class EStaticMeshAsyncProperties : uint32 { None = 0,RenderData = 1<<0,SourceModels = 1<<2,SectionInfoMap = 1<<3,OriginalSectionInfoMap = 1<<4,NavCollision = 1<<5,LightmapUVVersion = 1<<6,BodySetup = 1<<7,LightingGuid = 1<<8,ExtendedBounds = 1<<9,NegativeBoundsExtension = 1<<1 0,PositiveBoundsExtension = 1<<1 1,StaticMaterials = 1<<1 2,LightmapUVDensity = 1<<1 3,IsBuiltAtRuntime = 1<<1 4,MinLOD = 1<<1 5,LightMapCoordinateIndex = 1<<1 6,LightMapResolution = 1<<1 7,HiResSourceModel = 1<<1 8,UseLegacyTangentScaling = 1<<1 9,All = MAX_uint32 } ; const TCHAR*)",
    "insertText": "ToString(EStaticMeshAsyncProperties Value)"
  },
  {
    "label": "check()",
    "kind": "Method",
    "detail": "Function (default :)",
    "insertText": "check(false)"
  },
  {
    "label": "ENUM_CLASS_FLAGS()",
    "kind": "Method",
    "detail": "Function (} })",
    "insertText": "ENUM_CLASS_FLAGS(EStaticMeshAsyncProperties)"
  },
  {
    "label": "FStaticMeshAsyncBuildScope()",
    "kind": "Method",
    "detail": "Function (class FStaticMeshPostLoadContext ; class FStaticMeshBuildContext ; # if WITH_EDITOR class FStaticMeshAsyncBuildScope { public :)",
    "insertText": "FStaticMeshAsyncBuildScope(const UStaticMesh* StaticMesh)"
  },
  {
    "label": "FStaticMeshAsyncBuildScope()",
    "kind": "Method",
    "detail": "Function (PreviousScope = StaticMeshBeingAsyncCompiled ; StaticMeshBeingAsyncCompiled = StaticMesh ; } ~)",
    "insertText": "FStaticMeshAsyncBuildScope()"
  },
  {
    "label": "ShouldWaitOnLockedProperties()",
    "kind": "Method",
    "detail": "Function (StaticMeshBeingAsyncCompiled = PreviousScope ; } bool)",
    "insertText": "ShouldWaitOnLockedProperties(const UStaticMesh* StaticMesh)"
  },
  {
    "label": "FStaticMeshAsyncBuildWorker()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FStaticMeshAsyncBuildWorker(UStaticMesh* InStaticMesh, TUniquePtr<FStaticMeshPostLoadContext>&& InPostLoadContext) : StaticMesh(InStaticMesh) , PostLoadContext(MoveTemp(InPostLoadContext)) , BuildContext(nullptr)"
  },
  {
    "label": "GetStatId()",
    "kind": "Method",
    "detail": "Function (} TStatId)",
    "insertText": "GetStatId()"
  },
  {
    "label": "DoWork()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "DoWork()"
  },
  {
    "label": "FStaticMeshAsyncBuildTask()",
    "kind": "Method",
    "detail": "Function (} ; struct FStaticMeshAsyncBuildTask : public FAsyncTask<FStaticMeshAsyncBuildWorker> {)",
    "insertText": "FStaticMeshAsyncBuildTask(UStaticMesh* InStaticMesh, TUniquePtr<FStaticMeshPostLoadContext>&& InPostLoadContext) : FAsyncTask<FStaticMeshAsyncBuildWorker>(InStaticMesh, MoveTemp(InPostLoadContext)) , StaticMesh(InStaticMesh)"
  },
  {
    "label": "FStaticMeshAsyncBuildTask()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FStaticMeshAsyncBuildTask(UStaticMesh* InStaticMesh, TUniquePtr<FStaticMeshBuildContext>&& InBuildContext) : FAsyncTask<FStaticMeshAsyncBuildWorker>(InStaticMesh, MoveTemp(InBuildContext)) , StaticMesh(InStaticMesh)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} const UStaticMesh* StaticMesh ; } ; # endif)",
    "insertText": "UENUM()"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (OT_NumOfTriangles,OT_MaxDeviation,OT_MAX,} ;)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() UPROPERTY()"
  },
  {
    "label": "FStaticMeshOptimizationSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStaticMeshOptimizationSettings() : ReductionMethod( OT_MaxDeviation ) , NumOfTrianglesPercentage( 1.0f ) , MaxDeviationPercentage( 0.0f ) , WeldingThreshold( 0.1f ) , bRecalcNormals( true ) , NormalsThreshold( 60.0f ) , SilhouetteImportance( IL_Normal ) , TextureImportance( IL_Normal ) , ShadingImportance( IL_Normal)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} FArchive&)",
    "insertText": "operator(FArchive& Ar, FStaticMeshOptimizationSettings& Settings)"
  },
  {
    "label": "FMeshSectionInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FMeshSectionInfo() : MaterialIndex(0) , bEnableCollision(true) , bCastShadow(true) , bVisibleInRayTracing(true) , bAffectDistanceFieldLighting(true) , bForceOpaque(false)"
  },
  {
    "label": "FMeshSectionInfo()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMeshSectionInfo(int32 InMaterialIndex) : MaterialIndex(InMaterialIndex) , bEnableCollision(true) , bCastShadow(true) , bVisibleInRayTracing(true) , bAffectDistanceFieldLighting(true) , bForceOpaque(false)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FMeshSectionInfo& A, const FMeshSectionInfo& B)"
  },
  {
    "label": "Serialize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Serialize(FArchive& Ar)"
  },
  {
    "label": "Clear()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Clear()"
  },
  {
    "label": "GetSectionNumber()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetSectionNumber(int32 LODIndex)"
  },
  {
    "label": "IsValidSection()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsValidSection(int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "Get()",
    "kind": "Method",
    "detail": "Function (FMeshSectionInfo)",
    "insertText": "Get(int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(int32 LODIndex, int32 SectionIndex, FMeshSectionInfo Info)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Remove(int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "CopyFrom()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyFrom(const FMeshSectionInfoMap& Other)"
  },
  {
    "label": "AnySectionHasCollision()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AnySectionHasCollision(int32 LodIndex)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FAssetEditorOrbitCameraPosition() : bIsSet(false) , CamOrbitPoint(ForceInitToZero) , CamOrbitZoom(ForceInitToZero) , CamOrbitRotation(ForceInitToZero)"
  },
  {
    "label": "FAssetEditorOrbitCameraPosition()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FAssetEditorOrbitCameraPosition(const FVector& InCamOrbitPoint, const FVector& InCamOrbitZoom, const FRotator& InCamOrbitRotation) : bIsSet(true) , CamOrbitPoint(InCamOrbitPoint) , CamOrbitZoom(InCamOrbitZoom) , CamOrbitRotation(InCamOrbitRotation)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (} ; # if WITH_EDITOR)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPreMeshBuild, class UStaticMesh*)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE_OneParam(FOnPostMeshBuild, class UStaticMesh*)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# endif)",
    "insertText": "USTRUCT(BlueprintType)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() ENGINE_API FStaticMaterial()"
  },
  {
    "label": "FStaticMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStaticMaterial(class UMaterialInterface* InMaterialInterface , FName InMaterialSlotName = NAME_None #if WITH_EDITORONLY_DATA , FName InImportedMaterialSlotName = NAME_None #endif)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FArchive&)",
    "insertText": "operator(FArchive& Ar, FStaticMaterial& Elem)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FStaticMaterial& LHS, const FStaticMaterial& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const FStaticMaterial& LHS, const UMaterialInterface& RHS)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "operator(const UMaterialInterface& LHS, const FStaticMaterial& RHS)"
  },
  {
    "label": "GENERATED_USTRUCT_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_USTRUCT_BODY() FMaterialRemapIndex()"
  },
  {
    "label": "FMaterialRemapIndex()",
    "kind": "Method",
    "detail": "Function (ImportVersionKey = 0 ; })",
    "insertText": "FMaterialRemapIndex(uint32 VersionKey, TArray<int32> RemapArray) : ImportVersionKey(VersionKey) , MaterialRemap(RemapArray)"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (} ;)",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (Default,Enabled,Disabled,} ;)",
    "insertText": "UCLASS(hidecategories=Object, customconstructor, MinimalAPI, BlueprintType, config=Engine)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() #if WITH_EDITOR DECLARE_MULTICAST_DELEGATE_OneParam(FOnExtendedBoundsChanged, const FBoxSphereBounds&)"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_MULTICAST_DELEGATE(FOnMeshChanged)"
  },
  {
    "label": "UStaticMesh()",
    "kind": "Method",
    "detail": "Function (# endif public : ~)",
    "insertText": "UStaticMesh()"
  },
  {
    "label": "AcquireAsyncProperty()",
    "kind": "Method",
    "detail": "Function (private : # if WITH_EDITOR std::atomic<uint32> LockedProperties ; void)",
    "insertText": "AcquireAsyncProperty(EStaticMeshAsyncProperties AsyncProperties = EStaticMeshAsyncProperties::All)"
  },
  {
    "label": "ReleaseAsyncProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseAsyncProperty(EStaticMeshAsyncProperties AsyncProperties = EStaticMeshAsyncProperties::All)"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties AsyncProperties)"
  },
  {
    "label": "IsCompiling()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITOR bool)",
    "insertText": "IsCompiling()"
  },
  {
    "label": "GetRenderData()",
    "kind": "Method",
    "detail": "Function (const FStaticMeshRenderData*)",
    "insertText": "GetRenderData()"
  },
  {
    "label": "SetRenderData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRenderData(TUniquePtr<class FStaticMeshRenderData>&& InRenderData)"
  },
  {
    "label": "RequestUpdateCachedRenderState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RequestUpdateCachedRenderState()"
  },
  {
    "label": "SetLightmapUVVersion()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLightmapUVVersion(int32 InLightmapUVVersion)"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::LightmapUVVersion)"
  },
  {
    "label": "GetSectionInfoMapName()",
    "kind": "Method",
    "detail": "Function (public : FName)",
    "insertText": "GetSectionInfoMapName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, SectionInfoMap)"
  },
  {
    "label": "GetLightmapUVVersion()",
    "kind": "Method",
    "detail": "Function (public : int32)",
    "insertText": "GetLightmapUVVersion()"
  },
  {
    "label": "GetQualityLevelMinLODMemberName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetQualityLevelMinLODMemberName()"
  },
  {
    "label": "GetQualityLevelMinLOD()",
    "kind": "Method",
    "detail": "Function (} const FPerQualityLevelInt&)",
    "insertText": "GetQualityLevelMinLOD()"
  },
  {
    "label": "MoveTemp()",
    "kind": "Method",
    "detail": "Function (MinQualityLevelLOD =)",
    "insertText": "MoveTemp(InMinLOD)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "for(const TPair<int32, int32>& Pair : GetQualityLevelMinLOD().PerQuality)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (QualityLevelMinimumLODs .)",
    "insertText": "Add(QualityLevelProperty::QualityLevelToFName(Pair.Key), Pair.Value)"
  },
  {
    "label": "FNameToQualityLevel()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA int32 QualityLevelKey =)",
    "insertText": "FNameToQualityLevel(QualityLevel)"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::MinLOD)"
  },
  {
    "label": "ConvertQualityLevelData()",
    "kind": "Method",
    "detail": "Function (MinQualityLevelLOD . PerQuality =)",
    "insertText": "ConvertQualityLevelData(QualityLevelMinimumLODs)"
  },
  {
    "label": "ConvertQualityLevelData()",
    "kind": "Method",
    "detail": "Function (QualityLevelMinimumLODs =)",
    "insertText": "ConvertQualityLevelData(MinQualityLevelLOD.PerQuality)"
  },
  {
    "label": "GetMinLODIdx()",
    "kind": "Method",
    "detail": "Function (Default = MinQualityLevelLOD . Default ; # endif } int32)",
    "insertText": "GetMinLODIdx(bool bForceLowestLODIdx = false)"
  },
  {
    "label": "GetDefaultMinLOD()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetDefaultMinLOD()"
  },
  {
    "label": "SetMinLODIdx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinLODIdx(int32 InMinLOD)"
  },
  {
    "label": "ComputeLODScreenSize()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "ComputeLODScreenSize(int32 LODIndex, float PreviousLODScreenSize = -1.0f)"
  },
  {
    "label": "OnLodStrippingQualityLevelChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLodStrippingQualityLevelChanged(IConsoleVariable* Variable)"
  },
  {
    "label": "GetMinLOD()",
    "kind": "Method",
    "detail": "Function (const FPerPlatformInt&)",
    "insertText": "GetMinLOD()"
  },
  {
    "label": "SetMinLOD()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return MinLOD ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetMinLOD(FPerPlatformInt InMinLOD)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "if(const int32* Result = GetMinLOD().PerPlatform.Find(PlatformName))"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS MinLOD . PerPlatform .)",
    "insertText": "Add(PlatformName, InMinLOD)"
  },
  {
    "label": "IsNaniteEnabled()",
    "kind": "Method",
    "detail": "Function (public : # if WITH_EDITORONLY_DATA bool)",
    "insertText": "IsNaniteEnabled()"
  },
  {
    "label": "IsNaniteForceEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNaniteForceEnabled()"
  },
  {
    "label": "IsNaniteLandscape()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsNaniteLandscape()"
  },
  {
    "label": "GetStaticMaterialsName()",
    "kind": "Method",
    "detail": "Function (public : FName)",
    "insertText": "GetStaticMaterialsName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, StaticMaterials)"
  },
  {
    "label": "GetStaticMaterials()",
    "kind": "Method",
    "detail": "Function (PRAGMA_ENABLE_DEPRECATION_WARNINGS } TArray<FStaticMaterial>&)",
    "insertText": "GetStaticMaterials()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::StaticMaterials)"
  },
  {
    "label": "SetLightmapUVDensity()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetLightmapUVDensity(float InLightmapUVDensity)"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::LightmapUVDensity)"
  },
  {
    "label": "GetLightmapUVDensity()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS LightmapUVDensity = InLightmapUVDensity ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } float)",
    "insertText": "GetLightmapUVDensity()"
  },
  {
    "label": "GetLightMapResolution()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLightMapResolution()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::LightMapResolution)"
  },
  {
    "label": "SetLightMapResolution()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return LightMapResolution ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetLightMapResolution(int32 InLightMapResolution)"
  },
  {
    "label": "GetLightMapResolutionName()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS LightMapResolution = InLightMapResolution ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } FName)",
    "insertText": "GetLightMapResolutionName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, LightMapResolution)"
  },
  {
    "label": "GetLightMapCoordinateIndex()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetLightMapCoordinateIndex()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::LightMapCoordinateIndex)"
  },
  {
    "label": "SetLightMapCoordinateIndex()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return LightMapCoordinateIndex ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetLightMapCoordinateIndex(int32 InLightMapCoordinateIndex)"
  },
  {
    "label": "GetLightMapCoordinateIndexName()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS LightMapCoordinateIndex = InLightMapCoordinateIndex ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } FName)",
    "insertText": "GetLightMapCoordinateIndexName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, LightMapCoordinateIndex)"
  },
  {
    "label": "CanMeshPaintTextureColors()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanMeshPaintTextureColors()"
  },
  {
    "label": "GetBodySetup()",
    "kind": "Method",
    "detail": "Function (public : UBodySetup*)",
    "insertText": "GetBodySetup()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::BodySetup)"
  },
  {
    "label": "SetBodySetup()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return BodySetup ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetBodySetup(UBodySetup* InBodySetup)"
  },
  {
    "label": "GetBodySetupName()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS BodySetup = InBodySetup ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } FName)",
    "insertText": "GetBodySetupName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, BodySetup)"
  },
  {
    "label": "GetLegacyTangentScaling()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "GetLegacyTangentScaling()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::UseLegacyTangentScaling)"
  },
  {
    "label": "SetLegacyTangentScaling()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return bUseLegacyTangentScaling ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetLegacyTangentScaling(bool bInUseLegacyTangentScaling)"
  },
  {
    "label": "GetLightingGuid()",
    "kind": "Method",
    "detail": "Function (public : const FGuid&)",
    "insertText": "GetLightingGuid()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::LightingGuid)"
  },
  {
    "label": "NullGuid()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return LightingGuid ; PRAGMA_ENABLE_DEPRECATION_WARNINGS # else const FGuid)",
    "insertText": "NullGuid(0, 0, 0, 0)"
  },
  {
    "label": "GetPositiveBoundsExtension()",
    "kind": "Method",
    "detail": "Function (const FVector&)",
    "insertText": "GetPositiveBoundsExtension()"
  },
  {
    "label": "SetPositiveBoundsExtension()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return PositiveBoundsExtension ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetPositiveBoundsExtension(FVector InPositiveBoundsExtension)"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::PositiveBoundsExtension)"
  },
  {
    "label": "GetPositiveBoundsExtensionName()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS PositiveBoundsExtension = InPositiveBoundsExtension ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } FName)",
    "insertText": "GetPositiveBoundsExtensionName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, PositiveBoundsExtension)"
  },
  {
    "label": "GetNegativeBoundsExtension()",
    "kind": "Method",
    "detail": "Function (const FVector&)",
    "insertText": "GetNegativeBoundsExtension()"
  },
  {
    "label": "SetNegativeBoundsExtension()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return NegativeBoundsExtension ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetNegativeBoundsExtension(FVector InNegativeBoundsExtension)"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::NegativeBoundsExtension)"
  },
  {
    "label": "GetNegativeBoundsExtensionName()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS NegativeBoundsExtension = InNegativeBoundsExtension ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } FName)",
    "insertText": "GetNegativeBoundsExtensionName()"
  },
  {
    "label": "GET_MEMBER_NAME_CHECKED()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return)",
    "insertText": "GET_MEMBER_NAME_CHECKED(UStaticMesh, NegativeBoundsExtension)"
  },
  {
    "label": "GetExtendedBounds()",
    "kind": "Method",
    "detail": "Function (public : const FBoxSphereBounds&)",
    "insertText": "GetExtendedBounds()"
  },
  {
    "label": "WaitUntilAsyncPropertyReleased()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WaitUntilAsyncPropertyReleased(EStaticMeshAsyncProperties::ExtendedBounds)"
  },
  {
    "label": "SetExtendedBounds()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS return ExtendedBounds ; PRAGMA_ENABLE_DEPRECATION_WARNINGS } void)",
    "insertText": "SetExtendedBounds(const FBoxSphereBounds& InExtendedBounds)"
  },
  {
    "label": "Broadcast()",
    "kind": "Method",
    "detail": "Function (PRAGMA_DISABLE_DEPRECATION_WARNINGS ExtendedBounds = InExtendedBounds ; PRAGMA_ENABLE_DEPRECATION_WARNINGS # if WITH_EDITOR OnExtendedBoundsChanged .)",
    "insertText": "Broadcast(InExtendedBounds)"
  },
  {
    "label": "GetMeshDescription()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA FMeshDescription*)",
    "insertText": "GetMeshDescription(int32 LodIndex)"
  },
  {
    "label": "CloneMeshDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloneMeshDescription(int32 LodIndex, FMeshDescription& OutMeshDescription)"
  },
  {
    "label": "IsMeshDescriptionValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsMeshDescriptionValid(int32 LodIndex)"
  },
  {
    "label": "CreateMeshDescription()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "CreateMeshDescription(int32 LodIndex)"
  },
  {
    "label": "CreateMeshDescription()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "CreateMeshDescription(int32 LodIndex, FMeshDescription MeshDescription)"
  },
  {
    "label": "FCommitMeshDescriptionParams()",
    "kind": "Method",
    "detail": "Function (struct FCommitMeshDescriptionParams {)",
    "insertText": "FCommitMeshDescriptionParams() : bMarkPackageDirty(true) , bUseHashAsGuid(false)"
  },
  {
    "label": "CommitMeshDescription()",
    "kind": "Method",
    "detail": "Function (} bool bMarkPackageDirty ; bool bUseHashAsGuid ; } ; void)",
    "insertText": "CommitMeshDescription(int32 LodIndex, const FCommitMeshDescriptionParams& Params = FCommitMeshDescriptionParams())"
  },
  {
    "label": "ClearMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMeshDescription(int32 LodIndex)"
  },
  {
    "label": "ClearMeshDescriptions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearMeshDescriptions()"
  },
  {
    "label": "LoadHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LoadHiResMeshDescription(FMeshDescription& OutMeshDescription)"
  },
  {
    "label": "CloneHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CloneHiResMeshDescription(FMeshDescription& OutMeshDescription)"
  },
  {
    "label": "CreateHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "CreateHiResMeshDescription()"
  },
  {
    "label": "CreateHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "CreateHiResMeshDescription(FMeshDescription MeshDescription)"
  },
  {
    "label": "GetHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (FMeshDescription*)",
    "insertText": "GetHiResMeshDescription()"
  },
  {
    "label": "IsHiResMeshDescriptionValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsHiResMeshDescriptionValid()"
  },
  {
    "label": "CommitHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CommitHiResMeshDescription(const FCommitMeshDescriptionParams& Params = FCommitMeshDescriptionParams())"
  },
  {
    "label": "ClearHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearHiResMeshDescription()"
  },
  {
    "label": "ModifyMeshDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifyMeshDescription(int32 LodIndex, bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "ModifyAllMeshDescriptions()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifyAllMeshDescriptions(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "ModifyHiResMeshDescription()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ModifyHiResMeshDescription(bool bAlwaysMarkDirty = true)"
  },
  {
    "label": "GetAssetImportData()",
    "kind": "Method",
    "detail": "Function (class UAssetImportData*)",
    "insertText": "GetAssetImportData()"
  },
  {
    "label": "AddUVChannel()",
    "kind": "Method",
    "detail": "Function (AssetImportData = InAssetImportData ; } bool)",
    "insertText": "AddUVChannel(int32 LODIndex)"
  },
  {
    "label": "InsertUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "InsertUVChannel(int32 LODIndex, int32 UVChannelIndex)"
  },
  {
    "label": "RemoveUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveUVChannel(int32 LODIndex, int32 UVChannelIndex)"
  },
  {
    "label": "SetUVChannel()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetUVChannel(int32 LODIndex, int32 UVChannelIndex, const TMap<FVertexInstanceID, FVector2D>& TexCoords)"
  },
  {
    "label": "FBuildMeshDescriptionsParams()",
    "kind": "Method",
    "detail": "Function (struct FBuildMeshDescriptionsLODParams { bool bUseHighPrecisionTangentBasis = false ; bool bUseFullPrecisionUVs = false ; } ; struct FBuildMeshDescriptionsParams {)",
    "insertText": "FBuildMeshDescriptionsParams() : bMarkPackageDirty(true) , bUseHashAsGuid(false) , bBuildSimpleCollision(false) , bCommitMeshDescription(true) , bFastBuild(false) , bAllowCpuAccess(false)"
  },
  {
    "label": "BuildFromMeshDescriptions()",
    "kind": "Method",
    "detail": "Function (} bool bMarkPackageDirty ; bool bUseHashAsGuid ; bool bBuildSimpleCollision ; bool bCommitMeshDescription ; bool bFastBuild ; bool bAllowCpuAccess ; TArray<FBuildMeshDescriptionsLODParams> PerLODOverrides ; } ; bool)",
    "insertText": "BuildFromMeshDescriptions(const TArray<const FMeshDescription*>& MeshDescriptions, const FBuildMeshDescriptionsParams& Params = FBuildMeshDescriptionsParams())"
  },
  {
    "label": "BuildFromMeshDescription()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BuildFromMeshDescription(const FMeshDescription& MeshDescription, FStaticMeshLODResources& LODResources)"
  },
  {
    "label": "GetNumUVChannels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumUVChannels(int32 LODIndex)"
  },
  {
    "label": "SetNavCollision()",
    "kind": "Method",
    "detail": "Function (public : void)",
    "insertText": "SetNavCollision(UNavCollisionBase*)"
  },
  {
    "label": "GetNavCollision()",
    "kind": "Method",
    "detail": "Function (UNavCollisionBase*)",
    "insertText": "GetNavCollision()"
  },
  {
    "label": "GetNavigationBounds()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetNavigationBounds(const FTransform& LocalToWorld)"
  },
  {
    "label": "IsNavigationRelevant()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsNavigationRelevant()"
  },
  {
    "label": "UStaticMesh()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UStaticMesh(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get())"
  },
  {
    "label": "PreEditChange()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "PreEditChange(FProperty* PropertyAboutToChange)"
  },
  {
    "label": "PostEditChangeProperty()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditChangeProperty(FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "PostEditUndo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostEditUndo()"
  },
  {
    "label": "IsDataValid()",
    "kind": "Method",
    "detail": "Function (EDataValidationResult)",
    "insertText": "IsDataValid(class FDataValidationContext& Context)"
  },
  {
    "label": "GetAssetRegistryTagMetadata()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTagMetadata(TMap<FName, FAssetRegistryTagMetadata>& OutMetadata)"
  },
  {
    "label": "WillNeverCacheCookedPlatformDataAgain()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WillNeverCacheCookedPlatformDataAgain()"
  },
  {
    "label": "ClearCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearCachedCookedPlatformData(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "ClearAllCachedCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearAllCachedCookedPlatformData()"
  },
  {
    "label": "BeginCacheForCookedPlatformData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginCacheForCookedPlatformData(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "IsCachedCookedPlatformDataLoaded()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsCachedCookedPlatformDataLoaded(const ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "SetLODGroup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetLODGroup(FName NewGroup, bool bRebuildImmediately = true, bool bAllowModify = true)"
  },
  {
    "label": "BroadcastNavCollisionChange()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BroadcastNavCollisionChange()"
  },
  {
    "label": "GetOnExtendedBoundsChanged()",
    "kind": "Method",
    "detail": "Function (FOnExtendedBoundsChanged&)",
    "insertText": "GetOnExtendedBoundsChanged()"
  },
  {
    "label": "RemoveUnusedMaterialSlots()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUnusedMaterialSlots(UStaticMesh* StaticMesh)"
  },
  {
    "label": "AddSourceModel()",
    "kind": "Method",
    "detail": "Function (FStaticMeshSourceModel&)",
    "insertText": "AddSourceModel()"
  },
  {
    "label": "RemoveSourceModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveSourceModel(int32 Index)"
  },
  {
    "label": "GetSourceModels()",
    "kind": "Method",
    "detail": "Function (const TArray<FStaticMeshSourceModel>&)",
    "insertText": "GetSourceModels()"
  },
  {
    "label": "GetSourceModel()",
    "kind": "Method",
    "detail": "Function (FStaticMeshSourceModel&)",
    "insertText": "GetSourceModel(int32 Index)"
  },
  {
    "label": "GetNumSourceModels()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSourceModels()"
  },
  {
    "label": "IsSourceModelValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsSourceModelValid(int32 Index)"
  },
  {
    "label": "MoveSourceModels()",
    "kind": "Method",
    "detail": "Function (TArray<FStaticMeshSourceModel>&&)",
    "insertText": "MoveSourceModels()"
  },
  {
    "label": "SetSourceModels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSourceModels(TArray<FStaticMeshSourceModel>&& SourceModels)"
  },
  {
    "label": "GetHiResSourceModel()",
    "kind": "Method",
    "detail": "Function (FStaticMeshSourceModel&)",
    "insertText": "GetHiResSourceModel()"
  },
  {
    "label": "MoveHiResSourceModel()",
    "kind": "Method",
    "detail": "Function (FStaticMeshSourceModel&&)",
    "insertText": "MoveHiResSourceModel()"
  },
  {
    "label": "SetHiResSourceModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetHiResSourceModel(FStaticMeshSourceModel&& SourceModel)"
  },
  {
    "label": "GetSectionInfoMap()",
    "kind": "Method",
    "detail": "Function (FMeshSectionInfoMap&)",
    "insertText": "GetSectionInfoMap()"
  },
  {
    "label": "GetOriginalSectionInfoMap()",
    "kind": "Method",
    "detail": "Function (FMeshSectionInfoMap&)",
    "insertText": "GetOriginalSectionInfoMap()"
  },
  {
    "label": "IsAsyncTaskComplete()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsAsyncTaskComplete()"
  },
  {
    "label": "TryCancelAsyncTasks()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "TryCancelAsyncTasks()"
  },
  {
    "label": "PostInitProperties()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostInitProperties()"
  },
  {
    "label": "PostLoad()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostLoad()"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "IsPostLoadThreadSafe()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsPostLoadThreadSafe()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "IsReadyForFinishDestroy()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsReadyForFinishDestroy()"
  },
  {
    "label": "GetAssetRegistryTags()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetAssetRegistryTags(FAssetRegistryTagsContext Context)"
  },
  {
    "label": "GetDesc()",
    "kind": "Method",
    "detail": "Function (FString)",
    "insertText": "GetDesc()"
  },
  {
    "label": "GetResourceSizeEx()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetResourceSizeEx(FResourceSizeEx& CumulativeResourceSize)"
  },
  {
    "label": "CanBeClusterRoot()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBeClusterRoot()"
  },
  {
    "label": "CalcCumulativeLODSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "CalcCumulativeLODSize(int32 NumLODs)"
  },
  {
    "label": "GetMipIoFilenameHash()",
    "kind": "Method",
    "detail": "Function (FIoFilenameHash)",
    "insertText": "GetMipIoFilenameHash(const int32 MipIndex)"
  },
  {
    "label": "DoesMipDataExist()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesMipDataExist(const int32 MipIndex)"
  },
  {
    "label": "HasPendingRenderResourceInitialization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasPendingRenderResourceInitialization()"
  },
  {
    "label": "StreamOut()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StreamOut(int32 NewMipCount)"
  },
  {
    "label": "StreamIn()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "StreamIn(int32 NewMipCount, bool bHighPrio)"
  },
  {
    "label": "GetRenderAssetType()",
    "kind": "Method",
    "detail": "Function (EStreamableRenderAssetType)",
    "insertText": "GetRenderAssetType()"
  },
  {
    "label": "CancelAllPendingStreamingActions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CancelAllPendingStreamingActions()"
  },
  {
    "label": "FBuildParameters()",
    "kind": "Method",
    "detail": "Function (struct FBuildParameters { # if PLATFORM_COMPILER_CLANG)",
    "insertText": "FBuildParameters() : bInSilent(false) , OutErrors(nullptr) , bInRebuildUVChannelData(false) , bInEnforceLightmapRestrictions(false)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (} # endif bool bInSilent = false ; TArray<FText>* OutErrors = nullptr ; bool bInRebuildUVChannelData = false ; bool bInEnforceLightmapRestrictions = false ; } ; void)",
    "insertText": "Build(bool bInSilent, TArray<FText>* OutErrors = nullptr)"
  },
  {
    "label": "BatchBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchBuild(const TArray<UStaticMesh*>& InStaticMeshes, bool bInSilent, TFunction<bool(UStaticMesh*)> InProgressCallback = nullptr, TArray<FText>* OutErrors = nullptr)"
  },
  {
    "label": "Build()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Build(const FBuildParameters& BuildParameters = FBuildParameters())"
  },
  {
    "label": "BatchBuild()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BatchBuild(const TArray<UStaticMesh*>& InStaticMeshes, const FBuildParameters& BuildParameters = FBuildParameters(), TFunction<bool(UStaticMesh*)> InProgressCallback = nullptr)"
  },
  {
    "label": "InitResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitResources()"
  },
  {
    "label": "ReleaseResources()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseResources()"
  },
  {
    "label": "UpdateUVChannelData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateUVChannelData(bool bRebuildAll)"
  },
  {
    "label": "GetMaterialBox()",
    "kind": "Method",
    "detail": "Function (FBox)",
    "insertText": "GetMaterialBox(int32 MaterialIndex, const FTransform& Transform)"
  },
  {
    "label": "GetUVChannelData()",
    "kind": "Method",
    "detail": "Function (const FMeshUVChannelInfo*)",
    "insertText": "GetUVChannelData(int32 MaterialIndex)"
  },
  {
    "label": "GetNumVertices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumVertices(int32 LODIndex)"
  },
  {
    "label": "GetNumTexCoords()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumTexCoords(int32 LODIndex)"
  },
  {
    "label": "GetNumNaniteVertices()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumNaniteVertices()"
  },
  {
    "label": "GetNumNaniteTriangles()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumNaniteTriangles()"
  },
  {
    "label": "HasValidRenderData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidRenderData(bool bCheckLODForVerts = true, int32 LODIndex = INDEX_NONE)"
  },
  {
    "label": "HasValidNaniteData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "HasValidNaniteData()"
  },
  {
    "label": "GetMaterialIndexFromImportedMaterialSlotName()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetMaterialIndexFromImportedMaterialSlotName(FName ImportedMaterialSlotName)"
  },
  {
    "label": "GetUsedMaterials()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetUsedMaterials(TArray<UMaterialInterface*>& OutMaterials, TFunctionRef<UMaterialInterface*(int32)> OverrideMaterial)"
  },
  {
    "label": "GetLODForExport()",
    "kind": "Method",
    "detail": "Function (const FStaticMeshLODResources&)",
    "insertText": "GetLODForExport(int32 LODIndex)"
  },
  {
    "label": "CheckLightMapUVs()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckLightMapUVs(UStaticMesh* InStaticMesh, TArray< FString >& InOutAssetsWithMissingUVSets, TArray< FString >& InOutAssetsWithBadUVSets, TArray< FString >& InOutAssetsWithValidUVSets, bool bInVerbose = true)"
  },
  {
    "label": "GetPhysicsTriMeshData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetPhysicsTriMeshData(struct FTriMeshCollisionData* CollisionData, bool InUseAllTriData)"
  },
  {
    "label": "ContainsPhysicsTriMeshData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsPhysicsTriMeshData(bool InUseAllTriData)"
  },
  {
    "label": "PollAsyncPhysicsTriMeshData()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PollAsyncPhysicsTriMeshData(bool InUseAllTriData)"
  },
  {
    "label": "GetTriMeshSizeEstimates()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTriMeshSizeEstimates(struct FTriMeshCollisionDataEstimates& OutTriMeshEstimates, bool bInUseAllTriData)"
  },
  {
    "label": "GetPhysicsTriMeshDataCheckComplex()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "GetPhysicsTriMeshDataCheckComplex(struct FTriMeshCollisionData* CollisionData, bool bInUseAllTriData, bool bInCheckComplexCollisionMesh)"
  },
  {
    "label": "ContainsPhysicsTriMeshDataCheckComplex()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ContainsPhysicsTriMeshDataCheckComplex(bool InUseAllTriData, bool bInCheckComplexCollisionMesh)"
  },
  {
    "label": "SectionHasCollisionEnabled()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SectionHasCollisionEnabled(const FStaticMeshSection& Section, int32 LODIndex, int32 SectionIndex)"
  },
  {
    "label": "WantsNegXTriMesh()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "WantsNegXTriMesh()"
  },
  {
    "label": "GetNumSectionsWithCollision()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetNumSectionsWithCollision()"
  },
  {
    "label": "AddAssetUserData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddAssetUserData(UAssetUserData* InUserData)"
  },
  {
    "label": "RemoveUserDataOfClass()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveUserDataOfClass(TSubclassOf<UAssetUserData> InUserDataClass)"
  },
  {
    "label": "GetAssetUserDataOfClass()",
    "kind": "Method",
    "detail": "Function (UAssetUserData*)",
    "insertText": "GetAssetUserDataOfClass(TSubclassOf<UAssetUserData> InUserDataClass)"
  },
  {
    "label": "GetAssetUserDataArray()",
    "kind": "Method",
    "detail": "Function (const TArray<UAssetUserData*>*)",
    "insertText": "GetAssetUserDataArray()"
  },
  {
    "label": "CreateBodySetup()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateBodySetup()"
  },
  {
    "label": "CreateNavCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateNavCollision(const bool bIsUpdate = false)"
  },
  {
    "label": "RecreateNavCollision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RecreateNavCollision()"
  },
  {
    "label": "MarkAsNotHavingNavigationData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkAsNotHavingNavigationData()"
  },
  {
    "label": "GetVertexColorData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetVertexColorData(TMap<FVector3f, FColor>& VertexColorData)"
  },
  {
    "label": "SetVertexColorData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetVertexColorData(const TMap<FVector3f, FColor>& VertexColorData)"
  },
  {
    "label": "RemoveVertexColors()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveVertexColors()"
  },
  {
    "label": "EnforceLightmapRestrictions()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnforceLightmapRestrictions(bool bUseRenderData = true)"
  },
  {
    "label": "CalculateExtendedBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CalculateExtendedBounds()"
  },
  {
    "label": "AreRenderingResourcesInitialized()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "AreRenderingResourcesInitialized()"
  },
  {
    "label": "CanLODsShareStaticLighting()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanLODsShareStaticLighting()"
  },
  {
    "label": "GetLODGroups()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLODGroups(TArray<FName>& OutLODGroups)"
  },
  {
    "label": "GetLODGroupsDisplayNames()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetLODGroupsDisplayNames(TArray<FText>& OutLODGroupsDisplayNames)"
  },
  {
    "label": "GenerateLodsInPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GenerateLodsInPackage()"
  },
  {
    "label": "PostDuplicate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PostDuplicate(bool bDuplicateForPIE)"
  },
  {
    "label": "OnPreMeshBuild()",
    "kind": "Method",
    "detail": "Function (FOnPreMeshBuild&)",
    "insertText": "OnPreMeshBuild()"
  },
  {
    "label": "GetReductionSettings()",
    "kind": "Method",
    "detail": "Function (struct FMeshReductionSettings)",
    "insertText": "GetReductionSettings(int32 LODIndex)"
  },
  {
    "label": "GetEnableLODStreaming()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetEnableLODStreaming(const class ITargetPlatform* TargetPlatform)"
  },
  {
    "label": "GetPlatformStaticMeshRenderData()",
    "kind": "Method",
    "detail": "Function (FStaticMeshRenderData&)",
    "insertText": "GetPlatformStaticMeshRenderData(UStaticMesh* Mesh, const ITargetPlatform* Platform)"
  },
  {
    "label": "ConvertLegacyLODDistance()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "ConvertLegacyLODDistance()"
  },
  {
    "label": "ConvertLegacyLODScreenArea()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLegacyLODScreenArea()"
  },
  {
    "label": "FixupZeroTriangleSections()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FixupZeroTriangleSections()"
  },
  {
    "label": "ConvertLegacySourceData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ConvertLegacySourceData()"
  },
  {
    "label": "CanBuild()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanBuild()"
  },
  {
    "label": "BeginBuildInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginBuildInternal(FStaticMeshBuildContext* Context = nullptr)"
  },
  {
    "label": "ExecuteBuildInternal()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ExecuteBuildInternal(const FBuildParameters& BuildParameters)"
  },
  {
    "label": "FinishBuildInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishBuildInternal(const TArray<IStaticMeshComponent*>& InAffectedComponents, bool bHasRenderDataChanged, bool bShouldComputeExtendedBounds = true)"
  },
  {
    "label": "LoadMeshDescription()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITORONLY_DATA bool)",
    "insertText": "LoadMeshDescription(int32 LodIndex, FMeshDescription& OutMeshDescription)"
  },
  {
    "label": "CacheDerivedData()",
    "kind": "Method",
    "detail": "Function (# endif public : void)",
    "insertText": "CacheDerivedData()"
  },
  {
    "label": "GetBuildRequiredMemoryEstimate()",
    "kind": "Method",
    "detail": "Function (int64)",
    "insertText": "GetBuildRequiredMemoryEstimate()"
  },
  {
    "label": "PrepareDerivedDataForActiveTargetPlatforms()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PrepareDerivedDataForActiveTargetPlatforms()"
  },
  {
    "label": "CheckForValidMinLODs()",
    "kind": "Method",
    "detail": "Function (private : TOptional<FBoxSphereBounds> CachedMeshDescriptionBounds ; TWeakPtr<class SNotificationItem> ShaderModelNotificationPtr ; void)",
    "insertText": "CheckForValidMinLODs(FPerQualityLevelInt& QualityLocalMinLOD, FPerPlatformInt& LocalMinLOD, int32& OutMinAvailableLOD, TArray<TPair<int32, FName>>& OutInvalidMinLODs)"
  },
  {
    "label": "CheckForMissingShaderModels()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CheckForMissingShaderModels()"
  },
  {
    "label": "BeginPostLoadInternal()",
    "kind": "Method",
    "detail": "Function (FOnPreMeshBuild PreMeshBuild ; FOnPostMeshBuild PostMeshBuild ; bool bCleanUpRedundantMaterialPostLoad ; bool bIsInPostEditChange = false ; # endif void)",
    "insertText": "BeginPostLoadInternal(FStaticMeshPostLoadContext& Context)"
  },
  {
    "label": "ExecutePostLoadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExecutePostLoadInternal(FStaticMeshPostLoadContext& Context)"
  },
  {
    "label": "FinishPostLoadInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FinishPostLoadInternal(FStaticMeshPostLoadContext& Context)"
  },
  {
    "label": "FStaticMeshCompilationContext()",
    "kind": "Method",
    "detail": "Function (} ; class FStaticMeshCompilationContext { public :)",
    "insertText": "FStaticMeshCompilationContext()"
  },
  {
    "label": "FStaticMeshCompilationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStaticMeshCompilationContext(const FStaticMeshCompilationContext&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStaticMeshCompilationContext&)",
    "insertText": "operator(const FStaticMeshCompilationContext&)"
  },
  {
    "label": "FStaticMeshCompilationContext()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FStaticMeshCompilationContext(FStaticMeshCompilationContext&&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FStaticMeshCompilationContext&)",
    "insertText": "operator(FStaticMeshCompilationContext&&)"
  },
  {
    "label": "FStaticMeshBuildContext()",
    "kind": "Method",
    "detail": "Function (bool bShouldComputeExtendedBounds = false ; bool bIsEditorLoadingPackage = false ; } ; class FStaticMeshPostLoadContext : public FStaticMeshCompilationContext { public : bool bNeedsMeshUVDensityFix = false ; bool bNeedsMaterialFixup = false ; bool bIsCookedForEditor = false ; } ; class FStaticMeshBuildContext : public FStaticMeshCompilationContext { public :)",
    "insertText": "FStaticMeshBuildContext(const UStaticMesh::FBuildParameters& InBuildParameters) : BuildParameters(InBuildParameters)"
  },
  {
    "label": "FStaticMeshBuildParameters()",
    "kind": "Method",
    "detail": "Function (} UStaticMesh::FBuildParameters BuildParameters ; bool bHasRenderDataChanged = false ; } ; struct FStaticMeshBuildParameters {)",
    "insertText": "FStaticMeshBuildParameters(UStaticMesh* InStaticMesh, const ITargetPlatform* InTargetPlatform, const FStaticMeshLODGroup& InLODGroup) : StaticMesh(InStaticMesh) , TargetPlatform(InTargetPlatform) , LODGroup(InLODGroup)"
  },
  {
    "label": "BuildStaticMeshDerivedDataKey()",
    "kind": "Method",
    "detail": "Function (} UStaticMesh* StaticMesh ; const ITargetPlatform* TargetPlatform ; const FStaticMeshLODGroup& LODGroup ; } ; namespace UE::Private::StaticMesh { # if WITH_EDITOR FString)",
    "insertText": "BuildStaticMeshDerivedDataKey(const ITargetPlatform* TargetPlatform, UStaticMesh* Mesh, const FStaticMeshLODGroup& LODGroup)"
  }
]