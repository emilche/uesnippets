[
  {
    "label": "IMovieSceneObjectSpawner",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieSceneObjectSpawner"
  },
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UClass",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UClass"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FMovieSceneSpawnable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSpawnable"
  },
  {
    "label": "UMovieSceneSpawnableBindingBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSpawnableBindingBase"
  },
  {
    "label": "FLevelSequenceSpawnRegister",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelSequenceSpawnRegister"
  },
  {
    "label": "FLevelSequenceSpawnRegister()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" MovieSceneSequenceID . h \" # include \" MovieSceneSpawnRegister . h \" # include \" Templates / SharedPointer . h \" # include \" UObject / Class . h \" class IMovieSceneObjectSpawner ; class IMovieScenePlayer ; class UClass ; class UObject ; struct FMovieSceneSpawnable ; class UMovieSceneSpawnableBindingBase ; class FLevelSequenceSpawnRegister : public FMovieSceneSpawnRegister { public :)",
    "insertText": "FLevelSequenceSpawnRegister()"
  },
  {
    "label": "FLevelSequenceSpawnRegister()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLevelSequenceSpawnRegister(const FLevelSequenceSpawnRegister&)"
  },
  {
    "label": "SpawnObject()",
    "kind": "Method",
    "detail": "Function (protected : UObject*)",
    "insertText": "SpawnObject(FMovieSceneSpawnable& Spawnable, FMovieSceneSequenceIDRef TemplateID, TSharedRef<const FSharedPlaybackState> SharedPlaybackState)"
  },
  {
    "label": "DestroySpawnedObject()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroySpawnedObject(UObject& Object, UMovieSceneSpawnableBindingBase* CustomSpawnableBinding)"
  },
  {
    "label": "CanSpawnObject()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR bool)",
    "insertText": "CanSpawnObject(UClass* InClass)"
  }
]