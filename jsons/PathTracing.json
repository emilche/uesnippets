[
  {
    "label": "holds",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "holds"
  },
  {
    "label": "FRDGBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRDGBuilder"
  },
  {
    "label": "FScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FScene"
  },
  {
    "label": "FViewInfo",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FViewInfo"
  },
  {
    "label": "FSceneViewFamily",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSceneViewFamily"
  },
  {
    "label": "FRHIRayTracingShader",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FRHIRayTracingShader"
  },
  {
    "label": "FGlobalShaderMap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FGlobalShaderMap"
  },
  {
    "label": "PrepareSkyTexture()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "PrepareSkyTexture(FRDGBuilder& GraphBuilder, FScene* Scene, const FViewInfo& View, bool SkylightEnabled, bool UseMISCompensation, FPathTracingSkylight* SkylightParameters)"
  },
  {
    "label": "PreparePathTracingRTPSO()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreparePathTracingRTPSO()"
  },
  {
    "label": "PreparePathTracingCloudMaterial()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PreparePathTracingCloudMaterial(FScene* Scene, TArrayView<FViewInfo> Views)"
  },
  {
    "label": "UsesDecals()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesDecals(const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "UsesReferenceAtmosphere()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesReferenceAtmosphere(const FViewInfo& View)"
  },
  {
    "label": "UsesReferenceDOF()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "UsesReferenceDOF(const FViewInfo& View)"
  },
  {
    "label": "NeedsAntiAliasing()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "NeedsAntiAliasing(const FViewInfo& View)"
  }
]