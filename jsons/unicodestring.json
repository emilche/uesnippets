[
  {
    "label": "UnicodeStringToString16()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_I18N_UNICODESTRING_H_ # define BASE_I18N_UNICODESTRING_H_ # include<string> # include \" third_party / icu / source / common / unicode / unistr . h \" # include \" third_party / icu / source / common / unicode / uvernum . h \" # if U_ICU_VERSION_MAJOR_NUM> = 5 9 # include \" third_party / icu / source / common / unicode / char16ptr . h \" # endif namespace base { namespace i18n { std::u16string)",
    "insertText": "UnicodeStringToString16(const icu::UnicodeString& unistr)"
  },
  {
    "label": "u16string()",
    "kind": "Method",
    "detail": "Function (# if U_ICU_VERSION_MAJOR_NUM> = 5 9 return)",
    "insertText": "u16string(icu::toUCharPtr(unistr.getBuffer()), static_cast<size_t>(unistr.length()))"
  },
  {
    "label": "u16string()",
    "kind": "Method",
    "detail": "Function (# else return)",
    "insertText": "u16string(unistr.getBuffer(), static_cast<size_t>(unistr.length()))"
  }
]