[
  {
    "label": "CityHash64()",
    "kind": "Method",
    "detail": "Function (# ifndef ABSL_HASH_INTERNAL_CITY_H_ # define ABSL_HASH_INTERNAL_CITY_H_ # include<stdint . h> # include<stdlib . h> # include<utility> # include \" absl / base / config . h \" namespace absl { ABSL_NAMESPACE_BEGIN namespace hash_internal { uint64_t)",
    "insertText": "CityHash64(const char *s, size_t len)"
  },
  {
    "label": "CityHash64WithSeed()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "CityHash64WithSeed(const char *s, size_t len, uint64_t seed)"
  },
  {
    "label": "CityHash64WithSeeds()",
    "kind": "Method",
    "detail": "Function (uint64_t)",
    "insertText": "CityHash64WithSeeds(const char *s, size_t len, uint64_t seed0, uint64_t seed1)"
  },
  {
    "label": "CityHash32()",
    "kind": "Method",
    "detail": "Function (uint32_t)",
    "insertText": "CityHash32(const char *s, size_t len)"
  }
]