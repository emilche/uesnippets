[
  {
    "label": "FLoaderAdapterList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLoaderAdapterList"
  },
  {
    "label": "FLoaderAdapterList()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" WorldPartition / WorldPartitionActorLoaderInterface . h \" # if WITH_EDITOR class FLoaderAdapterList : public IWorldPartitionActorLoaderInterface::ILoaderAdapter { public :)",
    "insertText": "FLoaderAdapterList(UWorld* InWorld)"
  },
  {
    "label": "FLoaderAdapterList()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FLoaderAdapterList()"
  },
  {
    "label": "GetActors()",
    "kind": "Method",
    "detail": "Function (} const TSet<FWorldPartitionHandle>&)",
    "insertText": "GetActors()"
  },
  {
    "label": "HandleActorContainer()",
    "kind": "Method",
    "detail": "Function (private : void)",
    "insertText": "HandleActorContainer(const FWorldPartitionHandle& InActor, TFunctionRef<void(const FWorldPartitionHandle&)> InOperation)"
  }
]