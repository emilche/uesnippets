[
  {
    "label": "VP8_COMP",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VP8_COMP"
  },
  {
    "label": "vp8_compute_skin_block()",
    "kind": "Method",
    "detail": "Function (# ifndef VPX_VP8_COMMON_VP8_SKIN_DETECTION_H_ # define VPX_VP8_COMMON_VP8_SKIN_DETECTION_H_ # include \" vp8 / encoder / onyx_int . h \" # include \" vpx / vpx_integer . h \" # include \" vpx_dsp / skin_detection . h \" # include \" vpx_scale / yv12config . h \" # ifdef __cplusplus \" C \" { # endif struct VP8_COMP ; typedef enum { SKIN_8X8,SKIN_16X16 } SKIN_DETECTION_BLOCK_SIZE ; int)",
    "insertText": "vp8_compute_skin_block(const uint8_t *y, const uint8_t *u, const uint8_t *v, int stride, int strideuv, SKIN_DETECTION_BLOCK_SIZE bsize, int consec_zeromv, int curr_motion_magn)"
  },
  {
    "label": "vp8_compute_skin_map()",
    "kind": "Method",
    "detail": "Function (# ifdef OUTPUT_YUV_SKINMAP void)",
    "insertText": "vp8_compute_skin_map(struct VP8_COMP *const cpi, FILE *yuv_skinmap_file)"
  }
]