[
  {
    "label": "MultiplexDecoderAdapter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MultiplexDecoderAdapter"
  },
  {
    "label": "AdapterDecodedImageCallback",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "AdapterDecodedImageCallback"
  },
  {
    "label": "DecodedImageData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "DecodedImageData"
  },
  {
    "label": "AugmentingData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "AugmentingData"
  },
  {
    "label": "MultiplexDecoderAdapter()",
    "kind": "Method",
    "detail": "Function (# ifndef MODULES_VIDEO_CODING_CODECS_MULTIPLEX_INCLUDE_MULTIPLEX_DECODER_ADAPTER_H_ # define MODULES_VIDEO_CODING_CODECS_MULTIPLEX_INCLUDE_MULTIPLEX_DECODER_ADAPTER_H_ # include<map> # include<memory> # include<vector> # include \" api / video_codecs / sdp_video_format . h \" # include \" api / video_codecs / video_decoder . h \" # include \" api / video_codecs / video_decoder_factory . h \" # include \" modules / video_coding / codecs / multiplex / include / multiplex_encoder_adapter . h \" namespace webrtc { class MultiplexDecoderAdapter : public VideoDecoder { public :)",
    "insertText": "MultiplexDecoderAdapter(VideoDecoderFactory* factory, const SdpVideoFormat& associated_format, bool supports_augmenting_data = false)"
  },
  {
    "label": "MultiplexDecoderAdapter()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "MultiplexDecoderAdapter()"
  },
  {
    "label": "Configure()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Configure(const Settings& settings)"
  },
  {
    "label": "Decode()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Decode(const EncodedImage& input_image, bool missing_frames, int64_t render_time_ms)"
  },
  {
    "label": "RegisterDecodeCompleteCallback()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "RegisterDecodeCompleteCallback(DecodedImageCallback* callback)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (int32_t)",
    "insertText": "Release()"
  },
  {
    "label": "Decoded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Decoded(AlphaCodecStream stream_idx, VideoFrame* decoded_image, absl::optional<int32_t> decode_time_ms, absl::optional<uint8_t> qp)"
  },
  {
    "label": "MergeAlphaImages()",
    "kind": "Method",
    "detail": "Function (private : class AdapterDecodedImageCallback ; struct DecodedImageData ; struct AugmentingData ; void)",
    "insertText": "MergeAlphaImages(VideoFrame* decoded_image, const absl::optional<int32_t>& decode_time_ms, const absl::optional<uint8_t>& qp, VideoFrame* multiplex_decoded_image, const absl::optional<int32_t>& multiplex_decode_time_ms, const absl::optional<uint8_t>& multiplex_qp, std::unique_ptr<uint8_t[]> augmenting_data, uint16_t augmenting_data_length)"
  }
]