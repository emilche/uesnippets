[
  {
    "label": "FCharacterGroundConstraintSettings",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCharacterGroundConstraintSettings"
  },
  {
    "label": "FCharacterGroundConstraintDynamicData",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FCharacterGroundConstraintDynamicData"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Chaos / Core . h \" namespace Chaos { class FCharacterGroundConstraintSettings { public : bool)",
    "insertText": "operator(const FCharacterGroundConstraintSettings& Other)"
  },
  {
    "label": "FVec3()",
    "kind": "Method",
    "detail": "Function (} FVec3 VerticalAxis =)",
    "insertText": "FVec3(0.0, 0.0, 1.0)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FReal TargetHeight = 0 . 0 ; FReal RadialForceLimit = 1 5 0 0 . 0 ; FReal FrictionForceLimit = 1 0 0 . 0 ; FReal TwistTorqueLimit = 1 0 0 0 . 0 ; FReal SwingTorqueLimit = 5 0 0 0 . 0 ; FReal CosMaxWalkableSlopeAngle = 0 . 6 3 3 ; FReal DampingFactor = 0 . 0 ; FReal AssumedOnGroundHeight = 2 . 0 ; void* UserData = nullptr ; } ; class FCharacterGroundConstraintDynamicData { public : bool)",
    "insertText": "operator(const FCharacterGroundConstraintDynamicData& Other)"
  }
]