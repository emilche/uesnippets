[
  {
    "label": "FPackagePath",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPackagePath"
  },
  {
    "label": "IPackageWriter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPackageWriter"
  },
  {
    "label": "ITargetPlatform",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ITargetPlatform"
  },
  {
    "label": "UPackage",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UPackage"
  },
  {
    "label": "FSoftObjectPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSoftObjectPath"
  },
  {
    "label": "IDeterminismHelper",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IDeterminismHelper"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FObjectSaveContextData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FObjectSaveContextData"
  },
  {
    "label": "FObjectCollectSaveOverridesContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectCollectSaveOverridesContext"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FObjectPreSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPreSaveContext"
  },
  {
    "label": "FObjectSavePackageSerializeContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectSavePackageSerializeContext"
  },
  {
    "label": "FObjectPostSaveContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPostSaveContext"
  },
  {
    "label": "FObjectPreSaveRootContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPreSaveRootContext"
  },
  {
    "label": "FObjectPostSaveRootContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FObjectPostSaveRootContext"
  },
  {
    "label": "FObjectSaveContextData()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / UnrealString . h \" # include \" HAL / Platform . h \" # include \" Serialization / ArchiveSavePackageData . h \" # include \" Templates / RefCounting . h \" # include \" UObject / CookEnums . h \" # include \" UObject / ObjectSaveOverride . h \" # if WITH_EDITOR # include \" Cooker / CookDependency . h \" # endif class FPackagePath ; class IPackageWriter ; class ITargetPlatform ; class UPackage ; struct FSoftObjectPath ; # if WITH_EDITOR namespace UE::Cook { class IDeterminismHelper ; } # endif enum class EObjectSaveContextPhase : uint8 { Invalid,PreSave,Harvest,Write,PostSave,} ; struct FObjectSaveContextData {)",
    "insertText": "FObjectSaveContextData()"
  },
  {
    "label": "FObjectSaveContextData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectSaveContextData(UPackage* Package, const ITargetPlatform* InTargetPlatform, const TCHAR* InTargetFilename, uint32 InSaveFlags)"
  },
  {
    "label": "FObjectSaveContextData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FObjectSaveContextData(UPackage* Package, const ITargetPlatform* InTargetPlatform, const FPackagePath& TargetPath, uint32 InSaveFlags)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(UPackage* Package, const ITargetPlatform* InTargetPlatform, const TCHAR* InTargetFilename, uint32 InSaveFlags)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Set(UPackage* Package, const ITargetPlatform* InTargetPlatform, const FPackagePath& TargetPath, uint32 InSaveFlags)"
  },
  {
    "label": "AddSaveOverride()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddSaveOverride(UObject* Target, FObjectSaveOverride InOverride)"
  },
  {
    "label": "Merge()",
    "kind": "Method",
    "detail": "Function (MatchingSaveOverride ->)",
    "insertText": "Merge(InOverride)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (} else { SaveOverrides .)",
    "insertText": "Add(Target, MoveTemp(InOverride))"
  },
  {
    "label": "FObjectCollectSaveOverridesContext()",
    "kind": "Method",
    "detail": "Function (} } FString TargetFilename ; const ITargetPlatform* TargetPlatform = nullptr ; IPackageWriter* PackageWriter = nullptr ; UObject* Object = nullptr ; uint32 SaveFlags = 0 ; uint32 OriginalPackageFlags = 0 ; UE::Cook::ECookType CookType = UE::Cook::ECookType::Unknown ; UE::Cook::ECookingDLC CookingDLC = UE::Cook::ECookingDLC::Unknown ; EObjectSaveContextPhase ObjectSaveContextPhase = EObjectSaveContextPhase::Invalid ; bool bProceduralSave = false ; bool bUpdatingLoadedPath = false ; bool bOuterConcurrentSave = true ; bool bSaveSucceeded = true ; bool bDeterminismDebug = false ; # if WITH_EDITOR TArray<UE::Cook::FCookDependency> CookBuildDependencies ; TArray<FSoftObjectPath> CookRuntimeDependencies ; # endif TMap<UObject*,FObjectSaveOverride> SaveOverrides ; bool bCleanupRequired = false ; int32 NumRefPasses = 0 ; bool bBaseClassCalled = false ; } ; class FObjectCollectSaveOverridesContext { public :)",
    "insertText": "FObjectCollectSaveOverridesContext(FObjectSaveContextData& InData) : Data(InData)"
  },
  {
    "label": "FObjectCollectSaveOverridesContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObjectCollectSaveOverridesContext(const FObjectCollectSaveOverridesContext& Other) : Data(Other.Data)"
  },
  {
    "label": "IsCooking()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCooking()"
  },
  {
    "label": "IsCookOnTheFly()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCookOnTheFly()"
  },
  {
    "label": "IsCookTypeUnknown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCookTypeUnknown()"
  },
  {
    "label": "GetCookType()",
    "kind": "Method",
    "detail": "Function (} UE::Cook::ECookType)",
    "insertText": "GetCookType()"
  },
  {
    "label": "AddSaveOverride()",
    "kind": "Method",
    "detail": "Function (Data .)",
    "insertText": "AddSaveOverride(Target, MoveTemp(InOverride))"
  },
  {
    "label": "FObjectPreSaveContext()",
    "kind": "Method",
    "detail": "Function (} protected : FObjectSaveContextData& Data ; class UObject ; } ; class FObjectPreSaveContext { public :)",
    "insertText": "FObjectPreSaveContext(FObjectSaveContextData& InData) : Data(InData)"
  },
  {
    "label": "FObjectPreSaveContext()",
    "kind": "Method",
    "detail": "Function (+ + Data . NumRefPasses ; })",
    "insertText": "FObjectPreSaveContext(const FObjectPreSaveContext& Other) : Data(Other.Data)"
  },
  {
    "label": "GetTargetFilename()",
    "kind": "Method",
    "detail": "Function (+ + Data . NumRefPasses ; } const TCHAR*)",
    "insertText": "GetTargetFilename()"
  },
  {
    "label": "AddCookRuntimeDependency()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddCookRuntimeDependency(FSoftObjectPath Dependency)"
  },
  {
    "label": "HarvestCookRuntimeDependencies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HarvestCookRuntimeDependencies(UObject* HarvestReferencesFrom)"
  },
  {
    "label": "IsDeterminismDebug()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsDeterminismDebug()"
  },
  {
    "label": "RegisterDeterminismHelper()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterDeterminismHelper(const TRefCountPtr<UE::Cook::IDeterminismHelper>& DeterminismHelper)"
  },
  {
    "label": "IsProceduralSave()",
    "kind": "Method",
    "detail": "Function (# endif bool)",
    "insertText": "IsProceduralSave()"
  },
  {
    "label": "FObjectSavePackageSerializeContext()",
    "kind": "Method",
    "detail": "Function (} protected : FObjectSaveContextData& Data ; class UObject ; } ; class FObjectSavePackageSerializeContext { public :)",
    "insertText": "FObjectSavePackageSerializeContext(FObjectSaveContextData& InData) : Data(InData)"
  },
  {
    "label": "FObjectSavePackageSerializeContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObjectSavePackageSerializeContext(const FObjectSavePackageSerializeContext& Other) : Data(Other.Data)"
  },
  {
    "label": "FObjectPostSaveContext()",
    "kind": "Method",
    "detail": "Function (+ + Data . NumRefPasses ; })",
    "insertText": "FObjectPostSaveContext(const FObjectPostSaveContext& Other) : Data(Other.Data)"
  },
  {
    "label": "FObjectPreSaveRootContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObjectPreSaveRootContext(const FObjectPreSaveRootContext& Other) : FObjectPreSaveContext(Other.Data)"
  },
  {
    "label": "SetCleanupRequired()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCleanupRequired(bool bCleanupRequired)"
  },
  {
    "label": "FObjectPostSaveRootContext()",
    "kind": "Method",
    "detail": "Function (Data . bCleanupRequired = bCleanupRequired ; } } ; class FObjectPostSaveRootContext : public FObjectPostSaveContext { public :)",
    "insertText": "FObjectPostSaveRootContext(FObjectSaveContextData& InData) : FObjectPostSaveContext(InData)"
  },
  {
    "label": "FObjectPostSaveRootContext()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FObjectPostSaveRootContext(const FObjectPostSaveRootContext& Other) : FObjectPostSaveContext(Other.Data)"
  },
  {
    "label": "IsCleanupRequired()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsCleanupRequired()"
  }
]