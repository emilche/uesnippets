[
  {
    "label": "FMenuBuilder",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FMenuBuilder"
  },
  {
    "label": "UEdGraph",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UEdGraph"
  },
  {
    "label": "UWidgetBlueprint",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UWidgetBlueprint"
  },
  {
    "label": "FEditorPropertyPath",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEditorPropertyPath"
  },
  {
    "label": "SFunctionSelector",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SFunctionSelector"
  },
  {
    "label": "FFunctionInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFunctionInfo"
  },
  {
    "label": "DECLARE_DELEGATE_OneParam()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Visibility . h \" # include \" Input / Reply . h \" # include \" Widgets / SWidget . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" # include \" WidgetBlueprintEditor . h \" # include \" EdGraph / EdGraphSchema . h \" # include \" PropertyHandle . h \" class FMenuBuilder ; class UEdGraph ; class UWidgetBlueprint ; struct FEditorPropertyPath ; class SFunctionSelector : public SCompoundWidget { public :)",
    "insertText": "DECLARE_DELEGATE_OneParam(FFunctionDelegate, FName)"
  },
  {
    "label": "DECLARE_DELEGATE()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DECLARE_DELEGATE(FResetDelegate)"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SLATE_BEGIN_ARGS(SFunctionSelector)"
  },
  {
    "label": "SLATE_ATTRIBUTE()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ATTRIBUTE(TOptional<FName>, CurrentFunction) SLATE_EVENT(FFunctionDelegate, OnSelectedFunction) SLATE_EVENT(FResetDelegate, OnResetFunction) SLATE_END_ARGS() void Construct(const FArguments& InArgs, TSharedRef<FWidgetBlueprintEditor> InEditor, UFunction* InAllowedSignature)"
  },
  {
    "label": "FFunctionInfo()",
    "kind": "Method",
    "detail": "Function (protected : struct FFunctionInfo {)",
    "insertText": "FFunctionInfo()"
  },
  {
    "label": "OnGenerateDelegateMenu()",
    "kind": "Method",
    "detail": "Function (} FName FuncName ; FText DisplayName ; FString Tooltip ; } ; TSharedRef<SWidget>)",
    "insertText": "OnGenerateDelegateMenu()"
  },
  {
    "label": "FillPropertyMenu()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FillPropertyMenu(FMenuBuilder& MenuBuilder, UStruct* OwnerStruct)"
  },
  {
    "label": "GetCurrentBindingText()",
    "kind": "Method",
    "detail": "Function (FText)",
    "insertText": "GetCurrentBindingText()"
  },
  {
    "label": "CanReset()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanReset()"
  },
  {
    "label": "HandleRemoveBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleRemoveBinding()"
  },
  {
    "label": "HandleAddFunctionBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleAddFunctionBinding(TSharedPtr<FFunctionInfo> SelectedFunction)"
  },
  {
    "label": "HandleCreateAndAddBinding()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "HandleCreateAndAddBinding()"
  },
  {
    "label": "GotoFunction()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GotoFunction(UEdGraph* FunctionGraph)"
  },
  {
    "label": "GetGotoBindingVisibility()",
    "kind": "Method",
    "detail": "Function (EVisibility)",
    "insertText": "GetGotoBindingVisibility()"
  },
  {
    "label": "HandleGotoBindingClicked()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "HandleGotoBindingClicked()"
  },
  {
    "label": "ForEachBindableFunction()",
    "kind": "Method",
    "detail": "Function (private : template<Predicate> void)",
    "insertText": "ForEachBindableFunction(UClass* FromClass, Predicate Pred)"
  }
]