[
  {
    "label": "TreeFilterHandler",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "TreeFilterHandler"
  },
  {
    "label": "TreeFilterHandler()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Misc / IFilter . h \" # include \" Widgets / Views / STreeView . h \" template<ItemType> class TreeFilterHandler { public : typedef TSlateDelegates<ItemType>::FOnGetChildren FOnGetChildren ; public :)",
    "insertText": "TreeFilterHandler()"
  },
  {
    "label": "SetTreeView()",
    "kind": "Method",
    "detail": "Function (TreeView = nullptr ; Filter = nullptr ; RootItems = nullptr ; TreeRootItems = nullptr ; bIsEnabled = false ; bWasEnabled = false ; } void)",
    "insertText": "SetTreeView(STreeView<ItemType>* InTreeView)"
  },
  {
    "label": "SetFilter()",
    "kind": "Method",
    "detail": "Function (TreeView = InTreeView ; } void)",
    "insertText": "SetFilter(IFilter<ItemType>* InFilter)"
  },
  {
    "label": "SetRootItems()",
    "kind": "Method",
    "detail": "Function (Filter = InFilter ; } void)",
    "insertText": "SetRootItems(TArray<ItemType>* InRootItems, TArray<ItemType>* InTreeRootItems)"
  },
  {
    "label": "SetGetChildrenDelegate()",
    "kind": "Method",
    "detail": "Function (RootItems = InRootItems ; TreeRootItems = InTreeRootItems ; } void)",
    "insertText": "SetGetChildrenDelegate(FOnGetChildren InGetChildrenDelegate)"
  },
  {
    "label": "GetIsEnabled()",
    "kind": "Method",
    "detail": "Function (GetChildrenDelegate = InGetChildrenDelegate ; } bool)",
    "insertText": "GetIsEnabled()"
  },
  {
    "label": "RemoveCachedItem()",
    "kind": "Method",
    "detail": "Function (bIsEnabled = bInIsEnabled ; } void)",
    "insertText": "RemoveCachedItem(ItemType ItemToRemove)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (PrefilterExpandedItems .)",
    "insertText": "Remove(ItemToRemove)"
  },
  {
    "label": "RefreshAndFilterTree()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RefreshAndFilterTree()"
  },
  {
    "label": "Empty()",
    "kind": "Method",
    "detail": "Function (TreeRootItems ->)",
    "insertText": "Empty()"
  },
  {
    "label": "GetExpandedItems()",
    "kind": "Method",
    "detail": "Function (TreeView ->)",
    "insertText": "GetExpandedItems(PrefilterExpandedItems)"
  },
  {
    "label": "for()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "for(auto RootItem : *RootItems)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TreeRootItems ->)",
    "insertText": "Add(RootItem)"
  },
  {
    "label": "if()",
    "kind": "Method",
    "detail": "Function (} } } else {)",
    "insertText": "if(bWasEnabled)"
  },
  {
    "label": "ClearExpandedItems()",
    "kind": "Method",
    "detail": "Function (TreeView ->)",
    "insertText": "ClearExpandedItems()"
  },
  {
    "label": "SetItemExpansion()",
    "kind": "Method",
    "detail": "Function (TreeView ->)",
    "insertText": "SetItemExpansion(PrefilterExpandedItem, true)"
  },
  {
    "label": "RequestTreeRefresh()",
    "kind": "Method",
    "detail": "Function (} } TreeView ->)",
    "insertText": "RequestTreeRefresh()"
  },
  {
    "label": "OnGetFilteredChildren()",
    "kind": "Method",
    "detail": "Function (bWasEnabled = bIsEnabled ; } } void)",
    "insertText": "OnGetFilteredChildren(ItemType Parent, TArray<ItemType>& FilteredChildren)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (TArray<ItemType> AllChildren ; GetChildrenDelegate .)",
    "insertText": "Execute(Parent, AllChildren)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (FilteredChildren .)",
    "insertText": "Add(Child)"
  },
  {
    "label": "Execute()",
    "kind": "Method",
    "detail": "Function (} } } else { GetChildrenDelegate .)",
    "insertText": "Execute(Parent, FilteredChildren)"
  },
  {
    "label": "ExpandAndCacheMatches()",
    "kind": "Method",
    "detail": "Function (} } private : bool)",
    "insertText": "ExpandAndCacheMatches(ItemType Parent)"
  },
  {
    "label": "ExpandAndCacheMatches()",
    "kind": "Method",
    "detail": "Function (bChildMatches | =)",
    "insertText": "ExpandAndCacheMatches(Child)"
  },
  {
    "label": "PassesFilter()",
    "kind": "Method",
    "detail": "Function (} bool bParentMatches = Filter ->)",
    "insertText": "PassesFilter(Parent)"
  },
  {
    "label": "SetItemExpansion()",
    "kind": "Method",
    "detail": "Function (TreeView ->)",
    "insertText": "SetItemExpansion(Parent, true)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (ItemsPassingFilter .)",
    "insertText": "Add(Parent)"
  }
]