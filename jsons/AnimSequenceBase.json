[
  {
    "label": "of",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "of"
  },
  {
    "label": "ETypeAdvanceAnim",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ETypeAdvanceAnim"
  },
  {
    "label": "FAnimationPoseData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationPoseData"
  },
  {
    "label": "FAnimDataModelNotifPayload",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimDataModelNotifPayload"
  },
  {
    "label": "UAnimDataModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimDataModel"
  },
  {
    "label": "IAnimationDataModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IAnimationDataModel"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "UAnimSequenceBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequenceBase"
  },
  {
    "label": "FAnimNotifyEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyEvent"
  },
  {
    "label": "FRawCurveTracks",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FRawCurveTracks"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "FCompactPose",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FCompactPose"
  },
  {
    "label": "FAnimNotifyQueue",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNotifyQueue"
  },
  {
    "label": "UAnimSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimSequence"
  },
  {
    "label": "DeclareConstructClasses()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DeclareConstructClasses(TArray<FTopLevelAssetPath>& OutConstructClasses, const UClass* SpecificSubclass)"
  },
  {
    "label": "SortNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SortNotifies()"
  },
  {
    "label": "RemoveNotifies()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "RemoveNotifies(const TArray<FName>& NotifiesToRemove)"
  },
  {
    "label": "RemoveNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNotifies()"
  },
  {
    "label": "RenameNotifies()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RenameNotifies(FName InOldName, FName InNewName)"
  },
  {
    "label": "InitializeNotifyTrack()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "InitializeNotifyTrack()"
  },
  {
    "label": "ClampNotifiesAtEndOfSequence()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClampNotifiesAtEndOfSequence()"
  },
  {
    "label": "RefreshCacheData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RefreshCacheData()"
  },
  {
    "label": "PURE_VIRTUAL()",
    "kind": "Method",
    "detail": "Function (const)",
    "insertText": "PURE_VIRTUAL(UAnimSequenceBase::GetAnimationPose, )"
  },
  {
    "label": "FMarkerSyncAnimPosition()",
    "kind": "Method",
    "detail": "Function (return)",
    "insertText": "FMarkerSyncAnimPosition()"
  },
  {
    "label": "DECLARE_MULTICAST_DELEGATE()",
    "kind": "Method",
    "detail": "Function (private:)",
    "insertText": "DECLARE_MULTICAST_DELEGATE( FOnNotifyChangedMulticaster )"
  },
  {
    "label": "RegisterOnNotifyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterOnNotifyChanged(const FOnNotifyChanged& Delegate)"
  },
  {
    "label": "UnregisterOnNotifyChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterOnNotifyChanged(void* Unregister)"
  },
  {
    "label": "OnEndLoadPackage()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnEndLoadPackage(const FEndLoadPackageContext& Context)"
  },
  {
    "label": "OnAnimModelLoaded()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnimModelLoaded()"
  },
  {
    "label": "PopulateModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateModel()"
  },
  {
    "label": "PopulateWithExistingModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "PopulateWithExistingModel(TScriptInterface<IAnimationDataModel> ExistingDataModel)"
  },
  {
    "label": "OnModelModified()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnModelModified(const EAnimDataModelNotifyType& NotifyType, IAnimationDataModel* Model, const FAnimDataModelNotifPayload& Payload)"
  },
  {
    "label": "BindToModelModificationEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BindToModelModificationEvent()"
  },
  {
    "label": "CopyDataModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CopyDataModel(const TScriptInterface<IAnimationDataModel>& ModelToDuplicate)"
  },
  {
    "label": "CreateModel()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CreateModel()"
  }
]