[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FAnimNode_SequenceEvaluatorBase",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequenceEvaluatorBase"
  },
  {
    "label": "FAnimNode_SequenceEvaluator",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequenceEvaluator"
  },
  {
    "label": "UAnimGraphNode_SequenceEvaluator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimGraphNode_SequenceEvaluator"
  },
  {
    "label": "FAnimNode_SequenceEvaluator_Standalone",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimNode_SequenceEvaluator_Standalone"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Animation / AnimNode_AssetPlayerBase . h \" # include \" Animation / AnimSequenceBase . h \" # include \" AnimNode_SequenceEvaluator . generated . h \")",
    "insertText": "UENUM(BlueprintType)"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (enum Type : int { NoReset,StartPosition,ExplicitTime,} ; })",
    "insertText": "USTRUCT(BlueprintInternalUseOnly)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY()"
  },
  {
    "label": "GetCurrentAssetTime()",
    "kind": "Method",
    "detail": "Function (public : float)",
    "insertText": "GetCurrentAssetTime()"
  },
  {
    "label": "GetCurrentAssetLength()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetCurrentAssetLength()"
  },
  {
    "label": "Initialize_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Initialize_AnyThread(const FAnimationInitializeContext& Context)"
  },
  {
    "label": "CacheBones_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CacheBones_AnyThread(const FAnimationCacheBonesContext& Context)"
  },
  {
    "label": "UpdateAssetPlayer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateAssetPlayer(const FAnimationUpdateContext& Context)"
  },
  {
    "label": "Evaluate_AnyThread()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Evaluate_AnyThread(FPoseContext& Output)"
  },
  {
    "label": "GatherDebugData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GatherDebugData(FNodeDebugData& DebugData)"
  },
  {
    "label": "GetAccumulatedTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetAccumulatedTime()"
  },
  {
    "label": "SetAccumulatedTime()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetAccumulatedTime(float NewTime)"
  },
  {
    "label": "SetExplicitTime()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetExplicitTime(NewTime)"
  },
  {
    "label": "GetAnimAsset()",
    "kind": "Method",
    "detail": "Function (} UAnimationAsset*)",
    "insertText": "GetAnimAsset()"
  },
  {
    "label": "SetExplicitPreviousTime()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetExplicitPreviousTime(float PreviousTime)"
  },
  {
    "label": "GetEffectiveDeltaTime()",
    "kind": "Method",
    "detail": "Function (InternalTimeAccumulator = PreviousTime ; } float)",
    "insertText": "GetEffectiveDeltaTime(float ExplicitTime, float PrevExplicitTime)"
  },
  {
    "label": "SetSequence()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetSequence(UAnimSequenceBase* InSequence)"
  },
  {
    "label": "SetReinitializationBehavior()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetReinitializationBehavior(TEnumAsByte<ESequenceEvalReinit::Type> InBehavior)"
  },
  {
    "label": "GetSequence()",
    "kind": "Method",
    "detail": "Function (} UAnimSequenceBase*)",
    "insertText": "GetSequence()"
  },
  {
    "label": "SetShouldLoop()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetShouldLoop(bool bInShouldLoop)"
  },
  {
    "label": "GetExplicitTime()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetExplicitTime()"
  },
  {
    "label": "SetExplicitTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetExplicitTime(float InTime)"
  },
  {
    "label": "GetTeleportToExplicitTime()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetTeleportToExplicitTime()"
  },
  {
    "label": "GetReinitializationBehavior()",
    "kind": "Method",
    "detail": "Function (TEnumAsByte<ESequenceEvalReinit::Type>)",
    "insertText": "GetReinitializationBehavior()"
  },
  {
    "label": "GetStartPosition()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetStartPosition()"
  },
  {
    "label": "GetGroupName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetGroupName()"
  },
  {
    "label": "GetGroupRole()",
    "kind": "Method",
    "detail": "Function (EAnimGroupRole::Type)",
    "insertText": "GetGroupRole()"
  },
  {
    "label": "GetGroupMethod()",
    "kind": "Method",
    "detail": "Function (EAnimSyncMethod)",
    "insertText": "GetGroupMethod()"
  },
  {
    "label": "GetIgnoreForRelevancyTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetIgnoreForRelevancyTest()"
  },
  {
    "label": "IsLooping()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsLooping()"
  },
  {
    "label": "SetGroupName()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGroupName(FName InGroupName)"
  },
  {
    "label": "SetGroupRole()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGroupRole(EAnimGroupRole::Type InRole)"
  },
  {
    "label": "SetGroupMethod()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetGroupMethod(EAnimSyncMethod InMethod)"
  },
  {
    "label": "SetIgnoreForRelevancyTest()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetIgnoreForRelevancyTest(bool bInIgnoreForRelevancyTest)"
  },
  {
    "label": "ShouldUseExplicitFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldUseExplicitFrame()"
  },
  {
    "label": "SetShouldUseExplicitFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetShouldUseExplicitFrame(bool bFlag)"
  },
  {
    "label": "SetExplicitFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetExplicitFrame(int32 InFrame)"
  },
  {
    "label": "GetExplicitFrame()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetExplicitFrame()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() private: UPROPERTY(EditAnywhere, Category=Sync)"
  },
  {
    "label": "SetTeleportToExplicitTime()",
    "kind": "Method",
    "detail": "Function (ExplicitTime = InTime ; return true ; } void)",
    "insertText": "SetTeleportToExplicitTime(bool bInTeleport)"
  }
]