[
  {
    "label": "UNavigationDataChunk",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationDataChunk"
  },
  {
    "label": "UNavigationSystemBase",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UNavigationSystemBase"
  },
  {
    "label": "ANavigationDataChunkActor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANavigationDataChunkActor"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" ActorPartition / PartitionActor . h \" # include \" Containers / Array . h \" # include \" NavigationDataChunkActor . generated . h \" class UNavigationDataChunk ; class UNavigationSystemBase ;)",
    "insertText": "UCLASS(NotPlaceable, MinimalAPI)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_UCLASS_BODY() public: #if WITH_EDITOR ENGINE_API virtual void PostLoad()"
  },
  {
    "label": "BeginDestroy()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "BeginDestroy()"
  },
  {
    "label": "GetDefaultGridSize()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetDefaultGridSize(UWorld* InWorld)"
  },
  {
    "label": "AddNavigationDataChunkInEditor()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNavigationDataChunkInEditor(const UNavigationSystemBase& NavSys)"
  },
  {
    "label": "GetNavDataChunk()",
    "kind": "Method",
    "detail": "Function (# endif const TArray<UNavigationDataChunk*>&)",
    "insertText": "GetNavDataChunk()"
  },
  {
    "label": "SetDataChunkActorBounds()",
    "kind": "Method",
    "detail": "Function (# if WITH_EDITOR void)",
    "insertText": "SetDataChunkActorBounds(const FBox& InBounds)"
  },
  {
    "label": "CanChangeIsSpatiallyLoadedFlag()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "CanChangeIsSpatiallyLoadedFlag()"
  },
  {
    "label": "GetBounds()",
    "kind": "Method",
    "detail": "Function (# endif FBox)",
    "insertText": "GetBounds()"
  },
  {
    "label": "EndPlay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EndPlay(const EEndPlayReason::Type EndPlayReason)"
  },
  {
    "label": "GetActorBounds()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetActorBounds(bool bOnlyCollidingComponents, FVector& OutOrigin, FVector& OutBoxExtent, bool bIncludeFromChildActors)"
  },
  {
    "label": "AddNavigationDataChunkToWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddNavigationDataChunkToWorld()"
  },
  {
    "label": "RemoveNavigationDataChunkFromWorld()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveNavigationDataChunkFromWorld()"
  },
  {
    "label": "Log()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Log(const TCHAR* FunctionName)"
  }
]