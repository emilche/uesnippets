[
  {
    "label": "_cef_browser_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_browser_t"
  },
  {
    "label": "_cef_web_plugin_info_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_web_plugin_info_t"
  },
  {
    "label": "_cef_web_plugin_info_visitor_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_web_plugin_info_visitor_t"
  },
  {
    "label": "_cef_web_plugin_unstable_callback_t",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "_cef_web_plugin_unstable_callback_t"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (# ifndef CEF_INCLUDE_CAPI_CEF_WEB_PLUGIN_CAPI_H_ # define CEF_INCLUDE_CAPI_CEF_WEB_PLUGIN_CAPI_H_ # pragma once # include \" include / capi / cef_base_capi . h \" # ifdef __cplusplus \" C \" { # endif struct _cef_browser_t ; typedef struct _cef_web_plugin_info_t { cef_base_ref_counted_t base ;)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_name)( struct _cef_web_plugin_info_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_path)( struct _cef_web_plugin_info_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_version)( struct _cef_web_plugin_info_t* self)"
  },
  {
    "label": "cef_string_userfree_t()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "cef_string_userfree_t(CEF_CALLBACK* get_description)( struct _cef_web_plugin_info_t* self)"
  },
  {
    "label": "int()",
    "kind": "Method",
    "detail": "Function (} cef_web_plugin_info_t ; typedef struct _cef_web_plugin_info_visitor_t { cef_base_ref_counted_t base ;)",
    "insertText": "int(CEF_CALLBACK* visit)(struct _cef_web_plugin_info_visitor_t* self, struct _cef_web_plugin_info_t* info, int count, int total)"
  },
  {
    "label": "void()",
    "kind": "Method",
    "detail": "Function (} cef_web_plugin_info_visitor_t ; typedef struct _cef_web_plugin_unstable_callback_t { cef_base_ref_counted_t base ;)",
    "insertText": "void(CEF_CALLBACK* is_unstable)( struct _cef_web_plugin_unstable_callback_t* self, const cef_string_t* path, int unstable)"
  },
  {
    "label": "cef_visit_web_plugin_info()",
    "kind": "Method",
    "detail": "Function (} cef_web_plugin_unstable_callback_t ; CEF_EXPORT void)",
    "insertText": "cef_visit_web_plugin_info(cef_web_plugin_info_visitor_t* visitor)"
  },
  {
    "label": "cef_refresh_web_plugins()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_refresh_web_plugins()"
  },
  {
    "label": "cef_unregister_internal_web_plugin()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_unregister_internal_web_plugin(const cef_string_t* path)"
  },
  {
    "label": "cef_register_web_plugin_crash()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_register_web_plugin_crash(const cef_string_t* path)"
  },
  {
    "label": "cef_is_web_plugin_unstable()",
    "kind": "Method",
    "detail": "Function (CEF_EXPORT void)",
    "insertText": "cef_is_web_plugin_unstable(const cef_string_t* path, cef_web_plugin_unstable_callback_t* callback)"
  }
]