[
  {
    "label": "VRational",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "VRational"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# pragma once # if WITH_VERSE_VM | |)",
    "insertText": "defined(__INTELLISENSE__)"
  },
  {
    "label": "DECLARE_DERIVED_VCPPCLASSINFO()",
    "kind": "Method",
    "detail": "Function (struct VRational : VHeapValue {)",
    "insertText": "DECLARE_DERIVED_VCPPCLASSINFO(COREUOBJECT_API, VHeapValue)"
  },
  {
    "label": "Add()",
    "kind": "Method",
    "detail": "Function (TGlobalTrivialEmergentTypePtr<& StaticCppClassInfo> GlobalTrivialEmergentType ; TWriteBarrier<VInt> Numerator ; TWriteBarrier<VInt> Denominator ; VRational&)",
    "insertText": "Add(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Sub()",
    "kind": "Method",
    "detail": "Function (VRational&)",
    "insertText": "Sub(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Mul()",
    "kind": "Method",
    "detail": "Function (VRational&)",
    "insertText": "Mul(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Div()",
    "kind": "Method",
    "detail": "Function (VRational&)",
    "insertText": "Div(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Neg()",
    "kind": "Method",
    "detail": "Function (VRational&)",
    "insertText": "Neg(FAllocationContext Context, VRational& N)"
  },
  {
    "label": "Eq()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Eq(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Gt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Gt(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Lt()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Lt(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Gte()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Gte(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Lte()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "Lte(FAllocationContext Context, VRational& Lhs, VRational& Rhs)"
  },
  {
    "label": "Floor()",
    "kind": "Method",
    "detail": "Function (VInt)",
    "insertText": "Floor(FAllocationContext Context)"
  },
  {
    "label": "Ceil()",
    "kind": "Method",
    "detail": "Function (VInt)",
    "insertText": "Ceil(FAllocationContext Context)"
  },
  {
    "label": "Reduce()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reduce(FAllocationContext Context)"
  },
  {
    "label": "NormalizeSigns()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NormalizeSigns(FAllocationContext Context)"
  },
  {
    "label": "IsZero()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsZero()"
  },
  {
    "label": "IsReduced()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsReduced()"
  },
  {
    "label": "EqualImpl()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "EqualImpl(FAllocationContext Context, VCell* Other, const TFunction<void(::Verse::VValue, ::Verse::VValue)>& HandlePlaceholder)"
  },
  {
    "label": "GetTypeHashImpl()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetTypeHashImpl()"
  },
  {
    "label": "ToStringImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ToStringImpl(FStringBuilderBase& Builder, FAllocationContext Context, const FCellFormatter& Formatter)"
  },
  {
    "label": "SerializeImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SerializeImpl(VRational*& This, FAllocationContext Context, FAbstractVisitor& Visitor)"
  },
  {
    "label": "VRational()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "VRational(FAllocationContext Context, VInt InNumerator, VInt InDenominator) : VHeapValue(Context, &GlobalTrivialEmergentType.Get(Context)) , bIsReduced(false)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Numerator .)",
    "insertText": "Set(Context, InNumerator)"
  },
  {
    "label": "Set()",
    "kind": "Method",
    "detail": "Function (Denominator .)",
    "insertText": "Set(Context, InDenominator)"
  }
]