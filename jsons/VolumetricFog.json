[
  {
    "label": "GetVolumetricFogGridPixelSize()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "GetVolumetricFogGridPixelSize()"
  },
  {
    "label": "GetVolumetricFogResourceGridSize()",
    "kind": "Method",
    "detail": "Function (FIntVector)",
    "insertText": "GetVolumetricFogResourceGridSize(const FViewInfo& View, int32& OutVolumetricFogGridPixelSize)"
  },
  {
    "label": "GetVolumetricFogViewGridSize()",
    "kind": "Method",
    "detail": "Function (FIntVector)",
    "insertText": "GetVolumetricFogViewGridSize(const FViewInfo& View, int32& OutVolumetricFogGridPixelSize)"
  },
  {
    "label": "GetVolumetricFogUVMaxForSampling()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetVolumetricFogUVMaxForSampling(const FVector2f& ViewRectSize, FIntVector VolumetricFogResourceGridSize, int32 VolumetricFogResourceGridPixelSize)"
  },
  {
    "label": "GetVolumetricFogPrevUVMaxForTemporalBlend()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetVolumetricFogPrevUVMaxForTemporalBlend(const FVector2f& ViewRectSize, FIntVector VolumetricFogResourceGridSize, int32 VolumetricFogResourceGridPixelSize)"
  },
  {
    "label": "GetVolumetricFogFroxelToScreenSVPosRatio()",
    "kind": "Method",
    "detail": "Function (FVector2f)",
    "insertText": "GetVolumetricFogFroxelToScreenSVPosRatio(const FViewInfo& View)"
  },
  {
    "label": "GetVolumetricFogRDGTextureDesc()",
    "kind": "Method",
    "detail": "Function (FRDGTextureDesc)",
    "insertText": "GetVolumetricFogRDGTextureDesc(const FIntVector& VolumetricFogResourceGridSize)"
  },
  {
    "label": "DoesPlatformSupportVolumetricFogVoxelization()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "DoesPlatformSupportVolumetricFogVoxelization(const FStaticShaderPlatform Platform)"
  },
  {
    "label": "ShouldRenderVolumetricFog()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "ShouldRenderVolumetricFog(const FScene* Scene, const FSceneViewFamily& ViewFamily)"
  },
  {
    "label": "LightNeedsSeparateInjectionIntoVolumetricFogForOpaqueShadow()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "LightNeedsSeparateInjectionIntoVolumetricFogForOpaqueShadow(const FViewInfo& View, const FLightSceneInfo* LightSceneInfo, const FVisibleLightInfo& VisibleLightInfo, const FScene& InScene)"
  }
]