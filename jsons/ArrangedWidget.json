[
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "FArrangedWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FArrangedWidget"
  },
  {
    "label": "SLATECORE_API",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "SLATECORE_API"
  },
  {
    "label": "FArrangedWidget()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" Layout / Geometry . h \" # include \" Input / Events . h \" class SWidget ; class FArrangedWidget { public :)",
    "insertText": "FArrangedWidget(TSharedRef<SWidget> InWidget, const FGeometry& InGeometry ) : Geometry(InGeometry) , Widget(InWidget)"
  },
  {
    "label": "GetNullWidget()",
    "kind": "Method",
    "detail": "Function (} const FArrangedWidget&)",
    "insertText": "GetNullWidget()"
  },
  {
    "label": "GetWidgetPtr()",
    "kind": "Method",
    "detail": "Function (public : SWidget*)",
    "insertText": "GetWidgetPtr()"
  },
  {
    "label": "ToString()",
    "kind": "Method",
    "detail": "Function (} FString)",
    "insertText": "ToString()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (public : bool)",
    "insertText": "operator(const FArrangedWidget& Other)"
  },
  {
    "label": "FWidgetAndPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWidgetAndPointer(const FArrangedWidget& InWidget)"
  },
  {
    "label": "FWidgetAndPointer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FWidgetAndPointer(const FArrangedWidget& InWidget, TOptional<FVirtualPointerPosition> InPosition)"
  },
  {
    "label": "GetPointerPosition()",
    "kind": "Method",
    "detail": "Function (TOptional<FVirtualPointerPosition>)",
    "insertText": "GetPointerPosition()"
  }
]