[
  {
    "label": "FAnimationModifiersTabSummoner",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FAnimationModifiersTabSummoner"
  },
  {
    "label": "FAssetEditorToolkit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAssetEditorToolkit"
  },
  {
    "label": "FAnimationModifiersTabSummoner()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Styling / AppStyle . h \" # include \" SAnimationModifiersTab . h \" # include \" WorkflowOrientedApp / WorkflowTabFactory . h \" # define LOCTEXT_NAMESPACE \" AnimationModifiersModule \" struct FAnimationModifiersTabSummoner : public FWorkflowTabFactory { public : const FName AnimationModifiersName ;)",
    "insertText": "FAnimationModifiersTabSummoner(TSharedPtr<class FAssetEditorToolkit> InHostingApp) : FWorkflowTabFactory(AnimationModifiersName, InHostingApp)"
  },
  {
    "label": "LOCTEXT()",
    "kind": "Method",
    "detail": "Function (TabLabel =)",
    "insertText": "LOCTEXT(\"AnimationModifiersTabLabel\", \"Animation Data Modifiers\")"
  },
  {
    "label": "FSlateIcon()",
    "kind": "Method",
    "detail": "Function (TabIcon =)",
    "insertText": "FSlateIcon(FAppStyle::GetAppStyleSetName(), \"ClassIcon.AnimationModifier\")"
  },
  {
    "label": "CreateTabBody()",
    "kind": "Method",
    "detail": "Function (} TSharedRef<SWidget>)",
    "insertText": "CreateTabBody(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "GetTabToolTipText()",
    "kind": "Method",
    "detail": "Function (} FText)",
    "insertText": "GetTabToolTipText(const FWorkflowTabSpawnInfo& Info)"
  },
  {
    "label": "CreateFactory()",
    "kind": "Method",
    "detail": "Function (} TSharedPtr<FWorkflowTabFactory>)",
    "insertText": "CreateFactory(TSharedPtr<FAssetEditorToolkit> InAssetEditor)"
  },
  {
    "label": "TEXT()",
    "kind": "Method",
    "detail": "Function (} } ; const FName FAnimationModifiersTabSummoner::AnimationModifiersName =)",
    "insertText": "TEXT(\"AnimationModifiers\")"
  }
]