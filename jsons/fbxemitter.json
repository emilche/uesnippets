[
  {
    "label": "FbxListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FbxListener"
  },
  {
    "label": "FBXSDK_DLL",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FBXSDK_DLL"
  },
  {
    "label": "EventData",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "EventData"
  },
  {
    "label": "AddListener()",
    "kind": "Method",
    "detail": "Function (# ifndef _FBXSDK_CORE_EMITTER_H_ # define _FBXSDK_CORE_EMITTER_H_ # include<fbxsdk / fbxsdk_def . h> # include<fbxsdk / core / base / fbxintrusivelist . h> # include<fbxsdk / core / fbxeventhandler . h> # include<fbxsdk / fbxsdk_nsbegin . h> class FbxListener ; class FBXSDK_DLL FbxEmitter { public : void)",
    "insertText": "AddListener(FbxEventHandler& pHandler)"
  },
  {
    "label": "RemoveListener()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RemoveListener(FbxEventHandler& pHandler)"
  },
  {
    "label": "Emit()",
    "kind": "Method",
    "detail": "Function (template<EventType> void)",
    "insertText": "Emit(const EventType& pEvent)"
  },
  {
    "label": "Begin()",
    "kind": "Method",
    "detail": "Function (EventHandlerList::iterator itBegin = mData -> mEventHandlerList .)",
    "insertText": "Begin()"
  },
  {
    "label": "End()",
    "kind": "Method",
    "detail": "Function (EventHandlerList::iterator itEnd = mData -> mEventHandlerList .)",
    "insertText": "End()"
  },
  {
    "label": "FbxEmitter()",
    "kind": "Method",
    "detail": "Function (} } } # ifndef DOXYGEN_SHOULD_SKIP_THIS)",
    "insertText": "FbxEmitter()"
  }
]