[
  {
    "label": "UMovieSceneComponentMobilitySystem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneComponentMobilitySystem"
  },
  {
    "label": "FPreAnimatedMobilityTraits",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedMobilityTraits"
  },
  {
    "label": "FPreAnimatedComponentMobilityStorage",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPreAnimatedComponentMobilityStorage"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" EntitySystem / MovieSceneEntityInstantiatorSystem . h \" # include \" EntitySystem / MovieScenePreAnimatedStateSystem . h \" # include \" EntitySystem / MovieSceneOverlappingEntityTracker . h \" # include \" Engine / EngineTypes . h \" # include \" Evaluation / PreAnimatedState / IMovieScenePreAnimatedStorage . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedStorageID . h \" # include \" Evaluation / PreAnimatedState / MovieScenePreAnimatedObjectStorage . h \" # include \" MovieSceneComponentMobilitySystem . generated . h \")",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_BODY() UMovieSceneComponentMobilitySystem(const FObjectInitializer& ObjInit)"
  },
  {
    "label": "IsRelevantImpl()",
    "kind": "Method",
    "detail": "Function (private : bool)",
    "insertText": "IsRelevantImpl(UMovieSceneEntitySystemLinker* InLinker)"
  },
  {
    "label": "OnLink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLink()"
  },
  {
    "label": "OnUnlink()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnUnlink()"
  },
  {
    "label": "OnRun()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnRun(FSystemTaskPrerequisites& InPrerequisites, FSystemSubsequentTasks& Subsequents)"
  },
  {
    "label": "SavePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SavePreAnimatedState(const FPreAnimationParameters& InParameters)"
  },
  {
    "label": "RestorePreAnimatedState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RestorePreAnimatedState(const FPreAnimationParameters& InParameters)"
  },
  {
    "label": "RestorePreAnimatedValue()",
    "kind": "Method",
    "detail": "Function (private : UE::MovieScene::TOverlappingEntityTracker<EComponentMobility::Type,FObjectKey> MobilityTracker ; UE::MovieScene::FEntityComponentFilter Filter ; TArray<TTuple<USceneComponent*,EComponentMobility::Type>> PendingMobilitiesToRestore ; } ; namespace UE { namespace MovieScene { struct FPreAnimatedMobilityTraits : FBoundObjectPreAnimatedStateTraits { using KeyType = FObjectKey ; using StorageType = EComponentMobility::Type ; void)",
    "insertText": "RestorePreAnimatedValue(const FObjectKey& InKey, EComponentMobility::Type Mobility, const FRestoreStateParams& Params)"
  },
  {
    "label": "CachePreAnimatedValue()",
    "kind": "Method",
    "detail": "Function (EComponentMobility::Type)",
    "insertText": "CachePreAnimatedValue(UObject* InObject)"
  },
  {
    "label": "FindEntry()",
    "kind": "Method",
    "detail": "Function (} ; struct FPreAnimatedComponentMobilityStorage : TPreAnimatedStateStorage_ObjectTraits<FPreAnimatedMobilityTraits> { TAutoRegisterPreAnimatedStorageID<FPreAnimatedComponentMobilityStorage> StorageID ; FPreAnimatedStateEntry)",
    "insertText": "FindEntry(USceneComponent* InSceneComponent)"
  },
  {
    "label": "MakeEntry()",
    "kind": "Method",
    "detail": "Function (FPreAnimatedStateEntry)",
    "insertText": "MakeEntry(USceneComponent* InSceneComponent)"
  }
]