[
  {
    "label": "will",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "will"
  },
  {
    "label": "NetEqController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEqController"
  },
  {
    "label": "NetEqController",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "NetEqController"
  },
  {
    "label": "is",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "is"
  },
  {
    "label": "Config",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Config"
  },
  {
    "label": "PacketInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketInfo"
  },
  {
    "label": "PacketBufferInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketBufferInfo"
  },
  {
    "label": "NetEqStatus",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "NetEqStatus"
  },
  {
    "label": "PacketArrivedInfo",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "PacketArrivedInfo"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Reset()"
  },
  {
    "label": "GetDecision()",
    "kind": "Method",
    "detail": "Function (Operation)",
    "insertText": "GetDecision(NetEqStatus neteq_status)"
  },
  {
    "label": "RegisterPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterPacket(PacketInfo packet_info)"
  },
  {
    "label": "RegisterEmptyPacket()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterEmptyPacket()"
  },
  {
    "label": "CodecSwithed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "CodecSwithed()"
  },
  {
    "label": "SetSampleRate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSampleRate(int fs_hz)"
  },
  {
    "label": "SetPacketLengthSamples()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetPacketLengthSamples()"
  },
  {
    "label": "SetMaximumDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMaximumDelay(int delay_ms)"
  },
  {
    "label": "SetMinimumDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetMinimumDelay(int delay_ms)"
  },
  {
    "label": "SetBaseMinimumDelay()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBaseMinimumDelay(int delay_ms)"
  }
]