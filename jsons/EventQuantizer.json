[
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FEventQuantizationSettings",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventQuantizationSettings"
  },
  {
    "label": "IQuantizedEventListener",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IQuantizedEventListener"
  },
  {
    "label": "FEventQuantizer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FEventQuantizer"
  },
  {
    "label": "FEventQuantizationState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FEventQuantizationState"
  },
  {
    "label": "FEventQuantizer()",
    "kind": "Method",
    "detail": "Function (SIGNALPROCESSING_API)",
    "insertText": "FEventQuantizer()"
  },
  {
    "label": "SetQuantizationSettings()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQuantizationSettings(const FEventQuantizationSettings& QuantizationSettings)"
  },
  {
    "label": "SetBPM()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBPM(const float InBPM)"
  },
  {
    "label": "SetBeatDivision()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBeatDivision(const uint16 InBeatDivision)"
  },
  {
    "label": "NotifyEvents()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEvents(int32 NumFrames)"
  },
  {
    "label": "RegisterListenerForEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "RegisterListenerForEvent(IQuantizedEventListener* InListener, EEventQuantization InQuantization)"
  },
  {
    "label": "UnregisterListenerForEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterListenerForEvent(IQuantizedEventListener* InListener)"
  },
  {
    "label": "UnregisterListenerForEvent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UnregisterListenerForEvent(IQuantizedEventListener* InListener, EEventQuantization InQuantization)"
  },
  {
    "label": "SetQuantizationSettingsInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetQuantizationSettingsInternal(const FEventQuantizationSettings& QuantizationSettings)"
  },
  {
    "label": "SetBPMInternal()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetBPMInternal(const float InBPM)"
  },
  {
    "label": "ResetEventState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ResetEventState()"
  },
  {
    "label": "NotifyEventForState()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "NotifyEventForState(FEventQuantizationState& State, EEventQuantization Type, bool bIsQuantizationEvent, int32 NumFrames)"
  }
]