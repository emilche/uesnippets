[
  {
    "label": "MeasureUnit",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "MeasureUnit"
  },
  {
    "label": "U_I18N_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "U_I18N_API"
  },
  {
    "label": "Measure()",
    "kind": "Method",
    "detail": "Function (# ifndef __MEASURE_H__ # define __MEASURE_H__ # include \" unicode / utypes . h \" # if ! UCONFIG_NO_FORMATTING # include \" unicode / fmtable . h \" U_NAMESPACE_BEGIN class MeasureUnit ; class U_I18N_API Measure : public UObject { public :)",
    "insertText": "Measure(const Formattable& number, MeasureUnit* adoptedUnit, UErrorCode& ec)"
  },
  {
    "label": "Measure()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Measure(const Measure& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Measure&)",
    "insertText": "operator(const Measure& other)"
  },
  {
    "label": "clone()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "clone()"
  },
  {
    "label": "Measure()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "Measure()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (UBool)",
    "insertText": "operator(const UObject& other)"
  },
  {
    "label": "getNumber()",
    "kind": "Method",
    "detail": "Function (const Formattable&)",
    "insertText": "getNumber()"
  },
  {
    "label": "getUnit()",
    "kind": "Method",
    "detail": "Function (const MeasureUnit&)",
    "insertText": "getUnit()"
  },
  {
    "label": "getStaticClassID()",
    "kind": "Method",
    "detail": "Function (UClassID U_EXPORT2)",
    "insertText": "getStaticClassID(void)"
  },
  {
    "label": "getDynamicClassID()",
    "kind": "Method",
    "detail": "Function (UClassID)",
    "insertText": "getDynamicClassID(void)"
  }
]