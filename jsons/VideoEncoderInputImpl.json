[
  {
    "label": "ID3D11DeviceContext",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "ID3D11DeviceContext"
  },
  {
    "label": "FVideoEncoderInputFrameImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVideoEncoderInputFrameImpl"
  },
  {
    "label": "FVideoEncoderInputImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVideoEncoderInputImpl"
  },
  {
    "label": "FFrameInfoDummy",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameInfoDummy"
  },
  {
    "label": "FFrameInfoYUV420P",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameInfoYUV420P"
  },
  {
    "label": "FFrameInfoD3D",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameInfoD3D"
  },
  {
    "label": "FFrameInfoCUDA",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FFrameInfoCUDA"
  },
  {
    "label": "FVideoEncoderInputImpl()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VideoEncoderInput . h \" # include \" Containers / Queue . h \" # include \" Misc / ScopeLock . h \" # include \" Templates / RefCounting . h \" # include \" CudaModule . h \" # if PLATFORM_WINDOWS struct ID3D11DeviceContext ; # endif namespace AVEncoder { class FVideoEncoderInputFrameImpl ; PRAGMA_DISABLE_DEPRECATION_WARNINGS class FVideoEncoderInputImpl : public FVideoEncoderInput { public :)",
    "insertText": "FVideoEncoderInputImpl()"
  },
  {
    "label": "GetNumActiveFrames()",
    "kind": "Method",
    "detail": "Function (uint32)",
    "insertText": "GetNumActiveFrames()"
  },
  {
    "label": "Guard()",
    "kind": "Method",
    "detail": "Function (FScopeLock)",
    "insertText": "Guard(&ProtectFrames)"
  },
  {
    "label": "GetHasFreeFrames()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "GetHasFreeFrames()"
  },
  {
    "label": "SetupForDummy()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "SetupForDummy()"
  },
  {
    "label": "SetupForYUV420P()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupForYUV420P(uint32 InWidth, uint32 InHeight)"
  },
  {
    "label": "SetupForD3D11()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupForD3D11(void* InApplicationD3DDevice)"
  },
  {
    "label": "SetupForD3D11Shared()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupForD3D11Shared(void* InApplicationD3DDevice)"
  },
  {
    "label": "SetupForD3D12()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupForD3D12(void* InApplicationD3DDevice)"
  },
  {
    "label": "SetupForD3D12Shared()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupForD3D12Shared(void* InApplicationD3DDevice)"
  },
  {
    "label": "SetupForCUDA()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SetupForCUDA(void* InApplicationContext)"
  },
  {
    "label": "SetupForVulkan()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_DESKTOP&& ! PLATFORM_APPLE bool)",
    "insertText": "SetupForVulkan(VkInstance InApplicationVulkanInstance, VkPhysicalDevice InApplicationVulkanPhysicalDevice, VkDevice InApplicationVulkanDevice)"
  },
  {
    "label": "GetAvailableEncoders()",
    "kind": "Method",
    "detail": "Function (# endif const TArray<FVideoEncoderInfo>&)",
    "insertText": "GetAvailableEncoders()"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (FVideoEncoderInputFrame*)",
    "insertText": "CreateBuffer(OnFrameReleasedCallback InOnFrameReleased)"
  },
  {
    "label": "DestroyBuffer()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "DestroyBuffer(FVideoEncoderInputFrame* Buffer)"
  },
  {
    "label": "ObtainInputFrame()",
    "kind": "Method",
    "detail": "Function (TSharedPtr<FVideoEncoderInputFrame>)",
    "insertText": "ObtainInputFrame()"
  },
  {
    "label": "ReleaseInputFrame()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ReleaseInputFrame(FVideoEncoderInputFrame* InFrame)"
  },
  {
    "label": "Flush()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Flush()"
  },
  {
    "label": "IsUserManagedFrame()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "IsUserManagedFrame(const FVideoEncoderInputFrame* InBuffer)"
  },
  {
    "label": "GetD3D11EncoderDevice()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_WINDOWS TRefCountPtr<ID3D11Device>)",
    "insertText": "GetD3D11EncoderDevice()"
  },
  {
    "label": "GetD3D12EncoderDevice()",
    "kind": "Method",
    "detail": "Function (TRefCountPtr<ID3D12Device>)",
    "insertText": "GetD3D12EncoderDevice()"
  },
  {
    "label": "GetCUDAEncoderContext()",
    "kind": "Method",
    "detail": "Function (# endif CUcontext)",
    "insertText": "GetCUDAEncoderContext()"
  },
  {
    "label": "GetVulkanEncoderDevice()",
    "kind": "Method",
    "detail": "Function (# if PLATFORM_DESKTOP&& ! PLATFORM_APPLE void*)",
    "insertText": "GetVulkanEncoderDevice()"
  },
  {
    "label": "CollectAvailableEncoders()",
    "kind": "Method",
    "detail": "Function (# endif private : void)",
    "insertText": "CollectAvailableEncoders()"
  },
  {
    "label": "CreateFrame()",
    "kind": "Method",
    "detail": "Function (TArray<FVideoEncoderInfo> AvailableEncoders ; FVideoEncoderInputFrameImpl*)",
    "insertText": "CreateFrame()"
  },
  {
    "label": "SetupFrameYUV420P()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFrameYUV420P(FVideoEncoderInputFrameImpl* Frame)"
  },
  {
    "label": "SetupFrameD3D11()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFrameD3D11(FVideoEncoderInputFrameImpl* Frame)"
  },
  {
    "label": "SetupFrameD3D12()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFrameD3D12(FVideoEncoderInputFrameImpl* Frame)"
  },
  {
    "label": "SetupFrameVulkan()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFrameVulkan(FVideoEncoderInputFrameImpl* Frame)"
  },
  {
    "label": "SetupFrameCUDA()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetupFrameCUDA(FVideoEncoderInputFrameImpl* Frame)"
  },
  {
    "label": "FVideoEncoderInputFrameImpl()",
    "kind": "Method",
    "detail": "Function (struct FFrameInfoDummy { } FrameInfoDummy ; struct FFrameInfoYUV420P { uint32 StrideY = 0 ; uint32 StrideU = 0 ; uint32 StrideV = 0 ; } FrameInfoYUV420P ; # if PLATFORM_WINDOWS struct FFrameInfoD3D { TRefCountPtr<ID3D11Device> EncoderDeviceD3D11 ; TRefCountPtr<ID3D11DeviceContext> EncoderDeviceContextD3D11 ; TRefCountPtr<ID3D12Device> EncoderDeviceD3D12 ; } FrameInfoD3D ; # endif struct FFrameInfoCUDA { CUcontext EncoderContextCUDA ; } FrameInfoCUDA ; # if PLATFORM_DESKTOP&& ! PLATFORM_APPLE FVulkanDataStruct FrameInfoVulkan ; # endif FCriticalSection ProtectFrames ; TQueue<TSharedPtr<FVideoEncoderInputFrameImpl>> AvailableFrames ; TArray<TSharedPtr<FVideoEncoderInputFrameImpl>> ActiveFrames ; using UserManagedFrame = TPair<FVideoEncoderInputFrameImpl*,OnFrameReleasedCallback> ; TArray<UserManagedFrame> UserManagedFrames ; } ; class FVideoEncoderInputFrameImpl : public FVideoEncoderInputFrame { public :)",
    "insertText": "FVideoEncoderInputFrameImpl(FVideoEncoderInputImpl* InInput)"
  },
  {
    "label": "FVideoEncoderInputFrameImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVideoEncoderInputFrameImpl(const FVideoEncoderInputFrameImpl& InCloneFrom)"
  },
  {
    "label": "FVideoEncoderInputFrameImpl()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FVideoEncoderInputFrameImpl(const FVideoEncoderInputFrameImpl& InCloneFrom, FCloneDestroyedCallback InCloneDestroyedCallback)"
  },
  {
    "label": "FVideoEncoderInputFrameImpl()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVideoEncoderInputFrameImpl()"
  },
  {
    "label": "Clone()",
    "kind": "Method",
    "detail": "Function (const FVideoEncoderInputFrame*)",
    "insertText": "Clone(FCloneDestroyedCallback InCloneDestroyedCallback)"
  },
  {
    "label": "Release()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Release()"
  },
  {
    "label": "SetFormat()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFormat(EVideoFrameFormat InFormat)"
  },
  {
    "label": "SetHeight()",
    "kind": "Method",
    "detail": "Function (Width = InWidth ; } void)",
    "insertText": "SetHeight(uint32 InHeight)"
  }
]