[
  {
    "label": "FLevelCollectionModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelCollectionModel"
  },
  {
    "label": "FLevelModel",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FLevelModel"
  },
  {
    "label": "SButton",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SButton"
  },
  {
    "label": "SWorldHierarchyImpl",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWorldHierarchyImpl"
  },
  {
    "label": "SWorldHierarchyItem",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWorldHierarchyItem"
  },
  {
    "label": "DECLARE_DELEGATE_TwoParams()",
    "kind": "Method",
    "detail": "Function (public:)",
    "insertText": "DECLARE_DELEGATE_TwoParams( FOnNameChanged, const WorldHierarchy::FWorldTreeItemPtr& /*TreeItem*/, const FVector2D& /*MessageLocation*/)"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Construct(const FArguments& InArgs, TSharedRef<STableViewBase> OwnerTableView)"
  },
  {
    "label": "OnItemDragDetected()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnItemDragDetected(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnToggleEditorVisibility()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleEditorVisibility()"
  },
  {
    "label": "OnToggleGameVisibility()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleGameVisibility()"
  },
  {
    "label": "OnToggleLightingScenario()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleLightingScenario()"
  },
  {
    "label": "OnToggleLock()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnToggleLock()"
  },
  {
    "label": "OnSave()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnSave()"
  },
  {
    "label": "OnOpenKismet()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnOpenKismet()"
  },
  {
    "label": "OnChangeColor()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnChangeColor()"
  },
  {
    "label": "OnSetColorFromColorPicker()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnSetColorFromColorPicker(FLinearColor NewColor)"
  },
  {
    "label": "OnColorPickerCancelled()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerCancelled(FLinearColor OriginalColor)"
  },
  {
    "label": "OnColorPickerInteractiveBegin()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerInteractiveBegin()"
  },
  {
    "label": "OnColorPickerInteractiveEnd()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnColorPickerInteractiveEnd()"
  },
  {
    "label": "OnVerifyItemLabelChanged()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "OnVerifyItemLabelChanged(const FText& InLabel, FText& OutErrorMessage)"
  },
  {
    "label": "OnLabelCommitted()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnLabelCommitted(const FText& InLabel, ETextCommit::Type InCommitInfo)"
  }
]