[
  {
    "label": "T",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "T"
  },
  {
    "label": "OptionalToPtr()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_TYPES_OPTIONAL_UTIL_H_ # define BASE_TYPES_OPTIONAL_UTIL_H_ # include \" third_party / abseil - cpp / absl / types / optional . h \" namespace base { template<class T> const T*)",
    "insertText": "OptionalToPtr(const absl::optional<T>& optional)"
  },
  {
    "label": "OptionalToPtr()",
    "kind": "Method",
    "detail": "Function (} template<class T> T*)",
    "insertText": "OptionalToPtr(absl::optional<T>& optional)"
  },
  {
    "label": "OptionalFromPtr()",
    "kind": "Method",
    "detail": "Function (} template<class T> absl::optional<T>)",
    "insertText": "OptionalFromPtr(const T* value)"
  }
]