[
  {
    "label": "FVulkanTransientHeap",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTransientHeap"
  },
  {
    "label": "FVulkanTransientHeapCache",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTransientHeapCache"
  },
  {
    "label": "FVulkanTransientResourceAllocator",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FVulkanTransientResourceAllocator"
  },
  {
    "label": "FVulkanTransientHeap()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" VulkanMemory . h \" # include \" VulkanResources . h \" # include \" RHICoreTransientResourceAllocator . h \" class FVulkanTransientHeap final : public FRHITransientHeap,public FRefCountBase,public VulkanRHI::FDeviceChild { public :)",
    "insertText": "FVulkanTransientHeap(const FInitializer& Initializer, FVulkanDevice* InDevice)"
  },
  {
    "label": "FVulkanTransientHeap()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FVulkanTransientHeap()"
  },
  {
    "label": "GetMemoryHandle()",
    "kind": "Method",
    "detail": "Function (VkDeviceMemory)",
    "insertText": "GetMemoryHandle()"
  },
  {
    "label": "GetVulkanAllocation()",
    "kind": "Method",
    "detail": "Function (VulkanRHI::FVulkanAllocation)",
    "insertText": "GetVulkanAllocation(const FRHITransientHeapAllocation& TransientInitializer)"
  },
  {
    "label": "Create()",
    "kind": "Method",
    "detail": "Function (private : VkBuffer VulkanBuffer ; VkMemoryRequirements MemoryRequirements ; VulkanRHI::FVulkanAllocation InternalAllocation ; } ; class FVulkanTransientHeapCache final : public FRHITransientHeapCache,public VulkanRHI::FDeviceChild { public : FVulkanTransientHeapCache*)",
    "insertText": "Create(FVulkanDevice* InDevice)"
  },
  {
    "label": "CreateHeap()",
    "kind": "Method",
    "detail": "Function (FRHITransientHeap*)",
    "insertText": "CreateHeap(const FRHITransientHeap::FInitializer& Initializer)"
  },
  {
    "label": "FVulkanTransientHeapCache()",
    "kind": "Method",
    "detail": "Function (private :)",
    "insertText": "FVulkanTransientHeapCache(const FInitializer& Initializer, FVulkanDevice* InDevice)"
  },
  {
    "label": "FVulkanTransientResourceAllocator()",
    "kind": "Method",
    "detail": "Function (} ; class FVulkanTransientResourceAllocator final : public FRHITransientResourceHeapAllocator,public VulkanRHI::FDeviceChild { public :)",
    "insertText": "FVulkanTransientResourceAllocator(FVulkanTransientHeapCache& InHeapCache)"
  },
  {
    "label": "SupportsResourceType()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "SupportsResourceType(ERHITransientResourceType InType)"
  },
  {
    "label": "CreateBuffer()",
    "kind": "Method",
    "detail": "Function (FRHITransientBuffer*)",
    "insertText": "CreateBuffer(const FRHIBufferCreateInfo& InCreateInfo, const TCHAR* InDebugName, const FRHITransientAllocationFences& Fences)"
  }
]