[
  {
    "label": "FSlateFontServices",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateFontServices"
  },
  {
    "label": "FSlateRHIResourceManager",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRHIResourceManager"
  },
  {
    "label": "FSlatePostProcessor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlatePostProcessor"
  },
  {
    "label": "UDeviceProfile",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UDeviceProfile"
  },
  {
    "label": "FSlateElementPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateElementPS"
  },
  {
    "label": "FSlateMaterialShaderPS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateMaterialShaderPS"
  },
  {
    "label": "FSlateMaterialShaderVS",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateMaterialShaderVS"
  },
  {
    "label": "FMaterialShaderTypes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMaterialShaderTypes"
  },
  {
    "label": "IPooledRenderTarget",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "IPooledRenderTarget"
  },
  {
    "label": "FSlateRHIRenderingPolicy",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRHIRenderingPolicy"
  },
  {
    "label": "FSlateElementsBuffers",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateElementsBuffers"
  },
  {
    "label": "FSlateDrawElementsPassInputs",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateDrawElementsPassInputs"
  },
  {
    "label": "FSlateRHIRenderingPolicy()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" GameTime . h \" # include \" RendererInterface . h \" # include \" Rendering / RenderingCommon . h \" # include \" Rendering / SlateRendererTypes . h \" # include \" Rendering / ShaderResourceManager . h \" # include \" Rendering / DrawElements . h \" # include \" Rendering / RenderingPolicy . h \" # include \" Layout / Clipping . h \" # include \" SlateElementVertexBuffer . h \" # include \" SlateRHIResourceManager . h \" # include \" Shader . h \" # include \" GlobalShader . h \" # include \" Engine / TextureLODSettings . h \" class FSlateFontServices ; class FSlateRHIResourceManager ; class FSlatePostProcessor ; class UDeviceProfile ; class FSlateElementPS ; class FSlateMaterialShaderPS ; class FSlateMaterialShaderVS ; struct FMaterialShaderTypes ; struct IPooledRenderTarget ; class FSlateRHIRenderingPolicy final : public FSlateRenderingPolicy { public :)",
    "insertText": "FSlateRHIRenderingPolicy(TSharedRef<FSlateFontServices> InSlateFontServices, TSharedRef<FSlateRHIResourceManager> InResourceManager)"
  },
  {
    "label": "GetResourceManager()",
    "kind": "Method",
    "detail": "Function (TSharedRef<FSlateShaderResourceManager>)",
    "insertText": "GetResourceManager()"
  },
  {
    "label": "AddSceneAt()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "AddSceneAt(FSceneInterface* Scene, int32 Index)"
  },
  {
    "label": "ClearScenes()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ClearScenes()"
  },
  {
    "label": "BuildSlateElementsBuffers()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<FSlateRHIResourceManager> ResourceManager ; } ; struct FSlateElementsBuffers { FRDGBuffer* VertexBuffer = nullptr ; FRDGBuffer* IndexBuffer = nullptr ; } ; FSlateElementsBuffers)",
    "insertText": "BuildSlateElementsBuffers(FRDGBuilder& GraphBuilder, FSlateBatchData& BatchData)"
  },
  {
    "label": "Zero()",
    "kind": "Method",
    "detail": "Function (struct FSlateDrawElementsPassInputs { FRDGTexture* StencilTexture = nullptr ; FRDGTexture* ElementsTexture = nullptr ; FRDGTexture* SceneViewportTexture = nullptr ; ERenderTargetLoadAction ElementsLoadAction = ERenderTargetLoadAction::ENoAction ; FSlateElementsBuffers ElementsBuffers ; FMatrix44f ElementsMatrix ; FVector2f ElementsOffset =)",
    "insertText": "Zero()"
  },
  {
    "label": "AddSlateDrawElementsPass()",
    "kind": "Method",
    "detail": "Function (FIntRect SceneViewRect ; FIntPoint CursorPosition = FIntPoint::ZeroValue ; FGameTime Time ; EDisplayColorGamut HDRDisplayColorGamut = EDisplayColorGamut::sRGB_D65 ; ESlatePostRT UsedSlatePostBuffers = ESlatePostRT::None ; float ViewportScaleUI = 1 . 0 f ; bool bWireframe = false ; bool bElementsTextureIsHDRDisplay = false ; bool bAllowGammaCorrection = true ; bool bAllowColorDeficiencyCorrection = true ; } ; void)",
    "insertText": "AddSlateDrawElementsPass(FRDGBuilder& GraphBuilder, const FSlateRHIRenderingPolicy& RenderingPolicy, const FSlateDrawElementsPassInputs& Inputs, TConstArrayView<FSlateRenderBatch> RenderBatches, int32 FirstBatchIndex)"
  }
]