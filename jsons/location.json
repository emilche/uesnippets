[
  {
    "label": "BASE_EXPORT",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "BASE_EXPORT"
  },
  {
    "label": "defined()",
    "kind": "Method",
    "detail": "Function (# ifndef BASE_LOCATION_H_ # define BASE_LOCATION_H_ # include<string> # include \" base / base_export . h \" # include \" base / debug / debugging_buildflags . h \" # include \" base / memory / raw_ptr_exclusion . h \" # include \" base / trace_event / base_tracing_forward . h \" # include \" build / build_config . h \" namespace base { # if)",
    "insertText": "defined(__clang__) #define SUPPORTS_LOCATION_BUILTINS \\ (__has_builtin(__builtin_FUNCTION) && __has_builtin(__builtin_FILE) && \\ __has_builtin(__builtin_LINE)) #elif defined(COMPILER_GCC)"
  },
  {
    "label": "Location()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "Location()"
  },
  {
    "label": "Location()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Location(const Location& other)"
  },
  {
    "label": "Location()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Location(Location&& other)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (Location&)",
    "insertText": "operator(const Location& other)"
  },
  {
    "label": "CreateForTesting()",
    "kind": "Method",
    "detail": "Function (Location)",
    "insertText": "CreateForTesting(const char* function_name, const char* file_name, int line_number, const void* program_counter)"
  },
  {
    "label": "WriteIntoTrace()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "WriteIntoTrace(perfetto::TracedValue context)"
  },
  {
    "label": "BUILDFLAG()",
    "kind": "Method",
    "detail": "Function (# if SUPPORTS_LOCATION_BUILTINS # if)",
    "insertText": "BUILDFLAG(ENABLE_LOCATION_SOURCE) static Location Current(const char* function_name = __builtin_FUNCTION(), const char* file_name = __builtin_FILE(), int line_number = __builtin_LINE())"
  },
  {
    "label": "Current()",
    "kind": "Method",
    "detail": "Function (# else Location)",
    "insertText": "Current(const char* file_name = __builtin_FILE())"
  },
  {
    "label": "Current()",
    "kind": "Method",
    "detail": "Function (# endif # else Location)",
    "insertText": "Current()"
  },
  {
    "label": "Location()",
    "kind": "Method",
    "detail": "Function (# endif private :)",
    "insertText": "Location(const char* file_name, const void* program_counter)"
  },
  {
    "label": "Location()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Location(const char* function_name, const char* file_name, int line_number, const void* program_counter)"
  },
  {
    "label": "GetProgramCounter()",
    "kind": "Method",
    "detail": "Function (const char* function_name_ = nullptr ; const char* file_name_ = nullptr ; int line_number_ = - 1 ; RAW_PTR_EXCLUSION const void* program_counter_ = nullptr ; } ; BASE_EXPORT const void*)",
    "insertText": "GetProgramCounter()"
  }
]