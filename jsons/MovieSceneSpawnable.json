[
  {
    "label": "IMovieScenePlayer",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IMovieScenePlayer"
  },
  {
    "label": "UMovieSceneSequence",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UMovieSceneSequence"
  },
  {
    "label": "FMovieSceneSequenceID",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSequenceID"
  },
  {
    "label": "FSharedPlaybackState",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSharedPlaybackState"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FMovieSceneSpawnable",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FMovieSceneSpawnable"
  },
  {
    "label": "directly",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "directly"
  },
  {
    "label": "UENUM()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Misc / Guid . h \" # include \" MovieSceneDynamicBinding . h \" # include \" MovieSceneSpawnable . generated . h \" class IMovieScenePlayer ; class UMovieSceneSequence ; struct FMovieSceneSequenceID ; namespace UE::MovieScene { struct FSharedPlaybackState ; })",
    "insertText": "UENUM()"
  },
  {
    "label": "UMETA()",
    "kind": "Method",
    "detail": "Function (InnerSequence)",
    "insertText": "UMETA(DisplayName = \"This Sequence\")"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() FMovieSceneSpawnable() : bContinuouslyRespawn(false) , bNetAddressableName(false) , ObjectTemplate(nullptr) , Ownership(ESpawnOwnership::InnerSequence) #if WITH_EDITORONLY_DATA , GeneratedClass_DEPRECATED(nullptr)"
  },
  {
    "label": "FMovieSceneSpawnable()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "FMovieSceneSpawnable(const FString& InitName, UObject& InObjectTemplate) : bContinuouslyRespawn(false) , bNetAddressableName(false) , Guid(FGuid::NewGuid()) , Name(InitName) , ObjectTemplate(&InObjectTemplate) , Ownership(ESpawnOwnership::InnerSequence) #if WITH_EDITORONLY_DATA , GeneratedClass_DEPRECATED(nullptr)"
  },
  {
    "label": "MarkSpawnableTemplate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkSpawnableTemplate(InObjectTemplate)"
  },
  {
    "label": "IsSpawnableTemplate()",
    "kind": "Method",
    "detail": "Function (} public : bool)",
    "insertText": "IsSpawnableTemplate(const UObject& InObject)"
  },
  {
    "label": "MarkSpawnableTemplate()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "MarkSpawnableTemplate(const UObject& InObject)"
  },
  {
    "label": "GetObjectTemplate()",
    "kind": "Method",
    "detail": "Function (UObject*)",
    "insertText": "GetObjectTemplate()"
  },
  {
    "label": "CopyObjectTemplate()",
    "kind": "Method",
    "detail": "Function (ObjectTemplate = InObjectTemplate ; } void)",
    "insertText": "CopyObjectTemplate(UObject& InSourceObject, UMovieSceneSequence& MovieSceneSequence)"
  },
  {
    "label": "GetGuid()",
    "kind": "Method",
    "detail": "Function (const FGuid&)",
    "insertText": "GetGuid()"
  },
  {
    "label": "GetName()",
    "kind": "Method",
    "detail": "Function (Guid = InGuid ; } const FString&)",
    "insertText": "GetName()"
  },
  {
    "label": "AddChildPossessable()",
    "kind": "Method",
    "detail": "Function (Name = InName ; } void)",
    "insertText": "AddChildPossessable(const FGuid& PossessableGuid)"
  },
  {
    "label": "AddUnique()",
    "kind": "Method",
    "detail": "Function (ChildPossessables .)",
    "insertText": "AddUnique(PossessableGuid)"
  },
  {
    "label": "RemoveChildPossessable()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "RemoveChildPossessable(const FGuid& PossessableGuid)"
  },
  {
    "label": "Remove()",
    "kind": "Method",
    "detail": "Function (ChildPossessables .)",
    "insertText": "Remove(PossessableGuid)"
  },
  {
    "label": "GetChildPossessables()",
    "kind": "Method",
    "detail": "Function (} const TArray<FGuid>&)",
    "insertText": "GetChildPossessables()"
  },
  {
    "label": "GetLevelName()",
    "kind": "Method",
    "detail": "Function (FName)",
    "insertText": "GetLevelName()"
  },
  {
    "label": "GetNetAddressableName()",
    "kind": "Method",
    "detail": "Function (LevelName = InLevelName ; } FName)",
    "insertText": "GetNetAddressableName(TSharedRef<const UE::MovieScene::FSharedPlaybackState> SharedPlaybackState, FMovieSceneSequenceID SequenceID)"
  },
  {
    "label": "AutoSetNetAddressableName()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AutoSetNetAddressableName()"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "operator(const FGuid& InGuid)"
  }
]