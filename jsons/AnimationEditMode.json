[
  {
    "label": "FAnimationEditMode",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FAnimationEditMode"
  },
  {
    "label": "FText",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FText"
  },
  {
    "label": "UAnimationEditModeContext",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UAnimationEditModeContext"
  },
  {
    "label": "IPersonaPreviewScene",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPersonaPreviewScene"
  },
  {
    "label": "ANIMATIONEDITMODE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "ANIMATIONEDITMODE_API"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (\ufeff # pragma once # include \" AnimationEditContext . h \" # include \" Containers / Array . h \" # include \" CoreMinimal . h \" # include \" EdMode . h \" # include \" Math / Sphere . h \" # include \" UObject / Object . h \" # include \" UObject / ObjectMacros . h \" # include \" UObject / ObjectPtr . h \" # include \" UObject / UObjectGlobals . h \" # include \" AnimationEditMode . generated . h \" class FAnimationEditMode ; class FText ;)",
    "insertText": "UCLASS(MinimalAPI)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() public: virtual bool GetCameraTarget(FSphere& OutTarget)"
  },
  {
    "label": "GetAnimPreviewScene()",
    "kind": "Method",
    "detail": "Function (class IPersonaPreviewScene&)",
    "insertText": "GetAnimPreviewScene()"
  },
  {
    "label": "GetOnScreenDebugInfo()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetOnScreenDebugInfo(TArray<FText>& OutDebugInfo)"
  },
  {
    "label": "CreateFor()",
    "kind": "Method",
    "detail": "Function (private : IAnimationEditContext* EditMode = nullptr ; UAnimationEditModeContext*)",
    "insertText": "CreateFor(IAnimationEditContext* InEditMode)"
  },
  {
    "label": "UAnimationEditModeContext()",
    "kind": "Method",
    "detail": "Function (UAnimationEditModeContext* NewPersonaContext = NewObject<)",
    "insertText": "UAnimationEditModeContext()"
  },
  {
    "label": "FAnimationEditMode()",
    "kind": "Method",
    "detail": "Function (NewPersonaContext -> EditMode = InEditMode ; return NewPersonaContext ; } FAnimationEditMode ; } ; class FAnimationEditMode : public FEdMode,public IAnimationEditContext { public :)",
    "insertText": "FAnimationEditMode()"
  },
  {
    "label": "FAnimationEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FAnimationEditMode(const FAnimationEditMode&)"
  },
  {
    "label": "operator()",
    "kind": "Method",
    "detail": "Function (FAnimationEditMode&)",
    "insertText": "operator(const FAnimationEditMode&)"
  },
  {
    "label": "Enter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Enter()"
  },
  {
    "label": "Exit()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "Exit()"
  },
  {
    "label": "AddReferencedObjects()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "AddReferencedObjects(FReferenceCollector& Collector)"
  }
]