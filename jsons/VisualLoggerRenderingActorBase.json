[
  {
    "label": "LOGVISUALIZER_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "LOGVISUALIZER_API"
  },
  {
    "label": "FTimelineDebugShapes",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTimelineDebugShapes"
  },
  {
    "label": "UCLASS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" GameFramework / Actor . h \" # include \" VisualLogger / VisualLoggerTypes . h \" # include \" DebugRenderSceneProxy . h \" # include \" VisualLoggerRenderingActorBase . generated . h \")",
    "insertText": "UCLASS(config = Engine, NotBlueprintable, Transient, notplaceable, AdvancedClassDisplay)"
  },
  {
    "label": "GENERATED_UCLASS_BODY()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "GENERATED_UCLASS_BODY() virtual ~AVisualLoggerRenderingActorBase()"
  },
  {
    "label": "Reset()",
    "kind": "Method",
    "detail": "Function (struct FTimelineDebugShapes { TArray<FDebugRenderSceneProxy::FDebugLine> Lines ; TArray<FDebugRenderSceneProxy::FCone> Cones ; TArray<FDebugRenderSceneProxy::FDebugBox> Boxes ; TArray<FDebugRenderSceneProxy::FSphere> Points ; TArray<FDebugRenderSceneProxy::FMesh> Meshes ; TArray<FDebugRenderSceneProxy::FText3d> Texts ; TArray<FDebugRenderSceneProxy::FWireCylinder> Cylinders ; TArray<FDebugRenderSceneProxy::FCapsule> Capsules ; TArray<FDebugRenderSceneProxy::FArrowLine> Arrows ; TArray<FVector> LogEntriesPath ; void)",
    "insertText": "Reset()"
  },
  {
    "label": "IterateDebugShapes()",
    "kind": "Method",
    "detail": "Function (} } ; void)",
    "insertText": "IterateDebugShapes(TFunction<void(const FTimelineDebugShapes&) > Callback)"
  },
  {
    "label": "MatchCategoryFilters()",
    "kind": "Method",
    "detail": "Function (} ; bool)",
    "insertText": "MatchCategoryFilters(const FName& CategoryName, ELogVerbosity::Type Verbosity)"
  }
]