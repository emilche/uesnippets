[
  {
    "label": "FPaintArgs",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FPaintArgs"
  },
  {
    "label": "FSlateRect",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateRect"
  },
  {
    "label": "FSlateWindowElementList",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FSlateWindowElementList"
  },
  {
    "label": "FWidgetStyle",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FWidgetStyle"
  },
  {
    "label": "IPropertyTableCellPresenter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCellPresenter"
  },
  {
    "label": "SMenuAnchor",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SMenuAnchor"
  },
  {
    "label": "SWidget",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWidget"
  },
  {
    "label": "SWindow",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SWindow"
  },
  {
    "label": "UObject",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "UObject"
  },
  {
    "label": "FGeometry",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGeometry"
  },
  {
    "label": "FPointerEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPointerEvent"
  },
  {
    "label": "FPropertyChangedEvent",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FPropertyChangedEvent"
  },
  {
    "label": "FSlateBrush",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FSlateBrush"
  },
  {
    "label": "SPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "SPropertyTableCell"
  },
  {
    "label": "IPropertyTableCell",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "IPropertyTableCell"
  },
  {
    "label": "SLATE_BEGIN_ARGS()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" HAL / PlatformMath . h \" # include \" Input / Reply . h \" # include \" Templates / SharedPointer . h \" # include \" Types / SlateEnums . h \" # include \" UObject / NameTypes . h \" # include \" Widgets / DeclarativeSyntaxSupport . h \" # include \" Widgets / SCompoundWidget . h \" class FPaintArgs ; class FSlateRect ; class FSlateWindowElementList ; class FWidgetStyle ; class IPropertyTableCellPresenter ; class SMenuAnchor ; class SWidget ; class SWindow ; class UObject ; struct FGeometry ; struct FPointerEvent ; struct FPropertyChangedEvent ; struct FSlateBrush ; class SPropertyTableCell : public SCompoundWidget { public :)",
    "insertText": "SLATE_BEGIN_ARGS(SPropertyTableCell ) : _Presenter( NULL ) , _Style( TEXT(\"PropertyTable\"))"
  },
  {
    "label": "SLATE_ARGUMENT()",
    "kind": "Method",
    "detail": "Function (})",
    "insertText": "SLATE_ARGUMENT(TSharedPtr< IPropertyTableCellPresenter >, Presenter) SLATE_ARGUMENT( FName, Style ) SLATE_END_ARGS() SPropertyTableCell() : DropDownAnchor( NULL ) , Presenter( NULL ) , Cell( NULL ) , bEnterEditingMode( false ) , Style()"
  },
  {
    "label": "Construct()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Construct(const FArguments& InArgs, const TSharedRef< class IPropertyTableCell >& InCell)"
  },
  {
    "label": "OnMouseButtonDown()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDown(const FGeometry& MyGeometry, const FPointerEvent& MouseEvent)"
  },
  {
    "label": "OnMouseButtonDoubleClick()",
    "kind": "Method",
    "detail": "Function (FReply)",
    "insertText": "OnMouseButtonDoubleClick(const FGeometry& InMyGeometry, const FPointerEvent& InMouseEvent)"
  },
  {
    "label": "OnPaint()",
    "kind": "Method",
    "detail": "Function (int32)",
    "insertText": "OnPaint(const FPaintArgs& Args, const FGeometry& AllottedGeometry, const FSlateRect& MyCullingRect, FSlateWindowElementList& OutDrawElements, int32 LayerId, const FWidgetStyle& InWidgetStyle, bool bParentEnabled)"
  },
  {
    "label": "ConstructCellContents()",
    "kind": "Method",
    "detail": "Function (private : TSharedRef<SWidget>)",
    "insertText": "ConstructCellContents()"
  },
  {
    "label": "SetContent()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetContent(const TSharedRef< SWidget >& NewContents)"
  },
  {
    "label": "ConstructEditModeCellWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidget>)",
    "insertText": "ConstructEditModeCellWidget()"
  },
  {
    "label": "ConstructEditModeDropDownWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidget>)",
    "insertText": "ConstructEditModeDropDownWidget()"
  },
  {
    "label": "ConstructInvalidPropertyWidget()",
    "kind": "Method",
    "detail": "Function (TSharedRef<class SWidget>)",
    "insertText": "ConstructInvalidPropertyWidget()"
  },
  {
    "label": "OnAnchorWindowClosed()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnAnchorWindowClosed(const TSharedRef< SWindow >& WindowClosing)"
  },
  {
    "label": "EnteredEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "EnteredEditMode()"
  },
  {
    "label": "ExitedEditMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "ExitedEditMode()"
  },
  {
    "label": "OnCellValueChanged()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "OnCellValueChanged(UObject* Object, FPropertyChangedEvent& PropertyChangedEvent)"
  },
  {
    "label": "TriggerEnterEditingMode()",
    "kind": "Method",
    "detail": "Function (EActiveTimerReturnType)",
    "insertText": "TriggerEnterEditingMode(double InCurrentTime, float InDeltaTime)"
  }
]