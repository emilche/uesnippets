[
  {
    "label": "FConstraintBaseParams",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConstraintBaseParams"
  },
  {
    "label": "FLinearConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FLinearConstraint"
  },
  {
    "label": "ELinearConstraintMotion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "ELinearConstraintMotion"
  },
  {
    "label": "FConeConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FConeConstraint"
  },
  {
    "label": "EAngularConstraintMotion",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "EAngularConstraintMotion"
  },
  {
    "label": "FTwistConstraint",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FTwistConstraint"
  },
  {
    "label": "USTRUCT()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" CoreMinimal . h \" # include \" UObject / ObjectMacros . h \" # include \" Engine / EngineTypes . h \" # include \" EngineDefines . h \" # include \" Physics / PhysicsInterfaceDeclares . h \" # include \" Chaos / ChaosEngineInterface . h \" # include \" ConstraintTypes . generated . h \")",
    "insertText": "USTRUCT()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, AdvancedDisplay, Category = Constraint, meta = (editcondition = \"bSoftConstraint\", ClampMin = \"0.0\"))"
  },
  {
    "label": "FConstraintBaseParams()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConstraintBaseParams()"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = Linear, meta = (ClampMin = \"0.0\"))"
  },
  {
    "label": "FLinearConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FLinearConstraint()"
  },
  {
    "label": "UpdateLinearLimit_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateLinearLimit_AssumesLocked(const FPhysicsConstraintHandle& InConstraintRef, float AverageMass, float Scale)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = Angular, meta = (ClampMin = \"0.0\", ClampMax = \"180.0\", DisplayName = \"Swing 1 Limit\"))"
  },
  {
    "label": "FConeConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FConeConstraint()"
  },
  {
    "label": "UpdateConeLimit_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateConeLimit_AssumesLocked(const FPhysicsConstraintHandle& InConstraintRef, float AverageMass)"
  },
  {
    "label": "GENERATED_BODY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GENERATED_BODY() UPROPERTY(EditAnywhere, Category = Angular, meta = (ClampMin = \"0.0\", ClampMax = \"180.0\", DisplayName = \"Twist Limit\"))"
  },
  {
    "label": "FTwistConstraint()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "FTwistConstraint()"
  },
  {
    "label": "UpdateTwistLimit_AssumesLocked()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "UpdateTwistLimit_AssumesLocked(const FPhysicsConstraintHandle& InConstraintRef, float AverageMass)"
  }
]