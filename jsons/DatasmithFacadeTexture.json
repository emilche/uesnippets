[
  {
    "label": "DATASMITHFACADE_API",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "DATASMITHFACADE_API"
  },
  {
    "label": "class",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "class"
  },
  {
    "label": "FDatasmithFacadeTexture()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" DatasmithFacadeElement . h \" class FDatasmithFacadeTexture : public FDatasmithFacadeElement { public : enum class ETextureMode : uint8 { Diffuse,Specular,Normal,NormalGreenInv,Displace,Other,Bump } ; enum class ETextureFilter { Nearest,Bilinear,Trilinear,Default } ; enum class ETextureAddress { Wrap,Clamp,Mirror } ; enum class ETextureFormat { PNG,JPEG } ; enum class EColorSpace { Default,sRGB,Linear,} ; public :)",
    "insertText": "FDatasmithFacadeTexture(const TCHAR* InElementName)"
  },
  {
    "label": "FDatasmithFacadeTexture()",
    "kind": "Method",
    "detail": "Function (~)",
    "insertText": "FDatasmithFacadeTexture()"
  },
  {
    "label": "GetFile()",
    "kind": "Method",
    "detail": "Function (} const TCHAR*)",
    "insertText": "GetFile()"
  },
  {
    "label": "SetFile()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFile(const TCHAR* File)"
  },
  {
    "label": "SetData()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetData(const uint8* InData, uint32 InDataSize, ETextureFormat InFormat)"
  },
  {
    "label": "GetData()",
    "kind": "Method",
    "detail": "Function (const uint8*)",
    "insertText": "GetData(uint32& OutDataSize, ETextureFormat& OutFormat)"
  },
  {
    "label": "GetFileHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "GetFileHash(TCHAR OutBuffer[33], size_t BufferSize)"
  },
  {
    "label": "SetFileHash()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetFileHash(const TCHAR* Hash)"
  },
  {
    "label": "GetTextureMode()",
    "kind": "Method",
    "detail": "Function (ETextureMode)",
    "insertText": "GetTextureMode()"
  },
  {
    "label": "SetTextureMode()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureMode(ETextureMode Mode)"
  },
  {
    "label": "GetTextureFilter()",
    "kind": "Method",
    "detail": "Function (ETextureFilter)",
    "insertText": "GetTextureFilter()"
  },
  {
    "label": "SetTextureFilter()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureFilter(ETextureFilter Filter)"
  },
  {
    "label": "GetTextureAddressX()",
    "kind": "Method",
    "detail": "Function (ETextureAddress)",
    "insertText": "GetTextureAddressX()"
  },
  {
    "label": "SetTextureAddressX()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureAddressX(ETextureAddress Mode)"
  },
  {
    "label": "GetTextureAddressY()",
    "kind": "Method",
    "detail": "Function (ETextureAddress)",
    "insertText": "GetTextureAddressY()"
  },
  {
    "label": "SetTextureAddressY()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetTextureAddressY(ETextureAddress Mode)"
  },
  {
    "label": "GetAllowResize()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetAllowResize()"
  },
  {
    "label": "SetAllowResize()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetAllowResize(bool bAllowResize)"
  },
  {
    "label": "GetRGBCurve()",
    "kind": "Method",
    "detail": "Function (float)",
    "insertText": "GetRGBCurve()"
  },
  {
    "label": "SetRGBCurve()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetRGBCurve(const float InRGBCurve)"
  },
  {
    "label": "GetSRGB()",
    "kind": "Method",
    "detail": "Function (EColorSpace)",
    "insertText": "GetSRGB()"
  },
  {
    "label": "SetSRGB()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "SetSRGB(EColorSpace Option)"
  },
  {
    "label": "FDatasmithFacadeTexture()",
    "kind": "Method",
    "detail": "Function (# ifdef SWIG_FACADE protected : # endif)",
    "insertText": "FDatasmithFacadeTexture(TSharedRef<IDatasmithTextureElement> InTextureElement)"
  },
  {
    "label": "GetDatasmithTextureElement()",
    "kind": "Method",
    "detail": "Function (TSharedRef<IDatasmithTextureElement>)",
    "insertText": "GetDatasmithTextureElement()"
  }
]