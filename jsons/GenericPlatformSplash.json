[
  {
    "label": "Type",
    "kind": "Enum",
    "detail": "enum declaration",
    "insertText": "Type"
  },
  {
    "label": "FString",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "FString"
  },
  {
    "label": "FGenericPlatformSplash",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "FGenericPlatformSplash"
  },
  {
    "label": "Show()",
    "kind": "Method",
    "detail": "Function (# pragma once # include \" Containers / ContainersFwd . h \" # include \" CoreTypes . h \" namespace SplashTextType { enum Type { StartupProgress = 0,VersionInfo1,CopyrightInfo,GameName,NumTextTypes } ; } class FString ; struct FGenericPlatformSplash { void)",
    "insertText": "Show()"
  },
  {
    "label": "Hide()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "Hide()"
  },
  {
    "label": "SetCustomSplashImage()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetCustomSplashImage(const TCHAR* SplashFilename)"
  },
  {
    "label": "SetSplashText()",
    "kind": "Method",
    "detail": "Function (} void)",
    "insertText": "SetSplashText(const SplashTextType::Type InType, const TCHAR* InText)"
  },
  {
    "label": "IsShown()",
    "kind": "Method",
    "detail": "Function (} bool)",
    "insertText": "IsShown()"
  },
  {
    "label": "GetSplashPath()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "GetSplashPath(const TCHAR* SplashFilename, const TCHAR* IconFilename, FString& OutPath, FString& OutIconPath, bool& OutIsCustom)"
  }
]