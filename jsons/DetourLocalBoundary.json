[
  {
    "label": "dtNavMeshQuery",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtNavMeshQuery"
  },
  {
    "label": "dtQueryFilter",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtQueryFilter"
  },
  {
    "label": "dtSharedBoundary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtSharedBoundary"
  },
  {
    "label": "dtLocalBoundary",
    "kind": "Type",
    "detail": "class declaration",
    "insertText": "dtLocalBoundary"
  },
  {
    "label": "Segment",
    "kind": "Type",
    "detail": "struct declaration",
    "insertText": "Segment"
  },
  {
    "label": "addSegment()",
    "kind": "Method",
    "detail": "Function (# ifndef DETOURLOCALBOUNDARY_H # define DETOURLOCALBOUNDARY_H # include \" CoreMinimal . h \" # include \" Detour / DetourLargeWorldCoordinates . h \" # include \" Detour / DetourNavMesh . h \" class dtNavMeshQuery ; class dtQueryFilter ; class dtSharedBoundary ; class dtLocalBoundary { const int MAX_LOCAL_SEGS = 8 ; const int MAX_LOCAL_POLYS = 1 6 ; struct Segment { dtReal s [ 6 ] ; dtReal d ; int flags ; } ; dtPolyRef m_polys [ MAX_LOCAL_POLYS ] ; dtReal m_center [ 3 ] ; Segment m_segs [ MAX_LOCAL_SEGS ] ; int m_nsegs ; int m_npolys ; void)",
    "insertText": "addSegment(const dtReal dist, const dtReal* seg, int flags = 0)"
  },
  {
    "label": "dtLocalBoundary()",
    "kind": "Method",
    "detail": "Function (public :)",
    "insertText": "dtLocalBoundary()"
  },
  {
    "label": "reset()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "reset()"
  },
  {
    "label": "update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "update(dtPolyRef ref, const dtReal* pos, const dtReal collisionQueryRange, const bool bIgnoreAtEnd, const dtReal* endPos, const dtPolyRef* path, const int npath, const dtReal* moveDir, dtNavMeshQuery* navquery, const dtQueryFilter* filter)"
  },
  {
    "label": "update()",
    "kind": "Method",
    "detail": "Function (void)",
    "insertText": "update(const dtSharedBoundary* sharedData, const int sharedIdx, const dtReal* pos, const dtReal collisionQueryRange, const bool bIgnoreAtEnd, const dtReal* endPos, const dtPolyRef* path, const int npath, const dtReal* moveDir, dtNavMeshQuery* navquery, const dtQueryFilter* filter)"
  },
  {
    "label": "isValid()",
    "kind": "Method",
    "detail": "Function (bool)",
    "insertText": "isValid(dtNavMeshQuery* navquery, const dtQueryFilter* filter)"
  },
  {
    "label": "getCenter()",
    "kind": "Method",
    "detail": "Function (const dtReal*)",
    "insertText": "getCenter()"
  }
]